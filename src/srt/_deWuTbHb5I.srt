1
00:00:00,760 --> 00:00:11,440

[Music]

2
00:00:11,450 --> 00:00:16,080
cool thanks guys you can hear me okay

3
00:00:16,080 --> 00:00:19,380
all right yeah so good morning I'm

4
00:00:19,380 --> 00:00:22,740
really excited to be speaking at Jay s

5
00:00:22,740 --> 00:00:26,010
conf I've never really spoken at a

6
00:00:26,010 --> 00:00:28,460
conference before or at least one with

7
00:00:28,460 --> 00:00:36,239
thanks so yeah and it's really exciting

8
00:00:36,239 --> 00:00:39,390
because in 2015

9
00:00:39,390 --> 00:00:42,239
Patricia Garcia gave a talk here in

10
00:00:42,239 --> 00:00:43,410
Berlin at Jay s conf

11
00:00:43,410 --> 00:00:46,590
on an offline first data and I wasn't

12
00:00:46,590 --> 00:00:48,450
there for it but I saw it a year or two

13
00:00:48,450 --> 00:00:52,170
later on YouTube and kind of figured out

14
00:00:52,170 --> 00:00:54,600
where her LinkedIn profile was there was

15
00:00:54,600 --> 00:00:57,210
no job so I found her github profile and

16
00:00:57,210 --> 00:01:01,170
I found a link to a repo at Justin's

17
00:01:01,170 --> 00:01:04,739
organization which is field intelligence

18
00:01:04,739 --> 00:01:08,460
where I work now so I emailed Justin in

19
00:01:08,460 --> 00:01:10,260
two weeks later I was on a plane to

20
00:01:10,260 --> 00:01:12,630
Nigeria and now Patricia and I are

21
00:01:12,630 --> 00:01:16,009
colleagues and I'm speaking here about

22
00:01:16,009 --> 00:01:20,970
offline first stuff so the work we do is

23
00:01:20,970 --> 00:01:23,790
in trying to deliver health care

24
00:01:23,790 --> 00:01:26,670
commodities where it's a bit tougher to

25
00:01:26,670 --> 00:01:30,619
deliver them expanding access with

26
00:01:30,619 --> 00:01:32,939
partnering with federal governments and

27
00:01:32,939 --> 00:01:37,710
with down to small pharmacy traders and

28
00:01:37,710 --> 00:01:40,950
doing that with software supply chain

29
00:01:40,950 --> 00:01:44,670
software so we were headquartered in

30
00:01:44,670 --> 00:01:48,060
Abuja where we work it's in the middle

31
00:01:48,060 --> 00:01:51,899
of the that just below the red part in

32
00:01:51,899 --> 00:01:56,299
Nigeria and this map is population and

33
00:01:56,299 --> 00:01:58,770
kind of one of the reasons why Nigeria

34
00:01:58,770 --> 00:02:00,840
is because it's huge and it's growing

35
00:02:00,840 --> 00:02:03,719
like crazy it has a massive market and

36
00:02:03,719 --> 00:02:06,719
it's like about one-sixth of the

37
00:02:06,719 --> 00:02:10,800
continent like 200 million people we're

38
00:02:10,800 --> 00:02:13,800
a small team of software developers

39
00:02:13,800 --> 00:02:15,450
for Asians people we have an office

40
00:02:15,450 --> 00:02:17,640
there a small one here in Berlin and

41
00:02:17,640 --> 00:02:20,910
then a couple operations offices in

42
00:02:20,910 --> 00:02:25,380
Lagos and in Nairobi so three years ago

43
00:02:25,380 --> 00:02:27,360
four years ago when the company started

44
00:02:27,360 --> 00:02:29,250
you kind of asked the question okay what

45
00:02:29,250 --> 00:02:32,970
tech stack are we gonna use for pharmacy

46
00:02:32,970 --> 00:02:36,570
supply chain management you can buy one

47
00:02:36,570 --> 00:02:38,520
you can use one that's already built

48
00:02:38,520 --> 00:02:41,340
there's a lot of them you can customize

49
00:02:41,340 --> 00:02:45,420
on top of a development platform like an

50
00:02:45,420 --> 00:02:48,570
Oracle or in s AP a lot of warehouses

51
00:02:48,570 --> 00:02:51,900
and places and G RIA do this

52
00:02:51,900 --> 00:02:53,730
or you do what a lot of large companies

53
00:02:53,730 --> 00:02:55,320
do a lot of large tech companies in

54
00:02:55,320 --> 00:02:58,620
Fortune 500 companies where they just

55
00:02:58,620 --> 00:03:00,810
build their own and if you're gonna do

56
00:03:00,810 --> 00:03:04,920
that and it's 2015 2016 you're probably

57
00:03:04,920 --> 00:03:07,500
gonna choose like a very boring but

58
00:03:07,500 --> 00:03:09,680
sensible stack maybe something like

59
00:03:09,680 --> 00:03:13,500
c-sharp net or Django with Python or

60
00:03:13,500 --> 00:03:16,590
Ruby on Rails something with a Postgres

61
00:03:16,590 --> 00:03:18,810
or some sort of sequel relational

62
00:03:18,810 --> 00:03:21,900
backend which works really nice with

63
00:03:21,900 --> 00:03:25,110
enterprise resource planning you get a

64
00:03:25,110 --> 00:03:27,630
lot of stuff out of the box a lot of

65
00:03:27,630 --> 00:03:30,750
tools that can really help you but for

66
00:03:30,750 --> 00:03:34,170
us our requirements were a lot different

67
00:03:34,170 --> 00:03:38,580
than that and the contrast that I kind

68
00:03:38,580 --> 00:03:40,410
of like to invent people will talk about

69
00:03:40,410 --> 00:03:42,000
these cities in different ways but I

70
00:03:42,000 --> 00:03:44,850
like to think of Abuja and Lagos as the

71
00:03:44,850 --> 00:03:47,850
two places we need to operate and Lagos

72
00:03:47,850 --> 00:03:49,680
for people who have been there is a mega

73
00:03:49,680 --> 00:03:51,989
city it's like a country it's it's 20

74
00:03:51,989 --> 00:03:55,800
million people it has tons of growth

75
00:03:55,800 --> 00:03:58,920
tons of money tons of opportunities and

76
00:03:58,920 --> 00:04:02,040
then it also has networks that sometimes

77
00:04:02,040 --> 00:04:03,660
work and sometimes don't work you're a

78
00:04:03,660 --> 00:04:06,300
small pharmacy you connect to the

79
00:04:06,300 --> 00:04:09,330
internet on a cell tower there's tons of

80
00:04:09,330 --> 00:04:10,980
cell towers you see them everywhere but

81
00:04:10,980 --> 00:04:13,019
then there's a traffic jam right outside

82
00:04:13,019 --> 00:04:16,019
of your business and suddenly 10,000

83
00:04:16,019 --> 00:04:17,820
people are trying to use the same cell

84
00:04:17,820 --> 00:04:20,820
tower and you don't have network but you

85
00:04:20,820 --> 00:04:24,120
need to keep working and then Abuja is a

86
00:04:24,120 --> 00:04:25,870
planned administrator

87
00:04:25,870 --> 00:04:29,080
city of just like a million people and I

88
00:04:29,080 --> 00:04:30,910
always have internet there people don't

89
00:04:30,910 --> 00:04:33,760
carry cash they pay with bank cards our

90
00:04:33,760 --> 00:04:36,520
partners at the federal government have

91
00:04:36,520 --> 00:04:39,669
this giant command center room that has

92
00:04:39,669 --> 00:04:42,400
network it has HD TVs it has a rotating

93
00:04:42,400 --> 00:04:44,530
web camera that follows you as you talk

94
00:04:44,530 --> 00:04:46,300
and they need to see what's going on in

95
00:04:46,300 --> 00:04:48,800
the whole country

96
00:04:48,810 --> 00:04:51,790
so we want to make something that's

97
00:04:51,790 --> 00:04:54,250
better than just a traditional boring

98
00:04:54,250 --> 00:04:56,260
web application we need something that

99
00:04:56,260 --> 00:04:59,949
can work in both of these places and so

100
00:04:59,949 --> 00:05:01,000
that means doing something that's

101
00:05:01,000 --> 00:05:04,410
offline capable and offline is not

102
00:05:04,410 --> 00:05:07,810
binary it's not a it's an offline

103
00:05:07,810 --> 00:05:09,760
capable app or it's or it's an online

104
00:05:09,760 --> 00:05:12,610
app you have well it looks crazy on the

105
00:05:12,610 --> 00:05:14,590
screen you have like a lot of different

106
00:05:14,590 --> 00:05:17,260
options the first one is what we call

107
00:05:17,260 --> 00:05:19,510
small offline these are names we made up

108
00:05:19,510 --> 00:05:22,330
for these categories and it's kind of

109
00:05:22,330 --> 00:05:24,280
like a marketing gimmick that a lot of

110
00:05:24,280 --> 00:05:27,160
web-based apps use where they say we're

111
00:05:27,160 --> 00:05:29,680
offline capable and people who aren't

112
00:05:29,680 --> 00:05:31,150
software developers don't know what that

113
00:05:31,150 --> 00:05:32,950
means but like we know what this means

114
00:05:32,950 --> 00:05:34,539
it's like kind of like you're working on

115
00:05:34,539 --> 00:05:36,280
an issue ticket and github and you lose

116
00:05:36,280 --> 00:05:38,320
the network connectivity you can like

117
00:05:38,320 --> 00:05:41,560
keep typing you know the data will stay

118
00:05:41,560 --> 00:05:41,919
there

119
00:05:41,919 --> 00:05:44,110
maybe it's thrown into local storage but

120
00:05:44,110 --> 00:05:45,669
you don't want to like refresh you don't

121
00:05:45,669 --> 00:05:47,320
want to click around so we couldn't use

122
00:05:47,320 --> 00:05:49,830
this model it's not going to work for us

123
00:05:49,830 --> 00:05:52,300
medium offline which is our word for

124
00:05:52,300 --> 00:05:55,240
like just using a native app like a

125
00:05:55,240 --> 00:05:58,539
iPhone app an Android app or writing for

126
00:05:58,539 --> 00:06:02,169
a plot like Windows or Mac OS is a lot

127
00:06:02,169 --> 00:06:04,440
more attractive and I've done work on

128
00:06:04,440 --> 00:06:07,000
apps like that before for pharmacy

129
00:06:07,000 --> 00:06:07,720
supply chain

130
00:06:07,720 --> 00:06:10,150
our company has as well and it's not

131
00:06:10,150 --> 00:06:11,590
something that we're necessarily going

132
00:06:11,590 --> 00:06:13,750
to rule out in the future but it is

133
00:06:13,750 --> 00:06:17,110
still very manual there's question marks

134
00:06:17,110 --> 00:06:19,389
for how offline it is because it totally

135
00:06:19,389 --> 00:06:21,370
depends on you as the developer what

136
00:06:21,370 --> 00:06:22,599
kind of database are you working with

137
00:06:22,599 --> 00:06:24,820
what rules are you setting up and how

138
00:06:24,820 --> 00:06:26,710
are you syncing with remote so like the

139
00:06:26,710 --> 00:06:29,050
example is like you pay to have offline

140
00:06:29,050 --> 00:06:31,960
features in consumer apps like like

141
00:06:31,960 --> 00:06:34,690
Spotify and like duolingo that give you

142
00:06:34,690 --> 00:06:37,930
offline features that duolingo seems to

143
00:06:37,930 --> 00:06:39,520
work really well but like Spotify

144
00:06:39,520 --> 00:06:40,960
seems like every time I get on a plane

145
00:06:40,960 --> 00:06:44,080
it forgets what I said to download

146
00:06:44,080 --> 00:06:48,940
offline big offline is really important

147
00:06:48,940 --> 00:06:50,710
to think about because this is how

148
00:06:50,710 --> 00:06:53,979
hospital IT systems work most of them

149
00:06:53,979 --> 00:06:56,440
historically this is changing but what

150
00:06:56,440 --> 00:06:57,970
you've had over the past couple decades

151
00:06:57,970 --> 00:07:03,069
is excuse me like a very large on-site

152
00:07:03,069 --> 00:07:05,050
deployment of servers even a server

153
00:07:05,050 --> 00:07:06,580
warehouse

154
00:07:06,580 --> 00:07:08,740
you have IT staff you have a local area

155
00:07:08,740 --> 00:07:12,280
network and it's because clinicians need

156
00:07:12,280 --> 00:07:14,050
their software to work offline it's not

157
00:07:14,050 --> 00:07:16,870
like offline is new to tech companies in

158
00:07:16,870 --> 00:07:21,430
this industry but as I said like that's

159
00:07:21,430 --> 00:07:22,870
not going to work for us we can't put a

160
00:07:22,870 --> 00:07:26,380
server in like right now we're working

161
00:07:26,380 --> 00:07:29,919
with about 30,000 pharmacies and there's

162
00:07:29,919 --> 00:07:34,090
hundreds of thousands to plan for so we

163
00:07:34,090 --> 00:07:37,060
went with the web with offline first in

164
00:07:37,060 --> 00:07:39,490
the web that gets us kind of the things

165
00:07:39,490 --> 00:07:41,860
we want low IT support you can do the

166
00:07:41,860 --> 00:07:44,080
whole thing offline but it's still the

167
00:07:44,080 --> 00:07:47,560
internet it's still sinking and there's

168
00:07:47,560 --> 00:07:50,320
a lot of talks on which distributed

169
00:07:50,320 --> 00:07:53,919
database to use like the basic setup for

170
00:07:53,919 --> 00:07:57,280
an offline app web app is you put a

171
00:07:57,280 --> 00:07:59,590
service worker in you tell it to cache

172
00:07:59,590 --> 00:08:02,469
the static application and then you work

173
00:08:02,469 --> 00:08:04,509
with local storage in the browser which

174
00:08:04,509 --> 00:08:06,039
has become a lot more attractive over

175
00:08:06,039 --> 00:08:08,259
the last several years you get to use a

176
00:08:08,259 --> 00:08:11,020
lot of the users available disk space a

177
00:08:11,020 --> 00:08:13,630
percentage of it but how do you work

178
00:08:13,630 --> 00:08:17,080
with the in browser database and what do

179
00:08:17,080 --> 00:08:20,650
you replicate with and couchdb and pouch

180
00:08:20,650 --> 00:08:23,009
TV which some people at this conference

181
00:08:23,009 --> 00:08:26,919
helps build are kind of like the tools

182
00:08:26,919 --> 00:08:28,750
that most people end up using we're

183
00:08:28,750 --> 00:08:32,380
really happy with the area that they

184
00:08:32,380 --> 00:08:34,779
cover for us if you know of some cool

185
00:08:34,779 --> 00:08:39,390
tool that somebody has or like this

186
00:08:39,390 --> 00:08:42,250
question that I often get is like oh why

187
00:08:42,250 --> 00:08:44,560
don't you just write your own super cool

188
00:08:44,560 --> 00:08:48,430
like replicating thing that that uses

189
00:08:48,430 --> 00:08:51,370
blockchain and Kafka and is

190
00:08:51,370 --> 00:08:54,160
Torsten and the thing is that like with

191
00:08:54,160 --> 00:08:56,320
these two our problem is never in the

192
00:08:56,320 --> 00:08:59,260
actual replication protocol whenever we

193
00:08:59,260 --> 00:09:00,370
don't have engineer's sitting around

194
00:09:00,370 --> 00:09:02,410
wasting time trying to figure out what

195
00:09:02,410 --> 00:09:04,180
steps went wrong if there's a little bit

196
00:09:04,180 --> 00:09:06,820
of network the document sink so these

197
00:09:06,820 --> 00:09:09,839
two have been really useful for that

198
00:09:09,839 --> 00:09:12,550
like somebody gave a talk a while ago

199
00:09:12,550 --> 00:09:14,020
where they said friends don't let

200
00:09:14,020 --> 00:09:15,960
friends build their own replication

201
00:09:15,960 --> 00:09:21,100
protocols Gregor said this and yeah all

202
00:09:21,100 --> 00:09:25,870
of our problems are elsewhere we have

203
00:09:25,870 --> 00:09:29,850
our stack we're sticking with it and

204
00:09:29,850 --> 00:09:32,220
like what could go wrong with this

205
00:09:32,220 --> 00:09:37,320
somewhat non-traditional application and

206
00:09:37,320 --> 00:09:39,670
for those of you who've maybe done work

207
00:09:39,670 --> 00:09:44,470
in like global public health you know

208
00:09:44,470 --> 00:09:46,570
that it's not actually this very well

209
00:09:46,570 --> 00:09:49,089
clearly administered highly educated

210
00:09:49,089 --> 00:09:51,310
system of people with clear incentives

211
00:09:51,310 --> 00:09:55,570
like it's constantly in a state of

212
00:09:55,570 --> 00:10:00,010
emergency the whatever the current

213
00:10:00,010 --> 00:10:02,080
situation is or or however the current

214
00:10:02,080 --> 00:10:04,360
administration's are working there's

215
00:10:04,360 --> 00:10:06,310
just this constant need to build things

216
00:10:06,310 --> 00:10:09,430
quickly and make things happen and very

217
00:10:09,430 --> 00:10:12,010
sort of unclear incentives it's not like

218
00:10:12,010 --> 00:10:13,900
a market economy that's just working off

219
00:10:13,900 --> 00:10:19,300
of a bottom line taller so we started

220
00:10:19,300 --> 00:10:21,370
hitting like a lot of problems right

221
00:10:21,370 --> 00:10:22,660
away even though all of us had had

222
00:10:22,660 --> 00:10:24,459
experience in building these kinds of

223
00:10:24,459 --> 00:10:27,160
applications we were building them at a

224
00:10:27,160 --> 00:10:30,550
very much bigger scale than what we've

225
00:10:30,550 --> 00:10:32,650
done before and the first problem you

226
00:10:32,650 --> 00:10:37,690
hit right away is what do you sync you

227
00:10:37,690 --> 00:10:39,760
have to segment the data somehow you

228
00:10:39,760 --> 00:10:41,740
can't I mean we did we started by just

229
00:10:41,740 --> 00:10:43,779
giving all of the data to every client

230
00:10:43,779 --> 00:10:45,610
we say like you get the whole database

231
00:10:45,610 --> 00:10:47,980
but then over time you need to start

232
00:10:47,980 --> 00:10:50,740
segmenting on something because if it's

233
00:10:50,740 --> 00:10:51,790
all gonna get stored in the users

234
00:10:51,790 --> 00:10:53,680
browser it doesn't matter how much space

235
00:10:53,680 --> 00:10:56,020
they have the data is growing linearly

236
00:10:56,020 --> 00:10:58,450
over time we're getting hundreds of

237
00:10:58,450 --> 00:11:00,970
thousands of documents of reports and

238
00:11:00,970 --> 00:11:02,950
shipments so you can't just tell the

239
00:11:02,950 --> 00:11:03,939
user take

240
00:11:03,939 --> 00:11:08,799
everything and the way you segment data

241
00:11:08,799 --> 00:11:12,159
using these databases using CouchDB is

242
00:11:12,159 --> 00:11:15,819
you set up a partition per a user you

243
00:11:15,819 --> 00:11:17,709
say this user is going to get these

244
00:11:17,709 --> 00:11:19,539
documents and the way you get it from

245
00:11:19,539 --> 00:11:21,399
the main database is you just sync them

246
00:11:21,399 --> 00:11:24,849
so your rules for setting this up are

247
00:11:24,849 --> 00:11:29,049
just entirely custom code your it's

248
00:11:29,049 --> 00:11:31,119
entirely up to you so you have to take

249
00:11:31,119 --> 00:11:33,519
into consideration all right what are

250
00:11:33,519 --> 00:11:36,579
our rules we need to you know somebody

251
00:11:36,579 --> 00:11:38,559
in Delta state should not be seeing the

252
00:11:38,559 --> 00:11:40,599
same data as somebody in Lego state

253
00:11:40,599 --> 00:11:45,069
ok cool geography next time time-based

254
00:11:45,069 --> 00:11:47,259
data becomes a really big issue because

255
00:11:47,259 --> 00:11:51,159
you need to sync some of it but not all

256
00:11:51,159 --> 00:11:54,009
of it but then this comes into like the

257
00:11:54,009 --> 00:11:57,909
domain model of what is okay to cut off

258
00:11:57,909 --> 00:12:02,199
because like to calculate how much stuff

259
00:12:02,199 --> 00:12:04,929
you have at a store or how much money

260
00:12:04,929 --> 00:12:06,669
you have in your bank account it's

261
00:12:06,669 --> 00:12:08,349
usually like what was the opening

262
00:12:08,349 --> 00:12:10,749
transaction and then let's add all of

263
00:12:10,749 --> 00:12:14,049
the debits and credits over time until I

264
00:12:14,049 --> 00:12:17,529
get the current balance but if I only

265
00:12:17,529 --> 00:12:20,349
sync your last ten transactions that's

266
00:12:20,349 --> 00:12:22,389
not gonna give you the right data to get

267
00:12:22,389 --> 00:12:25,809
the right and number so you look at what

268
00:12:25,809 --> 00:12:28,419
to sync as a developer and you have all

269
00:12:28,419 --> 00:12:30,069
of these different choices the other

270
00:12:30,069 --> 00:12:31,479
thing that I'm not going to spend a lot

271
00:12:31,479 --> 00:12:32,889
of time on is that with supply chain

272
00:12:32,889 --> 00:12:35,559
management you have really crazy access

273
00:12:35,559 --> 00:12:38,919
rules you have tons of dynamic lists of

274
00:12:38,919 --> 00:12:41,019
who's allowed to see which certain

275
00:12:41,019 --> 00:12:42,879
sponsored commodities at which certain

276
00:12:42,879 --> 00:12:47,379
locations two years ago at this month so

277
00:12:47,379 --> 00:12:50,799
there's not like a ton of yeah really

278
00:12:50,799 --> 00:12:56,889
clear ways to model your your data next

279
00:12:56,889 --> 00:12:59,079
is network storage and this is kind of

280
00:12:59,079 --> 00:13:02,769
exciting normally in an application you

281
00:13:02,769 --> 00:13:06,429
have a database that you're working with

282
00:13:06,429 --> 00:13:10,059
and so your code to access the the data

283
00:13:10,059 --> 00:13:13,149
is just in one place and you try and

284
00:13:13,149 --> 00:13:15,009
keep it extracted maybe someday you're

285
00:13:15,009 --> 00:13:16,089
going to reap lat form and you're going

286
00:13:16,089 --> 00:13:17,100
to choose a different database

287
00:13:17,100 --> 00:13:18,570
but typically you're working from one

288
00:13:18,570 --> 00:13:21,600
type of data store if we had gone the

289
00:13:21,600 --> 00:13:24,200
traditional like web framework

290
00:13:24,200 --> 00:13:30,420
application and with online offline you

291
00:13:30,420 --> 00:13:34,140
have data that can be coming from the

292
00:13:34,140 --> 00:13:37,260
index TV browser database through pouch

293
00:13:37,260 --> 00:13:39,360
you have data that could just be like in

294
00:13:39,360 --> 00:13:40,230
an in-memory

295
00:13:40,230 --> 00:13:44,610
excuse me cache you have requests from

296
00:13:44,610 --> 00:13:46,230
the browser to get remote data that you

297
00:13:46,230 --> 00:13:48,860
don't have locally and then you have

298
00:13:48,860 --> 00:13:51,330
back-end service functions that are also

299
00:13:51,330 --> 00:13:53,820
talking to the same database that need

300
00:13:53,820 --> 00:13:56,240
to do similar business logic so

301
00:13:56,240 --> 00:13:59,970
developers don't really have a framework

302
00:13:59,970 --> 00:14:02,550
for where we're busy we need to throw

303
00:14:02,550 --> 00:14:04,980
our code somewhere if this was rails I'd

304
00:14:04,980 --> 00:14:06,390
have an endpoint I'd have a new table

305
00:14:06,390 --> 00:14:08,430
and set up a new entity and I put the

306
00:14:08,430 --> 00:14:10,380
code under it and even if it's messy

307
00:14:10,380 --> 00:14:12,540
everybody in the organization is used to

308
00:14:12,540 --> 00:14:14,850
that pattern but for us it was just like

309
00:14:14,850 --> 00:14:17,280
just put it wherever you want like let's

310
00:14:17,280 --> 00:14:18,900
put it in the lambda let's put it in

311
00:14:18,900 --> 00:14:22,290
this back-end script let's put it you

312
00:14:22,290 --> 00:14:24,510
know in the front end and then over time

313
00:14:24,510 --> 00:14:26,310
you don't have like an isolated place

314
00:14:26,310 --> 00:14:27,750
because you're working with different

315
00:14:27,750 --> 00:14:32,580
network storage adapters the biggest one

316
00:14:32,580 --> 00:14:34,590
of the bigger problems that isn't just

317
00:14:34,590 --> 00:14:37,890
us on the front end doing web-based

318
00:14:37,890 --> 00:14:41,060
applications is is modeling JSON

319
00:14:41,060 --> 00:14:45,000
modeling sort of without a relational

320
00:14:45,000 --> 00:14:49,050
database and there isn't as far as we

321
00:14:49,050 --> 00:14:50,850
know so far like there isn't one clear

322
00:14:50,850 --> 00:14:53,730
way to do this that always wins there's

323
00:14:53,730 --> 00:14:55,740
a lot of different strategies to deal

324
00:14:55,740 --> 00:14:58,860
with the problems so normalization like

325
00:14:58,860 --> 00:15:03,030
you want this table and this table and

326
00:15:03,030 --> 00:15:05,160
this table to be neatly separated and

327
00:15:05,160 --> 00:15:07,020
you have foreign keys between between

328
00:15:07,020 --> 00:15:08,790
them like this is a database that's

329
00:15:08,790 --> 00:15:10,620
awesome that's what you want and so you

330
00:15:10,620 --> 00:15:12,150
you're a developer and you're like I'm

331
00:15:12,150 --> 00:15:13,740
going to do this in JSON so I'm going to

332
00:15:13,740 --> 00:15:15,150
create a document and a document and a

333
00:15:15,150 --> 00:15:17,430
document and a document and then to get

334
00:15:17,430 --> 00:15:20,430
this document and to join on them you're

335
00:15:20,430 --> 00:15:22,590
making HTTP requests over a network

336
00:15:22,590 --> 00:15:24,330
because you don't know what the relation

337
00:15:24,330 --> 00:15:27,690
is yet so so then you say oh okay that's

338
00:15:27,690 --> 00:15:29,550
too much I'm gonna put everything in the

339
00:15:29,550 --> 00:15:30,750
JSON document

340
00:15:30,750 --> 00:15:32,250
and then a user says hey we need to

341
00:15:32,250 --> 00:15:34,080
change the name of this item you say

342
00:15:34,080 --> 00:15:35,700
okay let me just do a bulk update on

343
00:15:35,700 --> 00:15:37,530
half a gig of data and hope that there

344
00:15:37,530 --> 00:15:39,930
aren't any conflicts so and it's not

345
00:15:39,930 --> 00:15:41,820
always clear what the right strategy is

346
00:15:41,820 --> 00:15:43,050
for this sometimes it helps to

347
00:15:43,050 --> 00:15:44,400
denormalize sometimes it helps to

348
00:15:44,400 --> 00:15:48,930
normalize and document conflicts

349
00:15:48,930 --> 00:15:51,060
Patricia Garcia's talk had some really

350
00:15:51,060 --> 00:15:53,670
cool in-depth details about strategies

351
00:15:53,670 --> 00:15:56,880
for using multiple documents to have two

352
00:15:56,880 --> 00:15:58,710
users working on the same entity at the

353
00:15:58,710 --> 00:16:03,900
same time without causing conflicts yeah

354
00:16:03,900 --> 00:16:08,060
and then the other one is like around

355
00:16:08,060 --> 00:16:10,980
what you sync to who so like kind of

356
00:16:10,980 --> 00:16:13,220
access stuff you might have a list of

357
00:16:13,220 --> 00:16:15,300
pharmacy commodities that you need to

358
00:16:15,300 --> 00:16:18,900
send to a supplier but it turns out

359
00:16:18,900 --> 00:16:21,150
there's two suppliers one for cold chain

360
00:16:21,150 --> 00:16:22,800
commodities one for non cold chain

361
00:16:22,800 --> 00:16:24,300
commodities so you need to split the

362
00:16:24,300 --> 00:16:26,730
document so it's it's like a business

363
00:16:26,730 --> 00:16:28,230
rule that impacts how you're modeling

364
00:16:28,230 --> 00:16:31,890
the JSON and when a user says hey I need

365
00:16:31,890 --> 00:16:34,890
to make a new type of database table you

366
00:16:34,890 --> 00:16:37,290
know couch people what do I do you say

367
00:16:37,290 --> 00:16:39,300
like it really depends on what you're

368
00:16:39,300 --> 00:16:42,660
doing so it makes having a single

369
00:16:42,660 --> 00:16:46,620
framework for everything difficult so

370
00:16:46,620 --> 00:16:50,250
deciding how to segment data and what to

371
00:16:50,250 --> 00:16:52,740
sync to users we created this thing we

372
00:16:52,740 --> 00:16:55,440
call an ID dispenser and it's just a

373
00:16:55,440 --> 00:16:58,110
remote endpoint that when a user starts

374
00:16:58,110 --> 00:17:01,290
may initialize the application we have

375
00:17:01,290 --> 00:17:03,660
the browser make a call to a lambda and

376
00:17:03,660 --> 00:17:06,720
the lambda takes the user who it is

377
00:17:06,720 --> 00:17:08,850
what their location is what programs

378
00:17:08,850 --> 00:17:10,589
they have access to and it goes and it

379
00:17:10,589 --> 00:17:12,180
talks to CouchDB in it says hey what

380
00:17:12,180 --> 00:17:14,850
what documents does this user need couch

381
00:17:14,850 --> 00:17:17,130
says ok based on your business logic its

382
00:17:17,130 --> 00:17:19,800
X Y & Z lambda says thanks sends it to

383
00:17:19,800 --> 00:17:21,689
the browser and then the user has a

384
00:17:21,689 --> 00:17:24,780
subset of the data that they get to use

385
00:17:24,780 --> 00:17:28,530
and as an aside like this is so far been

386
00:17:28,530 --> 00:17:31,440
working for us but if you're going to

387
00:17:31,440 --> 00:17:34,650
use like infinitely scalable serverless

388
00:17:34,650 --> 00:17:40,710
functions on behalf of clients remember

389
00:17:40,710 --> 00:17:42,679
that other resources of yours are not

390
00:17:42,679 --> 00:17:44,670
infinitely scalable

391
00:17:44,670 --> 00:17:50,690
you might DDoS your own database so yeah

392
00:17:50,690 --> 00:17:53,490
this is really exciting like what we

393
00:17:53,490 --> 00:17:55,740
started to do in our API is with this

394
00:17:55,740 --> 00:17:58,620
problem of sometimes your network

395
00:17:58,620 --> 00:18:00,030
storage adapter is a local database

396
00:18:00,030 --> 00:18:01,710
sometimes it's a remote database

397
00:18:01,710 --> 00:18:04,290
sometimes you're a node is having api's

398
00:18:04,290 --> 00:18:06,840
that have all of that to find in them

399
00:18:06,840 --> 00:18:10,020
per entity it's one API that we use in

400
00:18:10,020 --> 00:18:12,030
all of our different places in lambdas

401
00:18:12,030 --> 00:18:13,470
in the back end and on the front end in

402
00:18:13,470 --> 00:18:18,270
scripts and your API can know what kind

403
00:18:18,270 --> 00:18:21,360
of network storage adapter you're using

404
00:18:21,360 --> 00:18:26,970
so you have situations where you ask hey

405
00:18:26,970 --> 00:18:29,490
give me all of the reports and the API

406
00:18:29,490 --> 00:18:31,830
goes okay cool I'm looking in the

407
00:18:31,830 --> 00:18:34,830
database I have found three months worth

408
00:18:34,830 --> 00:18:37,800
of reports and that's what I know about

409
00:18:37,800 --> 00:18:40,740
that's offline and the user then says

410
00:18:40,740 --> 00:18:42,810
but I want to page back further than

411
00:18:42,810 --> 00:18:45,240
that this isn't fair that I should only

412
00:18:45,240 --> 00:18:47,820
see what's offline and the API at that

413
00:18:47,820 --> 00:18:49,650
point says I'm gonna switch network

414
00:18:49,650 --> 00:18:51,720
storage adapters and I'm gonna go fetch

415
00:18:51,720 --> 00:18:58,860
the remote Docs and give that to you and

416
00:18:58,860 --> 00:19:01,500
then a lot of this ties back into like

417
00:19:01,500 --> 00:19:04,860
how do you design this kind of

418
00:19:04,860 --> 00:19:09,320
application for the user you have to

419
00:19:09,320 --> 00:19:13,020
tell the user what's going on if they

420
00:19:13,020 --> 00:19:16,740
look for a report on their facility some

421
00:19:16,740 --> 00:19:18,540
facility of its remote maybe they don't

422
00:19:18,540 --> 00:19:20,460
submit reports that often and they want

423
00:19:20,460 --> 00:19:21,960
to know has this report then submitted

424
00:19:21,960 --> 00:19:24,780
and they're working offline the ID

425
00:19:24,780 --> 00:19:26,910
dispenser told them you should know

426
00:19:26,910 --> 00:19:28,620
about this range of documents you should

427
00:19:28,620 --> 00:19:30,900
have these offline so if you go and

428
00:19:30,900 --> 00:19:32,670
check and the documents not there

429
00:19:32,670 --> 00:19:35,190
display to the user this thing doesn't

430
00:19:35,190 --> 00:19:37,050
exist I don't care about what's on the

431
00:19:37,050 --> 00:19:39,450
remote I know that this document was

432
00:19:39,450 --> 00:19:41,010
just never submitted in the first place

433
00:19:41,010 --> 00:19:44,130
or that it's there then if you're going

434
00:19:44,130 --> 00:19:46,740
too far back to a segment of the data

435
00:19:46,740 --> 00:19:49,140
that we can't sync something that's much

436
00:19:49,140 --> 00:19:53,100
older we tell the user and we display in

437
00:19:53,100 --> 00:19:55,410
the UI like this has got to be an online

438
00:19:55,410 --> 00:19:57,240
resource this is something that you're

439
00:19:57,240 --> 00:19:58,530
not going to have offline

440
00:19:58,530 --> 00:19:59,880
so if you have network you make the

441
00:19:59,880 --> 00:20:02,760
remote call comes back says yep we don't

442
00:20:02,760 --> 00:20:04,560
know about that report or yep here's the

443
00:20:04,560 --> 00:20:06,690
report display it but if you're offline

444
00:20:06,690 --> 00:20:10,140
you have to display to the user hey like

445
00:20:10,140 --> 00:20:12,930
we don't know like we were offline we

446
00:20:12,930 --> 00:20:15,480
don't know if this report exists or if

447
00:20:15,480 --> 00:20:21,780
it doesn't exist so yeah the last thing

448
00:20:21,780 --> 00:20:26,040
is some pictures where this is like a

449
00:20:26,040 --> 00:20:30,260
remote clinic that has a pharmacy and

450
00:20:30,260 --> 00:20:32,820
you can see there's like a little bit of

451
00:20:32,820 --> 00:20:35,580
a VSAT which is for satellite internet

452
00:20:35,580 --> 00:20:40,890
and this clinic had pretty good internet

453
00:20:40,890 --> 00:20:44,730
at the time it was like 2014 and they

454
00:20:44,730 --> 00:20:48,270
had like 512 kilobits a second down and

455
00:20:48,270 --> 00:20:50,280
that was fine like they could have an

456
00:20:50,280 --> 00:20:52,050
application on site on a laptop and

457
00:20:52,050 --> 00:20:54,780
dispense point of care to patients so as

458
00:20:54,780 --> 00:20:57,300
patients would come up still for the

459
00:20:57,300 --> 00:20:59,040
supply chain not for the clinicians

460
00:20:59,040 --> 00:21:01,560
necessarily but you would track the

461
00:21:01,560 --> 00:21:05,440
movement of pharmaceuticals

462
00:21:05,450 --> 00:21:08,550
electronically and so when you're

463
00:21:08,550 --> 00:21:09,930
designing for this place you think well

464
00:21:09,930 --> 00:21:11,850
hey we can just use a network we'll just

465
00:21:11,850 --> 00:21:15,300
really make sure that that VSAT always

466
00:21:15,300 --> 00:21:17,340
works well we'll talk to the IT team

467
00:21:17,340 --> 00:21:20,010
will be really serious about it but

468
00:21:20,010 --> 00:21:23,130
that's not the case this VSAT would very

469
00:21:23,130 --> 00:21:25,890
frequently get slightly misaligned and

470
00:21:25,890 --> 00:21:28,710
the clinic would lose internet and

471
00:21:28,710 --> 00:21:32,820
what's really kind of the point of using

472
00:21:32,820 --> 00:21:34,410
this somewhat difficult and

473
00:21:34,410 --> 00:21:37,650
non-traditional application is that for

474
00:21:37,650 --> 00:21:41,220
that pharmacy like it didn't matter the

475
00:21:41,220 --> 00:21:43,230
application worked fine it continued to

476
00:21:43,230 --> 00:21:45,210
work they could create patients they

477
00:21:45,210 --> 00:21:47,190
could create dispenses they could look

478
00:21:47,190 --> 00:21:49,200
up their stock they could transfer stock

479
00:21:49,200 --> 00:21:53,910
internally and then oh I should show the

480
00:21:53,910 --> 00:21:56,370
pharmacy the pharmacy is like that one

481
00:21:56,370 --> 00:21:58,320
in the back they're all red and looked

482
00:21:58,320 --> 00:22:01,890
the same but the the cool part was that

483
00:22:01,890 --> 00:22:03,960
when a shipment would come once a month

484
00:22:03,960 --> 00:22:10,110
from the central warehouse what would

485
00:22:10,110 --> 00:22:11,700
you do you would have to manually enter

486
00:22:11,700 --> 00:22:12,299
that

487
00:22:12,299 --> 00:22:15,149
like you're using an offline system and

488
00:22:15,149 --> 00:22:17,909
then also worse is that you have

489
00:22:17,909 --> 00:22:19,799
hundreds and hundreds of transactions

490
00:22:19,799 --> 00:22:23,190
daily about really important commodities

491
00:22:23,190 --> 00:22:26,879
that the central team needs to plan and

492
00:22:26,879 --> 00:22:29,209
think about that's why they asked us

493
00:22:29,209 --> 00:22:32,190
programmers to build something so if

494
00:22:32,190 --> 00:22:34,320
you're not gonna send that data back

495
00:22:34,320 --> 00:22:36,779
home then it's like why are you you know

496
00:22:36,779 --> 00:22:38,099
why are you tracking it in the first

497
00:22:38,099 --> 00:22:40,049
place unless it's something later some

498
00:22:40,049 --> 00:22:41,609
analysis or something which is what a

499
00:22:41,609 --> 00:22:44,879
lot of systems end up being used for so

500
00:22:44,879 --> 00:22:46,079
the team would do is they would walk to

501
00:22:46,079 --> 00:22:48,119
this River and I like this photo because

502
00:22:48,119 --> 00:22:51,690
it looks really nice but this River was

503
00:22:51,690 --> 00:22:53,579
like really directly behind the pharmacy

504
00:22:53,579 --> 00:22:56,509
it's like just less than a kilometer and

505
00:22:56,509 --> 00:22:59,989
there's a cell tower over there now that

506
00:22:59,989 --> 00:23:02,639
when you're at the river and you have a

507
00:23:02,639 --> 00:23:05,279
cellphone and you're tethering to your

508
00:23:05,279 --> 00:23:08,639
laptop you have fine connectivity and

509
00:23:08,639 --> 00:23:10,499
they didn't really do this every day

510
00:23:10,499 --> 00:23:12,269
they didn't need to but they could just

511
00:23:12,269 --> 00:23:13,649
go over there whenever a shipment would

512
00:23:13,649 --> 00:23:15,359
come they would learn from the remote

513
00:23:15,359 --> 00:23:16,229
about the shipment

514
00:23:16,229 --> 00:23:17,729
it would update their inventory levels

515
00:23:17,729 --> 00:23:19,799
and then they would sink to the central

516
00:23:19,799 --> 00:23:21,959
server and the central team these are

517
00:23:21,959 --> 00:23:23,339
all the commodities we dispensed over

518
00:23:23,339 --> 00:23:24,779
the last couple of weeks and the central

519
00:23:24,779 --> 00:23:26,879
team could see oh hey cool they need

520
00:23:26,879 --> 00:23:29,399
more of this they're good on that and we

521
00:23:29,399 --> 00:23:31,709
can know what to do next

522
00:23:31,709 --> 00:23:34,709
even though they're VSAT is misaligned

523
00:23:34,709 --> 00:23:40,349
and the IT team is busy so yeah that's

524
00:23:40,349 --> 00:23:43,679
kind of like the it's really exciting

525
00:23:43,679 --> 00:23:45,839
work like we have to know a lot about

526
00:23:45,839 --> 00:23:50,190
JavaScript and we have to do new things

527
00:23:50,190 --> 00:23:52,739
and try and talk our own team and our

528
00:23:52,739 --> 00:23:55,859
own self into trying to use patterns and

529
00:23:55,859 --> 00:23:58,079
put code in the right place so it can

530
00:23:58,079 --> 00:24:01,279
feel really frustrating and at times we

531
00:24:01,279 --> 00:24:04,259
many times we will kind of look at each

532
00:24:04,259 --> 00:24:05,940
other and be like what are we even doing

533
00:24:05,940 --> 00:24:08,219
like what why don't we just make a rails

534
00:24:08,219 --> 00:24:11,429
app or a django app like this is so hard

535
00:24:11,429 --> 00:24:13,979
but like ultimately it means an

536
00:24:13,979 --> 00:24:16,829
application that is more like robust

537
00:24:16,829 --> 00:24:19,589
like it can get us more data and it can

538
00:24:19,589 --> 00:24:21,929
work in the places we want to work in so

539
00:24:21,929 --> 00:24:24,269
even though like a year or two ago it

540
00:24:24,269 --> 00:24:26,040
was looking pretty scary

541
00:24:26,040 --> 00:24:29,360
there's been a lot of learnings from us

542
00:24:29,360 --> 00:24:34,580
about stuff we've done wrong that have

543
00:24:34,580 --> 00:24:37,590
made it possible to kind of safely start

544
00:24:37,590 --> 00:24:40,290
delivering this type of application at a

545
00:24:40,290 --> 00:24:43,890
pretty large scale so I'm out of time

546
00:24:43,890 --> 00:24:46,350
but thanks very much guys for your time

547
00:24:46,350 --> 00:24:48,700
and it's happy to talk to you today

548
00:24:48,700 --> 00:24:50,200
[Applause]

