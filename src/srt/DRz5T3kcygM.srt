1
00:00:00,620 --> 00:00:25,520
hello, everyone, yes, I'm going to talk about
real‑time in the browser, XMPP I'll try

2
00:00:25,520 --> 00:00:30,990
to keep it quite light, if you feel like me,
you're a bit frazzled and tired.

3
00:00:30,990 --> 00:00:32,380
Okay, so ...

4
00:00:32,380 --> 00:00:40,649
XMPP it's the externsble messaging and presence
protocol.

5
00:00:40,649 --> 00:00:43,649
And this was developed back in 1998.

6
00:00:43,649 --> 00:00:52,960
A time when people had lots and lots of different
IM clients you had AOL messenger, yahoo messenger,

7
00:00:52,960 --> 00:01:00,269
ICQ and you would here Eh‑oo every couple
of minutes.

8
00:01:00,269 --> 00:01:06,160
It was a bit of rubbish situation, some friends
on one, another set on another one, you'd

9
00:01:06,160 --> 00:01:13,270
either have to run them all or ignore some
friends\h‑‑ it was a bit of a crap situation.

10
00:01:13,270 --> 00:01:18,620
So, some guys got together and they thought
what we'll do and we'll build a system where

11
00:01:18,620 --> 00:01:23,800
you can have lots and lots of different servers
but they'll all be able to talk to each other.

12
00:01:23,800 --> 00:01:31,030
It was originally built as an application
called Jabba, but since it's changed to XMPP

13
00:01:31,030 --> 00:01:33,570
when it became part of the ITF.

14
00:01:33,570 --> 00:01:40,460
And it's not a single server or single piece
of code, it's a set of standards, so anyone

15
00:01:40,460 --> 00:01:44,540
can implement it, you can have proprietary
servers, Open Source servers, and there's

16
00:01:44,540 --> 00:01:47,160
lots and lots out there.

17
00:01:47,160 --> 00:01:52,670
The big advantage of it is it's forked rated
all the servers can talk to each other without

18
00:01:52,670 --> 00:01:54,150
any extra coding.

19
00:01:54,150 --> 00:02:02,310
(Fedder rated) who here uses the XMPP? Okay.

20
00:02:02,310 --> 00:02:03,950
Keep your hands up.

21
00:02:03,950 --> 00:02:04,950
That's not right.

22
00:02:04,950 --> 00:02:05,950
Okay.

23
00:02:05,950 --> 00:02:11,810
So, who of you here uses WhatsApp, yeah, that's
a few more.

24
00:02:11,810 --> 00:02:17,799
It's basically a hacked version of XMPP they
just used some of the bad bits and not some

25
00:02:17,799 --> 00:02:20,280
of the good bits.

26
00:02:20,280 --> 00:02:25,530
Who here uses Facebook chat? Yeah, okay.

27
00:02:25,530 --> 00:02:29,870
Who here uses Hip chat, okay,cool, so you're
all using XMPP.

28
00:02:29,870 --> 00:02:33,060
I think maybe two or three people that didn't
put their hand up.

29
00:02:33,060 --> 00:02:41,829
So who here has a smartphone? Yes, see you
all use XMPP, you just don't know about it.

30
00:02:41,829 --> 00:02:48,969
It's widely use in the areas of finance, government,
a lot of messaging systems, companies that

31
00:02:48,969 --> 00:02:51,049
do building management use it a lot.

32
00:02:51,049 --> 00:02:58,409
My point is it's often not advertised that
it's being used.

33
00:02:58,409 --> 00:03:02,999
Why do I think XMPP is important? Well, we're
seeing the continuing growth of real‑time

34
00:03:02,999 --> 00:03:10,480
on the web, you see people bringing up new
real‑time systems quite often and you watch

35
00:03:10,480 --> 00:03:16,219
how it goes and they just keep making the
same mistakes that were solved in XMPP about

36
00:03:16,219 --> 00:03:21,209
twelve to fourteen years ago, you see them
try to add things like it would be cool if

37
00:03:21,209 --> 00:03:24,370
you could run it on multiple servers the and
talk to each other and they do this hacky

38
00:03:24,370 --> 00:03:30,639
piece of crap, these are problems already
solved with XMPP.

39
00:03:30,639 --> 00:03:36,540
People shouldn't keep making the same mistakes,
the other area where it's quite interesting

40
00:03:36,540 --> 00:03:43,439
as well is with the rise of webRTC, peer to
peer sessions all greet, but there's no signal

41
00:03:43,439 --> 00:03:50,620
in webRTC, how did you find each other? The
way it's done currently people use meet me

42
00:03:50,620 --> 00:03:57,879
URLs, you is to agree to some terms on a website,
maybe tracked, maybe this system doesn't have

43
00:03:57,879 --> 00:04:02,430
all the features you want, this one does,
and your friends don't like that one, why

44
00:04:02,430 --> 00:04:09,159
do that when you can both log into an account
and share the details directly? And there's

45
00:04:09,159 --> 00:04:17,889
also movement back towards this sort of decentralized
web so the Snowden revelation, big targets

46
00:04:17,889 --> 00:04:24,979
like Google, Apple Facebook, it's easy for
people to request information.

47
00:04:24,979 --> 00:04:30,330
If we're running smaller servers and smaller
groups, actually to get information about

48
00:04:30,330 --> 00:04:35,090
what you're up to is a lot more difficult.

49
00:04:35,090 --> 00:04:40,530
And then the last point is, if you also use
XMPP you don't just get some chat messaging

50
00:04:40,530 --> 00:04:45,840
stuff, you get things like presence, which
I'm available right now, I'm away, I'm busy,

51
00:04:45,840 --> 00:04:51,699
you get address books, pubsub, you get peer
to peer session seat up, you get tons and

52
00:04:51,699 --> 00:04:56,080
tons of stuff for free without any extra work.

53
00:04:56,080 --> 00:05:02,030
Lets quickly go through some of the fundamentals
of XMPP.

54
00:05:02,030 --> 00:05:15,130
Stanzas, they're just chunks of XML, there's
three basic Stanzas, one of them is message,

55
00:05:15,130 --> 00:05:19,350
which is just sort of chat messages, sending
updates.

56
00:05:19,350 --> 00:05:23,720
The second is presence, which is basically
I'm on‑line, I'm off line, there's a really

57
00:05:23,720 --> 00:05:28,520
cool feature called priority, which I'll talk
about in a second, and the third one is IQ

58
00:05:28,520 --> 00:05:34,720
or information query which has set and get,
basically like you have very simple HTTP\h‑‑

59
00:05:34,720 --> 00:05:44,389
then there's also the JID or the Jabber ID
consists of three parts first you is your

60
00:05:44,389 --> 00:05:50,159
server, so in this example it's example.org,
I then log in as user@example.org.

61
00:05:50,159 --> 00:05:58,300
And I then have this third thing on the end
called a resource, which is really interesting,

62
00:05:58,300 --> 00:06:07,379
even though this was designed back in 1998,
it was designed with multiple devices in mind.

63
00:06:07,379 --> 00:06:11,500
Going back to the presence Stanza I talked
about a second ago.

64
00:06:11,500 --> 00:06:18,610
I'm on my laptop work away my laptop has a
presence priority of 5.

65
00:06:18,610 --> 00:06:27,030
And when people send messages to my user@example.org,
messages get routed through to my laptop.

66
00:06:27,030 --> 00:06:31,660
When I walk away from my laptop and have my
phone, which has been happily sitting there

67
00:06:31,660 --> 00:06:37,560
at a priority of four, the laptop goes to
sleep drops down to a priority of one, and

68
00:06:37,560 --> 00:06:44,939
now it will get routed to me on my mobile
phone, so you can always be sure the messages

69
00:06:44,939 --> 00:06:50,890
get the device that the person is most likely
to be using.

70
00:06:50,890 --> 00:06:53,039
Clients.

71
00:06:53,039 --> 00:06:58,650
What we say with XMPP is that your clients
should be very, very light.

72
00:06:58,650 --> 00:07:04,552
And this is really good for mobile phone usage
because we don't expect the clients to do

73
00:07:04,552 --> 00:07:06,040
any work whatsoever.

74
00:07:06,040 --> 00:07:08,750
You save a lot of battery that way.

75
00:07:08,750 --> 00:07:13,650
You connect to server in three different standard
ways of connecting, one is just a standard

76
00:07:13,650 --> 00:07:18,990
socket, the other one is a long poling set
up and the new one is the web sockets.

77
00:07:18,990 --> 00:07:27,310
And the other thing that's really good, unlike
other systems which pole a server to do real‑time,

78
00:07:27,310 --> 00:07:31,759
that's quite heavy on your server and your
clients, setting up new connections is there

79
00:07:31,759 --> 00:07:38,379
any information, no, thanks great! So it's
very intensive, where as with XMPP data gets

80
00:07:38,379 --> 00:07:44,031
pushed, so, if you imagine kids sat in the
back of the car, are we there yet, are we

81
00:07:44,031 --> 00:07:48,949
there yet? Are we there yet? In this case
we say just shut up and I'll tell you when

82
00:07:48,949 --> 00:07:50,470
we're there.

83
00:07:50,470 --> 00:07:51,979
Very different.

84
00:07:51,979 --> 00:07:58,139
Servers, all they're there for is to route
messages, they set up these secure connections

85
00:07:58,139 --> 00:08:03,310
between each other, and they handle the authentication.

86
00:08:03,310 --> 00:08:07,800
And then the third part is the components
which is pretty much where you develop is

87
00:08:07,800 --> 00:08:14,930
going to to be held, so the server custom
business logic, you can have standard components

88
00:08:14,930 --> 00:08:18,069
or you could do something specific to your
use case.

89
00:08:18,069 --> 00:08:26,419
And a nice way to build components in JavaScript
is to use node-xmpp-component. They're server

90
00:08:26,419 --> 00:08:34,930
agnostic, so I could write my code in JavaScript
and connect to a server in lua and then get

91
00:08:34,930 --> 00:08:38,440
rid of the server and replace with Java server
and I don't have to change anything about

92
00:08:38,440 --> 00:08:40,090
my code.

93
00:08:40,090 --> 00:08:48,090
All right, so why don't we see it being used
by web developers? Well, the big advantage

94
00:08:48,090 --> 00:08:55,150
X M L is the extensibility part but the big\h‑‑
in order to achieve that extensibility we

95
00:08:55,150 --> 00:09:05,730
use XML, I don't know about you guys, my interactions
with XML has been via soap, it's horrible,

96
00:09:05,730 --> 00:09:10,240
not nice to deal with in the browser, it's
slow you can sometimes lose data and things

97
00:09:10,240 --> 00:09:11,670
like that.

98
00:09:11,670 --> 00:09:16,700
And also when you compare it to JSON XML seems
verbose, ugly, and old fashioned, it's just

99
00:09:16,700 --> 00:09:18,140
Yuck.

100
00:09:18,140 --> 00:09:27,760
So what I've done is created a library called
XMPP for the web. It converts messages to

101
00:09:27,760 --> 00:09:32,529
JSON on the server. And then send it down
to your over web socket.

102
00:09:32,529 --> 00:09:38,930
And this makes it much nicer to develop applications,
using XMPP but not be exposed to any of the

103
00:09:38,930 --> 00:09:44,550
nasty stuff as web developers we don't really
like.

104
00:09:44,550 --> 00:09:48,110
So what I'm going to do now is probably get
this completely wrong, this will be the funny

105
00:09:48,110 --> 00:09:49,970
part of the talk. ..

106
00:09:49,970 --> 00:09:55,180
I'm going to do a live demo and show you how
easy it is to build an application.

107
00:09:55,180 --> 00:10:09,320
I'm going to ask you to help me out, so it's
a part participation exercise.

108
00:10:09,320 --> 00:10:14,730
I'm going to write a little application here
and what it's going to do is listen for incoming

109
00:10:14,730 --> 00:10:19,720
chat messages, draw a little circle on the
screen and allow you whys guys to move it

110
00:10:19,720 --> 00:10:21,949
around.

111
00:10:21,949 --> 00:10:26,930
But the interesting bit here is you're all
going to connect on servers all around the

112
00:10:26,930 --> 00:10:34,010
world and and they're going to talk to my
server and perform the actions, so if you\h‑‑

113
00:10:34,010 --> 00:10:44,459
that UL, in the meantime I will start coding
up something (If you pop open that URL, in

114
00:10:44,459 --> 00:10:59,700
the meantime I well start coding something)
so I'm just going to drop this over here.

115
00:10:59,700 --> 00:11:09,050
Okay, the first thing I need do is log into
my server, so let's get that done.

116
00:11:09,050 --> 00:11:13,980
So all I have in this, very much like the
clients you'll be loading is an MD5 library

117
00:11:13,980 --> 00:11:20,290
because a hash of a string is 0‑9 A‑F
take the first six characters gives me a nice

118
00:11:20,290 --> 00:11:27,240
Hex colour code, Jquery and web socket being
delivered for XMPP for the web.

119
00:11:27,240 --> 00:11:57,699
Okay, so

120
00:11:57,699 --> 00:12:18,520
that's listening for my incoming connection,
I'm going to ask it to log in for me.

121
00:12:18,520 --> 00:12:24,370
For any of you about to get excited, Ha‑Ha‑Ha.

122
00:12:24,370 --> 00:12:32,910
Okay, cool, all right, I'm on‑line, I'm
connected.

123
00:12:32,910 --> 00:12:36,670
I can start doing nice things, so when I was
talking about the JID just now you'll see

124
00:12:36,670 --> 00:12:45,880
that I'm connected as lloyd@buddycloud.org,
I could ask for a specific resource but didn't.

125
00:12:45,880 --> 00:12:52,209
Buddycloud is distributed social network that
I work on. You should check it out, it's cool

126
00:12:52,209 --> 00:12:53,899
to play with.

127
00:12:53,899 --> 00:13:03,690
Okay, so, next thing, I need to draw circle
on the screen when I get new connections,

128
00:13:03,690 --> 00:13:27,610
What I'm going to do is hash the incoming
JID.

129
00:13:27,610 --> 00:13:38,029
Do‑Do‑Do.

130
00:13:38,029 --> 00:13:52,600
So if I already have it, obviously I don't
want to draw again ...

131
00:13:52,600 --> 00:13:57,600
otherwise I'm just going to draw myself a
nice little circle.

132
00:13:57,600 --> 00:14:07,010
I also have some CSS which will handle the
circle part.

133
00:14:07,010 --> 00:14:26,420
And what I'll do in here as well is I'll draw
up an identifier.

134
00:14:26,420 --> 00:14:32,020
Okay, and what I'll do then, in order to show
you the fact that you are connecting from

135
00:14:32,020 --> 00:14:37,000
different domains, I'll change the border
colour of the circle to a hash of the domain

136
00:14:37,000 --> 00:14:42,269
that you're on.

137
00:14:42,269 --> 00:14:47,269
Okay.

138
00:14:47,269 --> 00:15:20,060
Sorry, I should of got some music for this
really, shouldn't I ...

139
00:15:20,060 --> 00:15:24,550
and lastly, actually I'll just leave that.

140
00:15:24,550 --> 00:15:29,320
Cool, all right, so I have my draw function,
next thing I'm going to listen for a chat

141
00:15:29,320 --> 00:15:32,269
message, promise you won't be too much longer.

142
00:15:32,269 --> 00:15:39,430
socket dot on\h‑‑ actually first of all,
I need the tell the server I'm on‑line,

143
00:15:39,430 --> 00:15:44,089
I may be connected but I haven't told it when
I receive update .

144
00:15:44,089 --> 00:15:59,800
Let's say to the server, I'm on‑line. Cool,
I'm on‑line and I want to receive updates.

145
00:15:59,800 --> 00:16:09,360
Okay, so socket.on XMPP.chat.message, this
will pass through a nice message, which is

146
00:16:09,360 --> 00:16:13,310
just the content and who sent it to me, so
let's go ...

147
00:16:13,310 --> 00:16:24,060
First of all we need to draw a circle ...

148
00:16:24,060 --> 00:16:32,579
and then we just need to listen to what you've
said to me and just shift your circle about,

149
00:16:32,579 --> 00:17:20,709
so if I create the hash again\h‑‑ okay\h‑‑
if we want to go up, we will pick up no, it's

150
00:17:20,709 --> 00:17:35,940
minus equals and we'll just shift it by ten
pixels.

151
00:17:35,940 --> 00:17:42,710
Cool anyone actually logged into the client?
Everyone logged in okay? Yep, cool.

152
00:17:42,710 --> 00:17:43,710
Okay.

153
00:17:43,710 --> 00:17:50,270
Up ... down. We'll just add ten Pixels.

154
00:17:50,270 --> 00:18:11,620
We're going to right where right, head left\h‑‑
now, hopefully, Oooh, look, someone's already

155
00:18:11,620 --> 00:18:13,670
there.

156
00:18:13,670 --> 00:18:16,890
If you guys want to start shifting, I'm guessing
it's not actually ...

157
00:18:16,890 --> 00:18:25,770
I'm guessing I've got this wrong ... Okay,
in the UK we have a show called Blue Peter

158
00:18:25,770 --> 00:18:34,530
who if when they build something they always
have the line "Here's something we made earlier".

159
00:18:34,530 --> 00:18:40,770
There we go, that's moving on the screen if
all the different servers, it may be a little

160
00:18:40,770 --> 00:18:46,640
bit of lag because I am connected to a server
on the east coast of the US that's connected

161
00:18:46,640 --> 00:18:52,799
to my XMPP which is in Munich which is then
connected to a server somewhere in the world

162
00:18:52,799 --> 00:18:57,690
depending on which one you guy haves connected
to that then connects to the server on the

163
00:18:57,690 --> 00:19:03,340
east coast of the US then comes back to Berlin
to talk to you, it's going a long way.

164
00:19:03,340 --> 00:19:10,090
But as you can see, that's\h‑‑ throwing
things from many different servers, Polish

165
00:19:10,090 --> 00:19:15,370
servers, British servers, French servers,
American servers but they're all talking to

166
00:19:15,370 --> 00:19:21,840
my server in Munich without any additional
code.

167
00:19:21,840 --> 00:19:38,070
In summary, XMPP is a secure, scalable real‑time
messaging system, it's scalable because when

168
00:19:38,070 --> 00:19:43,821
you get a thousand users, rather\h‑‑ or
tens of thousand users, you don't just, you

169
00:19:43,821 --> 00:19:51,300
know, cluster or get more servers, you just
create a new domain, so it's very scalable,

170
00:19:51,300 --> 00:19:56,220
it's really\h‑‑ it's essentially really
easy way to help rebuild a de‑centralized

171
00:19:56,220 --> 00:19:59,130
web and you get a lot of extras for free.

172
00:19:59,130 --> 00:20:03,490
Wanted to keep it very light, hope that was
okay.

