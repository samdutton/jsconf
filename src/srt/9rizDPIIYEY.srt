1
00:00:15,300 --> 00:00:18,090

good morning good morning so yeah thank

2
00:00:18,090 --> 00:00:20,550
you Jed as Jed said we're basically

3
00:00:20,550 --> 00:00:22,470
gonna take a quick look at some tips

4
00:00:22,470 --> 00:00:25,710
tricks and hacks that you normally use

5
00:00:25,710 --> 00:00:27,509
in the web but as viewed from within

6
00:00:27,509 --> 00:00:28,619
WebKit

7
00:00:28,619 --> 00:00:31,949
right so this is kind of a culmination

8
00:00:31,949 --> 00:00:33,870
of a lot of discussions we've had with

9
00:00:33,870 --> 00:00:35,610
people over the past few years we've

10
00:00:35,610 --> 00:00:36,690
notice that they're doing certain things

11
00:00:36,690 --> 00:00:38,820
and and realizing maybe like that the

12
00:00:38,820 --> 00:00:40,820
engine can kind of do different modes

13
00:00:40,820 --> 00:00:43,199
depending on like what you know kind of

14
00:00:43,199 --> 00:00:45,750
little tips they use but we realized

15
00:00:45,750 --> 00:00:47,220
that a lot of people don't quite realize

16
00:00:47,220 --> 00:00:48,690
what's happening inside the engine when

17
00:00:48,690 --> 00:00:50,850
they do that sometimes too bad effects

18
00:00:50,850 --> 00:00:53,250
or sometimes a good effects so it's

19
00:00:53,250 --> 00:00:54,420
basically a talk where we can take a few

20
00:00:54,420 --> 00:00:55,589
of the really popular ones that we've

21
00:00:55,589 --> 00:00:57,470
seen where people seem to have a lot of

22
00:00:57,470 --> 00:00:59,909
misconceptions or misunderstandings of

23
00:00:59,909 --> 00:01:01,440
what's going on inside of the engine and

24
00:01:01,440 --> 00:01:03,780
we're gonna look into them to actually

25
00:01:03,780 --> 00:01:08,549
show you what is going on right so so

26
00:01:08,549 --> 00:01:10,590
Jed give a little introduction so again

27
00:01:10,590 --> 00:01:14,159
I'm Matt and this is Jing and so we just

28
00:01:14,159 --> 00:01:16,439
left apple early is here and are

29
00:01:16,439 --> 00:01:18,150
starting her a little company together

30
00:01:18,150 --> 00:01:20,640
in the Bay Area so if you see us around

31
00:01:20,640 --> 00:01:21,899
you can talk to us later more about that

32
00:01:21,899 --> 00:01:23,640
but we basically work together on the

33
00:01:23,640 --> 00:01:25,049
Safari and WebKit team for the past few

34
00:01:25,049 --> 00:01:30,030
years yeah that's better what else so so

35
00:01:30,030 --> 00:01:32,270
to start off they're basically a few

36
00:01:32,270 --> 00:01:35,369
demos that we had made to to kind of

37
00:01:35,369 --> 00:01:36,960
illustrate the points of what these tips

38
00:01:36,960 --> 00:01:39,270
tricks and hacks are that people use but

39
00:01:39,270 --> 00:01:41,399
we realize demos are kind of boring

40
00:01:41,399 --> 00:01:44,569
right because if we could have you know

41
00:01:44,569 --> 00:01:46,590
synergy in our talk or whatever right

42
00:01:46,590 --> 00:01:48,509
then then they'll be great because

43
00:01:48,509 --> 00:01:49,710
everyone loves synergy so like let's

44
00:01:49,710 --> 00:01:51,359
make a game out of these these these

45
00:01:51,359 --> 00:01:53,069
tips tricks and hacks let's put them all

46
00:01:53,069 --> 00:01:56,100
together in like one example it's fun to

47
00:01:56,100 --> 00:01:58,409
do so basically last night we were kind

48
00:01:58,409 --> 00:02:00,240
of scrambling to do all this and fit it

49
00:02:00,240 --> 00:02:02,100
all into one so we came up with a little

50
00:02:02,100 --> 00:02:04,770
simple game that we like to call Verta

51
00:02:04,770 --> 00:02:07,319
fall and so a little play off the German

52
00:02:07,319 --> 00:02:10,910
word vert which means words in German

53
00:02:10,910 --> 00:02:13,620
the simple game that we made was was

54
00:02:13,620 --> 00:02:17,610
essentially you might be you see like

55
00:02:17,610 --> 00:02:18,840
these words falling from the top of the

56
00:02:18,840 --> 00:02:20,190
page right so maybe like chocolate

57
00:02:20,190 --> 00:02:22,890
cupcakes or whatever and your objective

58
00:02:22,890 --> 00:02:24,090
for the game is to go through and type

59
00:02:24,090 --> 00:02:25,860
the words as fast as you can so for

60
00:02:25,860 --> 00:02:27,240
every one that you type and you get

61
00:02:27,240 --> 00:02:29,340
right you get some points for the

62
00:02:29,340 --> 00:02:31,290
right so if you type cupcakes really

63
00:02:31,290 --> 00:02:32,489
fast before it hits the bottom of the

64
00:02:32,489 --> 00:02:34,349
page and disappears then you get like 80

65
00:02:34,349 --> 00:02:36,630
points or so and so on and you're kind

66
00:02:36,630 --> 00:02:38,310
of just you know going against the clock

67
00:02:38,310 --> 00:02:39,390
to see how fast you can type all the

68
00:02:39,390 --> 00:02:41,880
words so those a little fun little

69
00:02:41,880 --> 00:02:43,110
example that kind of brings together all

70
00:02:43,110 --> 00:02:44,940
of our all the things we want to talk

71
00:02:44,940 --> 00:02:50,880
about and so we'll so I'll show you in a

72
00:02:50,880 --> 00:02:52,610
second what that game looks like

73
00:02:52,610 --> 00:02:54,599
basically it's about like 2:00 a.m. last

74
00:02:54,599 --> 00:02:56,160
night right and and we're totally

75
00:02:56,160 --> 00:02:57,510
freaking out because we need to get this

76
00:02:57,510 --> 00:03:00,300
all done before tomorrow so we know that

77
00:03:00,300 --> 00:03:01,230
like there's only one way we can

78
00:03:01,230 --> 00:03:03,989
possibly you know get this done in time

79
00:03:03,989 --> 00:03:06,330
because we need to meet male right at

80
00:03:06,330 --> 00:03:08,310
the super awesome raver Club like 5:00

81
00:03:08,310 --> 00:03:11,069
in the morning he's talking about so so

82
00:03:11,069 --> 00:03:13,019
it's like you know it's just it's game

83
00:03:13,019 --> 00:03:15,150
time right we have 2 a.m. until 5 a.m.

84
00:03:15,150 --> 00:03:16,620
to get this done and then we have all

85
00:03:16,620 --> 00:03:18,660
this like super partying at the club

86
00:03:18,660 --> 00:03:20,190
until 9:00 in the morning and then

87
00:03:20,190 --> 00:03:22,200
breakfast now and if you have any clue

88
00:03:22,200 --> 00:03:23,549
this is why we're so tired right now

89
00:03:23,549 --> 00:03:27,450
this is this is a true story so there's

90
00:03:27,450 --> 00:03:28,590
only one way you could possibly do this

91
00:03:28,590 --> 00:03:30,239
in time right so we know we need to get

92
00:03:30,239 --> 00:03:34,140
to bombers peak right so so to

93
00:03:34,140 --> 00:03:36,239
illustrate such a thing we're gonna do

94
00:03:36,239 --> 00:03:39,780
that right now we go through Hey Cheers

95
00:03:39,780 --> 00:03:44,619
this is true story

96
00:03:44,629 --> 00:03:46,470
okay so this game that we're saying

97
00:03:46,470 --> 00:03:47,790
right the the words are falling from the

98
00:03:47,790 --> 00:03:49,680
sky as they should be right and we're

99
00:03:49,680 --> 00:03:50,459
trying to take them as fast as possible

100
00:03:50,459 --> 00:03:53,250
however we get it the game done and all

101
00:03:53,250 --> 00:03:54,720
of a sudden it's not working of course

102
00:03:54,720 --> 00:03:56,340
you know cuz we're total noobs and so

103
00:03:56,340 --> 00:03:58,590
the very issue they run into the very

104
00:03:58,590 --> 00:04:02,310
first issue we see is that got it is

105
00:04:02,310 --> 00:04:07,859
that all the words are not there Mart

106
00:04:07,859 --> 00:04:09,720
not there right they should be they

107
00:04:09,720 --> 00:04:10,680
should be basically flowing there from

108
00:04:10,680 --> 00:04:12,180
the top because we have a little

109
00:04:12,180 --> 00:04:14,250
transition it's like you know going from

110
00:04:14,250 --> 00:04:15,540
the top at the bottom and then sliding

111
00:04:15,540 --> 00:04:16,079
them down

112
00:04:16,079 --> 00:04:18,299
however it's not working baby like are

113
00:04:18,299 --> 00:04:19,979
stuck somewhere right so to go to look

114
00:04:19,979 --> 00:04:23,400
at the code for a second and jiggle

115
00:04:23,400 --> 00:04:24,360
explain what we're doing here

116
00:04:24,360 --> 00:04:26,760
alright so basically in our code we have

117
00:04:26,760 --> 00:04:29,280
these divs that have classes word and we

118
00:04:29,280 --> 00:04:30,960
want to do is start them off at the top

119
00:04:30,960 --> 00:04:32,460
of the page above the top of the page

120
00:04:32,460 --> 00:04:34,979
and then I have them animate all the way

121
00:04:34,979 --> 00:04:37,199
to the bottom so what we did here was

122
00:04:37,199 --> 00:04:39,599
basically have like call this function

123
00:04:39,599 --> 00:04:41,460
called dispatch word that crazy word

124
00:04:41,460 --> 00:04:43,860
element inserts it into the Dom and then

125
00:04:43,860 --> 00:04:47,130
changes the top position to the height

126
00:04:47,130 --> 00:04:49,440
of the screen so we're thinking about

127
00:04:49,440 --> 00:04:50,880
this last night and we're like oh wait

128
00:04:50,880 --> 00:04:53,130
we're people on the web saying something

129
00:04:53,130 --> 00:04:54,750
about like you need a set timeout zero

130
00:04:54,750 --> 00:04:57,000
between like inserting something into

131
00:04:57,000 --> 00:04:59,220
the DOM and changing its property or

132
00:04:59,220 --> 00:05:00,840
else like the transition doesn't take

133
00:05:00,840 --> 00:05:03,659
effect or something so so we're like

134
00:05:03,659 --> 00:05:07,229
okay let's try this we changed our code

135
00:05:07,229 --> 00:05:09,120
to basically do a set time at zero and

136
00:05:09,120 --> 00:05:11,789
then set the final top position and

137
00:05:11,789 --> 00:05:14,070
they're like okay let's try this out see

138
00:05:14,070 --> 00:05:19,770
if it works and it does whoa okay you

139
00:05:19,770 --> 00:05:21,449
know our game works we're well on our

140
00:05:21,449 --> 00:05:24,000
way to partying and we're also making

141
00:05:24,000 --> 00:05:26,970
our way steadily up bombers peak which

142
00:05:26,970 --> 00:05:28,740
means we got super distracted who were

143
00:05:28,740 --> 00:05:30,539
like why do we even need us it how about

144
00:05:30,539 --> 00:05:32,789
zero I mean we have like one CSS value

145
00:05:32,789 --> 00:05:34,050
the next one why can't the browser just

146
00:05:34,050 --> 00:05:37,470
do it so we went online and we looked up

147
00:05:37,470 --> 00:05:39,659
the definition of how transitions are

148
00:05:39,659 --> 00:05:43,740
triggered in the spec so though the w3c

149
00:05:43,740 --> 00:05:46,349
spec says when the computed value of for

150
00:05:46,349 --> 00:05:48,330
property changes then then the engine

151
00:05:48,330 --> 00:05:51,570
starts the transition so we know a

152
00:05:51,570 --> 00:05:54,090
little bit about how web browsers work

153
00:05:54,090 --> 00:05:56,400
so when you're running your JavaScript

154
00:05:56,400 --> 00:05:57,960
code that each chunk of your code is

155
00:05:57,960 --> 00:05:58,319
actually

156
00:05:58,319 --> 00:06:01,379
run in a single run loop inside the

157
00:06:01,379 --> 00:06:02,729
browser and the browser kind of like

158
00:06:02,729 --> 00:06:04,379
manages one to call these wrong loops

159
00:06:04,379 --> 00:06:06,779
and in between these wrong loops then

160
00:06:06,779 --> 00:06:08,219
the browser does like whatever it needs

161
00:06:08,219 --> 00:06:11,129
to do to actually you know render your

162
00:06:11,129 --> 00:06:13,139
page respond to system events and

163
00:06:13,139 --> 00:06:14,999
anything that's not directly in your

164
00:06:14,999 --> 00:06:17,699
control so one of the things that the

165
00:06:17,699 --> 00:06:20,249
browser does during this time between

166
00:06:20,249 --> 00:06:22,830
your on loop is to update all the Styles

167
00:06:22,830 --> 00:06:25,349
you've said and layout so that makes

168
00:06:25,349 --> 00:06:27,270
sense because when we have a set timeout

169
00:06:27,270 --> 00:06:29,069
zero we're basically saying we're done

170
00:06:29,069 --> 00:06:30,479
with the first round loop do whatever

171
00:06:30,479 --> 00:06:32,039
you need to do in the browser and then

172
00:06:32,039 --> 00:06:34,800
and then do whatever we said later so

173
00:06:34,800 --> 00:06:37,649
that's why it works awesome okay so

174
00:06:37,649 --> 00:06:38,969
we're done with that and we're like okay

175
00:06:38,969 --> 00:06:40,020
we want to go party with a little party

176
00:06:40,020 --> 00:06:46,469
let's try playing this game huh there's

177
00:06:46,469 --> 00:06:49,879
like this weird stutter when they type

178
00:06:49,879 --> 00:06:52,889
this this is to slow some reason every

179
00:06:52,889 --> 00:06:55,229
time we're pressing one letter it's just

180
00:06:55,229 --> 00:06:57,209
absolutely slowing down so this is not

181
00:06:57,209 --> 00:07:01,889
good either right so I know that the

182
00:07:01,889 --> 00:07:04,019
animation works fine and it only slows

183
00:07:04,019 --> 00:07:06,330
down when I'm typing so it must be

184
00:07:06,330 --> 00:07:08,969
something wrong with my event handler so

185
00:07:08,969 --> 00:07:11,899
I go look at my event handling code and

186
00:07:11,899 --> 00:07:14,459
this is the function I call basically

187
00:07:14,459 --> 00:07:17,339
every time you type a letter I go

188
00:07:17,339 --> 00:07:19,050
through loops through all of the word

189
00:07:19,050 --> 00:07:21,300
elements in the page and then compare

190
00:07:21,300 --> 00:07:23,159
their inner text to see if it matches a

191
00:07:23,159 --> 00:07:25,559
letter typed and if it does then I'll

192
00:07:25,559 --> 00:07:26,999
just like change the class name which is

193
00:07:26,999 --> 00:07:28,110
that some styles on there that

194
00:07:28,110 --> 00:07:32,369
highlights it so as I'm looking at this

195
00:07:32,369 --> 00:07:35,309
I start remembering there's this talk on

196
00:07:35,309 --> 00:07:37,709
YouTube oh it's it's all Paul irons just

197
00:07:37,709 --> 00:07:41,099
talk about how accessing some values in

198
00:07:41,099 --> 00:07:44,009
the loop could cause reflows and slow

199
00:07:44,009 --> 00:07:45,019
things down

200
00:07:45,019 --> 00:07:47,459
actually now now I really remember it's

201
00:07:47,459 --> 00:07:49,529
our Texas one of these properties that

202
00:07:49,529 --> 00:07:52,289
causes a reflow so I think the tip was

203
00:07:52,289 --> 00:07:55,289
to access all of your values at the same

204
00:07:55,289 --> 00:07:57,180
time and then set your values at the

205
00:07:57,180 --> 00:08:00,149
same time so I changed my code and now

206
00:08:00,149 --> 00:08:01,919
I'm running two loops the first loop

207
00:08:01,919 --> 00:08:03,959
gets all the inner texts and the second

208
00:08:03,959 --> 00:08:06,119
loop just access there's a local

209
00:08:06,119 --> 00:08:09,689
variable instead of asking for for it

210
00:08:09,689 --> 00:08:11,010
from the element

211
00:08:11,010 --> 00:08:16,650
so let's run that code yay

212
00:08:16,650 --> 00:08:18,390
no it's responsive so breaking out that

213
00:08:18,390 --> 00:08:19,980
pattern so that we do all the all the

214
00:08:19,980 --> 00:08:21,960
gets of the intertext and then all the

215
00:08:21,960 --> 00:08:23,550
sets have to right then we're avoiding

216
00:08:23,550 --> 00:08:26,250
all of those reflows so so now we see

217
00:08:26,250 --> 00:08:29,310
it's so much smoother right so of course

218
00:08:29,310 --> 00:08:32,970
yeah so it again since Matt's still

219
00:08:32,970 --> 00:08:35,729
holding my beer over nearly at help

220
00:08:35,729 --> 00:08:38,220
farmer speak and we're like you know why

221
00:08:38,220 --> 00:08:39,720
are we causing these reflows I'm just

222
00:08:39,720 --> 00:08:43,350
asking for some text from the Dom so we

223
00:08:43,350 --> 00:08:45,000
decided to actually just step through

224
00:08:45,000 --> 00:08:46,890
this loop and look at what's actually

225
00:08:46,890 --> 00:08:48,690
happening in web kids

226
00:08:48,690 --> 00:08:53,370
C++ code so I put a breakpoint inside in

227
00:08:53,370 --> 00:08:56,400
our text and this is the function that I

228
00:08:56,400 --> 00:08:59,460
see you see that the first line there

229
00:08:59,460 --> 00:09:02,850
says call um a document update layout

230
00:09:02,850 --> 00:09:04,950
ignore pending sow Jade's super alarming

231
00:09:04,950 --> 00:09:06,690
so I'm like what is this thing actually

232
00:09:06,690 --> 00:09:09,090
do and then I kept stepping through the

233
00:09:09,090 --> 00:09:10,350
stepping through I'll save you guys have

234
00:09:10,350 --> 00:09:12,320
a pain of stepping through like 20 files

235
00:09:12,320 --> 00:09:15,660
but at the end it comes down to calling

236
00:09:15,660 --> 00:09:19,410
recalc style on the document so I go

237
00:09:19,410 --> 00:09:21,180
into recounts out and this there's this

238
00:09:21,180 --> 00:09:22,950
this is like this huge function that's

239
00:09:22,950 --> 00:09:25,590
like three pages long and it does what

240
00:09:25,590 --> 00:09:27,180
it says it does it recalculates the

241
00:09:27,180 --> 00:09:29,550
style if it needs to be recalculated but

242
00:09:29,550 --> 00:09:32,310
the most interesting part is that near

243
00:09:32,310 --> 00:09:34,590
the end of it if the element actually

244
00:09:34,590 --> 00:09:37,140
loops through all of his children and it

245
00:09:37,140 --> 00:09:40,380
says if any of my children needs it cell

246
00:09:40,380 --> 00:09:42,690
style recalculated then I also had to

247
00:09:42,690 --> 00:09:44,580
recalculate my style even if I didn't

248
00:09:44,580 --> 00:09:47,820
change so I'm going through this loop

249
00:09:47,820 --> 00:09:49,710
asking for inner tags and going through

250
00:09:49,710 --> 00:09:51,300
all this logic why I haven't changed

251
00:09:51,300 --> 00:09:52,950
anything so this doesn't really trigger

252
00:09:52,950 --> 00:09:55,760
anything okay let's see what I did next

253
00:09:55,760 --> 00:09:59,150
so the next thing I did is I changed the

254
00:09:59,150 --> 00:10:01,650
the class name to something else so

255
00:10:01,650 --> 00:10:04,230
again I could webpage at work here and I

256
00:10:04,230 --> 00:10:06,150
see that it's function called class

257
00:10:06,150 --> 00:10:09,570
attribute changed got called and there's

258
00:10:09,570 --> 00:10:10,650
a whole bunch of stuff it's supposed to

259
00:10:10,650 --> 00:10:13,620
do but at the very very end it says sent

260
00:10:13,620 --> 00:10:16,650
me style recalc which sounds like a

261
00:10:16,650 --> 00:10:18,060
might sugar the thing which I saw

262
00:10:18,060 --> 00:10:21,120
earlier so to help me organize my

263
00:10:21,120 --> 00:10:24,279
thoughts I kind of graphed out

264
00:10:24,279 --> 00:10:26,379
looks like so I had the document root

265
00:10:26,379 --> 00:10:28,930
documents elements and then I had this

266
00:10:28,930 --> 00:10:30,730
gain container that contains a whole

267
00:10:30,730 --> 00:10:32,620
bunch of words and I just went through

268
00:10:32,620 --> 00:10:34,660
the first word and set it style so the

269
00:10:34,660 --> 00:10:37,149
first word has a dirty bit for if the

270
00:10:37,149 --> 00:10:41,379
style needs to be recalculated so now

271
00:10:41,379 --> 00:10:43,209
I'm on to the next iteration of my loop

272
00:10:43,209 --> 00:10:45,160
I'm looking at the second word and I'm

273
00:10:45,160 --> 00:10:46,629
asking the second word for its inner

274
00:10:46,629 --> 00:10:49,660
text and as you saw earlier when you

275
00:10:49,660 --> 00:10:51,399
asked for inner text it triggers all

276
00:10:51,399 --> 00:10:53,319
these function calls that go to recalc

277
00:10:53,319 --> 00:10:55,899
style so the document asks do I need to

278
00:10:55,899 --> 00:10:58,329
recalculate my selves and it's like oh -

279
00:10:58,329 --> 00:10:59,980
my children need to recalculate their

280
00:10:59,980 --> 00:11:02,259
styles and the game says do my children

281
00:11:02,259 --> 00:11:04,569
need to recalculate their cells and the

282
00:11:04,569 --> 00:11:06,040
first word says hey I need my style

283
00:11:06,040 --> 00:11:09,309
recalculated so the first word does its

284
00:11:09,309 --> 00:11:11,529
own layout calculation things and it

285
00:11:11,529 --> 00:11:13,720
goes back to the game and the game says

286
00:11:13,720 --> 00:11:15,879
well one of my children has a style

287
00:11:15,879 --> 00:11:17,499
recalculated so I guess I had to

288
00:11:17,499 --> 00:11:20,259
recalculate myself - so what this

289
00:11:20,259 --> 00:11:22,569
actually caused in my game was that

290
00:11:22,569 --> 00:11:25,029
every single time I asked for inner text

291
00:11:25,029 --> 00:11:27,999
the game element was relating out all of

292
00:11:27,999 --> 00:11:30,459
its words so if I had n words I will

293
00:11:30,459 --> 00:11:32,740
have n loops and inside each loop I will

294
00:11:32,740 --> 00:11:34,629
really out in words so it's like

295
00:11:34,629 --> 00:11:37,269
exponentially expensive to have the

296
00:11:37,269 --> 00:11:40,800
accesses in the same loop as the setters

297
00:11:40,800 --> 00:11:46,000
so that explains why I need to access

298
00:11:46,000 --> 00:11:48,309
all the values first and then and then

299
00:11:48,309 --> 00:11:53,410
send all the values so now our game is

300
00:11:53,410 --> 00:11:55,750
pretty much done actually to couple that

301
00:11:55,750 --> 00:11:57,279
point there for a second um you might

302
00:11:57,279 --> 00:12:00,069
ask yourself like why is why does like

303
00:12:00,069 --> 00:12:01,269
the browser have to do all this work why

304
00:12:01,269 --> 00:12:02,649
can't it be as smart as my JavaScript

305
00:12:02,649 --> 00:12:03,879
loop could be just to like cashless

306
00:12:03,879 --> 00:12:05,769
values essentially and then we're

307
00:12:05,769 --> 00:12:07,089
getting the big discussion of like if

308
00:12:07,089 --> 00:12:08,829
you look at the the way you like style

309
00:12:08,829 --> 00:12:10,240
resolution and everything works inside

310
00:12:10,240 --> 00:12:12,160
of the browser it's it's obviously a lot

311
00:12:12,160 --> 00:12:14,740
of really complicated CSS rules all

312
00:12:14,740 --> 00:12:17,139
implemented right so there have to be

313
00:12:17,139 --> 00:12:18,610
some places where we can do that sort of

314
00:12:18,610 --> 00:12:20,920
thing where we can speed things up but

315
00:12:20,920 --> 00:12:21,819
in a day like we don't really know like

316
00:12:21,819 --> 00:12:23,499
what you're gonna do next in JavaScript

317
00:12:23,499 --> 00:12:25,209
right so so a lot of cases where it's

318
00:12:25,209 --> 00:12:26,889
just not worth it to possibly save

319
00:12:26,889 --> 00:12:28,540
around like every intermediate you know

320
00:12:28,540 --> 00:12:30,759
intermediary value between it so

321
00:12:30,759 --> 00:12:32,589
basically the take-home message there is

322
00:12:32,589 --> 00:12:34,059
like you just kind of accept the fact

323
00:12:34,059 --> 00:12:35,829
that like this is the current code so

324
00:12:35,829 --> 00:12:36,730
this is this is what you have to deal

325
00:12:36,730 --> 00:12:38,080
with on the platform right

326
00:12:38,080 --> 00:12:40,300
so so even the best things that can be

327
00:12:40,300 --> 00:12:41,380
done in the future they currently don't

328
00:12:41,380 --> 00:12:43,690
exist so it's just you know limitation

329
00:12:43,690 --> 00:12:46,080
of the current implementation basically

330
00:12:46,080 --> 00:12:48,790
but yeah okay so so we fixed that right

331
00:12:48,790 --> 00:12:51,580
and we've we've understood that one but

332
00:12:51,580 --> 00:12:55,089
now like we're looking at it and and if

333
00:12:55,089 --> 00:12:56,890
you can see like like keg is kind of

334
00:12:56,890 --> 00:12:58,630
just shaking as its falling down it

335
00:12:58,630 --> 00:12:59,830
doesn't really look that smooth right

336
00:12:59,830 --> 00:13:01,060
and since the perfectionist that we are

337
00:13:01,060 --> 00:13:03,459
we want this game to be really really

338
00:13:03,459 --> 00:13:06,880
smooth right so so we get so we um you

339
00:13:06,880 --> 00:13:10,180
know we remember this we remember this

340
00:13:10,180 --> 00:13:11,950
um this tip that someone told us before

341
00:13:11,950 --> 00:13:12,520
right

342
00:13:12,520 --> 00:13:14,709
that was like use like translate z0 on

343
00:13:14,709 --> 00:13:15,820
elements when you're animating them

344
00:13:15,820 --> 00:13:18,820
because that like like sets hardwork

345
00:13:18,820 --> 00:13:20,320
celebration to happen or some such thing

346
00:13:20,320 --> 00:13:22,300
right so you can get these awesome crisp

347
00:13:22,300 --> 00:13:26,529
animations so on so recall this and

348
00:13:26,529 --> 00:13:28,630
we're basically on we go to use this

349
00:13:28,630 --> 00:13:30,130
this little hack because it sounds great

350
00:13:30,130 --> 00:13:32,649
right so so it boils down to before we

351
00:13:32,649 --> 00:13:34,600
had a WebKit transition you know on on

352
00:13:34,600 --> 00:13:36,970
top so that it goes from you know top at

353
00:13:36,970 --> 00:13:38,589
zero all the way down to the height of

354
00:13:38,589 --> 00:13:41,110
the page but instead now we just added

355
00:13:41,110 --> 00:13:44,020
WebKit transform with the translate Z

356
00:13:44,020 --> 00:13:46,510
initially zero and then later we add

357
00:13:46,510 --> 00:13:48,790
translate Z and trans like Y so it goes

358
00:13:48,790 --> 00:13:50,770
down the page so same exact effect just

359
00:13:50,770 --> 00:13:52,480
using transforms now as opposed to using

360
00:13:52,480 --> 00:13:56,110
a transition on the top and this is the

361
00:13:56,110 --> 00:13:57,730
trick that everyone uses that should

362
00:13:57,730 --> 00:13:59,170
hopefully like hardware-accelerated my

363
00:13:59,170 --> 00:14:01,209
you know animation right so let's check

364
00:14:01,209 --> 00:14:06,730
it out let's see if it works yeah so

365
00:14:06,730 --> 00:14:08,740
that's buttery smooth right so this is

366
00:14:08,740 --> 00:14:11,100
the effect that everyone goes for and

367
00:14:11,100 --> 00:14:14,410
it's it's like the holy grail of making

368
00:14:14,410 --> 00:14:16,270
awesome animations right you can't live

369
00:14:16,270 --> 00:14:17,230
without this if you're trying to this

370
00:14:17,230 --> 00:14:19,810
sort of thing it seems but why doesn't

371
00:14:19,810 --> 00:14:21,640
like the browser you know do this on its

372
00:14:21,640 --> 00:14:24,430
own right like we're we're curious like

373
00:14:24,430 --> 00:14:26,410
what's going on here so at this point of

374
00:14:26,410 --> 00:14:28,120
course we're totally like a top Ballmer

375
00:14:28,120 --> 00:14:29,980
peak right we are even like jumping over

376
00:14:29,980 --> 00:14:31,870
the top of it high-fiving right we are

377
00:14:31,870 --> 00:14:33,810
so curious about what goes on the engine

378
00:14:33,810 --> 00:14:36,820
and so we start to so we start to ask

379
00:14:36,820 --> 00:14:39,100
the questions right like why doesn't the

380
00:14:39,100 --> 00:14:40,720
browser always do this why don't I just

381
00:14:40,720 --> 00:14:42,220
always do it in my page like every

382
00:14:42,220 --> 00:14:43,720
animation I do why don't I just add like

383
00:14:43,720 --> 00:14:45,790
translate Z zero because that would just

384
00:14:45,790 --> 00:14:48,310
make everything better right well not so

385
00:14:48,310 --> 00:14:51,579
fast right so we start by looking into

386
00:14:51,579 --> 00:14:51,970
the engine

387
00:14:51,970 --> 00:14:54,550
and seeing like what's going on when our

388
00:14:54,550 --> 00:14:55,930
curiosity is getting better us here and

389
00:14:55,930 --> 00:14:58,509
we realize that there's some some some

390
00:14:58,509 --> 00:14:59,829
machinery being set up we're now

391
00:14:59,829 --> 00:15:00,910
entering this thing called like

392
00:15:00,910 --> 00:15:02,500
compositing mode right so web kids

393
00:15:02,500 --> 00:15:04,629
dropping into this code that it wasn't

394
00:15:04,629 --> 00:15:05,589
in the case before when we were

395
00:15:05,589 --> 00:15:07,839
transitioning just on the on the top

396
00:15:07,839 --> 00:15:10,149
element and so so it seems to be

397
00:15:10,149 --> 00:15:11,379
entering this compositing mode we're

398
00:15:11,379 --> 00:15:13,509
setting up all this machinery right it's

399
00:15:13,509 --> 00:15:16,149
creating these like layer things and you

400
00:15:16,149 --> 00:15:17,319
see a lot of code paths that are now

401
00:15:17,319 --> 00:15:18,779
being used that are like if step between

402
00:15:18,779 --> 00:15:22,149
accelerated compositing Flags there so

403
00:15:22,149 --> 00:15:24,670
what like what is compositing what is

404
00:15:24,670 --> 00:15:26,680
what is this accelerated notion where's

405
00:15:26,680 --> 00:15:28,209
that hardware acceleration coming into

406
00:15:28,209 --> 00:15:31,149
play and whatever happened like talking

407
00:15:31,149 --> 00:15:33,810
about Hardware accelerate rendering so

408
00:15:33,810 --> 00:15:36,790
understand all these concepts we need to

409
00:15:36,790 --> 00:15:38,980
quickly just do a little segue to give a

410
00:15:38,980 --> 00:15:41,920
graphics 101 to understand this concept

411
00:15:41,920 --> 00:15:43,629
of what's going on with accelerated

412
00:15:43,629 --> 00:15:47,589
compositing so in the next five plus

413
00:15:47,589 --> 00:15:49,829
minutes I'm going to try to fly through

414
00:15:49,829 --> 00:15:51,879
rendering from top to bottom as to how

415
00:15:51,879 --> 00:15:54,550
it works especially in the lens of how

416
00:15:54,550 --> 00:15:55,930
it works in our rendering engines such

417
00:15:55,930 --> 00:15:58,360
as WebKit and hopefully I trick you into

418
00:15:58,360 --> 00:16:00,220
understanding how accelerate compositing

419
00:16:00,220 --> 00:16:02,529
works all within breaking neck time so

420
00:16:02,529 --> 00:16:07,209
so let's start so so compositing and

421
00:16:07,209 --> 00:16:08,170
rendering or the two different terms

422
00:16:08,170 --> 00:16:09,759
we're talking about here right normally

423
00:16:09,759 --> 00:16:11,319
hear people talking about accelerated

424
00:16:11,319 --> 00:16:13,329
rendering but what does that mean well

425
00:16:13,329 --> 00:16:16,000
rendering is the overall process of what

426
00:16:16,000 --> 00:16:17,740
we're doing here we're compositing is a

427
00:16:17,740 --> 00:16:19,930
sub step of it so we have to know what

428
00:16:19,930 --> 00:16:21,069
rendering is first we can talk about

429
00:16:21,069 --> 00:16:24,430
compositing so as its define rendering

430
00:16:24,430 --> 00:16:26,079
is generally the process of taking a

431
00:16:26,079 --> 00:16:28,959
model and and rendering it into an image

432
00:16:28,959 --> 00:16:30,579
so by an image I mean like you know a

433
00:16:30,579 --> 00:16:33,069
bitmap image or you know an actual like

434
00:16:33,069 --> 00:16:34,930
2d array of pixels this just a little

435
00:16:34,930 --> 00:16:36,790
chunk of memory in the end right and

436
00:16:36,790 --> 00:16:40,569
your model in the case of WebKit and a

437
00:16:40,569 --> 00:16:42,069
rendering engine for the browser right

438
00:16:42,069 --> 00:16:46,470
is just basically your Dom plus CSS so

439
00:16:46,470 --> 00:16:48,730
so your model is simply that Dom that

440
00:16:48,730 --> 00:16:50,800
you give us in the CSS and WebKit does

441
00:16:50,800 --> 00:16:52,000
the job of simply taking that and

442
00:16:52,000 --> 00:16:53,980
translating that literally into an image

443
00:16:53,980 --> 00:16:56,199
right and the end of the day I'm going

444
00:16:56,199 --> 00:17:00,459
to grossly oversimplify this but I let's

445
00:17:00,459 --> 00:17:01,569
say that that image at the end is just

446
00:17:01,569 --> 00:17:03,100
called a frame we'll just use that term

447
00:17:03,100 --> 00:17:04,959
for a second and we'll say that

448
00:17:04,959 --> 00:17:07,329
once we've generated that frame all we

449
00:17:07,329 --> 00:17:10,029
need to do is give it to the GPU and my

450
00:17:10,029 --> 00:17:11,919
graphics graphics friends are totally

451
00:17:11,919 --> 00:17:13,509
gonna kill me for over simplifying this

452
00:17:13,509 --> 00:17:14,740
so much let's just say it's simply the

453
00:17:14,740 --> 00:17:16,990
job of the GPU is to take our frame that

454
00:17:16,990 --> 00:17:18,909
image that we give it and it makes sure

455
00:17:18,909 --> 00:17:22,779
that it appears in the screen okay so so

456
00:17:22,779 --> 00:17:24,429
cool so so we don't to worry about

457
00:17:24,429 --> 00:17:25,509
anything after we've generated this

458
00:17:25,509 --> 00:17:27,220
image we just need to generate that that

459
00:17:27,220 --> 00:17:30,220
like actual set of pixels right so how

460
00:17:30,220 --> 00:17:32,590
my WebKit go about doing this process of

461
00:17:32,590 --> 00:17:34,539
rendering well a very simple and naive

462
00:17:34,539 --> 00:17:37,960
approach we'll go through in a second

463
00:17:37,960 --> 00:17:39,850
with a simple example to see how we

464
00:17:39,850 --> 00:17:41,619
could do it just in a very simple sense

465
00:17:41,619 --> 00:17:46,389
so let's consider a very simple system

466
00:17:46,389 --> 00:17:48,340
where we have a say a small screen and

467
00:17:48,340 --> 00:17:50,740
we have a very simple page and so the

468
00:17:50,740 --> 00:17:55,119
page is about 20 by 20 pixels and on the

469
00:17:55,119 --> 00:17:56,919
body we just basically have one color so

470
00:17:56,919 --> 00:17:59,919
one big color background we have one

471
00:17:59,919 --> 00:18:02,740
child that's the square div and it's

472
00:18:02,740 --> 00:18:04,779
just ten by ten and it has one

473
00:18:04,779 --> 00:18:06,279
background color right pink so these

474
00:18:06,279 --> 00:18:08,350
like simple squares going on here and

475
00:18:08,350 --> 00:18:10,330
then in within the square there's like a

476
00:18:10,330 --> 00:18:11,710
bunch of like little divs we'll just

477
00:18:11,710 --> 00:18:13,450
call them little J Estes you'll see in a

478
00:18:13,450 --> 00:18:15,309
second that are at all just a bunch of

479
00:18:15,309 --> 00:18:18,039
little white pixels essentially and it's

480
00:18:18,039 --> 00:18:20,769
gonna look something like this so right

481
00:18:20,769 --> 00:18:22,360
so if you have that background square

482
00:18:22,360 --> 00:18:25,480
and then you know the it's Cayenne and

483
00:18:25,480 --> 00:18:27,610
then I'm sorry on and then we have this

484
00:18:27,610 --> 00:18:30,129
pink one and then the white dots so how

485
00:18:30,129 --> 00:18:31,419
might we go about like creating this

486
00:18:31,419 --> 00:18:33,070
right if we were just given that Dom and

487
00:18:33,070 --> 00:18:35,590
and we need to make it into this well

488
00:18:35,590 --> 00:18:37,470
the first step may be to go through and

489
00:18:37,470 --> 00:18:40,360
paid from back to front so we would

490
00:18:40,360 --> 00:18:42,940
basically fill in the pixels of this

491
00:18:42,940 --> 00:18:45,190
like frame thing right this image one by

492
00:18:45,190 --> 00:18:46,929
one where we put in blue blue blue and

493
00:18:46,929 --> 00:18:48,610
then eventually strap late you can go

494
00:18:48,610 --> 00:18:50,139
fill it the whole thing and the next

495
00:18:50,139 --> 00:18:52,330
step that we could do is to go to that

496
00:18:52,330 --> 00:18:53,980
next child element that ii did that's

497
00:18:53,980 --> 00:18:56,740
square it's pink and we fill in you know

498
00:18:56,740 --> 00:18:58,480
just fill in the pixels boom boom boom

499
00:18:58,480 --> 00:19:00,999
the values and whole thing or curse

500
00:19:00,999 --> 00:19:02,409
again to the children and we go through

501
00:19:02,409 --> 00:19:03,879
when you fill in all the for the J and

502
00:19:03,879 --> 00:19:08,710
the s and that's that's pretty simple

503
00:19:08,710 --> 00:19:12,309
right so that's essentially what boils

504
00:19:12,309 --> 00:19:13,690
down to the process of rendering that's

505
00:19:13,690 --> 00:19:14,919
pretty simple naive approach of how to

506
00:19:14,919 --> 00:19:17,440
do it let's think about for a second

507
00:19:17,440 --> 00:19:18,970
like how many operations we were doing

508
00:19:18,970 --> 00:19:21,730
do it in this naive approach basically

509
00:19:21,730 --> 00:19:23,530
we had that twenty by twenty square so

510
00:19:23,530 --> 00:19:25,570
in the 10 by 10 square and then seven by

511
00:19:25,570 --> 00:19:27,250
five that we did on top of that so this

512
00:19:27,250 --> 00:19:28,659
results in about five hundred and thirty

513
00:19:28,659 --> 00:19:32,049
five pixel fill operations so that's the

514
00:19:32,049 --> 00:19:33,429
kind of like I'm out of time it would

515
00:19:33,429 --> 00:19:34,840
take to generate every one of these

516
00:19:34,840 --> 00:19:37,120
frames right but we know like the

517
00:19:37,120 --> 00:19:39,429
average screen goes about at 60 frames

518
00:19:39,429 --> 00:19:41,650
per second so multiply this out and

519
00:19:41,650 --> 00:19:43,590
we're looking at for this tiny screen

520
00:19:43,590 --> 00:19:47,500
32,000 operations to do this per second

521
00:19:47,500 --> 00:19:50,110
right so for the modern CPU this is

522
00:19:50,110 --> 00:19:52,450
obviously no problem to do however if

523
00:19:52,450 --> 00:19:54,070
you consider like a much bigger case you

524
00:19:54,070 --> 00:19:56,110
can imagine this can start to get really

525
00:19:56,110 --> 00:19:58,539
expensive right so like a maybe map air

526
00:19:58,539 --> 00:20:00,159
screen where you have nine nine nine

527
00:20:00,159 --> 00:20:02,980
hundred five you know 1440 now you're

528
00:20:02,980 --> 00:20:04,570
talking about a lot of operations like

529
00:20:04,570 --> 00:20:06,370
just over you know close to about two

530
00:20:06,370 --> 00:20:08,740
million so that's simply just amount of

531
00:20:08,740 --> 00:20:10,090
time it takes to fill in these pixels

532
00:20:10,090 --> 00:20:12,370
right but even worse I

533
00:20:12,370 --> 00:20:15,220
oh sorry right so that's a person for

534
00:20:15,220 --> 00:20:17,860
frame and then overall you're looking at

535
00:20:17,860 --> 00:20:18,700
102

536
00:20:18,700 --> 00:20:20,850
you know million per per second

537
00:20:20,850 --> 00:20:22,929
operations have to do for that so be

538
00:20:22,929 --> 00:20:24,549
considered like that a an average system

539
00:20:24,549 --> 00:20:26,380
is is doing a lot more things than just

540
00:20:26,380 --> 00:20:28,210
rendering this is a lot of time to do

541
00:20:28,210 --> 00:20:29,830
this naive approach you have a lot of

542
00:20:29,830 --> 00:20:31,270
room programs going on different windows

543
00:20:31,270 --> 00:20:32,980
bunch of tabs open you're talking about

544
00:20:32,980 --> 00:20:34,419
a lot of different people doing this

545
00:20:34,419 --> 00:20:36,340
amount of work and that just becomes too

546
00:20:36,340 --> 00:20:39,340
much doesn't scale and if you consider

547
00:20:39,340 --> 00:20:41,890
even worse you're looking at about 600

548
00:20:41,890 --> 00:20:45,580
megabits per second like for just

549
00:20:45,580 --> 00:20:47,799
pushing this one set of frames from from

550
00:20:47,799 --> 00:20:49,600
your screen over to the GPU which is

551
00:20:49,600 --> 00:20:52,450
just a ton of data transfer we can just

552
00:20:52,450 --> 00:20:55,929
totally bogged on the system right so so

553
00:20:55,929 --> 00:20:57,250
basically this doesn't quite scale right

554
00:20:57,250 --> 00:20:59,440
this this is not a good approach we

555
00:20:59,440 --> 00:21:02,590
can't possibly make fast webpages with

556
00:21:02,590 --> 00:21:05,770
this so in comes the role of compositing

557
00:21:05,770 --> 00:21:08,320
right so so basically in that first

558
00:21:08,320 --> 00:21:09,909
approach there we were we were just

559
00:21:09,909 --> 00:21:12,580
running through and and kind of doing

560
00:21:12,580 --> 00:21:16,030
all rendering as like one pass right but

561
00:21:16,030 --> 00:21:17,740
compositing is this notion of breaking

562
00:21:17,740 --> 00:21:20,169
up a step of where you're you're

563
00:21:20,169 --> 00:21:21,730
combining visual elements from separate

564
00:21:21,730 --> 00:21:24,580
sources into like one source so so we

565
00:21:24,580 --> 00:21:25,659
were kind of doing this implicitly

566
00:21:25,659 --> 00:21:28,059
before when when we drew from back to

567
00:21:28,059 --> 00:21:30,490
front we did like the the one color the

568
00:21:30,490 --> 00:21:32,140
next color over top we were

569
00:21:32,140 --> 00:21:34,179
by the by the method of drawing we were

570
00:21:34,179 --> 00:21:36,040
actually implicitly compositing

571
00:21:36,040 --> 00:21:40,480
appropriately so so instead let's break

572
00:21:40,480 --> 00:21:41,740
this up into two different steps two

573
00:21:41,740 --> 00:21:43,809
discrete steps right so the first one is

574
00:21:43,809 --> 00:21:45,309
drawing and the second one is

575
00:21:45,309 --> 00:21:47,559
compositing like I said so in order to

576
00:21:47,559 --> 00:21:50,890
do this we need to be able to take every

577
00:21:50,890 --> 00:21:52,090
element and give it its own little

578
00:21:52,090 --> 00:21:53,679
section of memory that it can do the

579
00:21:53,679 --> 00:21:55,870
drawing into initially and then we'll do

580
00:21:55,870 --> 00:21:57,160
the second step that I'll explain in a

581
00:21:57,160 --> 00:21:58,480
second it's compositing which is the

582
00:21:58,480 --> 00:22:00,429
process of combining all of those

583
00:22:00,429 --> 00:22:02,440
separate images into this one that we

584
00:22:02,440 --> 00:22:05,919
need to give over to the GPU right so so

585
00:22:05,919 --> 00:22:07,660
let's start by looking at it we had like

586
00:22:07,660 --> 00:22:10,360
that we have the three different look

587
00:22:10,360 --> 00:22:11,679
call them layers so these are basically

588
00:22:11,679 --> 00:22:14,950
like a little like off-screen kind of

589
00:22:14,950 --> 00:22:17,230
frames per element that we're giving so

590
00:22:17,230 --> 00:22:18,520
our Dom was pretty simple we had that

591
00:22:18,520 --> 00:22:20,500
you know the body we had a little pink

592
00:22:20,500 --> 00:22:23,250
layer for that background div and then

593
00:22:23,250 --> 00:22:26,140
and then we have this j/s layer which is

594
00:22:26,140 --> 00:22:27,330
just a bunch of those little divs that

595
00:22:27,330 --> 00:22:29,260
we're just the simply the white dots

596
00:22:29,260 --> 00:22:36,400
right so so we have here is it's

597
00:22:36,400 --> 00:22:39,220
basically these chunks of memory that we

598
00:22:39,220 --> 00:22:41,260
needs drawing as our first step so we're

599
00:22:41,260 --> 00:22:43,059
gonna go in fill is in like before same

600
00:22:43,059 --> 00:22:46,150
process we go through you know the cyan

601
00:22:46,150 --> 00:22:48,610
dots and then all the pink dots and then

602
00:22:48,610 --> 00:22:51,610
the Jas ones and now that we have these

603
00:22:51,610 --> 00:22:52,809
layers we're gonna do the second step

604
00:22:52,809 --> 00:22:54,669
which is compositing so this is simply

605
00:22:54,669 --> 00:22:57,370
the process of taking the contents of

606
00:22:57,370 --> 00:22:59,830
the one layer and copying into the other

607
00:22:59,830 --> 00:23:02,710
and instead of going back to front here

608
00:23:02,710 --> 00:23:05,470
we're doing now front to back so we take

609
00:23:05,470 --> 00:23:07,240
the like the foremost elements that

610
00:23:07,240 --> 00:23:09,309
would be in the front of the page so

611
00:23:09,309 --> 00:23:11,200
that is an example here we take all of

612
00:23:11,200 --> 00:23:12,610
those little divs that make up little J

613
00:23:12,610 --> 00:23:15,040
s dots and we are literally copying

614
00:23:15,040 --> 00:23:17,740
those into the pink one so that we

615
00:23:17,740 --> 00:23:20,260
composite it into the pink one in the

616
00:23:20,260 --> 00:23:22,120
right location right so it's simply just

617
00:23:22,120 --> 00:23:25,419
a copy and then we copy that pink one in

618
00:23:25,419 --> 00:23:26,740
to the appropriate location be

619
00:23:26,740 --> 00:23:29,169
composited into the into the overall

620
00:23:29,169 --> 00:23:32,320
body and now basically the layer of the

621
00:23:32,320 --> 00:23:34,990
body finally has the contents inside of

622
00:23:34,990 --> 00:23:38,080
it that we need to give over the GPU so

623
00:23:38,080 --> 00:23:39,640
you may be asking yourself like what's

624
00:23:39,640 --> 00:23:41,860
the point of this like we just allocate

625
00:23:41,860 --> 00:23:43,300
a bunch of more memory and did just as

626
00:23:43,300 --> 00:23:44,820
much work but we

627
00:23:44,820 --> 00:23:46,919
you know didn't gain anything but you

628
00:23:46,919 --> 00:23:49,259
have to consider what happens when

629
00:23:49,259 --> 00:23:51,210
things are happening first at a larger

630
00:23:51,210 --> 00:23:52,649
scale you have a lot of things you're

631
00:23:52,649 --> 00:23:54,419
drawing on your page and perhaps your

632
00:23:54,419 --> 00:23:57,120
even you know adding effects like if you

633
00:23:57,120 --> 00:23:59,880
scroll literally the elements are moving

634
00:23:59,880 --> 00:24:01,350
around or you do an effect like you just

635
00:24:01,350 --> 00:24:04,440
saw that's a lot of if we were do that

636
00:24:04,440 --> 00:24:06,740
repaint every time we were literally

637
00:24:06,740 --> 00:24:08,970
like an old method of just simply

638
00:24:08,970 --> 00:24:10,139
rendering in one pass

639
00:24:10,139 --> 00:24:12,240
we were redrawing or frame like over and

640
00:24:12,240 --> 00:24:13,350
over and over and I said before you know

641
00:24:13,350 --> 00:24:15,480
600 megabits per second like throughput

642
00:24:15,480 --> 00:24:17,220
to the GPU all of that that was a lot of

643
00:24:17,220 --> 00:24:19,289
time so in this compositing path though

644
00:24:19,289 --> 00:24:21,600
we can instead skip all that rendering

645
00:24:21,600 --> 00:24:23,129
compositing that we did for that pink

646
00:24:23,129 --> 00:24:25,379
layer and we can just use the contents

647
00:24:25,379 --> 00:24:27,090
of that layer and recompose it in two

648
00:24:27,090 --> 00:24:29,879
different locations in that overall blue

649
00:24:29,879 --> 00:24:31,799
layer right that's hot most layer so

650
00:24:31,799 --> 00:24:32,940
that basically saves us a ton of work

651
00:24:32,940 --> 00:24:35,690
every time we can go a bit faster here

652
00:24:35,690 --> 00:24:41,250
so they're obviously trade-offs we have

653
00:24:41,250 --> 00:24:42,779
allocated a bunch more memory to get

654
00:24:42,779 --> 00:24:44,840
some speed ups and how we do things

655
00:24:44,840 --> 00:24:48,179
so of course memory is not limitless you

656
00:24:48,179 --> 00:24:52,500
you definitely have you know a kind of a

657
00:24:52,500 --> 00:24:53,940
trade-off of how many layers you should

658
00:24:53,940 --> 00:24:56,100
be allocating dependant on you know how

659
00:24:56,100 --> 00:24:57,629
much performance you need perhaps to

660
00:24:57,629 --> 00:24:59,909
like speed up the rendering so it's

661
00:24:59,909 --> 00:25:02,159
important remember this now now keep in

662
00:25:02,159 --> 00:25:03,840
mind at this point the talk we haven't

663
00:25:03,840 --> 00:25:05,220
yet talked about hardware versus

664
00:25:05,220 --> 00:25:06,779
software we basically everything we've

665
00:25:06,779 --> 00:25:08,370
been doing to like do this rendering and

666
00:25:08,370 --> 00:25:10,379
this compositing this drawing has all

667
00:25:10,379 --> 00:25:11,669
been happening you can just do it in

668
00:25:11,669 --> 00:25:13,200
software like any program could do this

669
00:25:13,200 --> 00:25:16,440
right so so now it's interesting to

670
00:25:16,440 --> 00:25:18,149
consider how might we use the hardware

671
00:25:18,149 --> 00:25:21,120
to speed up some of this stuff well

672
00:25:21,120 --> 00:25:22,230
first like let's think about like what's

673
00:25:22,230 --> 00:25:25,409
slow here right so CPU rendering takes a

674
00:25:25,409 --> 00:25:26,610
lot of time that's what we were just

675
00:25:26,610 --> 00:25:28,080
doing just in software just filling in

676
00:25:28,080 --> 00:25:30,019
those pixels right as we know them

677
00:25:30,019 --> 00:25:32,669
that's a ton of operations right the

678
00:25:32,669 --> 00:25:34,110
second part was this really expensive to

679
00:25:34,110 --> 00:25:35,460
eventually take that product and push it

680
00:25:35,460 --> 00:25:37,409
over to the GPU that's just like copies

681
00:25:37,409 --> 00:25:39,480
are really expensive to go to the GPU so

682
00:25:39,480 --> 00:25:40,710
we want to minimize those things

683
00:25:40,710 --> 00:25:42,200
altogether right

684
00:25:42,200 --> 00:25:46,200
so luckily if you look at any like

685
00:25:46,200 --> 00:25:47,519
graphics hardware you always see like

686
00:25:47,519 --> 00:25:49,440
there's some sort of amount of megabytes

687
00:25:49,440 --> 00:25:51,629
that the card has well that's the GPUs

688
00:25:51,629 --> 00:25:53,429
memory right so so what's the point of

689
00:25:53,429 --> 00:25:54,690
this memory like how could we use this

690
00:25:54,690 --> 00:25:56,700
here well if you think back to our

691
00:25:56,700 --> 00:25:58,560
process of doing you know the draw

692
00:25:58,560 --> 00:26:00,380
the layers and then compositing step

693
00:26:00,380 --> 00:26:02,580
that compositing step had a bunch of

694
00:26:02,580 --> 00:26:04,170
these just chunks of memory these layers

695
00:26:04,170 --> 00:26:05,550
that we've generated and not really

696
00:26:05,550 --> 00:26:07,560
changing they're kind of just there so

697
00:26:07,560 --> 00:26:09,630
what if we instead copy them over to the

698
00:26:09,630 --> 00:26:12,300
GPUs memory so we say hey JP you GPU

699
00:26:12,300 --> 00:26:13,470
hold on to the east right we've just

700
00:26:13,470 --> 00:26:15,660
drawn these cool so we draw them once

701
00:26:15,660 --> 00:26:18,660
and give them to them and then and then

702
00:26:18,660 --> 00:26:22,410
so while we need at this point to to

703
00:26:22,410 --> 00:26:23,760
basically finish the process is if we

704
00:26:23,760 --> 00:26:26,220
just had a way to tell the GPU hey take

705
00:26:26,220 --> 00:26:27,660
these layers right and squish them

706
00:26:27,660 --> 00:26:30,300
together because that's like the last

707
00:26:30,300 --> 00:26:32,670
step right well luckily this is exactly

708
00:26:32,670 --> 00:26:34,440
what GPU is designed to do incredibly

709
00:26:34,440 --> 00:26:36,030
well right so these textures that you

710
00:26:36,030 --> 00:26:38,550
have on the GPU GPU acts like a

711
00:26:38,550 --> 00:26:40,080
compositor for us because we give them

712
00:26:40,080 --> 00:26:42,420
the simple lightweight commands on any

713
00:26:42,420 --> 00:26:43,680
given frame that we're drawing to make

714
00:26:43,680 --> 00:26:45,000
like say our animation around the screen

715
00:26:45,000 --> 00:26:46,650
or scrolling we're saying hey take those

716
00:26:46,650 --> 00:26:48,780
layers and rearranged like recompose it

717
00:26:48,780 --> 00:26:50,580
that that pink one to be on the blue one

718
00:26:50,580 --> 00:26:52,200
in this next location next location next

719
00:26:52,200 --> 00:26:53,940
location that kind of communication is

720
00:26:53,940 --> 00:26:55,890
really fast copying those frames every

721
00:26:55,890 --> 00:26:58,080
time not fast so this is something that

722
00:26:58,080 --> 00:27:01,350
the GPU is designed for it's a great

723
00:27:01,350 --> 00:27:05,160
sandwich maker and this is basically

724
00:27:05,160 --> 00:27:07,980
yeah this is basically this is

725
00:27:07,980 --> 00:27:09,750
accelerated compositing this is exactly

726
00:27:09,750 --> 00:27:11,550
what we do in WebKit this is the process

727
00:27:11,550 --> 00:27:15,690
so back to translate see right so what's

728
00:27:15,690 --> 00:27:18,540
going on here with translate C well it's

729
00:27:18,540 --> 00:27:20,070
doing exactly this it's kicking us into

730
00:27:20,070 --> 00:27:22,860
a mode where we start doing it in the in

731
00:27:22,860 --> 00:27:24,030
the second fashion where you start

732
00:27:24,030 --> 00:27:25,650
allocating these layers for things that

733
00:27:25,650 --> 00:27:28,320
you translate zeon because we we can't

734
00:27:28,320 --> 00:27:30,630
afford to not handle this 3d case where

735
00:27:30,630 --> 00:27:31,740
you need to do it or else it's just

736
00:27:31,740 --> 00:27:33,780
incredibly slow so we jump into

737
00:27:33,780 --> 00:27:34,980
compositing mode we start allocating

738
00:27:34,980 --> 00:27:36,060
layers so those things you give

739
00:27:36,060 --> 00:27:38,220
translate Z 2 which means that they also

740
00:27:38,220 --> 00:27:39,600
start to have all this extra memory

741
00:27:39,600 --> 00:27:41,730
right so this is kind of like the it's

742
00:27:41,730 --> 00:27:43,200
like the be careful message right this

743
00:27:43,200 --> 00:27:44,340
is where you're walking with the really

744
00:27:44,340 --> 00:27:45,900
heavy stick when you start translating Z

745
00:27:45,900 --> 00:27:48,840
on everything but of course you can get

746
00:27:48,840 --> 00:27:49,800
really fast

747
00:27:49,800 --> 00:27:51,540
yups if you're doing the kind of thing

748
00:27:51,540 --> 00:27:53,430
that would basically be draw once in a

749
00:27:53,430 --> 00:27:54,420
layer and move it around the page

750
00:27:54,420 --> 00:27:56,430
because that hardware compositing is

751
00:27:56,430 --> 00:27:58,170
what works really fast right in this

752
00:27:58,170 --> 00:28:00,300
mode cool so let's go back to our

753
00:28:00,300 --> 00:28:03,480
example and use a little thing called

754
00:28:03,480 --> 00:28:05,910
WebKit debug borders so check out what's

755
00:28:05,910 --> 00:28:07,200
going on in our example when we added

756
00:28:07,200 --> 00:28:14,659
translate see

757
00:28:14,669 --> 00:28:17,200
so those words are following really

758
00:28:17,200 --> 00:28:20,739
sweet from the top and so now we see we

759
00:28:20,739 --> 00:28:22,299
see that like every single word has this

760
00:28:22,299 --> 00:28:24,639
debug board around it now I'm not gonna

761
00:28:24,639 --> 00:28:25,929
go into too much detail about this but

762
00:28:25,929 --> 00:28:27,220
this is basically a little debug mode

763
00:28:27,220 --> 00:28:29,139
that we have in WebKit to look at which

764
00:28:29,139 --> 00:28:31,779
elements on the page are actually

765
00:28:31,779 --> 00:28:33,429
getting these layers so they're so

766
00:28:33,429 --> 00:28:34,929
they're actually getting memory assigned

767
00:28:34,929 --> 00:28:36,220
to them that they get to draw into

768
00:28:36,220 --> 00:28:37,960
that's reserved for just them and then

769
00:28:37,960 --> 00:28:39,639
it's also backed by GPU memory right

770
00:28:39,639 --> 00:28:41,830
that we that we use in order to do this

771
00:28:41,830 --> 00:28:45,429
accelerated compositing last step so

772
00:28:45,429 --> 00:28:46,809
obvious you can see this like a plenty

773
00:28:46,809 --> 00:28:47,859
of things in the page that are getting

774
00:28:47,859 --> 00:28:50,139
these these little green boxes however

775
00:28:50,139 --> 00:28:51,789
we're doing this well because we're not

776
00:28:51,789 --> 00:28:53,169
overusing them there's nothing in the

777
00:28:53,169 --> 00:28:54,940
page that's like getting these layers

778
00:28:54,940 --> 00:28:56,710
that doesn't need it to like all the

779
00:28:56,710 --> 00:28:59,669
words in the background for example so

780
00:28:59,669 --> 00:29:01,720
this is a perfect sample of how to use

781
00:29:01,720 --> 00:29:09,159
it correctly and yeah so by the end of

782
00:29:09,159 --> 00:29:09,789
talk here

783
00:29:09,789 --> 00:29:12,489
and so just as like one more point right

784
00:29:12,489 --> 00:29:15,039
is if I guess for fun if you if you

785
00:29:15,039 --> 00:29:17,409
consider like ways to minimize the usage

786
00:29:17,409 --> 00:29:18,999
of it use it just for the kind of cases

787
00:29:18,999 --> 00:29:20,200
where you're doing those things that

788
00:29:20,200 --> 00:29:22,690
would would benefit from accelerating

789
00:29:22,690 --> 00:29:24,309
accelerating the compositing and you

790
00:29:24,309 --> 00:29:25,359
could even get like really nice effects

791
00:29:25,359 --> 00:29:27,039
like this in page so we kind of made a

792
00:29:27,039 --> 00:29:28,059
different version of the game where

793
00:29:28,059 --> 00:29:30,909
we're just really taxing a lot of things

794
00:29:30,909 --> 00:29:34,960
being moved around and we have a little

795
00:29:34,960 --> 00:29:37,809
bit of time left so so yeah so that was

796
00:29:37,809 --> 00:29:39,820
a quick run-through of how accelerated

797
00:29:39,820 --> 00:29:43,480
compositing works in WebKit and and how

798
00:29:43,480 --> 00:29:46,149
rendering in general works in a in a

799
00:29:46,149 --> 00:30:01,510
browser I don't have any questions

800
00:30:01,520 --> 00:30:06,000
so the other browsers don't have this

801
00:30:06,000 --> 00:30:06,750
problem

802
00:30:06,750 --> 00:30:09,539
why does WebKit have this problem where

803
00:30:09,539 --> 00:30:10,950
they need to create a new layers for

804
00:30:10,950 --> 00:30:13,049
every hardware accelerated thing which

805
00:30:13,049 --> 00:30:15,600
problem the the the other browsers like

806
00:30:15,600 --> 00:30:16,950
have one layer and they Hardware

807
00:30:16,950 --> 00:30:18,659
accelerate everything on that at least

808
00:30:18,659 --> 00:30:21,090
according to their tech Doc's well right

809
00:30:21,090 --> 00:30:23,760
um they may be accelerating like the

810
00:30:23,760 --> 00:30:26,940
actual like body that all the time which

811
00:30:26,940 --> 00:30:28,260
essentially is kind of always the case

812
00:30:28,260 --> 00:30:29,580
because you always need to have some

813
00:30:29,580 --> 00:30:31,140
sort of reserved chunk of memory that

814
00:30:31,140 --> 00:30:33,240
you eventually draw into the ideas if

815
00:30:33,240 --> 00:30:37,020
you are using intermediary chunks of

816
00:30:37,020 --> 00:30:38,309
memory right like little buffers along

817
00:30:38,309 --> 00:30:40,580
the way to do part of the drawing into

818
00:30:40,580 --> 00:30:43,350
which anyone does when they're doing

819
00:30:43,350 --> 00:30:45,659
this compositing right it's when you

820
00:30:45,659 --> 00:30:46,980
choose to do it is perhaps what's

821
00:30:46,980 --> 00:30:47,970
interesting

822
00:30:47,970 --> 00:30:50,640
so something web has a problem it's it's

823
00:30:50,640 --> 00:30:52,500
the thing that solves the problem of

824
00:30:52,500 --> 00:30:58,870
doing it faster yeah that makes me sense

825
00:30:58,880 --> 00:31:01,679
so you showed the example where you're

826
00:31:01,679 --> 00:31:03,809
accidentally triggering the hole reflow

827
00:31:03,809 --> 00:31:07,529
in the loop how can you how can you tell

828
00:31:07,529 --> 00:31:09,679
that you're doing that or how can you

829
00:31:09,679 --> 00:31:12,630
it's a sort of way to see that that's

830
00:31:12,630 --> 00:31:13,770
happening you know all you can see is

831
00:31:13,770 --> 00:31:17,340
the performance sucks but right yeah so

832
00:31:17,340 --> 00:31:19,980
so of course you can always like try to

833
00:31:19,980 --> 00:31:21,120
be cognizant of that but at the end of

834
00:31:21,120 --> 00:31:23,250
day like when you're debugging the the

835
00:31:23,250 --> 00:31:25,409
biggest tip is to go into the into the

836
00:31:25,409 --> 00:31:28,500
web inspector and look at timelines if

837
00:31:28,500 --> 00:31:31,110
you want to spin yeah I'm so in the web

838
00:31:31,110 --> 00:31:33,600
inspector you can look at the timeline

839
00:31:33,600 --> 00:31:35,640
of layout and rendering and when you're

840
00:31:35,640 --> 00:31:37,470
triggering all this reflow what you can

841
00:31:37,470 --> 00:31:39,510
see is a lot of life we layout really

842
00:31:39,510 --> 00:31:41,610
our layout we layout in between two

843
00:31:41,610 --> 00:31:44,309
renders so you really ideally only want

844
00:31:44,309 --> 00:31:46,159
to do one real layout before one render

845
00:31:46,159 --> 00:31:48,510
another good way for this specific cases

846
00:31:48,510 --> 00:31:50,850
that you can actually find this online I

847
00:31:50,850 --> 00:31:52,320
think several people have talked about

848
00:31:52,320 --> 00:31:54,750
it or blogged about it they listed all

849
00:31:54,750 --> 00:31:56,580
the values that would trigger this tree

850
00:31:56,580 --> 00:31:58,559
layout and they're called computer

851
00:31:58,559 --> 00:32:00,510
values in WebKit and if you look for the

852
00:32:00,510 --> 00:32:02,370
earlier function I show like update

853
00:32:02,370 --> 00:32:04,620
layout ignoring blah blah blah if you

854
00:32:04,620 --> 00:32:06,090
search for that then that pretty much

855
00:32:06,090 --> 00:32:07,830
lists out everything that you need to be

856
00:32:07,830 --> 00:32:11,850
cognizant of not using too much

857
00:32:11,860 --> 00:32:13,779
all right I think we're at a time we're

858
00:32:13,779 --> 00:32:15,880
gonna have a break now and come back in

