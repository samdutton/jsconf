1
00:00:00,000 --> 00:00:06,500

Oh

2
00:00:06,510 --> 00:00:10,120
okay I want to talk about how we change

3
00:00:10,120 --> 00:00:13,480
the web that's my job at Mozilla is to

4
00:00:13,480 --> 00:00:16,779
change the web and forgive me if this

5
00:00:16,779 --> 00:00:18,449
talk it's a little philosophical

6
00:00:18,449 --> 00:00:21,760
hopefully things will get more juicy and

7
00:00:21,760 --> 00:00:26,109
technical as the day goes on in fact I'm

8
00:00:26,109 --> 00:00:28,150
probably the most awake person here my

9
00:00:28,150 --> 00:00:29,560
body thinks it's like four or five in

10
00:00:29,560 --> 00:00:32,469
the afternoon so you can all sleep

11
00:00:32,469 --> 00:00:33,340
through this if you don't like

12
00:00:33,340 --> 00:00:37,809
philosophy alright so whenever people

13
00:00:37,809 --> 00:00:39,340
talk about changing technology you can

14
00:00:39,340 --> 00:00:41,710
you see them start to divide into two

15
00:00:41,710 --> 00:00:43,120
different camps there's the revolution

16
00:00:43,120 --> 00:00:45,070
style and the evolution style and that's

17
00:00:45,070 --> 00:00:46,840
what I'm going to talk about today and

18
00:00:46,840 --> 00:00:49,059
I'm not going to try to convince you

19
00:00:49,059 --> 00:00:51,489
that one is right or wrong but i do want

20
00:00:51,489 --> 00:00:53,039
to convince you that evolution works

21
00:00:53,039 --> 00:00:55,870
remarkably well and sometimes when you

22
00:00:55,870 --> 00:00:57,610
think it's time for a revolution maybe

23
00:00:57,610 --> 00:00:59,050
you should stop and think would

24
00:00:59,050 --> 00:01:02,500
evolution work better so again i'm not

25
00:01:02,500 --> 00:01:06,539
i'm not a anti revolution here in fact

26
00:01:06,539 --> 00:01:09,630
the organization that I work for Mozilla

27
00:01:09,630 --> 00:01:12,670
was actually founded on a kind of

28
00:01:12,670 --> 00:01:16,299
revolution and I think at this it's in

29
00:01:16,299 --> 00:01:18,219
2014 it's been long enough that a lot of

30
00:01:18,219 --> 00:01:20,349
people don't actually know the sort of

31
00:01:20,349 --> 00:01:23,109
creation story of Mozilla I was pretty

32
00:01:23,109 --> 00:01:24,369
young when this happened I think I was

33
00:01:24,369 --> 00:01:26,950
in my early 20s I'm betting a lot of you

34
00:01:26,950 --> 00:01:31,749
were even younger than that so it's a

35
00:01:31,749 --> 00:01:33,909
really fascinating story back then

36
00:01:33,909 --> 00:01:35,619
Netscape and Microsoft were the two

37
00:01:35,619 --> 00:01:38,049
dominant browser you know the two

38
00:01:38,049 --> 00:01:39,329
companies with the dominant browsers

39
00:01:39,329 --> 00:01:41,859
netscape communicator i think it was

40
00:01:41,859 --> 00:01:43,959
called at the time and internet explorer

41
00:01:43,959 --> 00:01:46,599
and netscape was doomed internet

42
00:01:46,599 --> 00:01:48,039
explorer had undercut their business

43
00:01:48,039 --> 00:01:49,749
model and they suddenly found themselves

44
00:01:49,749 --> 00:01:52,479
a company with no source of revenue and

45
00:01:52,479 --> 00:01:54,639
they knew this this was not they weren't

46
00:01:54,639 --> 00:01:55,810
fooling themselves into thinking that

47
00:01:55,810 --> 00:01:59,649
they had some some way to survive so

48
00:01:59,649 --> 00:02:01,869
they could see that Microsoft was really

49
00:02:01,869 --> 00:02:03,609
poised to basically take over the web

50
00:02:03,609 --> 00:02:07,689
and in this kind of desperate situation

51
00:02:07,689 --> 00:02:09,640
they actually pulled a pretty amazing

52
00:02:09,640 --> 00:02:12,459
move particularly for that time when

53
00:02:12,459 --> 00:02:14,090
open source was not as

54
00:02:14,090 --> 00:02:18,650
as popular common a thing on the

55
00:02:18,650 --> 00:02:22,310
thirty-first of march in 1998 they

56
00:02:22,310 --> 00:02:24,230
decided to open the source to netscape

57
00:02:24,230 --> 00:02:27,410
and create mozilla org which was going

58
00:02:27,410 --> 00:02:30,400
to be this worldwide organization of

59
00:02:30,400 --> 00:02:33,920
open-source collaborators now this was

60
00:02:33,920 --> 00:02:35,390
really sort of it there was a kind of

61
00:02:35,390 --> 00:02:37,099
two parts to this to what makes us a

62
00:02:37,099 --> 00:02:40,340
revolution one was this was maybe

63
00:02:40,340 --> 00:02:42,560
possibly going to rescue netscape from

64
00:02:42,560 --> 00:02:45,709
almost certain death and we know how

65
00:02:45,709 --> 00:02:48,590
that story ends but more importantly I

66
00:02:48,590 --> 00:02:51,380
think this move saved the web I think if

67
00:02:51,380 --> 00:02:53,390
they hadn't done this there would have

68
00:02:53,390 --> 00:02:56,900
been very little that anybody could do

69
00:02:56,900 --> 00:02:59,420
to stop Microsoft from from taking over

70
00:02:59,420 --> 00:03:03,200
the web as it turns out this revolution

71
00:03:03,200 --> 00:03:07,269
was actually televised so I have a

72
00:03:07,269 --> 00:03:09,650
little clip here I want to show you from

73
00:03:09,650 --> 00:03:12,680
a documentary called code rush which was

74
00:03:12,680 --> 00:03:15,049
actually they followed Netscape people

75
00:03:15,049 --> 00:03:17,690
around during this period and they

76
00:03:17,690 --> 00:03:20,480
actually filmed the moment when Jamie's

77
00:03:20,480 --> 00:03:23,090
a winski who was a well-known developer

78
00:03:23,090 --> 00:03:24,920
at Netscape pushed the code out to the

79
00:03:24,920 --> 00:03:27,530
web and for me this is a pretty heady

80
00:03:27,530 --> 00:03:29,090
moment in the history of the web this

81
00:03:29,090 --> 00:03:31,819
was this was a moment of revolution and

82
00:03:31,819 --> 00:03:33,650
what led up to this was a whole bunch of

83
00:03:33,650 --> 00:03:36,829
pressure they were behind schedule they

84
00:03:36,829 --> 00:03:38,120
were finding out at the last minute that

85
00:03:38,120 --> 00:03:39,799
they had potentially patent encumbered

86
00:03:39,799 --> 00:03:41,030
code that they were going to have to

87
00:03:41,030 --> 00:03:42,919
replace and there were people pulling

88
00:03:42,919 --> 00:03:44,660
all nighters to replace patent and come

89
00:03:44,660 --> 00:03:46,160
pre code with open source code so it was

90
00:03:46,160 --> 00:03:47,840
really down to the wire and the

91
00:03:47,840 --> 00:03:50,840
documentary kind of plays that up so

92
00:03:50,840 --> 00:03:52,250
here they are on March 31st that's

93
00:03:52,250 --> 00:03:55,010
American style sorry one way to learn to

94
00:03:55,010 --> 00:03:57,620
run a marathon is put a person now 26

95
00:03:57,620 --> 00:03:59,989
miles into the desert and say you know

96
00:03:59,989 --> 00:04:01,489
that there's this bomb on your back

97
00:04:01,489 --> 00:04:02,660
that's going to go off in a certain

98
00:04:02,660 --> 00:04:04,130
length of time if you don't get into the

99
00:04:04,130 --> 00:04:06,709
town well that'll motivate you to get in

100
00:04:06,709 --> 00:04:08,180
but there's a certain chance that you'll

101
00:04:08,180 --> 00:04:10,640
be blown up

102
00:04:10,640 --> 00:04:14,120
bye i'm 55 well i'm so going to be late

103
00:04:14,120 --> 00:04:16,850
hurry up welcome everybody to the

104
00:04:16,850 --> 00:04:18,109
conference call thanks for joining us

105
00:04:18,109 --> 00:04:20,959
this morning today a Netscape announced

106
00:04:20,959 --> 00:04:22,700
that the first developer release of its

107
00:04:22,700 --> 00:04:25,130
communicator 50 source code is available

108
00:04:25,130 --> 00:04:27,370
for download from the mozilla org

109
00:04:27,370 --> 00:04:33,290
website and you know where tarus go

110
00:04:33,290 --> 00:04:35,780
second floor it's the first floor like

111
00:04:35,780 --> 00:04:37,910
way on the other side and then today on

112
00:04:37,910 --> 00:04:39,590
the end of March as we announced we are

113
00:04:39,590 --> 00:04:41,840
pushing the code out to the web as they

114
00:04:41,840 --> 00:04:43,490
say and we're delighted to be part of it

115
00:04:43,490 --> 00:04:44,840
and we're very excited to see what

116
00:04:44,840 --> 00:04:47,390
happens the good news is the marathoner

117
00:04:47,390 --> 00:04:48,919
is now coming into town with that bomb

118
00:04:48,919 --> 00:04:50,360
on his back and it looks like he's going

119
00:04:50,360 --> 00:04:57,070
to make it this is the moment of truth

120
00:04:57,070 --> 00:04:59,930
they don't have a theoretical framework

121
00:04:59,930 --> 00:05:01,910
to write software they're just writing

122
00:05:01,910 --> 00:05:08,840
it hi just like hitting the baseball if

123
00:05:08,840 --> 00:05:11,870
their code gets a home run nobody's

124
00:05:11,870 --> 00:05:14,000
asking questions well this doesn't make

125
00:05:14,000 --> 00:05:15,620
sense or why do you do that why does it

126
00:05:15,620 --> 00:05:29,210
work nobody cares why it works wait

127
00:05:29,210 --> 00:05:34,490
what's good um well it's not connected

128
00:05:34,490 --> 00:05:37,729
to the machine that controls the ftp

129
00:05:37,729 --> 00:05:40,070
push it's like not answering is it Lotus

130
00:05:40,070 --> 00:05:44,180
its blast that flash oh yeah maybe Reba

131
00:05:44,180 --> 00:05:49,430
to uh hmm oh yeah right yay Super Max

132
00:05:49,430 --> 00:05:51,140
there Phoenix is there and just there

133
00:05:51,140 --> 00:06:05,730
we're done

134
00:06:05,740 --> 00:06:09,890
jamie is here i'm told that means that

135
00:06:09,890 --> 00:06:11,780
we have now pushed the source out on the

136
00:06:11,780 --> 00:06:17,560
note that's correct i decided not to a

137
00:06:17,560 --> 00:06:23,180
stupid idea that's a story interesting

138
00:06:23,180 --> 00:06:35,850
to go

139
00:06:35,860 --> 00:06:39,199
for a moment everyone at Netscape takes

140
00:06:39,199 --> 00:06:43,040
a breather

141
00:06:43,050 --> 00:06:45,219
he said I think it's going to work out

142
00:06:45,219 --> 00:06:47,529
there at the end I think my favorite

143
00:06:47,529 --> 00:06:48,969
part of that is the little Duran Duran

144
00:06:48,969 --> 00:06:52,719
playing in the background alright this

145
00:06:52,719 --> 00:06:56,949
was a this was a seriously revolutionary

146
00:06:56,949 --> 00:06:58,300
move and they knew what they were doing

147
00:06:58,300 --> 00:07:00,610
this wasn't just about saving Netscape

148
00:07:00,610 --> 00:07:03,550
they understood that they were also

149
00:07:03,550 --> 00:07:06,129
creating a parachute to rescue a

150
00:07:06,129 --> 00:07:08,080
competition on the web to be able to

151
00:07:08,080 --> 00:07:12,819
have another another option after the

152
00:07:12,819 --> 00:07:15,249
end of Netscape so Jamie Zielinski was

153
00:07:15,249 --> 00:07:17,169
replying a year later after AOL had

154
00:07:17,169 --> 00:07:18,819
acquired Netscape and people were kind

155
00:07:18,819 --> 00:07:22,599
of facepalming and giving up and he was

156
00:07:22,599 --> 00:07:24,659
saying don't don't forget what we did

157
00:07:24,659 --> 00:07:28,810
because we opened the the source code

158
00:07:28,810 --> 00:07:31,509
because legally nobody can close that

159
00:07:31,509 --> 00:07:33,249
source code back up he's saying nobody

160
00:07:33,249 --> 00:07:34,839
can undo what has been done the Mozilla

161
00:07:34,839 --> 00:07:36,610
code is out there and nobody can ever

162
00:07:36,610 --> 00:07:39,639
take that away from you ever so that you

163
00:07:39,639 --> 00:07:40,870
know it took a couple of years for that

164
00:07:40,870 --> 00:07:42,189
source code to really land on its feet

165
00:07:42,189 --> 00:07:43,990
and for Firefox to become a big thing

166
00:07:43,990 --> 00:07:46,839
but this was a big a big bold move in

167
00:07:46,839 --> 00:07:52,360
the history of of the web so revolution

168
00:07:52,360 --> 00:07:54,729
is really exciting and it lets you raise

169
00:07:54,729 --> 00:07:56,680
guns over your head and and red flags

170
00:07:56,680 --> 00:07:58,120
and it's it's pretty hard to get excited

171
00:07:58,120 --> 00:07:59,800
about things like evolution because

172
00:07:59,800 --> 00:08:02,439
evolution tends to not be quite as

173
00:08:02,439 --> 00:08:04,949
pretty not maybe not quite as exciting

174
00:08:04,949 --> 00:08:10,029
it produces some interesting effects but

175
00:08:10,029 --> 00:08:11,289
i'm going to try anyway to convince you

176
00:08:11,289 --> 00:08:13,930
that there's there's there's times for

177
00:08:13,930 --> 00:08:15,759
revolution but there's also times when

178
00:08:15,759 --> 00:08:17,080
maybe revolution isn't what's called for

179
00:08:17,080 --> 00:08:18,339
and maybe evolution would actually work

180
00:08:18,339 --> 00:08:21,669
better so you know when they saw where

181
00:08:21,669 --> 00:08:23,560
we're at death's door here the web is

182
00:08:23,560 --> 00:08:25,719
almost over okay that's time for

183
00:08:25,719 --> 00:08:28,270
revolution but often you hear people say

184
00:08:28,270 --> 00:08:29,860
you know you read on like hacker news oh

185
00:08:29,860 --> 00:08:31,389
this you know JavaScript such an ugly

186
00:08:31,389 --> 00:08:33,699
language oh it has with we should just

187
00:08:33,699 --> 00:08:36,069
start over again but look every

188
00:08:36,069 --> 00:08:37,959
technology has words and maybe having

189
00:08:37,959 --> 00:08:39,760
warts isn't actually enough cause for

190
00:08:39,760 --> 00:08:45,040
revolution so one of the one of the

191
00:08:45,040 --> 00:08:47,079
topics where you see people asking for

192
00:08:47,079 --> 00:08:50,290
revolution all the time is this you know

193
00:08:50,290 --> 00:08:51,459
why don't you have a byte code language

194
00:08:51,459 --> 00:08:52,260
on the

195
00:08:52,260 --> 00:08:54,720
and for a long time was ill argued

196
00:08:54,720 --> 00:08:58,440
against trying to standardize a bytecode

197
00:08:58,440 --> 00:09:02,310
vm but it was hard to really it's hard

198
00:09:02,310 --> 00:09:04,110
to just say no you really want to offer

199
00:09:04,110 --> 00:09:07,890
an alternative and so when we look at

200
00:09:07,890 --> 00:09:09,810
the the calls for a byte code language

201
00:09:09,810 --> 00:09:11,730
it's actually better to take a step back

202
00:09:11,730 --> 00:09:13,050
and say what are the problems that

203
00:09:13,050 --> 00:09:14,790
people are actually trying to solve the

204
00:09:14,790 --> 00:09:16,560
problems that that they're identifying

205
00:09:16,560 --> 00:09:18,120
these are real actual problems are

206
00:09:18,120 --> 00:09:21,450
things like JavaScript lacks the

207
00:09:21,450 --> 00:09:23,880
features that you need for other

208
00:09:23,880 --> 00:09:25,710
languages to compile to the web so if

209
00:09:25,710 --> 00:09:27,900
you want the web to be a compiled target

210
00:09:27,900 --> 00:09:29,430
for some other language if you want to

211
00:09:29,430 --> 00:09:30,630
be able to port some other code to the

212
00:09:30,630 --> 00:09:32,400
web there are some features missing in

213
00:09:32,400 --> 00:09:33,650
JavaScript that make that difficult

214
00:09:33,650 --> 00:09:36,300
another one is is performance you know

215
00:09:36,300 --> 00:09:38,160
JavaScript historically has been slow or

216
00:09:38,160 --> 00:09:39,390
maybe it's not always slow sometimes

217
00:09:39,390 --> 00:09:40,950
it's fast but it's very hard to predict

218
00:09:40,950 --> 00:09:42,570
when it's going to be fast because jits

219
00:09:42,570 --> 00:09:45,270
are extremely dynamic heuristic systems

220
00:09:45,270 --> 00:09:47,400
it's very hard to get repeatedly

221
00:09:47,400 --> 00:09:49,620
repeatable reliable performance it's

222
00:09:49,620 --> 00:09:51,000
hard to get reliable performance across

223
00:09:51,000 --> 00:09:54,240
multiple browsers and for people who

224
00:09:54,240 --> 00:09:55,830
really wanted to squeeze out maximum

225
00:09:55,830 --> 00:09:57,030
performance particularly the games

226
00:09:57,030 --> 00:09:59,010
industry jit compilation can also

227
00:09:59,010 --> 00:10:01,410
provide produce performance problems of

228
00:10:01,410 --> 00:10:03,690
its own just the act of compiling code

229
00:10:03,690 --> 00:10:06,720
can itself introduce jank in your in

230
00:10:06,720 --> 00:10:09,060
your code so these were all real issues

231
00:10:09,060 --> 00:10:11,160
but instead of just saying well let's

232
00:10:11,160 --> 00:10:12,650
start from scratch and lets you know

233
00:10:12,650 --> 00:10:14,910
create a new standards body and try to

234
00:10:14,910 --> 00:10:17,220
get all the companies together and and

235
00:10:17,220 --> 00:10:19,080
come up with something out of whole

236
00:10:19,080 --> 00:10:21,480
cloth we decided to take a different

237
00:10:21,480 --> 00:10:24,540
approach at Mozilla so the first step

238
00:10:24,540 --> 00:10:27,090
was well we know that we can compile to

239
00:10:27,090 --> 00:10:28,230
JavaScript there's lots of languages

240
00:10:28,230 --> 00:10:30,150
that compiled to JavaScript let's try

241
00:10:30,150 --> 00:10:32,820
compiling high-performance programs to

242
00:10:32,820 --> 00:10:35,610
JavaScript and see how well we can do so

243
00:10:35,610 --> 00:10:37,350
my colleague alone zack i created the

244
00:10:37,350 --> 00:10:39,960
Emscripten compiler this was sort of the

245
00:10:39,960 --> 00:10:42,420
first step of our process it was just to

246
00:10:42,420 --> 00:10:45,000
say okay it's probably impossible to

247
00:10:45,000 --> 00:10:46,140
commit this is actually what he told me

248
00:10:46,140 --> 00:10:47,520
he said he was sure that this was

249
00:10:47,520 --> 00:10:50,190
impossible to compile C++ to JavaScript

250
00:10:50,190 --> 00:10:51,780
but he might as well give it a try and

251
00:10:51,780 --> 00:10:55,290
see where it falls down and he along

252
00:10:55,290 --> 00:10:56,610
with everyone else was shocked to see

253
00:10:56,610 --> 00:10:58,070
that it worked better than he expected

254
00:10:58,070 --> 00:11:00,630
and he was able to leverage a lot of the

255
00:11:00,630 --> 00:11:02,730
hard work of the l a-- vm toolchain so

256
00:11:02,730 --> 00:11:03,840
he didn't have to write a lot

257
00:11:03,840 --> 00:11:06,660
back end code but even so it was a

258
00:11:06,660 --> 00:11:08,040
pretty amazing feat to take a low-level

259
00:11:08,040 --> 00:11:11,280
language and compiler to JavaScript the

260
00:11:11,280 --> 00:11:12,750
next step was to figure out well how can

261
00:11:12,750 --> 00:11:14,400
we get better performance out of this so

262
00:11:14,400 --> 00:11:16,650
he's built this compiler that produces

263
00:11:16,650 --> 00:11:18,180
JavaScript now we look need to look at

264
00:11:18,180 --> 00:11:19,530
our JavaScript engine and figure out

265
00:11:19,530 --> 00:11:21,480
well what kinds of performance

266
00:11:21,480 --> 00:11:23,100
bottlenecks are we hitting there how can

267
00:11:23,100 --> 00:11:25,320
we optimize our JavaScript engine it

268
00:11:25,320 --> 00:11:26,610
turns out that he wasn't the only one

269
00:11:26,610 --> 00:11:29,220
doing this there were other compilers

270
00:11:29,220 --> 00:11:31,680
being used on the web and so multiple

271
00:11:31,680 --> 00:11:33,530
engines were actually starting to

272
00:11:33,530 --> 00:11:35,220
multiple JavaScript engines were

273
00:11:35,220 --> 00:11:37,140
starting to improve the performance for

274
00:11:37,140 --> 00:11:39,150
this sort of strange style of code that

275
00:11:39,150 --> 00:11:43,260
was being generated by compilers and so

276
00:11:43,260 --> 00:11:44,430
over time we were closing those

277
00:11:44,430 --> 00:11:46,590
performance gaps and then the final step

278
00:11:46,590 --> 00:11:49,800
was when we got together alone Zac i

279
00:11:49,800 --> 00:11:51,990
Luke Wagner another colleague of mine

280
00:11:51,990 --> 00:11:53,760
and I got together and said can we

281
00:11:53,760 --> 00:11:57,960
actually formalize what this dialect of

282
00:11:57,960 --> 00:12:00,570
javascript is that we're generating from

283
00:12:00,570 --> 00:12:02,430
the inscription compiler in a way that

284
00:12:02,430 --> 00:12:04,350
we could actually recognize that code

285
00:12:04,350 --> 00:12:06,600
ahead of time in our JavaScript engine

286
00:12:06,600 --> 00:12:09,810
validate it and actually prove that we

287
00:12:09,810 --> 00:12:11,760
can get a higher degree of optimizations

288
00:12:11,760 --> 00:12:14,670
that are guaranteed to be correct so

289
00:12:14,670 --> 00:12:16,230
basically it was can we lock in that

290
00:12:16,230 --> 00:12:21,120
last level of performance and this

291
00:12:21,120 --> 00:12:24,060
worked really well and it also turned a

292
00:12:24,060 --> 00:12:27,390
lot of stomachs so you know I showed you

293
00:12:27,390 --> 00:12:29,040
those pictures of evolution evolution

294
00:12:29,040 --> 00:12:31,200
doesn't always provide the the prettiest

295
00:12:31,200 --> 00:12:33,360
results so one of the one of the things

296
00:12:33,360 --> 00:12:35,640
that bothers people about as MJS is that

297
00:12:35,640 --> 00:12:38,970
it's this very bizarre style of code so

298
00:12:38,970 --> 00:12:40,770
you know I could I could defend myself

299
00:12:40,770 --> 00:12:42,600
and say well you know any machine

300
00:12:42,600 --> 00:12:44,250
generated code is ugly you know you can

301
00:12:44,250 --> 00:12:45,630
look at any bytecode language and it's

302
00:12:45,630 --> 00:12:47,280
going to look just as ugly but that's

303
00:12:47,280 --> 00:12:49,590
really not the point the point here is

304
00:12:49,590 --> 00:12:52,820
that this is an evolutionary strategy

305
00:12:52,820 --> 00:12:55,920
where a bytecode language has to get

306
00:12:55,920 --> 00:12:57,330
over this initial hump that's very

307
00:12:57,330 --> 00:13:00,510
difficult which is that no content

308
00:13:00,510 --> 00:13:02,370
authors nobody who's actually building

309
00:13:02,370 --> 00:13:05,520
web apps could start to use a new byte

310
00:13:05,520 --> 00:13:07,620
code language until enough browsers had

311
00:13:07,620 --> 00:13:09,090
actually implemented that byte code

312
00:13:09,090 --> 00:13:11,520
language and it had reached enough end

313
00:13:11,520 --> 00:13:13,620
users and this creates a kind of chicken

314
00:13:13,620 --> 00:13:15,900
and egg problem where developers aren't

315
00:13:15,900 --> 00:13:17,230
creating demand because they're

316
00:13:17,230 --> 00:13:18,970
building it so browser vendors aren't

317
00:13:18,970 --> 00:13:20,800
don't have the incentive to build it and

318
00:13:20,800 --> 00:13:22,330
so browser vendors aren't building it

319
00:13:22,330 --> 00:13:24,040
which means that developers aren't using

320
00:13:24,040 --> 00:13:25,390
it it's very hard to get off the ground

321
00:13:25,390 --> 00:13:27,370
whereas with as MJ s what we did was we

322
00:13:27,370 --> 00:13:28,930
said well this is just JavaScript this

323
00:13:28,930 --> 00:13:32,350
actually works in any JavaScript engine

324
00:13:32,350 --> 00:13:34,090
as long as it has typed arrays support

325
00:13:34,090 --> 00:13:35,740
and typed arrays are you know had long

326
00:13:35,740 --> 00:13:38,770
been standardized so from the get-go as

327
00:13:38,770 --> 00:13:40,810
andreas worked in multiple browsers once

328
00:13:40,810 --> 00:13:43,360
ie10 added typed array support it

329
00:13:43,360 --> 00:13:45,910
started working in IE as well so you can

330
00:13:45,910 --> 00:13:47,470
write as MJ s code that works in IE

331
00:13:47,470 --> 00:13:52,360
safari opera chrome firefox so this was

332
00:13:52,360 --> 00:13:54,580
a technology that could work from the

333
00:13:54,580 --> 00:13:57,400
start and it was one that web developers

334
00:13:57,400 --> 00:13:59,230
could start using and that meant that we

335
00:13:59,230 --> 00:14:01,030
could bootstrap this evolutionary

336
00:14:01,030 --> 00:14:02,830
process and actually get things moving

337
00:14:02,830 --> 00:14:04,990
faster so just to prove that this is

338
00:14:04,990 --> 00:14:07,360
real and because I love to show off my

339
00:14:07,360 --> 00:14:10,450
colleagues work I'm going to do just one

340
00:14:10,450 --> 00:14:21,350
as MJ s demo so what this demo is is the

341
00:14:21,360 --> 00:14:23,860
the Triple A game company epic they do

342
00:14:23,860 --> 00:14:24,970
some of the sort of Hollywood

343
00:14:24,970 --> 00:14:28,180
blockbuster style games their latest

344
00:14:28,180 --> 00:14:33,720
engine is called Unreal Engine 4 and

345
00:14:33,720 --> 00:14:42,880
this is a port see oh this isn't fitting

346
00:14:42,880 --> 00:14:45,880
on the screen here we go so this is a

347
00:14:45,880 --> 00:14:49,080
port of a demo of Unreal Engine 4

348
00:14:49,080 --> 00:14:53,290
running with no plugins in a nightly

349
00:14:53,290 --> 00:14:55,780
build of Firefox I don't know how many

350
00:14:55,780 --> 00:14:57,820
lines of C++ code it is but I think it's

351
00:14:57,820 --> 00:15:00,370
at least a million lines it's about a 68

352
00:15:00,370 --> 00:15:03,929
megabyte payload

353
00:15:03,939 --> 00:15:05,949
you can see there's some pretty nice

354
00:15:05,949 --> 00:15:07,929
lighting effects this is actually not

355
00:15:07,929 --> 00:15:10,959
even finished so unreal 4 is not I think

356
00:15:10,959 --> 00:15:13,029
it hasn't even been released or maybe

357
00:15:13,029 --> 00:15:14,169
it's just in the process of being

358
00:15:14,169 --> 00:15:18,339
released so when we first met with

359
00:15:18,339 --> 00:15:21,220
unreal or with epic to help them port

360
00:15:21,220 --> 00:15:24,699
unreal 3 a year ago they got it working

361
00:15:24,699 --> 00:15:27,489
in less than a week so we're proving

362
00:15:27,489 --> 00:15:29,709
that it's actually possible to compile

363
00:15:29,709 --> 00:15:31,389
high-performance JavaScript code or hype

364
00:15:31,389 --> 00:15:35,769
upon its native code to the web mostly

365
00:15:35,769 --> 00:15:37,389
push button and that's getting better

366
00:15:37,389 --> 00:15:40,569
and better but at this point now they're

367
00:15:40,569 --> 00:15:41,649
taking products they haven't even

368
00:15:41,649 --> 00:15:45,759
released yet so let's see if we can go

369
00:15:45,759 --> 00:15:53,010
to some fun

370
00:15:53,020 --> 00:15:54,670
I like this demo because i'm not a big

371
00:15:54,670 --> 00:15:56,640
gamer and I like the atmosphere of it

372
00:15:56,640 --> 00:16:04,900
it's not as violent so we have other

373
00:16:04,900 --> 00:16:09,760
partners to the other really big name is

374
00:16:09,760 --> 00:16:12,600
the city the other really big name in

375
00:16:12,600 --> 00:16:15,130
game engines is unity and we just

376
00:16:15,130 --> 00:16:16,090
announced with them at the game

377
00:16:16,090 --> 00:16:18,340
developers conference that the unity

378
00:16:18,340 --> 00:16:28,100
engine has also been ported to as MJS

379
00:16:28,110 --> 00:16:30,130
somewhere there's like a big thing that

380
00:16:30,130 --> 00:16:34,990
takes me wise me away I don't know like

381
00:16:34,990 --> 00:16:36,670
I say I'm not much of a game game player

382
00:16:36,670 --> 00:16:40,750
but anyway so there's a taste of native

383
00:16:40,750 --> 00:16:43,360
code running in the browser with no

384
00:16:43,360 --> 00:16:51,070
plugins alright so the next thing I want

385
00:16:51,070 --> 00:16:55,000
to talk about is a sort of mini movement

386
00:16:55,000 --> 00:16:56,650
that we started calling one javascript

387
00:16:56,650 --> 00:17:00,100
or one j/s my nanny tells me that my

388
00:17:00,100 --> 00:17:02,110
infant daughter really loves one

389
00:17:02,110 --> 00:17:04,150
direction so i don't think i could name

390
00:17:04,150 --> 00:17:09,490
their songs if I heard them so when I

391
00:17:09,490 --> 00:17:11,920
first got involved with tc39 the

392
00:17:11,920 --> 00:17:13,660
standards committee they were in the

393
00:17:13,660 --> 00:17:15,760
process of doing addition for of ECMO

394
00:17:15,760 --> 00:17:19,180
scripts and let me kind of get you into

395
00:17:19,180 --> 00:17:20,830
the heads of people who do standards

396
00:17:20,830 --> 00:17:23,230
people who do standards have to cope

397
00:17:23,230 --> 00:17:25,900
every day with the mistakes that were

398
00:17:25,900 --> 00:17:27,790
made in the past in a technology and

399
00:17:27,790 --> 00:17:29,050
they desperately wish that they could

400
00:17:29,050 --> 00:17:32,050
fix them and the web is enormous and you

401
00:17:32,050 --> 00:17:34,390
can't take anything back and so when

402
00:17:34,390 --> 00:17:37,200
you're looking at you know billions of

403
00:17:37,200 --> 00:17:39,070
applications that are all using these

404
00:17:39,070 --> 00:17:40,510
broken features and you really wish you

405
00:17:40,510 --> 00:17:41,650
could get rid of the features but you

406
00:17:41,650 --> 00:17:42,880
can't do it without breaking them

407
00:17:42,880 --> 00:17:45,340
there's this enormous temptation to say

408
00:17:45,340 --> 00:17:47,860
let's let's create a clean slate by

409
00:17:47,860 --> 00:17:49,840
having a some sort of opt-in where you

410
00:17:49,840 --> 00:17:51,460
can choose a new version of the language

411
00:17:51,460 --> 00:17:53,230
and there we can actually throw away

412
00:17:53,230 --> 00:17:54,790
some features that we never liked or

413
00:17:54,790 --> 00:17:56,380
that get in the way or cause problems

414
00:17:56,380 --> 00:17:58,720
for other features that we want so when

415
00:17:58,720 --> 00:18:00,250
I first joined that was the plan of

416
00:18:00,250 --> 00:18:01,360
action that was the plan of record for

417
00:18:01,360 --> 00:18:03,220
addition for we were going to have this

418
00:18:03,220 --> 00:18:05,290
new mime type application / JavaScript

419
00:18:05,290 --> 00:18:07,750
semicolon version equals 4 and that was

420
00:18:07,750 --> 00:18:09,700
going to be this grand new utopia that

421
00:18:09,700 --> 00:18:12,880
everyone was going to program in I say I

422
00:18:12,880 --> 00:18:14,050
have to get you in the mind of a

423
00:18:14,050 --> 00:18:15,400
standards person because any developer

424
00:18:15,400 --> 00:18:17,920
looks at this and thinks that they're

425
00:18:17,920 --> 00:18:22,270
out of their minds but when you really

426
00:18:22,270 --> 00:18:23,710
really wish that you could change the

427
00:18:23,710 --> 00:18:25,570
technology it's very natural to want to

428
00:18:25,570 --> 00:18:27,340
do that so the kinds of things that we

429
00:18:27,340 --> 00:18:28,600
were talking about doing back then were

430
00:18:28,600 --> 00:18:30,220
we wanted to introduce these generator

431
00:18:30,220 --> 00:18:32,620
functions and at the time the the

432
00:18:32,620 --> 00:18:34,000
problem we were running into was they

433
00:18:34,000 --> 00:18:35,650
needed this new yield keyword but yield

434
00:18:35,650 --> 00:18:37,180
wasn't a reserved word and there's

435
00:18:37,180 --> 00:18:39,460
actual code out there on the web that

436
00:18:39,460 --> 00:18:41,440
uses yield as an identifier so this was

437
00:18:41,440 --> 00:18:43,090
just an incompatibility how could we do

438
00:18:43,090 --> 00:18:45,490
this and the easy answer was well we'll

439
00:18:45,490 --> 00:18:47,560
just force them to opt into the new

440
00:18:47,560 --> 00:18:48,970
language and then with the new language

441
00:18:48,970 --> 00:18:52,300
we can reserve new keywords so edition 4

442
00:18:52,300 --> 00:18:53,860
got cancelled for all sorts of various

443
00:18:53,860 --> 00:18:56,800
reasons if if you want to hear the story

444
00:18:56,800 --> 00:18:58,240
you're going to have to get me a beer

445
00:18:58,240 --> 00:19:02,470
but even though that got canceled then

446
00:19:02,470 --> 00:19:06,880
when we moved on to addition 5 did a few

447
00:19:06,880 --> 00:19:08,200
things but then when we moved on to

448
00:19:08,200 --> 00:19:09,520
addition 6 we kind of went back to the

449
00:19:09,520 --> 00:19:11,050
same plan again we were we're going to

450
00:19:11,050 --> 00:19:12,220
have this version opt-in and we were

451
00:19:12,220 --> 00:19:13,480
going to be able to break things and so

452
00:19:13,480 --> 00:19:14,260
we were going to be able to have

453
00:19:14,260 --> 00:19:16,090
generator functions that that had this

454
00:19:16,090 --> 00:19:19,240
reserved keyword yield that was the plan

455
00:19:19,240 --> 00:19:21,220
for a long time and it was allowing us

456
00:19:21,220 --> 00:19:23,140
to think big thoughts about really

457
00:19:23,140 --> 00:19:24,490
breaking compatibility and changing

458
00:19:24,490 --> 00:19:26,100
things and doing things in new ways and

459
00:19:26,100 --> 00:19:29,260
one day my colleague Sam Tobin Hawk said

460
00:19:29,260 --> 00:19:31,210
who's a professor at Indiana University

461
00:19:31,210 --> 00:19:34,120
back in the states he and I were I am I

462
00:19:34,120 --> 00:19:35,350
and he said you know I just had this

463
00:19:35,350 --> 00:19:36,790
nagging feeling in the back of my head

464
00:19:36,790 --> 00:19:40,420
that maybe we were so close to

465
00:19:40,420 --> 00:19:42,400
compatibility with the existing versions

466
00:19:42,400 --> 00:19:43,960
of Java Script maybe we actually don't

467
00:19:43,960 --> 00:19:45,970
need the opt-in and that was like this

468
00:19:45,970 --> 00:19:47,920
big you know being slapped by a

469
00:19:47,920 --> 00:19:49,300
two-by-four over the head it had just

470
00:19:49,300 --> 00:19:52,960
never occurred to me before that that we

471
00:19:52,960 --> 00:19:55,120
should reconsider that so we worked

472
00:19:55,120 --> 00:19:56,710
through it and we realize we can do

473
00:19:56,710 --> 00:19:57,970
everything we're trying to do without

474
00:19:57,970 --> 00:20:00,640
actually needing an opt-in so for

475
00:20:00,640 --> 00:20:03,160
generators for example by giving a

476
00:20:03,160 --> 00:20:06,460
special distinct syntax for what a

477
00:20:06,460 --> 00:20:07,900
generator function looks like that

478
00:20:07,900 --> 00:20:10,480
allows us to contextually reserved the

479
00:20:10,480 --> 00:20:12,010
keyword yield basically there are sort

480
00:20:12,010 --> 00:20:15,010
of feature by feature you could call

481
00:20:15,010 --> 00:20:15,860
them hacks or you

482
00:20:15,860 --> 00:20:22,880
you call them finesses so this allows us

483
00:20:22,880 --> 00:20:24,559
to add new features to javascript in

484
00:20:24,559 --> 00:20:26,090
such a way that you don't have to decide

485
00:20:26,090 --> 00:20:27,799
I'm going all-in for the new language

486
00:20:27,799 --> 00:20:29,240
version if I just want this one feature

487
00:20:29,240 --> 00:20:31,130
and that's really critical for the

488
00:20:31,130 --> 00:20:32,870
evolution story for people to be able to

489
00:20:32,870 --> 00:20:35,809
piece by piece adopt new technology they

490
00:20:35,809 --> 00:20:37,580
need to not have to worry about if I

491
00:20:37,580 --> 00:20:38,960
pull in this one piece am I going to

492
00:20:38,960 --> 00:20:40,429
pull in all these other pieces as well

493
00:20:40,429 --> 00:20:43,340
is that going to break other parts of my

494
00:20:43,340 --> 00:20:45,500
code that already exists can I just you

495
00:20:45,500 --> 00:20:47,570
know can I just adopt one piece at a

496
00:20:47,570 --> 00:20:50,090
time and the easier you make it for

497
00:20:50,090 --> 00:20:52,010
people to adopt one piece at a time the

498
00:20:52,010 --> 00:20:53,510
faster you get to turn that evolutionary

499
00:20:53,510 --> 00:20:57,890
crank so I sent an email to the mailing

500
00:20:57,890 --> 00:20:59,990
list called es6 doesn't need opt-in and

501
00:20:59,990 --> 00:21:02,210
I and I coined the slogan just one

502
00:21:02,210 --> 00:21:05,299
JavaScript and that has become a sort of

503
00:21:05,299 --> 00:21:09,140
a guiding principle for us all along is

504
00:21:09,140 --> 00:21:11,179
let's not fork the language let's keep

505
00:21:11,179 --> 00:21:13,780
within one language and add new features

506
00:21:13,780 --> 00:21:16,460
piece by piece rather than trying to

507
00:21:16,460 --> 00:21:18,650
create whole new versions of JavaScript

508
00:21:18,650 --> 00:21:20,390
this is important for several reasons it

509
00:21:20,390 --> 00:21:24,100
helps focus our work it prevents us from

510
00:21:24,100 --> 00:21:26,270
going off in directions that are just

511
00:21:26,270 --> 00:21:28,580
kind of pointless anyway it enforces

512
00:21:28,580 --> 00:21:30,230
consistency the more we fork the

513
00:21:30,230 --> 00:21:31,520
language the more we have the more

514
00:21:31,520 --> 00:21:33,500
developers have to deal with well what

515
00:21:33,500 --> 00:21:35,929
happens if I have es5 code in es6 code

516
00:21:35,929 --> 00:21:36,919
and they need to interact with each

517
00:21:36,919 --> 00:21:39,679
other and like i said it helps adoption

518
00:21:39,679 --> 00:21:42,010
because it allows people to pick up

519
00:21:42,010 --> 00:21:44,630
features one at a time and of course

520
00:21:44,630 --> 00:21:45,980
when you're talking about language

521
00:21:45,980 --> 00:21:48,200
features they can't just use them like

522
00:21:48,200 --> 00:21:50,150
libraries and use standard polyfills

523
00:21:50,150 --> 00:21:51,890
like they can with api's then they need

524
00:21:51,890 --> 00:21:53,870
to use things like compilers but that's

525
00:21:53,870 --> 00:21:57,799
a real thing now compilers aren't just a

526
00:21:57,799 --> 00:22:00,020
theoretical possibility there's a

527
00:22:00,020 --> 00:22:02,419
standard tool these days for JavaScript

528
00:22:02,419 --> 00:22:05,330
development so in between es for in es6

529
00:22:05,330 --> 00:22:07,460
there was actually another little mode

530
00:22:07,460 --> 00:22:10,190
that gets snuck in there and that was

531
00:22:10,190 --> 00:22:13,880
strict mode and i'm not going to get

532
00:22:13,880 --> 00:22:15,500
into the vagaries of you know what's

533
00:22:15,500 --> 00:22:16,700
good and what's bad about strict mode

534
00:22:16,700 --> 00:22:18,559
except just to say that it's once again

535
00:22:18,559 --> 00:22:20,570
another opt-in mode and it is another

536
00:22:20,570 --> 00:22:22,870
kind of forking of the language and

537
00:22:22,870 --> 00:22:24,740
again it was one of those things where

538
00:22:24,740 --> 00:22:27,290
it was very tempting for people on a

539
00:22:27,290 --> 00:22:28,880
Standards Committee to use

540
00:22:28,880 --> 00:22:31,130
has there are all these pain points so

541
00:22:31,130 --> 00:22:33,260
one of the main ones is function

542
00:22:33,260 --> 00:22:36,590
declarations inside of a block have just

543
00:22:36,590 --> 00:22:38,540
completely incompatible semantics across

544
00:22:38,540 --> 00:22:39,770
different browsers they were actually

545
00:22:39,770 --> 00:22:41,540
never part of the ACMA script standard

546
00:22:41,540 --> 00:22:43,190
and so each browser added it in a

547
00:22:43,190 --> 00:22:45,500
non-standard way and they have some

548
00:22:45,500 --> 00:22:47,210
parts that have overlapping semantics in

549
00:22:47,210 --> 00:22:49,310
some parts that are incompatible and so

550
00:22:49,310 --> 00:22:50,810
it was just hopeless every time we tried

551
00:22:50,810 --> 00:22:52,220
to figure out how can we actually

552
00:22:52,220 --> 00:22:53,930
standardized what the behavior should be

553
00:22:53,930 --> 00:22:56,060
it was impossible to find something that

554
00:22:56,060 --> 00:22:57,740
worked on all browsers and that wouldn't

555
00:22:57,740 --> 00:22:59,780
break existing content so strict mode

556
00:22:59,780 --> 00:23:01,430
gave us an in for doing that we could

557
00:23:01,430 --> 00:23:03,440
say oh well for new code that ops into

558
00:23:03,440 --> 00:23:05,450
strict mode we can fix the semantics we

559
00:23:05,450 --> 00:23:07,070
can make it clean we can make it what we

560
00:23:07,070 --> 00:23:09,830
want it to be but the problem is again

561
00:23:09,830 --> 00:23:11,780
you're forcing people to opt into this

562
00:23:11,780 --> 00:23:14,990
new mode strict mode had some some

563
00:23:14,990 --> 00:23:17,750
issues of its own as far as like you

564
00:23:17,750 --> 00:23:19,460
know how to mash together non strict

565
00:23:19,460 --> 00:23:22,430
code and strict code so in equus crypt 6

566
00:23:22,430 --> 00:23:24,590
what we're doing is instead of an opt-in

567
00:23:24,590 --> 00:23:26,950
mode or tying strict mode two modules

568
00:23:26,950 --> 00:23:29,210
now modules aren't tied to a whole bunch

569
00:23:29,210 --> 00:23:30,380
of different things this is the one

570
00:23:30,380 --> 00:23:33,080
piece that's tied together but I think

571
00:23:33,080 --> 00:23:35,270
it's really important so for one I think

572
00:23:35,270 --> 00:23:36,860
node has proved to us that people want

573
00:23:36,860 --> 00:23:38,150
to write their code in modules that's

574
00:23:38,150 --> 00:23:39,590
the style that people want to write

575
00:23:39,590 --> 00:23:42,440
programs in so I think that once modules

576
00:23:42,440 --> 00:23:44,840
start landing in all of the browsers or

577
00:23:44,840 --> 00:23:47,150
even once the compilers that people are

578
00:23:47,150 --> 00:23:48,650
building today start becoming prevalent

579
00:23:48,650 --> 00:23:50,210
enough people are really going to want

580
00:23:50,210 --> 00:23:51,890
to use equi script six modules for

581
00:23:51,890 --> 00:23:54,350
writing their code and just by using a

582
00:23:54,350 --> 00:23:56,450
module you'll automatically be put into

583
00:23:56,450 --> 00:23:58,520
strict mode and that means some of those

584
00:23:58,520 --> 00:24:00,530
cleanups that we got to introduce into

585
00:24:00,530 --> 00:24:02,570
the language for strict mode will now

586
00:24:02,570 --> 00:24:04,070
just be applied everywhere and some of

587
00:24:04,070 --> 00:24:05,570
the worst mistakes of Java scripts past

588
00:24:05,570 --> 00:24:08,330
will sort of be automatically fixed for

589
00:24:08,330 --> 00:24:09,770
the vast majority of code that you write

590
00:24:09,770 --> 00:24:11,840
as long as as long as you want to be

591
00:24:11,840 --> 00:24:13,580
using models which I think again is

592
00:24:13,580 --> 00:24:16,760
going to be popular so this is a

593
00:24:16,760 --> 00:24:18,080
one-time fixed we don't get to do this

594
00:24:18,080 --> 00:24:19,580
all the time but modules were an

595
00:24:19,580 --> 00:24:20,810
opportunity and they were up an

596
00:24:20,810 --> 00:24:22,340
opportunity to do this in a way that

597
00:24:22,340 --> 00:24:23,990
didn't force people to use that that

598
00:24:23,990 --> 00:24:26,510
language for king so the basic theme

599
00:24:26,510 --> 00:24:28,250
here is that features are better than

600
00:24:28,250 --> 00:24:30,260
Forks introducing fixes to the language

601
00:24:30,260 --> 00:24:33,080
on a case-by-case basis works much

602
00:24:33,080 --> 00:24:35,540
better than forcing programmers to deal

603
00:24:35,540 --> 00:24:37,490
with sort of a combinatorial explosion

604
00:24:37,490 --> 00:24:39,690
of different versions of ECMO

605
00:24:39,690 --> 00:24:43,000
and modules are just a better tool to

606
00:24:43,000 --> 00:24:44,950
use for opting into strict mode than

607
00:24:44,950 --> 00:24:46,450
modes and it's my hope that in the

608
00:24:46,450 --> 00:24:47,440
future people aren't going to really

609
00:24:47,440 --> 00:24:48,880
think about strict mode anymore it's

610
00:24:48,880 --> 00:24:50,020
just going to be well there's some old

611
00:24:50,020 --> 00:24:51,760
code that's kind of sloppy in this what

612
00:24:51,760 --> 00:24:54,880
we call sloppy mood but but the vast

613
00:24:54,880 --> 00:24:56,320
majority of code will be in modules in

614
00:24:56,320 --> 00:24:57,820
their odd they'll automatically be

615
00:24:57,820 --> 00:25:01,930
strict okay so the last thing I want to

616
00:25:01,930 --> 00:25:04,570
talk about is hermeneutics this is no

617
00:25:04,570 --> 00:25:07,150
relation to my name it's named after the

618
00:25:07,150 --> 00:25:13,960
Greek god Hermes so hermeneutics is the

619
00:25:13,960 --> 00:25:16,050
philosophy of interpretation it's

620
00:25:16,050 --> 00:25:17,740
particularly was invented for

621
00:25:17,740 --> 00:25:19,480
understanding for talking about how do

622
00:25:19,480 --> 00:25:21,910
we understand texts and in the early

623
00:25:21,910 --> 00:25:23,530
days it was all about religious texts

624
00:25:23,530 --> 00:25:27,330
and in particular there's this idea that

625
00:25:27,330 --> 00:25:29,440
was introduced I think in the 20th

626
00:25:29,440 --> 00:25:32,320
century by Heidegger and then some some

627
00:25:32,320 --> 00:25:35,500
later philosophers like gadamer and Max

628
00:25:35,500 --> 00:25:38,320
Weber built on the idea called the

629
00:25:38,320 --> 00:25:40,840
hermeneutic circle so the idea of the

630
00:25:40,840 --> 00:25:43,180
hermeneutic circle you know again this

631
00:25:43,180 --> 00:25:44,590
stuff started out with textual

632
00:25:44,590 --> 00:25:46,900
interpretation but over time it started

633
00:25:46,900 --> 00:25:48,250
to be applied to how do we understand

634
00:25:48,250 --> 00:25:50,170
things in general and the idea was that

635
00:25:50,170 --> 00:25:52,750
if you're reading a book to understand

636
00:25:52,750 --> 00:25:53,950
the book you have to read the individual

637
00:25:53,950 --> 00:25:56,290
parts but then once you've read all of

638
00:25:56,290 --> 00:25:57,640
those individual parts you kind of get

639
00:25:57,640 --> 00:25:58,780
an understanding of the whole and you

640
00:25:58,780 --> 00:26:00,270
can start to interpret the whole book

641
00:26:00,270 --> 00:26:02,440
but once you've got this better

642
00:26:02,440 --> 00:26:03,730
interpretation of the book that would

643
00:26:03,730 --> 00:26:05,320
actually color how you read the part so

644
00:26:05,320 --> 00:26:06,520
you could go back and reread the book

645
00:26:06,520 --> 00:26:08,590
again and refine your understanding of

646
00:26:08,590 --> 00:26:10,330
the book and you can kind of go around

647
00:26:10,330 --> 00:26:12,210
and around in the circle and iteratively

648
00:26:12,210 --> 00:26:17,010
deepen your understanding of the text so

649
00:26:17,010 --> 00:26:20,470
this idea i think is very intuitive for

650
00:26:20,470 --> 00:26:21,970
us because we're used to iterate

651
00:26:21,970 --> 00:26:27,130
oppresses in software and in particular

652
00:26:27,130 --> 00:26:29,230
when it comes to designing web

653
00:26:29,230 --> 00:26:32,620
technology there's kind of an analog of

654
00:26:32,620 --> 00:26:34,900
that big picture small small picture

655
00:26:34,900 --> 00:26:37,210
that micro and macro the macro is that

656
00:26:37,210 --> 00:26:38,610
good design has to be motivated by

657
00:26:38,610 --> 00:26:41,320
end-to-end use cases and workflows we

658
00:26:41,320 --> 00:26:42,880
have to think about what does the the

659
00:26:42,880 --> 00:26:44,230
whole system look like what does the

660
00:26:44,230 --> 00:26:46,150
development model look like does this

661
00:26:46,150 --> 00:26:48,900
language feel good to program in

662
00:26:48,900 --> 00:26:51,990
what does a normal program look like but

663
00:26:51,990 --> 00:26:53,340
in order to actually build that

664
00:26:53,340 --> 00:26:55,410
programming model you have to design the

665
00:26:55,410 --> 00:26:57,720
individual pieces and anyone who spent

666
00:26:57,720 --> 00:26:59,790
time working in design learns that just

667
00:26:59,790 --> 00:27:01,380
like software you want to build things

668
00:27:01,380 --> 00:27:03,000
in small modular pieces little

669
00:27:03,000 --> 00:27:05,190
orthogonal composable pieces that you

670
00:27:05,190 --> 00:27:07,170
can fit together so if you take feature

671
00:27:07,170 --> 00:27:08,520
a and feature be and you put them

672
00:27:08,520 --> 00:27:10,070
together you don't get something

673
00:27:10,070 --> 00:27:13,860
unexpected they just work as the sort of

674
00:27:13,860 --> 00:27:17,760
expected combination of a and B so in

675
00:27:17,760 --> 00:27:19,860
the design process we can really go

676
00:27:19,860 --> 00:27:21,540
through that same harman dudek circle

677
00:27:21,540 --> 00:27:24,180
you design at the individual pieces for

678
00:27:24,180 --> 00:27:25,200
a while and then you have to evaluate

679
00:27:25,200 --> 00:27:27,780
the big picture and you have to go

680
00:27:27,780 --> 00:27:29,880
around the block multiple times I think

681
00:27:29,880 --> 00:27:32,610
this is just a feature of any learning

682
00:27:32,610 --> 00:27:34,410
process is that you're going to get it

683
00:27:34,410 --> 00:27:35,940
wrong in the beginning you're going to

684
00:27:35,940 --> 00:27:38,060
have to learn to throw some parts away

685
00:27:38,060 --> 00:27:40,140
and we understand this in software

686
00:27:40,140 --> 00:27:41,940
completely we talk about you know plan

687
00:27:41,940 --> 00:27:43,680
to throw one away we talk about move

688
00:27:43,680 --> 00:27:45,180
fast and break things we're all used to

689
00:27:45,180 --> 00:27:49,590
the idea of of changing our minds as we

690
00:27:49,590 --> 00:27:52,440
deepen our understanding of things so

691
00:27:52,440 --> 00:27:54,480
when you're developing a product we kind

692
00:27:54,480 --> 00:27:56,700
of have a pretty good handle on this you

693
00:27:56,700 --> 00:27:58,320
sort of have this iterative process

694
00:27:58,320 --> 00:27:59,790
where we develop the product for a while

695
00:27:59,790 --> 00:28:01,920
we ship it we get some user feedback we

696
00:28:01,920 --> 00:28:04,590
evaluate it and invariably it's not

697
00:28:04,590 --> 00:28:06,030
perfect and we go back around the block

698
00:28:06,030 --> 00:28:10,020
again and we refine our product but what

699
00:28:10,020 --> 00:28:11,130
happens when you try to do this with a

700
00:28:11,130 --> 00:28:13,500
standard there's a major problem you

701
00:28:13,500 --> 00:28:15,210
develop the standard for a while you

702
00:28:15,210 --> 00:28:17,280
ship it you evaluate it you get some

703
00:28:17,280 --> 00:28:19,800
developer feedback but now it's out

704
00:28:19,800 --> 00:28:21,750
there on the web and you'll break User

705
00:28:21,750 --> 00:28:24,210
Content if you change it and you can't

706
00:28:24,210 --> 00:28:26,700
break the web and you're stuck you go

707
00:28:26,700 --> 00:28:28,320
one time around the block and you can

708
00:28:28,320 --> 00:28:30,360
never change it again this is just a

709
00:28:30,360 --> 00:28:34,500
broken way for us to evolve the web

710
00:28:34,500 --> 00:28:36,360
because none of us is going to get it

711
00:28:36,360 --> 00:28:38,250
right the first time we're just not good

712
00:28:38,250 --> 00:28:41,400
enough so this is where this movement

713
00:28:41,400 --> 00:28:43,800
called the extensible web came from so

714
00:28:43,800 --> 00:28:45,750
if you go to if you google for

715
00:28:45,750 --> 00:28:47,250
extensible web manifesto you'll find

716
00:28:47,250 --> 00:28:50,040
this website and I'm one of the

717
00:28:50,040 --> 00:28:51,900
undersigned and the basic idea of the

718
00:28:51,900 --> 00:28:54,570
extensible web manifesto was we want to

719
00:28:54,570 --> 00:28:57,960
change the priorities of web standards

720
00:28:57,960 --> 00:28:59,790
and in particular we want to change them

721
00:28:59,790 --> 00:29:01,140
so that we can tighten that feedback

722
00:29:01,140 --> 00:29:01,760
loop

723
00:29:01,760 --> 00:29:03,860
between the editors of the web standards

724
00:29:03,860 --> 00:29:05,300
the ones who are actually creating these

725
00:29:05,300 --> 00:29:07,520
standards and the web developers who are

726
00:29:07,520 --> 00:29:11,840
the ones who are the best equipped to

727
00:29:11,840 --> 00:29:15,980
evaluate to evaluate the work and really

728
00:29:15,980 --> 00:29:17,540
should actually be directly involved in

729
00:29:17,540 --> 00:29:20,480
that work so this is this is where you

730
00:29:20,480 --> 00:29:23,750
come in this is the part where I want to

731
00:29:23,750 --> 00:29:25,340
encourage web developers to take an

732
00:29:25,340 --> 00:29:28,510
active role in evolving the web

733
00:29:28,510 --> 00:29:30,710
historically if you look at the

734
00:29:30,710 --> 00:29:32,930
conversations in standards it's

735
00:29:32,930 --> 00:29:35,930
completely dominated by people who work

736
00:29:35,930 --> 00:29:37,640
for browser vendors people like me and

737
00:29:37,640 --> 00:29:40,070
there's a few hardy developers who are

738
00:29:40,070 --> 00:29:42,770
willing to weather the storm of shouting

739
00:29:42,770 --> 00:29:45,110
matches on mailing lists and well why

740
00:29:45,110 --> 00:29:46,790
didn't you read the last three years of

741
00:29:46,790 --> 00:29:48,860
back messages on this topic before you

742
00:29:48,860 --> 00:29:50,960
came in and and ask that silly question

743
00:29:50,960 --> 00:29:52,130
that I've answered so many times before

744
00:29:52,130 --> 00:29:54,290
or you just don't understand what goes

745
00:29:54,290 --> 00:29:56,360
on in building a web browser or you

746
00:29:56,360 --> 00:29:57,830
missed a security constraint it's

747
00:29:57,830 --> 00:30:00,890
actually incredibly difficult to get up

748
00:30:00,890 --> 00:30:04,010
to speed on all of those things so we

749
00:30:04,010 --> 00:30:07,250
want to get to a world where there's

750
00:30:07,250 --> 00:30:08,720
more of a balance between browser

751
00:30:08,720 --> 00:30:10,790
vendors and web developers who are

752
00:30:10,790 --> 00:30:13,040
thinking about the web platform who are

753
00:30:13,040 --> 00:30:14,690
designing the web platform and evolving

754
00:30:14,690 --> 00:30:18,200
the web platform and I don't have

755
00:30:18,200 --> 00:30:21,980
answers for all of this I do see some

756
00:30:21,980 --> 00:30:25,970
culprits for what's not working in

757
00:30:25,970 --> 00:30:27,890
particular after eight years in this

758
00:30:27,890 --> 00:30:29,660
business I believe that mailing lists

759
00:30:29,660 --> 00:30:31,640
are a failed model of communication I

760
00:30:31,640 --> 00:30:35,060
don't think that they work I also think

761
00:30:35,060 --> 00:30:36,530
that arguing on twitter is a new failed

762
00:30:36,530 --> 00:30:39,200
model of communication I think that

763
00:30:39,200 --> 00:30:41,000
doesn't work either I think Twitter does

764
00:30:41,000 --> 00:30:43,880
have its place I've had a lot of good

765
00:30:43,880 --> 00:30:45,140
conversations where people just want a

766
00:30:45,140 --> 00:30:46,790
quick point of clarification it's an

767
00:30:46,790 --> 00:30:48,740
easier way to get sort of a targeted

768
00:30:48,740 --> 00:30:50,120
answer to something but as soon as

769
00:30:50,120 --> 00:30:51,770
people start disagreeing about something

770
00:30:51,770 --> 00:30:53,900
it is a horrible place to continue a

771
00:30:53,900 --> 00:30:56,030
conversation so I don't have all the

772
00:30:56,030 --> 00:30:58,280
answers I do think an important piece of

773
00:30:58,280 --> 00:31:02,030
this puzzle is github I think that well

774
00:31:02,030 --> 00:31:05,720
we're certainly seeing the w3c and to

775
00:31:05,720 --> 00:31:07,660
some degree tc39 there's more coming

776
00:31:07,660 --> 00:31:09,890
moving more and more of their work to

777
00:31:09,890 --> 00:31:11,270
get hub and I think that's important I

778
00:31:11,270 --> 00:31:12,620
think for ones are socially it's

779
00:31:12,620 --> 00:31:13,940
important it's the world where web

780
00:31:13,940 --> 00:31:14,550
developers

781
00:31:14,550 --> 00:31:16,470
and that's where you know you need to

782
00:31:16,470 --> 00:31:18,240
come to the turf of the people that you

783
00:31:18,240 --> 00:31:20,160
want to engage with but there's also

784
00:31:20,160 --> 00:31:21,660
some tools that I think work better it

785
00:31:21,660 --> 00:31:23,130
allows you to focus conversations a

786
00:31:23,130 --> 00:31:24,960
little bit better by having individual

787
00:31:24,960 --> 00:31:28,410
github issues instead of endless mailing

788
00:31:28,410 --> 00:31:30,330
list threads it helps you focus a little

789
00:31:30,330 --> 00:31:31,980
bit I certainly don't think github

790
00:31:31,980 --> 00:31:33,360
issues are a panacea I don't think

791
00:31:33,360 --> 00:31:36,720
they're perfect but I'm very much

792
00:31:36,720 --> 00:31:39,600
interested in improving the model of

793
00:31:39,600 --> 00:31:43,110
collaboration between web web browser

794
00:31:43,110 --> 00:31:46,200
vendors and web developers so I'd very

795
00:31:46,200 --> 00:31:47,430
much encourage anybody who's interested

796
00:31:47,430 --> 00:31:50,970
to talk to me and and just have some

797
00:31:50,970 --> 00:31:52,920
conversations about ways that we can do

798
00:31:52,920 --> 00:31:55,020
this better but i will say that there's

799
00:31:55,020 --> 00:31:56,610
something very concrete that I think all

800
00:31:56,610 --> 00:31:59,730
of you have the opportunity to do and I

801
00:31:59,730 --> 00:32:00,750
think really does change the

802
00:32:00,750 --> 00:32:02,280
conversation this is a phenomenon I've

803
00:32:02,280 --> 00:32:03,510
seen in the last couple of years and

804
00:32:03,510 --> 00:32:05,670
that is to actually take part in

805
00:32:05,670 --> 00:32:09,450
building polyfills and the variation of

806
00:32:09,450 --> 00:32:10,860
polyfills is prolly phils which is

807
00:32:10,860 --> 00:32:12,120
really probably the most relevant thing

808
00:32:12,120 --> 00:32:14,250
here for those of you who aren't

809
00:32:14,250 --> 00:32:15,840
familiar with the idea polyfill is

810
00:32:15,840 --> 00:32:17,790
simply a shim it's a library that

811
00:32:17,790 --> 00:32:19,680
implements a feature in case it's not

812
00:32:19,680 --> 00:32:22,910
there yet so it's filling a gap in

813
00:32:22,910 --> 00:32:25,710
what's currently deployed by a

814
00:32:25,710 --> 00:32:28,560
particular version of a browser a prolly

815
00:32:28,560 --> 00:32:31,020
Phil is the same idea except it's

816
00:32:31,020 --> 00:32:33,090
applied to a proposed library that

817
00:32:33,090 --> 00:32:35,430
hasn't yet been standardized so if you

818
00:32:35,430 --> 00:32:38,700
want to demonstrate what a feature might

819
00:32:38,700 --> 00:32:39,990
look like a feature that you're

820
00:32:39,990 --> 00:32:42,510
proposing you can build a sort of

821
00:32:42,510 --> 00:32:43,890
candidate polyfill and that's what

822
00:32:43,890 --> 00:32:46,800
people call prolly fills but the other

823
00:32:46,800 --> 00:32:48,600
half is building compilers so if you're

824
00:32:48,600 --> 00:32:50,550
interested in new language features you

825
00:32:50,550 --> 00:32:53,910
can build you can either take one of the

826
00:32:53,910 --> 00:32:55,560
existing compilers such as Google's

827
00:32:55,560 --> 00:32:58,530
tracer or there's a handful of

828
00:32:58,530 --> 00:33:00,630
individual features for es6 that are

829
00:33:00,630 --> 00:33:03,000
being built as individual compilers and

830
00:33:03,000 --> 00:33:05,070
over time people are starting to figure

831
00:33:05,070 --> 00:33:06,330
out ways that they can put those

832
00:33:06,330 --> 00:33:08,730
together so if you actually look at

833
00:33:08,730 --> 00:33:11,130
participating in those you actually are

834
00:33:11,130 --> 00:33:12,930
becoming a kind of browser vendor of

835
00:33:12,930 --> 00:33:14,880
your own you're basically becoming an

836
00:33:14,880 --> 00:33:17,040
implementer of a feature and you will

837
00:33:17,040 --> 00:33:19,590
have a level of depth of insight that

838
00:33:19,590 --> 00:33:21,030
actually many of the browser vendors who

839
00:33:21,030 --> 00:33:22,410
haven't gone through the exercise of

840
00:33:22,410 --> 00:33:24,330
building the future don't and you will

841
00:33:24,330 --> 00:33:26,340
find that you're able to have very high

842
00:33:26,340 --> 00:33:28,080
value conversations

843
00:33:28,080 --> 00:33:29,700
with other people involved in standards

844
00:33:29,700 --> 00:33:32,279
so I just want to give a couple of shout

845
00:33:32,279 --> 00:33:33,330
outs to people who have done a fantastic

846
00:33:33,330 --> 00:33:35,100
job of this so far because I think

847
00:33:35,100 --> 00:33:36,929
they're models that we want to follow so

848
00:33:36,929 --> 00:33:39,510
one of those is ben newman who has built

849
00:33:39,510 --> 00:33:42,450
a tool called regenerator which is an

850
00:33:42,450 --> 00:33:46,950
es6 generator compiler another group of

851
00:33:46,950 --> 00:33:49,590
people I think three of the leaders of

852
00:33:49,590 --> 00:33:51,630
the project are are Brian Donovan

853
00:33:51,630 --> 00:33:53,549
Jhoulys and Thomas Boyd but there's

854
00:33:53,549 --> 00:33:55,500
actually 16 contributors listed on the

855
00:33:55,500 --> 00:33:57,899
github repo this is for the es6 module

856
00:33:57,899 --> 00:34:00,149
transpiler so these are people who are

857
00:34:00,149 --> 00:34:02,850
actually engaging with the standards as

858
00:34:02,850 --> 00:34:04,380
they're going they're there they're

859
00:34:04,380 --> 00:34:06,210
working with us together as

860
00:34:06,210 --> 00:34:08,429
collaborators and they're finding that

861
00:34:08,429 --> 00:34:10,589
in this process they're actually getting

862
00:34:10,589 --> 00:34:12,270
brought into the conversation because

863
00:34:12,270 --> 00:34:14,550
they have as much or more valuable

864
00:34:14,550 --> 00:34:17,070
feedback to give as the people who are

865
00:34:17,070 --> 00:34:20,760
building the browsers so the TLDR of the

866
00:34:20,760 --> 00:34:22,770
extensible web is if they're missing

867
00:34:22,770 --> 00:34:23,970
primitives in the platform we've got a

868
00:34:23,970 --> 00:34:25,589
priority to prioritize those first

869
00:34:25,589 --> 00:34:26,730
because those primitives are what you

870
00:34:26,730 --> 00:34:29,190
use to build these polyfills prolly

871
00:34:29,190 --> 00:34:30,869
fills and compilers on top of them and

872
00:34:30,869 --> 00:34:33,659
then from there we enable evolution to

873
00:34:33,659 --> 00:34:35,280
happen out in user land we enable

874
00:34:35,280 --> 00:34:38,580
evolution to happen in JavaScript

875
00:34:38,580 --> 00:34:40,919
implementations of language features or

876
00:34:40,919 --> 00:34:44,940
sorry of library features or pre

877
00:34:44,940 --> 00:34:46,740
compilers that compile language features

878
00:34:46,740 --> 00:34:48,419
and then we can work together both

879
00:34:48,419 --> 00:34:51,690
browser vendors and web developers to

880
00:34:51,690 --> 00:34:55,440
actually together design the web that we

881
00:34:55,440 --> 00:34:57,750
want to see and that's all I have to say

