1
00:00:00,000 --> 00:00:16,320

I'll turn my camera I keep my fingers hi

2
00:00:16,320 --> 00:00:18,480
guys so it's the last talked before

3
00:00:18,480 --> 00:00:21,210
lunch I know how you're feeling you're

4
00:00:21,210 --> 00:00:23,369
hungry me too but we'll go through it

5
00:00:23,369 --> 00:00:27,330
together we'll survive okay so let's

6
00:00:27,330 --> 00:00:31,349
start so my talk is called reactive

7
00:00:31,349 --> 00:00:33,570
programming made simple and it's mostly

8
00:00:33,570 --> 00:00:35,489
about user interfaces of the client site

9
00:00:35,489 --> 00:00:38,700
in the browser but basically what i'm

10
00:00:38,700 --> 00:00:40,710
going to show you you can apply it in

11
00:00:40,710 --> 00:00:44,640
regular programming as well so i'm from

12
00:00:44,640 --> 00:00:46,379
meter and meter is a company that

13
00:00:46,379 --> 00:00:48,719
develops an open source framework and

14
00:00:48,719 --> 00:00:50,760
the main purpose of meter is to make it

15
00:00:50,760 --> 00:00:53,760
really easy to build modern web

16
00:00:53,760 --> 00:00:57,329
applications and it should be easy to

17
00:00:57,329 --> 00:00:59,879
everyone not only beginners advanced

18
00:00:59,879 --> 00:01:02,250
users like intermediate programmers and

19
00:01:02,250 --> 00:01:06,390
they it's all in JavaScript so what is

20
00:01:06,390 --> 00:01:08,850
modern web applications we have an

21
00:01:08,850 --> 00:01:10,830
example here that comes with meter and

22
00:01:10,830 --> 00:01:13,950
it's called to do that as you know every

23
00:01:13,950 --> 00:01:15,570
JavaScript framework should have a to do

24
00:01:15,570 --> 00:01:18,060
that so this is one example built with

25
00:01:18,060 --> 00:01:22,110
meter so we have lists it has data i can

26
00:01:22,110 --> 00:01:27,210
add stuff go to is evil right i can add

27
00:01:27,210 --> 00:01:28,770
it you can see the number here increases

28
00:01:28,770 --> 00:01:31,130
i can check it off blah blah blah delete

29
00:01:31,130 --> 00:01:34,259
awesome so actually all the data here is

30
00:01:34,259 --> 00:01:37,350
synchronized to like a server in north

31
00:01:37,350 --> 00:01:40,200
america in the united states so even

32
00:01:40,200 --> 00:01:42,600
though it's taking half a second to

33
00:01:42,600 --> 00:01:45,299
connect to that server you still don't

34
00:01:45,299 --> 00:01:47,070
see any latency all the actions are

35
00:01:47,070 --> 00:01:49,259
immediate because we simulate all the

36
00:01:49,259 --> 00:01:51,210
actions of the client-side that's one of

37
00:01:51,210 --> 00:01:53,729
the features of meteor and because it's

38
00:01:53,729 --> 00:01:55,740
all persistent i can open another

39
00:01:55,740 --> 00:01:59,159
browser window and perform some changes

40
00:01:59,159 --> 00:02:01,530
here and you will see them appear to on

41
00:02:01,530 --> 00:02:03,479
the left side as well and you can see

42
00:02:03,479 --> 00:02:04,799
that on the right side is much faster

43
00:02:04,799 --> 00:02:06,869
because it's happening in simulation

44
00:02:06,869 --> 00:02:08,879
before the classic sure we'll go to the

45
00:02:08,879 --> 00:02:12,180
server so this is one of the examples of

46
00:02:12,180 --> 00:02:15,319
meteor applications

47
00:02:15,319 --> 00:02:18,390
so modern web applications it's a lot of

48
00:02:18,390 --> 00:02:22,890
things in our view at meteor we try to

49
00:02:22,890 --> 00:02:25,319
encourage people to use a lot of modern

50
00:02:25,319 --> 00:02:27,810
patterns such as a morphic JavaScript

51
00:02:27,810 --> 00:02:30,150
something spike talked about instant

52
00:02:30,150 --> 00:02:32,700
responses client-side simulations the

53
00:02:32,700 --> 00:02:34,950
active you I the all times visualization

54
00:02:34,950 --> 00:02:37,620
blah blah blah a lot of things so that a

55
00:02:37,620 --> 00:02:39,060
lot of things in videos that we build

56
00:02:39,060 --> 00:02:42,330
its kind of amazing but I don't have

57
00:02:42,330 --> 00:02:44,610
time to talk about all of that today so

58
00:02:44,610 --> 00:02:47,040
I'm going to focus on one feature that I

59
00:02:47,040 --> 00:02:49,560
think will be useful to you and if you

60
00:02:49,560 --> 00:02:51,959
want to learn more about meter I thought

61
00:02:51,959 --> 00:02:54,060
maybe I shouldn't give you another

62
00:02:54,060 --> 00:02:55,680
introduction to it because it's already

63
00:02:55,680 --> 00:02:58,049
been done before by my coworker Emily

64
00:02:58,049 --> 00:03:00,959
stark on Jess called Asia 2013 in manual

65
00:03:00,959 --> 00:03:03,360
so you can go there and see the

66
00:03:03,360 --> 00:03:05,069
introductions there I hope you'll like

67
00:03:05,069 --> 00:03:09,180
it but today um I want to give you some

68
00:03:09,180 --> 00:03:10,739
things that you can use outside of meter

69
00:03:10,739 --> 00:03:13,170
because I know you all guys have jobs

70
00:03:13,170 --> 00:03:15,180
probably you cannot switch to meet you

71
00:03:15,180 --> 00:03:17,100
in one moment I'm not even trying to

72
00:03:17,100 --> 00:03:21,180
convince you it's okay so let's see what

73
00:03:21,180 --> 00:03:24,120
meteor is media is any big system

74
00:03:24,120 --> 00:03:26,100
consists of a lot of different packages

75
00:03:26,100 --> 00:03:28,680
components and I know somebody could

76
00:03:28,680 --> 00:03:30,600
tell you hey meter is another model

77
00:03:30,600 --> 00:03:32,100
istics things you cannot separate things

78
00:03:32,100 --> 00:03:35,910
out that's not true this is the basic

79
00:03:35,910 --> 00:03:39,299
stack legs are several major components

80
00:03:39,299 --> 00:03:41,070
something like getting real-time data

81
00:03:41,070 --> 00:03:42,780
updates from database or like giving

82
00:03:42,780 --> 00:03:45,420
them to the client or simulations as a

83
00:03:45,420 --> 00:03:47,880
client side and this one components that

84
00:03:47,880 --> 00:03:49,410
I want to talk about today is called

85
00:03:49,410 --> 00:03:53,250
checker this is a small UI libraries

86
00:03:53,250 --> 00:03:57,709
that we use to get to manage the

87
00:03:57,709 --> 00:04:00,750
dependency floor like if you imagine you

88
00:04:00,750 --> 00:04:02,280
have a lot of components they all depend

89
00:04:02,280 --> 00:04:04,319
on each other they need to synchronize

90
00:04:04,319 --> 00:04:05,970
their state somehow and you can use this

91
00:04:05,970 --> 00:04:09,180
slider in the applications so here's an

92
00:04:09,180 --> 00:04:10,920
example of like applications that you

93
00:04:10,920 --> 00:04:13,829
all know bubbly it's Twitter and see as

94
00:04:13,829 --> 00:04:16,109
you know when you have fairly complex

95
00:04:16,109 --> 00:04:19,169
you I you get more and more components

96
00:04:19,169 --> 00:04:20,940
you try to split it out on smaller and

97
00:04:20,940 --> 00:04:23,039
smaller parts so it's easier to manage

98
00:04:23,039 --> 00:04:25,470
so you can imagine it looks something

99
00:04:25,470 --> 00:04:26,600
like this I

100
00:04:26,600 --> 00:04:31,760
I just made made it up but you might

101
00:04:31,760 --> 00:04:34,340
think that it's good we separate our

102
00:04:34,340 --> 00:04:37,070
concerns we isolated each component but

103
00:04:37,070 --> 00:04:38,630
in the allergy component still depend on

104
00:04:38,630 --> 00:04:40,610
each other so if this a new tweet it

105
00:04:40,610 --> 00:04:42,980
appears in the main feed it can appear

106
00:04:42,980 --> 00:04:45,650
the number increasing somewhere else if

107
00:04:45,650 --> 00:04:47,660
there's a picture it will appear in the

108
00:04:47,660 --> 00:04:50,330
pictures component so they really can

109
00:04:50,330 --> 00:04:53,150
depend on each other so here's another

110
00:04:53,150 --> 00:04:55,220
example it's a YouTube dashboard and

111
00:04:55,220 --> 00:04:57,380
this is something a lot of people don't

112
00:04:57,380 --> 00:04:59,210
see this is a dashboard for people who

113
00:04:59,210 --> 00:05:03,170
are plaut videos so you can see my most

114
00:05:03,170 --> 00:05:05,060
popular video is about my high school

115
00:05:05,060 --> 00:05:08,540
graduation silico but this is a complex

116
00:05:08,540 --> 00:05:11,480
page there's a lot of things going on so

117
00:05:11,480 --> 00:05:14,480
you have type-ahead search you have some

118
00:05:14,480 --> 00:05:16,190
charting library you have a calendar

119
00:05:16,190 --> 00:05:18,490
view where you can select something and

120
00:05:18,490 --> 00:05:20,300
let's say you want to implement

121
00:05:20,300 --> 00:05:21,980
something I exist and you work in a

122
00:05:21,980 --> 00:05:23,870
smaller company may be here in Singapore

123
00:05:23,870 --> 00:05:25,460
maybe somewhere else you probably don't

124
00:05:25,460 --> 00:05:27,890
have two hundred engineers to build it

125
00:05:27,890 --> 00:05:30,770
overnight so what do you do if you're

126
00:05:30,770 --> 00:05:32,750
lazy like me you will go on the internet

127
00:05:32,750 --> 00:05:34,580
and find a lot of libraries that can

128
00:05:34,580 --> 00:05:36,500
help you I don't want to build my

129
00:05:36,500 --> 00:05:38,810
calendar of you again I don't have two

130
00:05:38,810 --> 00:05:41,090
miles maybe somebody olej build it for

131
00:05:41,090 --> 00:05:43,760
me right so that's exactly what you're

132
00:05:43,760 --> 00:05:45,170
going to do probably you will use

133
00:05:45,170 --> 00:05:46,850
something like a package as for

134
00:05:46,850 --> 00:05:48,560
type-ahead search you will render your

135
00:05:48,560 --> 00:05:51,350
views with that component for calendar

136
00:05:51,350 --> 00:05:53,570
you will use full calendar jquery plugin

137
00:05:53,570 --> 00:05:56,210
for SVG gasps you'll use some library

138
00:05:56,210 --> 00:05:58,580
like this vijay's this is a data table

139
00:05:58,580 --> 00:06:00,920
that needs sorting and everything I

140
00:06:00,920 --> 00:06:03,590
don't know if if somebody already did it

141
00:06:03,590 --> 00:06:05,180
for me efficiently I'll just use their

142
00:06:05,180 --> 00:06:08,690
code so here you have several components

143
00:06:08,690 --> 00:06:10,960
and they built with entirely different

144
00:06:10,960 --> 00:06:13,760
frameworks sorry libraries and they

145
00:06:13,760 --> 00:06:16,280
built with entirely different teams this

146
00:06:16,280 --> 00:06:18,650
code doesn't have any idea how to work

147
00:06:18,650 --> 00:06:21,740
with each other and yeah like you can

148
00:06:21,740 --> 00:06:25,190
use something else for this line so my

149
00:06:25,190 --> 00:06:27,110
point is you have all the things you

150
00:06:27,110 --> 00:06:28,880
need to glue together how do you do that

151
00:06:28,880 --> 00:06:32,030
and just to give you another example

152
00:06:32,030 --> 00:06:35,419
here's google calendar in case you think

153
00:06:35,419 --> 00:06:37,160
oh you just synchronize your data model

154
00:06:37,160 --> 00:06:38,950
for every component it's not true

155
00:06:38,950 --> 00:06:40,470
sometimes you

156
00:06:40,470 --> 00:06:42,690
and on the state of the component so

157
00:06:42,690 --> 00:06:45,210
here on the left side you have this box

158
00:06:45,210 --> 00:06:47,130
where you can select some weak arbitrary

159
00:06:47,130 --> 00:06:50,490
range of days in your calendar and that

160
00:06:50,490 --> 00:06:52,500
would be reflected on the right side so

161
00:06:52,500 --> 00:06:55,230
it's not even like data that comes for

162
00:06:55,230 --> 00:06:58,500
user it's something that is stored as a

163
00:06:58,500 --> 00:07:03,030
state of the component so let's say you

164
00:07:03,030 --> 00:07:05,370
start developing that but you know this

165
00:07:05,370 --> 00:07:07,380
thing depends on that saying blind

166
00:07:07,380 --> 00:07:09,330
showed up down only if this constraints

167
00:07:09,330 --> 00:07:11,730
are satisfied you will do some graph

168
00:07:11,730 --> 00:07:13,290
dependency graph like this by the way

169
00:07:13,290 --> 00:07:14,730
it's not real graph I just made it up

170
00:07:14,730 --> 00:07:19,260
but the point is it might be simple in

171
00:07:19,260 --> 00:07:21,570
the beginning but more features you have

172
00:07:21,570 --> 00:07:24,870
in your applications more different

173
00:07:24,870 --> 00:07:27,570
directions the activity will go to or

174
00:07:27,570 --> 00:07:29,610
dependencies will go to it will be

175
00:07:29,610 --> 00:07:31,050
harder to manage and maybe you don't

176
00:07:31,050 --> 00:07:33,660
need to is our job really managing

177
00:07:33,660 --> 00:07:36,810
dependencies probably not so you may end

178
00:07:36,810 --> 00:07:38,700
up with something like this it's all

179
00:07:38,700 --> 00:07:40,530
complicated goes back and forth you

180
00:07:40,530 --> 00:07:42,330
manage events here you pushes they're

181
00:07:42,330 --> 00:07:45,600
like what's going on so that's why we

182
00:07:45,600 --> 00:07:48,300
built a small library called tracker

183
00:07:48,300 --> 00:07:50,520
it's under two kilobytes when gzipped

184
00:07:50,520 --> 00:07:52,080
and minified is really small and lean

185
00:07:52,080 --> 00:07:54,630
and the point is to make any code

186
00:07:54,630 --> 00:07:57,390
deactive you just wrap whatever code you

187
00:07:57,390 --> 00:07:59,550
have into one function call it just

188
00:07:59,550 --> 00:08:00,900
instantly becomes the active at what I

189
00:08:00,900 --> 00:08:03,030
mean is every time some dependency

190
00:08:03,030 --> 00:08:04,830
changes of that function or like that

191
00:08:04,830 --> 00:08:08,160
block it will just sound again so the

192
00:08:08,160 --> 00:08:10,740
purpose is just to you know glue things

193
00:08:10,740 --> 00:08:14,729
together and here's an example a code

194
00:08:14,729 --> 00:08:17,580
example you just put your stuff into

195
00:08:17,580 --> 00:08:20,070
this checker-outer on and alternate

196
00:08:20,070 --> 00:08:21,660
means it will run again at the game

197
00:08:21,660 --> 00:08:24,900
again every time something changes so

198
00:08:24,900 --> 00:08:27,330
here's another example let's say I have

199
00:08:27,330 --> 00:08:29,400
a valuable called city it's San

200
00:08:29,400 --> 00:08:31,919
Francisco that's wearing form and we

201
00:08:31,919 --> 00:08:36,510
paint both casting from this city so so

202
00:08:36,510 --> 00:08:38,580
like first time it will run it will

203
00:08:38,580 --> 00:08:39,810
paint I'm broadcasting from San

204
00:08:39,810 --> 00:08:41,880
Francisco but next time the city will

205
00:08:41,880 --> 00:08:44,210
change it will immediately run again and

206
00:08:44,210 --> 00:08:47,160
it will paint I'm broadcasting from

207
00:08:47,160 --> 00:08:49,560
Singapore and it will do it itself you

208
00:08:49,560 --> 00:08:50,850
just change your variables however you

209
00:08:50,850 --> 00:08:54,060
want here's another example just to make

210
00:08:54,060 --> 00:08:54,329
the

211
00:08:54,329 --> 00:08:57,559
that tracker is not to dump for you

212
00:08:57,559 --> 00:08:59,850
let's say we have two variables and

213
00:08:59,850 --> 00:09:03,509
since this outer on I check the secret

214
00:09:03,509 --> 00:09:06,509
variable and if this qu i will say I'm

215
00:09:06,509 --> 00:09:08,579
not going to tell you what the city is

216
00:09:08,579 --> 00:09:11,639
if there's not choose and I i can tell

217
00:09:11,639 --> 00:09:14,670
you okay in the city is this so Cherica

218
00:09:14,670 --> 00:09:17,040
looks at this code it understands that

219
00:09:17,040 --> 00:09:20,309
secret is true in the beginning so only

220
00:09:20,309 --> 00:09:23,699
the first block will execute so the

221
00:09:23,699 --> 00:09:25,709
second block of the if statement is

222
00:09:25,709 --> 00:09:28,499
essentially that block it will not run

223
00:09:28,499 --> 00:09:32,309
ever until secret will change so it

224
00:09:32,309 --> 00:09:34,860
doesn't matter if you change city like

225
00:09:34,860 --> 00:09:36,660
hundred times it will not run again

226
00:09:36,660 --> 00:09:39,269
because check and assess oh it didn't

227
00:09:39,269 --> 00:09:41,639
change anyway so it will print only once

228
00:09:41,639 --> 00:09:43,559
and then you change the ticket and it

229
00:09:43,559 --> 00:09:45,959
will do all the right things so it's

230
00:09:45,959 --> 00:09:50,850
kind intelligent in this case so

231
00:09:50,850 --> 00:09:52,649
dependency tracking is not a new thing

232
00:09:52,649 --> 00:09:55,559
and if you look at the modern UI

233
00:09:55,559 --> 00:09:59,189
frameworks they're mostly like they're

234
00:09:59,189 --> 00:10:01,259
often implemented in the context of data

235
00:10:01,259 --> 00:10:03,629
bindings so you have your data model I

236
00:10:03,629 --> 00:10:05,279
want to keep it in sync with this part

237
00:10:05,279 --> 00:10:07,819
of the page okay i have my data binding

238
00:10:07,819 --> 00:10:11,429
and usually it's really hard to use this

239
00:10:11,429 --> 00:10:13,739
mechanism of dependency traction outside

240
00:10:13,739 --> 00:10:16,769
of this framework with other components

241
00:10:16,769 --> 00:10:18,929
or like code not related to you I at all

242
00:10:18,929 --> 00:10:21,689
so for example this is angular example

243
00:10:21,689 --> 00:10:23,790
and i'm not a big expert in angular so

244
00:10:23,790 --> 00:10:26,579
if you hate me for that please sorry i

245
00:10:26,579 --> 00:10:28,949
have my computer per particle say hello

246
00:10:28,949 --> 00:10:31,049
it just matches my first name last name

247
00:10:31,049 --> 00:10:35,089
and you'll notice here that all the

248
00:10:35,089 --> 00:10:37,110
valuables are attached to this dollar

249
00:10:37,110 --> 00:10:40,410
sign scope so what is dollar signs cope

250
00:10:40,410 --> 00:10:43,730
it's special things that angular has and

251
00:10:43,730 --> 00:10:45,929
it's different from the JavaScript's

252
00:10:45,929 --> 00:10:47,699
curbs that you have in each function and

253
00:10:47,699 --> 00:10:50,119
you need to remember to do that and

254
00:10:50,119 --> 00:10:52,649
there's something magical about it

255
00:10:52,649 --> 00:10:54,689
because what anglo does under the hood

256
00:10:54,689 --> 00:10:57,239
it pulls these valuables on the scope

257
00:10:57,239 --> 00:11:00,059
and see if anything changed and this

258
00:11:00,059 --> 00:11:02,100
something they call judge checking so

259
00:11:02,100 --> 00:11:04,379
this is good but it's mostly done in the

260
00:11:04,379 --> 00:11:06,240
context of data bindings and it's not

261
00:11:06,240 --> 00:11:07,830
really useful outside of angular

262
00:11:07,830 --> 00:11:12,300
so in amber it's kinda simpler you still

263
00:11:12,300 --> 00:11:14,220
use the same JavaScript code but what I

264
00:11:14,220 --> 00:11:16,290
don't like about it you need to specify

265
00:11:16,290 --> 00:11:18,120
manually what are you dependencies of

266
00:11:18,120 --> 00:11:20,580
your function like already use first

267
00:11:20,580 --> 00:11:22,170
name and last name why do I need to tell

268
00:11:22,170 --> 00:11:24,060
amber what are the exact properties I

269
00:11:24,060 --> 00:11:25,710
depend on why can't you figure it out

270
00:11:25,710 --> 00:11:28,260
yourself so this is samson check out

271
00:11:28,260 --> 00:11:30,630
that's better and it's really small you

272
00:11:30,630 --> 00:11:32,520
can use it with different things here's

273
00:11:32,520 --> 00:11:35,820
an example of examples let's say you

274
00:11:35,820 --> 00:11:38,070
have a glove that you'll end up and use

275
00:11:38,070 --> 00:11:40,140
this V and every time something changes

276
00:11:40,140 --> 00:11:42,450
you need to e bind your data or you have

277
00:11:42,450 --> 00:11:44,220
a full calendar and every time you want

278
00:11:44,220 --> 00:11:46,020
to display a different range you need to

279
00:11:46,020 --> 00:11:48,960
set this date to your calendar or you

280
00:11:48,960 --> 00:11:50,580
have child jazz or like video player

281
00:11:50,580 --> 00:11:53,670
every time different API a different

282
00:11:53,670 --> 00:11:56,220
thing like if you have n components and

283
00:11:56,220 --> 00:11:57,180
you need to connect them between each

284
00:11:57,180 --> 00:12:01,140
other you'll do l squared extra coding

285
00:12:01,140 --> 00:12:03,960
for each of those connections and it

286
00:12:03,960 --> 00:12:06,330
goes both ways it's not only inside the

287
00:12:06,330 --> 00:12:08,610
component it's also outside of it so

288
00:12:08,610 --> 00:12:11,580
whenever the events triggered like oh I

289
00:12:11,580 --> 00:12:14,360
clicked on say saying or I went to this

290
00:12:14,360 --> 00:12:18,450
date or I I jumped to this location for

291
00:12:18,450 --> 00:12:21,390
the playback oh I pose so I started all

292
00:12:21,390 --> 00:12:23,100
of those are like extra things you need

293
00:12:23,100 --> 00:12:24,750
to code up connect together with event

294
00:12:24,750 --> 00:12:26,790
handlers which checker is much easier

295
00:12:26,790 --> 00:12:28,530
you just connect everything to check at

296
00:12:28,530 --> 00:12:30,450
once and that's it and you can use the

297
00:12:30,450 --> 00:12:32,220
same code because most times the code is

298
00:12:32,220 --> 00:12:34,740
pretty much a it important so you can

299
00:12:34,740 --> 00:12:38,070
just line it again at the game so let's

300
00:12:38,070 --> 00:12:41,760
go back to the YouTube example so I have

301
00:12:41,760 --> 00:12:43,740
all these components so at this point

302
00:12:43,740 --> 00:12:45,360
what I'll do I'll just connect each of

303
00:12:45,360 --> 00:12:47,670
them to checker and checker will make

304
00:12:47,670 --> 00:12:51,560
sure that all the reactive valuables are

305
00:12:51,560 --> 00:12:54,000
checking the right advance to endow

306
00:12:54,000 --> 00:12:57,510
again so here's my demo there's a very

307
00:12:57,510 --> 00:13:00,810
simple page you can it's a forecast

308
00:13:00,810 --> 00:13:03,240
weather app it's not really an app it's

309
00:13:03,240 --> 00:13:06,480
more like a page so here I say it's

310
00:13:06,480 --> 00:13:08,640
beautiful day today's Thursday or Friday

311
00:13:08,640 --> 00:13:11,820
and here's the forecast for the whole

312
00:13:11,820 --> 00:13:14,670
week and here's a small child so for the

313
00:13:14,670 --> 00:13:16,200
purpose of this demo I'm going to

314
00:13:16,200 --> 00:13:17,760
implement it with mental Dom

315
00:13:17,760 --> 00:13:20,520
manipulations we access because why not

316
00:13:20,520 --> 00:13:21,240
it's a

317
00:13:21,240 --> 00:13:25,080
library and charting library so it can

318
00:13:25,080 --> 00:13:26,850
really happen in your application as

319
00:13:26,850 --> 00:13:28,800
well you can have one part that this

320
00:13:28,800 --> 00:13:31,170
kind a legacy code developed by some guy

321
00:13:31,170 --> 00:13:33,480
who left a long time ago also you have

322
00:13:33,480 --> 00:13:34,980
another part built with the ad because

323
00:13:34,980 --> 00:13:37,290
it's a new hotness and there's a new

324
00:13:37,290 --> 00:13:38,670
developer who decided just to build

325
00:13:38,670 --> 00:13:40,950
everything can react and this is

326
00:13:40,950 --> 00:13:43,200
charging Clyde way because well who

327
00:13:43,200 --> 00:13:46,260
knows how to build charts I don't so

328
00:13:46,260 --> 00:13:49,050
yeah and here's the code I don't know

329
00:13:49,050 --> 00:13:50,910
why my syntax highlighting the swirl but

330
00:13:50,910 --> 00:13:53,820
I hope it's still easy to it for Dom

331
00:13:53,820 --> 00:13:55,380
manipulations we just got an element

332
00:13:55,380 --> 00:13:58,440
assign in the text and we use current

333
00:13:58,440 --> 00:14:01,709
date and temperatures forecast for your

334
00:14:01,709 --> 00:14:03,480
address you just render this component

335
00:14:03,480 --> 00:14:05,580
it's very simple you just passing you

336
00:14:05,580 --> 00:14:08,149
temperatures about temperatures data and

337
00:14:08,149 --> 00:14:10,290
for the charging light but it's a bit

338
00:14:10,290 --> 00:14:11,670
more complicated because it's charging

339
00:14:11,670 --> 00:14:14,399
five but he needs extra babysitting what

340
00:14:14,399 --> 00:14:16,709
changed why do I need to like tell you

341
00:14:16,709 --> 00:14:19,290
specifically I need to go through all

342
00:14:19,290 --> 00:14:22,140
your data data structures and like set

343
00:14:22,140 --> 00:14:23,640
it manually unfortunately that's how

344
00:14:23,640 --> 00:14:25,140
this library works the ones that I

345
00:14:25,140 --> 00:14:27,060
picked so sometimes you need to update

346
00:14:27,060 --> 00:14:31,950
it this way so let's go to the live

347
00:14:31,950 --> 00:14:38,430
coding demo way scary ok so here's the

348
00:14:38,430 --> 00:14:44,040
basic page and I need the console ready

349
00:14:44,040 --> 00:14:53,250
to go ok sorry show website developer ok

350
00:14:53,250 --> 00:14:55,260
so I don't have any code here you just

351
00:14:55,260 --> 00:14:59,190
have basic HTML markup so as you can see

352
00:14:59,190 --> 00:15:02,190
nothing happens and you can see is the

353
00:15:02,190 --> 00:15:03,990
date even correct it's not even correct

354
00:15:03,990 --> 00:15:08,220
it says it's mundane it's clearly not so

355
00:15:08,220 --> 00:15:11,670
let's do let's do some Dom manipulation

356
00:15:11,670 --> 00:15:15,140
I know it's awful but well bear with me

357
00:15:15,140 --> 00:15:20,190
so i will get element by ID in this case

358
00:15:20,190 --> 00:15:23,339
my ID is day for the purpose of this

359
00:15:23,339 --> 00:15:29,029
demo and i will set you know texture

360
00:15:29,029 --> 00:15:31,900
current date

361
00:15:31,900 --> 00:15:35,950
and what's a sports okay it displays

362
00:15:35,950 --> 00:15:38,680
this because I do it in manual Dom

363
00:15:38,680 --> 00:15:41,110
manipulations so I'll make it a bit

364
00:15:41,110 --> 00:15:43,360
nicer and I'll just start getting two

365
00:15:43,360 --> 00:15:49,900
separate variable and i'll choose the

366
00:15:49,900 --> 00:15:52,360
stream from the days of the week array

367
00:15:52,360 --> 00:15:55,840
just so it's easier to see so i'll get

368
00:15:55,840 --> 00:16:00,160
today and it go safe I day cool it's

369
00:16:00,160 --> 00:16:05,170
fine thing right okay but let's change

370
00:16:05,170 --> 00:16:10,250
the current date let's go to the future

371
00:16:10,260 --> 00:16:12,790
let's set it to something in the future

372
00:16:12,790 --> 00:16:18,550
in 2014 november and 21st nothing

373
00:16:18,550 --> 00:16:20,950
happens why because it's code is not

374
00:16:20,950 --> 00:16:23,890
reactive how do i make it active well

375
00:16:23,890 --> 00:16:27,540
that's easy I'll just wrap this code

376
00:16:27,540 --> 00:16:33,100
into a function declaration and I'll

377
00:16:33,100 --> 00:16:36,070
call check it out loud which is just

378
00:16:36,070 --> 00:16:38,170
like the only API is that we have here

379
00:16:38,170 --> 00:16:40,930
love this again every time it changes so

380
00:16:40,930 --> 00:16:43,270
i will refresh and i'll set it to the

381
00:16:43,270 --> 00:16:45,130
future and it changes to monday yay

382
00:16:45,130 --> 00:16:49,360
works so i have also a prebuilt

383
00:16:49,360 --> 00:16:51,400
functions that is random I that is on

384
00:16:51,400 --> 00:16:54,610
demising the current date and let me

385
00:16:54,610 --> 00:17:00,490
call that so set interval randomly

386
00:17:00,490 --> 00:17:05,020
change date and execute it very often so

387
00:17:05,020 --> 00:17:07,810
yeah it's changing all the time cool so

388
00:17:07,810 --> 00:17:09,970
I'll do the same with the current

389
00:17:09,970 --> 00:17:14,640
temperature so this pan is forecast and

390
00:17:14,640 --> 00:17:16,990
I'll just get this temperature for my

391
00:17:16,990 --> 00:17:20,640
active arrays that I declared online 30

392
00:17:20,640 --> 00:17:26,909
temperatures get the jet date

393
00:17:26,919 --> 00:17:30,799
okay it's a 31 so yeah it works so now

394
00:17:30,799 --> 00:17:32,870
let me do the same for other things and

395
00:17:32,870 --> 00:17:34,490
I don't want to code in front of you

396
00:17:34,490 --> 00:17:35,690
it's kind of embarrassing because they

397
00:17:35,690 --> 00:17:37,429
can make a lot of mistakes let me just

398
00:17:37,429 --> 00:17:40,190
copy paste something from my example

399
00:17:40,190 --> 00:17:43,190
that I already built so I'll do the same

400
00:17:43,190 --> 00:17:46,669
thing I'll instantiate tracker outrun

401
00:17:46,669 --> 00:17:48,769
and inside I'll just render the

402
00:17:48,769 --> 00:17:50,809
component with temperatures and because

403
00:17:50,809 --> 00:17:53,320
we use the same temperatures array

404
00:17:53,320 --> 00:17:57,019
basically it should be synchronized some

405
00:17:57,019 --> 00:18:03,799
cincuenta where you get a safe oh do

406
00:18:03,799 --> 00:18:08,779
they go to the wrong place sorry okay

407
00:18:08,779 --> 00:18:11,149
here what I want to do ok here it is a

408
00:18:11,149 --> 00:18:14,059
list built with react vertical you can

409
00:18:14,059 --> 00:18:17,330
imagine some fancy component so now I

410
00:18:17,330 --> 00:18:21,139
can call a different set interval that

411
00:18:21,139 --> 00:18:23,690
will randomly change my values in my

412
00:18:23,690 --> 00:18:26,000
array so let's imagine data comes from

413
00:18:26,000 --> 00:18:28,129
each other and there's some service

414
00:18:28,129 --> 00:18:30,950
about whether as it always changed its

415
00:18:30,950 --> 00:18:32,870
mind it tells you oh actually the

416
00:18:32,870 --> 00:18:35,000
temperature will be different so let's

417
00:18:35,000 --> 00:18:39,500
do this I'll call randomly update

418
00:18:39,500 --> 00:18:45,080
forecast and call it here we often so

419
00:18:45,080 --> 00:18:48,230
yeah yay it's really called on Monday be

420
00:18:48,230 --> 00:18:53,659
careful okay the last piece the last

421
00:18:53,659 --> 00:18:57,860
piece is charged as example so here's

422
00:18:57,860 --> 00:19:00,440
the code I talked about before and again

423
00:19:00,440 --> 00:19:03,139
the same thing just wrap it in to check

424
00:19:03,139 --> 00:19:05,000
it out the run and make sure your

425
00:19:05,000 --> 00:19:06,860
function is idempotent and like you

426
00:19:06,860 --> 00:19:09,559
correctly instantiate it first and then

427
00:19:09,559 --> 00:19:11,690
you just updated data so i will refresh

428
00:19:11,690 --> 00:19:15,350
it oh yeah we have a graph and it's 31

429
00:19:15,350 --> 00:19:19,909
30 32 so it's all great so let's do the

430
00:19:19,909 --> 00:19:24,009
same thing again let's just randomize it

431
00:19:24,009 --> 00:19:27,500
it's pretty cool huh I even prepared

432
00:19:27,500 --> 00:19:31,860
some music for you

433
00:19:31,870 --> 00:19:38,860
I think this graph actually knows how to

434
00:19:38,860 --> 00:19:47,620
dance for so yeah this was my demo so

435
00:19:47,620 --> 00:19:49,180
what we did we just at every sync it to

436
00:19:49,180 --> 00:19:52,480
check out that something was hard so

437
00:19:52,480 --> 00:19:55,240
recap checker is a small library it's

438
00:19:55,240 --> 00:19:56,980
part of meteors as how meteor does all

439
00:19:56,980 --> 00:19:59,320
the fun parent reactivity magic the

440
00:19:59,320 --> 00:20:01,930
thing is in meteor we kind of hide it

441
00:20:01,930 --> 00:20:04,000
under the hood so like users don't

442
00:20:04,000 --> 00:20:05,679
actually need to wrap everything in this

443
00:20:05,679 --> 00:20:07,420
function calls so it's very intuitive

444
00:20:07,420 --> 00:20:08,830
just to write your code ones without

445
00:20:08,830 --> 00:20:10,540
even you know thinking about the

446
00:20:10,540 --> 00:20:13,660
activity and it's really easy to use it

447
00:20:13,660 --> 00:20:15,220
outside of meteor to glue things

448
00:20:15,220 --> 00:20:17,679
together and they hope when you guys go

449
00:20:17,679 --> 00:20:19,960
home you can look at it it's really

450
00:20:19,960 --> 00:20:21,550
short you can actually read it and you

451
00:20:21,550 --> 00:20:23,170
can learn something from it or maybe

452
00:20:23,170 --> 00:20:26,530
even use it so you don't even need to

453
00:20:26,530 --> 00:20:29,920
get into meter to use it it's useful on

454
00:20:29,920 --> 00:20:31,720
its own so it smart enough to keep you

455
00:20:31,720 --> 00:20:33,820
lazy and use other components and glue

456
00:20:33,820 --> 00:20:35,380
things together but it's not smart

457
00:20:35,380 --> 00:20:36,610
enough to do all the work for you

458
00:20:36,610 --> 00:20:40,270
otherwise you won't get paid so much so

459
00:20:40,270 --> 00:20:43,330
is it did we want lunch right hungry

460
00:20:43,330 --> 00:20:50,850
yeah it said Thank You Slava thank you

461
00:20:50,860 --> 00:20:54,890
fast snappy UI development with tracker

462
00:20:54,890 --> 00:20:58,070
questions it so I mean I'm still

463
00:20:58,070 --> 00:21:01,309
learning me today as um so I'm just

464
00:21:01,309 --> 00:21:03,559
wondering is it possible to a science

465
00:21:03,559 --> 00:21:06,650
string to a checker function and then I

466
00:21:06,650 --> 00:21:09,230
can turn it so nice auto running right

467
00:21:09,230 --> 00:21:11,510
is it possible Tony off sometimes and

468
00:21:11,510 --> 00:21:13,910
then turn you on again yeah you can turn

469
00:21:13,910 --> 00:21:15,410
them off and you can turn them on again

470
00:21:15,410 --> 00:21:19,010
I didn't cover that that part but what

471
00:21:19,010 --> 00:21:21,710
you can do you can do it in both ways in

472
00:21:21,710 --> 00:21:23,540
two ways so you can either safe

473
00:21:23,540 --> 00:21:25,490
available for this computation and then

474
00:21:25,490 --> 00:21:28,160
you can stop it later we see desktop you

475
00:21:28,160 --> 00:21:30,320
can do this all what you can do alto

476
00:21:30,320 --> 00:21:33,080
natively actually it will be passed as a

477
00:21:33,080 --> 00:21:34,640
first argument to the function so you

478
00:21:34,640 --> 00:21:37,070
can stop it here inside so both options

479
00:21:37,070 --> 00:21:42,020
are valid cool thanks yeah sure cool one

480
00:21:42,020 --> 00:21:46,809
more I was interested in knowing how the

481
00:21:46,809 --> 00:21:49,460
dependencies are being resolved for

482
00:21:49,460 --> 00:21:52,160
every function to descend into autorun

483
00:21:52,160 --> 00:21:54,559
do you use like you convert the function

484
00:21:54,559 --> 00:21:57,679
to string and I can talk about that so

485
00:21:57,679 --> 00:22:01,010
the question is how does how do we track

486
00:22:01,010 --> 00:22:02,720
the pen disease that's basically what

487
00:22:02,720 --> 00:22:04,309
checker does all right we check the

488
00:22:04,309 --> 00:22:05,870
balance is whenever they change the

489
00:22:05,870 --> 00:22:08,630
function again so the thing is if you

490
00:22:08,630 --> 00:22:11,179
noticed i used reactive variables

491
00:22:11,179 --> 00:22:14,090
interactive arrays everywhere so this is

492
00:22:14,090 --> 00:22:18,230
kind of a catch because so one of the

493
00:22:18,230 --> 00:22:20,929
part of the answer is in the future we

494
00:22:20,929 --> 00:22:22,550
can use acma script five setters and

495
00:22:22,550 --> 00:22:23,929
getters but right now they're not

496
00:22:23,929 --> 00:22:26,120
supported in every browser I am looking

497
00:22:26,120 --> 00:22:29,720
at ie but once you can do that you can

498
00:22:29,720 --> 00:22:32,240
wrap all the objects and you don't even

499
00:22:32,240 --> 00:22:34,220
need to use get or set of functions and

500
00:22:34,220 --> 00:22:37,670
we can convert this variables for you so

501
00:22:37,670 --> 00:22:39,559
what happens I'm check all the lines of

502
00:22:39,559 --> 00:22:43,850
code first time and just a way a date

503
00:22:43,850 --> 00:22:46,790
like the flow of the program works it

504
00:22:46,790 --> 00:22:49,790
can notice what variables got cold so in

505
00:22:49,790 --> 00:22:52,640
this case secret will get cold but CT

506
00:22:52,640 --> 00:22:54,230
will not get cold so check out

507
00:22:54,230 --> 00:22:56,540
understand that right now if nothing

508
00:22:56,540 --> 00:22:59,270
changes only secret matters always it

509
00:22:59,270 --> 00:23:01,070
justifiable matters the second viable

510
00:23:01,070 --> 00:23:02,480
doesn't matter at all because it wasn't

511
00:23:02,480 --> 00:23:03,140
even reach

512
00:23:03,140 --> 00:23:05,270
like essentially right now it's dead

513
00:23:05,270 --> 00:23:07,760
code and when you change those variables

514
00:23:07,760 --> 00:23:10,760
it says oh like make sure you will learn

515
00:23:10,760 --> 00:23:13,100
your digest loop next time and you'll

516
00:23:13,100 --> 00:23:15,830
update and propagate all the changes and

517
00:23:15,830 --> 00:23:18,890
I hope that answers the question big

