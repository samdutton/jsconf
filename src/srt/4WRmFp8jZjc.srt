1
00:00:18,910 --> 00:00:22,490

keep turning up in the break that's a

2
00:00:22,490 --> 00:00:27,130
very kind of your yeah so I am Dan web I

3
00:00:27,130 --> 00:00:30,770
at down wrong at Twitter I also work on

4
00:00:30,770 --> 00:00:33,110
the web team it to where and today I

5
00:00:33,110 --> 00:00:35,870
wanted to talk to you about flight the

6
00:00:35,870 --> 00:00:38,989
the title on the website is very brief

7
00:00:38,989 --> 00:00:40,640
just because I was rushing to grab one

8
00:00:40,640 --> 00:00:42,320
of the slots that was in the because I

9
00:00:42,320 --> 00:00:44,180
can't think in the morning so had to be

10
00:00:44,180 --> 00:00:48,440
in afternoon one so ya light wanted to

11
00:00:48,440 --> 00:00:49,670
really kind of give an overview about

12
00:00:49,670 --> 00:00:52,969
flight and what it is and why we created

13
00:00:52,969 --> 00:00:56,660
it really so Oh a couple of months ago

14
00:00:56,660 --> 00:01:01,010
maybe my colleague Angus who you

15
00:01:01,010 --> 00:01:02,829
probably listen to any other room Iran

16
00:01:02,829 --> 00:01:06,020
wrote this blog post introducing flight

17
00:01:06,020 --> 00:01:08,240
we were really excited about this this

18
00:01:08,240 --> 00:01:10,759
is actually code that runs all of

19
00:01:10,759 --> 00:01:13,670
twitter com and most of tweetdeck at

20
00:01:13,670 --> 00:01:15,680
this point and quite a few Twitter

21
00:01:15,680 --> 00:01:17,479
properties so we've actually had this

22
00:01:17,479 --> 00:01:21,110
thing running and been some battle

23
00:01:21,110 --> 00:01:23,360
testing it for about a year or maybe

24
00:01:23,360 --> 00:01:25,790
longer but at this point we're really

25
00:01:25,790 --> 00:01:28,280
excited about bring it out and showing

26
00:01:28,280 --> 00:01:31,400
the world we thought we anguished over

27
00:01:31,400 --> 00:01:33,110
this blog post trying to make sure that

28
00:01:33,110 --> 00:01:35,119
it sort of explained all the intent

29
00:01:35,119 --> 00:01:37,909
behind flight and we put it out into the

30
00:01:37,909 --> 00:01:41,240
world and then waited to see what the

31
00:01:41,240 --> 00:01:43,790
world had to say about it and literally

32
00:01:43,790 --> 00:01:47,090
this is no joke the first comment on

33
00:01:47,090 --> 00:01:50,990
hacker news was this

34
00:01:51,000 --> 00:01:53,320
so obviously the first thing we thought

35
00:01:53,320 --> 00:01:55,930
is Oh for fuck's sake hacker news but

36
00:01:55,930 --> 00:02:00,070
like in a in a in a sense it's a really

37
00:02:00,070 --> 00:02:01,960
good question and I think like it does

38
00:02:01,960 --> 00:02:06,250
bear elaborating on there are a ton of

39
00:02:06,250 --> 00:02:08,590
client-side frameworks out now out there

40
00:02:08,590 --> 00:02:10,840
now we couldn't possibly need one more

41
00:02:10,840 --> 00:02:13,660
on the pile and we did think about this

42
00:02:13,660 --> 00:02:16,570
and buy it you know we would seek to use

43
00:02:16,570 --> 00:02:18,610
something if that was out there if

44
00:02:18,610 --> 00:02:20,440
they're all possible and contribute it

45
00:02:20,440 --> 00:02:22,330
wrote to it rather than creating a new

46
00:02:22,330 --> 00:02:26,110
thing but you know we felt that what we

47
00:02:26,110 --> 00:02:28,090
were trying to achieve was distinct

48
00:02:28,090 --> 00:02:29,440
enough from these and I want to explain

49
00:02:29,440 --> 00:02:32,820
a bit about that so to set the scene

50
00:02:32,820 --> 00:02:38,020
when i joined the web team it was not

51
00:02:38,020 --> 00:02:40,960
long after new twitter was was out there

52
00:02:40,960 --> 00:02:43,360
new twitter at its time was quite ahead

53
00:02:43,360 --> 00:02:46,180
of its game it was a fully client-side

54
00:02:46,180 --> 00:02:50,980
MVC application at the time when some i

55
00:02:50,980 --> 00:02:52,900
don't even know when we're the backbone

56
00:02:52,900 --> 00:02:54,790
was out at this point or any of the

57
00:02:54,790 --> 00:02:57,370
other frameworks so it was built on a

58
00:02:57,370 --> 00:03:00,070
sort of homegrown MVC framework because

59
00:03:00,070 --> 00:03:01,630
there wasn't anything sort of big at the

60
00:03:01,630 --> 00:03:03,700
time and you know doing a lot of really

61
00:03:03,700 --> 00:03:07,810
interesting stuff and like a lot of MVC

62
00:03:07,810 --> 00:03:10,450
frameworks it had the structure that

63
00:03:10,450 --> 00:03:13,600
you'd expect so this isn't real code

64
00:03:13,600 --> 00:03:15,880
I've what I've done with these code

65
00:03:15,880 --> 00:03:17,290
examples is more tried to kind of

66
00:03:17,290 --> 00:03:20,140
generically illustrate the kind of

67
00:03:20,140 --> 00:03:22,090
conventions that you see in MVC

68
00:03:22,090 --> 00:03:24,520
frameworks rather than writing code for

69
00:03:24,520 --> 00:03:25,800
a particular one because I'm not

70
00:03:25,800 --> 00:03:28,630
pointing at faults in a particular

71
00:03:28,630 --> 00:03:30,790
framework just trying to illustrate the

72
00:03:30,790 --> 00:03:32,860
kind of thing that we have so obviously

73
00:03:32,860 --> 00:03:36,519
we had we had models models you can you

74
00:03:36,519 --> 00:03:38,860
can request an object which is a model

75
00:03:38,860 --> 00:03:41,260
you can call functions to mutate those

76
00:03:41,260 --> 00:03:44,890
objects and do actions like following in

77
00:03:44,890 --> 00:03:47,950
our case and in a lot of cases the these

78
00:03:47,950 --> 00:03:49,780
things were asynchronous so you had a

79
00:03:49,780 --> 00:03:51,820
callback to do something with that

80
00:03:51,820 --> 00:03:54,790
result as well as just calling methods

81
00:03:54,790 --> 00:03:57,040
directly and you can actually add event

82
00:03:57,040 --> 00:04:00,549
listeners so other objects can listen to

83
00:04:00,549 --> 00:04:02,000
follows that happen in

84
00:04:02,000 --> 00:04:04,730
application generically we had

85
00:04:04,730 --> 00:04:08,930
controllers controllers will typically

86
00:04:08,930 --> 00:04:10,610
look a bit like this you have some kind

87
00:04:10,610 --> 00:04:12,920
of URL Rooter that points to a

88
00:04:12,920 --> 00:04:15,080
particular controller in action and

89
00:04:15,080 --> 00:04:18,230
inside that we we're finding some tweets

90
00:04:18,230 --> 00:04:22,330
by actually require calling them the

91
00:04:22,330 --> 00:04:24,860
home timeline method on the user model

92
00:04:24,860 --> 00:04:27,950
and then with those tweets we create

93
00:04:27,950 --> 00:04:30,440
some views and then we stuff those into

94
00:04:30,440 --> 00:04:34,880
the Dom somewhere views looks a little

95
00:04:34,880 --> 00:04:37,190
bit like this we we still use mustache

96
00:04:37,190 --> 00:04:41,270
and similar to how we used this backward

97
00:04:41,270 --> 00:04:46,880
on Newt we're typically they render

98
00:04:46,880 --> 00:04:49,400
things but they can also render sub

99
00:04:49,400 --> 00:04:51,169
views as well so in this case we're

100
00:04:51,169 --> 00:04:53,240
getting all of our tweets and then we're

101
00:04:53,240 --> 00:04:55,610
creating a new tweet view out of those

102
00:04:55,610 --> 00:04:57,680
and then rendering those and put and

103
00:04:57,680 --> 00:05:00,560
putting those into the Dom so we end up

104
00:05:00,560 --> 00:05:02,300
having this structure where controllers

105
00:05:02,300 --> 00:05:05,180
would typically talk talk to the route

106
00:05:05,180 --> 00:05:06,680
or would talk to the controller and the

107
00:05:06,680 --> 00:05:08,060
controller with talk two views and

108
00:05:08,060 --> 00:05:14,540
models beautiful models I think Jeremy

109
00:05:14,540 --> 00:05:19,890
oshkosh is trying to interrupt the time

110
00:05:19,900 --> 00:05:23,300
so these are you talk to models and

111
00:05:23,300 --> 00:05:24,470
other views so there's a lot of

112
00:05:24,470 --> 00:05:26,720
relationships and this is actually a

113
00:05:26,720 --> 00:05:29,570
real slide that we had that we tried to

114
00:05:29,570 --> 00:05:31,520
document all of the relationships in in

115
00:05:31,520 --> 00:05:35,150
in Newt where's you I at the time and as

116
00:05:35,150 --> 00:05:36,770
you can see it's complicated it's

117
00:05:36,770 --> 00:05:39,350
whether there are a lot of relationships

118
00:05:39,350 --> 00:05:42,830
and hierarchical relationships and event

119
00:05:42,830 --> 00:05:44,690
relationships between all kinds of

120
00:05:44,690 --> 00:05:48,140
different pieces and the thing is is I

121
00:05:48,140 --> 00:05:49,760
think you know doesn't necessarily look

122
00:05:49,760 --> 00:05:51,560
it but twitter com is quite a

123
00:05:51,560 --> 00:05:54,650
complicated you I so this complexity was

124
00:05:54,650 --> 00:05:57,560
necessary there is a ton of stuff going

125
00:05:57,560 --> 00:05:59,450
on there and a ton of code needed to run

126
00:05:59,450 --> 00:06:02,510
all of that stuff so that's fine that we

127
00:06:02,510 --> 00:06:04,580
need this stuff to be complicated but

128
00:06:04,580 --> 00:06:07,490
what the situation we had is that when

129
00:06:07,490 --> 00:06:09,710
we added features what we were doing

130
00:06:09,710 --> 00:06:11,750
with is adding more boxes and lines to

131
00:06:11,750 --> 00:06:14,660
that diagram and increasing the amount

132
00:06:14,660 --> 00:06:15,360
that

133
00:06:15,360 --> 00:06:17,550
one engineer would need to understand

134
00:06:17,550 --> 00:06:19,349
they need to really understand most of

135
00:06:19,349 --> 00:06:21,030
them all those boxes and arrows in order

136
00:06:21,030 --> 00:06:24,090
to effectively do some work because they

137
00:06:24,090 --> 00:06:26,039
can't just like look at one bit of the

138
00:06:26,039 --> 00:06:28,650
code and change it without knowing all

139
00:06:28,650 --> 00:06:30,810
of the things that refer to it and

140
00:06:30,810 --> 00:06:32,400
knowing whether than there would be

141
00:06:32,400 --> 00:06:36,719
knock-on effects so how do we have a

142
00:06:36,719 --> 00:06:39,080
complex application with lots of sort of

143
00:06:39,080 --> 00:06:41,129
interdependencies and how do we make it

144
00:06:41,129 --> 00:06:43,860
like easy for engineers to think about

145
00:06:43,860 --> 00:06:46,199
so no matter how many features you add

146
00:06:46,199 --> 00:06:49,379
you still it's still just as easy to

147
00:06:49,379 --> 00:06:51,960
think about as when you had you know one

148
00:06:51,960 --> 00:06:54,719
control on the page and the answer

149
00:06:54,719 --> 00:06:58,770
really that we went for is we we were

150
00:06:58,770 --> 00:07:01,680
all about decoupling we wanted every

151
00:07:01,680 --> 00:07:04,500
single thing to every single sort of

152
00:07:04,500 --> 00:07:06,300
representation in the UI to be

153
00:07:06,300 --> 00:07:08,520
completely decoupled and not know

154
00:07:08,520 --> 00:07:10,949
anything about any of the other parts of

155
00:07:10,949 --> 00:07:13,199
the UI all and there are lots of

156
00:07:13,199 --> 00:07:15,750
different ways I mean in a sense MVC

157
00:07:15,750 --> 00:07:18,719
kind of at least sort of titans these

158
00:07:18,719 --> 00:07:22,139
these couplings so it and it gives the

159
00:07:22,139 --> 00:07:23,759
structure to the couplings but we wanted

160
00:07:23,759 --> 00:07:25,050
to go further than that we wanted to

161
00:07:25,050 --> 00:07:29,310
make sure that one UI element does not

162
00:07:29,310 --> 00:07:31,349
know where its data comes from it does

163
00:07:31,349 --> 00:07:34,080
not know or even care if any of the

164
00:07:34,080 --> 00:07:35,699
particular components are on the screen

165
00:07:35,699 --> 00:07:37,169
everything is just completely

166
00:07:37,169 --> 00:07:41,219
independent and this is sort of I think

167
00:07:41,219 --> 00:07:43,949
where we've gone a step further than the

168
00:07:43,949 --> 00:07:46,740
most other frameworks in this respect

169
00:07:46,740 --> 00:07:48,960
the way they're kind of pretentious

170
00:07:48,960 --> 00:07:53,430
stupid way of looking at it is it sells

171
00:07:53,430 --> 00:07:56,759
really we want each cell in a body which

172
00:07:56,759 --> 00:07:59,009
is the extremely complex thing isn't

173
00:07:59,009 --> 00:08:01,529
aware of what's outside it it just

174
00:08:01,529 --> 00:08:04,710
listens for changes in chemicals around

175
00:08:04,710 --> 00:08:07,020
it and and does its own thing but in

176
00:08:07,020 --> 00:08:09,659
aggregate these cells that don't know or

177
00:08:09,659 --> 00:08:12,599
care about the cells next to them create

178
00:08:12,599 --> 00:08:17,129
something really complicated and the way

179
00:08:17,129 --> 00:08:18,839
to get to that is the same way that

180
00:08:18,839 --> 00:08:21,900
sells get to that the components need to

181
00:08:21,900 --> 00:08:24,779
have this very very simple contract with

182
00:08:24,779 --> 00:08:27,969
the outside world and rather than know

183
00:08:27,969 --> 00:08:31,400
they've got a hold on to a view object

184
00:08:31,400 --> 00:08:34,190
in the view of views have a render

185
00:08:34,190 --> 00:08:38,419
method and they also have a reference to

186
00:08:38,419 --> 00:08:40,519
some other object and they have to know

187
00:08:40,519 --> 00:08:42,860
about the the API to that particular

188
00:08:42,860 --> 00:08:45,769
object we want just this really simple

189
00:08:45,769 --> 00:08:48,050
thing in the same way that sells listen

190
00:08:48,050 --> 00:08:52,050
to changes in chemicals around them so

191
00:08:52,060 --> 00:08:54,980
we yep we're heading for entirely

192
00:08:54,980 --> 00:08:58,810
self-contained components my

193
00:08:58,810 --> 00:09:00,740
non-pretentious way of looking at this

194
00:09:00,740 --> 00:09:03,890
is is if the poo is trapped in the box

195
00:09:03,890 --> 00:09:05,570
then it only smells when you open it

196
00:09:05,570 --> 00:09:08,209
well well it's trying to explain here is

197
00:09:08,209 --> 00:09:11,810
that if everything is completely

198
00:09:11,810 --> 00:09:15,230
self-contained we we don't care what's

199
00:09:15,230 --> 00:09:17,329
written in any one component we can

200
00:09:17,329 --> 00:09:19,220
refactor the whole thing as long as it

201
00:09:19,220 --> 00:09:22,459
continues to do its job we can put any

202
00:09:22,459 --> 00:09:24,560
old crappy old code in there and we'll

203
00:09:24,560 --> 00:09:26,570
because we can refactor that when we've

204
00:09:26,570 --> 00:09:28,640
got time we don't have to worry about

205
00:09:28,640 --> 00:09:31,370
some crappy design decisions in one part

206
00:09:31,370 --> 00:09:33,980
of the application having like a an

207
00:09:33,980 --> 00:09:36,949
effect on on that the application as a

208
00:09:36,949 --> 00:09:38,390
whole and not being able to refactor

209
00:09:38,390 --> 00:09:41,990
that so how did we achieve that with

210
00:09:41,990 --> 00:09:46,610
flight well we already I'm always been a

211
00:09:46,610 --> 00:09:50,420
great advocate of making use of what we

212
00:09:50,420 --> 00:09:53,839
have and going with the flow of the

213
00:09:53,839 --> 00:09:55,519
platform and in this case the browser

214
00:09:55,519 --> 00:09:58,339
rather than trying to create paradigms

215
00:09:58,339 --> 00:10:00,920
that sort of live alongside it so what

216
00:10:00,920 --> 00:10:03,050
do we have in the in the browser well we

217
00:10:03,050 --> 00:10:06,199
have we have the DOM and how can we make

218
00:10:06,199 --> 00:10:09,079
use of the Dom rather than kind of bash

219
00:10:09,079 --> 00:10:13,880
it into shape well the one nice thing I

220
00:10:13,880 --> 00:10:18,649
think the one elegant piece the facility

221
00:10:18,649 --> 00:10:20,930
that the Dom provides is actually event

222
00:10:20,930 --> 00:10:24,220
an event bubbling and and the way that

223
00:10:24,220 --> 00:10:26,449
events can be triggered at certain

224
00:10:26,449 --> 00:10:27,949
points in a document structure and

225
00:10:27,949 --> 00:10:30,050
because hopefully your document secure

226
00:10:30,050 --> 00:10:33,920
in your markup is actually give some

227
00:10:33,920 --> 00:10:35,930
structure to the application that the

228
00:10:35,930 --> 00:10:37,760
way that events bubble up through that

229
00:10:37,760 --> 00:10:39,139
structure is

230
00:10:39,139 --> 00:10:41,809
a really useful way to carry messages

231
00:10:41,809 --> 00:10:44,839
around the application it's got this

232
00:10:44,839 --> 00:10:49,609
inherent hierarchy so the some the

233
00:10:49,609 --> 00:10:51,499
tweets the markup for the tweets is

234
00:10:51,499 --> 00:10:53,359
inside some markup that represents a

235
00:10:53,359 --> 00:10:56,359
timeline and that markup is inside the

236
00:10:56,359 --> 00:10:58,279
body of the page and so on this is this

237
00:10:58,279 --> 00:11:00,410
is all structure that actually maps to

238
00:11:00,410 --> 00:11:03,739
the way this application works and we

239
00:11:03,739 --> 00:11:06,410
can make use of that we have a vent

240
00:11:06,410 --> 00:11:10,369
bubbling so we take advantage of all of

241
00:11:10,369 --> 00:11:13,429
this and an essentially a flight

242
00:11:13,429 --> 00:11:15,889
component in the simple words as

243
00:11:15,889 --> 00:11:17,809
possible is an object that has a

244
00:11:17,809 --> 00:11:19,699
reference to a dom node so it's a simple

245
00:11:19,699 --> 00:11:21,889
JavaScript object it has a property

246
00:11:21,889 --> 00:11:25,040
called node at that point to a single

247
00:11:25,040 --> 00:11:28,189
Dom node and it and there are three

248
00:11:28,189 --> 00:11:29,540
things that it can do it can manipulate

249
00:11:29,540 --> 00:11:32,149
that node so it can change classes on it

250
00:11:32,149 --> 00:11:36,199
can put new markup into it can do me and

251
00:11:36,199 --> 00:11:38,119
change styles on it if if you really

252
00:11:38,119 --> 00:11:41,059
need to it can trigger event on that Dom

253
00:11:41,059 --> 00:11:42,980
node so if it wants to alert the outside

254
00:11:42,980 --> 00:11:44,540
world to something that's happened

255
00:11:44,540 --> 00:11:47,119
within it then it can fire an event and

256
00:11:47,119 --> 00:11:49,790
say okay someone clicked me and I think

257
00:11:49,790 --> 00:11:52,850
this is and they mean that they want to

258
00:11:52,850 --> 00:11:56,989
retweet tweet ID 55 for instance and

259
00:11:56,989 --> 00:11:58,669
they can also listen for events they can

260
00:11:58,669 --> 00:12:00,829
anything that they might care about that

261
00:12:00,829 --> 00:12:02,660
happens in the outside world like some

262
00:12:02,660 --> 00:12:08,209
new data coming in or a user clicking on

263
00:12:08,209 --> 00:12:10,610
that node or some sub part of that node

264
00:12:10,610 --> 00:12:11,989
they can listen to that event and then

265
00:12:11,989 --> 00:12:17,089
in and respond so to get sort of right

266
00:12:17,089 --> 00:12:18,649
to the meat of it I'm not sure how many

267
00:12:18,649 --> 00:12:25,339
people have seen flight ok I will do

268
00:12:25,339 --> 00:12:28,669
this in a medium pace there so this is a

269
00:12:28,669 --> 00:12:31,819
flat component the it's essentially

270
00:12:31,819 --> 00:12:34,459
quite simple the where you start when

271
00:12:34,459 --> 00:12:35,809
you're reading a flight component is

272
00:12:35,809 --> 00:12:40,009
down here initialize now what initialize

273
00:12:40,009 --> 00:12:45,470
we'll run that when the time the a an

274
00:12:45,470 --> 00:12:47,179
instance of this component because you

275
00:12:47,179 --> 00:12:48,980
can see this like a class you make many

276
00:12:48,980 --> 00:12:50,830
instances of one component and

277
00:12:50,830 --> 00:12:53,710
each Dom node gets its own incidence of

278
00:12:53,710 --> 00:12:56,980
this component so when that attached

279
00:12:56,980 --> 00:12:58,630
happens when a new instance of the

280
00:12:58,630 --> 00:13:00,910
component is made and attached to a Dom

281
00:13:00,910 --> 00:13:03,370
element then initialize is called and

282
00:13:03,370 --> 00:13:05,620
this is where you just normally set up

283
00:13:05,620 --> 00:13:07,840
event handlers so in this case this is

284
00:13:07,840 --> 00:13:11,620
sort of like a generic toggler thing it

285
00:13:11,620 --> 00:13:15,730
listens to a click on the node and and

286
00:13:15,730 --> 00:13:21,040
just kind of flicks flicks a class so

287
00:13:21,040 --> 00:13:22,720
you'll see we set we set up the event

288
00:13:22,720 --> 00:13:24,070
handler and then that's the event

289
00:13:24,070 --> 00:13:26,770
handler really simple and then you can

290
00:13:26,770 --> 00:13:29,740
put other bits of state in there and

291
00:13:29,740 --> 00:13:32,920
other methods and and basically this is

292
00:13:32,920 --> 00:13:34,660
your little bit of code that puppy

293
00:13:34,660 --> 00:13:38,200
puppets a Dom element and that's that's

294
00:13:38,200 --> 00:13:40,150
all there is to flight really this is

295
00:13:40,150 --> 00:13:42,580
this is what you get but it enables us

296
00:13:42,580 --> 00:13:44,470
to kind of take advantage of this this

297
00:13:44,470 --> 00:13:48,160
decoupling your app basically becomes a

298
00:13:48,160 --> 00:13:50,950
collection of these components all all

299
00:13:50,950 --> 00:13:53,260
not knowing about each other just all

300
00:13:53,260 --> 00:13:54,910
kind of doing their own thing in

301
00:13:54,910 --> 00:13:57,250
complete isolation and the way that you

302
00:13:57,250 --> 00:13:59,110
actually sort of structure your app and

303
00:13:59,110 --> 00:14:02,020
composer is is basically just by taking

304
00:14:02,020 --> 00:14:03,640
a collection of these components and

305
00:14:03,640 --> 00:14:06,280
attaching them to pieces of the Dom so

306
00:14:06,280 --> 00:14:10,180
you can say why my navigation component

307
00:14:10,180 --> 00:14:13,120
can attach to the top nav and I'll

308
00:14:13,120 --> 00:14:15,760
attach this toggler to some selector

309
00:14:15,760 --> 00:14:19,840
passing some options to for what the

310
00:14:19,840 --> 00:14:21,850
toggle clasp is called and this is

311
00:14:21,850 --> 00:14:25,080
basically how how the whole thing works

312
00:14:25,080 --> 00:14:27,640
so the idea is is instead of

313
00:14:27,640 --> 00:14:30,580
understanding the the diagram before and

314
00:14:30,580 --> 00:14:32,550
all of these relationships that all

315
00:14:32,550 --> 00:14:35,800
point all the all different other parts

316
00:14:35,800 --> 00:14:37,690
of the application when you're actually

317
00:14:37,690 --> 00:14:41,050
writing or adding functionality or

318
00:14:41,050 --> 00:14:43,120
changing functionality all you're doing

319
00:14:43,120 --> 00:14:45,820
is considering one single component at a

320
00:14:45,820 --> 00:14:48,520
time you don't have to understand how

321
00:14:48,520 --> 00:14:50,280
the whole thing works you just have to

322
00:14:50,280 --> 00:14:53,170
look at the component you need to change

323
00:14:53,170 --> 00:14:55,110
or the component you need to add

324
00:14:55,110 --> 00:14:58,150
understand how that works and then make

325
00:14:58,150 --> 00:15:01,360
your changes so instead of that giant

326
00:15:01,360 --> 00:15:04,460
diagram you only really need to

327
00:15:04,460 --> 00:15:06,770
understand something like this my tub

328
00:15:06,770 --> 00:15:12,770
this is a toggle component it you if I

329
00:15:12,770 --> 00:15:14,690
is enable and disable events to the

330
00:15:14,690 --> 00:15:16,820
outside world and it listens for clicks

331
00:15:16,820 --> 00:15:19,100
and that's literally all you need to

332
00:15:19,100 --> 00:15:22,820
understand so with that you your your

333
00:15:22,820 --> 00:15:24,800
poo is trapped in its box whatever

334
00:15:24,800 --> 00:15:26,630
happens inside that toggle is very

335
00:15:26,630 --> 00:15:30,190
localized to that particular component

336
00:15:30,190 --> 00:15:33,890
the nice thing about this and sort of a

337
00:15:33,890 --> 00:15:36,020
lot of this relates to the previous talk

338
00:15:36,020 --> 00:15:39,050
on iop is that we don't have to resort

339
00:15:39,050 --> 00:15:42,440
to marks for tests we because everything

340
00:15:42,440 --> 00:15:45,980
is so atomic and and one component

341
00:15:45,980 --> 00:15:48,080
doesn't even care that there might be

342
00:15:48,080 --> 00:15:50,810
other components on the page you have

343
00:15:50,810 --> 00:15:52,580
this great environment for tests you

344
00:15:52,580 --> 00:15:55,280
take a single component one at a time

345
00:15:55,280 --> 00:15:57,680
you fire events on it and check that it

346
00:15:57,680 --> 00:16:01,040
does what you want it to do and and then

347
00:16:01,040 --> 00:16:02,660
you check that it finds the events that

348
00:16:02,660 --> 00:16:05,120
you expect it to have and just you're

349
00:16:05,120 --> 00:16:07,700
simply testing this this contract which

350
00:16:07,700 --> 00:16:11,510
is a relatively easy to understand we

351
00:16:11,510 --> 00:16:15,290
have a tool for that called flight

352
00:16:15,290 --> 00:16:17,060
jasmine it's basically sort of a set of

353
00:16:17,060 --> 00:16:19,610
jasmine helpers that allows us to test

354
00:16:19,610 --> 00:16:22,520
these contracts a small example of that

355
00:16:22,520 --> 00:16:25,970
is if we wanted to write sir shins about

356
00:16:25,970 --> 00:16:29,500
this we just be able to say okay

357
00:16:29,500 --> 00:16:32,120
describe this component called toggle it

358
00:16:32,120 --> 00:16:34,340
would set up this component essentially

359
00:16:34,340 --> 00:16:35,720
what it would do is gives you a fresh

360
00:16:35,720 --> 00:16:38,060
piece of markup for every for every

361
00:16:38,060 --> 00:16:42,350
single test it attaches a fresh instance

362
00:16:42,350 --> 00:16:43,790
of that node to it and then it runs a

363
00:16:43,790 --> 00:16:46,190
single test so there's no test pollution

364
00:16:46,190 --> 00:16:47,720
you're just testing this one thing at a

365
00:16:47,720 --> 00:16:50,000
time you get a fresh incidents every

366
00:16:50,000 --> 00:16:52,220
single time and you do a new basically

367
00:16:52,220 --> 00:16:54,950
doing stuff like this so you can you can

368
00:16:54,950 --> 00:16:57,530
spy on event so you this this test is

369
00:16:57,530 --> 00:17:00,110
just if you click it does it fire the

370
00:17:00,110 --> 00:17:02,870
enabled event and then you as you can

371
00:17:02,870 --> 00:17:04,760
imagine you just kind of write a test

372
00:17:04,760 --> 00:17:06,650
for each one of those things that we

373
00:17:06,650 --> 00:17:09,320
have in our contract here and and you

374
00:17:09,320 --> 00:17:12,730
don't you have pretty nice test coverage

375
00:17:12,730 --> 00:17:15,830
so how do we apply this to twitter com

376
00:17:15,830 --> 00:17:17,990
and something that you know

377
00:17:17,990 --> 00:17:20,689
is non-trivial well essentially what

378
00:17:20,689 --> 00:17:23,240
what we've done on top of this is it

379
00:17:23,240 --> 00:17:25,040
sort of have this reasonably hard

380
00:17:25,040 --> 00:17:27,850
separation between UI components and

381
00:17:27,850 --> 00:17:31,429
data component so what we wanted to do

382
00:17:31,429 --> 00:17:34,370
is have UI components whose only job is

383
00:17:34,370 --> 00:17:38,660
to is manipulate the UI and typically

384
00:17:38,660 --> 00:17:40,550
they take a browser event like a click

385
00:17:40,550 --> 00:17:44,360
or a key press and then they they do a

386
00:17:44,360 --> 00:17:47,750
little bit of logic to work to turn it

387
00:17:47,750 --> 00:17:49,790
into a higher level an application event

388
00:17:49,790 --> 00:17:51,890
so for instance you might have a follow

389
00:17:51,890 --> 00:17:55,010
button and a follow button UI component

390
00:17:55,010 --> 00:17:56,300
that will sit on top of it it will

391
00:17:56,300 --> 00:17:59,600
listen for clicks and then fire an event

392
00:17:59,600 --> 00:18:04,370
called follow or you I follow in using

393
00:18:04,370 --> 00:18:07,750
our naming conventions and the user ID

394
00:18:07,750 --> 00:18:11,660
would be done wrong for instance what

395
00:18:11,660 --> 00:18:13,250
what then happens is we have data

396
00:18:13,250 --> 00:18:15,080
components which are which are just

397
00:18:15,080 --> 00:18:16,580
normal components just like the one you

398
00:18:16,580 --> 00:18:19,640
saw but their only job is to talk to the

399
00:18:19,640 --> 00:18:22,190
server or whatever other wherever else

400
00:18:22,190 --> 00:18:25,220
you tore your data so they normally sit

401
00:18:25,220 --> 00:18:27,590
on the document because there because in

402
00:18:27,590 --> 00:18:29,870
the example of follow we we want to

403
00:18:29,870 --> 00:18:31,340
listen to follow events wherever they

404
00:18:31,340 --> 00:18:32,690
come from they can come from anywhere in

405
00:18:32,690 --> 00:18:34,730
the UI so we listened to the whole

406
00:18:34,730 --> 00:18:36,410
document listening for those follow

407
00:18:36,410 --> 00:18:38,210
events to come up and they're making the

408
00:18:38,210 --> 00:18:39,770
requests when the request comes back

409
00:18:39,770 --> 00:18:42,559
they they fire another vent a broadcast

410
00:18:42,559 --> 00:18:45,320
an event that says the follow of user

411
00:18:45,320 --> 00:18:48,230
dan wrong was successful or arid and so

412
00:18:48,230 --> 00:18:51,020
on and then the UI components can can

413
00:18:51,020 --> 00:18:52,700
listen to the successor error and

414
00:18:52,700 --> 00:18:54,980
actually should reflect that in the UI

415
00:18:54,980 --> 00:18:57,679
and this is essentially how pretty much

416
00:18:57,679 --> 00:19:01,700
everything works in twitter com the nice

417
00:19:01,700 --> 00:19:04,670
thing is is that say if you click the

418
00:19:04,670 --> 00:19:06,200
follow button you also wanted to update

419
00:19:06,200 --> 00:19:08,660
your following count on the page then

420
00:19:08,660 --> 00:19:12,260
the the you just basically link that to

421
00:19:12,260 --> 00:19:13,880
the result event so you add a new

422
00:19:13,880 --> 00:19:15,950
component which is the follower count

423
00:19:15,950 --> 00:19:18,410
component for instance and you you just

424
00:19:18,410 --> 00:19:20,630
listen for the yes the follow was

425
00:19:20,630 --> 00:19:22,850
successful and increment the count but

426
00:19:22,850 --> 00:19:24,620
the other stuff that you'd previously

427
00:19:24,620 --> 00:19:26,900
written you don't care about that that

428
00:19:26,900 --> 00:19:28,669
could be taken away it could not be

429
00:19:28,669 --> 00:19:30,230
there at all and everything could still

430
00:19:30,230 --> 00:19:30,909
work

431
00:19:30,909 --> 00:19:34,509
no code no code is required to be

432
00:19:34,509 --> 00:19:36,399
changed in the existing stuff you're

433
00:19:36,399 --> 00:19:39,429
simply adding extra behavior arm I mean

434
00:19:39,429 --> 00:19:42,729
what we tend to do is further to that is

435
00:19:42,729 --> 00:19:45,179
though we implement a logger this way

436
00:19:45,179 --> 00:19:47,590
previously we would have calls to our

437
00:19:47,590 --> 00:19:49,779
logger code inside all of our models and

438
00:19:49,779 --> 00:19:52,119
stuff so if we wanted to log when a

439
00:19:52,119 --> 00:19:54,460
follow happened on the UI we would

440
00:19:54,460 --> 00:19:56,259
actually like have a method call that

441
00:19:56,259 --> 00:19:59,379
said log this thing happen but now we a

442
00:19:59,379 --> 00:20:02,470
logger is a component that just watches

443
00:20:02,470 --> 00:20:04,379
over the application and and just

444
00:20:04,379 --> 00:20:06,669
listens for things that it cares about

445
00:20:06,669 --> 00:20:08,769
and logs them it's completely separate

446
00:20:08,769 --> 00:20:11,169
to all of our application logic and it

447
00:20:11,169 --> 00:20:12,629
literally just sort of sits here and

448
00:20:12,629 --> 00:20:15,159
listens for events just like anything

449
00:20:15,159 --> 00:20:18,519
else and sends them to the server and so

450
00:20:18,519 --> 00:20:21,669
to scale like I mean it I suppose it

451
00:20:21,669 --> 00:20:24,220
looks something like this more

452
00:20:24,220 --> 00:20:26,229
components more events being fired but

453
00:20:26,229 --> 00:20:28,179
the point is you don't need to

454
00:20:28,179 --> 00:20:31,749
understand this it's irrelevant the

455
00:20:31,749 --> 00:20:33,789
overview all you need to understand is

456
00:20:33,789 --> 00:20:36,460
under standard want is one component at

457
00:20:36,460 --> 00:20:38,499
a time so the more we add and the more

458
00:20:38,499 --> 00:20:41,259
complexity we add we don't actually add

459
00:20:41,259 --> 00:20:42,789
to the mental overhead of being able to

460
00:20:42,789 --> 00:20:48,129
work on this system but that is just our

461
00:20:48,129 --> 00:20:50,559
architecture that isn't the flight way

462
00:20:50,559 --> 00:20:54,609
of doing things we only we only

463
00:20:54,609 --> 00:20:58,509
prescribe the component architecture and

464
00:20:58,509 --> 00:21:00,759
the event mechanism we don't care what

465
00:21:00,759 --> 00:21:03,279
templating you use we don't care whether

466
00:21:03,279 --> 00:21:05,649
you do that templating on the client or

467
00:21:05,649 --> 00:21:07,599
the server we don't make any assumptions

468
00:21:07,599 --> 00:21:09,970
based on that at all we don't care where

469
00:21:09,970 --> 00:21:11,859
you keep the state whether it's in sort

470
00:21:11,859 --> 00:21:14,109
of model like objects or whether you

471
00:21:14,109 --> 00:21:17,409
defer all that to the server it's all up

472
00:21:17,409 --> 00:21:19,590
to you we just give you this way of

473
00:21:19,590 --> 00:21:25,239
enforcing this coupling and so I suppose

474
00:21:25,239 --> 00:21:26,889
the answer to the original question why

475
00:21:26,889 --> 00:21:29,619
not just use angular well it's it's not

476
00:21:29,619 --> 00:21:33,639
equivalent to angular I think in in many

477
00:21:33,639 --> 00:21:36,879
ways I'd call it a it's a framework for

478
00:21:36,879 --> 00:21:39,159
making frameworks you it's a way of

479
00:21:39,159 --> 00:21:41,409
handling communication and decoupling

480
00:21:41,409 --> 00:21:44,470
and you add your own architecture on top

481
00:21:44,470 --> 00:21:48,820
an example of that is this thing that's

482
00:21:48,820 --> 00:21:50,919
popped up just recently Icarus actually

483
00:21:50,919 --> 00:21:55,150
sort of adds a model layer by by adding

484
00:21:55,150 --> 00:21:58,120
some code to components so instead of

485
00:21:58,120 --> 00:22:00,010
the data components that we have which

486
00:22:00,010 --> 00:22:02,770
are quite raw they the data components

487
00:22:02,770 --> 00:22:04,480
represent models and they have change

488
00:22:04,480 --> 00:22:07,330
events that you can about you can bind

489
00:22:07,330 --> 00:22:10,900
to and so on so and I'd love to see you

490
00:22:10,900 --> 00:22:13,059
no more of this kind of thing that let's

491
00:22:13,059 --> 00:22:16,950
lay a different UI paradigms on top and

492
00:22:16,950 --> 00:22:19,090
you know make more assumptions about

493
00:22:19,090 --> 00:22:21,789
different ways of doing things so it's

494
00:22:21,789 --> 00:22:24,640
kind of a to bring your own architecture

495
00:22:24,640 --> 00:22:29,110
really so what's next well we've got

496
00:22:29,110 --> 00:22:31,299
that we've got a lot going on at the

497
00:22:31,299 --> 00:22:34,480
moment we we just got a new logo to this

498
00:22:34,480 --> 00:22:36,190
F thing Danny yes sir there's some

499
00:22:36,190 --> 00:22:39,010
t-shirts coming probably stickers hadn't

500
00:22:39,010 --> 00:22:43,500
thought much past that but yeah I think

501
00:22:43,500 --> 00:22:46,929
it would be great to actually because we

502
00:22:46,929 --> 00:22:49,510
have this sort of really reusable really

503
00:22:49,510 --> 00:22:51,610
decoupled thing and there's been quite a

504
00:22:51,610 --> 00:22:53,500
few components that sort of do more

505
00:22:53,500 --> 00:22:55,510
general things that could be used in

506
00:22:55,510 --> 00:22:57,730
lots of different apps coming coming out

507
00:22:57,730 --> 00:23:01,299
there's there's a component the does

508
00:23:01,299 --> 00:23:04,270
local storage and yeah a few other ones

509
00:23:04,270 --> 00:23:05,890
that are popping up I'd love to see more

510
00:23:05,890 --> 00:23:08,500
than that more of that and maybe we we

511
00:23:08,500 --> 00:23:11,289
create a central repo for those another

512
00:23:11,289 --> 00:23:14,530
thing that I'm really excited about but

513
00:23:14,530 --> 00:23:15,909
we've only sort of thought through a

514
00:23:15,909 --> 00:23:18,880
little bit is we think that this

515
00:23:18,880 --> 00:23:21,700
architecture could map to web components

516
00:23:21,700 --> 00:23:24,850
in a really really elegant way and

517
00:23:24,850 --> 00:23:28,120
polymers just came out which I I love

518
00:23:28,120 --> 00:23:30,250
the idea of it's obviously very new and

519
00:23:30,250 --> 00:23:31,929
want to keep an eye on that for a while

520
00:23:31,929 --> 00:23:35,200
but I could imagine web components and

521
00:23:35,200 --> 00:23:36,970
flight becoming quite an interesting

522
00:23:36,970 --> 00:23:41,340
thing so if you want to check it out

523
00:23:41,340 --> 00:23:46,750
it's github com / twitter / flight we

524
00:23:46,750 --> 00:23:48,880
have a Twitter account predictably which

525
00:23:48,880 --> 00:23:52,960
is at flight yell be around if anyone's

526
00:23:52,960 --> 00:23:56,760
interested in chatting about flight we

527
00:23:56,760 --> 00:24:00,090
have we thought as everyone's going

528
00:24:00,090 --> 00:24:02,940
downtown tomorrow that we pick a

529
00:24:02,940 --> 00:24:04,860
drinking establishment and sort of post

530
00:24:04,860 --> 00:24:07,320
up there so if anyone wants to come and

531
00:24:07,320 --> 00:24:10,020
ask questions or chat about flight love

532
00:24:10,020 --> 00:24:12,360
to hear are people using it and whether

533
00:24:12,360 --> 00:24:14,990
you hate it or not love to have a

534
00:24:14,990 --> 00:24:17,880
drunken argument about JavaScript me to

535
00:24:17,880 --> 00:24:21,330
anyone into that yeah we'll be at eight

536
00:24:21,330 --> 00:24:24,120
there are eight and Palace Saloon right

537
00:24:24,120 --> 00:24:26,450
in downtown thinking tomorrow night and

538
00:24:26,450 --> 00:24:29,370
come and chat to me we if you want to

539
00:24:29,370 --> 00:24:31,530
come and work with flight at Twitter

540
00:24:31,530 --> 00:24:33,750
come and chat to me because we have lots

541
00:24:33,750 --> 00:24:36,510
of interesting web rolls coming up so

