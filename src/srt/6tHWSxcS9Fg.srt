1
00:00:07,910 --> 00:00:11,719

hi everybody thank you for being here

2
00:00:11,719 --> 00:00:14,519
this will talk with a little bit more

3
00:00:14,519 --> 00:00:18,900
practical less no Jess and stuff like

4
00:00:18,900 --> 00:00:24,380
this okay but there will be some anyway

5
00:00:24,380 --> 00:00:28,170
this talk will be about addresses that

6
00:00:28,170 --> 00:00:34,200
look like this with a hashtag or a

7
00:00:34,200 --> 00:00:38,040
little bit more crawlable if we put an

8
00:00:38,040 --> 00:00:42,329
exclamation mark in the beginning of the

9
00:00:42,329 --> 00:00:48,780
fact that hash fragment or the URL can

10
00:00:48,780 --> 00:00:52,379
be simply perfect if there is no hash at

11
00:00:52,379 --> 00:00:59,309
all okay a little bit of history how

12
00:00:59,309 --> 00:01:02,449
this whole thing started you know

13
00:01:02,449 --> 00:01:06,299
probably ten years ago everything from

14
00:01:06,299 --> 00:01:08,700
the web was about multimedia

15
00:01:08,700 --> 00:01:13,229
interactivity the years were flash gains

16
00:01:13,229 --> 00:01:19,049
ground and the first information on this

17
00:01:19,049 --> 00:01:24,240
subject was published by Kevin Lynch who

18
00:01:24,240 --> 00:01:27,540
is now a CTO of Adobe at that time a

19
00:01:27,540 --> 00:01:30,540
city of macromedia and he was the first

20
00:01:30,540 --> 00:01:34,860
guy that showcased how the address can

21
00:01:34,860 --> 00:01:38,509
be manipulated using plain JavaScript

22
00:01:38,509 --> 00:01:46,890
back in 2004 so later if you have heard

23
00:01:46,890 --> 00:01:50,509
of really simple history a year later in

24
00:01:50,509 --> 00:01:54,540
2005 this was one of the first libraries

25
00:01:54,540 --> 00:01:57,659
that enabled such behavior in the

26
00:01:57,659 --> 00:02:04,770
browser at that time I was interested in

27
00:02:04,770 --> 00:02:09,869
that subject and a year later

28
00:02:09,869 --> 00:02:13,650
I released this library it was primarily

29
00:02:13,650 --> 00:02:16,489
targeted for a flash websites because

30
00:02:16,489 --> 00:02:20,849
the flash website web sites also has

31
00:02:20,849 --> 00:02:24,450
such problems with linking to specific

32
00:02:24,450 --> 00:02:29,250
sub pages of a website or an application

33
00:02:29,250 --> 00:02:34,349
and this really has became the standard

34
00:02:34,349 --> 00:02:37,049
for deep linking in the flash world and

35
00:02:37,049 --> 00:02:40,440
later it was used also on variety of

36
00:02:40,440 --> 00:02:47,370
Ajax powered websites so nowadays dis

37
00:02:47,370 --> 00:02:49,879
functionalities provided out of the box

38
00:02:49,879 --> 00:02:55,260
by many frameworks so you can probably

39
00:02:55,260 --> 00:02:59,459
very easily start using it and really

40
00:02:59,459 --> 00:03:03,680
lots of clients need such functionality

41
00:03:03,680 --> 00:03:09,599
and in case you use jQuery I believe

42
00:03:09,599 --> 00:03:14,870
most of you do nowadays these are the

43
00:03:14,870 --> 00:03:18,329
the best plugins that enable such

44
00:03:18,329 --> 00:03:25,799
functionality in jQuery ok I'd like to

45
00:03:25,799 --> 00:03:30,030
show you a few examples of what is this

46
00:03:30,030 --> 00:03:35,579
actually doing so here is a showcase of

47
00:03:35,579 --> 00:03:38,190
the suite of websites that use the

48
00:03:38,190 --> 00:03:41,519
swiffer dress project these are

49
00:03:41,519 --> 00:03:46,049
primarily flash websites I hope that in

50
00:03:46,049 --> 00:03:50,129
the near future we'll see lots of gee's

51
00:03:50,129 --> 00:03:52,500
rich experience websites implemented

52
00:03:52,500 --> 00:03:55,940
using canvas and some more hardware

53
00:03:55,940 --> 00:03:59,400
accelerated features of html5 but

54
00:03:59,400 --> 00:04:01,739
basically these are websites created by

55
00:04:01,739 --> 00:04:08,340
large agencies and and they have really

56
00:04:08,340 --> 00:04:10,829
provided me with a lots of quality

57
00:04:10,829 --> 00:04:15,150
feedback how this solution actually

58
00:04:15,150 --> 00:04:19,909
works for them a typical website that

59
00:04:19,909 --> 00:04:22,560
needs such a functionalities like

60
00:04:22,560 --> 00:04:23,639
converse

61
00:04:23,639 --> 00:04:30,270
so you can do a search they

62
00:04:30,270 --> 00:04:34,139
automatically change the address I'm not

63
00:04:34,139 --> 00:04:35,990
sure how exactly they keep the state

64
00:04:35,990 --> 00:04:39,900
because the deep link here does not

65
00:04:39,900 --> 00:04:45,870
contain the exact query string but you

66
00:04:45,870 --> 00:04:50,219
can go jump and select a model select

67
00:04:50,219 --> 00:04:55,789
the color and you always have a unique

68
00:04:55,789 --> 00:05:00,360
link in the address bar also the back

69
00:05:00,360 --> 00:05:06,270
button is working as it should and you

70
00:05:06,270 --> 00:05:10,949
get a real experience typical for the

71
00:05:10,949 --> 00:05:18,330
standard web pages ok I after this sweet

72
00:05:18,330 --> 00:05:22,110
address project I have developed jquery

73
00:05:22,110 --> 00:05:25,740
plugin that basically enables the same

74
00:05:25,740 --> 00:05:30,539
functionality for jquery a typical

75
00:05:30,539 --> 00:05:36,000
example of such functionality is needed

76
00:05:36,000 --> 00:05:41,789
by image galleries so here the Guardian

77
00:05:41,789 --> 00:05:46,520
website uses this for this library for

78
00:05:46,520 --> 00:05:50,159
their image galleries and there can be

79
00:05:50,159 --> 00:05:54,930
some funny things I will try to show you

80
00:05:54,930 --> 00:05:59,849
but let's see if the site of science is

81
00:05:59,849 --> 00:06:05,069
good and also this funny website by a

82
00:06:05,069 --> 00:06:08,909
Swedish webpage enci using different

83
00:06:08,909 --> 00:06:13,319
keys you can create some sort of loops

84
00:06:13,319 --> 00:06:18,229
and each of these key braces generates

85
00:06:18,229 --> 00:06:22,889
an address change so you can then copy

86
00:06:22,889 --> 00:06:29,719
this in the new tab and your recording

87
00:06:29,719 --> 00:06:39,290
will be played automatically

88
00:06:39,300 --> 00:06:44,950
no it was justice so basically you can

89
00:06:44,950 --> 00:06:47,860
use the the address bar as a place to

90
00:06:47,860 --> 00:06:53,290
store some sort of state for or for your

91
00:06:53,290 --> 00:06:59,260
website or application okay so do you

92
00:06:59,260 --> 00:07:01,210
really need a dedicated to library for

93
00:07:01,210 --> 00:07:03,720
this many people find it really easy to

94
00:07:03,720 --> 00:07:15,510
manipulate the vocation hash manually so

95
00:07:15,510 --> 00:07:20,440
they are really there are really hard

96
00:07:20,440 --> 00:07:23,350
times detecting this behavior in every

97
00:07:23,350 --> 00:07:30,540
browser historically you may see that

98
00:07:30,540 --> 00:07:33,730
there are different cases even for

99
00:07:33,730 --> 00:07:37,090
browsers like Safari to that you may not

100
00:07:37,090 --> 00:07:40,690
want support today but if it's doable

101
00:07:40,690 --> 00:07:45,760
why why not so Internet Explorer was

102
00:07:45,760 --> 00:07:48,250
typically using a hidden iframe to

103
00:07:48,250 --> 00:07:50,410
detect the pressing of the back and

104
00:07:50,410 --> 00:07:54,600
forward buttons this was monitored in

105
00:07:54,600 --> 00:08:00,070
Firefox one two three safari opera using

106
00:08:00,070 --> 00:08:04,270
constant interval that runs each 50

107
00:08:04,270 --> 00:08:08,770
seconds later we had the unhatched

108
00:08:08,770 --> 00:08:12,130
change event introduced by Internet

109
00:08:12,130 --> 00:08:15,130
Explorer 8 and now there is a new

110
00:08:15,130 --> 00:08:18,880
feature in html5 on touch state and you

111
00:08:18,880 --> 00:08:21,040
event a new kind of functionality that

112
00:08:21,040 --> 00:08:26,380
we'll talk a little bit more

113
00:08:26,390 --> 00:08:32,210
so in addition to this browser

114
00:08:32,210 --> 00:08:36,540
obstruction a dedicated solution can can

115
00:08:36,540 --> 00:08:40,500
provide a lot of different features for

116
00:08:40,500 --> 00:08:44,070
example you can have sort of query kind

117
00:08:44,070 --> 00:08:47,640
of parameters in the address and you can

118
00:08:47,640 --> 00:08:50,640
easily set and force them you can have

119
00:08:50,640 --> 00:08:55,110
special events because usually this kind

120
00:08:55,110 --> 00:08:58,890
of events come from the back and forward

121
00:08:58,890 --> 00:09:01,890
button you can enter something manually

122
00:09:01,890 --> 00:09:05,010
in indy address it's one type of event

123
00:09:05,010 --> 00:09:08,010
and a lower type of event give the user

124
00:09:08,010 --> 00:09:10,670
interface or the website is manually

125
00:09:10,670 --> 00:09:16,200
clicked or some kind of other

126
00:09:16,200 --> 00:09:20,760
interaction has happened so you may want

127
00:09:20,760 --> 00:09:23,090
to track these kind of virtual pages

128
00:09:23,090 --> 00:09:26,790
using google analytics and the projects

129
00:09:26,790 --> 00:09:29,700
i'm developing are automatically doing

130
00:09:29,700 --> 00:09:33,300
this for you you can have a fallback for

131
00:09:33,300 --> 00:09:37,680
some modern features that you may not

132
00:09:37,680 --> 00:09:41,040
want to support you may want to support

133
00:09:41,040 --> 00:09:44,130
both browsers you can disable the

134
00:09:44,130 --> 00:09:46,380
history if you want so you just can

135
00:09:46,380 --> 00:09:49,050
generate deep links without enabling the

136
00:09:49,050 --> 00:09:51,960
but the back button functionality and

137
00:09:51,960 --> 00:09:54,180
sometimes there are some scrolling

138
00:09:54,180 --> 00:09:57,810
issues because these hashtags they

139
00:09:57,810 --> 00:10:04,110
correspond to IDS of HTML tags and so

140
00:10:04,110 --> 00:10:06,930
that the page can jump up and down if

141
00:10:06,930 --> 00:10:11,780
there is a lot of content

142
00:10:11,790 --> 00:10:14,790
so one of the common misunderstanding

143
00:10:14,790 --> 00:10:20,400
that people that are new to this here I

144
00:10:20,400 --> 00:10:24,960
have provided some jQuery code most of

145
00:10:24,960 --> 00:10:27,390
the people are used to this approach of

146
00:10:27,390 --> 00:10:30,380
where they they have they have an event

147
00:10:30,380 --> 00:10:35,580
bounced to the on click of a link for

148
00:10:35,580 --> 00:10:41,640
example and they start directly with

149
00:10:41,640 --> 00:10:44,790
making come Ajax requests that load some

150
00:10:44,790 --> 00:10:48,330
dynamic content and then they try to use

151
00:10:48,330 --> 00:10:50,670
for example the address plug-in to

152
00:10:50,670 --> 00:10:55,950
change the address value and they don't

153
00:10:55,950 --> 00:10:59,760
know what to do with the event of the

154
00:10:59,760 --> 00:11:02,640
plugin that gets fired there is a change

155
00:11:02,640 --> 00:11:06,270
event that gets fired each time when the

156
00:11:06,270 --> 00:11:10,650
address is changed so when you want to

157
00:11:10,650 --> 00:11:13,700
develop something like this you need to

158
00:11:13,700 --> 00:11:17,820
forget about this manual interaction

159
00:11:17,820 --> 00:11:22,890
keys click events because you need to

160
00:11:22,890 --> 00:11:27,080
make your website work like a restful

161
00:11:27,080 --> 00:11:30,360
application like a restful protocol

162
00:11:30,360 --> 00:11:34,140
because all the information you need to

163
00:11:34,140 --> 00:11:37,740
render the specific state is a part of

164
00:11:37,740 --> 00:11:42,000
the address so all these Ajax loading

165
00:11:42,000 --> 00:11:45,210
and stuff like this should be moved into

166
00:11:45,210 --> 00:11:50,610
the change event so that the Ajax can be

167
00:11:50,610 --> 00:11:53,220
loaded even if the page is directly

168
00:11:53,220 --> 00:12:01,590
loaded using a specific address the

169
00:12:01,590 --> 00:12:05,820
forward of the hash fragment also

170
00:12:05,820 --> 00:12:09,060
matters and there are libraries and

171
00:12:09,060 --> 00:12:12,330
plugins that you some really strange

172
00:12:12,330 --> 00:12:17,330
formats for serializing data into the

173
00:12:17,330 --> 00:12:23,010
cash part of the address and it's really

174
00:12:23,010 --> 00:12:25,710
better to use something like the second

175
00:12:25,710 --> 00:12:30,060
format which is very typical for the web

176
00:12:30,060 --> 00:12:38,490
as we have it today also lots of people

177
00:12:38,490 --> 00:12:43,980
find it really easier to directly really

178
00:12:43,980 --> 00:12:47,420
wrecked to something like a home hash

179
00:12:47,420 --> 00:12:50,370
tag because they find it easier to deal

180
00:12:50,370 --> 00:12:53,790
with a cache that has a value rather

181
00:12:53,790 --> 00:12:58,550
that than a one that is just named and

182
00:12:58,550 --> 00:13:04,260
this usually leads to one history

183
00:13:04,260 --> 00:13:06,360
entering the book in the browser because

184
00:13:06,360 --> 00:13:10,020
if you when you open food com if you

185
00:13:10,020 --> 00:13:17,130
directly jump to food com hash home you

186
00:13:17,130 --> 00:13:20,550
end up with a history entering the

187
00:13:20,550 --> 00:13:25,560
browser that is not desirable for

188
00:13:25,560 --> 00:13:28,770
example one of the one of the samples

189
00:13:28,770 --> 00:13:35,800
that we have that

190
00:13:35,810 --> 00:13:44,310
sorry

191
00:13:44,320 --> 00:13:47,220
here is a sample that utilizes the

192
00:13:47,220 --> 00:13:52,990
jQuery UI taps widget and in order to to

193
00:13:52,990 --> 00:13:55,810
add this functionality to this widget it

194
00:13:55,810 --> 00:14:00,030
was mandatory to have the overview cash

195
00:14:00,030 --> 00:14:03,370
automatically insert it the first time

196
00:14:03,370 --> 00:14:07,090
when the page is opened so but it's done

197
00:14:07,090 --> 00:14:08,980
in a way that when you hit the back

198
00:14:08,980 --> 00:14:11,620
button you don't end up on the same page

199
00:14:11,620 --> 00:14:16,900
without the cash part and it's doable

200
00:14:16,900 --> 00:14:21,340
it's just something like you have to you

201
00:14:21,340 --> 00:14:24,670
must have him in mind because it's a bad

202
00:14:24,670 --> 00:14:28,960
practice you can use the location

203
00:14:28,960 --> 00:14:33,460
replace method to insert the home cash

204
00:14:33,460 --> 00:14:40,630
without generating history entry and if

205
00:14:40,630 --> 00:14:43,420
you want to end up with something that

206
00:14:43,420 --> 00:14:48,460
can be crawled by search engine BOTS you

207
00:14:48,460 --> 00:14:49,960
need to think about progressive

208
00:14:49,960 --> 00:14:53,500
enhancement and how the links that you

209
00:14:53,500 --> 00:14:56,860
have in the website can be followed by

210
00:14:56,860 --> 00:15:00,280
clients that don't have JavaScript

211
00:15:00,280 --> 00:15:08,790
support so especially for flash websites

212
00:15:08,790 --> 00:15:13,570
it's a huge problem with search engine

213
00:15:13,570 --> 00:15:16,510
indexing indexing and the same applies

214
00:15:16,510 --> 00:15:23,110
to more rich Ajax powered websites so

215
00:15:23,110 --> 00:15:27,870
one of the key approach I was using for

216
00:15:27,870 --> 00:15:32,920
four years and it was working just give

217
00:15:32,920 --> 00:15:38,020
me a moment to find it okay so the age

218
00:15:38,020 --> 00:15:42,790
example that we this sample is deployed

219
00:15:42,790 --> 00:15:47,740
for about two years and the pages that

220
00:15:47,740 --> 00:15:52,740
are in there are successfully

221
00:15:52,740 --> 00:15:58,030
indexed by the three major search

222
00:15:58,030 --> 00:16:00,850
engines but it's not the best solution

223
00:16:00,850 --> 00:16:05,500
because here the address here does not

224
00:16:05,500 --> 00:16:09,910
contain the hash symbol and when you

225
00:16:09,910 --> 00:16:15,580
open the website it's automatically

226
00:16:15,580 --> 00:16:18,460
replaced with the hash part of the

227
00:16:18,460 --> 00:16:21,010
address and the problem in general with

228
00:16:21,010 --> 00:16:23,020
the with the hash part if the address is

229
00:16:23,020 --> 00:16:27,220
that it's not sent to the server and you

230
00:16:27,220 --> 00:16:30,600
cannot render the website like this

231
00:16:30,600 --> 00:16:33,310
using conserver site technology because

232
00:16:33,310 --> 00:16:35,560
you don't have access to the hash part

233
00:16:35,560 --> 00:16:39,040
which is only available in to the

234
00:16:39,040 --> 00:16:43,270
browser so there are different tricks

235
00:16:43,270 --> 00:16:47,650
you making this possible with URL

236
00:16:47,650 --> 00:16:51,130
rewriting which can be considered as

237
00:16:51,130 --> 00:16:54,160
cloaking by Google because they have

238
00:16:54,160 --> 00:16:57,300
strict policies regarding this and

239
00:16:57,300 --> 00:17:00,130
alternatively it can be done using

240
00:17:00,130 --> 00:17:03,670
javascript redirection and you have to

241
00:17:03,670 --> 00:17:06,910
guess that the search engine won't

242
00:17:06,910 --> 00:17:12,420
execute this particular JavaScript

243
00:17:12,420 --> 00:17:17,020
another bad thing is that if somebody

244
00:17:17,020 --> 00:17:19,780
goes to this website and copies the

245
00:17:19,780 --> 00:17:23,800
address from the address bar and inserts

246
00:17:23,800 --> 00:17:29,530
it into his website just to provide the

247
00:17:29,530 --> 00:17:34,030
link to your content such a such a link

248
00:17:34,030 --> 00:17:37,870
won't be fall properly by the search

249
00:17:37,870 --> 00:17:40,390
engine because the search engine will

250
00:17:40,390 --> 00:17:46,030
always see and crawl the real part of

251
00:17:46,030 --> 00:17:48,100
the address not the hash fragrant

252
00:17:48,100 --> 00:17:51,760
fragment in in addition in this specific

253
00:17:51,760 --> 00:17:54,360
sample there is a copy link to clipboard

254
00:17:54,360 --> 00:17:58,060
here link and it copies the address

255
00:17:58,060 --> 00:18:01,390
without the hash but it's not a perfect

256
00:18:01,390 --> 00:18:06,949
solution

257
00:18:06,959 --> 00:18:09,190
if you want to do search engine

258
00:18:09,190 --> 00:18:12,909
optimization the sitemap XML is an

259
00:18:12,909 --> 00:18:19,329
important helper for making your URLs

260
00:18:19,329 --> 00:18:21,969
visible to search engines because now

261
00:18:21,969 --> 00:18:26,469
it's supported and adopted by it was

262
00:18:26,469 --> 00:18:29,079
originally invented by Google and then

263
00:18:29,079 --> 00:18:34,829
both Yahoo and Microsoft adopted it and

264
00:18:34,829 --> 00:18:38,919
you can submit a sitemap to these search

265
00:18:38,919 --> 00:18:41,169
engines you can easily generate it

266
00:18:41,169 --> 00:18:44,259
dynamically with not that much piece of

267
00:18:44,259 --> 00:18:47,559
code and they are generated available

268
00:18:47,559 --> 00:18:56,369
for various CMS systems so recently

269
00:18:56,369 --> 00:19:07,880
google introduced a new approach

270
00:19:07,890 --> 00:19:32,850
you

271
00:19:32,860 --> 00:19:36,650
that has some age of content

272
00:19:36,650 --> 00:19:40,710
but because this this part is not

273
00:19:40,710 --> 00:19:42,720
visible to the server they will actually

274
00:19:42,720 --> 00:19:47,910
fall for this they will actually think

275
00:19:47,910 --> 00:19:53,790
your server with this second request

276
00:19:53,790 --> 00:19:57,480
that contains a query parameter called

277
00:19:57,480 --> 00:20:03,030
escaped fragment it's it's a solution

278
00:20:03,030 --> 00:20:05,790
its kind of solution kind of a solution

279
00:20:05,790 --> 00:20:08,160
to the problem the best thing is that

280
00:20:08,160 --> 00:20:12,960
it's still not officially adopted by any

281
00:20:12,960 --> 00:20:18,450
other major vendor and I don't know

282
00:20:18,450 --> 00:20:22,320
hopefully it just may change or this

283
00:20:22,320 --> 00:20:24,300
will be probably not the right way to

284
00:20:24,300 --> 00:20:29,910
achieve this so this was proposed by the

285
00:20:29,910 --> 00:20:37,200
GWT probably I have there this is the

286
00:20:37,200 --> 00:20:41,340
website of the specification and this is

287
00:20:41,340 --> 00:20:45,960
G the showcase their example that

288
00:20:45,960 --> 00:20:51,570
showcases how the address here is change

289
00:20:51,570 --> 00:20:55,710
in a way that it can be crawled the best

290
00:20:55,710 --> 00:20:58,470
thing is that if you open it here the

291
00:20:58,470 --> 00:21:00,870
the javascript is disabled in this

292
00:21:00,870 --> 00:21:05,850
browser with GWT you you see this it's

293
00:21:05,850 --> 00:21:12,980
basically not friendly if you have

294
00:21:12,980 --> 00:21:17,100
javascript disabled what what what we

295
00:21:17,100 --> 00:21:23,370
did in our sample to support this is to

296
00:21:23,370 --> 00:21:32,580
to make it work even if even if

297
00:21:32,580 --> 00:21:36,510
javascript is disabled so when the

298
00:21:36,510 --> 00:21:40,170
javascript is disabled the whole address

299
00:21:40,170 --> 00:21:43,830
is changed like this we'd escaped

300
00:21:43,830 --> 00:21:50,820
fragment in there and when when you see

301
00:21:50,820 --> 00:21:55,080
the website you know JavaScript enabled

302
00:21:55,080 --> 00:21:59,220
browser he addresses change using their

303
00:21:59,220 --> 00:22:03,570
convention okay so it's definitely

304
00:22:03,570 --> 00:22:06,810
something to check to check out but I'm

305
00:22:06,810 --> 00:22:11,460
not that confident in in the future of

306
00:22:11,460 --> 00:22:16,530
this approach with html5 we have the

307
00:22:16,530 --> 00:22:18,420
yunkish change event which was

308
00:22:18,420 --> 00:22:20,790
introduced in explorer eight and it

309
00:22:20,790 --> 00:22:24,330
really helps the detection of hash

310
00:22:24,330 --> 00:22:28,190
fragment changes it was in it was also

311
00:22:28,190 --> 00:22:31,590
added to Firefox and to Safari and

312
00:22:31,590 --> 00:22:36,360
WebKit chrome and it's it works fine it

313
00:22:36,360 --> 00:22:38,450
basically eliminates the need of

314
00:22:38,450 --> 00:22:41,610
intervals or hidden iframes or solution

315
00:22:41,610 --> 00:22:44,790
like this but the real deal is basically

316
00:22:44,790 --> 00:22:49,290
the what was introduced later the push

317
00:22:49,290 --> 00:22:52,400
state and replaced it and on pop state

318
00:22:52,400 --> 00:22:55,340
additions to the html5 specification

319
00:22:55,340 --> 00:23:01,440
because this is how a push state samples

320
00:23:01,440 --> 00:23:04,260
looks like I just took it from the

321
00:23:04,260 --> 00:23:06,600
Mozilla documentation this will be

322
00:23:06,600 --> 00:23:09,600
introduced in Firefox 4 and it's already

323
00:23:09,600 --> 00:23:15,030
available in WebKit browsers so when I

324
00:23:15,030 --> 00:23:19,230
develop such things i want to do them

325
00:23:19,230 --> 00:23:23,030
stateless as much as possible and

326
00:23:23,030 --> 00:23:26,430
basically for such deep linking you

327
00:23:26,430 --> 00:23:29,250
don't need the first parameter the

328
00:23:29,250 --> 00:23:33,060
actual state because if you want to keep

329
00:23:33,060 --> 00:23:35,310
the whole state as a part of the address

330
00:23:35,310 --> 00:23:39,690
you basically need this part here the

331
00:23:39,690 --> 00:23:42,940
last one and when you have

332
00:23:42,940 --> 00:23:47,890
such think in a bolt okay I'll have a

333
00:23:47,890 --> 00:23:51,250
have a sample a sample developed in in

334
00:23:51,250 --> 00:23:59,350
old GS because this is cool you know G

335
00:23:59,350 --> 00:24:03,370
address is now changed without any hash

336
00:24:03,370 --> 00:24:08,370
part in the address and it's like a real

337
00:24:08,370 --> 00:24:13,360
address so the bad thing here is that

338
00:24:13,360 --> 00:24:16,090
you need student need to support all

339
00:24:16,090 --> 00:24:20,710
browsers and when you enter this in a

340
00:24:20,710 --> 00:24:25,240
firefox 3 dot 6 this technique is not

341
00:24:25,240 --> 00:24:29,110
this API still not available and you

342
00:24:29,110 --> 00:24:33,280
still get the address here on the server

343
00:24:33,280 --> 00:24:38,320
the actual note GS coat looks like this

344
00:24:38,320 --> 00:24:41,470
it was this whole thing is developed

345
00:24:41,470 --> 00:24:46,470
using Express the Express framework and

346
00:24:46,470 --> 00:24:51,310
which maps you to every request made to

347
00:24:51,310 --> 00:24:57,250
the server and now you see these objects

348
00:24:57,250 --> 00:25:02,170
part of the URL the contact part you can

349
00:25:02,170 --> 00:25:04,150
directly handle it on the server side

350
00:25:04,150 --> 00:25:10,660
and directly output the content if the

351
00:25:10,660 --> 00:25:14,830
two but non JavaScript enabled clients

352
00:25:14,830 --> 00:25:21,250
and in search engine BOTS even here if i

353
00:25:21,250 --> 00:25:26,620
disable the JavaScript

354
00:25:26,630 --> 00:25:33,830
if it's disabled this whole thing works

355
00:25:33,830 --> 00:25:35,870
and it will be followed by a search

356
00:25:35,870 --> 00:25:39,800
engine BOTS and hopefully this may be

357
00:25:39,800 --> 00:25:45,020
may get introduced in ie9 and the whole

358
00:25:45,020 --> 00:25:48,710
drama about making a jock scrollable is

359
00:25:48,710 --> 00:26:04,670
going to end thank

360
00:26:04,680 --> 00:26:19,970
No

361
00:26:19,980 --> 00:26:29,600
ok

362
00:26:29,610 --> 00:26:41,100
okay not sure not sure sounds like you

363
00:26:41,100 --> 00:26:44,220
will break the whole dome of the page if

364
00:26:44,220 --> 00:26:47,540
you open it and start writing to it

365
00:26:47,540 --> 00:26:53,730
haven't tried it but for IE especially

366
00:26:53,730 --> 00:26:56,100
there is a document domain think that

367
00:26:56,100 --> 00:26:58,880
it's pretty dangerous if you want

368
00:26:58,880 --> 00:27:02,070
cross-domain interaction using

369
00:27:02,070 --> 00:27:05,190
subdomains there i have used document

370
00:27:05,190 --> 00:27:08,850
open but is just in initialization phase

371
00:27:08,850 --> 00:27:14,910
not at such a later stage okay thanks

