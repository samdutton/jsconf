1
00:00:00,000 --> 00:00:02,370

a lot better awesome my name is Reed

2
00:00:02,370 --> 00:00:05,540
Burke I'm here to talk to you guys about

3
00:00:05,540 --> 00:00:08,280
happy and how we use a module called joy

4
00:00:08,280 --> 00:00:10,469
and I'm going to spend about half the

5
00:00:10,469 --> 00:00:14,490
talk talking about where he's happy a

6
00:00:14,490 --> 00:00:16,260
little bit about give you some context

7
00:00:16,260 --> 00:00:18,480
and explain really just my favorite

8
00:00:18,480 --> 00:00:20,550
feature about joy and encourage you

9
00:00:20,550 --> 00:00:22,170
hopefully to go and check out joy for

10
00:00:22,170 --> 00:00:25,650
yourself so I work at yahoo joy is

11
00:00:25,650 --> 00:00:27,000
hopefully at the end of the talk you'll

12
00:00:27,000 --> 00:00:29,070
see that joy is useful in happy of

13
00:00:29,070 --> 00:00:30,420
course because all you folks have used

14
00:00:30,420 --> 00:00:32,430
it I'm sure if you are at this

15
00:00:32,430 --> 00:00:34,800
conference and if not you really should

16
00:00:34,800 --> 00:00:37,590
be and we also use it in things outside

17
00:00:37,590 --> 00:00:39,510
and i'm going to share about that for a

18
00:00:39,510 --> 00:00:42,180
little bit so if you are interested in

19
00:00:42,180 --> 00:00:44,250
the slides or want to know more find me

20
00:00:44,250 --> 00:00:47,100
after the talk or you can get find me

21
00:00:47,100 --> 00:00:51,180
online on twitter and github a dream so

22
00:00:51,180 --> 00:00:54,030
I work for the mash team at Yahoo and

23
00:00:54,030 --> 00:00:56,309
what we do on this on this team that's

24
00:00:56,309 --> 00:00:59,010
the name of our team we actually we work

25
00:00:59,010 --> 00:01:02,090
on build system for the whole company so

26
00:01:02,090 --> 00:01:05,100
everything at Yahoo is actually built in

27
00:01:05,100 --> 00:01:07,439
like one where the team that is

28
00:01:07,439 --> 00:01:10,860
essentially responsible for if you want

29
00:01:10,860 --> 00:01:13,770
to deploy code or deploy whether it's an

30
00:01:13,770 --> 00:01:17,460
app or website whatever it is it used to

31
00:01:17,460 --> 00:01:19,380
be that you would have to do this you'd

32
00:01:19,380 --> 00:01:20,729
have to have someone dedicated in your

33
00:01:20,729 --> 00:01:22,680
group doing this and instead now the

34
00:01:22,680 --> 00:01:24,930
entire company is being built on the

35
00:01:24,930 --> 00:01:27,150
same system which we done this over a

36
00:01:27,150 --> 00:01:28,860
period of believe it or not three months

37
00:01:28,860 --> 00:01:31,290
we moved everyone from many different

38
00:01:31,290 --> 00:01:33,750
version control systems to get just

39
00:01:33,750 --> 00:01:37,470
that's all and it's it's crazy but also

40
00:01:37,470 --> 00:01:40,350
great because now you know we used to

41
00:01:40,350 --> 00:01:42,420
have folks we're trying to encourage

42
00:01:42,420 --> 00:01:44,070
folks to come you know use the

43
00:01:44,070 --> 00:01:45,990
centralized system now you they just

44
00:01:45,990 --> 00:01:47,700
have to but it's also really great

45
00:01:47,700 --> 00:01:49,710
because not just because they have to

46
00:01:49,710 --> 00:01:51,149
because it actually provides a lot of

47
00:01:51,149 --> 00:01:52,530
benefit and that's something that I

48
00:01:52,530 --> 00:01:54,390
think instead of having hundreds of

49
00:01:54,390 --> 00:01:55,710
people literally hundreds of people

50
00:01:55,710 --> 00:01:57,299
trying to solve this problem themselves

51
00:01:57,299 --> 00:02:00,869
they we get to work with those folks so

52
00:02:00,869 --> 00:02:03,000
that they can freeze them up to do what

53
00:02:03,000 --> 00:02:04,950
they're best at doing and we get to work

54
00:02:04,950 --> 00:02:07,770
on the centralized thing so give you an

55
00:02:07,770 --> 00:02:09,690
idea of what we do we have the system

56
00:02:09,690 --> 00:02:11,360
that i work on which is one of five

57
00:02:11,360 --> 00:02:13,080
systems and all them are being

58
00:02:13,080 --> 00:02:13,590
consolidate

59
00:02:13,590 --> 00:02:16,290
it into ours ours is responsible for

60
00:02:16,290 --> 00:02:19,019
6,000 builds per day for five to six

61
00:02:19,019 --> 00:02:20,519
thousand builds a day and the whole the

62
00:02:20,519 --> 00:02:22,410
whole companies like it or in the tens

63
00:02:22,410 --> 00:02:24,420
of thousands everything's built from get

64
00:02:24,420 --> 00:02:26,190
like I said everything is built with

65
00:02:26,190 --> 00:02:28,050
Jenkins and we're definitely the largest

66
00:02:28,050 --> 00:02:30,180
installation of Jenkins anywhere you

67
00:02:30,180 --> 00:02:32,180
either are building your own thing or

68
00:02:32,180 --> 00:02:35,610
you're crazy like us and so the things

69
00:02:35,610 --> 00:02:36,810
that we hear all the time from people

70
00:02:36,810 --> 00:02:38,910
and this is like people would be

71
00:02:38,910 --> 00:02:40,830
spending so much time maintaining their

72
00:02:40,830 --> 00:02:42,930
own CI system whatever it was typically

73
00:02:42,930 --> 00:02:45,420
Jenkins that they weren't able to

74
00:02:45,420 --> 00:02:47,280
they're just kind of tread water and

75
00:02:47,280 --> 00:02:49,049
keep their their head above water and so

76
00:02:49,049 --> 00:02:50,489
the the biggest questions that we get

77
00:02:50,489 --> 00:02:51,599
now that they don't have to do that

78
00:02:51,599 --> 00:02:54,329
anymore and they're really want more out

79
00:02:54,329 --> 00:02:56,069
of you know they look at we look at

80
00:02:56,069 --> 00:02:58,200
what's available outside of you know

81
00:02:58,200 --> 00:03:00,450
like what what other folks are doing

82
00:03:00,450 --> 00:03:03,510
with CI and and we we think we can even

83
00:03:03,510 --> 00:03:04,920
improve on that but the biggest thing is

84
00:03:04,920 --> 00:03:06,599
as you're deploying things continuously

85
00:03:06,599 --> 00:03:08,459
where what's the status of this commit

86
00:03:08,459 --> 00:03:10,290
not the status of a build number right

87
00:03:10,290 --> 00:03:13,680
now when you have when you get out of

88
00:03:13,680 --> 00:03:15,810
having just a small system and get to a

89
00:03:15,810 --> 00:03:17,730
large system we have mini builds it's

90
00:03:17,730 --> 00:03:19,950
difficult to understand where a change

91
00:03:19,950 --> 00:03:22,620
set moves or where artifacts move across

92
00:03:22,620 --> 00:03:25,709
an entire large system and so so build

93
00:03:25,709 --> 00:03:27,060
numbers are pretty terrible what and

94
00:03:27,060 --> 00:03:29,430
also when a build fails or there's it's

95
00:03:29,430 --> 00:03:30,989
there's a block getting your thing out

96
00:03:30,989 --> 00:03:32,880
to production why did it fail and so I

97
00:03:32,880 --> 00:03:35,760
work on a system that uses happy that's

98
00:03:35,760 --> 00:03:38,160
called cinch and so it's one part of our

99
00:03:38,160 --> 00:03:40,470
team and it's commit centric view of

100
00:03:40,470 --> 00:03:42,150
deployment that's that's basically what

101
00:03:42,150 --> 00:03:44,609
it is it answers why things failed and

102
00:03:44,609 --> 00:03:47,160
it's like an API that's used by other

103
00:03:47,160 --> 00:03:49,440
teams to create like dashboards and also

104
00:03:49,440 --> 00:03:51,180
just like build status pages and other

105
00:03:51,180 --> 00:03:54,750
things and so architecture this to real

106
00:03:54,750 --> 00:03:57,450
real quick is it's a happy server and v8

107
00:03:57,450 --> 00:03:59,819
we move to it it took it did take me

108
00:03:59,819 --> 00:04:02,849
about three or four hours to to migrate

109
00:04:02,849 --> 00:04:07,799
from sissi v62 v8 and it's not it's not

110
00:04:07,799 --> 00:04:09,060
that bad all the changes I think are

111
00:04:09,060 --> 00:04:13,169
wonderful so so I I'm really by the way

112
00:04:13,169 --> 00:04:14,310
I just want to say I'm really happy that

113
00:04:14,310 --> 00:04:17,160
a happy decides to make breaking changes

114
00:04:17,160 --> 00:04:18,599
that make sense and are really well

115
00:04:18,599 --> 00:04:20,519
thought out and they have really great

116
00:04:20,519 --> 00:04:24,360
release notes so anyway that's even

117
00:04:24,360 --> 00:04:25,409
though they're breaking changes I'm

118
00:04:25,409 --> 00:04:27,540
really happy to see them

119
00:04:27,540 --> 00:04:30,639
so we have everything as plugins it

120
00:04:30,639 --> 00:04:31,900
seemed to be a common theme I'm really

121
00:04:31,900 --> 00:04:34,330
happy to hear that everyone's doing this

122
00:04:34,330 --> 00:04:36,160
we have all of our web services in the

123
00:04:36,160 --> 00:04:37,900
plug-in we have something that

124
00:04:37,900 --> 00:04:39,550
subscribes to all information about

125
00:04:39,550 --> 00:04:41,740
builds every log line is is something

126
00:04:41,740 --> 00:04:44,199
that's an item in our queue and then

127
00:04:44,199 --> 00:04:45,820
something that provides metrics so we

128
00:04:45,820 --> 00:04:47,560
have a plugin that adapts happies events

129
00:04:47,560 --> 00:04:51,400
to metrics then we have so so we use

130
00:04:51,400 --> 00:04:53,110
Redis as a as a queue and I suppose a

131
00:04:53,110 --> 00:04:56,350
shared like cash among all of our note

132
00:04:56,350 --> 00:04:59,830
instances so out of all like this this

133
00:04:59,830 --> 00:05:02,200
this slide here we probably have 60 of

134
00:05:02,200 --> 00:05:03,850
these instances that are all processing

135
00:05:03,850 --> 00:05:06,370
data from like five Jenkins masters that

136
00:05:06,370 --> 00:05:08,710
are all feeding data into it and that's

137
00:05:08,710 --> 00:05:10,030
happening throughout Jenkins plugin so

138
00:05:10,030 --> 00:05:11,080
we have a plug-in that's all it's doing

139
00:05:11,080 --> 00:05:12,729
is pushing information to read us and

140
00:05:12,729 --> 00:05:16,600
then what what we get out of on the node

141
00:05:16,600 --> 00:05:18,669
side is just handling that throwing it

142
00:05:18,669 --> 00:05:22,180
into a database and then having everyone

143
00:05:22,180 --> 00:05:24,460
hit it to get their reason why their

144
00:05:24,460 --> 00:05:26,380
bill failed and where their commit is so

145
00:05:26,380 --> 00:05:27,910
it kind of takes you know what's coming

146
00:05:27,910 --> 00:05:30,070
off of this you know build and inverting

147
00:05:30,070 --> 00:05:31,840
it so that you can query everything by

148
00:05:31,840 --> 00:05:36,310
your code chicken so an example of what

149
00:05:36,310 --> 00:05:38,950
you know folks you know would do if we

150
00:05:38,950 --> 00:05:40,330
didn't have happy and what we see a lot

151
00:05:40,330 --> 00:05:43,450
and in other other places that we have

152
00:05:43,450 --> 00:05:45,310
some value and then you're doing this

153
00:05:45,310 --> 00:05:47,440
all the time and it's never this simple

154
00:05:47,440 --> 00:05:49,210
but you this winds up being horrible for

155
00:05:49,210 --> 00:05:51,700
a lot of reasons when we have joy as an

156
00:05:51,700 --> 00:05:53,470
alternative so instead with joy we get

157
00:05:53,470 --> 00:05:55,690
to do this and hopefully this isn't new

158
00:05:55,690 --> 00:05:57,610
to anyone but what's great about this is

159
00:05:57,610 --> 00:05:59,830
that this when you have this everywhere

160
00:05:59,830 --> 00:06:01,870
you could just take the object inside of

161
00:06:01,870 --> 00:06:03,370
here and then just put it in a shared

162
00:06:03,370 --> 00:06:05,440
place and then wind up if you ever need

163
00:06:05,440 --> 00:06:07,419
expect the same result you can instead

164
00:06:07,419 --> 00:06:09,820
of copying pasting or having a function

165
00:06:09,820 --> 00:06:12,340
you wind up having a an object that's

166
00:06:12,340 --> 00:06:14,889
very descriptive and so when you when

167
00:06:14,889 --> 00:06:16,210
you have changes to this is great so

168
00:06:16,210 --> 00:06:18,510
instead of writing changes like say if

169
00:06:18,510 --> 00:06:21,639
foo will become something else because

170
00:06:21,639 --> 00:06:26,050
we're say we have Baz now right as a

171
00:06:26,050 --> 00:06:28,810
thing that's we renamed something one

172
00:06:28,810 --> 00:06:30,550
example that's more real that doesn't

173
00:06:30,550 --> 00:06:32,200
fit on the slide though is we changed

174
00:06:32,200 --> 00:06:34,719
something for commit sha to commit sha-1

175
00:06:34,719 --> 00:06:36,340
because some things were using commit

176
00:06:36,340 --> 00:06:38,080
sha some older versions and some were

177
00:06:38,080 --> 00:06:40,030
using commit underscore shot one

178
00:06:40,030 --> 00:06:42,750
so I wanted to support both and so

179
00:06:42,750 --> 00:06:46,330
something that we wind up like a

180
00:06:46,330 --> 00:06:48,790
prevalent idea at Yahoo that that's

181
00:06:48,790 --> 00:06:50,950
changing really quickly is the fact that

182
00:06:50,950 --> 00:06:54,220
you can't is like you think of you know

183
00:06:54,220 --> 00:06:55,480
when we have breaking changes we're just

184
00:06:55,480 --> 00:06:56,890
going to deploy all these things and I

185
00:06:56,890 --> 00:06:59,650
want to go we're going to take down the

186
00:06:59,650 --> 00:07:01,510
old system and restore with the new

187
00:07:01,510 --> 00:07:04,780
system and do that by rotating you know

188
00:07:04,780 --> 00:07:06,970
these giant subsystems out of out of a

189
00:07:06,970 --> 00:07:08,380
rotation and it's had the old system

190
00:07:08,380 --> 00:07:09,700
running for a while and kill them off

191
00:07:09,700 --> 00:07:11,260
and then we have the new system which is

192
00:07:11,260 --> 00:07:13,690
all deployed together by Khan and that

193
00:07:13,690 --> 00:07:15,910
doesn't work like we don't want to do

194
00:07:15,910 --> 00:07:17,650
this instead everything needs to be more

195
00:07:17,650 --> 00:07:19,540
loosely coupled instead of very tightly

196
00:07:19,540 --> 00:07:20,980
coupled together so we want to support

197
00:07:20,980 --> 00:07:23,320
different things different sometimes

198
00:07:23,320 --> 00:07:25,900
different schemas at the same time so if

199
00:07:25,900 --> 00:07:28,390
this is the case we wind up being able

200
00:07:28,390 --> 00:07:30,070
to use joy to do again this very simple

201
00:07:30,070 --> 00:07:31,600
example but why is it being very

202
00:07:31,600 --> 00:07:34,240
powerful in a large system where you

203
00:07:34,240 --> 00:07:35,830
could just support both and still have

204
00:07:35,830 --> 00:07:39,040
like our new configuration and and we

205
00:07:39,040 --> 00:07:40,150
just wind up changing a lot of these

206
00:07:40,150 --> 00:07:41,980
together as necessary and then killing

207
00:07:41,980 --> 00:07:43,810
this off again by having continuous

208
00:07:43,810 --> 00:07:44,920
deployment we don't have to have this

209
00:07:44,920 --> 00:07:46,240
rename in there forever we could just

210
00:07:46,240 --> 00:07:47,410
get rid of it after a short period of

211
00:07:47,410 --> 00:07:51,820
time so yeah we use this everywhere not

212
00:07:51,820 --> 00:07:54,790
just in not just in our happy

213
00:07:54,790 --> 00:07:56,710
application but also there's other

214
00:07:56,710 --> 00:07:59,410
things that also are handling data from

215
00:07:59,410 --> 00:08:01,570
Jenkins and so it's able to verify that

216
00:08:01,570 --> 00:08:04,030
the you know we we have many instances

217
00:08:04,030 --> 00:08:05,290
of Jenkins that all run different

218
00:08:05,290 --> 00:08:06,910
plug-in versions that pass different

219
00:08:06,910 --> 00:08:09,400
data to Redis and so this verifies the

220
00:08:09,400 --> 00:08:10,570
data is correct in the format that we

221
00:08:10,570 --> 00:08:15,820
expect we found tons of issues with in

222
00:08:15,820 --> 00:08:17,050
various parts of our systems by using

223
00:08:17,050 --> 00:08:20,770
joy and it's amazing it's also very easy

224
00:08:20,770 --> 00:08:23,650
to read I think it's a very readable API

225
00:08:23,650 --> 00:08:26,440
and I really take i really think that

226
00:08:26,440 --> 00:08:30,460
the folks who are maintaining joy are

227
00:08:30,460 --> 00:08:31,960
doing a really great job with making

228
00:08:31,960 --> 00:08:35,970
sure that the API stays a very high bar

229
00:08:35,970 --> 00:08:38,500
code coverage is also a benefit and you

230
00:08:38,500 --> 00:08:40,990
get if you're using a lab with and

231
00:08:40,990 --> 00:08:42,280
trying to get a hundred percent code

232
00:08:42,280 --> 00:08:45,250
coverage as I am like using this as a

233
00:08:45,250 --> 00:08:47,980
much prefer to something like this where

234
00:08:47,980 --> 00:08:49,060
if you have a lot of these it could be

235
00:08:49,060 --> 00:08:51,280
difficult to hit everything that you're

236
00:08:51,280 --> 00:08:52,450
checking and you might be thinking well

237
00:08:52,450 --> 00:08:53,410
you want to

238
00:08:53,410 --> 00:08:54,550
be able to check all these things and

239
00:08:54,550 --> 00:08:57,670
that's true but you might want to but I

240
00:08:57,670 --> 00:09:00,220
I also think that a you should only

241
00:09:00,220 --> 00:09:02,259
really be checking our writing test for

242
00:09:02,259 --> 00:09:04,060
things that you're more likely to break

243
00:09:04,060 --> 00:09:05,980
and instead of having to write this over

244
00:09:05,980 --> 00:09:07,629
and over again I would encourage you to

245
00:09:07,629 --> 00:09:10,300
be using joy where instead you were only

246
00:09:10,300 --> 00:09:12,220
checking to see if a error ever happened

247
00:09:12,220 --> 00:09:13,689
and not if every single possible

248
00:09:13,689 --> 00:09:16,089
validation error ever happened leave

249
00:09:16,089 --> 00:09:19,540
that to Joy's own tests which that you

250
00:09:19,540 --> 00:09:21,250
know it's very well tested so then you

251
00:09:21,250 --> 00:09:22,959
don't have to check for common mistakes

252
00:09:22,959 --> 00:09:26,439
to get a high level of coverage and then

253
00:09:26,439 --> 00:09:28,360
also like this is an example just lifted

254
00:09:28,360 --> 00:09:29,980
straight out of if you guys aren't

255
00:09:29,980 --> 00:09:31,990
familiar with with joy this has just

256
00:09:31,990 --> 00:09:34,990
lifted straight out of that joy read me

257
00:09:34,990 --> 00:09:37,420
that shows that this isn't just for

258
00:09:37,420 --> 00:09:39,399
strings you can it's very expressive and

259
00:09:39,399 --> 00:09:42,670
it's I find that once you start using it

260
00:09:42,670 --> 00:09:44,110
it becomes very easy to read and not

261
00:09:44,110 --> 00:09:45,970
just for me but also for machines and so

262
00:09:45,970 --> 00:09:48,730
we've seen people talking about loud

263
00:09:48,730 --> 00:09:50,259
today if you guys haven't used loud it

264
00:09:50,259 --> 00:09:53,649
can read this information in your happy

265
00:09:53,649 --> 00:09:56,740
route configs and show you formatted

266
00:09:56,740 --> 00:09:58,779
documentation we also seen swagger today

267
00:09:58,779 --> 00:10:01,529
which also reads this which is great and

268
00:10:01,529 --> 00:10:04,300
so yeah it's it provides benefits for

269
00:10:04,300 --> 00:10:08,470
people and for creating your api's so in

270
00:10:08,470 --> 00:10:10,839
happy particularly um you know so you

271
00:10:10,839 --> 00:10:13,269
use this you use joy for your request

272
00:10:13,269 --> 00:10:15,310
schemas I'd also encourage you I haven't

273
00:10:15,310 --> 00:10:16,930
seen a lot of examples of this and your

274
00:10:16,930 --> 00:10:18,370
response schemas and so what this is

275
00:10:18,370 --> 00:10:20,769
allowed us to do is prevent sharing too

276
00:10:20,769 --> 00:10:23,230
much we might get more information as we

277
00:10:23,230 --> 00:10:24,880
proxy something from another system or

278
00:10:24,880 --> 00:10:26,170
we're getting information out of a

279
00:10:26,170 --> 00:10:27,910
database we might be getting more than

280
00:10:27,910 --> 00:10:30,730
we expect and so with by using a

281
00:10:30,730 --> 00:10:32,829
response schema with strip puck known we

282
00:10:32,829 --> 00:10:34,420
can remove things that we don't expect

283
00:10:34,420 --> 00:10:37,839
or don't want to share with our people

284
00:10:37,839 --> 00:10:41,230
who consume our API and we can also you

285
00:10:41,230 --> 00:10:43,509
know kind of massage values into the

286
00:10:43,509 --> 00:10:45,639
right place by using rename so if there

287
00:10:45,639 --> 00:10:47,259
is something that's legacy coming from

288
00:10:47,259 --> 00:10:49,240
an upstream system we can just take that

289
00:10:49,240 --> 00:10:50,860
into the correct format and hand that

290
00:10:50,860 --> 00:10:52,870
off we also use something like the last

291
00:10:52,870 --> 00:10:54,670
talked actually just have different API

292
00:10:54,670 --> 00:10:57,519
versions which is also useful so this we

293
00:10:57,519 --> 00:10:58,720
could serve something old to the old

294
00:10:58,720 --> 00:11:00,309
version and then rename it for the new

295
00:11:00,309 --> 00:11:05,009
version using response schemas others so

296
00:11:05,009 --> 00:11:07,150
let's see also

297
00:11:07,150 --> 00:11:09,130
loud is great I want to put it in big

298
00:11:09,130 --> 00:11:13,540
text here so you don't miss it and I

299
00:11:13,540 --> 00:11:15,700
really hope that this gets even better

300
00:11:15,700 --> 00:11:18,310
i'm looking forward to like i've tried

301
00:11:18,310 --> 00:11:19,510
to use swagger before and it just seems

302
00:11:19,510 --> 00:11:21,730
like it's a it's a lot and loud isn't a

303
00:11:21,730 --> 00:11:23,410
whole bunch it's just it's very small it

304
00:11:23,410 --> 00:11:25,870
doesn't depend on other like front-end

305
00:11:25,870 --> 00:11:27,790
framework things that allow you to give

306
00:11:27,790 --> 00:11:29,830
you the nice try it out button so I'm

307
00:11:29,830 --> 00:11:31,930
hoping that I know like swagger has a

308
00:11:31,930 --> 00:11:33,730
lot of work that's happening with it

309
00:11:33,730 --> 00:11:35,500
last time I checked like few months ago

310
00:11:35,500 --> 00:11:38,500
I'm just like this is great i'm like

311
00:11:38,500 --> 00:11:41,050
really trying to sell my team on and and

312
00:11:41,050 --> 00:11:43,720
with great success on how great having a

313
00:11:43,720 --> 00:11:46,300
consistent API is where you don't have

314
00:11:46,300 --> 00:11:48,820
to have api comments to go out of date

315
00:11:48,820 --> 00:11:50,430
instead you can use loud and it's very

316
00:11:50,430 --> 00:11:52,900
things stay up to date so for the things

317
00:11:52,900 --> 00:11:55,060
that I want to use not the future of

318
00:11:55,060 --> 00:11:57,520
half of joy but the things that I want

319
00:11:57,520 --> 00:11:59,710
to do with it is having schemas that are

320
00:11:59,710 --> 00:12:03,450
shared and so the big thing here is

321
00:12:03,450 --> 00:12:05,860
right now sometimes we have duplication

322
00:12:05,860 --> 00:12:08,200
and our schemas sometimes like you know

323
00:12:08,200 --> 00:12:10,300
one of our plugins and one in our API

324
00:12:10,300 --> 00:12:13,200
don't share the same schema all the time

325
00:12:13,200 --> 00:12:15,640
there's nothing in common between there

326
00:12:15,640 --> 00:12:17,380
I suppose that like a like we don't have

327
00:12:17,380 --> 00:12:20,770
a schema node module and so I really

328
00:12:20,770 --> 00:12:21,820
like therefore there would be a way to

329
00:12:21,820 --> 00:12:23,230
share that because we've gotten new bugs

330
00:12:23,230 --> 00:12:26,080
where schemas deviate and so one system

331
00:12:26,080 --> 00:12:28,480
won't accept the others output and vice

332
00:12:28,480 --> 00:12:31,210
versa and that's a really big pain and

333
00:12:31,210 --> 00:12:33,310
so it's possible and this is a lot

334
00:12:33,310 --> 00:12:34,960
better it's a lot easier to find bugs

335
00:12:34,960 --> 00:12:36,550
now that everything's in an object

336
00:12:36,550 --> 00:12:38,230
instead of everything being in a whole

337
00:12:38,230 --> 00:12:41,200
bunch of conditionals so so this is the

338
00:12:41,200 --> 00:12:45,480
logical next step and also all of our

339
00:12:45,480 --> 00:12:48,070
how everyone I don't have enough time to

340
00:12:48,070 --> 00:12:49,930
get into like how awesome this is

341
00:12:49,930 --> 00:12:51,580
basically but if you everyone views

342
00:12:51,580 --> 00:12:54,850
Travis wrecker Circle C I you're used to

343
00:12:54,850 --> 00:12:56,410
defining all everything you want to

344
00:12:56,410 --> 00:12:57,760
happen in your build with a

345
00:12:57,760 --> 00:12:59,440
configuration file and indeed the k

346
00:12:59,440 --> 00:13:01,540
thats true even though we use jenkins we

347
00:13:01,540 --> 00:13:04,390
actually use note to script creating

348
00:13:04,390 --> 00:13:06,940
jenkins jobs and deleting them and

349
00:13:06,940 --> 00:13:09,850
everything it's awesome and it's it's

350
00:13:09,850 --> 00:13:11,890
actually limited right so instead of

351
00:13:11,890 --> 00:13:13,300
being able to do whatever you want we

352
00:13:13,300 --> 00:13:15,040
have archaea type say if you're trying

353
00:13:15,040 --> 00:13:17,140
to build a node app then we will

354
00:13:17,140 --> 00:13:19,300
automatically run all the default things

355
00:13:19,300 --> 00:13:20,499
that makes sense bring in

356
00:13:20,499 --> 00:13:22,359
give install NPM test when you're ready

357
00:13:22,359 --> 00:13:24,129
to publish it publishes the thing using

358
00:13:24,129 --> 00:13:25,299
the standard way that everything at

359
00:13:25,299 --> 00:13:27,909
yahoo's published so so you just have a

360
00:13:27,909 --> 00:13:30,279
single file but we have a validator for

361
00:13:30,279 --> 00:13:32,739
this and I'm hoping that we could

362
00:13:32,739 --> 00:13:36,609
leverage joy moore and these things that

363
00:13:36,609 --> 00:13:38,559
are where it would be really complicated

364
00:13:38,559 --> 00:13:41,289
and possibly would require some

365
00:13:41,289 --> 00:13:43,389
contributions two things either that

366
00:13:43,389 --> 00:13:46,629
built on top of joy that we hope to open

367
00:13:46,629 --> 00:13:48,399
source for like say taking something

368
00:13:48,399 --> 00:13:50,079
that's in y amal and having like that

369
00:13:50,079 --> 00:13:54,039
nice like explanation of what's going to

370
00:13:54,039 --> 00:13:55,659
happen with your build configuration and

371
00:13:55,659 --> 00:13:57,159
have using joy for that so we haven't

372
00:13:57,159 --> 00:13:58,449
started on this but I'm really looking

373
00:13:58,449 --> 00:13:59,499
forward to that I think it's a logical

374
00:13:59,499 --> 00:14:02,679
next step so recap the biggest thing

375
00:14:02,679 --> 00:14:05,019
here is rename I think if that's that's

376
00:14:05,019 --> 00:14:06,219
my favorite thing so if you learn

377
00:14:06,219 --> 00:14:07,869
nothing else like take advantage of that

378
00:14:07,869 --> 00:14:10,509
and joy is useful outside of happy and

379
00:14:10,509 --> 00:14:12,639
you should consider it for even if

380
00:14:12,639 --> 00:14:15,969
you're not able to use happy for any app

381
00:14:15,969 --> 00:14:17,349
that you're writing whether it's a web

382
00:14:17,349 --> 00:14:20,229
app or just the simple library great so

383
00:14:20,229 --> 00:14:22,299
this is my team they're pretty awesome

384
00:14:22,299 --> 00:14:24,189
and we wish here a part of them because

385
00:14:24,189 --> 00:14:25,749
we have lots of ice cream and it's

386
00:14:25,749 --> 00:14:28,359
fantastic this is me and come talk to me

