1
00:00:01,640 --> 00:00:24,079
I am going to talk about Gifs.

2
00:00:24,079 --> 00:00:26,039
That is important.

3
00:00:26,039 --> 00:00:31,480
I'm going to start myself introducing.

4
00:00:31,480 --> 00:00:33,260
The other half is about webcomponents.

5
00:00:33,260 --> 00:00:37,460
I am not like a web component developer.

6
00:00:37,460 --> 00:00:40,800
Nobody is paying me for it.

7
00:00:40,800 --> 00:00:43,140
I'm a freelancer.

8
00:00:43,140 --> 00:00:47,059
I have come to the matter of passion.

9
00:00:47,059 --> 00:00:52,570
This is a basic story of how I came to know
anything about webcomponents.

10
00:00:52,570 --> 00:00:55,710
I have Gifs to thank for it.

11
00:00:55,710 --> 00:01:02,289
Most important to know about me is that I
like Gifs.

12
00:01:02,289 --> 00:01:05,030
So...

13
00:01:05,030 --> 00:01:10,530
Gifs I find as being indecribly good way of
conveying emotion.

14
00:01:10,530 --> 00:01:18,140
This Gif would convey the emotion of disturbing
levels of enthousiasm.

15
00:01:18,140 --> 00:01:24,759
It exists in 80 movies from America.

16
00:01:24,759 --> 00:01:28,329
Thanks to Ben I have another gif.

17
00:01:28,329 --> 00:01:32,990
The Topgun high five.

18
00:01:32,990 --> 00:01:33,990
That's shorter.

19
00:01:33,990 --> 00:01:37,940
Conveys the same thing.

20
00:01:37,940 --> 00:01:45,620
Basically I'm a big fan of Gif.

21
00:01:45,620 --> 00:01:51,250
It is an incredible file format.

22
00:01:51,250 --> 00:01:55,850
I pronounce the hard G. Gif.

23
00:01:55,850 --> 00:01:59,670
You would be from Europe, also pronounce it
Gif.

24
00:01:59,670 --> 00:02:09,410
It is the only way anyone pronounces it.

25
00:02:09,410 --> 00:02:16,300
Here is another Gif.

26
00:02:16,300 --> 00:02:26,040
Someone makes interesting mashups of photography
and computer graphics zozer These gifs are

27
00:02:26,040 --> 00:02:31,980
trying to convey they are not just about funny
animal pictures.

28
00:02:31,980 --> 00:02:35,959
They still can be.

29
00:02:35,959 --> 00:02:43,730
I think there is something interesting about
a format that can have artistic work and deal

30
00:02:43,730 --> 00:02:45,510
with gifs.

31
00:02:45,510 --> 00:02:47,010
Anyway.

32
00:02:47,010 --> 00:02:51,330
My story about webcomponents and gifs started
with an idea.

33
00:02:51,330 --> 00:02:55,410
When I was looking from more gifs.

34
00:02:55,410 --> 00:02:58,319
Vastimage.

35
00:02:58,319 --> 00:03:03,090
It was a fullscreen Gif.

36
00:03:03,090 --> 00:03:06,560
It had a significant problem.

37
00:03:06,560 --> 00:03:14,470
The Gifs that I show you would be from an
unmoderated set of gifs zozer We know where

38
00:03:14,470 --> 00:03:17,520
that leads.

39
00:03:17,520 --> 00:03:21,319
Me and some friends and including Ben.

40
00:03:21,319 --> 00:03:25,010
We built something GifCity.

41
00:03:25,010 --> 00:03:28,739
Tumblr was full with interesting people.

42
00:03:28,739 --> 00:03:32,610
I have the internet.

43
00:03:32,610 --> 00:03:34,590
I'll demonstrate a few.

44
00:03:34,590 --> 00:03:41,769
This is a static program that scrapes that
person's tumbler.

45
00:03:41,769 --> 00:03:42,769
Looks for the gifs.

46
00:03:42,769 --> 00:03:43,830
And shows one after another.

47
00:03:43,830 --> 00:03:47,460
Every 10 seconds.

48
00:03:47,460 --> 00:03:50,250
What is cool is that Tumblr.

49
00:03:50,250 --> 00:03:57,819
For anything there is a Tumblr full of gifs.

50
00:03:57,819 --> 00:04:01,030
This is one I have like.

51
00:04:01,030 --> 00:04:03,760
Somebody's collection of thousands of tricks.

52
00:04:03,760 --> 00:04:09,599
I encourage you to check it out.

53
00:04:09,599 --> 00:04:20,400
It was a project zozer when we got it ready,
we were excited about it.

54
00:04:20,400 --> 00:04:24,831
This is me for like a year.

55
00:04:24,831 --> 00:04:26,950
I kept finding new gifs.

56
00:04:26,950 --> 00:04:28,680
New Tumblr's.

57
00:04:28,680 --> 00:04:31,570
While the other guys were satisfied.

58
00:04:31,570 --> 00:04:36,600
I got a bit more obsessed about the Gifs.

59
00:04:36,600 --> 00:04:40,160
I started to get a bit intense.

60
00:04:40,160 --> 00:04:43,040
A little bit of JS.

61
00:04:43,040 --> 00:04:44,040
What is the next thing?

62
00:04:44,040 --> 00:04:45,040
It took a while.

63
00:04:45,040 --> 00:04:50,280
I came across something that astonished me.

64
00:04:50,280 --> 00:04:53,040
It was the idea of synchronising Gifs to music.

65
00:04:53,040 --> 00:04:57,820
It would be the same kind of mood.

66
00:04:57,820 --> 00:04:59,870
They would sync up and that was awesome.

67
00:04:59,870 --> 00:05:09,800
Djgif that 
will launch at one point.

68
00:05:09,800 --> 00:05:12,590
That's a separate talk.

69
00:05:12,590 --> 00:05:16,050
The idea was to automatically synchronise
Gifs to music.

70
00:05:16,050 --> 00:05:19,620
I had to do some things.

71
00:05:19,620 --> 00:05:20,870
Getting the beats out of music.

72
00:05:20,870 --> 00:05:28,550
I'm going to talk about speeding up and slowing
down Gifs that you need to do to synchronize

73
00:05:28,550 --> 00:05:31,880
Gifs and music.

74
00:05:31,880 --> 00:05:34,960
Because this is all I knew about Gifs.

75
00:05:34,960 --> 00:05:36,880
You can use the Js.

76
00:05:36,880 --> 00:05:42,600
And you can put the cats in the page.

77
00:05:42,600 --> 00:05:46,900
Maybe there was some way of doing different
playback.

78
00:05:46,900 --> 00:05:49,680
But there isn't.

79
00:05:49,680 --> 00:05:52,050
I looked for a long time.

80
00:05:52,050 --> 00:05:54,070
Surprisingly long time.

81
00:05:54,070 --> 00:05:57,060
An animation is a series of frames.

82
00:05:57,060 --> 00:06:03,490
If I get the frames out of the Gif, I know
enough Css to play them back.

83
00:06:03,490 --> 00:06:06,190
That's where the project took me.

84
00:06:06,190 --> 00:06:13,760
I started to look into what Gifs are.

85
00:06:13,760 --> 00:06:14,990
I read this specification.

86
00:06:14,990 --> 00:06:17,850
This is actually not the original specification.

87
00:06:17,850 --> 00:06:19,550
It is a good summary.

88
00:06:19,550 --> 00:06:25,300
I don't want to go into it.

89
00:06:25,300 --> 00:06:31,410
The key thing in a Gif thast this diagram,
the architecture.

90
00:06:31,410 --> 00:06:35,930
Which I have reproduced with my Html framework.

91
00:06:35,930 --> 00:06:39,660
This is what I call a diagram.

92
00:06:39,660 --> 00:06:41,240
Series of frames by a footer.

93
00:06:41,240 --> 00:06:48,440
If you wrap it around each frame you get a
series.

94
00:06:48,440 --> 00:06:49,660
Animated.

95
00:06:49,660 --> 00:06:54,750
They are all valid gifs.

96
00:06:54,750 --> 00:06:56,490
You can do that efficiently in J Js.

97
00:06:56,490 --> 00:07:01,300
I was surprised when I finished.

98
00:07:01,300 --> 00:07:03,220
Just how small the code was.

99
00:07:03,220 --> 00:07:06,440
This is the entire program.

100
00:07:06,440 --> 00:07:09,910
If you try to decode the Gif it would be huge.

101
00:07:09,910 --> 00:07:12,050
I didn't need to.

102
00:07:12,050 --> 00:07:22,240
All I needed to do was rearrange the pieces
of the Gif and then I could have the frames.

103
00:07:22,240 --> 00:07:25,430
That's up there as well.

104
00:07:25,430 --> 00:07:28,780
And once you have the frames you put them
in the Dom.

105
00:07:28,780 --> 00:07:32,720
Next to eachother in a parent frame.

106
00:07:32,720 --> 00:07:35,810
Use Css to stack them.

107
00:07:35,810 --> 00:07:40,660
And depending on the data, the frame you hide
and show.

108
00:07:40,660 --> 00:07:49,360
And then, to play back the Gif is show the
next frame at a particular time.

109
00:07:49,360 --> 00:07:50,690
I used requestanimationframe.

110
00:07:50,690 --> 00:07:54,740
I can play it back as fast as possible.

111
00:07:54,740 --> 00:07:56,840
At the native speed.

112
00:07:56,840 --> 00:07:57,840
Backwards.

113
00:07:57,840 --> 00:08:03,080
Only thing to change is calculate frame at
any moment of time.

114
00:08:03,080 --> 00:08:04,510
That was cool.

115
00:08:04,510 --> 00:08:11,460
It was like the realisation that all of this
work and complexity was hidden.

116
00:08:11,460 --> 00:08:16,660
All the strategies I wanted to use, synchronize.

117
00:08:16,660 --> 00:08:20,280
Could come under one entrypoint.

118
00:08:20,280 --> 00:08:25,560
That's why I thought I should release the
component.

119
00:08:25,560 --> 00:08:33,159
I want to take a very brief side and talk
about Dreamcode.

120
00:08:33,159 --> 00:08:36,419
The way the Hootie project started.

121
00:08:36,419 --> 00:08:43,170
Their philosophy is to start with the best
possible representation of your idea.

122
00:08:43,170 --> 00:08:46,000
Even though you don't know how to implement
it.

123
00:08:46,000 --> 00:08:52,870
Come up with the best, in my case, the best
possible gif tag I could come up with was

124
00:08:52,870 --> 00:08:54,620
the replication of the image tag.

125
00:08:54,620 --> 00:08:58,690
I didn't know how to build it.

126
00:08:58,690 --> 00:09:01,330
I didn't know if it was possible.

127
00:09:01,330 --> 00:09:05,320
But, creepy history guy.

128
00:09:05,320 --> 00:09:06,320
He said it was.

129
00:09:06,320 --> 00:09:08,440
That's all right.

130
00:09:08,440 --> 00:09:11,060
So, I got on a plane.

131
00:09:11,060 --> 00:09:14,780
I loaded up the documentation.

132
00:09:14,780 --> 00:09:18,440
And I tried to extract it.

133
00:09:18,440 --> 00:09:19,710
Which was a huge success.

134
00:09:19,710 --> 00:09:21,930
I'll show you.

135
00:09:21,930 --> 00:09:24,320
What it looks like now.

136
00:09:24,320 --> 00:09:28,440
So, this is a Gif.

137
00:09:28,440 --> 00:09:30,670
Particularly good one.

138
00:09:30,670 --> 00:09:34,360
Of the Nope octopus.

139
00:09:34,360 --> 00:09:36,090
Noping itself.

140
00:09:36,090 --> 00:09:38,830
This is an ex gif.

141
00:09:38,830 --> 00:09:43,150
If I inspect it.

142
00:09:43,150 --> 00:09:47,040
Each of the frames are actually blobs that
I have extracted myself.

143
00:09:47,040 --> 00:09:49,960
That is small.

144
00:09:49,960 --> 00:09:54,250
There is a wrapper or frame.

145
00:09:54,250 --> 00:09:55,250
Counting through.

146
00:09:55,250 --> 00:09:58,800
It is playing it back.

147
00:09:58,800 --> 00:10:05,520
It sits into shadowroot.

148
00:10:05,520 --> 00:10:10,150
And then it was a matter of what I want to
do with this flexible component now.

149
00:10:10,150 --> 00:10:14,460
I can't sadly make it change to yes, yes,
yes.

150
00:10:14,460 --> 00:10:16,250
As it comes back.

151
00:10:16,250 --> 00:10:19,280
Just reversing back and forward.

152
00:10:19,280 --> 00:10:22,550
I use it a fair bit in presentations.

153
00:10:22,550 --> 00:10:26,200
To play a gif once and stop.

154
00:10:26,200 --> 00:10:30,620
It can be distracting.

155
00:10:30,620 --> 00:10:32,940
Actually Gifs in general are distracting.

156
00:10:32,940 --> 00:10:37,070
Otherwise I would not fill up 25 minutes.

157
00:10:37,070 --> 00:10:41,670
The speed.

158
00:10:41,670 --> 00:10:44,280
Is another thingd you can change.

159
00:10:44,280 --> 00:10:45,280
It gets quick.

160
00:10:45,280 --> 00:10:48,330
And then you can slow him dov as well.

161
00:10:48,330 --> 00:10:52,000
The stuff more interested is beats per minute.

162
00:10:52,000 --> 00:10:55,900
Here we have 2 gifs on a page.

163
00:10:55,900 --> 00:10:58,300
Synchronized to the same Bpm.

164
00:10:58,300 --> 00:11:04,110
If you have a page full of Gifs, this will
synchronize them to the beat.

165
00:11:04,110 --> 00:11:08,320
It is not as chaotic.

166
00:11:08,320 --> 00:11:11,070
I did 1 more thing.

167
00:11:11,070 --> 00:11:18,210
As you speed things up, the bottom one is
blindly following this beat.

168
00:11:18,210 --> 00:11:20,180
No matter how fast it goes.

169
00:11:20,180 --> 00:11:27,510
The top one is looking at the speed of the
gif and beat, it is spanning several beats.

170
00:11:27,510 --> 00:11:29,920
It is a longer gif.

171
00:11:29,920 --> 00:11:34,060
That I am happy with.

172
00:11:34,060 --> 00:11:35,730
If you put this in your page.

173
00:11:35,730 --> 00:11:44,000
I want every gif to be at Btm 60 or 20, they
find their natural rhythm.

174
00:11:44,000 --> 00:11:48,870
The thing I wanted to do which I will demonstrate.

175
00:11:48,870 --> 00:11:52,700
I'll use a different Gif.

176
00:11:52,700 --> 00:11:55,740
I like it.

177
00:11:55,740 --> 00:11:59,170
Is synchronising to audio.

178
00:11:59,170 --> 00:12:05,160
The top one there is spanning every second
beat.

179
00:12:05,160 --> 00:12:16,220
The bottom one is hitting every beat.

180
00:12:16,220 --> 00:12:45,260
I am going to do it in a console.

181
00:12:45,260 --> 00:12:50,623
If I change the speed of the audio, the beat
still sylchronize.

182
00:12:50,623 --> 00:12:53,000
And the gif will, no matter what audio and
gif.

183
00:12:53,000 --> 00:12:54,000
It will stick to the beat.

184
00:12:54,000 --> 00:12:55,000
(applause)

185
00:12:55,000 --> 00:12:56,000
that's why I built it.

186
00:12:56,000 --> 00:12:57,000
The story is, here is the kind of full spec.

187
00:12:57,000 --> 00:12:59,720
To think about what would be the best thing.

188
00:12:59,720 --> 00:13:04,990
But, I launched this in March.

189
00:13:04,990 --> 00:13:06,370
It was pretty successful.

190
00:13:06,370 --> 00:13:09,210
The rest of the presentation is what happened
after.

191
00:13:09,210 --> 00:13:13,210
I got a lot of attention at the beginning.

192
00:13:13,210 --> 00:13:14,210
This is pretty cool.

193
00:13:14,210 --> 00:13:17,570
I'm pretty cool.

194
00:13:17,570 --> 00:13:20,980
But, I wasn't happy with, it got attention.

195
00:13:20,980 --> 00:13:24,810
Not a lot of people put it in their page.

196
00:13:24,810 --> 00:13:27,290
I looked at what I released.

197
00:13:27,290 --> 00:13:29,580
First time I did polymer stuff.

198
00:13:29,580 --> 00:13:32,420
I had 7 files.

199
00:13:32,420 --> 00:13:37,000
It was 91K of data.

200
00:13:37,000 --> 00:13:39,430
I know Gifs are 5,5 M.

201
00:13:39,430 --> 00:13:46,910
It is too far.

202
00:13:46,910 --> 00:13:52,180
The multifar problem can be used by Vulcanize.

203
00:13:52,180 --> 00:13:55,470
Named after Gladiators.

204
00:13:55,470 --> 00:14:05,400
I'm glad they did it.

205
00:14:05,400 --> 00:14:15,020
Vulcanize will if you want, inline this dependencies
for webcomponent zozer And build it into a

206
00:14:15,020 --> 00:14:16,120
single payload.

207
00:14:16,120 --> 00:14:20,820
I got it down to 2 requests.

208
00:14:20,820 --> 00:14:22,790
It didn't save much space.

209
00:14:22,790 --> 00:14:24,610
Still 84K.

210
00:14:24,610 --> 00:14:29,880
It got rid of the first one.

211
00:14:29,880 --> 00:14:35,220
I wasn't really satisfied with what I released.

212
00:14:35,220 --> 00:14:38,200
It didn't fit for what I have done.

213
00:14:38,200 --> 00:14:40,370
It is a framework.

214
00:14:40,370 --> 00:14:43,790
Has opinions about building applications.

215
00:14:43,790 --> 00:14:47,870
I'm building so much more important.

216
00:14:47,870 --> 00:14:55,370
So, all of its work and very smart ideas.

217
00:14:55,370 --> 00:14:58,650
Weren't really applicable I thought.

218
00:14:58,650 --> 00:15:04,110
And the other thing was, people, I wanted
it to work with whatever framework they were

219
00:15:04,110 --> 00:15:05,920
using.

220
00:15:05,920 --> 00:15:09,550
A project.

221
00:15:09,550 --> 00:15:15,660
Why would you put polymer in your page as
well?

222
00:15:15,660 --> 00:15:19,850
They provide common functionality.

223
00:15:19,850 --> 00:15:22,400
Why wouldn't I use them?

224
00:15:22,400 --> 00:15:27,660
Why wouldn't I take the core of Xgif.

225
00:15:27,660 --> 00:15:32,330
And adapt it to all of the frameworks that
are out there.

226
00:15:32,330 --> 00:15:33,460
Keep the component in Api.

227
00:15:33,460 --> 00:15:35,150
I was proud of.

228
00:15:35,150 --> 00:15:38,360
And do the blumbing.

229
00:15:38,360 --> 00:15:40,420
It looks like it should work.

230
00:15:40,420 --> 00:15:43,990
I thought my talk would be, this is how you
do it.

231
00:15:43,990 --> 00:15:51,220
This is how you adapt it to all of them.

232
00:15:51,220 --> 00:15:52,580
But it doesn't work.

233
00:15:52,580 --> 00:15:56,100
Didn't work for me.

234
00:15:56,100 --> 00:15:58,900
And there are a few problems.

235
00:15:58,900 --> 00:16:05,850
These frameworks which are written cleverly
are concentrating on solving application development.

236
00:16:05,850 --> 00:16:07,220
Not interoperability.

237
00:16:07,220 --> 00:16:10,870
Nor should they be.

238
00:16:10,870 --> 00:16:15,850
It is just not part of their concern.

239
00:16:15,850 --> 00:16:20,050
For example, when I came to doing playback.

240
00:16:20,050 --> 00:16:21,530
Inside the actual element itself.

241
00:16:21,530 --> 00:16:23,660
I have to change a dot.

242
00:16:23,660 --> 00:16:26,500
60 times a second.

243
00:16:26,500 --> 00:16:28,460
And so, I grabbed the element itself.

244
00:16:28,460 --> 00:16:30,460
Keep a reference.

245
00:16:30,460 --> 00:16:33,230
Change the data attribute.

246
00:16:33,230 --> 00:16:36,450
React doesn't want me to do it.

247
00:16:36,450 --> 00:16:38,310
I have to substract this out.

248
00:16:38,310 --> 00:16:43,210
It will give me a state that I can update.

249
00:16:43,210 --> 00:16:48,710
I'm using polymer, I can update it correctly
zozer It was okay.

250
00:16:48,710 --> 00:16:51,700
This is what I would do if I would be paid.

251
00:16:51,700 --> 00:16:54,360
It felt premature generalisation.

252
00:16:54,360 --> 00:16:59,980
I have been a Java developer zozer this is
a side project.

253
00:16:59,980 --> 00:17:07,260
I wanted to follow it where the interest led
me.

254
00:17:07,260 --> 00:17:09,240
I stopped for the project for a bit.

255
00:17:09,240 --> 00:17:13,480
I released the polymer version and it was
fine.

256
00:17:13,480 --> 00:17:17,760
I wasn't really motivated to release other
versions.

257
00:17:17,760 --> 00:17:22,620
It took a long time to realise what was different.

258
00:17:22,620 --> 00:17:25,670
It is the Shadow dom.

259
00:17:25,670 --> 00:17:29,559
It thies one thing that the other ones didn't
have.

260
00:17:29,559 --> 00:17:31,820
I could convert it.

261
00:17:31,820 --> 00:17:35,660
Missing the shadow dom.

262
00:17:35,660 --> 00:17:40,470
It gives you a place to work.

263
00:17:40,470 --> 00:17:47,610
Having a space free from anything else, it
allows you to take shortcuts.

264
00:17:47,610 --> 00:17:50,670
I wanted to take all the shortcuts.

265
00:17:50,670 --> 00:17:53,929
Anyway, I stopped working on the project.

266
00:17:53,929 --> 00:17:56,120
For a lniter while.

267
00:17:56,120 --> 00:17:57,120
I wasn't sure.

268
00:17:57,120 --> 00:18:01,390
I could only see one solution, release it
for every framework.

269
00:18:01,390 --> 00:18:08,020
But, thankfully after a while I found another
solution.

270
00:18:08,020 --> 00:18:15,550
So, acouple of months ago chrome 36 came out.

271
00:18:15,550 --> 00:18:18,600
I'm not a big chrome fan.

272
00:18:18,600 --> 00:18:22,050
It was important.

273
00:18:22,050 --> 00:18:24,280
A lot of people talked about.

274
00:18:24,280 --> 00:18:29,710
People have not talked about it since.

275
00:18:29,710 --> 00:18:34,360
It had full, not behind a flag.

276
00:18:34,360 --> 00:18:38,200
Support for web components zozer For the major
specs.

277
00:18:38,200 --> 00:18:42,300
That's kind of cool.

278
00:18:42,300 --> 00:18:47,540
Because it meant that the promise web components
is at least possible in 1 browser.

279
00:18:47,540 --> 00:18:50,890
In a major browser.

280
00:18:50,890 --> 00:18:52,020
I looked into it a bit more.

281
00:18:52,020 --> 00:18:53,880
I was ashamed to admit.

282
00:18:53,880 --> 00:19:00,620
I didn't know Polymer and webcomponents is
not the same.

283
00:19:00,620 --> 00:19:02,760
The webcomponent spec is different.

284
00:19:02,760 --> 00:19:11,200
So, I started look at what it would look like
and feel like.

285
00:19:11,200 --> 00:19:13,380
A lot of the changes are superficial.

286
00:19:13,380 --> 00:19:20,980
I'm using the class.

287
00:19:20,980 --> 00:19:25,170
Some of the changes are a bit more annoying.

288
00:19:25,170 --> 00:19:27,890
Polymer gives you callbacks.

289
00:19:27,890 --> 00:19:29,500
Somebody changed the source of this gif.

290
00:19:29,500 --> 00:19:33,210
I have to demand dispatch.

291
00:19:33,210 --> 00:19:37,370
If I'm doing native webcomponent.

292
00:19:37,370 --> 00:19:42,360
You get this polymer element tag.

293
00:19:42,360 --> 00:19:47,130
There is a lot of documentation how to do
it.

294
00:19:47,130 --> 00:19:50,760
Not as much as doing it vanilla.

295
00:19:50,760 --> 00:19:55,140
They are very similar.

296
00:19:55,140 --> 00:19:56,140
When you do your own.

297
00:19:56,140 --> 00:20:00,330
You have to throw that stuff in.

298
00:20:00,330 --> 00:20:04,770
I just copy pasted it.

299
00:20:04,770 --> 00:20:08,970
I didn't have to change this much from the
other examples I was seeing.

300
00:20:08,970 --> 00:20:12,183
But after all that, the thing you can do.

301
00:20:12,183 --> 00:20:16,630
Is import X-gif, 1 file.

302
00:20:16,630 --> 00:20:18,640
Inline the js and Css.

303
00:20:18,640 --> 00:20:20,520
And it is a real tag.

304
00:20:20,520 --> 00:20:28,150
It works like the others, except it is better.

305
00:20:28,150 --> 00:20:31,010
Polymer has single platform.Js.

306
00:20:31,010 --> 00:20:37,870
A shim for the web components.

307
00:20:37,870 --> 00:20:39,780
And so I read a little thing.

308
00:20:39,780 --> 00:20:42,790
If you have component support.

309
00:20:42,790 --> 00:20:45,460
And inject platform itself.

310
00:20:45,460 --> 00:20:53,860
And so I realised, this kind of feels different
to releasing a polymer component.

311
00:20:53,860 --> 00:20:56,100
At a different level.

312
00:20:56,100 --> 00:20:58,890
And you might be thinking it is the same code.

313
00:20:58,890 --> 00:21:00,090
And it is the same Api.

314
00:21:00,090 --> 00:21:02,549
What is the difference?

315
00:21:02,549 --> 00:21:06,480
The key thing for me is now I'm extending
someone elses browser.

316
00:21:06,480 --> 00:21:10,620
I don't care if they use react.

317
00:21:10,620 --> 00:21:15,170
I have my own shadow Dom.

318
00:21:15,170 --> 00:21:18,410
If they use Amber.

319
00:21:18,410 --> 00:21:19,850
I don't care what they use.

320
00:21:19,850 --> 00:21:21,620
I'm changing their browser.

321
00:21:21,620 --> 00:21:24,780
That's kind of fun.

322
00:21:24,780 --> 00:21:25,780
Because everything has to talk Html.

323
00:21:25,780 --> 00:21:33,220
If you want to talk to X-gif you talk Html.

324
00:21:33,220 --> 00:21:36,840
That's kind of my web component story.

325
00:21:36,840 --> 00:21:42,040
I thought I'd end with some remarks.

326
00:21:42,040 --> 00:21:50,050
Which is, this is one component that is much
more an image tag than anything else.

327
00:21:50,050 --> 00:21:54,070
You will be writing components integrated
in your application.

328
00:21:54,070 --> 00:21:57,760
You want a framework.

329
00:21:57,760 --> 00:22:02,420
If you want to get a nice Html api.

330
00:22:02,420 --> 00:22:03,840
To support it natively.

331
00:22:03,840 --> 00:22:07,540
You are actually doing something different
than before.

332
00:22:07,540 --> 00:22:16,280
You are actually now being able to customize
the runtime you have been builing on top of.

333
00:22:16,280 --> 00:22:17,929
That's pretty exciting.

334
00:22:17,929 --> 00:22:20,429
This has all changed in the last few months.

335
00:22:20,429 --> 00:22:25,770
If Carl says it is awesome, it must be.

336
00:22:25,770 --> 00:22:27,440
That's all I've got.

