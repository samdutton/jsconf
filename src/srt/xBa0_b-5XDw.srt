1
00:00:00,180 --> 00:00:12,549

[Music]

2
00:00:12,559 --> 00:00:17,250
so why'd you come good

3
00:00:17,250 --> 00:00:20,310
good afternoon everyone so this is my

4
00:00:20,310 --> 00:00:23,189
first time that I'm giving a talk like a

5
00:00:23,189 --> 00:00:25,980
fool and talked in a Tarascon like a

6
00:00:25,980 --> 00:00:27,480
conflict outside of Thailand

7
00:00:27,480 --> 00:00:32,250
so first I'm really grateful for the

8
00:00:32,250 --> 00:00:35,630
organizers to have invited me here and

9
00:00:35,630 --> 00:00:37,800
the past two days were really awesome

10
00:00:37,800 --> 00:00:42,710
and I'm really excited for today so

11
00:00:42,710 --> 00:00:47,640
let's begin so today I'm gonna talk

12
00:00:47,640 --> 00:00:51,960
about smells in react apps and if you

13
00:00:51,960 --> 00:00:54,780
talk about if if you talk about coach

14
00:00:54,780 --> 00:00:57,239
males there are several books that talk

15
00:00:57,239 --> 00:01:00,570
about coats mail and designs me as well

16
00:01:00,570 --> 00:01:03,660
but unfortunately I don't read many

17
00:01:03,660 --> 00:01:06,240
books so usually I read the articles on

18
00:01:06,240 --> 00:01:08,580
the internet and piece them together so

19
00:01:08,580 --> 00:01:11,850
these three books I haven't read them

20
00:01:11,850 --> 00:01:18,210
yet so the contents that I'm gonna be

21
00:01:18,210 --> 00:01:19,920
presenting today they are mainly based

22
00:01:19,920 --> 00:01:22,229
on my experience so maybe they are not

23
00:01:22,229 --> 00:01:24,470
perfectly aligned with those books and

24
00:01:24,470 --> 00:01:27,330
maybe I may use a different term with

25
00:01:27,330 --> 00:01:29,610
them but I really hope they will be

26
00:01:29,610 --> 00:01:34,740
useful to you so my name is ty and I

27
00:01:34,740 --> 00:01:40,220
come from Thailand and I'm a Thai person

28
00:01:40,220 --> 00:01:44,150
and this is my twitter ID so at DT ints

29
00:01:44,150 --> 00:01:46,670
so if you have any feedback about this

30
00:01:46,670 --> 00:01:49,160
talk so please tweet it to me I would

31
00:01:49,160 --> 00:01:52,580
really appreciate it you can also find

32
00:01:52,580 --> 00:01:56,480
me on github as well so with that say

33
00:01:56,480 --> 00:02:01,070
let's start so I really like to build

34
00:02:01,070 --> 00:02:04,430
software for fun it's just like team

35
00:02:04,430 --> 00:02:08,119
home and say in his previous previous

36
00:02:08,119 --> 00:02:10,910
talk so in my free time I really like to

37
00:02:10,910 --> 00:02:13,240
work on side projects so this is one

38
00:02:13,240 --> 00:02:15,830
this one is a web-based musical

39
00:02:15,830 --> 00:02:17,000
instruments and there are several

40
00:02:17,000 --> 00:02:19,760
instruments you can choose from I demo

41
00:02:19,760 --> 00:02:23,270
it in a Scottish year 2016 in a

42
00:02:23,270 --> 00:02:26,390
lightning talk and some other time I

43
00:02:26,390 --> 00:02:28,310
feel like doing something a bit silly so

44
00:02:28,310 --> 00:02:31,790
here I created Windows 2000 theme for

45
00:02:31,790 --> 00:02:36,459
autumn text editor the challenge here

46
00:02:36,459 --> 00:02:38,930
dimensionless here is to replicate the

47
00:02:38,930 --> 00:02:41,750
three-wheel in Windows in a

48
00:02:41,750 --> 00:02:44,150
picture-perfect way so you think just

49
00:02:44,150 --> 00:02:48,860
yes so this is really fun the other time

50
00:02:48,860 --> 00:02:51,290
you see I sometimes I want to play a

51
00:02:51,290 --> 00:02:53,390
music game like a DJ so I need a

52
00:02:53,390 --> 00:02:56,239
turntable so I put a dish and put a

53
00:02:56,239 --> 00:02:58,190
phone in a dish and let it send the

54
00:02:58,190 --> 00:03:03,050
gyroscope signal to the game so that's

55
00:03:03,050 --> 00:03:05,720
that's some of my projects so that you

56
00:03:05,720 --> 00:03:08,780
see it for me the fun part is really

57
00:03:08,780 --> 00:03:11,360
important because that makes coding a

58
00:03:11,360 --> 00:03:14,330
fulfilling thing to do and makes it feel

59
00:03:14,330 --> 00:03:17,120
good and when you could as a hobby it

60
00:03:17,120 --> 00:03:20,989
will be a hobby that can also improve my

61
00:03:20,989 --> 00:03:23,630
professional coding skills as well I'm

62
00:03:23,630 --> 00:03:26,180
also really interested in how to make

63
00:03:26,180 --> 00:03:28,790
software maintainable that's because in

64
00:03:28,790 --> 00:03:30,950
one of my old project about 10 years ago

65
00:03:30,950 --> 00:03:34,220
I put in a lot of effort developing it

66
00:03:34,220 --> 00:03:36,350
but at that time I didn't know about

67
00:03:36,350 --> 00:03:38,780
software engineering stuff so I keep on

68
00:03:38,780 --> 00:03:41,720
coding and coding and coding and over

69
00:03:41,720 --> 00:03:45,769
time it became less maintainable so that

70
00:03:45,769 --> 00:03:47,360
we have seven thousand lines of

71
00:03:47,360 --> 00:03:51,590
untestable code and at that point when I

72
00:03:51,590 --> 00:03:54,110
do something or fix something another

73
00:03:54,110 --> 00:03:57,200
appears you remember the last the last

74
00:03:57,200 --> 00:04:01,130
demo the buck simulator so now

75
00:04:01,130 --> 00:04:04,490
maintaining it it's not fun and later I

76
00:04:04,490 --> 00:04:06,110
learned about software engineering so I

77
00:04:06,110 --> 00:04:07,760
feel like I want to improve the code

78
00:04:07,760 --> 00:04:11,870
base and add the tests but I have seven

79
00:04:11,870 --> 00:04:12,920
thousand lines of

80
00:04:12,920 --> 00:04:15,910
untestable code so that's also not fun

81
00:04:15,910 --> 00:04:19,970
and as a side project I think it should

82
00:04:19,970 --> 00:04:23,270
be fun and not a burden and this a huge

83
00:04:23,270 --> 00:04:26,180
boring task so I start to feel that I'd

84
00:04:26,180 --> 00:04:28,520
rather do something else and so the

85
00:04:28,520 --> 00:04:31,040
development of that project stopped and

86
00:04:31,040 --> 00:04:34,670
that's sad because I spent years working

87
00:04:34,670 --> 00:04:35,770
on it

88
00:04:35,770 --> 00:04:37,690
so what I learned here is that

89
00:04:37,690 --> 00:04:40,520
sustainability really matters and so now

90
00:04:40,520 --> 00:04:43,250
when I work on a new project I have to

91
00:04:43,250 --> 00:04:44,510
make sure that it will not end up like

92
00:04:44,510 --> 00:04:47,480
that one that's why I'm really

93
00:04:47,480 --> 00:04:50,420
interested in this stuff and as you know

94
00:04:50,420 --> 00:04:52,430
there are so many contributing factors

95
00:04:52,430 --> 00:04:55,130
and so many techniques you can use to

96
00:04:55,130 --> 00:04:59,600
make a software maintainable so later in

97
00:04:59,600 --> 00:05:02,360
2014 I started working on a new project

98
00:05:02,360 --> 00:05:05,560
and it's called amuse it is a web-based

99
00:05:05,560 --> 00:05:08,600
open source music game using html5

100
00:05:08,600 --> 00:05:12,290
technologies and I have the game with me

101
00:05:12,290 --> 00:05:14,540
as well so if you wanna try a demo you

102
00:05:14,540 --> 00:05:17,720
can approach me and so I want to make it

103
00:05:17,720 --> 00:05:20,360
great I want people to play this game so

104
00:05:20,360 --> 00:05:22,669
I need to make sure that this project is

105
00:05:22,669 --> 00:05:27,230
maintainable so I organized my code into

106
00:05:27,230 --> 00:05:30,110
modules and use webpack to bundle them

107
00:05:30,110 --> 00:05:32,750
together I set up a fling to cache

108
00:05:32,750 --> 00:05:35,360
common errors and enforce a consistent

109
00:05:35,360 --> 00:05:38,479
coding style I set up unit testing

110
00:05:38,479 --> 00:05:40,760
continuous integration and deployment as

111
00:05:40,760 --> 00:05:44,810
well as I track my code coverage so that

112
00:05:44,810 --> 00:05:47,210
took me three weeks to setup I

113
00:05:47,210 --> 00:05:49,220
I just meant three weeks setting up the

114
00:05:49,220 --> 00:05:50,540
project without doing any game

115
00:05:50,540 --> 00:05:53,300
development and that sounds pretty long

116
00:05:53,300 --> 00:05:54,950
compared to other projects but the

117
00:05:54,950 --> 00:05:58,340
result is that it made a huge impact so

118
00:05:58,340 --> 00:06:01,460
the unit tests they helped me to switch

119
00:06:01,460 --> 00:06:03,470
from one library to the other without

120
00:06:03,470 --> 00:06:05,979
fear that I would break the game a

121
00:06:05,979 --> 00:06:08,030
decoupled architecture

122
00:06:08,030 --> 00:06:10,570
to try out different wheel libraries I

123
00:06:10,570 --> 00:06:13,460
tried two times without having to

124
00:06:13,460 --> 00:06:16,580
rewrite the whole app and putting

125
00:06:16,580 --> 00:06:18,080
implementation details behind an

126
00:06:18,080 --> 00:06:19,880
interface lets me switch to a new

127
00:06:19,880 --> 00:06:22,700
back-end service without having to make

128
00:06:22,700 --> 00:06:24,920
a sweeping change across the whole

129
00:06:24,920 --> 00:06:29,630
codebase also some features I can

130
00:06:29,630 --> 00:06:31,790
prototype it in one night so in that

131
00:06:31,790 --> 00:06:34,460
project I learned that a good codebase

132
00:06:34,460 --> 00:06:37,460
it's like a clean table so where I can

133
00:06:37,460 --> 00:06:40,250
experiment quickly and prototype new

134
00:06:40,250 --> 00:06:43,520
ideas right away without having to first

135
00:06:43,520 --> 00:06:46,730
move so many stuff that's getting in my

136
00:06:46,730 --> 00:06:47,140
way

137
00:06:47,140 --> 00:06:50,480
so after I implement the idea if the

138
00:06:50,480 --> 00:06:51,800
experiment was successful

139
00:06:51,800 --> 00:06:54,380
I try to refactor the code base to be

140
00:06:54,380 --> 00:06:56,360
clean again ready for more experiments

141
00:06:56,360 --> 00:06:59,630
to come in the future so I've been

142
00:06:59,630 --> 00:07:01,490
maintaining this for about three years

143
00:07:01,490 --> 00:07:06,790
now and I'm still maintaining it so now

144
00:07:06,790 --> 00:07:10,010
I'm working out front in architect at

145
00:07:10,010 --> 00:07:14,090
Tazewell and our app is using based on

146
00:07:14,090 --> 00:07:15,670
react and redux

147
00:07:15,670 --> 00:07:20,000
so we have many features I guess so this

148
00:07:20,000 --> 00:07:23,390
is our tree view and this is just the

149
00:07:23,390 --> 00:07:25,940
reader store and we have more than 900

150
00:07:25,940 --> 00:07:28,580
components and over two years more than

151
00:07:28,580 --> 00:07:32,480
20 engineers work on it so it is a

152
00:07:32,480 --> 00:07:35,600
challenge for us to keep innovating new

153
00:07:35,600 --> 00:07:38,150
features and at the same time making

154
00:07:38,150 --> 00:07:40,190
sure the code is maintainable and we

155
00:07:40,190 --> 00:07:42,230
have to strike a healthy balance between

156
00:07:42,230 --> 00:07:44,900
minimizing technical debt and shortening

157
00:07:44,900 --> 00:07:47,960
the time to market so pretty challenging

158
00:07:47,960 --> 00:07:50,990
and as I say there are many contributing

159
00:07:50,990 --> 00:07:55,490
factors to maintainability but the

160
00:07:55,490 --> 00:07:56,870
things that have lived here they are

161
00:07:56,870 --> 00:07:59,780
technical stuff and when when I work in

162
00:07:59,780 --> 00:08:03,410
a team I learned that the most important

163
00:08:03,410 --> 00:08:09,500
thing really is communication so you're

164
00:08:09,500 --> 00:08:12,920
going to see a lot of code starting from

165
00:08:12,920 --> 00:08:15,560
this light so let's see an example now I

166
00:08:15,560 --> 00:08:18,050
created a module called music preview

167
00:08:18,050 --> 00:08:20,139
and it exports five functions

168
00:08:20,139 --> 00:08:22,090
the rest of the app only needs to know

169
00:08:22,090 --> 00:08:23,830
about these five functions to use it

170
00:08:23,830 --> 00:08:26,379
they don't need to know that behind the

171
00:08:26,379 --> 00:08:29,289
interface of that five function lies a

172
00:08:29,289 --> 00:08:32,200
big complicated ugly hack so you can see

173
00:08:32,200 --> 00:08:35,140
like a four inside an if and if inside

174
00:08:35,140 --> 00:08:37,120
an if inside and four in here and

175
00:08:37,120 --> 00:08:39,610
there's a cache block inside a trice and

176
00:08:39,610 --> 00:08:45,220
if in another if in the four so in

177
00:08:45,220 --> 00:08:47,170
principle this would work fine because

178
00:08:47,170 --> 00:08:50,019
the code space behind the interface and

179
00:08:50,019 --> 00:08:52,120
other parts of the software are not

180
00:08:52,120 --> 00:08:55,269
affected by it but in practice another

181
00:08:55,269 --> 00:08:57,760
developer may be looking for a technical

182
00:08:57,760 --> 00:09:00,760
solution and stumbled upon my hack since

183
00:09:00,760 --> 00:09:03,399
I didn't clearly communicate that the

184
00:09:03,399 --> 00:09:06,430
code they are seeing is the hack it got

185
00:09:06,430 --> 00:09:10,269
duplicated so it's really important to

186
00:09:10,269 --> 00:09:12,880
communicate with other developers about

187
00:09:12,880 --> 00:09:15,070
when when you're writing code you have

188
00:09:15,070 --> 00:09:17,529
to communicate whether you are doing

189
00:09:17,529 --> 00:09:19,810
I mean while you are doing it and is it

190
00:09:19,810 --> 00:09:22,360
the best practice is it the way other

191
00:09:22,360 --> 00:09:25,630
people should take as an example so

192
00:09:25,630 --> 00:09:28,269
another important factor is having an

193
00:09:28,269 --> 00:09:30,850
effective code reviews and to do an

194
00:09:30,850 --> 00:09:33,699
effective code reviews I think in my

195
00:09:33,699 --> 00:09:35,440
opinion we should learn to recognize

196
00:09:35,440 --> 00:09:39,100
smells inside our code and this is what

197
00:09:39,100 --> 00:09:42,610
I'm gonna talk about today the first

198
00:09:42,610 --> 00:09:45,100
kind of smell I call it information

199
00:09:45,100 --> 00:09:49,540
leaks so let's see another example so

200
00:09:49,540 --> 00:09:52,390
let's say in our project we have a

201
00:09:52,390 --> 00:09:55,029
standard user interface toolkit which

202
00:09:55,029 --> 00:09:57,430
contains the component that I use across

203
00:09:57,430 --> 00:10:00,130
the app so one of them is this component

204
00:10:00,130 --> 00:10:02,440
the user of water so we can use this

205
00:10:02,440 --> 00:10:05,740
component to render and users of water

206
00:10:05,740 --> 00:10:08,380
by specifying the image and the size and

207
00:10:08,380 --> 00:10:12,420
we have three sizes to choose from small

208
00:10:12,420 --> 00:10:15,730
medium and large maybe that's a bit too

209
00:10:15,730 --> 00:10:20,589
large okay and later as we develop our

210
00:10:20,589 --> 00:10:23,320
app we need to implement new features so

211
00:10:23,320 --> 00:10:26,440
the code changes over time we have to

212
00:10:26,440 --> 00:10:29,079
implement the messaging system and we

213
00:10:29,079 --> 00:10:30,600
got the design

214
00:10:30,600 --> 00:10:33,029
and this is our how a message should

215
00:10:33,029 --> 00:10:35,430
look like on the Left we have the water

216
00:10:35,430 --> 00:10:37,920
on the right some text so this should be

217
00:10:37,920 --> 00:10:39,959
straightforward so I look at the user

218
00:10:39,959 --> 00:10:42,240
avatar component and I saw that decides

219
00:10:42,240 --> 00:10:46,949
that we need to use it's not there to

220
00:10:46,949 --> 00:10:49,170
fix this we need to add a new size but

221
00:10:49,170 --> 00:10:51,800
we already have small medium and large

222
00:10:51,800 --> 00:11:01,610
what should we put in here medium large

223
00:11:01,620 --> 00:11:05,920
quite lush okay so we did the most

224
00:11:05,920 --> 00:11:08,110
obvious thing that makes perfect sense

225
00:11:08,110 --> 00:11:12,160
we name it appropriately message because

226
00:11:12,160 --> 00:11:14,259
it's only used in one place the message

227
00:11:14,259 --> 00:11:15,389
right

228
00:11:15,389 --> 00:11:20,800
so does this smells a bit to you yeah so

229
00:11:20,800 --> 00:11:22,569
let's keep going in for now so few

230
00:11:22,569 --> 00:11:24,100
months later I start seeing this

231
00:11:24,100 --> 00:11:26,470
everywhere in other places that's not

232
00:11:26,470 --> 00:11:30,040
related to the message at all so what

233
00:11:30,040 --> 00:11:32,439
happened here let's step out a bit so we

234
00:11:32,439 --> 00:11:34,480
have the message component which is a

235
00:11:34,480 --> 00:11:36,279
specific feature it belongs to a

236
00:11:36,279 --> 00:11:38,470
specific feature we have the user water

237
00:11:38,470 --> 00:11:40,959
which is generic you say interface

238
00:11:40,959 --> 00:11:43,269
component so the message wants to show

239
00:11:43,269 --> 00:11:46,749
in a water so it uses that component in

240
00:11:46,749 --> 00:11:50,290
turn that component knows how big the

241
00:11:50,290 --> 00:11:54,069
owatta should be so it's aware of the

242
00:11:54,069 --> 00:11:58,709
messaging system and when I see this I

243
00:11:58,709 --> 00:12:01,629
think that okay some information is

244
00:12:01,629 --> 00:12:03,490
leaking here because now the message

245
00:12:03,490 --> 00:12:05,980
knows how to render itself but it

246
00:12:05,980 --> 00:12:07,569
doesn't know how big the avatar should

247
00:12:07,569 --> 00:12:11,709
be instead that knowledge is leaked into

248
00:12:11,709 --> 00:12:15,850
the user of other component so the leak

249
00:12:15,850 --> 00:12:17,740
here is that information about a

250
00:12:17,740 --> 00:12:20,199
specific feature leaked into a generic

251
00:12:20,199 --> 00:12:22,149
component making the component less

252
00:12:22,149 --> 00:12:29,319
generic and more awkward to reuse so but

253
00:12:29,319 --> 00:12:31,779
another reason why this happen is that

254
00:12:31,779 --> 00:12:34,149
maybe because of our generic component

255
00:12:34,149 --> 00:12:36,550
it's not flexible enough so we're gonna

256
00:12:36,550 --> 00:12:38,620
try to make it more flexible to fix this

257
00:12:38,620 --> 00:12:42,189
so we used to have four sides now we

258
00:12:42,189 --> 00:12:46,209
have eight sides and now the message can

259
00:12:46,209 --> 00:12:51,639
pick a size from the catalog and we

260
00:12:51,639 --> 00:12:53,800
don't need to make any outward change to

261
00:12:53,800 --> 00:12:56,439
it anymore but there's still a pitfall

262
00:12:56,439 --> 00:12:59,170
here what would happen if we want to

263
00:12:59,170 --> 00:13:04,870
make a new size between L and SL we may

264
00:13:04,870 --> 00:13:07,029
need to adjust the size table again and

265
00:13:07,029 --> 00:13:10,420
and maybe we have to go through the code

266
00:13:10,420 --> 00:13:12,819
base and move it out to affect our it's

267
00:13:12,819 --> 00:13:15,030
just out to ACS it out and so on

268
00:13:15,030 --> 00:13:18,660
but fortunately at tasks well this is

269
00:13:18,660 --> 00:13:20,430
flexible enough for us so we don't have

270
00:13:20,430 --> 00:13:23,040
to do that but if you really want to

271
00:13:23,040 --> 00:13:26,220
make it really flexible you can let the

272
00:13:26,220 --> 00:13:28,890
user specify the size in pixel that's

273
00:13:28,890 --> 00:13:31,980
really flexible but it may go out of

274
00:13:31,980 --> 00:13:34,470
control right so to keep things under

275
00:13:34,470 --> 00:13:36,960
control you can specify a list of

276
00:13:36,960 --> 00:13:40,950
allowed size so you know they are trade

277
00:13:40,950 --> 00:13:43,530
off to all of these three approaches so

278
00:13:43,530 --> 00:13:46,740
this is an example where as mail calls

279
00:13:46,740 --> 00:13:50,340
for a bit of code restructuring but

280
00:13:50,340 --> 00:13:52,350
sometimes oh you have to do it's just

281
00:13:52,350 --> 00:13:55,320
changing the name let's see another

282
00:13:55,320 --> 00:13:59,220
example again we have a standard you say

283
00:13:59,220 --> 00:14:01,740
interface to kit and we have a button

284
00:14:01,740 --> 00:14:05,460
which the user can click we also have a

285
00:14:05,460 --> 00:14:09,210
pop-up menu that the user can select an

286
00:14:09,210 --> 00:14:13,230
item from it so help me with this I have

287
00:14:13,230 --> 00:14:24,650
a button I have a menu ah menu button

288
00:14:24,650 --> 00:14:25,860
okay

289
00:14:25,860 --> 00:14:29,130
we're just putting it together so this

290
00:14:29,130 --> 00:14:31,380
menu button you can click on it and a

291
00:14:31,380 --> 00:14:33,450
menu opens and you can select items from

292
00:14:33,450 --> 00:14:36,330
it but the cache here is that the button

293
00:14:36,330 --> 00:14:39,330
must appear to be pressed while the menu

294
00:14:39,330 --> 00:14:43,050
is open only until the menu is closed

295
00:14:43,050 --> 00:14:45,510
then the button can return back to the

296
00:14:45,510 --> 00:14:49,860
original state so at first thought we

297
00:14:49,860 --> 00:14:51,810
may again start with the most obvious

298
00:14:51,810 --> 00:14:54,510
thing here which is to make button and

299
00:14:54,510 --> 00:14:57,570
step another prop called its menu open

300
00:14:57,570 --> 00:15:01,589
so that if the if it's true then it

301
00:15:01,589 --> 00:15:05,520
appears to be pressed but again thus it

302
00:15:05,520 --> 00:15:10,140
smells a bit that's because now the

303
00:15:10,140 --> 00:15:12,390
button is now aware of the menu which is

304
00:15:12,390 --> 00:15:17,060
an entirely unrelated concept so

305
00:15:17,060 --> 00:15:21,120
thinking a bit deeper we see that the

306
00:15:21,120 --> 00:15:22,890
button doesn't really need to know about

307
00:15:22,890 --> 00:15:24,959
the menu but it only needs to know

308
00:15:24,959 --> 00:15:26,430
whether the button should appear to be

309
00:15:26,430 --> 00:15:28,290
the

310
00:15:28,290 --> 00:15:30,999
this example show that shows that a

311
00:15:30,999 --> 00:15:34,379
simple naming change can entirely

312
00:15:34,379 --> 00:15:38,680
communicate a different thing so when

313
00:15:38,680 --> 00:15:42,490
people say it's just a name so you know

314
00:15:42,490 --> 00:15:45,939
naming is really important so for this

315
00:15:45,939 --> 00:15:49,029
kind of smell when I reveal code I try

316
00:15:49,029 --> 00:15:52,029
to ask myself does this really needs to

317
00:15:52,029 --> 00:15:58,199
know about that so that's how I do it

318
00:15:58,199 --> 00:16:03,790
the second the second smell I call it

319
00:16:03,790 --> 00:16:07,209
low cohesion and cohesion here means

320
00:16:07,209 --> 00:16:11,339
that related things stay close together

321
00:16:11,339 --> 00:16:14,920
let's see more examples here so now for

322
00:16:14,920 --> 00:16:17,949
our app we need to create a navigation

323
00:16:17,949 --> 00:16:23,949
bar and it looks like this so if I use

324
00:16:23,949 --> 00:16:26,019
react bootstrap implementing this should

325
00:16:26,019 --> 00:16:28,120
be straightforward so first I need an F

326
00:16:28,120 --> 00:16:31,059
bar inside it header which contains the

327
00:16:31,059 --> 00:16:33,670
apps name and then several items which

328
00:16:33,670 --> 00:16:36,639
is shown here so that's it so far so

329
00:16:36,639 --> 00:16:39,579
good again we need to implement new

330
00:16:39,579 --> 00:16:41,860
feature and this time is going to be the

331
00:16:41,860 --> 00:16:45,009
authentication system and we need to now

332
00:16:45,009 --> 00:16:47,439
we need to update the nav bar to display

333
00:16:47,439 --> 00:16:52,269
these two guys at the right so let's do

334
00:16:52,269 --> 00:16:56,139
it first I'm gonna take in some props so

335
00:16:56,139 --> 00:16:58,269
that we can figure out how to display

336
00:16:58,269 --> 00:17:00,189
the nav bar correctly we're gonna figure

337
00:17:00,189 --> 00:17:02,199
out whether the user is locking or not

338
00:17:02,199 --> 00:17:05,230
and then at the bottom we're gonna at

339
00:17:05,230 --> 00:17:07,000
the right of that row right side of the

340
00:17:07,000 --> 00:17:09,520
nav bar we're gonna add the navigation

341
00:17:09,520 --> 00:17:13,289
item accordingly okay

342
00:17:13,299 --> 00:17:16,480
and now this is our presentation or

343
00:17:16,480 --> 00:17:19,600
component but we also need to connect to

344
00:17:19,600 --> 00:17:22,600
the readers store so we can do that

345
00:17:22,600 --> 00:17:24,939
using the connect function from react

346
00:17:24,939 --> 00:17:30,100
react leaders package so that's it now

347
00:17:30,100 --> 00:17:31,570
looking at the component we can see that

348
00:17:31,570 --> 00:17:34,230
it cleanly separates into three concerns

349
00:17:34,230 --> 00:17:37,630
selecting data dispatching action into

350
00:17:37,630 --> 00:17:40,030
the store and our rendering logic which

351
00:17:40,030 --> 00:17:40,809
is the

352
00:17:40,809 --> 00:17:47,049
sensational component again we need to

353
00:17:47,049 --> 00:17:50,740
implement new features this time two new

354
00:17:50,740 --> 00:17:53,769
features so now we need to update the

355
00:17:53,769 --> 00:17:56,409
navbar Ken when the user locked in now

356
00:17:56,409 --> 00:17:58,450
we need to display the number of unread

357
00:17:58,450 --> 00:18:02,499
notifications and messages so coming

358
00:18:02,499 --> 00:18:04,090
back to our code we already see the

359
00:18:04,090 --> 00:18:07,679
pattern here so let's go with the flow

360
00:18:07,679 --> 00:18:11,019
so first I'm gonna select some data from

361
00:18:11,019 --> 00:18:12,820
the store and by the action creators

362
00:18:12,820 --> 00:18:15,730
here and then late and then here I'm

363
00:18:15,730 --> 00:18:18,669
gonna take in some props according to

364
00:18:18,669 --> 00:18:21,249
the code at the top now going down to

365
00:18:21,249 --> 00:18:24,519
the bottom here's the rendering logic so

366
00:18:24,519 --> 00:18:27,490
we are going to add two more items here

367
00:18:27,490 --> 00:18:34,830
so the notifications and the message

368
00:18:34,830 --> 00:18:38,200
that's it so maybe we can zoom out a bit

369
00:18:38,200 --> 00:18:40,809
here we can see the pattern here that

370
00:18:40,809 --> 00:18:44,230
our code is cleanly separated into three

371
00:18:44,230 --> 00:18:47,230
concerns but these concerns are

372
00:18:47,230 --> 00:18:50,860
cross-cutting that means they have to do

373
00:18:50,860 --> 00:18:52,629
with many different functionalities of

374
00:18:52,629 --> 00:18:55,720
the app but if we looked from another

375
00:18:55,720 --> 00:18:57,730
perspective from a functionality

376
00:18:57,730 --> 00:19:02,559
standpoint we are going to see that many

377
00:19:02,559 --> 00:19:06,159
functional parts they are intermixed

378
00:19:06,159 --> 00:19:09,519
inside the code and this can make it a

379
00:19:09,519 --> 00:19:12,850
bit hard to navigate the code if we want

380
00:19:12,850 --> 00:19:14,619
to look for the code related to the

381
00:19:14,619 --> 00:19:17,830
navigation we have to jump and skip over

382
00:19:17,830 --> 00:19:22,090
a lot of unrelated code let's see a real

383
00:19:22,090 --> 00:19:25,149
world example so this is options panel

384
00:19:25,149 --> 00:19:29,559
from my project beamers so I need to add

385
00:19:29,559 --> 00:19:35,110
a new option here so this is the

386
00:19:35,110 --> 00:19:36,759
existing code don't worry about it

387
00:19:36,759 --> 00:19:39,999
but to implement this here's where I

388
00:19:39,999 --> 00:19:42,279
need to add a code first one there the

389
00:19:42,279 --> 00:19:44,559
second one in the prop types there and I

390
00:19:44,559 --> 00:19:47,919
have to jump down 80 lines to add a new

391
00:19:47,919 --> 00:19:51,760
code here so seeing this

392
00:19:51,760 --> 00:19:55,120
as I started think as I add more options

393
00:19:55,120 --> 00:19:58,210
what would happen this part would spread

394
00:19:58,210 --> 00:20:01,570
even more apart and I have to scroll up

395
00:20:01,570 --> 00:20:04,810
and down a lot more to implement more

396
00:20:04,810 --> 00:20:08,050
options in the future so some cohesion

397
00:20:08,050 --> 00:20:12,040
is lost here and you can tell that when

398
00:20:12,040 --> 00:20:14,530
you code you have to knit when you need

399
00:20:14,530 --> 00:20:16,000
to do something simple you have to

400
00:20:16,000 --> 00:20:18,820
change you have to jump up and down a

401
00:20:18,820 --> 00:20:21,700
lot or maybe you have to go between

402
00:20:21,700 --> 00:20:24,760
different files or even sometimes

403
00:20:24,760 --> 00:20:28,900
different repository you can also smell

404
00:20:28,900 --> 00:20:31,660
this when reviewing a PR when you start

405
00:20:31,660 --> 00:20:33,820
to notice that I read this piece of code

406
00:20:33,820 --> 00:20:36,340
but it but I don't understand it I have

407
00:20:36,340 --> 00:20:38,890
to jump down and jump up and down and up

408
00:20:38,890 --> 00:20:42,150
again to fully understand something a

409
00:20:42,150 --> 00:20:46,210
particular feature and this can also

410
00:20:46,210 --> 00:20:49,140
happen when files are organized by types

411
00:20:49,140 --> 00:20:51,700
so in this example if I want to

412
00:20:51,700 --> 00:20:53,890
implement a new feature I have to change

413
00:20:53,890 --> 00:20:58,000
six files and Rauh grouping file this

414
00:20:58,000 --> 00:21:01,480
way can make the architecture more

415
00:21:01,480 --> 00:21:03,700
obvious so it's obvious we have in

416
00:21:03,700 --> 00:21:08,380
entities interactors IO and UI here and

417
00:21:08,380 --> 00:21:11,410
in a small project like beam use I would

418
00:21:11,410 --> 00:21:13,660
say this is a pretty good way to

419
00:21:13,660 --> 00:21:16,630
structure but once you have like 200

420
00:21:16,630 --> 00:21:19,960
files of each types this approach

421
00:21:19,960 --> 00:21:24,430
doesn't scale very well for us so what

422
00:21:24,430 --> 00:21:26,320
we can do is we can try to aim for

423
00:21:26,320 --> 00:21:28,330
functional cohesion we try to group

424
00:21:28,330 --> 00:21:32,190
things by what the purpose that code is

425
00:21:32,190 --> 00:21:35,830
instead of grouping by responsibility

426
00:21:35,830 --> 00:21:37,720
like I'm gonna select data from the

427
00:21:37,720 --> 00:21:41,380
store I'm gonna dispatch no this part

428
00:21:41,380 --> 00:21:44,160
for message this part for notification

429
00:21:44,160 --> 00:21:45,870
let's do that

430
00:21:45,870 --> 00:21:49,500
so coming back to our code here's the

431
00:21:49,500 --> 00:21:52,480
navigation component so I'm first I'm

432
00:21:52,480 --> 00:21:54,700
gonna remove stuff not directly related

433
00:21:54,700 --> 00:21:58,360
to navigation so this one is gone plop

434
00:21:58,360 --> 00:22:01,540
tides gone and the rendering logic that

435
00:22:01,540 --> 00:22:04,659
has to do with user message notification

436
00:22:04,659 --> 00:22:08,080
I replaced them with specialized

437
00:22:08,080 --> 00:22:11,979
components here so this components this

438
00:22:11,979 --> 00:22:14,080
specialized components they are smart in

439
00:22:14,080 --> 00:22:17,049
a way that the lucky enough item for

440
00:22:17,049 --> 00:22:19,419
example it would know how to figure out

441
00:22:19,419 --> 00:22:21,460
the current authentication state on its

442
00:22:21,460 --> 00:22:24,729
own and renders the right thing so let's

443
00:22:24,729 --> 00:22:28,479
now look at it again we connect to the

444
00:22:28,479 --> 00:22:31,059
reader store we select some data we bind

445
00:22:31,059 --> 00:22:34,419
the action creators and here's our

446
00:22:34,419 --> 00:22:38,229
enduring logic so that's pretty simple

447
00:22:38,229 --> 00:22:42,249
and and this looks pretty good because

448
00:22:42,249 --> 00:22:44,619
now most part of the code is now

449
00:22:44,619 --> 00:22:46,929
concerned with authentication and the

450
00:22:46,929 --> 00:22:49,950
current user except for these two lines

451
00:22:49,950 --> 00:22:53,470
which renders the nav item they are

452
00:22:53,470 --> 00:22:55,259
still concerned with the navigation

453
00:22:55,259 --> 00:23:00,489
right so we are losing a bit of cohesion

454
00:23:00,489 --> 00:23:03,460
here again because if in the future we

455
00:23:03,460 --> 00:23:05,649
need to replace the nav item component

456
00:23:05,649 --> 00:23:09,070
with something else we we need to jump

457
00:23:09,070 --> 00:23:11,739
from the notification I mean from the

458
00:23:11,739 --> 00:23:14,619
navigation component at the top to here

459
00:23:14,619 --> 00:23:16,450
and down to other components that

460
00:23:16,450 --> 00:23:21,210
renders an F item so what can we do here

461
00:23:21,210 --> 00:23:25,349
well we can delegate the rendering logic

462
00:23:25,349 --> 00:23:28,389
so instead of hard-coding the rendering

463
00:23:28,389 --> 00:23:31,690
logic here we let the user of this

464
00:23:31,690 --> 00:23:34,179
component specify its own rendering

465
00:23:34,179 --> 00:23:39,789
logic as a function so I'm gonna add

466
00:23:39,789 --> 00:23:44,229
some prop types to make it more clear so

467
00:23:44,229 --> 00:23:46,840
now this component is now only concerned

468
00:23:46,840 --> 00:23:49,059
about the current user and the

469
00:23:49,059 --> 00:23:51,309
authentication state it's no longer

470
00:23:51,309 --> 00:23:53,679
concerned about how to render it it

471
00:23:53,679 --> 00:23:57,759
belongs to someone else now so this

472
00:23:57,759 --> 00:23:59,619
component is no longer related to

473
00:23:59,619 --> 00:24:00,249
navigation

474
00:24:00,249 --> 00:24:02,229
it's just authentication so I'll just

475
00:24:02,229 --> 00:24:05,590
name them off and by doing it this way

476
00:24:05,590 --> 00:24:09,099
the art component can be reused in other

477
00:24:09,099 --> 00:24:11,139
parts of the app such as maybe

478
00:24:11,139 --> 00:24:13,450
displaying some kind of content only

479
00:24:13,450 --> 00:24:16,599
when the user is logged in by the way

480
00:24:16,599 --> 00:24:17,610
this technique

481
00:24:17,610 --> 00:24:20,070
that we delegate the rendering logic to

482
00:24:20,070 --> 00:24:22,080
the users of the component is now

483
00:24:22,080 --> 00:24:24,420
officially known as render props and

484
00:24:24,420 --> 00:24:27,000
just a past few weeks

485
00:24:27,000 --> 00:24:29,610
this just got into the official react

486
00:24:29,610 --> 00:24:30,890
documentation

487
00:24:30,890 --> 00:24:33,780
so let's come back to our navigation

488
00:24:33,780 --> 00:24:36,540
component so at the bottom instead of

489
00:24:36,540 --> 00:24:39,140
using a specialized component thus

490
00:24:39,140 --> 00:24:42,510
moving the nav item down to other parts

491
00:24:42,510 --> 00:24:45,380
of the code we can use the earth

492
00:24:45,380 --> 00:24:50,250
component here and specify how to render

493
00:24:50,250 --> 00:24:52,799
when the user is locked out and lock in

494
00:24:52,799 --> 00:24:59,940
accordingly so now you can see all the

495
00:24:59,940 --> 00:25:02,190
nav items are clip here so all we have

496
00:25:02,190 --> 00:25:03,750
to do left is to change the notification

497
00:25:03,750 --> 00:25:06,780
and messages to use the same pattern

498
00:25:06,780 --> 00:25:08,820
then all the nav items are going to be

499
00:25:08,820 --> 00:25:12,500
grouped in the navigation component

500
00:25:12,500 --> 00:25:17,490
finally the earth component here if we

501
00:25:17,490 --> 00:25:19,230
look at it the objective of this

502
00:25:19,230 --> 00:25:21,480
component is to connect the user

503
00:25:21,480 --> 00:25:24,840
interface which is here the navigation

504
00:25:24,840 --> 00:25:27,630
bar but it can be something else as I

505
00:25:27,630 --> 00:25:30,840
said to the data source which is here

506
00:25:30,840 --> 00:25:35,040
the current authentication state so it

507
00:25:35,040 --> 00:25:37,580
has what we call this kind of component

508
00:25:37,580 --> 00:25:40,020
data connector component

509
00:25:40,020 --> 00:25:45,030
so to recap once a component grow bigger

510
00:25:45,030 --> 00:25:48,360
it can be hard to maintain so if we try

511
00:25:48,360 --> 00:25:50,970
to split the component with the most

512
00:25:50,970 --> 00:25:52,890
obvious way maybe doing something like

513
00:25:52,890 --> 00:25:53,250
this

514
00:25:53,250 --> 00:25:55,559
separate the logic part from the real

515
00:25:55,559 --> 00:25:59,280
part but this can lead to the code

516
00:25:59,280 --> 00:26:02,190
losing its cohesion especially when one

517
00:26:02,190 --> 00:26:03,960
part would not make sense without the

518
00:26:03,960 --> 00:26:08,370
other we can try to split the code by

519
00:26:08,370 --> 00:26:11,010
the functional codes that is trying to

520
00:26:11,010 --> 00:26:15,570
achieve and if we do this right it's

521
00:26:15,570 --> 00:26:17,549
easier to make these components reusable

522
00:26:17,549 --> 00:26:21,470
in other parts of the app so in

523
00:26:21,470 --> 00:26:26,520
conclusions in code reviews we usually

524
00:26:26,520 --> 00:26:28,950
reveal code for consistency for

525
00:26:28,950 --> 00:26:30,240
readability

526
00:26:30,240 --> 00:26:31,980
usually revealed for logical correctness

527
00:26:31,980 --> 00:26:38,250
and this quality is relatively simpler

528
00:26:38,250 --> 00:26:42,450
to review but define smells

529
00:26:42,450 --> 00:26:46,110
they are quite subtle and it's pretty

530
00:26:46,110 --> 00:26:49,110
easy to see the code as correct but miss

531
00:26:49,110 --> 00:26:52,260
the such a design issue unless we are

532
00:26:52,260 --> 00:26:57,090
aware of them and actively look for them

533
00:26:57,090 --> 00:27:00,950
so to build maintainable software I

534
00:27:00,950 --> 00:27:03,390
encourage everyone to develop the sense

535
00:27:03,390 --> 00:27:06,180
of course males and be mindful of them

536
00:27:06,180 --> 00:27:10,020
and today I shared you two kinds of

537
00:27:10,020 --> 00:27:12,330
smells and these are the kinds of smells

538
00:27:12,330 --> 00:27:14,820
that I encountered most in my

539
00:27:14,820 --> 00:27:18,900
professional professional life I mean

540
00:27:18,900 --> 00:27:23,400
coding and I don't know of any ways that

541
00:27:23,400 --> 00:27:25,620
we can detect this males automatically

542
00:27:25,620 --> 00:27:27,330
especially when it's concerned with

543
00:27:27,330 --> 00:27:29,760
naming so we can check that we are doing

544
00:27:29,760 --> 00:27:32,310
camelcase right but we cannot check

545
00:27:32,310 --> 00:27:34,950
automatically whether this component

546
00:27:34,950 --> 00:27:37,260
should know about the other component so

547
00:27:37,260 --> 00:27:46,520
some human expert is required here so

548
00:27:46,520 --> 00:27:49,770
when writing and reviewing code I would

549
00:27:49,770 --> 00:27:51,690
like to encourage you to look for this

550
00:27:51,690 --> 00:27:54,690
kind of smells and other smells as you

551
00:27:54,690 --> 00:27:58,680
can find in the web and take note of

552
00:27:58,680 --> 00:28:02,130
them last but not least not all smells

553
00:28:02,130 --> 00:28:07,250
are bad for example duplicate code is a

554
00:28:07,250 --> 00:28:11,370
well-known code smell but a duplicated

555
00:28:11,370 --> 00:28:13,940
code can sometimes be easier to read

556
00:28:13,940 --> 00:28:17,610
than the code that's not duplicated

557
00:28:17,610 --> 00:28:20,310
because a code that's duplicated they

558
00:28:20,310 --> 00:28:23,220
are more explicit and contains less

559
00:28:23,220 --> 00:28:25,200
abstraction but once you increase the

560
00:28:25,200 --> 00:28:28,500
level of abstraction it can be harder to

561
00:28:28,500 --> 00:28:31,980
see what's going on and also that's why

562
00:28:31,980 --> 00:28:34,440
I do placate all my slides instead of

563
00:28:34,440 --> 00:28:38,940
using animations and in up with 201 and

564
00:28:38,940 --> 00:28:42,660
202 ice here so in the end everything is

565
00:28:42,660 --> 00:28:44,010
a trade-off

566
00:28:44,010 --> 00:28:46,470
by making your modules smaller you're

567
00:28:46,470 --> 00:28:49,500
gonna have more modules by reducing the

568
00:28:49,500 --> 00:28:51,290
amount of code you have to maintain your

569
00:28:51,290 --> 00:28:54,690
increasing third-party dependencies so

570
00:28:54,690 --> 00:28:57,360
we have to make a lot of choices when

571
00:28:57,360 --> 00:29:00,930
developing software and to see if we

572
00:29:00,930 --> 00:29:05,460
have made the right trade-off look for

573
00:29:05,460 --> 00:29:07,740
feedback from other developers so after

574
00:29:07,740 --> 00:29:10,290
all we make code maintainable so that

575
00:29:10,290 --> 00:29:14,760
other people can maintain it so let's

576
00:29:14,760 --> 00:29:18,300
look for their feedback so that's all I

577
00:29:18,300 --> 00:29:21,390
want to share today thank you everyone

578
00:29:21,390 --> 00:29:22,890
for listening

