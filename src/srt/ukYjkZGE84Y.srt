1
00:00:06,310 --> 00:00:11,440

okay so uh I don't know why he said I

2
00:00:11,440 --> 00:00:14,590
was really good at compilers and trans

3
00:00:14,590 --> 00:00:16,570
powers like it's just a straight-up lie

4
00:00:16,570 --> 00:00:19,320
but I know a little bit about them uh

5
00:00:19,320 --> 00:00:23,619
but uh thank you so um first of all like

6
00:00:23,619 --> 00:00:24,789
I'm really glad about the order of the

7
00:00:24,789 --> 00:00:27,759
talks because what we got before this

8
00:00:27,759 --> 00:00:30,279
was a talk in the practical about making

9
00:00:30,279 --> 00:00:32,079
sure your stuff works and I'm going to

10
00:00:32,079 --> 00:00:35,079
talk about making things weird and you

11
00:00:35,079 --> 00:00:36,520
want to know your stuff works when you

12
00:00:36,520 --> 00:00:39,870
make things weird so right test please

13
00:00:39,870 --> 00:00:42,940
so the talk is titled you use people in

14
00:00:42,940 --> 00:00:44,350
the modern working about but the secret

15
00:00:44,350 --> 00:00:48,820
title is future tool okay so just follow

16
00:00:48,820 --> 00:00:51,010
me a little bit as i'll talk to you

17
00:00:51,010 --> 00:00:53,320
about what i think is like one of the

18
00:00:53,320 --> 00:00:55,060
best tools to come out for modern

19
00:00:55,060 --> 00:00:56,800
software development in a long time and

20
00:00:56,800 --> 00:00:58,840
I know that's like a high bar it was

21
00:00:58,840 --> 00:01:02,190
really up there but I promise it is so

22
00:01:02,190 --> 00:01:05,530
two things about the slide one you'll

23
00:01:05,530 --> 00:01:09,100
notice that it's gray and it's got very

24
00:01:09,100 --> 00:01:11,700
good grammar right and it's a truth

25
00:01:11,700 --> 00:01:14,619
slides like this will always be facts as

26
00:01:14,619 --> 00:01:17,740
far as I can do so it's like this their

27
00:01:17,740 --> 00:01:20,560
opinions opinions of mine and so they're

28
00:01:20,560 --> 00:01:25,929
almost fact right and then and so for

29
00:01:25,929 --> 00:01:27,490
example software pretty much rocks like

30
00:01:27,490 --> 00:01:28,659
that's an opinion a lot of people hate

31
00:01:28,659 --> 00:01:31,359
software I hate some of my software so

32
00:01:31,359 --> 00:01:32,319
here's another one that this is a

33
00:01:32,319 --> 00:01:35,590
training I have some notes right okay my

34
00:01:35,590 --> 00:01:37,359
notes are one I talk fast so if I talk

35
00:01:37,359 --> 00:01:41,950
too fast just say something boom I will

36
00:01:41,950 --> 00:01:43,240
have time for questions that's an

37
00:01:43,240 --> 00:01:45,310
opinion because I should have started

38
00:01:45,310 --> 00:01:46,960
the timer on my android that I set out

39
00:01:46,960 --> 00:01:48,399
five minutes ago and I didn't announce

40
00:01:48,399 --> 00:01:51,909
too late okay so fact Babel is a build

41
00:01:51,909 --> 00:01:53,770
tool and it will always be a build tool

42
00:01:53,770 --> 00:01:55,959
it wasn't always a build tool but it is

43
00:01:55,959 --> 00:01:57,700
now and people use it was built old who

44
00:01:57,700 --> 00:02:02,350
uses Babel as a build tool cool just

45
00:02:02,350 --> 00:02:03,880
make sure is anybody who uses Babel for

46
00:02:03,880 --> 00:02:05,590
not build tooling yeah that's why

47
00:02:05,590 --> 00:02:09,100
thought okay so it is a build tool but

48
00:02:09,100 --> 00:02:12,370
it's more right like fables assists

49
00:02:12,370 --> 00:02:13,930
Pilar okay so who knows what's this

50
00:02:13,930 --> 00:02:19,360
Pilar is no okay so let's over some

51
00:02:19,360 --> 00:02:22,150
basics okay compiler permit transferred

52
00:02:22,150 --> 00:02:23,590
source another computer you know okay

53
00:02:23,590 --> 00:02:26,200
this is this is not basic but you could

54
00:02:26,200 --> 00:02:27,879
probably google this in well you can

55
00:02:27,879 --> 00:02:28,930
google this and get this information

56
00:02:28,930 --> 00:02:32,049
because this is what I got from boom

57
00:02:32,049 --> 00:02:34,030
transpiler there's another type of

58
00:02:34,030 --> 00:02:36,310
compiler although compiler is a type of

59
00:02:36,310 --> 00:02:38,319
compiler a transpiler is program that

60
00:02:38,319 --> 00:02:39,370
transfers some source and two

61
00:02:39,370 --> 00:02:40,420
chromosomes so one of the first

62
00:02:40,420 --> 00:02:43,269
transplant is that out there not the

63
00:02:43,269 --> 00:02:44,980
first but one of the first I became a

64
00:02:44,980 --> 00:02:46,959
modern mainstream was called unholy and

65
00:02:46,959 --> 00:02:49,989
when it is it turned straight up turned

66
00:02:49,989 --> 00:02:54,790
Ruby jump into Python and it didn't do

67
00:02:54,790 --> 00:02:56,470
it by like reading it had rooted first

68
00:02:56,470 --> 00:02:57,730
of all I've read some parser which is

69
00:02:57,730 --> 00:02:59,500
wild something you don't see in

70
00:02:59,500 --> 00:03:00,849
languages these days they come with

71
00:03:00,849 --> 00:03:04,989
parsers usually they're good but a road

72
00:03:04,989 --> 00:03:07,180
is from parser it was bad and to it

73
00:03:07,180 --> 00:03:09,390
didn't try to do any sort of like

74
00:03:09,390 --> 00:03:12,159
comparative infinitely you didn't try to

75
00:03:12,159 --> 00:03:13,510
be smart if it's all an if condition it

76
00:03:13,510 --> 00:03:14,980
just wrote it if condition on the side

77
00:03:14,980 --> 00:03:17,170
just printed it out you know so like it

78
00:03:17,170 --> 00:03:20,260
was very slow it was it was it was

79
00:03:20,260 --> 00:03:22,329
written by a fellow by the name of why

80
00:03:22,329 --> 00:03:24,040
lucky stiff but um that was one of the

81
00:03:24,040 --> 00:03:27,700
first like modern huh yeah shanky chunky

82
00:03:27,700 --> 00:03:31,060
bacon first modern transpiler so okay

83
00:03:31,060 --> 00:03:33,250
this is Pilar so this is you notice the

84
00:03:33,250 --> 00:03:34,989
color is different opinion because this

85
00:03:34,989 --> 00:03:38,290
is it like a real word so trans right

86
00:03:38,290 --> 00:03:39,549
transpose this poem is a program that

87
00:03:39,549 --> 00:03:41,590
turns source into source which like okay

88
00:03:41,590 --> 00:03:43,450
what does that mean right so first of

89
00:03:43,450 --> 00:03:44,890
all let's learn some Latin trans means

90
00:03:44,890 --> 00:03:49,030
across right like transcontinental this

91
00:03:49,030 --> 00:03:53,799
means same side ok so this what language

92
00:03:53,799 --> 00:03:56,709
is this probably ok yes JavaScript

93
00:03:56,709 --> 00:03:59,650
specifically yes I es6 right so if you

94
00:03:59,650 --> 00:04:01,269
take this code and you put it in a

95
00:04:01,269 --> 00:04:02,980
source file and you run your babel build

96
00:04:02,980 --> 00:04:05,319
tool on it assuming you have some think

97
00:04:05,319 --> 00:04:07,599
of some rules and conditions set up you

98
00:04:07,599 --> 00:04:09,819
will get this out which is also

99
00:04:09,819 --> 00:04:12,340
JavaScript and it means the same exact

100
00:04:12,340 --> 00:04:14,859
thing a hundred percent so like why is

101
00:04:14,859 --> 00:04:16,060
there two things that mean the same

102
00:04:16,060 --> 00:04:18,010
thing and why would you write one the

103
00:04:18,010 --> 00:04:20,049
one way right well a couple of things

104
00:04:20,049 --> 00:04:24,580
one in like in browsers Const can mean

105
00:04:24,580 --> 00:04:26,650
can give you a warning or even in error

106
00:04:26,650 --> 00:04:29,199
in some implementations if you change

107
00:04:29,199 --> 00:04:30,759
the value which is good because you want

108
00:04:30,759 --> 00:04:31,090
to be

109
00:04:31,090 --> 00:04:32,800
that when you set this value don't have

110
00:04:32,800 --> 00:04:34,750
to think maybe what if it changes what

111
00:04:34,750 --> 00:04:35,919
if it's changing on the line well with

112
00:04:35,919 --> 00:04:37,030
comments you can be sure it's not going

113
00:04:37,030 --> 00:04:38,889
to change in fact I prefer a concept of

114
00:04:38,889 --> 00:04:41,110
our almost 100 sent also you get things

115
00:04:41,110 --> 00:04:42,460
like default which is nice you have to

116
00:04:42,460 --> 00:04:45,790
write that low or condition so a cyst

117
00:04:45,790 --> 00:04:49,060
iler is special because it follows this

118
00:04:49,060 --> 00:04:51,729
rule you can go you can break up words

119
00:04:51,729 --> 00:04:53,979
you can destroy people's futures in

120
00:04:53,979 --> 00:04:56,380
terms of what they want for language but

121
00:04:56,380 --> 00:04:57,699
you can't break what people have already

122
00:04:57,699 --> 00:04:59,919
decided all right so when you have

123
00:04:59,919 --> 00:05:02,979
something like Babel and you try to when

124
00:05:02,979 --> 00:05:05,470
you write your sub you something like

125
00:05:05,470 --> 00:05:06,700
payable you won't always be able to

126
00:05:06,700 --> 00:05:08,320
write the oldest JavaScript you can

127
00:05:08,320 --> 00:05:10,570
think of like in terms of syntax that

128
00:05:10,570 --> 00:05:12,820
will always work because they can't

129
00:05:12,820 --> 00:05:14,950
break that right they're not allowed to

130
00:05:14,950 --> 00:05:16,840
it's it's part of the rules so that's

131
00:05:16,840 --> 00:05:18,130
what that's what makes it not a

132
00:05:18,130 --> 00:05:19,810
transpiler it is his hobby it will

133
00:05:19,810 --> 00:05:22,180
always go from JavaScript to JavaScript

134
00:05:22,180 --> 00:05:24,850
okay yeah that's right like I put that

135
00:05:24,850 --> 00:05:28,000
word right so here's a good example of

136
00:05:28,000 --> 00:05:29,830
this I'm gonna mix of these that you

137
00:05:29,830 --> 00:05:31,000
would never write this unless you have

138
00:05:31,000 --> 00:05:33,370
like legacy application and the fact

139
00:05:33,370 --> 00:05:36,250
that's a good value of Babel i think is

140
00:05:36,250 --> 00:05:39,310
we have this two types of doing the same

141
00:05:39,310 --> 00:05:41,590
thing one old school in one new school i

142
00:05:41,590 --> 00:05:43,360
mean i guess and they're the same that

143
00:05:43,360 --> 00:05:44,889
they actually work and babel will just

144
00:05:44,889 --> 00:05:46,660
turn that to this there's nothing

145
00:05:46,660 --> 00:05:49,180
doesn't have to touch it at all right so

146
00:05:49,180 --> 00:05:50,470
that's the rule for cysts pilots and

147
00:05:50,470 --> 00:05:53,530
Babel is this is powder so I want to

148
00:05:53,530 --> 00:05:55,180
pause it the opinion here says powers

149
00:05:55,180 --> 00:05:58,020
they solve who's heard of the lisp curse

150
00:05:58,020 --> 00:06:00,820
come on anybody okay that's fine that's

151
00:06:00,820 --> 00:06:04,240
fine fine so it's an old-school article

152
00:06:04,240 --> 00:06:06,370
um back before they were called blogs

153
00:06:06,370 --> 00:06:08,020
and you can go look you google this

154
00:06:08,020 --> 00:06:10,870
curse you'll get it but basically it's

155
00:06:10,870 --> 00:06:16,240
this right so lisps um and forth they

156
00:06:16,240 --> 00:06:18,070
were easier to modify and forth you

157
00:06:18,070 --> 00:06:19,840
could actually change the comment

158
00:06:19,840 --> 00:06:23,110
character in line and any code after

159
00:06:23,110 --> 00:06:25,150
that would fail if you were using the

160
00:06:25,150 --> 00:06:27,039
old comic character it was cool with

161
00:06:27,039 --> 00:06:28,690
this you could just do that kind of crap

162
00:06:28,690 --> 00:06:30,099
right and you can't do that in

163
00:06:30,099 --> 00:06:33,370
JavaScript until now right so now you

164
00:06:33,370 --> 00:06:34,660
like oh well that's that's terrible i

165
00:06:34,660 --> 00:06:36,070
want to do that and so liz curse

166
00:06:36,070 --> 00:06:40,680
essentially like let's say you wanted to

167
00:06:40,680 --> 00:06:43,840
design a concept of set cassette did not

168
00:06:43,840 --> 00:06:44,470
exist

169
00:06:44,470 --> 00:06:46,030
javascript rates and some especially

170
00:06:46,030 --> 00:06:47,140
Matt like things like math they didn't

171
00:06:47,140 --> 00:06:50,020
exist so you design a version of map

172
00:06:50,020 --> 00:06:52,720
that defaults to undefined when the key

173
00:06:52,720 --> 00:06:55,270
doesn't exist and you define a map where

174
00:06:55,270 --> 00:06:56,860
if the key doesn't exist it raises an

175
00:06:56,860 --> 00:06:58,630
exception and if you try to use each

176
00:06:58,630 --> 00:07:01,360
other's code is broken nothing happens

177
00:07:01,360 --> 00:07:03,670
right who's who's wins last comes in

178
00:07:03,670 --> 00:07:06,430
that's what happened with Lisp so Babel

179
00:07:06,430 --> 00:07:10,690
works Babel saw Babel fixes this problem

180
00:07:10,690 --> 00:07:12,670
because community and JavaScript came

181
00:07:12,670 --> 00:07:15,610
before modify ability right Babel adds

182
00:07:15,610 --> 00:07:18,160
modify ability but we had community

183
00:07:18,160 --> 00:07:20,380
first list doesn't have an NPM fourth

184
00:07:20,380 --> 00:07:22,060
doesn't have a rubygems they just don't

185
00:07:22,060 --> 00:07:24,070
exist because anybody can change

186
00:07:24,070 --> 00:07:26,020
anything so here's a good example right

187
00:07:26,020 --> 00:07:29,140
so this is amia six well it CS 6 plus

188
00:07:29,140 --> 00:07:31,810
right so we have the arrow function

189
00:07:31,810 --> 00:07:34,600
right and we have the export default and

190
00:07:34,600 --> 00:07:37,240
be able just turns it into this which is

191
00:07:37,240 --> 00:07:40,330
like massive write it like a that kind

192
00:07:40,330 --> 00:07:43,210
of sucks but but in like Babel doesn't

193
00:07:43,210 --> 00:07:45,310
care what you write because it's got

194
00:07:45,310 --> 00:07:46,660
some rules on how to turn it into things

195
00:07:46,660 --> 00:07:48,910
that actually work right and it can be

196
00:07:48,910 --> 00:07:51,250
long so it's not just like changing

197
00:07:51,250 --> 00:07:52,990
things around it's actually figuring out

198
00:07:52,990 --> 00:07:55,630
what you wanted and giving you a

199
00:07:55,630 --> 00:07:57,610
reasonable approximation of what you

200
00:07:57,610 --> 00:08:00,760
wanted in something that in a way that

201
00:08:00,760 --> 00:08:06,090
will work on basically anywhere so I

202
00:08:06,090 --> 00:08:08,320
also posit that jess is born feature

203
00:08:08,320 --> 00:08:09,610
without soap on something was up if you

204
00:08:09,610 --> 00:08:10,870
don't have babel you don't have a lot of

205
00:08:10,870 --> 00:08:13,330
stuff without Babel you probably don't

206
00:08:13,330 --> 00:08:15,820
have jsx for a long time who here uses

207
00:08:15,820 --> 00:08:19,660
jsx all the time do you like jsx okay

208
00:08:19,660 --> 00:08:21,280
you know you barely get that you Barrett

209
00:08:21,280 --> 00:08:22,330
don't probably not going to get that

210
00:08:22,330 --> 00:08:25,479
without something like Babel you don't

211
00:08:25,479 --> 00:08:27,580
get cool things like es6 as easily

212
00:08:27,580 --> 00:08:30,720
without papal who remembers CoffeeScript

213
00:08:30,720 --> 00:08:34,510
okay maybe you still use it okay who

214
00:08:34,510 --> 00:08:37,690
remembers iced coffee script okay this

215
00:08:37,690 --> 00:08:38,530
happened the last time I asked that

216
00:08:38,530 --> 00:08:39,849
question and that's like that's

217
00:08:39,849 --> 00:08:41,320
terrifying to me as someone who like

218
00:08:41,320 --> 00:08:44,339
work designs programming languages so

219
00:08:44,339 --> 00:08:46,680
CoffeeScript didn't have asynchronous

220
00:08:46,680 --> 00:08:49,930
functionality and some person out there

221
00:08:49,930 --> 00:08:51,160
was like I really wanted to have

222
00:08:51,160 --> 00:08:52,480
asynchronous functionality in

223
00:08:52,480 --> 00:08:54,070
CoffeeScript owner was like we'll go

224
00:08:54,070 --> 00:08:55,959
build your own coffee script then and so

225
00:08:55,959 --> 00:08:57,850
we did like he made something that was

226
00:08:57,850 --> 00:08:58,810
that was common script but with

227
00:08:58,810 --> 00:09:00,279
asynchronous functionary or like

228
00:09:00,279 --> 00:09:01,690
advanced AI can't remember what it is

229
00:09:01,690 --> 00:09:04,509
that's how bad it is he built entire he

230
00:09:04,509 --> 00:09:06,730
forked coffeescript and added some cool

231
00:09:06,730 --> 00:09:08,139
functionality and no no I don't even

232
00:09:08,139 --> 00:09:10,089
remember and I'm into the stuff and I

233
00:09:10,089 --> 00:09:11,769
remember why like you I think it was

234
00:09:11,769 --> 00:09:13,240
about asynchronous a single weight or

235
00:09:13,240 --> 00:09:15,160
whatever and he's been all the time and

236
00:09:15,160 --> 00:09:16,420
no one members it because no one's

237
00:09:16,420 --> 00:09:17,980
willing to switch their entire stack

238
00:09:17,980 --> 00:09:21,430
over to some other person's you know a

239
00:09:21,430 --> 00:09:24,040
transpiler just to use asynchronous

240
00:09:24,040 --> 00:09:26,470
tools it's just not something you do in

241
00:09:26,470 --> 00:09:30,569
a workplace but Babel you can write so

242
00:09:30,569 --> 00:09:33,220
here's some cool stuff from Babel this

243
00:09:33,220 --> 00:09:34,420
is the practical side part of the

244
00:09:34,420 --> 00:09:37,509
application right here is a but I family

245
00:09:37,509 --> 00:09:39,670
this a couple of days ago and it is like

246
00:09:39,670 --> 00:09:41,860
the weirdest thing I've seen but it's

247
00:09:41,860 --> 00:09:44,199
like this stuff just preface the stuff

248
00:09:44,199 --> 00:09:46,750
I'm showing you is was commonplace back

249
00:09:46,750 --> 00:09:48,699
when you did Lisp you just did this

250
00:09:48,699 --> 00:09:52,149
stuff so this is a mpm package you can

251
00:09:52,149 --> 00:09:54,940
install it in like five seconds well it

252
00:09:54,940 --> 00:09:56,920
has weed you can stall it put into your

253
00:09:56,920 --> 00:09:58,810
Babel setup and you can start doing this

254
00:09:58,810 --> 00:10:01,089
it doesn't you want to switch over you

255
00:10:01,089 --> 00:10:02,740
don't get compile a new version of node

256
00:10:02,740 --> 00:10:05,560
you don't have to clone somebody's fork

257
00:10:05,560 --> 00:10:06,880
that they have maintaining on their off

258
00:10:06,880 --> 00:10:08,949
time which is like it's part of the

259
00:10:08,949 --> 00:10:11,500
thing and it gives you this so these are

260
00:10:11,500 --> 00:10:13,259
this is some JavaScript and comments

261
00:10:13,259 --> 00:10:16,089
anything on the other side with that

262
00:10:16,089 --> 00:10:19,389
symbol that double arrow symbol is an

263
00:10:19,389 --> 00:10:22,959
assertion so when you run your code it

264
00:10:22,959 --> 00:10:26,860
will actually fail on this line with an

265
00:10:26,860 --> 00:10:28,509
assertion error so you can write your

266
00:10:28,509 --> 00:10:31,089
tests like right next to your code right

267
00:10:31,089 --> 00:10:33,790
and this is a subset of a larger set of

268
00:10:33,790 --> 00:10:35,740
label plugins what and other big thing

269
00:10:35,740 --> 00:10:36,970
eyes I don't have slides for this

270
00:10:36,970 --> 00:10:38,709
because it's like it's too hard to come

271
00:10:38,709 --> 00:10:40,660
to contain inside but it allows you to

272
00:10:40,660 --> 00:10:42,459
write commentary and then access that

273
00:10:42,459 --> 00:10:44,319
commentary as an object and your repple

274
00:10:44,319 --> 00:10:46,839
and then interface with that so if you

275
00:10:46,839 --> 00:10:47,949
want to make a web view for your

276
00:10:47,949 --> 00:10:49,360
documentation that's like really fancy

277
00:10:49,360 --> 00:10:51,130
you could or if you want to have tests

278
00:10:51,130 --> 00:10:53,189
that reference to your document is wild

279
00:10:53,189 --> 00:10:55,660
so this is this is like the one of them

280
00:10:55,660 --> 00:10:58,029
here's another so this is actually

281
00:10:58,029 --> 00:11:00,759
inside of Abel's core official packages

282
00:11:00,759 --> 00:11:03,130
so there's Babel plugins out there that

283
00:11:03,130 --> 00:11:06,519
are official and they are in the

284
00:11:06,519 --> 00:11:07,750
repository along with all those stuff

285
00:11:07,750 --> 00:11:11,230
like stage stage 0 or ES 2016 or

286
00:11:11,230 --> 00:11:13,420
act right those plugins that there are

287
00:11:13,420 --> 00:11:15,700
in and that in a piece preset you're

288
00:11:15,700 --> 00:11:17,200
supposed to discover them this is

289
00:11:17,200 --> 00:11:19,780
interesting so this one here's some code

290
00:11:19,780 --> 00:11:21,820
and you write that bit and you run your

291
00:11:21,820 --> 00:11:23,590
Babel and to build and it's throws this

292
00:11:23,590 --> 00:11:26,650
here right that's kind of neat like it's

293
00:11:26,650 --> 00:11:28,180
it's like it's informing it's looking at

294
00:11:28,180 --> 00:11:29,950
your system and saying like hey did you

295
00:11:29,950 --> 00:11:32,020
mean foo are you sure you met bar like

296
00:11:32,020 --> 00:11:34,900
foods only thing they're so but I mean

297
00:11:34,900 --> 00:11:36,490
to be fair this is probably like

298
00:11:36,490 --> 00:11:37,240
something you should be doing on your

299
00:11:37,240 --> 00:11:38,650
linter like there's a there's a there's

300
00:11:38,650 --> 00:11:40,300
an area to figure out we have to figure

301
00:11:40,300 --> 00:11:41,440
out of the next four years like where

302
00:11:41,440 --> 00:11:44,650
does the concern of Babel lie so here's

303
00:11:44,650 --> 00:11:48,100
another one trance this a long NPM

304
00:11:48,100 --> 00:11:49,900
package name and there's a lot of these

305
00:11:49,900 --> 00:11:51,910
out there but just bear with me so it's

306
00:11:51,910 --> 00:11:54,760
your inline environment variables so

307
00:11:54,760 --> 00:11:56,110
let's say you have this code who's

308
00:11:56,110 --> 00:11:57,370
written this like a la people right this

309
00:11:57,370 --> 00:11:59,980
is comment right it turns it into this

310
00:11:59,980 --> 00:12:02,800
which then if you throw uglify JSON it

311
00:12:02,800 --> 00:12:05,140
turns it into this which event also

312
00:12:05,140 --> 00:12:08,050
turns it into this right like this is

313
00:12:08,050 --> 00:12:10,330
yeah i mean like it just just removed a

314
00:12:10,330 --> 00:12:11,500
whole bunch of code and like you don't

315
00:12:11,500 --> 00:12:12,580
have to see that and development or

316
00:12:12,580 --> 00:12:13,780
production cuz like that's not going to

317
00:12:13,780 --> 00:12:15,940
happen true is never that's never going

318
00:12:15,940 --> 00:12:19,570
to else so this is probably an asset

319
00:12:19,570 --> 00:12:21,610
pipeline concerned though right like you

320
00:12:21,610 --> 00:12:23,380
probably don't want your babel do it but

321
00:12:23,380 --> 00:12:28,390
it can it can alright so baby will plug

322
00:12:28,390 --> 00:12:31,590
in future plugs i found today and if

323
00:12:31,590 --> 00:12:34,660
this so you import is enabled from my

324
00:12:34,660 --> 00:12:37,180
features and my features is this is like

325
00:12:37,180 --> 00:12:40,270
in femoral file and it says a if you

326
00:12:40,270 --> 00:12:42,130
have this feature than code and when you

327
00:12:42,130 --> 00:12:43,900
run babel build when you build your

328
00:12:43,900 --> 00:12:46,780
Babel and transpile it or when you run

329
00:12:46,780 --> 00:12:50,320
it it does this like if it's as enabled

330
00:12:50,320 --> 00:12:52,060
or not so you can turn off features in

331
00:12:52,060 --> 00:12:54,850
production and locally for your building

332
00:12:54,850 --> 00:12:56,290
and it becomes a really we interesting

333
00:12:56,290 --> 00:12:57,520
thing where it's like ah you know what i

334
00:12:57,520 --> 00:12:59,590
really don't need to do a be testing in

335
00:12:59,590 --> 00:13:01,990
my tests like if you've ever done any be

336
00:13:01,990 --> 00:13:03,520
testing a website and then written tests

337
00:13:03,520 --> 00:13:06,370
that is a pain because you're like why

338
00:13:06,370 --> 00:13:08,170
is my test failing oh it's because it's

339
00:13:08,170 --> 00:13:10,480
on the other side of the test you know

340
00:13:10,480 --> 00:13:11,710
and now i need to have already tested

341
00:13:11,710 --> 00:13:13,870
like okay if you're in this a/b test if

342
00:13:13,870 --> 00:13:15,610
this house aps then do this and then

343
00:13:15,610 --> 00:13:17,500
it's pain so why don't you just turn it

344
00:13:17,500 --> 00:13:19,990
off you know boom gone during tests you

345
00:13:19,990 --> 00:13:22,000
can do that and of course since it falls

346
00:13:22,000 --> 00:13:24,130
there's nothing else here's another one

347
00:13:24,130 --> 00:13:25,209
i use just

348
00:13:25,209 --> 00:13:27,839
everywhere so who's ever written this

349
00:13:27,839 --> 00:13:31,019
right like this sucks no one wants this

350
00:13:31,019 --> 00:13:34,029
Babel route just let you write this and

351
00:13:34,029 --> 00:13:39,220
it does it right ah practical right let

352
00:13:39,220 --> 00:13:43,629
me turn the brightness up okay so I i

353
00:13:43,629 --> 00:13:45,790
use papal in my projects constantly and

354
00:13:45,790 --> 00:13:48,279
I've seen a lot of people who use papal

355
00:13:48,279 --> 00:13:50,709
in their web applications and they just

356
00:13:50,709 --> 00:13:52,540
kind of like see it as a build tool and

357
00:13:52,540 --> 00:13:54,970
I see it as more right so i'm going to

358
00:13:54,970 --> 00:13:58,059
show you i don't know how much time I

359
00:13:58,059 --> 00:14:03,759
have left okay okay so i'm going to show

360
00:14:03,759 --> 00:14:05,439
you two projects i'm working on right

361
00:14:05,439 --> 00:14:08,019
there side projects and they both use

362
00:14:08,019 --> 00:14:10,420
papal in different contexts so harvester

363
00:14:10,420 --> 00:14:13,470
is a process that runs constantly and

364
00:14:13,470 --> 00:14:17,589
harvests information it's not for the NS

365
00:14:17,589 --> 00:14:20,829
I don't worry and it so it's like an

366
00:14:20,829 --> 00:14:21,879
applet you can think that this is like

367
00:14:21,879 --> 00:14:25,449
your your your regular web application

368
00:14:25,449 --> 00:14:27,100
if you will write like it's not a web

369
00:14:27,100 --> 00:14:28,929
application but you like the patterns in

370
00:14:28,929 --> 00:14:31,660
here are basically the same so first of

371
00:14:31,660 --> 00:14:33,579
all you'll notice that my build script

372
00:14:33,579 --> 00:14:35,589
just Babel builds everything that's not

373
00:14:35,589 --> 00:14:37,389
test and it's in the source directory

374
00:14:37,389 --> 00:14:40,029
and dumps it into transpired source okay

375
00:14:40,029 --> 00:14:44,259
um and then if i want to write run

376
00:14:44,259 --> 00:14:46,959
random scripts I just do this and it

377
00:14:46,959 --> 00:14:48,579
just like pipes the file you just like

378
00:14:48,579 --> 00:14:52,420
hey I do mpm run script fuji s and it

379
00:14:52,420 --> 00:14:54,220
will run that with my babel setting so I

380
00:14:54,220 --> 00:14:55,779
if I just want to run something and they

381
00:14:55,779 --> 00:14:57,069
have all my wash scripts right that's

382
00:14:57,069 --> 00:14:58,059
that's not important that's not part

383
00:14:58,059 --> 00:15:01,839
Babel so that's that's like that's a

384
00:15:01,839 --> 00:15:03,610
tooling that you've got with maple you

385
00:15:03,610 --> 00:15:05,110
can either run something like you would

386
00:15:05,110 --> 00:15:07,299
with no name you fever type node where

387
00:15:07,299 --> 00:15:08,829
we can run something to build it from

388
00:15:08,829 --> 00:15:10,660
file to file right it's actually like

389
00:15:10,660 --> 00:15:13,720
compile it so here are the Babel plugins

390
00:15:13,720 --> 00:15:17,199
i have i've listed it in out know most

391
00:15:17,199 --> 00:15:18,189
of you were probably gonna be using

392
00:15:18,189 --> 00:15:21,399
presets right yeah okay and that's why i

393
00:15:21,399 --> 00:15:23,589
started using as well when I started but

394
00:15:23,589 --> 00:15:25,959
I found like I wanted there were things

395
00:15:25,959 --> 00:15:27,339
in those presets that I didn't need

396
00:15:27,339 --> 00:15:29,259
because it node 6 had just come out and

397
00:15:29,259 --> 00:15:31,449
this is what i use so i just these these

398
00:15:31,449 --> 00:15:33,399
five things exports because that's not a

399
00:15:33,399 --> 00:15:36,100
node 6 yet object spread because that's

400
00:15:36,100 --> 00:15:38,410
not in node 6 yet exponential operator

401
00:15:38,410 --> 00:15:39,130
which I have never you

402
00:15:39,130 --> 00:15:42,700
probably could probably delete and the

403
00:15:42,700 --> 00:15:44,260
commonjs because no one hasn't figured

404
00:15:44,260 --> 00:15:46,750
out what it wants to do for requires yet

405
00:15:46,750 --> 00:15:48,910
well it does but it doesn't know how

406
00:15:48,910 --> 00:15:51,340
it's handled with objects and then d

407
00:15:51,340 --> 00:15:52,300
structuring because it doesn't have that

408
00:15:52,300 --> 00:15:53,860
yet so like all these things like notice

409
00:15:53,860 --> 00:15:57,400
haven't pulled over yet and i'm using

410
00:15:57,400 --> 00:15:59,410
and i'm giving myself the ability use so

411
00:15:59,410 --> 00:16:01,960
this lets me run on node 6 and use these

412
00:16:01,960 --> 00:16:03,670
fancy features that node 6 hasn't come

413
00:16:03,670 --> 00:16:05,620
out with so i don't have to wait to use

414
00:16:05,620 --> 00:16:10,810
cool features right so and i think that

415
00:16:10,810 --> 00:16:12,130
yeah so that's this is the only plugin

416
00:16:12,130 --> 00:16:13,330
so this is a web application it's all

417
00:16:13,330 --> 00:16:14,770
the dev dependency so it's not in

418
00:16:14,770 --> 00:16:16,900
production right so you build your thing

419
00:16:16,900 --> 00:16:19,300
and you got this directory this trent

420
00:16:19,300 --> 00:16:25,760
transpile is and so we'll look at it

421
00:16:25,770 --> 00:16:29,050
oops okay so these are the files it just

422
00:16:29,050 --> 00:16:30,820
builds them that's all we can actually

423
00:16:30,820 --> 00:16:35,290
look at them let's look at one source as

424
00:16:35,290 --> 00:16:38,670
credential prayer that's a good one

425
00:16:38,670 --> 00:16:41,080
those of it this is what pops out you

426
00:16:41,080 --> 00:16:43,450
know I'm just gonna quit page in then so

427
00:16:43,450 --> 00:16:44,890
first what's the use strict up there

428
00:16:44,890 --> 00:16:46,300
because like I guess that's the thing in

429
00:16:46,300 --> 00:16:47,950
JavaScript I don't know I was like I've

430
00:16:47,950 --> 00:16:49,300
never had to deal with it cuz Babel does

431
00:16:49,300 --> 00:16:51,340
it for me the parrot quote went out i

432
00:16:51,340 --> 00:16:53,440
started doing node like six months ago

433
00:16:53,440 --> 00:16:55,240
and like i've never had to think about

434
00:16:55,240 --> 00:16:56,860
you strict because i use Babel like

435
00:16:56,860 --> 00:16:59,290
that's cool right only as I feel like

436
00:16:59,290 --> 00:17:01,000
it's cool there's a whole generation of

437
00:17:01,000 --> 00:17:03,130
mistakes that I can just ignore um

438
00:17:03,130 --> 00:17:05,380
probably to my detriment they're

439
00:17:05,380 --> 00:17:06,370
probably gonna be like something later

440
00:17:06,370 --> 00:17:07,660
in oh my god what is this and it's like

441
00:17:07,660 --> 00:17:10,959
oh people hid it from you i did some es6

442
00:17:10,959 --> 00:17:13,150
stuff and then some export stuff and

443
00:17:13,150 --> 00:17:14,829
then it does ram de like this is the

444
00:17:14,829 --> 00:17:16,660
file it outputs just keep comments for

445
00:17:16,660 --> 00:17:18,430
some reason maybe i should give her

446
00:17:18,430 --> 00:17:20,020
those who knows point is it does that

447
00:17:20,020 --> 00:17:28,180
and here's the actual file oops so

448
00:17:28,180 --> 00:17:29,290
here's the actual file it's right there

449
00:17:29,290 --> 00:17:31,150
so I just like import zip program to

450
00:17:31,150 --> 00:17:33,990
import something from a relative file Oh

451
00:17:33,990 --> 00:17:37,240
interrupt acquire keep ok and then so

452
00:17:37,240 --> 00:17:41,260
I'm sorry yeah Jay it's good point thank

453
00:17:41,260 --> 00:17:44,650
you very much most of all I'm not doing

454
00:17:44,650 --> 00:17:45,820
anything special in the file the file

455
00:17:45,820 --> 00:17:47,350
does think my file doesn't care about

456
00:17:47,350 --> 00:17:49,240
where it's going because maples handling

457
00:17:49,240 --> 00:17:50,860
that so it just creates these files and

458
00:17:50,860 --> 00:17:52,360
it that's all it does and so now I've

459
00:17:52,360 --> 00:17:52,690
got

460
00:17:52,690 --> 00:17:54,730
so this is your web application right

461
00:17:54,730 --> 00:17:56,889
you'll pull it up you push it up it'll

462
00:17:56,889 --> 00:17:59,200
build it'll use the transport directory

463
00:17:59,200 --> 00:18:01,960
and then you're done this is an NPM

464
00:18:01,960 --> 00:18:04,389
package and actually you know what I'm

465
00:18:04,389 --> 00:18:06,730
going to just like quickly switch to

466
00:18:06,730 --> 00:18:07,750
another immigrant package because I

467
00:18:07,750 --> 00:18:08,830
don't think this is actually published

468
00:18:08,830 --> 00:18:12,059
so I have like a couple of published uh

469
00:18:12,059 --> 00:18:18,700
they're not here ok so here is Christ I

470
00:18:18,700 --> 00:18:21,190
should not done that how's that that was

471
00:18:21,190 --> 00:18:26,830
a mistake no ba Jules ok so here is a

472
00:18:26,830 --> 00:18:28,750
package i push it's called SQL watch and

473
00:18:28,750 --> 00:18:29,860
stir that all does it just watch your

474
00:18:29,860 --> 00:18:33,940
SQL files so here so there's two things

475
00:18:33,940 --> 00:18:36,519
to note here right whenever you push up

476
00:18:36,519 --> 00:18:39,879
to NPM who is publish a package ok if

477
00:18:39,879 --> 00:18:41,980
you ever like I had to commit your

478
00:18:41,980 --> 00:18:44,230
distribution directory and then push

479
00:18:44,230 --> 00:18:45,940
that up to mpm and it's all sucks cuz

480
00:18:45,940 --> 00:18:47,169
it's compiled company you don't have to

481
00:18:47,169 --> 00:18:49,000
do that that's that's not something you

482
00:18:49,000 --> 00:18:52,059
have to do so i'll show you how why so

483
00:18:52,059 --> 00:18:54,519
right here is the important part i

484
00:18:54,519 --> 00:18:56,440
delete the transvaal directory i make it

485
00:18:56,440 --> 00:18:58,059
again because there's no RM make der

486
00:18:58,059 --> 00:19:02,159
sadly when I just compile it and then

487
00:19:02,159 --> 00:19:04,120
that that's it that's the entire thing

488
00:19:04,120 --> 00:19:05,830
of that right so that Paula to transpile

489
00:19:05,830 --> 00:19:08,519
directory and then in might get ignore

490
00:19:08,519 --> 00:19:10,659
ignore the trans file directory so I

491
00:19:10,659 --> 00:19:13,059
never commit my generated code I suggest

492
00:19:13,059 --> 00:19:14,590
that's a pattern you should take on

493
00:19:14,590 --> 00:19:16,539
don't commit generated code you can

494
00:19:16,539 --> 00:19:18,070
always make it again you don't need to

495
00:19:18,070 --> 00:19:23,769
keep it that's hoarding so then an NPM

496
00:19:23,769 --> 00:19:25,509
ignore just as the same thing so NPM

497
00:19:25,509 --> 00:19:27,850
ignore copies from your get ignore but

498
00:19:27,850 --> 00:19:29,139
you just so you just copy of your get

499
00:19:29,139 --> 00:19:30,820
ignore and it admit the trends mouth so

500
00:19:30,820 --> 00:19:32,710
that transpile goes to NPM people can

501
00:19:32,710 --> 00:19:34,450
download it now they have their or

502
00:19:34,450 --> 00:19:36,519
source transp awesome horse and the raw

503
00:19:36,519 --> 00:19:38,279
source so here's this is just this

504
00:19:38,279 --> 00:19:40,840
that's all okay so that's like that's

505
00:19:40,840 --> 00:19:43,269
just that's just Babel and for those two

506
00:19:43,269 --> 00:19:46,000
projects it's the same like if I do a

507
00:19:46,000 --> 00:19:50,230
trance pal soch source there's a father

508
00:19:50,230 --> 00:19:52,990
and it's just this big file that I don't

509
00:19:52,990 --> 00:19:56,320
care about so now for like what is what

510
00:19:56,320 --> 00:19:58,840
is a front and project look at him so am

511
00:19:58,840 --> 00:20:01,029
I so going on time where he's gone okay

512
00:20:01,029 --> 00:20:05,570
uh okay so

513
00:20:05,570 --> 00:20:08,810
oh look at the here we go so this is a

514
00:20:08,810 --> 00:20:10,430
front project an internal project I'm

515
00:20:10,430 --> 00:20:11,690
working on and it's just like a stat

516
00:20:11,690 --> 00:20:14,810
screen and this is the nightmare that is

517
00:20:14,810 --> 00:20:16,130
the Babel here so this is like where

518
00:20:16,130 --> 00:20:17,660
baby look starts to break apart right

519
00:20:17,660 --> 00:20:19,520
for browsers it's like that's like the

520
00:20:19,520 --> 00:20:20,990
packages and that's actually thin down

521
00:20:20,990 --> 00:20:23,690
it used to be twice as long because I

522
00:20:23,690 --> 00:20:25,580
was like experiment I was like oh baby

523
00:20:25,580 --> 00:20:27,590
was cool I'll do everything and I just

524
00:20:27,590 --> 00:20:29,180
like put everything in there and there

525
00:20:29,180 --> 00:20:30,320
was actually one point where I had one

526
00:20:30,320 --> 00:20:32,750
that was like oh its entire job was to

527
00:20:32,750 --> 00:20:34,520
okay so you know how you do I don't do

528
00:20:34,520 --> 00:20:37,520
this but you know you do VAR a comma B

529
00:20:37,520 --> 00:20:39,830
equals and then 1 comma 2 where you'd

530
00:20:39,830 --> 00:20:41,240
like group your variables that I never

531
00:20:41,240 --> 00:20:43,010
liked found that interesting but there's

532
00:20:43,010 --> 00:20:44,450
actually a plugin that does that for you

533
00:20:44,450 --> 00:20:46,280
a Babel plugin that does that for you

534
00:20:46,280 --> 00:20:47,570
except it breaks when there's another

535
00:20:47,570 --> 00:20:49,970
ordering plugin and it just shows random

536
00:20:49,970 --> 00:20:52,130
code in between and turns out

537
00:20:52,130 --> 00:20:54,260
javascripts not cool with that so it is

538
00:20:54,260 --> 00:20:55,730
like freaks out and you get this error

539
00:20:55,730 --> 00:20:57,320
message is like looks you try to assign

540
00:20:57,320 --> 00:20:59,690
like an entire chunk of code to a

541
00:20:59,690 --> 00:21:01,550
variable but it doesn't look right

542
00:21:01,550 --> 00:21:02,990
anyway so like you can get dangerous

543
00:21:02,990 --> 00:21:05,660
with these I mean it's all generated

544
00:21:05,660 --> 00:21:07,610
content so like it doesn't matter you

545
00:21:07,610 --> 00:21:08,900
just like regenerate it without the

546
00:21:08,900 --> 00:21:10,640
thing that you messed up but you tell

547
00:21:10,640 --> 00:21:12,560
you can get too bad space like all this

548
00:21:12,560 --> 00:21:14,090
is like half of this is only because the

549
00:21:14,090 --> 00:21:15,920
browser's don't have these things all

550
00:21:15,920 --> 00:21:17,390
right I think this is actually what i

551
00:21:17,390 --> 00:21:20,270
consider greenfield browser babel like

552
00:21:20,270 --> 00:21:23,270
this is like stuff greenfield doesn't

553
00:21:23,270 --> 00:21:26,420
have and there's other stuff okay so i

554
00:21:26,420 --> 00:21:29,630
have cost time for questions but feel

555
00:21:29,630 --> 00:21:51,169
free to hit me with questions you

556
00:21:51,179 --> 00:21:54,490
yep so okay that's a good question so

557
00:21:54,490 --> 00:21:56,650
unlike the previous speaker and there's

558
00:21:56,650 --> 00:22:01,270
no like right way to do this I I see if

559
00:22:01,270 --> 00:22:04,480
I can't find it so I keep my test in the

560
00:22:04,480 --> 00:22:08,580
same file as the code that they're in so

561
00:22:08,580 --> 00:22:11,710
not saying file same directory so here I

562
00:22:11,710 --> 00:22:15,220
have source and Loeb here's a test so

563
00:22:15,220 --> 00:22:16,720
here's hi ban term it was an index file

564
00:22:16,720 --> 00:22:19,510
which is this thingy and the test itself

565
00:22:19,510 --> 00:22:21,789
which is mocha chai and mocha chai is

566
00:22:21,789 --> 00:22:24,610
isn't is in es6 so like I just run that

567
00:22:24,610 --> 00:22:30,070
but um mocha has a specific thing a test

568
00:22:30,070 --> 00:22:32,190
here we go so you can list all the

569
00:22:32,190 --> 00:22:34,720
compilers that you want it to like run

570
00:22:34,720 --> 00:22:39,100
through that's a dozen um and so like

571
00:22:39,100 --> 00:22:40,899
there I found like I guess your question

572
00:22:40,899 --> 00:22:46,559
is that what's overhead like okay oh

573
00:22:46,559 --> 00:22:51,370
yeah so there's almost none like my here

574
00:22:51,370 --> 00:22:56,080
I'll show you that's that's how much

575
00:22:56,080 --> 00:22:58,450
time I have to wait like that's it and

576
00:22:58,450 --> 00:22:59,649
then I don't even believe that for tests

577
00:22:59,649 --> 00:23:01,120
because it's doing it mm rains which is

578
00:23:01,120 --> 00:23:02,740
even faster like half the cost of this

579
00:23:02,740 --> 00:23:06,460
is writing to file secondly for tests

580
00:23:06,460 --> 00:23:08,230
like there's almost no performance

581
00:23:08,230 --> 00:23:09,850
overhead I've noticed if they are it's a

582
00:23:09,850 --> 00:23:12,460
mistake in the plug-in you're using like

583
00:23:12,460 --> 00:23:14,529
most of them are very especially the

584
00:23:14,529 --> 00:23:16,360
Babel specific ones are highly optimized

585
00:23:16,360 --> 00:23:19,390
to for debugging it sucks like hard like

586
00:23:19,390 --> 00:23:20,740
node inspector didn't work for a long

587
00:23:20,740 --> 00:23:22,419
time there's an I can't tell you all the

588
00:23:22,419 --> 00:23:25,330
fairy tales but it sucked hard node

589
00:23:25,330 --> 00:23:27,909
inspector just didn't work um trans

590
00:23:27,909 --> 00:23:29,620
power plug I wish I could even show you

591
00:23:29,620 --> 00:23:30,850
when you like have a function that

592
00:23:30,850 --> 00:23:32,169
doesn't work especially a narrow

593
00:23:32,169 --> 00:23:34,690
function it's just like man it's it's

594
00:23:34,690 --> 00:23:37,000
somewhere um and you just have to deal

595
00:23:37,000 --> 00:23:38,559
with that it's like like the path to is

596
00:23:38,559 --> 00:23:41,049
like inside some virtual memory space

597
00:23:41,049 --> 00:23:44,289
and it's like oh okay great what one

598
00:23:44,289 --> 00:23:46,029
thing I've learned to combat is don't

599
00:23:46,029 --> 00:23:47,770
use arrow functions I know their fancy

600
00:23:47,770 --> 00:23:49,720
use them for like small things but like

601
00:23:49,720 --> 00:23:51,940
I used to do I used to use error

602
00:23:51,940 --> 00:23:54,039
functions everywhere and it was a it was

603
00:23:54,039 --> 00:23:56,250
a nightmare and you'll notice it like

604
00:23:56,250 --> 00:23:58,650
I could I would have earlier in my notes

605
00:23:58,650 --> 00:23:59,610
career I would have made that narrow

606
00:23:59,610 --> 00:24:01,470
function one hundred percent and now i

607
00:24:01,470 --> 00:24:04,230
don't and i was like oh you know like it

608
00:24:04,230 --> 00:24:05,520
doesn't matter because the file name is

609
00:24:05,520 --> 00:24:07,560
the name of the thing and it turns out

610
00:24:07,560 --> 00:24:09,090
that sucks in debugging because it just

611
00:24:09,090 --> 00:24:11,820
like it has no name sometimes and then

612
00:24:11,820 --> 00:24:14,730
even when it does it's like f1 and you

613
00:24:14,730 --> 00:24:16,890
just don't know where that's at um so

614
00:24:16,890 --> 00:24:19,470
yes debugging sucks it's still better

615
00:24:19,470 --> 00:24:21,720
than what it was because i feel like i

616
00:24:21,720 --> 00:24:23,610
have like this is the good language me

617
00:24:23,610 --> 00:24:36,110
other questions you that's where it is

618
00:24:36,110 --> 00:24:41,670
yes you know so i tried to avoid plugins

619
00:24:41,670 --> 00:24:43,380
that require extensive configuration

620
00:24:43,380 --> 00:24:44,790
that said there are some really cool

621
00:24:44,790 --> 00:24:46,320
ones like one that like gives you

622
00:24:46,320 --> 00:24:48,330
shortcuts to paths and you have to map

623
00:24:48,330 --> 00:24:50,640
it in your RC one thing i found the

624
00:24:50,640 --> 00:24:52,230
problem is there's just no way easy way

625
00:24:52,230 --> 00:24:53,820
to share this this type of file like

626
00:24:53,820 --> 00:24:55,920
this won't work in another node project

627
00:24:55,920 --> 00:24:57,120
because maybe it's for a browser and

628
00:24:57,120 --> 00:24:58,890
it's not meeting enough and that the

629
00:24:58,890 --> 00:25:00,300
only one option you have is to make your

630
00:25:00,300 --> 00:25:02,040
own preset but now you just created work

631
00:25:02,040 --> 00:25:04,200
for yourself right it's like honestly i

632
00:25:04,200 --> 00:25:05,700
found an easier time just copying and

633
00:25:05,700 --> 00:25:08,250
pasting and then like oh it's so yeah

634
00:25:08,250 --> 00:25:10,860
it's a pain plus like you for every one

635
00:25:10,860 --> 00:25:13,080
of these you also have to have an so

636
00:25:13,080 --> 00:25:14,640
there's package.json like and then

637
00:25:14,640 --> 00:25:16,050
package ACLU into list as a dependency

638
00:25:16,050 --> 00:25:17,280
so that can be fun to keep a track of

639
00:25:17,280 --> 00:25:19,560
not so like because maybe like you

640
00:25:19,560 --> 00:25:20,850
remove one from your RC but you forget

641
00:25:20,850 --> 00:25:22,050
to move from your installing it's just

642
00:25:22,050 --> 00:25:27,210
there so yeah no no no it's it's it's I

643
00:25:27,210 --> 00:25:28,530
try to keep that as simple as possible

644
00:25:28,530 --> 00:25:31,230
because I went wild and it sucked any

645
00:25:31,230 --> 00:25:36,870
other questions yes so yeah actually at

646
00:25:36,870 --> 00:25:38,550
my work which is Lauren wolf we're

647
00:25:38,550 --> 00:25:41,820
hiring please talk to me we we have a

648
00:25:41,820 --> 00:25:44,010
reactive Redux front end that's like

649
00:25:44,010 --> 00:25:45,330
heavily stable to a rails application

650
00:25:45,330 --> 00:25:50,370
and we use web pack and um I mean web

651
00:25:50,370 --> 00:25:53,250
pack is a build tool with a lot of lot

652
00:25:53,250 --> 00:25:56,790
of functionality Babel is way more and

653
00:25:56,790 --> 00:25:58,020
there's a reason like if you notice like

654
00:25:58,020 --> 00:26:00,570
react native is using fable and not

655
00:26:00,570 --> 00:26:02,010
because web pack is it popular it's

656
00:26:02,010 --> 00:26:04,440
because like they will let you just

657
00:26:04,440 --> 00:26:09,480
really crazies off but

658
00:26:09,480 --> 00:26:10,740
web packs is not going to give you this

659
00:26:10,740 --> 00:26:12,270
functionality does cool things with the

660
00:26:12,270 --> 00:26:14,250
loaders like that was really neat I felt

661
00:26:14,250 --> 00:26:15,330
you can do some dangerous things like

662
00:26:15,330 --> 00:26:17,940
I've seen someone install webpack JSON

663
00:26:17,940 --> 00:26:20,070
loader and then like time zone data and

664
00:26:20,070 --> 00:26:22,679
then just app goes because it's just

665
00:26:22,679 --> 00:26:23,970
like a memory it's got all this JSON

666
00:26:23,970 --> 00:26:34,530
data any other questions no no nope it's

667
00:26:34,530 --> 00:26:37,799
just it's a one to one although you can

668
00:26:37,799 --> 00:26:40,320
make it do a single file it's a one to

669
00:26:40,320 --> 00:26:43,020
one thing your your job in fact the

670
00:26:43,020 --> 00:26:45,000
browser one does the browser plugin

671
00:26:45,000 --> 00:26:47,370
stuff does but no it's like it's just

672
00:26:47,370 --> 00:26:48,960
turning a file of JavaScript into

673
00:26:48,960 --> 00:26:50,640
another file of JavaScript with the

674
00:26:50,640 --> 00:26:52,380
context of the asda net now you can do

675
00:26:52,380 --> 00:26:56,790
broader like say hey do in like you're

676
00:26:56,790 --> 00:26:58,590
in Babylon which is the parsers like do

677
00:26:58,590 --> 00:27:00,059
this if you see something else in

678
00:27:00,059 --> 00:27:03,299
another ASC tree but it's best to just

679
00:27:03,299 --> 00:27:04,559
like take what you've got and turn it

680
00:27:04,559 --> 00:27:16,419
into something else

681
00:27:16,429 --> 00:27:20,380
you

682
00:27:20,390 --> 00:27:23,630
my name is Sarah rush I am Sarah rush on

683
00:27:23,630 --> 00:27:25,940
Twitter and Sarah forward and backwards

684
00:27:25,940 --> 00:27:28,340
on github I am senior front-end

685
00:27:28,340 --> 00:27:30,860
developer at purebred breeders and if

686
00:27:30,860 --> 00:27:32,570
you are looking for an adorable purebred

687
00:27:32,570 --> 00:27:35,420
puppy we can help you find one i'm also

688
00:27:35,420 --> 00:27:39,870
really into knitting and comic books a

689
00:27:39,880 --> 00:27:43,490
little back story i worked at an ad

690
00:27:43,490 --> 00:27:47,270
agency for six years it was my first job

691
00:27:47,270 --> 00:27:50,240
out of school i launched somewhere

