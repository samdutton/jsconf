1
00:00:03,529 --> 00:00:06,569

hello everyone it's really packed in

2
00:00:06,569 --> 00:00:09,809
here thank you all for coming as when I

3
00:00:09,809 --> 00:00:12,360
saw I said my name is milena I am from

4
00:00:12,360 --> 00:00:15,389
Switzerland and I'm a game designer and

5
00:00:15,389 --> 00:00:18,150
currently a full-stack developer at art

6
00:00:18,150 --> 00:00:21,510
illogic we are working on a toolkit in

7
00:00:21,510 --> 00:00:25,019
JavaScript to provide 3d models for

8
00:00:25,019 --> 00:00:31,170
interior spaces and also api's for

9
00:00:31,170 --> 00:00:34,200
spatial analytics so what we do is we

10
00:00:34,200 --> 00:00:36,420
want to make 3d models accessible for

11
00:00:36,420 --> 00:00:38,940
every web developer that would like to

12
00:00:38,940 --> 00:00:43,500
integrate this in his daily work as I

13
00:00:43,500 --> 00:00:45,510
studied game design I'm really excited

14
00:00:45,510 --> 00:00:48,629
about games you might see there I love

15
00:00:48,629 --> 00:00:50,760
to play games I love to collect retro

16
00:00:50,760 --> 00:00:52,770
games and I also love to make games

17
00:00:52,770 --> 00:00:56,719
which usually includes working in 3d I

18
00:00:56,719 --> 00:00:59,670
also really love travelling as I see it

19
00:00:59,670 --> 00:01:02,309
as a resource for a lot of inspiration

20
00:01:02,309 --> 00:01:04,890
especially for storytelling and finding

21
00:01:04,890 --> 00:01:08,220
new ways of designing and I also love

22
00:01:08,220 --> 00:01:10,290
creative things and music and a lot of

23
00:01:10,290 --> 00:01:12,330
other things especially Iceland I've

24
00:01:12,330 --> 00:01:14,880
been here two times already for a long

25
00:01:14,880 --> 00:01:16,140
period of time

26
00:01:16,140 --> 00:01:21,000
I have not seen anything so you

27
00:01:21,000 --> 00:01:24,030
definitely have to come back why should

28
00:01:24,030 --> 00:01:26,400
you as a web developer or JavaScript

29
00:01:26,400 --> 00:01:28,740
developer be interested in doing 3d on

30
00:01:28,740 --> 00:01:32,970
the web as we might already know most of

31
00:01:32,970 --> 00:01:36,270
you guys sorry folks as might everybody

32
00:01:36,270 --> 00:01:41,159
know that that VR is coming and 3d on

33
00:01:41,159 --> 00:01:43,439
the web is very accessible at the moment

34
00:01:43,439 --> 00:01:46,500
and we're also challenging browsers like

35
00:01:46,500 --> 00:01:51,350
show Eve was explaining before to

36
00:01:51,350 --> 00:01:55,110
actually support 3d on the web there is

37
00:01:55,110 --> 00:01:56,969
lots of things you can do to enhance

38
00:01:56,969 --> 00:01:59,430
your product for example this is a

39
00:01:59,430 --> 00:02:02,579
screenshot from what we are doing we are

40
00:02:02,579 --> 00:02:05,460
having semantic 3d models which we can

41
00:02:05,460 --> 00:02:07,409
then analyze with machine learning for

42
00:02:07,409 --> 00:02:11,220
spatial data and we can actually also

43
00:02:11,220 --> 00:02:13,260
use machine learning to

44
00:02:13,260 --> 00:02:15,540
propose you how you should furnish your

45
00:02:15,540 --> 00:02:18,569
apartment which is pretty cool so you

46
00:02:18,569 --> 00:02:22,019
can see your new house already before

47
00:02:22,019 --> 00:02:25,349
it's actually being built or you can

48
00:02:25,349 --> 00:02:28,019
make a really cool small games on your

49
00:02:28,019 --> 00:02:30,569
browser on your website integrated it

50
00:02:30,569 --> 00:02:35,000
with all the native web environment

51
00:02:35,000 --> 00:02:38,670
things that you have and you can make

52
00:02:38,670 --> 00:02:40,440
them work with each other which is

53
00:02:40,440 --> 00:02:43,890
really cool you can also use it to

54
00:02:43,890 --> 00:02:49,739
enhance your infographics or to make

55
00:02:49,739 --> 00:02:53,190
your data more readable with enhancing

56
00:02:53,190 --> 00:02:55,650
it with the third dimension so you can

57
00:02:55,650 --> 00:02:58,950
also use animation time and the third

58
00:02:58,950 --> 00:03:01,200
dimension to show something you would

59
00:03:01,200 --> 00:03:04,230
like to do with your data I think this

60
00:03:04,230 --> 00:03:06,480
is pretty interesting and you should

61
00:03:06,480 --> 00:03:10,040
definitely think about how to use it

62
00:03:10,040 --> 00:03:13,260
most developers that would like to start

63
00:03:13,260 --> 00:03:15,959
with especially web VR have been coming

64
00:03:15,959 --> 00:03:19,530
to me and asked me how do I get started

65
00:03:19,530 --> 00:03:23,700
with 3d why is it that it's so hard to

66
00:03:23,700 --> 00:03:26,310
get started for these people and this is

67
00:03:26,310 --> 00:03:28,079
what I would like to talk to you about

68
00:03:28,079 --> 00:03:30,690
today I would really love that you come

69
00:03:30,690 --> 00:03:32,250
out of this talk and you have this

70
00:03:32,250 --> 00:03:34,650
little toolbox with things you have

71
00:03:34,650 --> 00:03:36,599
heard before and you feel more motivated

72
00:03:36,599 --> 00:03:40,620
to start trying it because at first you

73
00:03:40,620 --> 00:03:43,319
will be overwhelmed by all the new

74
00:03:43,319 --> 00:03:45,959
terminologies you're gonna encounter

75
00:03:45,959 --> 00:03:49,590
not only have you have new things to

76
00:03:49,590 --> 00:03:52,799
learn but you're also gonna be a movie

77
00:03:52,799 --> 00:03:54,000
screen designer

78
00:03:54,000 --> 00:03:56,879
you're gonna be a narrator you're gonna

79
00:03:56,879 --> 00:03:59,609
have to learn how to do UX in 3d you're

80
00:03:59,609 --> 00:04:01,590
gonna have to learn about 3d modeling

81
00:04:01,590 --> 00:04:04,859
how to light a scene properly etc etc

82
00:04:04,859 --> 00:04:09,389
that's a lot of things to learn I would

83
00:04:09,389 --> 00:04:11,220
like to talk to you first about the

84
00:04:11,220 --> 00:04:15,720
physics of light so here you see it's

85
00:04:15,720 --> 00:04:17,789
very simple scene we have this little

86
00:04:17,789 --> 00:04:22,740
apartment it works okay and we have we

87
00:04:22,740 --> 00:04:24,960
see a computer or standing on a desk we

88
00:04:24,960 --> 00:04:26,280
have a chair we

89
00:04:26,280 --> 00:04:28,950
a window and outside we have the Sun

90
00:04:28,950 --> 00:04:32,490
which is primarily the source of light

91
00:04:32,490 --> 00:04:35,310
which makes us see everything but how

92
00:04:35,310 --> 00:04:38,850
does it actually work so every light

93
00:04:38,850 --> 00:04:40,889
source for now we're talking about the

94
00:04:40,889 --> 00:04:44,100
Sun is emitting race of electromagnetic

95
00:04:44,100 --> 00:04:49,889
waves as soon as these rays are hitting

96
00:04:49,889 --> 00:04:53,010
an object they are going to interact

97
00:04:53,010 --> 00:04:57,330
with that object so either the object is

98
00:04:57,330 --> 00:05:00,120
absorbing all the light in that case a

99
00:05:00,120 --> 00:05:03,750
lot of energy is being produced or parts

100
00:05:03,750 --> 00:05:05,669
of the ray of the Sun are gonna be

101
00:05:05,669 --> 00:05:09,630
bouncing off and reflecting on different

102
00:05:09,630 --> 00:05:12,720
surfaces until that light energy is used

103
00:05:12,720 --> 00:05:17,160
up I already said that the lecture

104
00:05:17,160 --> 00:05:19,620
magnetic waves consisting of different

105
00:05:19,620 --> 00:05:21,419
frequencies so that means different

106
00:05:21,419 --> 00:05:25,080
frequencies are different colors if one

107
00:05:25,080 --> 00:05:27,600
frequency is absorbed the other of two

108
00:05:27,600 --> 00:05:30,450
frequencies are going to hit our eye the

109
00:05:30,450 --> 00:05:32,640
retina of our eye therefore creating

110
00:05:32,640 --> 00:05:39,640
this color in our eyes and we can see it

111
00:05:39,650 --> 00:05:41,760
different materials react very

112
00:05:41,760 --> 00:05:44,430
differently which I'm going to talk

113
00:05:44,430 --> 00:05:46,860
about the differences afterwards but

114
00:05:46,860 --> 00:05:49,020
there is three major things as I said

115
00:05:49,020 --> 00:05:51,720
already its absorption reflection and

116
00:05:51,720 --> 00:05:55,350
transmission of light we could say this

117
00:05:55,350 --> 00:05:58,310
here a little bit more graphically

118
00:05:58,310 --> 00:06:02,010
imagine you have a perfect mirror which

119
00:06:02,010 --> 00:06:04,860
is even it's not possible even if we

120
00:06:04,860 --> 00:06:07,530
polish your surface very well you're

121
00:06:07,530 --> 00:06:08,970
never going to have it but theoretically

122
00:06:08,970 --> 00:06:12,720
a perfect mirror will reflect all the

123
00:06:12,720 --> 00:06:17,240
light rays uniformly this we call

124
00:06:17,240 --> 00:06:21,060
specular reflection then we have diffuse

125
00:06:21,060 --> 00:06:25,770
material like cloth and like wood and

126
00:06:25,770 --> 00:06:27,990
other things that are not so much

127
00:06:27,990 --> 00:06:31,830
reflective so it's gonna take the race

128
00:06:31,830 --> 00:06:34,830
and bounce them back in a very chaotic

129
00:06:34,830 --> 00:06:40,050
way and you have propagated light so

130
00:06:40,050 --> 00:06:43,050
if you have glass or water the light is

131
00:06:43,050 --> 00:06:45,449
not only gonna reflect it's also gonna

132
00:06:45,449 --> 00:06:50,220
transmit through the solid creating

133
00:06:50,220 --> 00:06:54,690
these really cool effects so with this

134
00:06:54,690 --> 00:06:56,159
is of course not everything that defines

135
00:06:56,159 --> 00:06:58,740
a material but as we can see in this

136
00:06:58,740 --> 00:07:03,030
illustration these three components make

137
00:07:03,030 --> 00:07:06,800
a lot of our real-life materials and

138
00:07:06,800 --> 00:07:10,699
it's never just one component that is

139
00:07:10,699 --> 00:07:15,479
there in one material for example if you

140
00:07:15,479 --> 00:07:18,750
imagine about if you imagine you have a

141
00:07:18,750 --> 00:07:22,259
wooden floor that is not polished the

142
00:07:22,259 --> 00:07:24,030
the rays of light are going to bounce

143
00:07:24,030 --> 00:07:26,819
back chaotically but if you then put a

144
00:07:26,819 --> 00:07:30,000
polish or finish on it's going to be

145
00:07:30,000 --> 00:07:32,419
very shiny from specific angles and

146
00:07:32,419 --> 00:07:34,710
that's what I really want you to think

147
00:07:34,710 --> 00:07:36,449
about when he gets started with 3d

148
00:07:36,449 --> 00:07:38,430
because that's what a lot of people get

149
00:07:38,430 --> 00:07:41,250
wrong or just don't think about because

150
00:07:41,250 --> 00:07:45,630
why would you so how do we now translate

151
00:07:45,630 --> 00:07:50,159
this into computer graphics I would like

152
00:07:50,159 --> 00:07:54,599
to just go back to a few centuries back

153
00:07:54,599 --> 00:07:57,330
where the first cameras were appearing

154
00:07:57,330 --> 00:08:01,110
and these are called pinhole cameras so

155
00:08:01,110 --> 00:08:03,120
you have a light-sensitive film on the

156
00:08:03,120 --> 00:08:06,840
back of a box with a little hole inside

157
00:08:06,840 --> 00:08:12,090
and only one ray of light per angle is

158
00:08:12,090 --> 00:08:14,210
allowed to pass through that hole

159
00:08:14,210 --> 00:08:17,639
creating then the color on that spot of

160
00:08:17,639 --> 00:08:24,150
the of the film and we are also using

161
00:08:24,150 --> 00:08:27,719
this technique in the render engine

162
00:08:27,719 --> 00:08:29,610
technique called ray tracing and that's

163
00:08:29,610 --> 00:08:34,949
what I'm gonna talk about however if you

164
00:08:34,949 --> 00:08:37,380
imagine again the Sun it's not only

165
00:08:37,380 --> 00:08:40,469
shooting one ray at the time it's like a

166
00:08:40,469 --> 00:08:42,719
really really big energy source and it's

167
00:08:42,719 --> 00:08:44,730
shooting down all these billions and

168
00:08:44,730 --> 00:08:46,740
billions of race at the same time and

169
00:08:46,740 --> 00:08:49,410
most of these rays are never gonna hit

170
00:08:49,410 --> 00:08:51,690
our eye they're never going to hit our

171
00:08:51,690 --> 00:08:53,550
camera or whatever specifics

172
00:08:53,550 --> 00:08:56,310
but that we want to look at so what

173
00:08:56,310 --> 00:08:59,010
computer graphics are doing is they use

174
00:08:59,010 --> 00:09:01,800
technique called backwards ray tracing

175
00:09:01,800 --> 00:09:04,649
so we are tracing the race but instead

176
00:09:04,649 --> 00:09:06,690
of going from the light source we're

177
00:09:06,690 --> 00:09:09,720
going from our camera through the pixel

178
00:09:09,720 --> 00:09:12,209
that we want to trace and we should

179
00:09:12,209 --> 00:09:15,269
array into the scene and we look at the

180
00:09:15,269 --> 00:09:17,010
first object that we're going to hit at

181
00:09:17,010 --> 00:09:20,220
the closest one from there we're going

182
00:09:20,220 --> 00:09:23,250
to see we want to see if this one object

183
00:09:23,250 --> 00:09:37,110
is in shadow or if it is in light okay

184
00:09:37,110 --> 00:09:42,089
so if the object is actually lit we're

185
00:09:42,089 --> 00:09:44,610
going to use the color of the of the

186
00:09:44,610 --> 00:09:47,120
material that is defined at that space

187
00:09:47,120 --> 00:09:49,620
basically multiplying it simple

188
00:09:49,620 --> 00:09:52,560
simplified set multiplying it with the

189
00:09:52,560 --> 00:09:54,839
color of the light intensity of the

190
00:09:54,839 --> 00:09:58,470
light if the object is in shadow we're

191
00:09:58,470 --> 00:10:01,560
just going to use we're just going to

192
00:10:01,560 --> 00:10:05,310
use black for now as for shadow this is

193
00:10:05,310 --> 00:10:09,209
very simplified but now I also talked

194
00:10:09,209 --> 00:10:11,490
about these other things that called

195
00:10:11,490 --> 00:10:15,930
like transmission and reflection so how

196
00:10:15,930 --> 00:10:18,380
are we handling this in ray tracing

197
00:10:18,380 --> 00:10:24,810
imagine we want to see where if we have

198
00:10:24,810 --> 00:10:28,829
a transparent material like glass we

199
00:10:28,829 --> 00:10:31,470
would like to see what can we see

200
00:10:31,470 --> 00:10:33,600
through that glass and what is reflected

201
00:10:33,600 --> 00:10:36,720
on the surface of that glass so on the

202
00:10:36,720 --> 00:10:40,170
impact point we have to calculate the

203
00:10:40,170 --> 00:10:42,410
different race that we're going to trace

204
00:10:42,410 --> 00:10:45,209
one of those rays is going to be the

205
00:10:45,209 --> 00:10:48,209
reflection ray and one of them is going

206
00:10:48,209 --> 00:10:51,510
to be the refraction ray it's a bit yeah

207
00:10:51,510 --> 00:10:53,459
not very nice that the names are so

208
00:10:53,459 --> 00:10:57,600
close and from there these rays we're

209
00:10:57,600 --> 00:10:59,070
going to do another check if they are

210
00:10:59,070 --> 00:11:01,980
hitting a next object so if the

211
00:11:01,980 --> 00:11:03,899
reflection ray is hitting this red

212
00:11:03,899 --> 00:11:06,930
sphere it's going to be red at that

213
00:11:06,930 --> 00:11:10,080
points but the refraction rays hitting

214
00:11:10,080 --> 00:11:12,899
this green sphere and so we have to

215
00:11:12,899 --> 00:11:16,260
calculate together if we want to have to

216
00:11:16,260 --> 00:11:20,310
pixel their red or green from the impact

217
00:11:20,310 --> 00:11:23,490
point of the secondary race we're going

218
00:11:23,490 --> 00:11:26,430
to trace to towards the Sun and see if

219
00:11:26,430 --> 00:11:32,640
these points are in light or not I want

220
00:11:32,640 --> 00:11:34,950
you to have a moment to look at this

221
00:11:34,950 --> 00:11:50,310
code

222
00:11:50,320 --> 00:11:54,890
everybody get it can you come here and

223
00:11:54,890 --> 00:11:57,800
explain it to me because this is how I

224
00:11:57,800 --> 00:11:59,840
feel about my own code after two weeks

225
00:11:59,840 --> 00:12:04,400
of not looking at it so yeah what you're

226
00:12:04,400 --> 00:12:07,040
looking at is a basic implementation of

227
00:12:07,040 --> 00:12:09,080
a ray tracing engine that can do

228
00:12:09,080 --> 00:12:11,680
reflection reflection and reflect

229
00:12:11,680 --> 00:12:16,220
refraction with geometry primitives of

230
00:12:16,220 --> 00:12:19,280
spheres and I'm not sure if planes as

231
00:12:19,280 --> 00:12:22,340
well I think only spheres and this is a

232
00:12:22,340 --> 00:12:25,130
common challenge and young people who do

233
00:12:25,130 --> 00:12:27,410
computer graphics is how to make the

234
00:12:27,410 --> 00:12:30,050
most compact ray tracing engine that can

235
00:12:30,050 --> 00:12:34,520
be fit on a business card so this

236
00:12:34,520 --> 00:12:36,380
actually compiles and I think that's

237
00:12:36,380 --> 00:12:38,900
pretty cool but let's take it apart a

238
00:12:38,900 --> 00:12:42,350
little bit so what we want to do is we

239
00:12:42,350 --> 00:12:45,650
want to define our geometry primitives

240
00:12:45,650 --> 00:12:48,560
and for now we are just going to talk

241
00:12:48,560 --> 00:12:50,240
about the sphere because the sphere is

242
00:12:50,240 --> 00:12:52,880
one of the most easy shapes to calculate

243
00:12:52,880 --> 00:12:56,660
an intersection and for that we need a

244
00:12:56,660 --> 00:12:59,060
center and radius and we want to have

245
00:12:59,060 --> 00:13:00,920
the material because as I explained

246
00:13:00,920 --> 00:13:02,860
before that's the most interesting part

247
00:13:02,860 --> 00:13:06,440
and we're going to make an algorithm

248
00:13:06,440 --> 00:13:08,150
that will calculate our intersection

249
00:13:08,150 --> 00:13:11,480
from that if we are successful we're

250
00:13:11,480 --> 00:13:15,020
going to return both points that are

251
00:13:15,020 --> 00:13:16,670
intersecting with the sphere because

252
00:13:16,670 --> 00:13:19,130
usually you will have two of them so the

253
00:13:19,130 --> 00:13:22,160
the distance to the the closest one and

254
00:13:22,160 --> 00:13:24,290
the distance to this to the further away

255
00:13:24,290 --> 00:13:29,860
one then we're gonna start our main

256
00:13:29,860 --> 00:13:32,210
function and we're going to define the

257
00:13:32,210 --> 00:13:34,480
geometries and again for simplification

258
00:13:34,480 --> 00:13:37,250
our light source are also going to be

259
00:13:37,250 --> 00:13:40,040
spheres just with a different material

260
00:13:40,040 --> 00:13:43,850
that actually emits light for that we

261
00:13:43,850 --> 00:13:46,430
can test afterwards we're gonna have a

262
00:13:46,430 --> 00:13:49,610
buffer for our canvas and we're going to

263
00:13:49,610 --> 00:13:51,710
go and Traverse through each pixel and

264
00:13:51,710 --> 00:13:54,770
for and we're gonna trace for each pixel

265
00:13:54,770 --> 00:13:58,450
one ray that's what we did before right

266
00:13:58,450 --> 00:14:02,180
then in the trace function I want to see

267
00:14:02,180 --> 00:14:03,260
again

268
00:14:03,260 --> 00:14:05,240
shoot this is the primary ray that we

269
00:14:05,240 --> 00:14:08,330
talked about before and we want to see

270
00:14:08,330 --> 00:14:10,670
which is the closest object so we're

271
00:14:10,670 --> 00:14:12,920
gonna we're gonna test the Ray against

272
00:14:12,920 --> 00:14:17,240
every object in the sea and as a result

273
00:14:17,240 --> 00:14:19,580
we get the nearest one back if we don't

274
00:14:19,580 --> 00:14:21,200
have one hit at all we could just return

275
00:14:21,200 --> 00:14:23,270
the background color because there is

276
00:14:23,270 --> 00:14:27,140
nothing there and there will never be

277
00:14:27,140 --> 00:14:28,790
something there that's the really cool

278
00:14:28,790 --> 00:14:30,710
thing about ray tracing you actually

279
00:14:30,710 --> 00:14:33,920
test against the whole scene if there is

280
00:14:33,920 --> 00:14:37,250
an object there and it's a transparent

281
00:14:37,250 --> 00:14:41,540
or a reflective material we're gonna

282
00:14:41,540 --> 00:14:44,450
have to to shoot the secondary rays for

283
00:14:44,450 --> 00:14:48,050
each of those and we do this recursively

284
00:14:48,050 --> 00:14:51,980
until we are satisfied and usually you

285
00:14:51,980 --> 00:14:53,600
don't want to do this endlessly because

286
00:14:53,600 --> 00:14:56,330
it's gonna take forever so we're gonna

287
00:14:56,330 --> 00:14:59,270
decide how often you want to do this

288
00:14:59,270 --> 00:15:02,030
recursion and at the end of that you

289
00:15:02,030 --> 00:15:04,160
will test against the lights and see if

290
00:15:04,160 --> 00:15:08,690
these points are in shadow or not then

291
00:15:08,690 --> 00:15:11,090
you're gonna use a fernell algorithm to

292
00:15:11,090 --> 00:15:13,520
see how you should calculate the lights

293
00:15:13,520 --> 00:15:15,950
together or the results of the colors

294
00:15:15,950 --> 00:15:17,540
you're getting I'm not going to explain

295
00:15:17,540 --> 00:15:19,340
that right now but it's very interesting

296
00:15:19,340 --> 00:15:22,940
to look at and if it doesn't fall into

297
00:15:22,940 --> 00:15:25,910
this that means we are hitting a light

298
00:15:25,910 --> 00:15:28,580
source or a diffuse material that is not

299
00:15:28,580 --> 00:15:31,460
going to reflect any different points so

300
00:15:31,460 --> 00:15:34,250
we can break the recursion there I did

301
00:15:34,250 --> 00:15:36,200
not make another slide for this because

302
00:15:36,200 --> 00:15:39,140
I think it's clear and this is the

303
00:15:39,140 --> 00:15:46,620
result that we are getting from this I

304
00:15:46,630 --> 00:15:49,070
think it's very interesting to see that

305
00:15:49,070 --> 00:15:53,990
from this rather simple algorithm we

306
00:15:53,990 --> 00:15:57,500
already get really cool effects like we

307
00:15:57,500 --> 00:15:59,720
can really see the spheres that are

308
00:15:59,720 --> 00:16:00,640
close to each other

309
00:16:00,640 --> 00:16:04,430
reflecting each other we can see shadows

310
00:16:04,430 --> 00:16:07,430
and we can also see what's behind the

311
00:16:07,430 --> 00:16:09,230
camera which is pretty cool

312
00:16:09,230 --> 00:16:13,100
and this is something that you do not

313
00:16:13,100 --> 00:16:17,329
generally see in games for example or in

314
00:16:17,329 --> 00:16:21,489
different render engines and why is that

315
00:16:21,489 --> 00:16:24,040
we're gonna get to that later on

316
00:16:24,040 --> 00:16:28,819
so this was really easy I think but now

317
00:16:28,819 --> 00:16:31,910
we want to really go realistic because

318
00:16:31,910 --> 00:16:34,579
we said before there is not one ray per

319
00:16:34,579 --> 00:16:37,399
pixel usually the Sun shoot so many rays

320
00:16:37,399 --> 00:16:40,040
that make up one pixel of your image

321
00:16:40,040 --> 00:16:42,230
there is so many things that come

322
00:16:42,230 --> 00:16:45,499
together we want to have soft shadows we

323
00:16:45,499 --> 00:16:48,259
want to use multiple light sources how

324
00:16:48,259 --> 00:16:50,679
are we going to compute these together

325
00:16:50,679 --> 00:16:54,769
how are we going to decide on what is

326
00:16:54,769 --> 00:16:58,459
more weighted which pixel should be what

327
00:16:58,459 --> 00:17:01,249
and we really want to have this physical

328
00:17:01,249 --> 00:17:04,549
correctness which means that we have to

329
00:17:04,549 --> 00:17:08,209
basically bounce the array forever until

330
00:17:08,209 --> 00:17:11,389
it hits the light source by itself right

331
00:17:11,389 --> 00:17:13,909
now we're just making it a shortcut

332
00:17:13,909 --> 00:17:16,339
because we just test if it's if it will

333
00:17:16,339 --> 00:17:18,799
be hitting the light or not if there is

334
00:17:18,799 --> 00:17:22,909
something in-between or not this is

335
00:17:22,909 --> 00:17:24,559
going to use a lot of computational

336
00:17:24,559 --> 00:17:28,000
power ray tracing is really old

337
00:17:28,000 --> 00:17:31,460
technique it's from the knife from 1984

338
00:17:31,460 --> 00:17:34,909
was the first sake graph conference that

339
00:17:34,909 --> 00:17:38,659
was taking this as a topic and since

340
00:17:38,659 --> 00:17:41,360
then we are still not there where we

341
00:17:41,360 --> 00:17:45,139
have real time ray traced and she is

342
00:17:45,139 --> 00:17:47,929
that are engines that are working it has

343
00:17:47,929 --> 00:17:50,720
a lot to do with this that you cannot

344
00:17:50,720 --> 00:17:53,029
make shortcuts to make it look good

345
00:17:53,029 --> 00:17:55,789
you have to have a certain amount of

346
00:17:55,789 --> 00:17:57,860
samples unless you're gonna have a

347
00:17:57,860 --> 00:18:00,230
really otherwise you can have a really

348
00:18:00,230 --> 00:18:08,120
noisy scenery so we have a lot of new

349
00:18:08,120 --> 00:18:10,039
light sources in the room that are also

350
00:18:10,039 --> 00:18:14,960
casting Ray's I would like to just very

351
00:18:14,960 --> 00:18:18,049
briefly introduce to you rasterization

352
00:18:18,049 --> 00:18:20,179
technique this is the most common

353
00:18:20,179 --> 00:18:23,179
real-time render engine technique that

354
00:18:23,179 --> 00:18:26,720
is being used and it's just as ray

355
00:18:26,720 --> 00:18:29,000
tracing just it's just as fundamental

356
00:18:29,000 --> 00:18:30,710
this technique it has been around

357
00:18:30,710 --> 00:18:32,299
almost the same time because when

358
00:18:32,299 --> 00:18:34,580
ray-tracing was introduced the

359
00:18:34,580 --> 00:18:37,010
computational power was not good enough

360
00:18:37,010 --> 00:18:39,260
or not strong enough it would have taken

361
00:18:39,260 --> 00:18:42,649
them forever to render one frame of an

362
00:18:42,649 --> 00:18:48,679
animated movie for example so what's

363
00:18:48,679 --> 00:18:52,130
interesting about rasterization is that

364
00:18:52,130 --> 00:18:54,140
it's also trying to solve the visibility

365
00:18:54,140 --> 00:18:56,270
problem it's also trying to find out

366
00:18:56,270 --> 00:18:58,520
which object object is laying in shadow

367
00:18:58,520 --> 00:19:05,390
or what's the color of it but it's doing

368
00:19:05,390 --> 00:19:07,600
it in a very opposite way of ray tracing

369
00:19:07,600 --> 00:19:09,890
while the ray tracing is going from the

370
00:19:09,890 --> 00:19:14,110
eye or from the camera into the scene

371
00:19:14,110 --> 00:19:17,179
rasterization is going from the objects

372
00:19:17,179 --> 00:19:21,049
or from the scenery onto the screen due

373
00:19:21,049 --> 00:19:24,220
to perspective projection so we take all

374
00:19:24,220 --> 00:19:28,789
the numbers and all our points and all

375
00:19:28,789 --> 00:19:31,399
our vertices everything and we project

376
00:19:31,399 --> 00:19:35,419
it onto the screen for this we it's

377
00:19:35,419 --> 00:19:38,510
currently using triangles which is also

378
00:19:38,510 --> 00:19:40,940
a rendering primitive the cool thing

379
00:19:40,940 --> 00:19:43,159
about triangles is you cannot subdivide

380
00:19:43,159 --> 00:19:45,020
it anymore it's already you cannot make

381
00:19:45,020 --> 00:19:48,860
more areas out of it and the areas is

382
00:19:48,860 --> 00:19:51,620
always planner so we never have like a

383
00:19:51,620 --> 00:19:55,760
perspective warp or something which

384
00:19:55,760 --> 00:20:00,049
makes it really cool to then project and

385
00:20:00,049 --> 00:20:04,700
test what we then do with it with the

386
00:20:04,700 --> 00:20:06,470
triangles that are mapped onto screen

387
00:20:06,470 --> 00:20:10,159
space is something that also shown has

388
00:20:10,159 --> 00:20:12,020
been talking about before we were

389
00:20:12,020 --> 00:20:15,649
rasterizing each pixel for each triangle

390
00:20:15,649 --> 00:20:18,500
that is visible and we mapped their sea

391
00:20:18,500 --> 00:20:20,570
value so how far it is away from the

392
00:20:20,570 --> 00:20:23,299
camera so that afterwards when we color

393
00:20:23,299 --> 00:20:25,460
it in we know what's on top of each

394
00:20:25,460 --> 00:20:28,940
other and if you have transparency then

395
00:20:28,940 --> 00:20:31,580
we have to consider the C buffer because

396
00:20:31,580 --> 00:20:33,200
that's how we're going to put it

397
00:20:33,200 --> 00:20:38,179
together which also tells us that the Z

398
00:20:38,179 --> 00:20:40,309
buffer is basically so a transparent

399
00:20:40,309 --> 00:20:43,070
object is basically just look through

400
00:20:43,070 --> 00:20:44,750
with a different

401
00:20:44,750 --> 00:20:47,350
our value which does not have this

402
00:20:47,350 --> 00:20:50,240
refraction rays that are kind of warped

403
00:20:50,240 --> 00:20:56,030
around in the scene so here in this

404
00:20:56,030 --> 00:20:59,060
image you can see two basic

405
00:20:59,060 --> 00:21:01,730
implementations one basic implementation

406
00:21:01,730 --> 00:21:04,010
of rasterization and the basic

407
00:21:04,010 --> 00:21:06,890
implementation of ray tracing and you

408
00:21:06,890 --> 00:21:16,740
can already see the difference I think

409
00:21:16,750 --> 00:21:20,180
while rasterization has come a really

410
00:21:20,180 --> 00:21:22,700
long way if you have played any 3d games

411
00:21:22,700 --> 00:21:25,430
recently or if you are working with VR

412
00:21:25,430 --> 00:21:27,740
you're gonna know that it's not going to

413
00:21:27,740 --> 00:21:30,740
look like the image up there so there is

414
00:21:30,740 --> 00:21:33,520
a lot of simulations of real physics

415
00:21:33,520 --> 00:21:36,590
happening in restoration but generally

416
00:21:36,590 --> 00:21:40,670
this implementation is also really a lot

417
00:21:40,670 --> 00:21:45,310
of work to do to simulate these physics

418
00:21:45,310 --> 00:21:48,410
but they are doing a pretty good job the

419
00:21:48,410 --> 00:21:50,330
only problem is still transparency I

420
00:21:50,330 --> 00:21:54,980
think so just a quick overview of the

421
00:21:54,980 --> 00:21:58,130
two ray tracing is mostly physically

422
00:21:58,130 --> 00:21:59,840
correct if you put enough effort in it

423
00:21:59,840 --> 00:22:04,190
it has very high details very nice side

424
00:22:04,190 --> 00:22:05,750
effects that you don't have to think

425
00:22:05,750 --> 00:22:08,360
about you get the soft shadows you get

426
00:22:08,360 --> 00:22:10,580
the inter reflections you get the

427
00:22:10,580 --> 00:22:13,460
caustics but it's very computationally

428
00:22:13,460 --> 00:22:17,630
heavy so we are going to use a lot of

429
00:22:17,630 --> 00:22:20,840
computation time to render frames and if

430
00:22:20,840 --> 00:22:23,150
we ever want to do this real time we're

431
00:22:23,150 --> 00:22:26,120
gonna either have to break it down or we

432
00:22:26,120 --> 00:22:30,560
have to make cuts and restoration is

433
00:22:30,560 --> 00:22:33,950
super fast it's really only one

434
00:22:33,950 --> 00:22:36,020
transformation basically from your world

435
00:22:36,020 --> 00:22:38,990
world coordinates to your screens space

436
00:22:38,990 --> 00:22:41,480
coordinates there's a lot of tooling and

437
00:22:41,480 --> 00:22:43,790
hardware support so your GPU and your

438
00:22:43,790 --> 00:22:46,190
computer is designed to do a rasterize

439
00:22:46,190 --> 00:22:48,950
ation it's not designed to do ray

440
00:22:48,950 --> 00:22:52,370
tracing and and most of the like Pixar

441
00:22:52,370 --> 00:22:54,890
and most of the rendering people I know

442
00:22:54,890 --> 00:22:58,640
they're still rendering ray tracing

443
00:22:58,640 --> 00:23:02,540
with CPUs because it doesn't matter to

444
00:23:02,540 --> 00:23:04,310
them if there are three times faster or

445
00:23:04,310 --> 00:23:06,560
not in what matters is that they have to

446
00:23:06,560 --> 00:23:08,840
change all their their tools and they

447
00:23:08,840 --> 00:23:11,050
have to change their engines to be

448
00:23:11,050 --> 00:23:15,890
supportive of GPUs for just a little

449
00:23:15,890 --> 00:23:21,290
benefit so you have the physics that are

450
00:23:21,290 --> 00:23:23,420
not really correct you have like an

451
00:23:23,420 --> 00:23:25,570
approximation of what you can do and you

452
00:23:25,570 --> 00:23:32,090
have quality loss due to that so this is

453
00:23:32,090 --> 00:23:34,820
kind of the point where I hope you are

454
00:23:34,820 --> 00:23:36,980
all oh god how should I even get started

455
00:23:36,980 --> 00:23:39,800
it seems very complicated so I would

456
00:23:39,800 --> 00:23:43,040
like to introduce you a frame toolkit

457
00:23:43,040 --> 00:23:47,780
and a frame is a web toolkit where you

458
00:23:47,780 --> 00:23:49,640
can really easily get started with

459
00:23:49,640 --> 00:23:52,700
making your own 3d scenes and if you're

460
00:23:52,700 --> 00:23:55,640
a fan of HTML you're gonna be really

461
00:23:55,640 --> 00:23:58,010
happy because this is what its gonna

462
00:23:58,010 --> 00:24:03,050
look like so you can define with HTML

463
00:24:03,050 --> 00:24:05,570
tags we basically define everything you

464
00:24:05,570 --> 00:24:08,990
define your scene you define the sky you

465
00:24:08,990 --> 00:24:11,330
can put sources and if you want to use a

466
00:24:11,330 --> 00:24:14,630
sky texture if you prefer to use a sky

467
00:24:14,630 --> 00:24:17,720
color then you can put a color then you

468
00:24:17,720 --> 00:24:20,510
have this geometry primitives as you

469
00:24:20,510 --> 00:24:24,500
have usually boxes spheres cubes

470
00:24:24,500 --> 00:24:28,400
whatever planes are also very prominent

471
00:24:28,400 --> 00:24:32,810
and you can also define the lights and

472
00:24:32,810 --> 00:24:34,610
that's where we come back to the

473
00:24:34,610 --> 00:24:38,450
beginning because with this components

474
00:24:38,450 --> 00:24:41,990
you're gonna make or break your scene if

475
00:24:41,990 --> 00:24:44,420
your lightning is good sorry lighting

476
00:24:44,420 --> 00:24:49,340
it's good you're gonna have you can

477
00:24:49,340 --> 00:24:51,700
really achieve a lot by just having

478
00:24:51,700 --> 00:24:55,460
three or four or five different objects

479
00:24:55,460 --> 00:24:59,450
in the scene and the best part of a

480
00:24:59,450 --> 00:25:01,850
frame is that it comes with webviewer

481
00:25:01,850 --> 00:25:04,070
integration so you don't have to do

482
00:25:04,070 --> 00:25:06,830
anything you just lean back you import

483
00:25:06,830 --> 00:25:09,710
your wife controls or every major

484
00:25:09,710 --> 00:25:12,380
headset is supported or so mostly

485
00:25:12,380 --> 00:25:14,030
every major headset controller is

486
00:25:14,030 --> 00:25:18,590
supported so this is what that example

487
00:25:18,590 --> 00:25:24,620
would look like once it is but that did

488
00:25:24,620 --> 00:25:27,020
not look very good I mean the background

489
00:25:27,020 --> 00:25:32,810
does but the foreground so it's still

490
00:25:32,810 --> 00:25:34,640
the big question in the room is how do I

491
00:25:34,640 --> 00:25:38,060
get my 3d models and that's where also

492
00:25:38,060 --> 00:25:42,050
we come in so for example this is gonna

493
00:25:42,050 --> 00:25:45,050
be in your head of your HTML you load

494
00:25:45,050 --> 00:25:47,540
all these external components they're

495
00:25:47,540 --> 00:25:50,180
called a frame components and I think

496
00:25:50,180 --> 00:25:52,070
the open-source community is really

497
00:25:52,070 --> 00:25:54,500
doing an amazing job here because you

498
00:25:54,500 --> 00:25:56,900
have all these really cool components

499
00:25:56,900 --> 00:25:59,900
like a frame orbit controls you have

500
00:25:59,900 --> 00:26:01,700
people that are building environment

501
00:26:01,700 --> 00:26:04,520
presets for you so you can just import

502
00:26:04,520 --> 00:26:06,290
them and say I would like to use this

503
00:26:06,290 --> 00:26:08,570
preset and then afterwards you can

504
00:26:08,570 --> 00:26:12,910
always use animation of each attributes

505
00:26:12,910 --> 00:26:17,390
to to change your scene the way you want

506
00:26:17,390 --> 00:26:20,090
and you can if you don't like HTML you

507
00:26:20,090 --> 00:26:22,370
can do that with JavaScript so you can

508
00:26:22,370 --> 00:26:26,120
just edit edit your HTML attributes

509
00:26:26,120 --> 00:26:29,320
programmatically to make them animate

510
00:26:29,320 --> 00:26:31,940
and this is how you're going to use the

511
00:26:31,940 --> 00:26:33,590
a frame components that are made by

512
00:26:33,590 --> 00:26:37,520
external parties for example if you can

513
00:26:37,520 --> 00:26:40,910
load a 3d i/o furniture of your choice

514
00:26:40,910 --> 00:26:43,730
you can position it because position

515
00:26:43,730 --> 00:26:46,010
attributes are just generally used for

516
00:26:46,010 --> 00:26:50,600
each object and you can you can have

517
00:26:50,600 --> 00:26:53,630
your camera rotating around that object

518
00:26:53,630 --> 00:26:57,020
and you had this really nice background

519
00:26:57,020 --> 00:27:00,770
that you loved so much and you just want

520
00:27:00,770 --> 00:27:03,770
to lay in that bed and with the VR

521
00:27:03,770 --> 00:27:08,660
headset yeah so this I think it's really

522
00:27:08,660 --> 00:27:10,160
cool and you should definitely try it

523
00:27:10,160 --> 00:27:12,980
out because there is so many amazing

524
00:27:12,980 --> 00:27:15,970
things that people are doing with this I

525
00:27:15,970 --> 00:27:18,320
would like to share with you like a few

526
00:27:18,320 --> 00:27:20,330
tips and tricks this would just be a

527
00:27:20,330 --> 00:27:22,640
talk on its own but this is what I have

528
00:27:22,640 --> 00:27:25,850
been asked most of the times again how

529
00:27:25,850 --> 00:27:26,060
do

530
00:27:26,060 --> 00:27:28,850
get my 3d content should I go now and

531
00:27:28,850 --> 00:27:32,090
start to learn blender because that's a

532
00:27:32,090 --> 00:27:33,830
pretty frustrating tool to learn

533
00:27:33,830 --> 00:27:36,050
I know it's I've worked a lot with

534
00:27:36,050 --> 00:27:38,990
blender but it's pretty powerful however

535
00:27:38,990 --> 00:27:41,450
you don't have to do that because some

536
00:27:41,450 --> 00:27:43,790
people like my coworker Thomas I'm

537
00:27:43,790 --> 00:27:44,900
writing

538
00:27:44,900 --> 00:27:47,540
inspector plugin for a-frame so a-frame

539
00:27:47,540 --> 00:27:49,220
has a 3d inspector where you can

540
00:27:49,220 --> 00:27:51,530
manipulate your scene drag around things

541
00:27:51,530 --> 00:27:53,840
try out your values that you then can

542
00:27:53,840 --> 00:27:57,380
pour it into your HTML file and you can

543
00:27:57,380 --> 00:28:00,170
use this inspector plug-in to get models

544
00:28:00,170 --> 00:28:04,130
from for example Google blocks I just

545
00:28:04,130 --> 00:28:04,970
try it out

546
00:28:04,970 --> 00:28:08,870
scale the models have fun with it then

547
00:28:08,870 --> 00:28:11,990
lightning not lightning why do I always

548
00:28:11,990 --> 00:28:15,440
say lightning lightning it's gonna make

549
00:28:15,440 --> 00:28:19,730
or break your scene so I think it makes

550
00:28:19,730 --> 00:28:22,040
a really big difference and if you're

551
00:28:22,040 --> 00:28:25,730
interested in this I have hi motivations

552
00:28:25,730 --> 00:28:29,140
to write blog posts about this topic and

553
00:28:29,140 --> 00:28:32,210
then for the end is content optimization

554
00:28:32,210 --> 00:28:35,000
we are people that work mostly with the

555
00:28:35,000 --> 00:28:39,860
web and with different devices so if you

556
00:28:39,860 --> 00:28:42,310
start working with 3d for a project

557
00:28:42,310 --> 00:28:45,680
think about what is your target group if

558
00:28:45,680 --> 00:28:49,550
you want to use 3d on different devices

559
00:28:49,550 --> 00:28:52,190
at the same time keep in mind that you

560
00:28:52,190 --> 00:28:55,010
might want to design it differently for

561
00:28:55,010 --> 00:28:57,230
whatever you want to do if you want to

562
00:28:57,230 --> 00:28:59,990
do a fast-paced game then you have to

563
00:28:59,990 --> 00:29:03,560
maybe not be so detailed but if you want

564
00:29:03,560 --> 00:29:06,950
to do product like you want to have a 3d

565
00:29:06,950 --> 00:29:09,980
scene of your product to try to sell you

566
00:29:09,980 --> 00:29:13,180
might want to be more detailed on that

567
00:29:13,180 --> 00:29:16,520
so you should be thinking about loading

568
00:29:16,520 --> 00:29:19,340
your assets progressively that means you

569
00:29:19,340 --> 00:29:21,440
could have your textures in different

570
00:29:21,440 --> 00:29:23,990
sizes or different formats depending on

571
00:29:23,990 --> 00:29:27,760
what your device is capable of doing and

572
00:29:27,760 --> 00:29:31,070
you should design for level of detail if

573
00:29:31,070 --> 00:29:32,930
there's an object in your scene that

574
00:29:32,930 --> 00:29:35,690
you're only gonna see two pixels don't

575
00:29:35,690 --> 00:29:39,720
make it have a million polygons please

576
00:29:39,720 --> 00:29:42,970
and these are all the lessons that we

577
00:29:42,970 --> 00:29:46,480
have for free from game development also

578
00:29:46,480 --> 00:29:49,720
one other lesson that we are actually

579
00:29:49,720 --> 00:29:54,000
doing or that I was working on is we do

580
00:29:54,000 --> 00:29:58,390
use ray tracing for calculating light

581
00:29:58,390 --> 00:30:02,890
simulation for static scenery so the

582
00:30:02,890 --> 00:30:05,410
parts of our scenes that are static we

583
00:30:05,410 --> 00:30:09,010
use a ray tracing engine to calculate in

584
00:30:09,010 --> 00:30:09,760
the clouds

585
00:30:09,760 --> 00:30:12,670
what is our realistic light and then we

586
00:30:12,670 --> 00:30:15,250
put it back into the rasterize ation

587
00:30:15,250 --> 00:30:17,500
with the real-time stuff so this is also

588
00:30:17,500 --> 00:30:22,000
really cool workarounds so one two

589
00:30:22,000 --> 00:30:25,270
takeaways and then I'm done models

590
00:30:25,270 --> 00:30:30,070
materials and lights do matter and this

591
00:30:30,070 --> 00:30:31,720
one is mostly for myself

592
00:30:31,720 --> 00:30:35,650
I love ray tracing it's really cool but

593
00:30:35,650 --> 00:30:37,980
are we ever gonna have it real time

594
00:30:37,980 --> 00:30:40,420
Nvidia is having really cool demos on

595
00:30:40,420 --> 00:30:44,260
this but it's still a question that is

596
00:30:44,260 --> 00:30:47,200
unanswered thank you very much for

597
00:30:47,200 --> 00:30:51,680
listening if there's any questions

598
00:30:51,690 --> 00:30:56,500
please ask me any time and this is

599
00:30:56,500 --> 00:30:59,110
started so scratchy pixel is amazing

600
00:30:59,110 --> 00:31:02,370
resources for any computer graphics

601
00:31:02,370 --> 00:31:04,660
pioneers that would like to get started

602
00:31:04,660 --> 00:31:07,090
and really try to engine-out themselves

603
00:31:07,090 --> 00:31:09,700
a frame is the tool that I have been

604
00:31:09,700 --> 00:31:11,140
showing you if you just want to play

605
00:31:11,140 --> 00:31:13,960
around and 3d i/o is what we are working

606
00:31:13,960 --> 00:31:15,700
with to provide you with the models you

607
00:31:15,700 --> 00:31:16,090
need

