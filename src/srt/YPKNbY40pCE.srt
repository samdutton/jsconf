1
00:00:31,840 --> 00:00:35,740

so my talk is about septo mobile

2
00:00:35,740 --> 00:00:38,800
JavaScript framework that's jquery api

3
00:00:38,800 --> 00:00:42,309
compatible not all of it but most of it

4
00:00:42,309 --> 00:00:45,910
and i will also talk about micro

5
00:00:45,910 --> 00:00:49,930
frameworks in general and why i think

6
00:00:49,930 --> 00:00:54,040
they are good idea so first of this is a

7
00:00:54,040 --> 00:00:58,629
real computer right so what does a real

8
00:00:58,629 --> 00:01:01,030
computer have that a mobile device

9
00:01:01,030 --> 00:01:10,149
hasn't any ideas lots of memory a hard

10
00:01:10,149 --> 00:01:11,530
drive for spinning out actually don't

11
00:01:11,530 --> 00:01:12,729
have a spinning hard drive in my

12
00:01:12,729 --> 00:01:18,520
computer full-size keyboard so that is a

13
00:01:18,520 --> 00:01:20,649
lot of differences I think the main

14
00:01:20,649 --> 00:01:23,410
differences are it has a fast and stable

15
00:01:23,410 --> 00:01:24,940
network connection most of the time

16
00:01:24,940 --> 00:01:28,149
especially a chase comp because crÃ¨me

17
00:01:28,149 --> 00:01:30,430
force and team has done a really great

18
00:01:30,430 --> 00:01:33,039
job if the Wi-Fi so a round of applause

19
00:01:33,039 --> 00:01:36,940
for them please it's really hard to get

20
00:01:36,940 --> 00:01:39,720
this right and it's pretty amazing

21
00:01:39,720 --> 00:01:43,240
anyway you have lots of storage lots and

22
00:01:43,240 --> 00:01:45,940
lots and lots of storage and you have

23
00:01:45,940 --> 00:01:48,940
fast multi-core CPUs you also have

24
00:01:48,940 --> 00:01:51,160
multi-core CPUs coming up in mobile

25
00:01:51,160 --> 00:01:53,319
devices but there even if it's a

26
00:01:53,319 --> 00:01:55,420
multi-course if you it's still much much

27
00:01:55,420 --> 00:01:57,130
slower than anything you have in like a

28
00:01:57,130 --> 00:01:59,679
real computer and of course you have

29
00:01:59,679 --> 00:02:02,410
hardware accelerated graphics most

30
00:02:02,410 --> 00:02:04,810
browsers these days support like some

31
00:02:04,810 --> 00:02:06,459
form or other of hardware accelerated

32
00:02:06,459 --> 00:02:09,130
graphics even if they do not composite

33
00:02:09,130 --> 00:02:12,040
themselves in the heart of accelerated

34
00:02:12,040 --> 00:02:15,069
way like use textures to rain delay term

35
00:02:15,069 --> 00:02:18,099
elements they do use the operating

36
00:02:18,099 --> 00:02:20,860
system provided like low-level hardware

37
00:02:20,860 --> 00:02:24,550
accelerated methods to render their

38
00:02:24,550 --> 00:02:30,660
stuff so

39
00:02:30,670 --> 00:02:34,989
what about the mobile devices so what do

40
00:02:34,989 --> 00:02:36,790
they have all right what do that don't

41
00:02:36,790 --> 00:02:50,140
not have any ideas battery life pooping

42
00:02:50,140 --> 00:02:57,550
restrictions right I mean actually the

43
00:02:57,550 --> 00:02:59,590
iPad I mean it's probably used most

44
00:02:59,590 --> 00:03:04,989
often by pooping I think not talking

45
00:03:04,989 --> 00:03:07,470
about my experience here by the way so

46
00:03:07,470 --> 00:03:10,180
so they have a slow and unstable network

47
00:03:10,180 --> 00:03:11,709
connection most of the time if you if

48
00:03:11,709 --> 00:03:14,170
you have like an AT&T mobile phone like

49
00:03:14,170 --> 00:03:16,540
my phone is it has a slow and unstable

50
00:03:16,540 --> 00:03:19,810
network connection it it doesn't happen

51
00:03:19,810 --> 00:03:21,819
much to like so much to do with like the

52
00:03:21,819 --> 00:03:23,290
phone itself or the technology itself

53
00:03:23,290 --> 00:03:26,200
it's just that in the real world like

54
00:03:26,200 --> 00:03:28,959
other people use it like the same

55
00:03:28,959 --> 00:03:31,120
connections that we use or you're in

56
00:03:31,120 --> 00:03:33,640
like the shadow of a building and the

57
00:03:33,640 --> 00:03:34,810
connection doesn't get through to you

58
00:03:34,810 --> 00:03:37,120
blah blah blah the end result is it's

59
00:03:37,120 --> 00:03:39,579
unreliable you're also have limited

60
00:03:39,579 --> 00:03:42,000
storage you have slowed CPUs and

61
00:03:42,000 --> 00:03:44,829
hardware acceleration right now for

62
00:03:44,829 --> 00:03:46,989
browser stuff at least it's only

63
00:03:46,989 --> 00:03:49,180
available on iOS the other browsers have

64
00:03:49,180 --> 00:03:52,630
all the adult devices all use software

65
00:03:52,630 --> 00:03:55,060
rendering and compositing so it's kind

66
00:03:55,060 --> 00:03:57,790
of slow there's an interesting thing

67
00:03:57,790 --> 00:04:01,420
about this like all major JavaScript

68
00:04:01,420 --> 00:04:03,609
libraries first came out when we had

69
00:04:03,609 --> 00:04:07,000
phones that look like this phone you may

70
00:04:07,000 --> 00:04:10,120
have had it so many ericsson t610 i

71
00:04:10,120 --> 00:04:12,730
think i had this phone for a long time

72
00:04:12,730 --> 00:04:15,760
before i had the first iphone i think

73
00:04:15,760 --> 00:04:17,049
this phone came out in two thousand free

74
00:04:17,049 --> 00:04:21,330
or something but most phones from like

75
00:04:21,330 --> 00:04:23,919
the middle of the first decade of the

76
00:04:23,919 --> 00:04:26,110
21st century I like this like color

77
00:04:26,110 --> 00:04:29,590
screen lots of buttons really awful web

78
00:04:29,590 --> 00:04:32,080
browsers if they even is a web browser

79
00:04:32,080 --> 00:04:34,990
on there so JavaScript libraries really

80
00:04:34,990 --> 00:04:37,479
rare written with the real computers in

81
00:04:37,479 --> 00:04:40,210
mind and now because we have mobile

82
00:04:40,210 --> 00:04:41,650
browsers that too so much more and

83
00:04:41,650 --> 00:04:44,050
almost like desktop browsers we used

84
00:04:44,050 --> 00:04:48,039
javascript libraries on the mobile only

85
00:04:48,039 --> 00:04:50,500
mobile devices and maybe it's sometimes

86
00:04:50,500 --> 00:04:54,370
not the best choice like the movie that

87
00:04:54,370 --> 00:04:55,960
i will show now will demonstrate what

88
00:04:55,960 --> 00:04:57,370
happens if something's not the best

89
00:04:57,370 --> 00:05:05,750
choice

90
00:05:05,760 --> 00:05:12,660
recognizing

91
00:05:12,670 --> 00:05:24,750
David

92
00:05:24,760 --> 00:05:27,430
I think they really tried hard to make

93
00:05:27,430 --> 00:05:30,850
it really awesome but something will

94
00:05:30,850 --> 00:05:44,869
really went wrong

95
00:05:44,879 --> 00:05:49,569
so this is a little video it proves two

96
00:05:49,569 --> 00:05:51,189
things I think the first thing is this

97
00:05:51,189 --> 00:05:52,869
nothing that doesn't exist on the

98
00:05:52,869 --> 00:05:57,490
internet the other thing is that don't

99
00:05:57,490 --> 00:05:59,080
just use something because it's popular

100
00:05:59,080 --> 00:06:03,550
don't I don't know use david has love in

101
00:06:03,550 --> 00:06:06,490
your code because he's popular I don't

102
00:06:06,490 --> 00:06:10,960
know to be at argument anyway use things

103
00:06:10,960 --> 00:06:13,569
that are the right tool for the job use

104
00:06:13,569 --> 00:06:16,270
the right actors for the movie or use

105
00:06:16,270 --> 00:06:18,279
the right frameworks or the right codes

106
00:06:18,279 --> 00:06:24,580
for you codes so again this a

107
00:06:24,580 --> 00:06:27,180
commonality between those devices here

108
00:06:27,180 --> 00:06:30,759
each of those devices actually uses

109
00:06:30,759 --> 00:06:34,899
webkit in their browsers there is like

110
00:06:34,899 --> 00:06:38,110
Firefox now if I Android but all of

111
00:06:38,110 --> 00:06:40,689
these devices come with a browser that's

112
00:06:40,689 --> 00:06:43,599
based on webkit and it's very

113
00:06:43,599 --> 00:06:45,009
interesting and we had some talks

114
00:06:45,009 --> 00:06:48,009
earlier a chase account that talked a

115
00:06:48,009 --> 00:06:50,110
little bit about this it's very

116
00:06:50,110 --> 00:06:53,199
interesting that WebKit has a lot of

117
00:06:53,199 --> 00:06:55,749
proprietary features it's it's like the

118
00:06:55,749 --> 00:07:00,729
new ie6 right but actually ie6 came with

119
00:07:00,729 --> 00:07:01,779
a lot of features they were really

120
00:07:01,779 --> 00:07:05,649
awesome asics and the IES before ie6

121
00:07:05,649 --> 00:07:07,839
actually and I think people don't

122
00:07:07,839 --> 00:07:12,759
realize that enough anyway proprietary

123
00:07:12,759 --> 00:07:15,699
features actually mostly adoption of

124
00:07:15,699 --> 00:07:17,439
features from various JavaScript

125
00:07:17,439 --> 00:07:20,050
frameworks and that's why it's so

126
00:07:20,050 --> 00:07:21,369
important that we have awesome

127
00:07:21,369 --> 00:07:23,439
JavaScript frameworks and that's why

128
00:07:23,439 --> 00:07:25,779
it's also important that we have a

129
00:07:25,779 --> 00:07:28,149
diversity of JavaScript frameworks it's

130
00:07:28,149 --> 00:07:30,369
not good to have a monoculture it's not

131
00:07:30,369 --> 00:07:32,619
good to have just one framework that

132
00:07:32,619 --> 00:07:35,199
rules them all it's good to have a

133
00:07:35,199 --> 00:07:37,930
perverse landscape of frameworks for

134
00:07:37,930 --> 00:07:42,039
various uses like feels chick we're a go

135
00:07:42,039 --> 00:07:44,559
with that if you need Toto go with that

136
00:07:44,559 --> 00:07:49,209
it's like use what you like best however

137
00:07:49,209 --> 00:07:51,969
for mobile there are a lot of

138
00:07:51,969 --> 00:07:55,070
restrictions in this anime proprietor if

139
00:07:55,070 --> 00:07:58,640
awesome really awesome so here are some

140
00:07:58,640 --> 00:08:00,620
of those features that you might not

141
00:08:00,620 --> 00:08:02,990
find in a desktop browser if first

142
00:08:02,990 --> 00:08:07,340
feature CSS selectors then mention it

143
00:08:07,340 --> 00:08:10,280
during his talk documented query

144
00:08:10,280 --> 00:08:13,730
selector all that's awesome it's

145
00:08:13,730 --> 00:08:16,280
basically this one line of code replaces

146
00:08:16,280 --> 00:08:18,620
about like six kilobytes of gzipped and

147
00:08:18,620 --> 00:08:21,260
minified select CSI select the code that

148
00:08:21,260 --> 00:08:24,140
you would need with a classical library

149
00:08:24,140 --> 00:08:26,420
of course it doesn't do exactly the same

150
00:08:26,420 --> 00:08:28,580
thing but it does the same thing for

151
00:08:28,580 --> 00:08:31,580
most intents and purposes it's full

152
00:08:31,580 --> 00:08:33,530
features is as free selectors that are

153
00:08:33,530 --> 00:08:35,690
just built into any web kit can just use

154
00:08:35,690 --> 00:08:38,360
this and to get like a node list out of

155
00:08:38,360 --> 00:08:41,930
the call Nautilus is a JavaScript array

156
00:08:41,930 --> 00:08:45,260
like structure you can convert it to an

157
00:08:45,260 --> 00:08:48,740
actual array if you call a rated slice

158
00:08:48,740 --> 00:08:51,950
that apply or array dot prototype dot

159
00:08:51,950 --> 00:08:53,810
slice that apply or just you create an

160
00:08:53,810 --> 00:08:58,280
empty array say taught slice and it's

161
00:08:58,280 --> 00:09:00,200
it's more or less doing the same thing

162
00:09:00,200 --> 00:09:02,540
that like sizzled us right and there's

163
00:09:02,540 --> 00:09:05,570
other JavaScript pastes CSS selector

164
00:09:05,570 --> 00:09:09,020
engines actually so clear select all

165
00:09:09,020 --> 00:09:12,470
full features CSS selectors most

166
00:09:12,470 --> 00:09:14,450
importantly it's not that it's full

167
00:09:14,450 --> 00:09:15,890
feature CSS selectors it's really

168
00:09:15,890 --> 00:09:16,880
important that you complete any

169
00:09:16,880 --> 00:09:18,290
javascript libraries to use that it's

170
00:09:18,290 --> 00:09:20,270
just there it's also important that it's

171
00:09:20,270 --> 00:09:23,060
faster then any javascript libraries can

172
00:09:23,060 --> 00:09:25,130
ever be because it's just c code it's

173
00:09:25,130 --> 00:09:27,230
pretty optimized because it basically

174
00:09:27,230 --> 00:09:30,200
really uses the same coated WebKit users

175
00:09:30,200 --> 00:09:32,900
to style the page and to parse the CSS

176
00:09:32,900 --> 00:09:36,170
and stuff so it's just there sits there

177
00:09:36,170 --> 00:09:39,560
it's just an Dom API interface to that

178
00:09:39,560 --> 00:09:41,240
engines is a select engine that's

179
00:09:41,240 --> 00:09:44,960
already infected anyway next feature

180
00:09:44,960 --> 00:09:52,790
Jason native chase on support also if if

181
00:09:52,790 --> 00:09:55,370
you have to support like older browsers

182
00:09:55,370 --> 00:09:59,330
on desktop the thing is you have to have

183
00:09:59,330 --> 00:10:01,280
some external library that provides this

184
00:10:01,280 --> 00:10:03,890
functionality that's the chasing stuff

185
00:10:03,890 --> 00:10:06,290
from Douglas Crockford you can use it

186
00:10:06,290 --> 00:10:08,780
but however on WebKit

187
00:10:08,780 --> 00:10:10,760
only mobile devices is just there so

188
00:10:10,760 --> 00:10:15,080
just use it json.parse same thing it

189
00:10:15,080 --> 00:10:17,420
actually has a lot of advantages to use

190
00:10:17,420 --> 00:10:21,080
this native stuff because first of all

191
00:10:21,080 --> 00:10:23,420
like all the security problems that you

192
00:10:23,420 --> 00:10:26,270
would have life like eval like taking

193
00:10:26,270 --> 00:10:29,660
care of and if you use like normal

194
00:10:29,660 --> 00:10:32,390
JavaScript code to pass json you have to

195
00:10:32,390 --> 00:10:34,040
run it for like a series of regular

196
00:10:34,040 --> 00:10:37,100
expressions which is let's say not the

197
00:10:37,100 --> 00:10:39,500
fastest way to deal with that so if you

198
00:10:39,500 --> 00:10:41,120
just use the native implementation it's

199
00:10:41,120 --> 00:10:46,010
faster shorter less code don't have to

200
00:10:46,010 --> 00:10:48,080
download anything so it's you just been

201
00:10:48,080 --> 00:10:52,340
by using this and this stuff is it's not

202
00:10:52,340 --> 00:10:56,650
only about Dom API sand and palm

203
00:10:56,650 --> 00:10:58,820
proprietary features it's also about

204
00:10:58,820 --> 00:11:01,970
JavaScript features of course and WebKit

205
00:11:01,970 --> 00:11:04,250
supports a lot of the newer JavaScript

206
00:11:04,250 --> 00:11:07,070
features like the for each iteration of

207
00:11:07,070 --> 00:11:11,330
an array if you haven't done that array

208
00:11:11,330 --> 00:11:14,030
be free numbers for each is a native

209
00:11:14,030 --> 00:11:16,520
function on the race it's taking a

210
00:11:16,520 --> 00:11:18,260
function argument and so if I feed it

211
00:11:18,260 --> 00:11:21,140
alert it will just call window dot alert

212
00:11:21,140 --> 00:11:25,670
which will do this it's it's very easy

213
00:11:25,670 --> 00:11:29,780
to understand the innumerable AP is have

214
00:11:29,780 --> 00:11:32,780
a lot of advantages there's not only for

215
00:11:32,780 --> 00:11:36,140
each there's also filter MapReduce other

216
00:11:36,140 --> 00:11:39,530
AP is that you can use which would

217
00:11:39,530 --> 00:11:41,750
normally in a browser require an

218
00:11:41,750 --> 00:11:43,730
external library like prototype chase

219
00:11:43,730 --> 00:11:45,530
for example supplies a lot of these

220
00:11:45,530 --> 00:11:47,390
innumerable functions or can use

221
00:11:47,390 --> 00:11:49,490
underscore which is basically an

222
00:11:49,490 --> 00:11:50,930
extraction of the prototype chase

223
00:11:50,930 --> 00:11:54,950
goodness to be used with any javascript

224
00:11:54,950 --> 00:11:56,690
library or with no javascript library at

225
00:11:56,690 --> 00:12:02,660
all if you want it so if i combine this

226
00:12:02,660 --> 00:12:05,590
stuff so I take the results from the

227
00:12:05,590 --> 00:12:07,910
document of query selector alcohol and

228
00:12:07,910 --> 00:12:13,850
like stuff it into the for each loop you

229
00:12:13,850 --> 00:12:15,620
can say that I you can see that I

230
00:12:15,620 --> 00:12:19,540
combine can combine the Dom API in a

231
00:12:19,540 --> 00:12:21,800
improvements instead

232
00:12:21,800 --> 00:12:24,440
language improvements of course so a

233
00:12:24,440 --> 00:12:27,709
reiteration array iteration has a lot of

234
00:12:27,709 --> 00:12:31,010
advantages as I said among them are you

235
00:12:31,010 --> 00:12:33,500
no longer need any for loops I really

236
00:12:33,500 --> 00:12:35,899
don't like four loops and the other

237
00:12:35,899 --> 00:12:40,820
advantages are as you can see really it

238
00:12:40,820 --> 00:12:43,279
makes it so much easier to read the code

239
00:12:43,279 --> 00:12:49,579
write the code it's just a good thing so

240
00:12:49,579 --> 00:12:55,190
from mobile JavaScript framework as I

241
00:12:55,190 --> 00:12:57,620
explained there's a lot of stuff that's

242
00:12:57,620 --> 00:12:59,990
in WebKit already but there's some other

243
00:12:59,990 --> 00:13:05,420
reasons I think that's not say that you

244
00:13:05,420 --> 00:13:07,760
should probably not use prototype jquery

245
00:13:07,760 --> 00:13:10,339
or dojo or whatever like to speak

246
00:13:10,339 --> 00:13:15,260
frameworks that are around and some

247
00:13:15,260 --> 00:13:17,360
quite interesting reasons like one

248
00:13:17,360 --> 00:13:19,399
reason is that not all of the

249
00:13:19,399 --> 00:13:21,560
functionality in this libraries is a

250
00:13:21,560 --> 00:13:24,589
meaningful on a mobile device for

251
00:13:24,589 --> 00:13:27,860
example a mobile device it does not

252
00:13:27,860 --> 00:13:30,500
resize its windows because it's always

253
00:13:30,500 --> 00:13:33,709
full screen however it does something

254
00:13:33,709 --> 00:13:35,750
else it has an orientation change event

255
00:13:35,750 --> 00:13:40,700
so you can see the even photo like base

256
00:13:40,700 --> 00:13:43,550
libraries like jQuery or prototype I'm

257
00:13:43,550 --> 00:13:48,380
not really like completely designed with

258
00:13:48,380 --> 00:13:51,260
with like a desktop browser in mind they

259
00:13:51,260 --> 00:13:54,440
do have some assumptions in place that

260
00:13:54,440 --> 00:13:56,529
are just not valid on a mobile device

261
00:13:56,529 --> 00:13:59,060
there's some other things like for

262
00:13:59,060 --> 00:14:01,130
example on iOS in the iOS browser if you

263
00:14:01,130 --> 00:14:04,940
focus a form element the keyboard will

264
00:14:04,940 --> 00:14:07,550
automatically like flip up on the screen

265
00:14:07,550 --> 00:14:13,490
at all times and that's one thing that

266
00:14:13,490 --> 00:14:16,100
this is just there which is a surprising

267
00:14:16,100 --> 00:14:17,300
side effect of using a mobile device

268
00:14:17,300 --> 00:14:19,970
like you focus on element but at the

269
00:14:19,970 --> 00:14:21,890
same time focusing in an element means

270
00:14:21,890 --> 00:14:23,360
that half of your screen is gone

271
00:14:23,360 --> 00:14:26,089
suddenly so and that maybe the browser

272
00:14:26,089 --> 00:14:28,040
eating like scrolls around your page so

273
00:14:28,040 --> 00:14:29,779
that you don't have that on a desktop

274
00:14:29,779 --> 00:14:33,649
computer of course more code causes

275
00:14:33,649 --> 00:14:36,270
longer download and initialization

276
00:14:36,270 --> 00:14:38,800
the download times especially our

277
00:14:38,800 --> 00:14:42,280
problem if you have like a slow edge

278
00:14:42,280 --> 00:14:44,980
connection maybe somewhere if you

279
00:14:44,980 --> 00:14:47,680
download check very a prototype both

280
00:14:47,680 --> 00:14:49,660
levers are pretty much the same in size

281
00:14:49,660 --> 00:14:51,970
like about 30 kilobytes gzipped and

282
00:14:51,970 --> 00:14:54,880
magnified that can take like 10 seconds

283
00:14:54,880 --> 00:14:57,430
on a slower connection that's 10 seconds

284
00:14:57,430 --> 00:14:59,890
the user stands there like in the rain

285
00:14:59,890 --> 00:15:03,850
waiting for the cap like getting pissed

286
00:15:03,850 --> 00:15:08,200
off about your website try to

287
00:15:08,200 --> 00:15:09,970
accommodate the user and try to make

288
00:15:09,970 --> 00:15:11,620
your site as load as fast as possible

289
00:15:11,620 --> 00:15:14,530
the thing is that most of the download

290
00:15:14,530 --> 00:15:16,060
code isn't even used on the mobile

291
00:15:16,060 --> 00:15:18,970
device like lucky lucky us there is no I

292
00:15:18,970 --> 00:15:22,120
a six on mobile phones the hope there

293
00:15:22,120 --> 00:15:23,980
are no plans for that from anyone that

294
00:15:23,980 --> 00:15:31,390
will kill them personally it yeah you

295
00:15:31,390 --> 00:15:34,090
laugh but there's actually this company

296
00:15:34,090 --> 00:15:38,890
who makes like a plug-in for how's this

297
00:15:38,890 --> 00:15:41,590
going it's a plug-in for newer IES to

298
00:15:41,590 --> 00:15:45,520
run the IE six engine to support like

299
00:15:45,520 --> 00:15:48,580
legacy applications it's just horrible I

300
00:15:48,580 --> 00:15:54,820
mean it's like it's really really weird

301
00:15:54,820 --> 00:15:59,020
anyway a lot of the code is also

302
00:15:59,020 --> 00:16:00,400
duplicate in features that are actually

303
00:16:00,400 --> 00:16:02,110
directly available as a native

304
00:16:02,110 --> 00:16:05,200
implementations like the CSS selector

305
00:16:05,200 --> 00:16:08,620
engine like maybe like array in our

306
00:16:08,620 --> 00:16:11,200
mobile functions any like polyfills you

307
00:16:11,200 --> 00:16:14,200
have actually maybe not necessary

308
00:16:14,200 --> 00:16:16,150
because all that kids on the mobile

309
00:16:16,150 --> 00:16:19,270
devices support a certain set of lichen

310
00:16:19,270 --> 00:16:21,880
amables function javascript stuff and

311
00:16:21,880 --> 00:16:26,770
Dom API enhancements so just don't roll

312
00:16:26,770 --> 00:16:30,580
it out to your mobile clients so what

313
00:16:30,580 --> 00:16:32,290
would be the goals for a mobile

314
00:16:32,290 --> 00:16:35,740
JavaScript framework the first goal is

315
00:16:35,740 --> 00:16:37,780
that it's optimized for short code size

316
00:16:37,780 --> 00:16:39,520
because the most important factor in

317
00:16:39,520 --> 00:16:42,250
this is that it's loads as fast as

318
00:16:42,250 --> 00:16:45,820
possible the initialization times are

319
00:16:45,820 --> 00:16:49,570
also interesting the less code your hair

320
00:16:49,570 --> 00:16:51,820
the less code has to be evaluated when

321
00:16:51,820 --> 00:16:54,400
it's actually finally made it through

322
00:16:54,400 --> 00:16:57,550
the buyer to the mobile browser the more

323
00:16:57,550 --> 00:16:59,410
positive valence cold initializes

324
00:16:59,410 --> 00:17:02,410
everything maybe applies polyfills for

325
00:17:02,410 --> 00:17:03,160
example there's something like

326
00:17:03,160 --> 00:17:05,589
differences between iOS free and iOS

327
00:17:05,589 --> 00:17:07,780
four you need to fetch some stuff up

328
00:17:07,780 --> 00:17:10,990
there but if you keep the short you page

329
00:17:10,990 --> 00:17:13,150
the load faster the the JavaScript

330
00:17:13,150 --> 00:17:16,240
engines on mobile devices are not yet as

331
00:17:16,240 --> 00:17:18,790
fast as JavaScript engines on a test of

332
00:17:18,790 --> 00:17:23,160
computer it's quite optimized already

333
00:17:23,160 --> 00:17:28,380
Apple was was just releasing with 4.3

334
00:17:28,380 --> 00:17:32,400
with like a lot of optimizations for the

335
00:17:32,400 --> 00:17:34,930
JavaScript engine in Safari like it runs

336
00:17:34,930 --> 00:17:36,970
twice as fast or something but still

337
00:17:36,970 --> 00:17:38,950
it's it's a long way to go so the

338
00:17:38,950 --> 00:17:44,850
shorter the codes debater and finally

339
00:17:44,850 --> 00:17:47,650
another goal would be that you have an

340
00:17:47,650 --> 00:17:51,030
easy-to-use API in your mobile framework

341
00:17:51,030 --> 00:17:54,040
for example by emulating jQuery because

342
00:17:54,040 --> 00:17:55,960
developers already know it and like it

343
00:17:55,960 --> 00:17:59,290
it's a good API photomanipulation so why

344
00:17:59,290 --> 00:18:02,530
not use that as there's no reason to

345
00:18:02,530 --> 00:18:04,870
reinvent the wheel for this the mobile

346
00:18:04,870 --> 00:18:08,110
device is still HTML and Tom notes and

347
00:18:08,110 --> 00:18:10,150
CSS stuff do you'll need to

348
00:18:10,150 --> 00:18:14,500
approximately the same stuff and you

349
00:18:14,500 --> 00:18:16,810
want it to be easy to extend customers

350
00:18:16,810 --> 00:18:20,970
able again jquery has very easy to use

351
00:18:20,970 --> 00:18:24,100
concept for plugins it's often abused

352
00:18:24,100 --> 00:18:30,280
but often it's it's really useful and we

353
00:18:30,280 --> 00:18:35,770
want to support it too and finally you

354
00:18:35,770 --> 00:18:38,410
want a fallback mechanism basically if

355
00:18:38,410 --> 00:18:41,560
you run your mobile web browser a mobile

356
00:18:41,560 --> 00:18:43,930
website or app on a mobile browser

357
00:18:43,930 --> 00:18:48,130
that's not WebKit you can should just be

358
00:18:48,130 --> 00:18:50,860
able to include like jquery proper

359
00:18:50,860 --> 00:18:54,640
because it provides the same api and it

360
00:18:54,640 --> 00:18:57,070
will make sure it runs there however

361
00:18:57,070 --> 00:18:58,900
their users will have to download much

362
00:18:58,900 --> 00:19:03,110
more code so it's really not

363
00:19:03,110 --> 00:19:06,620
important what's there but what's not

364
00:19:06,620 --> 00:19:10,340
there in the cold so meet septal if you

365
00:19:10,340 --> 00:19:12,170
haven't used it before some kids up

366
00:19:12,170 --> 00:19:16,100
github.com / metro bae / acepto i met

367
00:19:16,100 --> 00:19:19,000
Robbie and get up for historical reasons

368
00:19:19,000 --> 00:19:23,600
it's weird so it has a target size of 5k

369
00:19:23,600 --> 00:19:26,660
it's minified and cheesy but I think 5k

370
00:19:26,660 --> 00:19:29,960
is a good size you can still transfer

371
00:19:29,960 --> 00:19:32,270
fast even with a slow connection it's

372
00:19:32,270 --> 00:19:35,150
very catchable there's no problems if

373
00:19:35,150 --> 00:19:37,490
any like caching limits like all the iOS

374
00:19:37,490 --> 00:19:39,470
versions at least if like really weird

375
00:19:39,470 --> 00:19:42,890
caching limitations it has a check very

376
00:19:42,890 --> 00:19:44,990
compatible API it doesn't mean that it

377
00:19:44,990 --> 00:19:47,360
covers all of jQuery but it covers a lot

378
00:19:47,360 --> 00:19:50,090
of jQuery it uses mobile that kit

379
00:19:50,090 --> 00:19:54,890
features whenever it's possible it that

380
00:19:54,890 --> 00:19:56,840
part is important that that means that

381
00:19:56,840 --> 00:19:58,640
it for example doesn't really work on

382
00:19:58,640 --> 00:20:02,450
firefox ain't it's easily replaceable

383
00:20:02,450 --> 00:20:04,520
with jquery proper if you need to do

384
00:20:04,520 --> 00:20:07,850
that to give you an idea of the size

385
00:20:07,850 --> 00:20:11,179
difference this is jQuery 16 it says 31

386
00:20:11,179 --> 00:20:15,559
point 33 k gzip them minified i did this

387
00:20:15,559 --> 00:20:20,809
just yesterday with a graph ijs and the

388
00:20:20,809 --> 00:20:23,059
command line gzip compression tool on

389
00:20:23,059 --> 00:20:25,280
the highest setting so it's a fair

390
00:20:25,280 --> 00:20:28,610
comparison I think of course mind that

391
00:20:28,610 --> 00:20:30,530
septo does not cover all the features

392
00:20:30,530 --> 00:20:33,200
that jquery has it covers a lot of

393
00:20:33,200 --> 00:20:37,010
features but you can see that that it's

394
00:20:37,010 --> 00:20:38,809
a lot less to transfer to click to the

395
00:20:38,809 --> 00:20:41,620
client that's the whole goal of the

396
00:20:41,620 --> 00:20:47,090
deceptive framework to show some code to

397
00:20:47,090 --> 00:20:51,110
this is the main like dollar selector

398
00:20:51,110 --> 00:20:54,200
function in sep so just ignore all the

399
00:20:54,200 --> 00:20:56,270
stuff that's up there it's lots of

400
00:20:56,270 --> 00:20:58,850
special cases because check the check

401
00:20:58,850 --> 00:21:01,090
your api defines a lot of special cases

402
00:21:01,090 --> 00:21:05,030
depending on like what thing you stick

403
00:21:05,030 --> 00:21:07,220
into the dollar function if it's like a

404
00:21:07,220 --> 00:21:09,080
string it has to check on certain things

405
00:21:09,080 --> 00:21:12,140
and do certain stuff if it's a sceptre

406
00:21:12,140 --> 00:21:16,230
object itself it just behave differently

407
00:21:16,230 --> 00:21:18,750
if it's a selector string it will

408
00:21:18,750 --> 00:21:22,890
eventually call the selector engine down

409
00:21:22,890 --> 00:21:25,710
here so there's a total internal

410
00:21:25,710 --> 00:21:30,120
function in scepter that's the document

411
00:21:30,120 --> 00:21:34,169
selector signature so in intense talk

412
00:21:34,169 --> 00:21:39,150
you mentioned it in there Jas has this

413
00:21:39,150 --> 00:21:41,640
feature where you can just swap out a

414
00:21:41,640 --> 00:21:45,480
selector engine it has the same call

415
00:21:45,480 --> 00:21:49,890
signature so even if you you say I want

416
00:21:49,890 --> 00:21:51,750
to use scepter but I need a pedestal

417
00:21:51,750 --> 00:21:53,520
extra engine because I want to use this

418
00:21:53,520 --> 00:21:55,260
advanced features that i do in jquery

419
00:21:55,260 --> 00:21:57,270
whatever you could just stick in cislo

420
00:21:57,270 --> 00:21:58,950
and connected to this function and

421
00:21:58,950 --> 00:22:02,580
you're good again it's really pretty

422
00:22:02,580 --> 00:22:06,960
simple the query selector alcohol with

423
00:22:06,960 --> 00:22:09,690
the selector and it's converted to an

424
00:22:09,690 --> 00:22:11,880
array and this saves about 6k of

425
00:22:11,880 --> 00:22:13,799
selector engine code depending on what

426
00:22:13,799 --> 00:22:16,890
selector engine you use there's several

427
00:22:16,890 --> 00:22:20,419
selector engines actually in JavaScript

428
00:22:20,419 --> 00:22:23,640
with various feature sets there's one

429
00:22:23,640 --> 00:22:26,100
engine that's about 1k in size but it

430
00:22:26,100 --> 00:22:29,460
only supports this s 1 and 2 and most of

431
00:22:29,460 --> 00:22:32,130
the Ancients that support css3 are like

432
00:22:32,130 --> 00:22:37,200
4 to 6 k 4 28 k in size minified and

433
00:22:37,200 --> 00:22:43,400
cheese it so here's an instance where

434
00:22:43,400 --> 00:22:46,650
scepter uses something that's kind of

435
00:22:46,650 --> 00:22:47,880
that kid specifically at least

436
00:22:47,880 --> 00:22:51,330
non-standard I mean this would also work

437
00:22:51,330 --> 00:22:55,169
in firefox this thing so what it does

438
00:22:55,169 --> 00:22:58,020
here it's it's setting the proto the

439
00:22:58,020 --> 00:22:59,850
underscore underscore provo underscore

440
00:22:59,850 --> 00:23:03,350
underscore property of the object so

441
00:23:03,350 --> 00:23:07,440
this is done so the query selector

442
00:23:07,440 --> 00:23:09,179
alcohol returns a node list and we

443
00:23:09,179 --> 00:23:11,370
converted into an array with the array

444
00:23:11,370 --> 00:23:16,530
dot slice call and however we do want an

445
00:23:16,530 --> 00:23:18,780
array-like object but we want it to have

446
00:23:18,780 --> 00:23:22,559
all the stuff that's in polar FN so what

447
00:23:22,559 --> 00:23:24,570
we do it I just swap out the prototype

448
00:23:24,570 --> 00:23:27,390
of the array like under its s basically

449
00:23:27,390 --> 00:23:29,760
and

450
00:23:29,760 --> 00:23:31,830
end up with an a with an object it looks

451
00:23:31,830 --> 00:23:33,180
like an array there's a length property

452
00:23:33,180 --> 00:23:37,800
and it has all the other elements that

453
00:23:37,800 --> 00:23:40,860
we found earlier so it has a 0 1 2 3

454
00:23:40,860 --> 00:23:44,580
property etc but it gets all the

455
00:23:44,580 --> 00:23:48,450
prototype the stuff from the set dot

456
00:23:48,450 --> 00:23:50,700
prototype thing which is identical to

457
00:23:50,700 --> 00:23:54,060
dollar taught function so without

458
00:23:54,060 --> 00:23:56,250
copying anything around it's just

459
00:23:56,250 --> 00:23:58,230
switching this out and this is pretty

460
00:23:58,230 --> 00:24:04,920
efficient yeah the setup program is just

461
00:24:04,920 --> 00:24:06,360
pointing to dollar the live in sÃ£o Paulo

462
00:24:06,360 --> 00:24:08,490
the Levin if you use jQuery you know you

463
00:24:08,490 --> 00:24:10,020
can just sick stuff in there it will

464
00:24:10,020 --> 00:24:12,030
appear on all your results this works

465
00:24:12,030 --> 00:24:15,840
fine with septa to a side effect of this

466
00:24:15,840 --> 00:24:19,410
is that you can reuse array methods

467
00:24:19,410 --> 00:24:22,410
because it looks like an array so yeah

468
00:24:22,410 --> 00:24:25,100
basically get all these methods for free

469
00:24:25,100 --> 00:24:27,930
on any sceptre object it's still a

470
00:24:27,930 --> 00:24:29,970
sceptre object but they kind of abuse

471
00:24:29,970 --> 00:24:33,990
these array provided functions works

472
00:24:33,990 --> 00:24:37,140
fine with the scepter object to that

473
00:24:37,140 --> 00:24:39,720
this inside of the scepter object in

474
00:24:39,720 --> 00:24:41,190
inside a function call this is the

475
00:24:41,190 --> 00:24:45,180
implementation of the is API call that

476
00:24:45,180 --> 00:24:48,270
you might know from from jQuery that

477
00:24:48,270 --> 00:24:51,360
this inside the function corresponds to

478
00:24:51,360 --> 00:24:54,060
the current sceptre object and you can

479
00:24:54,060 --> 00:24:57,290
index the results they're like 0 1 2 3

480
00:24:57,290 --> 00:25:03,720
etc or distal length returns the number

481
00:25:03,720 --> 00:25:06,510
of nodes found in the scepter object but

482
00:25:06,510 --> 00:25:08,070
you can also directly call these

483
00:25:08,070 --> 00:25:12,750
functions on stuff to one instance

484
00:25:12,750 --> 00:25:16,890
that's interesting is the implementation

485
00:25:16,890 --> 00:25:23,000
of before and after begin before sorry

486
00:25:23,000 --> 00:25:26,520
pains prepend before and after because

487
00:25:26,520 --> 00:25:28,490
this uses something that's actually

488
00:25:28,490 --> 00:25:31,020
proprietary to Internet Explorer and

489
00:25:31,020 --> 00:25:33,840
Firefox does not support this but it

490
00:25:33,840 --> 00:25:36,690
also works on WebKit so epic it for some

491
00:25:36,690 --> 00:25:38,670
reason at some point they decided to

492
00:25:38,670 --> 00:25:43,620
implement this IE only api and it

493
00:25:43,620 --> 00:25:46,020
it works fine it works really great it's

494
00:25:46,020 --> 00:25:48,870
a in the end it's it's it's less code

495
00:25:48,870 --> 00:25:52,470
then I would have used if I implemented

496
00:25:52,470 --> 00:25:55,020
that with like the document fragments

497
00:25:55,020 --> 00:26:00,510
API stuff so it's one point where I II

498
00:26:00,510 --> 00:26:04,580
actually provide some cool value to

499
00:26:04,580 --> 00:26:09,450
mobile stuff so scepter again since I

500
00:26:09,450 --> 00:26:11,100
select the store manipulation it has

501
00:26:11,100 --> 00:26:13,200
full HX support including cross-domain

502
00:26:13,200 --> 00:26:16,050
JSONP just events including some touch

503
00:26:16,050 --> 00:26:19,170
event support and guesstures it has some

504
00:26:19,170 --> 00:26:23,429
polyfills Pali Hills are awesome for all

505
00:26:23,429 --> 00:26:26,030
the bad kids that don't support certain

506
00:26:26,030 --> 00:26:29,730
JavaScript API functions it's very

507
00:26:29,730 --> 00:26:33,000
modular so you can just include the core

508
00:26:33,000 --> 00:26:35,340
of scepter and which is about half of

509
00:26:35,340 --> 00:26:39,150
this 5k target if you just want it on

510
00:26:39,150 --> 00:26:41,760
manipulation if you don't need events

511
00:26:41,760 --> 00:26:43,950
for example or if you don't need to HX

512
00:26:43,950 --> 00:26:46,500
you can just leave that out etc etc it's

513
00:26:46,500 --> 00:26:50,370
a WebKit only it s rested because I

514
00:26:50,370 --> 00:26:52,710
constantly get emails when bills after

515
00:26:52,710 --> 00:26:57,900
work on ie so answer to that is it it's

516
00:26:57,900 --> 00:27:01,230
never or when ie uses webkit as it's

517
00:27:01,230 --> 00:27:05,940
rendering engine so never but I mean the

518
00:27:05,940 --> 00:27:08,010
question makes sense but it's it's

519
00:27:08,010 --> 00:27:09,480
really restricted to that and that's why

520
00:27:09,480 --> 00:27:11,370
it's so small if you want to support

521
00:27:11,370 --> 00:27:16,309
other browsers just use jQuery that easy

522
00:27:16,309 --> 00:27:18,870
so some examples of people that use

523
00:27:18,870 --> 00:27:21,900
scepter right now the most prominent

524
00:27:21,900 --> 00:27:24,650
example probably is Space Camp mobile

525
00:27:24,650 --> 00:27:27,720
they use a an actually really

526
00:27:27,720 --> 00:27:31,160
interesting combination of they took tip

527
00:27:31,160 --> 00:27:33,330
first of all the used CoffeeScript to

528
00:27:33,330 --> 00:27:35,040
develop everything but they use some

529
00:27:35,040 --> 00:27:37,590
external libraries so they use septo and

530
00:27:37,590 --> 00:27:40,170
I think they use backbone and they also

531
00:27:40,170 --> 00:27:41,460
use some other stuff they wrote

532
00:27:41,460 --> 00:27:43,679
themselves which is not open sourced yet

533
00:27:43,679 --> 00:27:45,660
but I think they they will open source

534
00:27:45,660 --> 00:27:49,080
it so that's pretty cool and you can see

535
00:27:49,080 --> 00:27:50,520
it works across all of these devices

536
00:27:50,520 --> 00:27:55,260
have web kit browsers another example

537
00:27:55,260 --> 00:27:57,389
that we saw earlier today is then

538
00:27:57,389 --> 00:28:00,389
you mobile website from suppose also

539
00:28:00,389 --> 00:28:03,450
pretty cool i hear that ebay and cheese

540
00:28:03,450 --> 00:28:06,239
I Commerce will base their mobile

541
00:28:06,239 --> 00:28:09,719
versions on septa cheese I commerce is a

542
00:28:09,719 --> 00:28:13,009
pretty big provider of e-commerce

543
00:28:13,009 --> 00:28:17,489
software for example they do that toys r

544
00:28:17,489 --> 00:28:23,129
us stuff the mobile checkers website use

545
00:28:23,129 --> 00:28:26,459
a scepter right now really wants me to

546
00:28:26,459 --> 00:28:32,609
eat a burger right now burger please and

547
00:28:32,609 --> 00:28:34,529
of course your project could your septum

548
00:28:34,529 --> 00:28:37,969
this is a project from a Swedish

549
00:28:37,969 --> 00:28:44,339
bird-watching occasion thing like I

550
00:28:44,339 --> 00:28:45,509
think it's a social network for

551
00:28:45,509 --> 00:28:48,119
birdwatchers for mobile devices so you

552
00:28:48,119 --> 00:28:50,809
can say I saw this bird here and here

553
00:28:50,809 --> 00:28:54,029
it's kind of cool it's like I mean it's

554
00:28:54,029 --> 00:28:55,469
not my thing that I don't like to sit in

555
00:28:55,469 --> 00:29:00,299
the bush for five hours to but it's

556
00:29:00,299 --> 00:29:09,169
awesome and that said it brings me to my

557
00:29:09,169 --> 00:29:11,879
maybe the main point in my talk actually

558
00:29:11,879 --> 00:29:14,309
so step two is cool but scepters really

559
00:29:14,309 --> 00:29:16,979
only a subset of jQuery with some less

560
00:29:16,979 --> 00:29:19,070
code that's it it's really that simple

561
00:29:19,070 --> 00:29:25,859
and I couldn't help it so I think we saw

562
00:29:25,859 --> 00:29:29,039
a lot of the time so and now it's it's a

563
00:29:29,039 --> 00:29:32,579
little bit of time to nerd out so we

564
00:29:32,579 --> 00:29:36,019
have all these amazing frameworks right

565
00:29:36,019 --> 00:29:42,359
like script calculus the prototype Jess

566
00:29:42,359 --> 00:29:54,389
right jquery maybe mootools right so and

567
00:29:54,389 --> 00:29:58,499
I I really think it's it's time to give

568
00:29:58,499 --> 00:30:00,539
like the micro frameworks a little bit

569
00:30:00,539 --> 00:30:04,009
of room in everyone's like toolkit and

570
00:30:04,009 --> 00:30:09,119
micro frameworks are awesome so the

571
00:30:09,119 --> 00:30:11,280
micro frameworks basically like ebooks

572
00:30:11,280 --> 00:30:15,330
a kind of thumb but useful like they

573
00:30:15,330 --> 00:30:17,450
can't kill stormtroopers pretty

574
00:30:17,450 --> 00:30:20,700
efficiently so you're the rebels right

575
00:30:20,700 --> 00:30:24,330
and you have your ebooks I mean micro

576
00:30:24,330 --> 00:30:29,070
frameworks to slay the evil empire which

577
00:30:29,070 --> 00:30:33,030
are the users no just joking and about

578
00:30:33,030 --> 00:30:39,510
Star Wars make this slide it has nothing

579
00:30:39,510 --> 00:30:43,470
to do with my talk of course it's kind

580
00:30:43,470 --> 00:30:48,300
of true so classic frameworks try to do

581
00:30:48,300 --> 00:30:50,900
all things and do it kind of okayish

582
00:30:50,900 --> 00:30:53,250
they have drawbacks like for example

583
00:30:53,250 --> 00:30:56,700
performance sighs and stuff classic

584
00:30:56,700 --> 00:30:59,670
frameworks also force you into an API if

585
00:30:59,670 --> 00:31:02,340
you use jQuery a prototype the force you

586
00:31:02,340 --> 00:31:05,510
basically force you to use the API

587
00:31:05,510 --> 00:31:08,960
everywhere right it might not be modular

588
00:31:08,960 --> 00:31:11,940
not material but why does it say not

589
00:31:11,940 --> 00:31:14,900
modular not model I enough I've no idea

590
00:31:14,900 --> 00:31:17,400
like prototype for example is completely

591
00:31:17,400 --> 00:31:20,610
not mother jquery this is not model our

592
00:31:20,610 --> 00:31:22,830
mootools is for example so some

593
00:31:22,830 --> 00:31:26,790
classical frameworks are modular they

594
00:31:26,790 --> 00:31:29,010
have in common that they have like 25 k

595
00:31:29,010 --> 00:31:32,430
or even much more minified in gzip

596
00:31:32,430 --> 00:31:35,070
that's the size of those libraries if

597
00:31:35,070 --> 00:31:37,140
you use jquery or prototype or mootools

598
00:31:37,140 --> 00:31:39,530
i don't know about mootools actually a

599
00:31:39,530 --> 00:31:42,930
lot of these classical libraries are

600
00:31:42,930 --> 00:31:46,530
much larger than this of course and the

601
00:31:46,530 --> 00:31:48,210
problem is as we have seen a lot of the

602
00:31:48,210 --> 00:31:49,410
stuff that they implement I actually

603
00:31:49,410 --> 00:31:51,780
know is actually not part of the Domo

604
00:31:51,780 --> 00:31:53,850
JavaScript or the WebKit browsers or

605
00:31:53,850 --> 00:31:56,850
Firefox or whatever because the

606
00:31:56,850 --> 00:31:58,950
browser's adopted the features from

607
00:31:58,950 --> 00:32:01,800
those libraries so it doesn't make sense

608
00:32:01,800 --> 00:32:04,410
for the libraries to push it out to

609
00:32:04,410 --> 00:32:06,840
clients anymore we can remove this stuff

610
00:32:06,840 --> 00:32:11,400
from the libraries and this is where the

611
00:32:11,400 --> 00:32:13,740
micro frameworks come into play they are

612
00:32:13,740 --> 00:32:16,500
awesome so micro frameworks in my

613
00:32:16,500 --> 00:32:18,450
definition is they do one thing and to

614
00:32:18,450 --> 00:32:21,270
do it really well it should be smaller

615
00:32:21,270 --> 00:32:23,460
than 5k that's like a completely made up

616
00:32:23,460 --> 00:32:25,290
number so if you Mike refer

617
00:32:25,290 --> 00:32:28,970
umber k7k don't shoot yourself please

618
00:32:28,970 --> 00:32:31,290
some people would say micro frameworks

619
00:32:31,290 --> 00:32:34,050
cannot be larger than 2k you're on the

620
00:32:34,050 --> 00:32:37,920
extreme like extremist side somehow you

621
00:32:37,920 --> 00:32:40,320
can use them directly or loosely coupled

622
00:32:40,320 --> 00:32:43,290
the micro frameworks a micro framework

623
00:32:43,290 --> 00:32:45,300
should not have dependencies on anything

624
00:32:45,300 --> 00:32:47,970
of course that can be micro frameworks

625
00:32:47,970 --> 00:32:50,790
that are written specifically for some

626
00:32:50,790 --> 00:32:54,180
other framework it's like in that kind

627
00:32:54,180 --> 00:32:56,340
of sense like many jQuery plugins could

628
00:32:56,340 --> 00:33:00,960
be considered a micro framework I don't

629
00:33:00,960 --> 00:33:02,220
consider them that I consider them

630
00:33:02,220 --> 00:33:07,220
plugins because they are it's a lot dif

631
00:33:07,220 --> 00:33:10,470
differentiation to make small is

632
00:33:10,470 --> 00:33:12,690
beautiful right easy easier to

633
00:33:12,690 --> 00:33:14,820
understand code and to forge the code

634
00:33:14,820 --> 00:33:17,970
the few lines of code you have in your

635
00:33:17,970 --> 00:33:22,050
micro framework it's like every line of

636
00:33:22,050 --> 00:33:24,240
code that you save makes it easier for

637
00:33:24,240 --> 00:33:26,150
other people to understand your code

638
00:33:26,150 --> 00:33:29,010
most of the time I mean you can also

639
00:33:29,010 --> 00:33:31,950
like submit your entries to chase 1k no

640
00:33:31,950 --> 00:33:34,590
one will ever understand your code but

641
00:33:34,590 --> 00:33:38,010
that's like an extreme example every

642
00:33:38,010 --> 00:33:39,990
line you save in your code will probably

643
00:33:39,990 --> 00:33:42,290
make your code download and run faster

644
00:33:42,290 --> 00:33:46,560
every line of code you save leads to

645
00:33:46,560 --> 00:33:49,410
fewer bugs because few less code is

646
00:33:49,410 --> 00:33:52,920
equals fewer bugs because they just

647
00:33:52,920 --> 00:33:57,690
cannot not as much things can go wrong

648
00:33:57,690 --> 00:33:59,760
if your code if you have fewer lines of

649
00:33:59,760 --> 00:34:02,310
code and plus you will understand how

650
00:34:02,310 --> 00:34:04,200
JavaScript really works because if you

651
00:34:04,200 --> 00:34:06,210
write a framework with no help from

652
00:34:06,210 --> 00:34:08,700
other frameworks you will be forced to

653
00:34:08,700 --> 00:34:10,470
understand JavaScript which i think is a

654
00:34:10,470 --> 00:34:13,110
good thing because we all should

655
00:34:13,110 --> 00:34:14,790
understand JavaScript really well I mean

656
00:34:14,790 --> 00:34:18,600
they are chase cone so here's some

657
00:34:18,600 --> 00:34:24,720
examples masters with 1.5 k in size it's

658
00:34:24,720 --> 00:34:29,610
awesome lawn chair stuke a lawn chair is

659
00:34:29,610 --> 00:34:31,830
pretty awesome actually you should check

660
00:34:31,830 --> 00:34:35,850
it out backbone it's about 3.9 k there's

661
00:34:35,850 --> 00:34:38,560
also several other implementations of

662
00:34:38,560 --> 00:34:41,250
similar MVC client-side frameworks

663
00:34:41,250 --> 00:34:43,540
personally I am really not a big fan of

664
00:34:43,540 --> 00:34:46,720
NBC client-side stuff but I think it's

665
00:34:46,720 --> 00:34:48,910
in a lot of cases it's it's not the

666
00:34:48,910 --> 00:34:52,530
right choice to use but there are cases

667
00:34:52,530 --> 00:34:54,820
where you need it and there's several

668
00:34:54,820 --> 00:35:01,000
options so the problem is how do you

669
00:35:01,000 --> 00:35:04,450
know what is out there how do you

670
00:35:04,450 --> 00:35:07,030
discover what micro frameworks are

671
00:35:07,030 --> 00:35:09,190
available like you cannot like check

672
00:35:09,190 --> 00:35:12,990
through every github account right and

673
00:35:12,990 --> 00:35:15,610
that's why I'm announcing today I'm

674
00:35:15,610 --> 00:35:17,640
launching a website called micro chase

675
00:35:17,640 --> 00:35:19,990
so you can go there right now micro

676
00:35:19,990 --> 00:35:23,050
chase com it's a really dumb list of

677
00:35:23,050 --> 00:35:26,650
awesome amazing micro frameworks which

678
00:35:26,650 --> 00:35:29,680
has sable you want up there and then it

679
00:35:29,680 --> 00:35:31,120
will show you micro frameworks that

680
00:35:31,120 --> 00:35:36,750
might fit your needs and you can fork

681
00:35:36,750 --> 00:35:39,970
the project at github com met Robbie

682
00:35:39,970 --> 00:35:42,340
micro chase.com that your L vehicle life

683
00:35:42,340 --> 00:35:45,190
after my talk and you can test like a

684
00:35:45,190 --> 00:35:46,630
data file it's really simple it's two

685
00:35:46,630 --> 00:35:48,880
files index dot HTML there are no images

686
00:35:48,880 --> 00:35:54,280
or anything so CSS free goodness ain't

687
00:35:54,280 --> 00:35:56,740
as a theta to chase file where you can

688
00:35:56,740 --> 00:35:59,800
just add your library if you want to use

689
00:35:59,800 --> 00:36:05,620
it that's it any questions so the

690
00:36:05,620 --> 00:36:08,800
question is I extend my object with

691
00:36:08,800 --> 00:36:12,910
array functions the reasons the reason

692
00:36:12,910 --> 00:36:15,430
why i don't use like a check if it's

693
00:36:15,430 --> 00:36:17,020
already existing right that's the

694
00:36:17,020 --> 00:36:21,330
question no

695
00:36:21,340 --> 00:36:24,320
if the property would be inherited from

696
00:36:24,320 --> 00:36:28,370
the array project so the thing is that

697
00:36:28,370 --> 00:36:31,190
because I swap out the prototype like

698
00:36:31,190 --> 00:36:34,160
the array stuff is gone so only the

699
00:36:34,160 --> 00:36:36,560
properties of the object is still there

700
00:36:36,560 --> 00:36:38,540
but none of the properties from the

701
00:36:38,540 --> 00:36:40,550
prototype it had earlier so all the

702
00:36:40,550 --> 00:36:42,290
array stuff is gone so I just need to

703
00:36:42,290 --> 00:36:45,980
add it back in okay so you're asking why

704
00:36:45,980 --> 00:36:47,600
I don't just add all of the arraignment

705
00:36:47,600 --> 00:36:51,050
right the reason why is because some of

706
00:36:51,050 --> 00:36:53,330
the jQuery API names are clashing with

707
00:36:53,330 --> 00:36:56,930
the API functions for example filter so

708
00:36:56,930 --> 00:37:00,350
I need to manually select what I copy

709
00:37:00,350 --> 00:37:05,570
over so Brandon's question is why the

710
00:37:05,570 --> 00:37:08,810
hell am I using underscore underscore

711
00:37:08,810 --> 00:37:11,930
proto underscore and let's go so it yes

712
00:37:11,930 --> 00:37:13,910
it helps in code size I think it helps

713
00:37:13,910 --> 00:37:15,500
in speed because it will not have to

714
00:37:15,500 --> 00:37:17,720
manually copy copy like stuff around so

715
00:37:17,720 --> 00:37:19,820
just because they already have an array

716
00:37:19,820 --> 00:37:22,700
and I want an array-like a structure

717
00:37:22,700 --> 00:37:24,950
later so I just swap out the prototype

718
00:37:24,950 --> 00:37:28,180
it works fine works really really

719
00:37:28,180 --> 00:37:32,900
efficient also the okay Brian also says

720
00:37:32,900 --> 00:37:36,050
the insert a Jason element is coming in

721
00:37:36,050 --> 00:37:38,600
Firefox so soon it will be firefox

722
00:37:38,600 --> 00:37:42,380
mobile compatible I hope so so i think

723
00:37:42,380 --> 00:37:44,960
yes i would take patches to make it work

724
00:37:44,960 --> 00:37:47,360
in firefox however i will problem it

725
00:37:47,360 --> 00:37:49,310
would be good to provide it like as an

726
00:37:49,310 --> 00:37:52,460
add-on so in case you don't need to

727
00:37:52,460 --> 00:37:54,470
support like firefox mobile or whatever

728
00:37:54,470 --> 00:37:58,790
you can just use the basically i think

729
00:37:58,790 --> 00:38:00,110
there's already a pitch in there

730
00:38:00,110 --> 00:38:02,930
somewhere it's it's a it's like a

731
00:38:02,930 --> 00:38:05,810
polyfill for firefox to support the

732
00:38:05,810 --> 00:38:09,020
proprietary feature from IE the insert

733
00:38:09,020 --> 00:38:12,560
adjacent HTML or element function so

734
00:38:12,560 --> 00:38:14,540
that would be a good like add-on for it

735
00:38:14,540 --> 00:38:17,300
but i don't think most people that use

736
00:38:17,300 --> 00:38:20,300
it actually need to do that you know

737
00:38:20,300 --> 00:38:26,300
what i mean it's it's really the lights

738
00:38:26,300 --> 00:38:27,980
are extremely bright if you stand up

739
00:38:27,980 --> 00:38:31,340
here it's kind of crazy any more

740
00:38:31,340 --> 00:38:33,750
questions

741
00:38:33,760 --> 00:38:42,829
nope that's it thank you happy trails to

