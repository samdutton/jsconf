1
00:00:08,360 --> 00:00:10,530

good morning everyone I think it's still

2
00:00:10,530 --> 00:00:13,049
morning my name is prasanna kanagasabai

3
00:00:13,049 --> 00:00:15,509
I work for a company called thought

4
00:00:15,509 --> 00:00:17,220
works I have been a pen tester for a

5
00:00:17,220 --> 00:00:21,539
long time pretty much my I've been

6
00:00:21,539 --> 00:00:23,189
speaking at a few conferences in India

7
00:00:23,189 --> 00:00:25,470
started I just moved to singapore so I

8
00:00:25,470 --> 00:00:26,849
just started giving some conferences

9
00:00:26,849 --> 00:00:32,279
here we also run a group called the null

10
00:00:32,279 --> 00:00:35,160
which specializes in hacking and

11
00:00:35,160 --> 00:00:36,840
security on the offensive side on the

12
00:00:36,840 --> 00:00:39,329
defensive side and I am one of the

13
00:00:39,329 --> 00:00:41,820
moderators on that one I'm available at

14
00:00:41,820 --> 00:00:46,170
on twitter at the rate prasanna in that

15
00:00:46,170 --> 00:00:48,450
my mandatory interaction let's move to

16
00:00:48,450 --> 00:00:50,280
that shall talk what I'm going to be

17
00:00:50,280 --> 00:00:53,910
talking about is a today a gentleman

18
00:00:53,910 --> 00:00:56,579
spoke I forgot his name sorry about

19
00:00:56,579 --> 00:00:58,920
different classifications of security I

20
00:00:58,920 --> 00:01:01,140
want to concentrate on one specific one

21
00:01:01,140 --> 00:01:03,359
which is available because it's a

22
00:01:03,359 --> 00:01:05,250
JavaScript session I wanted to

23
00:01:05,250 --> 00:01:08,460
concentrate on JavaScript and one of the

24
00:01:08,460 --> 00:01:12,030
most craziest bugs that we see today as

25
00:01:12,030 --> 00:01:14,790
pen testers is Dom exercise things are

26
00:01:14,790 --> 00:01:17,820
changing a lot in the environments how

27
00:01:17,820 --> 00:01:20,460
we build stuff applications are moving

28
00:01:20,460 --> 00:01:23,820
more from very heavy server-side to more

29
00:01:23,820 --> 00:01:25,920
client side also so it effectively

30
00:01:25,920 --> 00:01:28,259
brings that we might have an attack

31
00:01:28,259 --> 00:01:30,240
vector inside the client side also so

32
00:01:30,240 --> 00:01:31,920
today we have code that comes in picks

33
00:01:31,920 --> 00:01:33,840
up information changes at the client

34
00:01:33,840 --> 00:01:35,460
side itself which could effectively

35
00:01:35,460 --> 00:01:39,060
create a dom xss one of the important

36
00:01:39,060 --> 00:01:41,009
concepts on da mixes is source and sinks

37
00:01:41,009 --> 00:01:44,040
we're going to discuss that also what

38
00:01:44,040 --> 00:01:46,530
because it's a what I had called this

39
00:01:46,530 --> 00:01:50,520
call sorry a presentation the a pen

40
00:01:50,520 --> 00:01:51,930
testers perspective I would be

41
00:01:51,930 --> 00:01:53,729
discussing some of the issues that I

42
00:01:53,729 --> 00:01:55,290
have found some of the issues that

43
00:01:55,290 --> 00:01:56,670
others are found and some things which

44
00:01:56,670 --> 00:01:58,049
are very interesting some of that one

45
00:01:58,049 --> 00:02:01,920
and JavaScript being so huge and

46
00:02:01,920 --> 00:02:03,450
somewhere of data we want to create some

47
00:02:03,450 --> 00:02:05,070
automation in there and I wanted to work

48
00:02:05,070 --> 00:02:06,780
on a specific tool created by a friend

49
00:02:06,780 --> 00:02:12,670
of mine and I would demo that too

50
00:02:12,680 --> 00:02:15,030
this was one of the recent payloads that

51
00:02:15,030 --> 00:02:19,860
I had created this is actually a payload

52
00:02:19,860 --> 00:02:22,050
that gave me administrative access on

53
00:02:22,050 --> 00:02:23,250
one of the applications that we were

54
00:02:23,250 --> 00:02:26,160
working on it's actually a file it's a

55
00:02:26,160 --> 00:02:29,340
file name this is what I'm going to be

56
00:02:29,340 --> 00:02:31,170
deciphering the whole thing and what is

57
00:02:31,170 --> 00:02:34,900
it what happened and stuff like that

58
00:02:34,910 --> 00:02:37,710
before we get into it a little bit about

59
00:02:37,710 --> 00:02:42,270
what is Dom excesses itself most of the

60
00:02:42,270 --> 00:02:43,650
people understand what is cross site

61
00:02:43,650 --> 00:02:45,360
scripting cross-site scripting to go too

62
00:02:45,360 --> 00:02:47,460
much into it it's effectively we're in a

63
00:02:47,460 --> 00:02:49,440
malicious user could send some input

64
00:02:49,440 --> 00:02:52,020
send to the server process back and

65
00:02:52,020 --> 00:02:53,910
comes back asses and played back on the

66
00:02:53,910 --> 00:02:55,320
Dom it is effectively doing the Dom

67
00:02:55,320 --> 00:02:57,770
manipulation but when a doll mixes is

68
00:02:57,770 --> 00:03:00,270
the data doesn't go to the observer at

69
00:03:00,270 --> 00:03:02,940
all so there is a component that is

70
00:03:02,940 --> 00:03:04,709
there in the client-side itself which is

71
00:03:04,709 --> 00:03:06,990
picking up this data and making changes

72
00:03:06,990 --> 00:03:08,910
to the Dom itself which is why it was

73
00:03:08,910 --> 00:03:11,640
called the dharmic success the reason I

74
00:03:11,640 --> 00:03:14,130
like it is one of the reasons I love

75
00:03:14,130 --> 00:03:17,880
this thing is there is no way servers

76
00:03:17,880 --> 00:03:20,340
can detect it most of the security

77
00:03:20,340 --> 00:03:22,170
mechanisms that people implement are at

78
00:03:22,170 --> 00:03:24,150
the server side there is nothing at the

79
00:03:24,150 --> 00:03:26,130
client side at all so you could have an

80
00:03:26,130 --> 00:03:29,220
exploit gone into production and there

81
00:03:29,220 --> 00:03:31,500
is no way that a security administrator

82
00:03:31,500 --> 00:03:33,060
in the system can even find out about

83
00:03:33,060 --> 00:03:34,440
this because the payload is never

84
00:03:34,440 --> 00:03:38,670
reaching him ever just to give you a

85
00:03:38,670 --> 00:03:40,739
little bit of how a simple darkness

86
00:03:40,739 --> 00:03:42,360
looks like this is like a hollow world

87
00:03:42,360 --> 00:03:44,280
of dharmic stresses itself it's a very

88
00:03:44,280 --> 00:03:45,830
simple thing if you really look at it

89
00:03:45,830 --> 00:03:49,620
it's taking the location hash which

90
00:03:49,620 --> 00:03:51,330
basically is anything that you put after

91
00:03:51,330 --> 00:03:53,820
the hash slicing it basically so we want

92
00:03:53,820 --> 00:03:55,080
you don't want the hash you want to take

93
00:03:55,080 --> 00:03:57,180
that content out of that after that and

94
00:03:57,180 --> 00:03:59,340
you basically write a document dot write

95
00:03:59,340 --> 00:04:01,410
which basically would make a dom

96
00:04:01,410 --> 00:04:04,320
manipulation could anyone know what

97
00:04:04,320 --> 00:04:05,670
would be the exploit that if you want to

98
00:04:05,670 --> 00:04:10,440
do this what what would you send a

99
00:04:10,440 --> 00:04:13,650
simple JavaScript actually you could

100
00:04:13,650 --> 00:04:16,799
write an image tag with any crop your

101
00:04:16,799 --> 00:04:18,690
traditional exercise would totally work

102
00:04:18,690 --> 00:04:21,120
in this scenario I was thought I I

103
00:04:21,120 --> 00:04:25,040
forgot your name sorry for that

104
00:04:25,050 --> 00:04:27,370
some of the most important concepts when

105
00:04:27,370 --> 00:04:30,910
it comes to dom exercise we have two

106
00:04:30,910 --> 00:04:32,560
very very critical things that you

107
00:04:32,560 --> 00:04:35,170
really think of source and sings that's

108
00:04:35,170 --> 00:04:37,270
the simplest thing what is the source a

109
00:04:37,270 --> 00:04:40,900
source is a point of entry for a ten

110
00:04:40,900 --> 00:04:44,110
third input via malicious user what it

111
00:04:44,110 --> 00:04:46,330
effectively means is these are places

112
00:04:46,330 --> 00:04:48,820
which a malicious user can send input

113
00:04:48,820 --> 00:04:51,940
into the application itself as simple as

114
00:04:51,940 --> 00:04:55,210
that and what is a sink a sink is when

115
00:04:55,210 --> 00:04:56,830
you take this and manipulate the Dom

116
00:04:56,830 --> 00:05:00,130
it's as simple as that so one of the

117
00:05:00,130 --> 00:05:02,380
fundamentals things that when I was

118
00:05:02,380 --> 00:05:04,210
learning security probably a 10 years

119
00:05:04,210 --> 00:05:06,520
back a very good gentlemen taught me a

120
00:05:06,520 --> 00:05:09,040
simple principle security issues can be

121
00:05:09,040 --> 00:05:12,010
divided into two sets when data becomes

122
00:05:12,010 --> 00:05:14,470
code you have a major problem and when

123
00:05:14,470 --> 00:05:16,600
code becomes data it's as simple as that

124
00:05:16,600 --> 00:05:18,430
all security issues can go into these

125
00:05:18,430 --> 00:05:20,560
two lines effectively if you really

126
00:05:20,560 --> 00:05:22,900
think about it here most of the

127
00:05:22,900 --> 00:05:24,550
important component is there are ways

128
00:05:24,550 --> 00:05:27,280
there are Dom API is which allow that a

129
00:05:27,280 --> 00:05:29,740
user input which a string can be

130
00:05:29,740 --> 00:05:31,600
converted into a dorm component itself

131
00:05:31,600 --> 00:05:33,550
that's what the fundamental problem

132
00:05:33,550 --> 00:05:36,340
comes in and this where Dom exercis is

133
00:05:36,340 --> 00:05:43,000
all about a very good location of what

134
00:05:43,000 --> 00:05:44,410
are the source and sink says I have just

135
00:05:44,410 --> 00:05:47,050
put up a very small laundry list not the

136
00:05:47,050 --> 00:05:48,640
biggest one I would actually suggest

137
00:05:48,640 --> 00:05:50,230
that you could go to the dharmic census

138
00:05:50,230 --> 00:05:52,110
Vicky it has a more exhaustive

139
00:05:52,110 --> 00:05:54,190
information on what are the different

140
00:05:54,190 --> 00:05:56,500
sources what are the different things

141
00:05:56,500 --> 00:05:59,890
that are available but if you really

142
00:05:59,890 --> 00:06:01,630
think about it I want to spend two

143
00:06:01,630 --> 00:06:05,070
minutes here to talk about some of the

144
00:06:05,070 --> 00:06:09,250
evac pretty much dead nobody uses evil

145
00:06:09,250 --> 00:06:11,770
these days while in my demos I have used

146
00:06:11,770 --> 00:06:15,160
evil because it's easier but if you

147
00:06:15,160 --> 00:06:17,860
really look out a set timeout and the

148
00:06:17,860 --> 00:06:20,290
function constructor can also execute

149
00:06:20,290 --> 00:06:24,390
code these also can be used as Tom sinks

150
00:06:24,390 --> 00:06:26,710
that's something that keeps missing all

151
00:06:26,710 --> 00:06:28,510
and the eternal most important is the

152
00:06:28,510 --> 00:06:31,540
inner HTML and outer HTML these could be

153
00:06:31,540 --> 00:06:33,010
effectively be used to change your Dom

154
00:06:33,010 --> 00:06:35,280
which is why it's a sink there

155
00:06:35,280 --> 00:06:38,880
okay now let's get into the actual fun

156
00:06:38,880 --> 00:06:41,400
of things recently I was been testing

157
00:06:41,400 --> 00:06:43,770
one of an application wherein we found

158
00:06:43,770 --> 00:06:48,210
Adamek sucess but there were two

159
00:06:48,210 --> 00:06:50,310
scenarios that were noticed here it was

160
00:06:50,310 --> 00:06:52,800
basically said that the application or

161
00:06:52,800 --> 00:06:55,560
this bug is detected only inside an

162
00:06:55,560 --> 00:06:58,230
authenticated session we take care of a

163
00:06:58,230 --> 00:07:00,630
lot of security controls in there the

164
00:07:00,630 --> 00:07:03,419
application cannot be put inside I frame

165
00:07:03,419 --> 00:07:04,950
so that you cannot do and self only

166
00:07:04,950 --> 00:07:06,240
exercise and stuff like that so

167
00:07:06,240 --> 00:07:08,460
effectively saying that hey this is a

168
00:07:08,460 --> 00:07:10,560
very low priority bug here yes we agreed

169
00:07:10,560 --> 00:07:13,380
sir bug but it's not a bug and the other

170
00:07:13,380 --> 00:07:14,970
thing that they told me was we

171
00:07:14,970 --> 00:07:16,380
understand this is the file upload which

172
00:07:16,380 --> 00:07:17,610
is what I showed you a few minutes back

173
00:07:17,610 --> 00:07:21,450
and they said it's a file name what will

174
00:07:21,450 --> 00:07:24,240
you do maximum with this all the special

175
00:07:24,240 --> 00:07:26,190
characters that you need to put inside a

176
00:07:26,190 --> 00:07:28,260
file name or blocked by the operating

177
00:07:28,260 --> 00:07:30,630
system how would you even create an

178
00:07:30,630 --> 00:07:33,930
exploit around this so this were the two

179
00:07:33,930 --> 00:07:35,460
challenges that season the problem is

180
00:07:35,460 --> 00:07:36,870
that the developers did not tell me it's

181
00:07:36,870 --> 00:07:38,820
a nota but they don't know yes we will

182
00:07:38,820 --> 00:07:40,620
fix this issue but it's a very low

183
00:07:40,620 --> 00:07:42,810
priority issue the problem with the low

184
00:07:42,810 --> 00:07:44,729
priority issues it gets pushed off and

185
00:07:44,729 --> 00:07:47,790
it gets slower to come in and the

186
00:07:47,790 --> 00:07:49,620
application needs to go life and I was

187
00:07:49,620 --> 00:07:52,440
worried that it could compromise so I

188
00:07:52,440 --> 00:07:56,880
had to create an exploit before we go to

189
00:07:56,880 --> 00:07:58,860
win let me show you a demo of the actual

190
00:07:58,860 --> 00:08:05,130
exploitation itself so I basically

191
00:08:05,130 --> 00:08:08,010
created a test application because I

192
00:08:08,010 --> 00:08:09,539
can't show you the actual application

193
00:08:09,539 --> 00:08:12,240
itself a lot of legalities and stuff

194
00:08:12,240 --> 00:08:13,620
like that I can't show you the actual

195
00:08:13,620 --> 00:08:16,229
application so let me show you a simple

196
00:08:16,229 --> 00:08:19,590
thing pretty much similar like this

197
00:08:19,590 --> 00:08:28,020
we're in a user would take a a file name

198
00:08:28,020 --> 00:08:30,450
and the file name was being reflected so

199
00:08:30,450 --> 00:08:32,010
what the developer did was he just took

200
00:08:32,010 --> 00:08:34,680
the file name he trusted it and he just

201
00:08:34,680 --> 00:08:36,539
placed it on the DOM and effectively it

202
00:08:36,539 --> 00:08:38,610
created a cross-site scripting which is

203
00:08:38,610 --> 00:08:40,650
the Dom exercise but the problem now is

204
00:08:40,650 --> 00:08:42,360
the one that we discussed how do you

205
00:08:42,360 --> 00:08:44,850
weaponize this exploit this is where it

206
00:08:44,850 --> 00:08:48,840
came in let me show you something

207
00:08:48,840 --> 00:08:51,060
how many of you know of a amazing tool

208
00:08:51,060 --> 00:08:58,410
called beef okay this is beef beef

209
00:08:58,410 --> 00:09:01,320
allows you to control browsers it's an

210
00:09:01,320 --> 00:09:06,060
amazing tool when so a lot of cross-site

211
00:09:06,060 --> 00:09:07,530
scripting and I know people think that

212
00:09:07,530 --> 00:09:09,300
it's just alert boxes it's not really

213
00:09:09,300 --> 00:09:11,190
alert boxes it gives me capability run

214
00:09:11,190 --> 00:09:12,720
execute JavaScript that's the real

215
00:09:12,720 --> 00:09:15,630
problem to prove a point I wanted to

216
00:09:15,630 --> 00:09:16,860
show that hey I'm going to control your

217
00:09:16,860 --> 00:09:24,990
browser so let's do this so I'm going to

218
00:09:24,990 --> 00:09:33,050
take the actual exploit all right either

219
00:09:33,050 --> 00:09:35,040
everything about your information of

220
00:09:35,040 --> 00:09:37,050
your browser if it seemed obvious

221
00:09:37,050 --> 00:09:39,240
localhost here but it could be anywhere

222
00:09:39,240 --> 00:09:41,250
across the globe if if it had gone to

223
00:09:41,250 --> 00:09:43,530
production thankfully we fixed it after

224
00:09:43,530 --> 00:09:46,950
this demo that was done let me show you

225
00:09:46,950 --> 00:09:58,860
something let me show off a little bit

226
00:09:58,870 --> 00:10:01,540
do you see the CSR of token there this

227
00:10:01,540 --> 00:10:03,400
was a rails application so rails by

228
00:10:03,400 --> 00:10:06,580
default user CSR of protection so just

229
00:10:06,580 --> 00:10:07,660
by a cross-site scripting I could

230
00:10:07,660 --> 00:10:09,790
basically capture that what really was

231
00:10:09,790 --> 00:10:30,140
more crazy for them was the prompt

232
00:10:30,150 --> 00:10:32,700
it would actually send messages you can

233
00:10:32,700 --> 00:10:35,010
craft HTML you can create whatever you

234
00:10:35,010 --> 00:10:37,110
want beef allows you to do anything that

235
00:10:37,110 --> 00:10:38,850
you really think about that's the power

236
00:10:38,850 --> 00:10:41,820
of this one coming back to the exploit I

237
00:10:41,820 --> 00:10:48,330
may go back to the presentation okay so

238
00:10:48,330 --> 00:10:50,850
if you look at this how did I solve the

239
00:10:50,850 --> 00:10:52,650
problem the two problems that were there

240
00:10:52,650 --> 00:10:55,890
the application being internal it also

241
00:10:55,890 --> 00:10:57,230
had one of the features that the

242
00:10:57,230 --> 00:11:00,630
administrators of this application could

243
00:11:00,630 --> 00:11:03,930
accept USB disks from people and they

244
00:11:03,930 --> 00:11:06,270
could have image files and they had to

245
00:11:06,270 --> 00:11:07,770
upload these images and they had to do

246
00:11:07,770 --> 00:11:09,090
some work with it that was the

247
00:11:09,090 --> 00:11:11,130
functionality so I had a way that I

248
00:11:11,130 --> 00:11:12,480
could take my exploit to the

249
00:11:12,480 --> 00:11:15,300
administrator itself second problem how

250
00:11:15,300 --> 00:11:17,520
do you deal with special characters not

251
00:11:17,520 --> 00:11:19,020
being allowed by the operating system

252
00:11:19,020 --> 00:11:20,850
itself because I have to write a file

253
00:11:20,850 --> 00:11:22,860
and put it on the USB disk and give it

254
00:11:22,860 --> 00:11:24,510
to the administrator how do you solve

255
00:11:24,510 --> 00:11:26,730
that problem again JavaScript if you

256
00:11:26,730 --> 00:11:29,790
really look at it all I did was I made I

257
00:11:29,790 --> 00:11:33,320
exploit converted it into base64 and

258
00:11:33,320 --> 00:11:36,540
used to the a to b to do the job so then

259
00:11:36,540 --> 00:11:39,600
i sent it to eval to execute it's an as

260
00:11:39,600 --> 00:11:43,740
simple as activity as that but in this i

261
00:11:43,740 --> 00:11:45,240
found some very interesting things that

262
00:11:45,240 --> 00:11:48,360
came out of it evil generally supposed

263
00:11:48,360 --> 00:11:51,690
to run arbitrary string which can be

264
00:11:51,690 --> 00:11:54,060
evaluated as javascript i did not work

265
00:11:54,060 --> 00:11:57,930
it wasted an hour of working with it i

266
00:11:57,930 --> 00:12:00,840
realized that when you use eval in a

267
00:12:00,840 --> 00:12:04,230
file attribute it does not work so what

268
00:12:04,230 --> 00:12:05,970
I had to do was if you look at the first

269
00:12:05,970 --> 00:12:09,510
one I changed evil 2 is equal to eval

270
00:12:09,510 --> 00:12:12,180
and then executed it with evil 2 and it

271
00:12:12,180 --> 00:12:14,910
simply works so some controls that the

272
00:12:14,910 --> 00:12:16,710
browser started putting in could be just

273
00:12:16,710 --> 00:12:20,860
bypassed using a simple fix like that

274
00:12:20,870 --> 00:12:24,290
that was what the first exploit was

275
00:12:24,290 --> 00:12:29,040
moving on JavaScript templating engines

276
00:12:29,040 --> 00:12:31,890
so these days we have to work with a lot

277
00:12:31,890 --> 00:12:34,470
of templating engines some of it are not

278
00:12:34,470 --> 00:12:38,460
necessarily the top end of it sometimes

279
00:12:38,460 --> 00:12:40,140
we even come and scenarios where people

280
00:12:40,140 --> 00:12:41,610
have created their own templating

281
00:12:41,610 --> 00:12:43,380
engines what are these templating

282
00:12:43,380 --> 00:12:44,040
engines these are

283
00:12:44,040 --> 00:12:45,899
very simple there is a piece of data

284
00:12:45,899 --> 00:12:47,220
that is coming in it could be through a

285
00:12:47,220 --> 00:12:49,920
jason and the developer has basically

286
00:12:49,920 --> 00:12:53,279
said that there are patterns within that

287
00:12:53,279 --> 00:12:55,649
he has written some patterns the data is

288
00:12:55,649 --> 00:12:57,600
going to be that is received from the

289
00:12:57,600 --> 00:12:59,579
user or could be whatever method is

290
00:12:59,579 --> 00:13:01,560
going to be filtered and then these

291
00:13:01,560 --> 00:13:06,670
placeholders are going to be changed and

292
00:13:06,680 --> 00:13:09,149
basically this was a beautiful exploit

293
00:13:09,149 --> 00:13:10,620
by a friend of mine called nafisa Hamid

294
00:13:10,620 --> 00:13:13,350
we initially found out by a gentleman

295
00:13:13,350 --> 00:13:15,209
called Mario the links are provided

296
00:13:15,209 --> 00:13:17,910
there so what this basically does is

297
00:13:17,910 --> 00:13:20,880
then some filtering wherein the data is

298
00:13:20,880 --> 00:13:22,259
coming back and there is some filtering

299
00:13:22,259 --> 00:13:25,170
that is there but how do you bypass this

300
00:13:25,170 --> 00:13:26,730
filtering that is what this demo is all

301
00:13:26,730 --> 00:13:36,550
about

302
00:13:36,560 --> 00:13:40,830
cancel this so I have not written this

303
00:13:40,830 --> 00:13:44,100
piece of application into my blog or

304
00:13:44,100 --> 00:13:46,260
test application yet it's still in my

305
00:13:46,260 --> 00:13:49,529
jsfiddle but let's do this one so if you

306
00:13:49,529 --> 00:13:51,300
look at this piece of code it's a very

307
00:13:51,300 --> 00:13:53,670
simple thing it's going to take my users

308
00:13:53,670 --> 00:13:57,540
input there is a placeholder here which

309
00:13:57,540 --> 00:13:58,680
is could be like your templating engine

310
00:13:58,680 --> 00:14:01,800
which will change the placeholder please

311
00:14:01,800 --> 00:14:03,750
notice that there is a filtering that is

312
00:14:03,750 --> 00:14:06,149
done the filtering function here is a

313
00:14:06,149 --> 00:14:07,890
standard filtering function which

314
00:14:07,890 --> 00:14:09,330
basically will mean sure that the data

315
00:14:09,330 --> 00:14:13,050
output you put in so basically this is

316
00:14:13,050 --> 00:14:16,020
going to take a value and make it a

317
00:14:16,020 --> 00:14:20,040
image' SRC the data if you notice the

318
00:14:20,040 --> 00:14:21,660
placeholder is between two single puts

319
00:14:21,660 --> 00:14:24,120
so to break out of this context you have

320
00:14:24,120 --> 00:14:27,120
to break out of a single quote and then

321
00:14:27,120 --> 00:14:29,370
you can pass your standard on error or

322
00:14:29,370 --> 00:14:30,450
something like that which will execute

323
00:14:30,450 --> 00:14:33,360
your JavaScript but please notice that

324
00:14:33,360 --> 00:14:35,220
there is a filtering condition here

325
00:14:35,220 --> 00:14:37,410
which basically says that if there is a

326
00:14:37,410 --> 00:14:39,630
single pole double quote or any of the

327
00:14:39,630 --> 00:14:41,250
angle of brackets that are there which

328
00:14:41,250 --> 00:14:42,540
are what are the ones that you need to

329
00:14:42,540 --> 00:14:44,459
break out of this one text are being

330
00:14:44,459 --> 00:14:47,010
removed now how do you break out of this

331
00:14:47,010 --> 00:14:54,180
one let's just do a small demo of it see

332
00:14:54,180 --> 00:14:55,980
this one if you see this it's basically

333
00:14:55,980 --> 00:14:58,890
saying image' SRC into whatever value

334
00:14:58,890 --> 00:15:01,589
I've crossed it and gone now let's say

335
00:15:01,589 --> 00:15:03,240
we try break out of this one the

336
00:15:03,240 --> 00:15:05,250
standard one that any car side scripting

337
00:15:05,250 --> 00:15:16,960
I would start with something like this

338
00:15:16,970 --> 00:15:19,250
please notice it is still within the

339
00:15:19,250 --> 00:15:21,980
single quotes it's not gone out how do

340
00:15:21,980 --> 00:15:25,310
you break out of this context if you do

341
00:15:25,310 --> 00:15:27,800
not break out of this context the filter

342
00:15:27,800 --> 00:15:32,990
is actually working that means that the

343
00:15:32,990 --> 00:15:34,459
country the control that the developer

344
00:15:34,459 --> 00:15:36,850
has placed is actually good and it works

345
00:15:36,850 --> 00:15:39,649
but there is a problem here and which is

346
00:15:39,649 --> 00:15:43,189
what Mario had pointed out that browsers

347
00:15:43,189 --> 00:15:45,199
behave a little different there is

348
00:15:45,199 --> 00:15:47,540
something called a mutation XSS which

349
00:15:47,540 --> 00:15:51,199
basically means that how let me show

350
00:15:51,199 --> 00:15:54,769
this one and let me then explain about

351
00:15:54,769 --> 00:16:13,470
it

352
00:16:13,480 --> 00:16:17,230
please notice the difference now see

353
00:16:17,230 --> 00:16:20,079
what has happened there is actually a

354
00:16:20,079 --> 00:16:21,699
difference in the way the output has

355
00:16:21,699 --> 00:16:23,410
come back last time the data used to

356
00:16:23,410 --> 00:16:25,209
come within the single quotes itself but

357
00:16:25,209 --> 00:16:25,959
this time there is a small difference

358
00:16:25,959 --> 00:16:31,839
there and let's click it yeah alert nine

359
00:16:31,839 --> 00:16:33,610
which effectively says I execute

360
00:16:33,610 --> 00:16:36,550
javascript in your context now what is

361
00:16:36,550 --> 00:16:39,760
the why was this happen it happened

362
00:16:39,760 --> 00:16:42,670
because how JavaScript string replace

363
00:16:42,670 --> 00:16:45,910
function works in the ACMA script the

364
00:16:45,910 --> 00:16:48,070
most of the string replaced functions

365
00:16:48,070 --> 00:16:50,350
take two parameters it takes one input

366
00:16:50,350 --> 00:16:52,720
the output change whatever it is there

367
00:16:52,720 --> 00:16:54,790
but across prepped and JavaScript our

368
00:16:54,790 --> 00:16:56,110
little different they behave a little

369
00:16:56,110 --> 00:16:58,570
differently what in this case what it

370
00:16:58,570 --> 00:17:02,050
has done is when you put a dollar or

371
00:17:02,050 --> 00:17:05,559
backtick what happens is it can't it

372
00:17:05,559 --> 00:17:07,990
Matt it returns back the string that it

373
00:17:07,990 --> 00:17:11,589
matched in this case the image SRC

374
00:17:11,589 --> 00:17:14,559
single quote and it gives it back and

375
00:17:14,559 --> 00:17:16,720
when we added the other components we

376
00:17:16,720 --> 00:17:18,429
are effectively closing the whole single

377
00:17:18,429 --> 00:17:20,679
time the whole image tag and because

378
00:17:20,679 --> 00:17:23,559
it's a whole image SRC equal to a single

379
00:17:23,559 --> 00:17:25,449
quote and then I error thing the browser

380
00:17:25,449 --> 00:17:27,160
will basically render the image it will

381
00:17:27,160 --> 00:17:30,040
try reading that file that is they're

382
00:17:30,040 --> 00:17:31,299
effectively it's not going to get the

383
00:17:31,299 --> 00:17:32,530
file so it's going to go into that on

384
00:17:32,530 --> 00:17:35,530
error and execute this itself that was

385
00:17:35,530 --> 00:17:37,570
the whole point see the reason being

386
00:17:37,570 --> 00:17:38,919
with templating instance is what we

387
00:17:38,919 --> 00:17:40,720
notice is most of the time filters like

388
00:17:40,720 --> 00:17:43,059
this which thinks that the context is

389
00:17:43,059 --> 00:17:44,799
within a single quote or a singer with a

390
00:17:44,799 --> 00:17:46,480
double code which cannot be escaped it

391
00:17:46,480 --> 00:17:48,760
is very secure but that's not the case

392
00:17:48,760 --> 00:17:51,160
you need to know about how acma script

393
00:17:51,160 --> 00:17:53,530
works understanding how the string

394
00:17:53,530 --> 00:17:55,000
replaced on most of the templating is

395
00:17:55,000 --> 00:17:56,200
actually using a string replace

396
00:17:56,200 --> 00:17:57,820
functions how do you basically

397
00:17:57,820 --> 00:18:06,250
understand how the system works there so

398
00:18:06,250 --> 00:18:07,900
that was what it is I have given in some

399
00:18:07,900 --> 00:18:09,790
more information of where it is and you

400
00:18:09,790 --> 00:18:11,460
could pick it up from there and

401
00:18:11,460 --> 00:18:14,770
information on that moving on this is

402
00:18:14,770 --> 00:18:16,929
another very interesting exploit that

403
00:18:16,929 --> 00:18:19,000
came up recently with hacker 1 and

404
00:18:19,000 --> 00:18:21,669
hacker one basically said hey we were

405
00:18:21,669 --> 00:18:23,260
affected by this we gave out a bug

406
00:18:23,260 --> 00:18:25,179
bounty and i forgot the gentleman's name

407
00:18:25,179 --> 00:18:26,730
who found it out

408
00:18:26,730 --> 00:18:27,960
and there was a good amount of payment

409
00:18:27,960 --> 00:18:30,210
for this one I found this very

410
00:18:30,210 --> 00:18:32,730
interesting because some when you see

411
00:18:32,730 --> 00:18:35,940
this you really see the power of how

412
00:18:35,940 --> 00:18:40,200
browsers really work let's get back to

413
00:18:40,200 --> 00:18:58,980
this one so let me create a new blog

414
00:18:58,990 --> 00:19:00,910
please notice I've just created a simple

415
00:19:00,910 --> 00:19:05,050
one test test just one and there is a

416
00:19:05,050 --> 00:19:06,850
link to something here and that's what

417
00:19:06,850 --> 00:19:10,660
the idea is and you submit it if you see

418
00:19:10,660 --> 00:19:13,840
that it's a simple blog with probably

419
00:19:13,840 --> 00:19:15,130
some references that are given or

420
00:19:15,130 --> 00:19:19,920
something like that you click the link

421
00:19:19,920 --> 00:19:29,450
did you see any change

422
00:19:29,460 --> 00:19:35,370
look at the parent the parent can be

423
00:19:35,370 --> 00:19:38,549
controlled the parent was effectively

424
00:19:38,549 --> 00:19:43,049
127 001 8,000 port right i want to made

425
00:19:43,049 --> 00:19:45,750
it go to beef I just has an idea showing

426
00:19:45,750 --> 00:19:47,190
your beef project effectively I could

427
00:19:47,190 --> 00:19:49,080
have created a HTML page and exploited

428
00:19:49,080 --> 00:19:50,789
this guy with that beef again but I

429
00:19:50,789 --> 00:19:52,140
didn't want to show that i wanted to

430
00:19:52,140 --> 00:19:53,730
show something different which is why i

431
00:19:53,730 --> 00:19:55,649
chose to use put the beef project itself

432
00:19:55,649 --> 00:19:57,330
just to give you an idea what can be

433
00:19:57,330 --> 00:20:00,590
achieved here imagine this a fake

434
00:20:00,590 --> 00:20:03,480
banking application all you know it is

435
00:20:03,480 --> 00:20:04,919
you went to a blog you click the link

436
00:20:04,919 --> 00:20:07,020
and you see your banking and with

437
00:20:07,020 --> 00:20:09,029
technology our attack sequences like tab

438
00:20:09,029 --> 00:20:12,029
nabbing which is you have so many tabs

439
00:20:12,029 --> 00:20:13,980
open i have multiple tabs when I work

440
00:20:13,980 --> 00:20:16,289
with and he just put a fav icon there it

441
00:20:16,289 --> 00:20:17,730
will look like you are into your gmail

442
00:20:17,730 --> 00:20:19,470
or you are on internet browsing site

443
00:20:19,470 --> 00:20:21,390
something like that an effect you could

444
00:20:21,390 --> 00:20:23,159
be just giving away your credentials to

445
00:20:23,159 --> 00:20:27,779
someone else how simple is that how that

446
00:20:27,779 --> 00:20:30,510
was the other very interesting exploit

447
00:20:30,510 --> 00:20:34,860
that I worked with the one that also

448
00:20:34,860 --> 00:20:37,289
that I wanted to show on my last one

449
00:20:37,289 --> 00:20:38,490
that I wanted to show about was

450
00:20:38,490 --> 00:20:41,370
something called a window dot name what

451
00:20:41,370 --> 00:20:43,770
is window dot name is one of the very

452
00:20:43,770 --> 00:20:47,460
unique properties how many of you know

453
00:20:47,460 --> 00:20:49,380
it's actually a cross-domain accessible

454
00:20:49,380 --> 00:20:57,270
property okay do you see a risk because

455
00:20:57,270 --> 00:21:02,580
of this yahoo had a huge DOM exercise a

456
00:21:02,580 --> 00:21:05,250
long time back using this PM pacific one

457
00:21:05,250 --> 00:21:06,809
it's fixed at this moment it doesn't

458
00:21:06,809 --> 00:21:09,870
have it anymore but just using a window

459
00:21:09,870 --> 00:21:14,610
dot name let me show you a demo it's a

460
00:21:14,610 --> 00:21:17,520
very simple one by the way before i go

461
00:21:17,520 --> 00:21:18,960
into this one i forgot that i didn't

462
00:21:18,960 --> 00:21:20,429
show you what i did when the previous

463
00:21:20,429 --> 00:21:24,840
one the previous one it's as simple as

464
00:21:24,840 --> 00:21:27,899
this it was again using a window dot

465
00:21:27,899 --> 00:21:31,770
opener dot location property what i did

466
00:21:31,770 --> 00:21:35,419
was i just have so once it landed on the

467
00:21:35,419 --> 00:21:39,389
attackers page it said that change the

468
00:21:39,389 --> 00:21:41,730
opener the opener in this case being the

469
00:21:41,730 --> 00:21:42,960
parent itself

470
00:21:42,960 --> 00:21:45,330
so effectively you can use this a child

471
00:21:45,330 --> 00:21:46,950
could basically change how the parent

472
00:21:46,950 --> 00:21:48,870
would behave that is what the previous

473
00:21:48,870 --> 00:21:50,340
one was sorry I didn't show you the last

474
00:21:50,340 --> 00:21:52,559
time the new one that I wanted to show

475
00:21:52,559 --> 00:21:56,970
you about is a very simple one something

476
00:21:56,970 --> 00:21:59,070
like this where in here what we're going

477
00:21:59,070 --> 00:22:00,990
to do is we are going to open a window

478
00:22:00,990 --> 00:22:04,919
itself or use JavaScript's window dot

479
00:22:04,919 --> 00:22:10,049
open to open another child case in this

480
00:22:10,049 --> 00:22:11,700
case so the last time we were at the

481
00:22:11,700 --> 00:22:13,799
blog page and we opened another

482
00:22:13,799 --> 00:22:15,600
application this time we are going to be

483
00:22:15,600 --> 00:22:19,080
at the attacker page and we are going to

484
00:22:19,080 --> 00:22:30,419
use the blog as my victim so I'm just

485
00:22:30,419 --> 00:22:42,240
going to close this go back here

486
00:22:42,250 --> 00:22:48,040
please notice here the page at 127 8,000

487
00:22:48,040 --> 00:22:53,320
is saying that hello to 90 80 it was 90

488
00:22:53,320 --> 00:22:56,770
80 which opened up this insecure blog

489
00:22:56,770 --> 00:22:59,740
right so effectively information that

490
00:22:59,740 --> 00:23:05,520
the 90 80 domain set was read by the

491
00:23:05,520 --> 00:23:07,540
insecure blog which is running on port

492
00:23:07,540 --> 00:23:11,590
8000 the rideau it is different same 127

493
00:23:11,590 --> 00:23:13,720
00 but i am sure most of you understand

494
00:23:13,720 --> 00:23:16,150
about same origin policy is and it is

495
00:23:16,150 --> 00:23:17,800
different domains it's effectively

496
00:23:17,800 --> 00:23:20,950
considered a different domain so data

497
00:23:20,950 --> 00:23:22,420
communication between the two are

498
00:23:22,420 --> 00:23:25,260
controlled and restricted and

499
00:23:25,260 --> 00:23:28,000
effectively what we did was we use this

500
00:23:28,000 --> 00:23:31,650
component here to basically say that I

501
00:23:31,650 --> 00:23:34,810
as a user I'm going to give you some

502
00:23:34,810 --> 00:23:41,110
data now you as a user is basically

503
00:23:41,110 --> 00:23:43,930
going to take this data and convert this

504
00:23:43,930 --> 00:23:49,090
I or read this data and sorry I lost of

505
00:23:49,090 --> 00:23:50,890
your thoughts there I was just looking

506
00:23:50,890 --> 00:23:53,980
at the time so what it basically is let

507
00:23:53,980 --> 00:23:55,900
me just go into this and show you how it

508
00:23:55,900 --> 00:24:03,510
actually happened

509
00:24:03,520 --> 00:24:09,230
as simple as that if you look at it even

510
00:24:09,230 --> 00:24:11,330
the Yahoo exploit had a similar one two

511
00:24:11,330 --> 00:24:13,700
functions if you if you think of it what

512
00:24:13,700 --> 00:24:17,360
I did was in the global space it took an

513
00:24:17,360 --> 00:24:19,580
even the data was picked up and being

514
00:24:19,580 --> 00:24:23,360
stored inside a variable called tag but

515
00:24:23,360 --> 00:24:26,120
a function called add also exists it

516
00:24:26,120 --> 00:24:27,710
could be a very simple thing in the real

517
00:24:27,710 --> 00:24:29,930
thing in yahoo what it happened was it

518
00:24:29,930 --> 00:24:34,730
was using their ad based JavaScript

519
00:24:34,730 --> 00:24:37,750
which was availing some components

520
00:24:37,750 --> 00:24:42,290
before sanitization and it also did at a

521
00:24:42,290 --> 00:24:45,020
different function the same object was

522
00:24:45,020 --> 00:24:47,480
being filled up with the value that is

523
00:24:47,480 --> 00:24:48,860
being filled in the top dot name

524
00:24:48,860 --> 00:24:50,930
doctored name is nothing but the same as

525
00:24:50,930 --> 00:24:52,730
window dot name it's just like an alias

526
00:24:52,730 --> 00:24:54,740
there so effectively whatever is there

527
00:24:54,740 --> 00:24:56,810
you could basically exploit it with it

528
00:24:56,810 --> 00:24:59,180
how do you exploit this very simple one

529
00:24:59,180 --> 00:25:02,090
if you notice this this is awaited you

530
00:25:02,090 --> 00:25:04,430
do a window dot open you basically set

531
00:25:04,430 --> 00:25:06,760
which URL you want to open and you sit

532
00:25:06,760 --> 00:25:09,800
the alert function or any JavaScript

533
00:25:09,800 --> 00:25:12,050
that is there and it will magically get

534
00:25:12,050 --> 00:25:15,950
popped up there this could be something

535
00:25:15,950 --> 00:25:17,810
that you could use to even do something

536
00:25:17,810 --> 00:25:19,760
called a Dom covering attacks I probably

537
00:25:19,760 --> 00:25:21,740
don't pronounce it properly what

538
00:25:21,740 --> 00:25:24,920
effectively it means is that when you

539
00:25:24,920 --> 00:25:30,860
can open an iframe as a child the child

540
00:25:30,860 --> 00:25:33,680
iframe can set variables or global

541
00:25:33,680 --> 00:25:37,730
variables inside your parent so imagine

542
00:25:37,730 --> 00:25:39,620
you have an application which loads or

543
00:25:39,620 --> 00:25:41,810
iframe the child I frame could set

544
00:25:41,810 --> 00:25:44,710
saying that hey my flag is equal to true

545
00:25:44,710 --> 00:25:47,150
what would happen is the parent has some

546
00:25:47,150 --> 00:25:48,470
control or structures which basically

547
00:25:48,470 --> 00:25:50,510
sees if the flag is true do some

548
00:25:50,510 --> 00:25:52,460
operations the child which is an

549
00:25:52,460 --> 00:25:54,560
untrusted component can do the similar

550
00:25:54,560 --> 00:25:56,900
attack and change values in the parent

551
00:25:56,900 --> 00:25:59,900
itself that was the power of it but you

552
00:25:59,900 --> 00:26:02,390
could see with controls like extreme

553
00:26:02,390 --> 00:26:04,100
options being in there you may want to

554
00:26:04,100 --> 00:26:05,600
say that hey that risk is getting

555
00:26:05,600 --> 00:26:11,659
reduced now

556
00:26:11,669 --> 00:26:14,770
now that we spoke about all this how do

557
00:26:14,770 --> 00:26:16,650
you how do you automate these things

558
00:26:16,650 --> 00:26:21,010
what is the thing that we are the point

559
00:26:21,010 --> 00:26:24,010
that I have so Java scripts are getting

560
00:26:24,010 --> 00:26:27,910
huge today we have applications let's

561
00:26:27,910 --> 00:26:30,039
say angular or a meat-eor which is so

562
00:26:30,039 --> 00:26:32,440
huge the amount of time that you can you

563
00:26:32,440 --> 00:26:34,720
do this manually can you go and check

564
00:26:34,720 --> 00:26:37,000
every component it's simply not possible

565
00:26:37,000 --> 00:26:39,039
the amount of interesting time we have

566
00:26:39,039 --> 00:26:42,010
is very less but we do need to guarantee

567
00:26:42,010 --> 00:26:45,490
code coverage we need to say that we are

568
00:26:45,490 --> 00:26:51,340
able to at least that is to some extent

569
00:26:51,340 --> 00:26:54,070
give some information saying that we are

570
00:26:54,070 --> 00:26:56,980
able to fix some of these issues how do

571
00:26:56,980 --> 00:26:59,799
we do it the solution is earlier there

572
00:26:59,799 --> 00:27:03,039
was a beautiful tool called Dom it a

573
00:27:03,039 --> 00:27:05,860
tool by stefano de pelo but it's just

574
00:27:05,860 --> 00:27:07,600
that you have to pay money for it I

575
00:27:07,600 --> 00:27:10,179
prefer to use folkish written by another

576
00:27:10,179 --> 00:27:13,690
friend called nafisa Hamid the reason I

577
00:27:13,690 --> 00:27:16,000
choose this is it's easier to use free

578
00:27:16,000 --> 00:27:21,130
what more can it be better so it works

579
00:27:21,130 --> 00:27:25,809
by all you need to do is it's basically

580
00:27:25,809 --> 00:27:30,090
a Chrome extension you go ahead and you

581
00:27:30,090 --> 00:27:33,070
put the application that you want let's

582
00:27:33,070 --> 00:27:38,140
say localhost let me just use 127 this

583
00:27:38,140 --> 00:27:44,650
time

584
00:27:44,660 --> 00:28:05,500
and just keep browsing

585
00:28:05,510 --> 00:28:08,030
if you keep noticing it will start

586
00:28:08,030 --> 00:28:10,580
seeing all your sources and sinks and

587
00:28:10,580 --> 00:28:13,640
keep displaying it to you see if it like

588
00:28:13,640 --> 00:28:15,830
look at it it basically says that hey I

589
00:28:15,830 --> 00:28:18,080
see a document dot cookie that is being

590
00:28:18,080 --> 00:28:19,940
said here which could be picked up I

591
00:28:19,940 --> 00:28:22,220
have a window dot name which is what

592
00:28:22,220 --> 00:28:23,870
effectively that application was doing

593
00:28:23,870 --> 00:28:26,240
it picks up every piece of information

594
00:28:26,240 --> 00:28:29,150
it basically how this works is he's

595
00:28:29,150 --> 00:28:31,130
hooked into every function that is there

596
00:28:31,130 --> 00:28:33,680
and it's please note this is not being

597
00:28:33,680 --> 00:28:34,910
statically done this is being

598
00:28:34,910 --> 00:28:37,220
dynamically done it is at real time

599
00:28:37,220 --> 00:28:39,170
analyzing what information it is there

600
00:28:39,170 --> 00:28:41,990
and it hooks into the actual function

601
00:28:41,990 --> 00:28:44,420
itself so let's say if evil is there it

602
00:28:44,420 --> 00:28:46,970
hooks into it and it sees that what is

603
00:28:46,970 --> 00:28:49,040
coming inside evil it also as the

604
00:28:49,040 --> 00:28:52,520
sources it marks the sources and and it

605
00:28:52,520 --> 00:28:54,980
marks even the sinks if it sees that a

606
00:28:54,980 --> 00:28:57,380
source that was entered is being

607
00:28:57,380 --> 00:28:59,660
detected at sync it will say that hey I

608
00:28:59,660 --> 00:29:01,160
have a source and a sink detected

609
00:29:01,160 --> 00:29:03,500
together and once you see it it brings

610
00:29:03,500 --> 00:29:05,630
it out here and when it detects that

611
00:29:05,630 --> 00:29:06,950
there is a Dom accesses the color

612
00:29:06,950 --> 00:29:11,120
changes and that is one of the a very

613
00:29:11,120 --> 00:29:12,800
easy way of doing some of these things

614
00:29:12,800 --> 00:29:15,200
so as a developer it could be as simple

615
00:29:15,200 --> 00:29:16,850
as that you know you run this

616
00:29:16,850 --> 00:29:18,440
application you finish all your

617
00:29:18,440 --> 00:29:20,120
application just keep running this tool

618
00:29:20,120 --> 00:29:22,580
and run Europe just browse through your

619
00:29:22,580 --> 00:29:24,530
application it will start telling you

620
00:29:24,530 --> 00:29:26,030
what are all your sources that are there

621
00:29:26,030 --> 00:29:27,380
it will also start telling you what are

622
00:29:27,380 --> 00:29:29,000
all your sinks it also will

623
00:29:29,000 --> 00:29:30,980
automatically start evaluating to tell

624
00:29:30,980 --> 00:29:35,660
you where are all the positive things

625
00:29:35,660 --> 00:29:37,220
that have actually happened where are

626
00:29:37,220 --> 00:29:39,260
the actual issues that have happened in

627
00:29:39,260 --> 00:29:42,920
this itself the other one that we are as

628
00:29:42,920 --> 00:29:45,560
a pen tester I like a lot is I can

629
00:29:45,560 --> 00:29:49,480
choose to put let's say window dot name

630
00:29:49,480 --> 00:29:53,110
and say window dot eval and I can say

631
00:29:53,110 --> 00:29:56,120
where are all the functions it's still

632
00:29:56,120 --> 00:29:58,280
not evaluated it here basically it will

633
00:29:58,280 --> 00:30:00,440
it will allow you to say huh so once

634
00:30:00,440 --> 00:30:05,210
again the output actually comes to your

635
00:30:05,210 --> 00:30:09,200
console so when you say identify you are

636
00:30:09,200 --> 00:30:10,970
effectively what it will show you is it

637
00:30:10,970 --> 00:30:13,280
will show you where all it sees that

638
00:30:13,280 --> 00:30:15,410
some source that has been picked up and

639
00:30:15,410 --> 00:30:18,200
it does it see a sink of the same input

640
00:30:18,200 --> 00:30:18,980
somewhere else

641
00:30:18,980 --> 00:30:22,160
and it helps as a mentor stuff to say

642
00:30:22,160 --> 00:30:24,169
that hey what are all the combinations

643
00:30:24,169 --> 00:30:26,030
of data that are there you have a chat

644
00:30:26,030 --> 00:30:27,650
with the developers you basically say

645
00:30:27,650 --> 00:30:29,000
hey what are the functions that you are

646
00:30:29,000 --> 00:30:30,650
using I can basically put those

647
00:30:30,650 --> 00:30:32,900
functions in here and weekly see so that

648
00:30:32,900 --> 00:30:34,429
i can guarantee some of these controls

649
00:30:34,429 --> 00:30:36,320
it doesn't take away your manual pen

650
00:30:36,320 --> 00:30:39,940
testing efforts but it it helps you to

651
00:30:39,940 --> 00:30:44,480
at least do some bits of it some of the

652
00:30:44,480 --> 00:30:53,690
other functions too I spoke about dom

653
00:30:53,690 --> 00:30:57,290
cobra wherein you can change the global

654
00:30:57,290 --> 00:30:59,570
variables right you can use this to find

655
00:30:59,570 --> 00:31:01,010
out what are all the different global

656
00:31:01,010 --> 00:31:02,870
variables that your system or this page

657
00:31:02,870 --> 00:31:05,330
on the 127 is basically using you can

658
00:31:05,330 --> 00:31:07,160
see that who is using them if any

659
00:31:07,160 --> 00:31:08,600
changes that are happening you can find

660
00:31:08,600 --> 00:31:19,250
them out from here

661
00:31:19,260 --> 00:31:22,080
but there are some known issues that are

662
00:31:22,080 --> 00:31:34,889
there like I'll show you something

663
00:31:34,899 --> 00:31:37,129
the same thing that I was working with

664
00:31:37,129 --> 00:31:39,940
doesn't seem to work when i use okish

665
00:31:39,940 --> 00:31:43,249
how do you figure that out is if you go

666
00:31:43,249 --> 00:31:46,789
to your thing here it tells you what are

667
00:31:46,789 --> 00:31:48,469
all the things that are hooked on you

668
00:31:48,469 --> 00:31:50,089
can even control some of these these are

669
00:31:50,089 --> 00:31:51,469
the parameters that you need to work

670
00:31:51,469 --> 00:31:55,099
with to like in this case I might have

671
00:31:55,099 --> 00:31:57,229
to tune some of these things basic

672
00:31:57,229 --> 00:31:58,879
reason is my application has not been

673
00:31:58,879 --> 00:32:00,649
written properly if you look at it every

674
00:32:00,649 --> 00:32:02,359
time I go to the new blog I have to

675
00:32:02,359 --> 00:32:04,009
refresh the page there because it's not

676
00:32:04,009 --> 00:32:06,829
properly written down yet I need to make

677
00:32:06,829 --> 00:32:12,259
those changes and doing some of these

678
00:32:12,259 --> 00:32:13,819
things okay should be able to help you

679
00:32:13,819 --> 00:32:26,299
there work with it so the insecure blog

680
00:32:26,299 --> 00:32:28,699
that I have is something that I and Alex

681
00:32:28,699 --> 00:32:31,339
are continues to work on it we are

682
00:32:31,339 --> 00:32:34,129
trying to put in as much Darmok senses

683
00:32:34,129 --> 00:32:36,349
that we find we try putting into them we

684
00:32:36,349 --> 00:32:39,139
start dumping or so the idea being is we

685
00:32:39,139 --> 00:32:40,940
want to learn ourselves so we try

686
00:32:40,940 --> 00:32:43,369
writing our own insecurities and try

687
00:32:43,369 --> 00:32:46,549
exploiting them like I'll the last one

688
00:32:46,549 --> 00:32:48,139
that I showed you about how templating

689
00:32:48,139 --> 00:32:50,209
engine works the idea that we have is we

690
00:32:50,209 --> 00:32:51,469
could create something like an avatar

691
00:32:51,469 --> 00:32:54,469
and which would update and real-time

692
00:32:54,469 --> 00:32:56,929
than avatar there which would have a

693
00:32:56,929 --> 00:32:58,819
simple filtering there and you could

694
00:32:58,819 --> 00:33:01,099
bypass that's the whole idea and it's

695
00:33:01,099 --> 00:33:03,819
available again at my github link there

696
00:33:03,819 --> 00:33:06,289
that's all pretty much I have to talk

697
00:33:06,289 --> 00:33:10,489
about and if any questions p % now thank

698
00:33:10,489 --> 00:33:14,859
you what's the solution for that

699
00:33:14,859 --> 00:33:17,690
underscore blank issue ah very good one

700
00:33:17,690 --> 00:33:19,429
sorry I didn't talk about it the fix is

701
00:33:19,429 --> 00:33:21,139
basically before you do a redirect

702
00:33:21,139 --> 00:33:23,869
basically set the window dot opener to

703
00:33:23,869 --> 00:33:26,629
null you set to the window dot opener to

704
00:33:26,629 --> 00:33:28,219
null effectively this problem will be

705
00:33:28,219 --> 00:33:30,379
solved that's the fix that hacker one is

