1
00:00:11,690 --> 00:00:14,180

all right hi everybody my name is Glen

2
00:00:14,180 --> 00:00:18,619
and I'm from Australia as basically half

3
00:00:18,619 --> 00:00:21,320
the people speaking today I think but

4
00:00:21,320 --> 00:00:24,380
I'm from Melbourne like Michael which is

5
00:00:24,380 --> 00:00:25,970
if you don't know it's like the most

6
00:00:25,970 --> 00:00:28,310
Berlin City of all of the places that

7
00:00:28,310 --> 00:00:30,410
aren't Berlin and it's fun you should

8
00:00:30,410 --> 00:00:34,250
come next year I'm gonna be talking

9
00:00:34,250 --> 00:00:36,110
about interoperable CSS which is a

10
00:00:36,110 --> 00:00:38,120
project I've been involved with for a

11
00:00:38,120 --> 00:00:40,940
little while but I'm gonna start with a

12
00:00:40,940 --> 00:00:44,770
bit of history a bit of background

13
00:00:44,770 --> 00:00:48,200
because if you know your stoic

14
00:00:48,200 --> 00:00:50,660
philosophy or have seen an episode of

15
00:00:50,660 --> 00:00:52,760
Battlestar Galactica you will know that

16
00:00:52,760 --> 00:00:54,079
everything has happened before

17
00:00:54,079 --> 00:00:58,430
and everything will happen again for our

18
00:00:58,430 --> 00:01:00,289
purposes everything happened in

19
00:01:00,289 --> 00:01:07,310
September 2008 which was a dark time 75%

20
00:01:07,310 --> 00:01:13,130
of the world was using ie 7 we were

21
00:01:13,130 --> 00:01:15,800
about here in the global financial

22
00:01:15,800 --> 00:01:22,369
crisis and we all know how that went but

23
00:01:22,369 --> 00:01:23,810
we're about here in Justin Bieber's

24
00:01:23,810 --> 00:01:26,780
career so I think on balance we're all

25
00:01:26,780 --> 00:01:34,719
happier I think thanks

26
00:01:34,729 --> 00:01:36,720
but specifically I wanna talk about

27
00:01:36,720 --> 00:01:38,940
JavaScript in 2008 because JavaScript in

28
00:01:38,940 --> 00:01:42,000
2008 looked like this it got the job

29
00:01:42,000 --> 00:01:44,040
done it's certain you know you can still

30
00:01:44,040 --> 00:01:45,570
write JavaScript like this many people

31
00:01:45,570 --> 00:01:48,360
do but what I want you to look at it

32
00:01:48,360 --> 00:01:49,650
critically and think about what it

33
00:01:49,650 --> 00:01:51,869
implies about JavaScript at that time I

34
00:01:51,869 --> 00:01:54,750
mean here we have window dot name space

35
00:01:54,750 --> 00:01:57,270
implying that ahead of this other stuff

36
00:01:57,270 --> 00:01:59,040
will have run and it will have started

37
00:01:59,040 --> 00:02:01,259
throwing stuff on namespace sorry on

38
00:02:01,259 --> 00:02:03,900
window and we don't necessarily know

39
00:02:03,900 --> 00:02:05,580
what's run in front of us we don't know

40
00:02:05,580 --> 00:02:07,140
what's running after it so we have to be

41
00:02:07,140 --> 00:02:08,910
very careful not to delete anyone else's

42
00:02:08,910 --> 00:02:11,190
stuff but to put our stuff somewhere

43
00:02:11,190 --> 00:02:15,239
someone can find it later the every

44
00:02:15,239 --> 00:02:16,739
piece of code that you write every piece

45
00:02:16,739 --> 00:02:18,330
of code every all of your dependencies

46
00:02:18,330 --> 00:02:21,690
all execute in this global soup and you

47
00:02:21,690 --> 00:02:24,750
just have to try and carve yourself off

48
00:02:24,750 --> 00:02:28,769
a little bit of room to work also in

49
00:02:28,769 --> 00:02:32,280
September 2008 Google released a comic

50
00:02:32,280 --> 00:02:34,500
book announcing that they had built a

51
00:02:34,500 --> 00:02:36,660
browser the comic book was basically to

52
00:02:36,660 --> 00:02:39,120
explain to the 75% of people using IE

53
00:02:39,120 --> 00:02:41,700
that browsers were a thing and you could

54
00:02:41,700 --> 00:02:44,070
choose another one so why didn't you

55
00:02:44,070 --> 00:02:48,239
choose Chrome with that they brought v8

56
00:02:48,239 --> 00:02:50,880
and v8 was a new engine it was much

57
00:02:50,880 --> 00:02:52,440
faster than any of the JavaScript

58
00:02:52,440 --> 00:02:55,380
engines around at the time and it sort

59
00:02:55,380 --> 00:02:58,890
of sped up a catalysed a movement that

60
00:02:58,890 --> 00:03:00,959
was already starting around this idea of

61
00:03:00,959 --> 00:03:03,390
running JavaScript on the server

62
00:03:03,390 --> 00:03:08,220
Kevin dangle back in January 2009 said

63
00:03:08,220 --> 00:03:09,480
that for server-side JavaScript to

64
00:03:09,480 --> 00:03:11,940
really catch on it needed some way to

65
00:03:11,940 --> 00:03:14,160
include other modules and for those

66
00:03:14,160 --> 00:03:15,540
modules every module to live in as

67
00:03:15,540 --> 00:03:17,970
discrete namespace now there are easy

68
00:03:17,970 --> 00:03:19,680
ways to do name spacing as I showed you

69
00:03:19,680 --> 00:03:22,200
with the window dot namespace technique

70
00:03:22,200 --> 00:03:24,390
but there's no standard programmatic way

71
00:03:24,390 --> 00:03:28,560
to load a module once he then went on to

72
00:03:28,560 --> 00:03:32,040
write in a wiki post saying that all of

73
00:03:32,040 --> 00:03:33,150
the attempts so far all of the

74
00:03:33,150 --> 00:03:35,970
server-side JavaScript frameworks were

75
00:03:35,970 --> 00:03:38,310
very fragmented if a script had to do

76
00:03:38,310 --> 00:03:40,170
something like access a file you

77
00:03:40,170 --> 00:03:44,459
couldn't use any engine to do that

78
00:03:44,459 --> 00:03:45,959
SpiderMonkey javascriptcore they

79
00:03:45,959 --> 00:03:46,740
couldn't load

80
00:03:46,740 --> 00:03:50,850
modules in in the same way so anything

81
00:03:50,850 --> 00:03:52,890
people were writing was very tied to the

82
00:03:52,890 --> 00:03:55,650
interpreter and they were often forced

83
00:03:55,650 --> 00:03:57,480
to create a bunch of api's that other

84
00:03:57,480 --> 00:03:59,670
programmers took for granted and to me

85
00:03:59,670 --> 00:04:01,590
that sounds a bit like what happens with

86
00:04:01,590 --> 00:04:03,930
CSS now something that's written for

87
00:04:03,930 --> 00:04:06,240
sass is not necessarily compatible with

88
00:04:06,240 --> 00:04:09,540
less something that's written for CSS

89
00:04:09,540 --> 00:04:11,400
next doesn't work with either of the

90
00:04:11,400 --> 00:04:14,670
others and each of those add things like

91
00:04:14,670 --> 00:04:17,489
variables and loops that every other

92
00:04:17,489 --> 00:04:19,290
program it takes for granted they're

93
00:04:19,290 --> 00:04:22,130
trying to put in to this language

94
00:04:22,130 --> 00:04:24,420
programming api's that should just be

95
00:04:24,420 --> 00:04:28,220
there chris cole who was also

96
00:04:28,220 --> 00:04:30,510
influential at the time wrote a blog

97
00:04:30,510 --> 00:04:33,060
post and said the year has begun with a

98
00:04:33,060 --> 00:04:35,220
combination of wonderous events i've

99
00:04:35,220 --> 00:04:37,230
been struggling to promote the idea of a

100
00:04:37,230 --> 00:04:38,790
module system in javascript for several

101
00:04:38,790 --> 00:04:40,530
years and there had been a sudden

102
00:04:40,530 --> 00:04:42,270
explosion of progress and i feel that

103
00:04:42,270 --> 00:04:44,880
way about CSS I think we can all sort of

104
00:04:44,880 --> 00:04:46,590
sense it that there's something changing

105
00:04:46,590 --> 00:04:48,450
about CSS at the moment we're not sure

106
00:04:48,450 --> 00:04:49,470
if we're gonna be still be doing it the

107
00:04:49,470 --> 00:04:53,760
same way in a couple of years of course

108
00:04:53,760 --> 00:04:56,700
Ryan doll at this point no js' started

109
00:04:56,700 --> 00:04:58,350
as a project building on top of v8 and

110
00:04:58,350 --> 00:05:00,600
that collective energy gave us commonjs

111
00:05:00,600 --> 00:05:01,920
the first time it was called jump

112
00:05:01,920 --> 00:05:05,850
commodious is july 2009 now node and

113
00:05:05,850 --> 00:05:07,260
colleges have kind of a complicated

114
00:05:07,260 --> 00:05:08,850
history where there were a bunch of

115
00:05:08,850 --> 00:05:10,290
different attempts at doing a module

116
00:05:10,290 --> 00:05:11,850
system in JavaScript come and jeff's

117
00:05:11,850 --> 00:05:13,140
wanted to do more on node kind of

118
00:05:13,140 --> 00:05:15,600
settled on a simple one and basically

119
00:05:15,600 --> 00:05:19,440
node one whatever node did was the

120
00:05:19,440 --> 00:05:23,100
standard and sub stack calls it command

121
00:05:23,100 --> 00:05:26,550
J esque which is just like a reduced

122
00:05:26,550 --> 00:05:28,080
version of comedy s and it's kind of

123
00:05:28,080 --> 00:05:32,880
what we all call comedy yesterday but I

124
00:05:32,880 --> 00:05:35,190
want you to think about the difference

125
00:05:35,190 --> 00:05:38,400
before and after this change because now

126
00:05:38,400 --> 00:05:40,500
instead of just assuming that our code

127
00:05:40,500 --> 00:05:42,900
ran before our code that our dependency

128
00:05:42,900 --> 00:05:45,420
ran before our dependency we can be

129
00:05:45,420 --> 00:05:47,610
explicit about it instead of just

130
00:05:47,610 --> 00:05:48,960
putting our code somewhere for other

131
00:05:48,960 --> 00:05:52,440
people to find it we export it but

132
00:05:52,440 --> 00:05:53,790
something in particular is that the

133
00:05:53,790 --> 00:05:56,160
words namespace widgets and food bar

134
00:05:56,160 --> 00:05:58,290
disappeared from this file they're in

135
00:05:58,290 --> 00:06:00,240
the file system we were able to move

136
00:06:00,240 --> 00:06:00,590
that in

137
00:06:00,590 --> 00:06:02,990
Meishan move that repetition into the

138
00:06:02,990 --> 00:06:06,020
file system and that'll kind of be

139
00:06:06,020 --> 00:06:09,110
important later I guess it's fair to say

140
00:06:09,110 --> 00:06:13,490
node was a success MPM came along a

141
00:06:13,490 --> 00:06:15,890
little bit later things kind of went

142
00:06:15,890 --> 00:06:18,890
bananas and I won't be thinking like I'm

143
00:06:18,890 --> 00:06:21,620
sure that's great like I'm sure this is

144
00:06:21,620 --> 00:06:23,990
all true about JavaScript but what does

145
00:06:23,990 --> 00:06:26,600
it have to do with CSS I mean CSS is not

146
00:06:26,600 --> 00:06:28,670
JavaScript styling code is not

147
00:06:28,670 --> 00:06:33,290
server-side code but again think

148
00:06:33,290 --> 00:06:35,450
critically about what changed think

149
00:06:35,450 --> 00:06:37,730
about the extension to the language I

150
00:06:37,730 --> 00:06:40,880
mean this line was valid before it just

151
00:06:40,880 --> 00:06:43,280
didn't do anything it's valid now and it

152
00:06:43,280 --> 00:06:45,230
has an entire module ecosystem built

153
00:06:45,230 --> 00:06:47,360
around it and all that changed was that

154
00:06:47,360 --> 00:06:49,400
there was convention added to this file

155
00:06:49,400 --> 00:06:53,000
that the language didn't change it was

156
00:06:53,000 --> 00:06:54,920
so powerful that it took this language

157
00:06:54,920 --> 00:06:58,040
that had a single global context and

158
00:06:58,040 --> 00:06:59,960
gave it multiple files which you

159
00:06:59,960 --> 00:07:01,580
couldn't do before and I had no

160
00:07:01,580 --> 00:07:02,990
mecha-suit mechanism for sharing code

161
00:07:02,990 --> 00:07:04,910
except by throwing things on a global

162
00:07:04,910 --> 00:07:08,660
object and now it has 175 thousand

163
00:07:08,660 --> 00:07:15,140
packages on NPM and what makes that

164
00:07:15,140 --> 00:07:17,660
really relevant to us is then in 2011

165
00:07:17,660 --> 00:07:20,270
browserify came along and said you can

166
00:07:20,270 --> 00:07:21,920
use that mental model you can use that

167
00:07:21,920 --> 00:07:24,140
filesystem based approach in the browser

168
00:07:24,140 --> 00:07:25,850
even though the browser doesn't support

169
00:07:25,850 --> 00:07:27,680
it I will take that directory of files

170
00:07:27,680 --> 00:07:30,590
and I'll compile it and here your your

171
00:07:30,590 --> 00:07:33,170
project will run in the browser as if it

172
00:07:33,170 --> 00:07:36,400
was running on a local filesystem

173
00:07:36,400 --> 00:07:38,600
browserify proved that you could change

174
00:07:38,600 --> 00:07:41,120
the human interface of the language of

175
00:07:41,120 --> 00:07:44,090
JavaScript without needing to change the

176
00:07:44,090 --> 00:07:45,530
machine interface we didn't have to wait

177
00:07:45,530 --> 00:07:47,870
for a new version of JavaScript of

178
00:07:47,870 --> 00:07:49,970
modules in it I mean if we had we would

179
00:07:49,970 --> 00:07:51,830
still be waiting and if it dropped today

180
00:07:51,830 --> 00:07:53,090
we would have to wait for browsers to

181
00:07:53,090 --> 00:07:55,730
support it but browser if I said we can

182
00:07:55,730 --> 00:07:58,640
separate we don't have to stay in step

183
00:07:58,640 --> 00:08:01,760
with what what the browsers are capable

184
00:08:01,760 --> 00:08:05,810
of so of course the question is is that

185
00:08:05,810 --> 00:08:08,180
possible well in fact I'll let this guy

186
00:08:08,180 --> 00:08:13,150
ask it

187
00:08:13,160 --> 00:08:17,190
thank you weird alien conspiracy dude

188
00:08:17,190 --> 00:08:19,560
that's what interruptible CSS is trying

189
00:08:19,560 --> 00:08:22,260
to be all right and here's what it looks

190
00:08:22,260 --> 00:08:26,250
like it is very small it is a very small

191
00:08:26,250 --> 00:08:28,470
addition to the CSS syntax there is an

192
00:08:28,470 --> 00:08:30,060
import and export directive the import

193
00:08:30,060 --> 00:08:32,159
references another file and says hey

194
00:08:32,159 --> 00:08:33,930
some information from that file I would

195
00:08:33,930 --> 00:08:35,729
like to bring it in here and I'll call

196
00:08:35,729 --> 00:08:38,159
it this but also can export things

197
00:08:38,159 --> 00:08:39,810
saying hey if I get included here's

198
00:08:39,810 --> 00:08:42,270
information out there's a local alias

199
00:08:42,270 --> 00:08:44,370
exported token but the rest of the file

200
00:08:44,370 --> 00:08:46,050
is completely global there's no other

201
00:08:46,050 --> 00:08:50,160
changes to CSS but it's quite different

202
00:08:50,160 --> 00:08:52,140
to something like writing modules in

203
00:08:52,140 --> 00:08:54,440
JavaScript because it's compiled target

204
00:08:54,440 --> 00:08:57,330
it's not something that we write by hand

205
00:08:57,330 --> 00:08:58,920
it's not good enough to be a human

206
00:08:58,920 --> 00:09:02,940
interface but recently a lot of our

207
00:09:02,940 --> 00:09:05,610
projects have involved a tools a bundler

208
00:09:05,610 --> 00:09:07,770
or a loader called web pack JVM or

209
00:09:07,770 --> 00:09:12,510
browserify to be able to build up a

210
00:09:12,510 --> 00:09:14,700
collection for the browser of a whole

211
00:09:14,700 --> 00:09:16,650
lot of files in the file system and you

212
00:09:16,650 --> 00:09:19,710
can load CSS in that manner and I CSS is

213
00:09:19,710 --> 00:09:21,740
designed to be consumed by one of these

214
00:09:21,740 --> 00:09:24,870
so each file of I CSS has then compiled

215
00:09:24,870 --> 00:09:27,660
separately emits both CSS and JavaScript

216
00:09:27,660 --> 00:09:31,110
and the CSS can get concatenated and

217
00:09:31,110 --> 00:09:33,030
inserted into the browser and we built

218
00:09:33,030 --> 00:09:34,650
it because we're trying to build a thing

219
00:09:34,650 --> 00:09:35,940
called CSS modules which I'll be talking

220
00:09:35,940 --> 00:09:40,950
about for the rest of today so it brings

221
00:09:40,950 --> 00:09:45,360
me apart to Christopher Zito who works

222
00:09:45,360 --> 00:09:47,850
for Facebook about a year ago presented

223
00:09:47,850 --> 00:09:49,890
these seven problems as being like the

224
00:09:49,890 --> 00:09:53,940
key core problems with CSS and it was it

225
00:09:53,940 --> 00:09:55,380
was great because nobody had really I

226
00:09:55,380 --> 00:09:57,630
don't think put the list together and

227
00:09:57,630 --> 00:10:01,170
had the the scale of developers and the

228
00:10:01,170 --> 00:10:03,210
scale of users on a product to really

229
00:10:03,210 --> 00:10:06,630
back it up of course he went on to say

230
00:10:06,630 --> 00:10:08,000
that if you write your Styles in

231
00:10:08,000 --> 00:10:10,830
JavaScript a large class of those in

232
00:10:10,830 --> 00:10:12,660
fact those seven just disappear

233
00:10:12,660 --> 00:10:15,900
instantly and I guess it's sort of fair

234
00:10:15,900 --> 00:10:18,089
to say that the CSS community wasn't

235
00:10:18,089 --> 00:10:20,430
that enthusiastic with it at the time

236
00:10:20,430 --> 00:10:22,950
straightaway wouldn't necessarily think

237
00:10:22,950 --> 00:10:24,029
that it was the best

238
00:10:24,029 --> 00:10:30,119
idea and I was certainly in that camp

239
00:10:30,119 --> 00:10:32,279
but thankfully a lot of people weren't

240
00:10:32,279 --> 00:10:35,849
and there's a whole host of now projects

241
00:10:35,849 --> 00:10:37,589
about doing styling in JavaScript a

242
00:10:37,589 --> 00:10:39,749
Facebook has sort of native support for

243
00:10:39,749 --> 00:10:42,059
inline styles and the virtual Dom the 3x

244
00:10:42,059 --> 00:10:44,999
file JJ sextile jss but I think radium

245
00:10:44,999 --> 00:10:46,229
is probably the most promising at the

246
00:10:46,229 --> 00:10:47,849
moment and they're worth checking out

247
00:10:47,849 --> 00:10:48,689
they're doing something really

248
00:10:48,689 --> 00:10:50,069
interesting in a way that basically no

249
00:10:50,069 --> 00:10:53,099
one else has done before and they may be

250
00:10:53,099 --> 00:10:54,319
onto something

251
00:10:54,319 --> 00:10:56,549
but I wasn't particularly convinced by

252
00:10:56,549 --> 00:10:59,489
them and in fact I wrote this in a blog

253
00:10:59,489 --> 00:11:01,289
post recently and that sort of

254
00:11:01,289 --> 00:11:02,489
crystallized how we'd all been thinking

255
00:11:02,489 --> 00:11:04,229
about it was that it was more important

256
00:11:04,229 --> 00:11:06,959
to keep knowledge about CSS keep some

257
00:11:06,959 --> 00:11:11,039
good parts of CSS within your product

258
00:11:11,039 --> 00:11:14,459
and your team but to solve the real

259
00:11:14,459 --> 00:11:16,769
problems which were being comfortable

260
00:11:16,769 --> 00:11:18,989
about making changes and being fast and

261
00:11:18,989 --> 00:11:21,119
making changes on a large code base and

262
00:11:21,119 --> 00:11:24,209
I said comfortable before fast because I

263
00:11:24,209 --> 00:11:26,249
think it's a lot more important to be

264
00:11:26,249 --> 00:11:29,579
comfortable making changes particularly

265
00:11:29,579 --> 00:11:31,799
in CSS than it is to go any faster than

266
00:11:31,799 --> 00:11:35,639
we can at the moment and this brings me

267
00:11:35,639 --> 00:11:37,589
with the first principle of CSS modules

268
00:11:37,589 --> 00:11:39,989
the thing that drives out basically half

269
00:11:39,989 --> 00:11:42,959
of it is that good design should good to

270
00:11:42,959 --> 00:11:45,149
lead you to good practice so if we're

271
00:11:45,149 --> 00:11:47,849
looking at a new version of CSS that has

272
00:11:47,849 --> 00:11:49,709
multiple files and passed symbols around

273
00:11:49,709 --> 00:11:52,009
what can we do with it what will it do

274
00:11:52,009 --> 00:11:55,159
what would make CSS easier for humans

275
00:11:55,159 --> 00:11:57,869
and I've been thinking about this a lot

276
00:11:57,869 --> 00:12:00,209
and I think it comes down to this every

277
00:12:00,209 --> 00:12:02,429
time we've tried to improve CSS every

278
00:12:02,429 --> 00:12:05,789
time we've tried to put a convention on

279
00:12:05,789 --> 00:12:09,419
CSS we've been guiding ourselves to one

280
00:12:09,419 --> 00:12:13,559
of these two things either focusing on

281
00:12:13,559 --> 00:12:17,759
isolation or focusing on reuse so

282
00:12:17,759 --> 00:12:19,499
isolation is when you start with your

283
00:12:19,499 --> 00:12:20,699
component and then you write all the

284
00:12:20,699 --> 00:12:23,039
Styles down like Ben all right you

285
00:12:23,039 --> 00:12:25,019
everything is nice and separated so you

286
00:12:25,019 --> 00:12:26,639
can add a component really easily and

287
00:12:26,639 --> 00:12:28,319
you can delete a component really easily

288
00:12:28,319 --> 00:12:29,970
because there's only one place that the

289
00:12:29,970 --> 00:12:32,220
styles are defined then of course you

290
00:12:32,220 --> 00:12:33,419
need to add the ability for those

291
00:12:33,419 --> 00:12:36,269
components to share styles which can

292
00:12:36,269 --> 00:12:37,620
lead to large payloads but

293
00:12:37,620 --> 00:12:39,690
generally bam successes I think proven

294
00:12:39,690 --> 00:12:41,820
that this is a good approach for a lot

295
00:12:41,820 --> 00:12:45,390
of teams the other side is reused first

296
00:12:45,390 --> 00:12:46,770
and this is a little bit more like what

297
00:12:46,770 --> 00:12:50,040
CSS is actually good at by default which

298
00:12:50,040 --> 00:12:51,330
is you start from the styles and you

299
00:12:51,330 --> 00:12:53,010
build up components so a component will

300
00:12:53,010 --> 00:12:57,090
have styles from many parts of your of

301
00:12:57,090 --> 00:13:00,480
your codebase so CSS and tachyons like

302
00:13:00,480 --> 00:13:03,420
this and it really captures the visual

303
00:13:03,420 --> 00:13:06,960
information in your site with a small

304
00:13:06,960 --> 00:13:08,430
file size and good performance but I

305
00:13:08,430 --> 00:13:10,260
believe it's not as successful at the

306
00:13:10,260 --> 00:13:11,810
moment because it is difficult for teams

307
00:13:11,810 --> 00:13:13,200
particularly if people have different

308
00:13:13,200 --> 00:13:16,110
abilities if you've got only one person

309
00:13:16,110 --> 00:13:17,880
who can touch the CSS on your team I

310
00:13:17,880 --> 00:13:20,070
think this is a symptom of what I call

311
00:13:20,070 --> 00:13:21,720
change paralysis where you're just not

312
00:13:21,720 --> 00:13:24,360
confident that the codebase is not in a

313
00:13:24,360 --> 00:13:25,950
state where anybody can just add

314
00:13:25,950 --> 00:13:27,360
something and you and you think you'll

315
00:13:27,360 --> 00:13:31,680
be okay so CSS modules is trying to

316
00:13:31,680 --> 00:13:33,600
unify those two approaches trying to

317
00:13:33,600 --> 00:13:35,550
give you real isolation and responsible

318
00:13:35,550 --> 00:13:43,220
reuse so let's talk about isolation

319
00:13:43,230 --> 00:13:45,660
if you want to target a single element

320
00:13:45,660 --> 00:13:48,330
on your page you can do this you can

321
00:13:48,330 --> 00:13:51,210
nest a lot

322
00:13:51,210 --> 00:13:53,850
if you've used CSS for probably about

323
00:13:53,850 --> 00:13:55,110
four or five minutes you'll know that

324
00:13:55,110 --> 00:13:57,810
that's really bad right because as soon

325
00:13:57,810 --> 00:14:00,000
as your Dom changes your HTML changes

326
00:14:00,000 --> 00:14:01,920
that doesn't apply or suddenly it might

327
00:14:01,920 --> 00:14:02,880
apply something you weren't trying to

328
00:14:02,880 --> 00:14:05,880
style the alternative of course on the

329
00:14:05,880 --> 00:14:08,430
other extreme is you invent a name that

330
00:14:08,430 --> 00:14:10,650
has never been seen before to target

331
00:14:10,650 --> 00:14:13,500
that exact one thing and actually it's

332
00:14:13,500 --> 00:14:15,510
better it's ridiculous but it's better

333
00:14:15,510 --> 00:14:18,840
and so we put some you know we put some

334
00:14:18,840 --> 00:14:21,510
sanity on it we say we invent them

335
00:14:21,510 --> 00:14:24,480
basically we say okay every class has to

336
00:14:24,480 --> 00:14:26,490
be unique but here's a nice convention

337
00:14:26,490 --> 00:14:27,660
so you can think of a class name really

338
00:14:27,660 --> 00:14:29,280
quickly you know exactly what it's going

339
00:14:29,280 --> 00:14:33,360
to be it implies its context and yeah

340
00:14:33,360 --> 00:14:34,260
there's a convention that your whole

341
00:14:34,260 --> 00:14:38,880
team can learn and apply but it looks an

342
00:14:38,880 --> 00:14:41,450
awful lot like JavaScript in 2008

343
00:14:41,450 --> 00:14:43,560
there's so much repetition there there's

344
00:14:43,560 --> 00:14:45,300
so much information that's just about

345
00:14:45,300 --> 00:14:47,700
the fact that the file is global not

346
00:14:47,700 --> 00:14:52,080
about what's happening and it occurred

347
00:14:52,080 --> 00:14:53,790
to me that if you're running a class for

348
00:14:53,790 --> 00:14:55,860
every element in your file then your

349
00:14:55,860 --> 00:14:58,650
class is not a global descriptor your

350
00:14:58,650 --> 00:15:03,270
class is a local variable imagine if in

351
00:15:03,270 --> 00:15:06,420
your JavaScript code you couldn't use a

352
00:15:06,420 --> 00:15:08,130
variable that you'd used anywhere else

353
00:15:08,130 --> 00:15:11,460
in that code or any of your dependencies

354
00:15:11,460 --> 00:15:16,080
had used I don't think we would still be

355
00:15:16,080 --> 00:15:18,140
doing JavaScript if that was the case

356
00:15:18,140 --> 00:15:21,840
and so CSS modules tries to fix that

357
00:15:21,840 --> 00:15:25,830
problem for CSS let's say I'm trying to

358
00:15:25,830 --> 00:15:29,460
build this beautiful button I stole the

359
00:15:29,460 --> 00:15:30,660
design for this button from someone who

360
00:15:30,660 --> 00:15:33,540
can design it's seven lines of CSS and

361
00:15:33,540 --> 00:15:35,700
the only change that you have to make to

362
00:15:35,700 --> 00:15:39,630
make this a CSS module is that just drop

363
00:15:39,630 --> 00:15:42,240
the noise out of the class name just

364
00:15:42,240 --> 00:15:43,680
call it normal it's just the normal

365
00:15:43,680 --> 00:15:45,300
button you've already got components

366
00:15:45,300 --> 00:15:47,300
like submit button dot CSS write

367
00:15:47,300 --> 00:15:49,350
something else should be able to tell

368
00:15:49,350 --> 00:15:52,890
the Machine what this is but for you

369
00:15:52,890 --> 00:15:55,180
just call it normal

370
00:15:55,180 --> 00:15:57,590
what happens in CSS modules as it

371
00:15:57,590 --> 00:16:00,980
compiles to this I CSS it extracts a net

372
00:16:00,980 --> 00:16:02,960
export statement and it rewrites the

373
00:16:02,960 --> 00:16:05,240
selector and this is a really low-level

374
00:16:05,240 --> 00:16:07,160
approach that could be used for a whole

375
00:16:07,160 --> 00:16:09,380
lot of things to change the way CSS

376
00:16:09,380 --> 00:16:12,110
works so here the selector becomes

377
00:16:12,110 --> 00:16:14,870
normal and then a unique hash and the

378
00:16:14,870 --> 00:16:16,730
export statement says what you think

379
00:16:16,730 --> 00:16:19,400
normal is actually this and then you can

380
00:16:19,400 --> 00:16:22,490
import it into your JavaScript and you

381
00:16:22,490 --> 00:16:26,440
get the mapping from normal to the hash

382
00:16:26,440 --> 00:16:29,150
once you do that you can use any method

383
00:16:29,150 --> 00:16:31,130
of getting that into the mark-up I mean

384
00:16:31,130 --> 00:16:33,380
the only requirement is you have a way

385
00:16:33,380 --> 00:16:35,300
to load CSS from your JavaScript and you

386
00:16:35,300 --> 00:16:39,530
have some control over the mark-up if

387
00:16:39,530 --> 00:16:41,270
you're using angular it's really easy

388
00:16:41,270 --> 00:16:43,760
you can even use the bind 1 syntax so it

389
00:16:43,760 --> 00:16:46,130
has no runtime performance if you're

390
00:16:46,130 --> 00:16:48,620
just using document right then you can

391
00:16:48,620 --> 00:16:50,120
just do that to just build up a string

392
00:16:50,120 --> 00:16:53,420
right but for my the rest of my examples

393
00:16:53,420 --> 00:16:56,660
I'll be showing react because react is

394
00:16:56,660 --> 00:16:58,970
already very component driven react is

395
00:16:58,970 --> 00:17:00,230
already really well supported by things

396
00:17:00,230 --> 00:17:02,090
like web pack and browser 5 J's p.m. and

397
00:17:02,090 --> 00:17:05,589
so it makes sense it's a really easy

398
00:17:05,589 --> 00:17:08,510
conversion to go from react and other

399
00:17:08,510 --> 00:17:11,990
cells other kinds of CSS to react in CSS

400
00:17:11,990 --> 00:17:14,660
modules and so this is what it looks

401
00:17:14,660 --> 00:17:20,480
like to do a button now the class name

402
00:17:20,480 --> 00:17:23,780
there is generating your JSX file is

403
00:17:23,780 --> 00:17:25,760
loading it injecting it into the DOM and

404
00:17:25,760 --> 00:17:29,000
that HTML is coming out but it doesn't

405
00:17:29,000 --> 00:17:30,770
really matter what that class name is in

406
00:17:30,770 --> 00:17:32,450
fact in development I recommend doing

407
00:17:32,450 --> 00:17:33,830
something like this where you have a

408
00:17:33,830 --> 00:17:35,960
longer class name which points you

409
00:17:35,960 --> 00:17:39,680
towards where that file was in fact you

410
00:17:39,680 --> 00:17:42,310
can actually put the line number of the

411
00:17:42,310 --> 00:17:44,840
definition in the class declaration and

412
00:17:44,840 --> 00:17:47,300
it all still work

413
00:17:47,300 --> 00:17:49,430
note that even though I'm changing this

414
00:17:49,430 --> 00:17:51,410
my component never changes no matter

415
00:17:51,410 --> 00:17:54,530
what the output is the component has

416
00:17:54,530 --> 00:17:57,050
complete isolation to the reality of the

417
00:17:57,050 --> 00:18:01,550
CSS if you want to minify you can just

418
00:18:01,550 --> 00:18:04,190
use the unique component or as I like to

419
00:18:04,190 --> 00:18:08,120
do use an emoji in fact just

420
00:18:08,120 --> 00:18:10,160
this morning I converted my entire

421
00:18:10,160 --> 00:18:18,580
website to use nothing but emoji I mean

422
00:18:18,580 --> 00:18:22,210
and you can't tell me that what is that

423
00:18:22,210 --> 00:18:25,820
they select a chicken firework up

424
00:18:25,820 --> 00:18:27,950
firework down Chinese lantern love heart

425
00:18:27,950 --> 00:18:30,260
that's a beautifully meaningful selector

426
00:18:30,260 --> 00:18:31,880
that you know packs the bytes

427
00:18:31,880 --> 00:18:35,000
beautifully let's say I'm mochi

428
00:18:35,000 --> 00:18:38,150
minifiers a really big feature but

429
00:18:38,150 --> 00:18:39,800
there's another reason that class you

430
00:18:39,800 --> 00:18:41,420
know that classes are hard there's

431
00:18:41,420 --> 00:18:43,130
another reason why when you're trying to

432
00:18:43,130 --> 00:18:45,380
write styles sometimes you have to over

433
00:18:45,380 --> 00:18:47,620
write things and things get messy and

434
00:18:47,620 --> 00:18:50,390
it's put a lot of it at the feet of

435
00:18:50,390 --> 00:18:54,350
nesting if you want to name this header

436
00:18:54,350 --> 00:18:58,670
one inside this edit v2 final object it

437
00:18:58,670 --> 00:19:00,470
can be very easy to just nest but that

438
00:19:00,470 --> 00:19:02,660
is a wide-ranging selector and if you

439
00:19:02,660 --> 00:19:05,000
include another component in there that

440
00:19:05,000 --> 00:19:06,530
has a h1 suddenly you have to override

441
00:19:06,530 --> 00:19:07,850
those Styles because of where it's

442
00:19:07,850 --> 00:19:10,670
included and lower there if you can't

443
00:19:10,670 --> 00:19:11,810
think of a good name then you're leaving

444
00:19:11,810 --> 00:19:14,330
this terribly named thing in your global

445
00:19:14,330 --> 00:19:16,640
code base and somebody is going to be

446
00:19:16,640 --> 00:19:19,790
very mad eat when they find it this uses

447
00:19:19,790 --> 00:19:21,410
modules because the file is local the

448
00:19:21,410 --> 00:19:23,330
pressure is off if it's a header call it

449
00:19:23,330 --> 00:19:25,250
header if it's a h1 if that's how you

450
00:19:25,250 --> 00:19:27,560
think about it caught h1 second thing is

451
00:19:27,560 --> 00:19:30,050
fine right the weird bit at the end if

452
00:19:30,050 --> 00:19:31,730
that is the thing that you're calling it

453
00:19:31,730 --> 00:19:33,350
in your team just call it that it's a

454
00:19:33,350 --> 00:19:36,860
local variable at least when you see

455
00:19:36,860 --> 00:19:38,510
that word you will see the context from

456
00:19:38,510 --> 00:19:40,250
which it comes right you'll see the

457
00:19:40,250 --> 00:19:42,140
component what it is and then that will

458
00:19:42,140 --> 00:19:43,400
trigger all the wee bit at the end of

459
00:19:43,400 --> 00:19:47,270
that component that makes sense and so I

460
00:19:47,270 --> 00:19:49,190
think if you make naming things

461
00:19:49,190 --> 00:19:51,290
effortless if you never have to worry

462
00:19:51,290 --> 00:19:53,330
about another global name you can target

463
00:19:53,330 --> 00:19:55,040
everything directly and if you can

464
00:19:55,040 --> 00:19:56,780
target everything directly you stop

465
00:19:56,780 --> 00:19:58,970
leaking styles and if you stop leaking

466
00:19:58,970 --> 00:19:59,630
styles

467
00:19:59,630 --> 00:20:03,230
I think isolation is solved so let's

468
00:20:03,230 --> 00:20:09,470
talk about reuse again I stole this

469
00:20:09,470 --> 00:20:11,300
button from some of the consign let's

470
00:20:11,300 --> 00:20:13,480
say you have two variations of a button

471
00:20:13,480 --> 00:20:15,860
now in BIM you have the common stuff

472
00:20:15,860 --> 00:20:17,270
then you have the normal stuff they

473
00:20:17,270 --> 00:20:19,210
neither have the arrow stuff works fine

474
00:20:19,210 --> 00:20:21,860
you then include both of those class

475
00:20:21,860 --> 00:20:26,149
on your button it's fine it's better

476
00:20:26,149 --> 00:20:27,890
than anything came before it I'll I like

477
00:20:27,890 --> 00:20:31,220
it a lot but there's I have a problem

478
00:20:31,220 --> 00:20:32,929
with it which is that when you're

479
00:20:32,929 --> 00:20:35,269
looking at your markup you have to think

480
00:20:35,269 --> 00:20:37,700
about how many different classes this

481
00:20:37,700 --> 00:20:40,460
thing is is is being built from you

482
00:20:40,460 --> 00:20:43,220
don't have any separation from your

483
00:20:43,220 --> 00:20:45,140
markup and the styling they are

484
00:20:45,140 --> 00:20:47,390
intrinsically connected and I think this

485
00:20:47,390 --> 00:20:48,740
is the other principle of CSS modules

486
00:20:48,740 --> 00:20:50,840
design is that good abstractions are

487
00:20:50,840 --> 00:20:52,820
there to save you cognitive load when

488
00:20:52,820 --> 00:20:54,289
you're thinking about one thing you

489
00:20:54,289 --> 00:20:55,909
shouldn't be exposed to the details of

490
00:20:55,909 --> 00:20:59,000
another and this brings me to part 2 CSS

491
00:20:59,000 --> 00:21:02,600
modules which is called composition so

492
00:21:02,600 --> 00:21:04,549
we will look at our BAM example we see

493
00:21:04,549 --> 00:21:07,929
our three classes button normal an error

494
00:21:07,929 --> 00:21:11,539
in CSS modules you have something called

495
00:21:11,539 --> 00:21:14,299
base could be called anything and then

496
00:21:14,299 --> 00:21:16,510
normal and error use a keyword called

497
00:21:16,510 --> 00:21:20,720
composes or compose with what that does

498
00:21:20,720 --> 00:21:24,260
is when CSS modules compiles that to I

499
00:21:24,260 --> 00:21:27,590
CSS now the three classes base

500
00:21:27,590 --> 00:21:31,039
normal and error they still just get

501
00:21:31,039 --> 00:21:33,919
compiled and their classes and their in

502
00:21:33,919 --> 00:21:35,990
their styles are still presented but the

503
00:21:35,990 --> 00:21:37,760
composed statements disappear they go up

504
00:21:37,760 --> 00:21:39,919
into the export statement and so now

505
00:21:39,919 --> 00:21:41,269
when you talk about normal you're

506
00:21:41,269 --> 00:21:42,799
actually talking about two classes when

507
00:21:42,799 --> 00:21:44,389
you talk about error you're also talking

508
00:21:44,389 --> 00:21:48,289
about two classes base is just one so

509
00:21:48,289 --> 00:21:50,360
that export statement when being

510
00:21:50,360 --> 00:21:54,769
imported now notice that this class this

511
00:21:54,769 --> 00:21:57,769
component declaration hasn't changed

512
00:21:57,769 --> 00:21:59,899
we're still just using one thing it

513
00:21:59,899 --> 00:22:02,139
generates markup with two classes and

514
00:22:02,139 --> 00:22:04,940
breaking this that I mean it seems

515
00:22:04,940 --> 00:22:07,340
subtle but like breaking having to worry

516
00:22:07,340 --> 00:22:08,570
about how many classes are being applied

517
00:22:08,570 --> 00:22:10,820
to this element at that time makes a

518
00:22:10,820 --> 00:22:12,980
huge difference to how much context

519
00:22:12,980 --> 00:22:14,029
switching you're actually having to do

520
00:22:14,029 --> 00:22:14,750
when you're thinking about your

521
00:22:14,750 --> 00:22:16,070
component when you're thinking about

522
00:22:16,070 --> 00:22:21,679
your Styles this gets kind of better

523
00:22:21,679 --> 00:22:25,700
with multi file composition because each

524
00:22:25,700 --> 00:22:28,730
file in I CSS and CSS modules is

525
00:22:28,730 --> 00:22:30,980
completely isolated you can't reference

526
00:22:30,980 --> 00:22:33,169
anything from any other file unless you

527
00:22:33,169 --> 00:22:35,120
use a couple of methods one of which is

528
00:22:35,120 --> 00:22:36,460
composed

529
00:22:36,460 --> 00:22:38,990
this is saying that yes normal composure

530
00:22:38,990 --> 00:22:40,850
space brings all those stars in as well

531
00:22:40,850 --> 00:22:44,150
but it also pulls in two classes from

532
00:22:44,150 --> 00:22:48,680
colors but CSS and this compiles out to

533
00:22:48,680 --> 00:22:51,500
the colors file goes to the top again

534
00:22:51,500 --> 00:22:52,850
this is being compiled and then

535
00:22:52,850 --> 00:22:54,740
concatenated because just CSS after the

536
00:22:54,740 --> 00:22:56,960
whole process goes and the button gets

537
00:22:56,960 --> 00:22:58,850
rendered with all four classes you have

538
00:22:58,850 --> 00:23:00,140
the blue class you have a light blue

539
00:23:00,140 --> 00:23:01,670
background Class C of the base class and

540
00:23:01,670 --> 00:23:04,610
the normal and the normal class actually

541
00:23:04,610 --> 00:23:07,280
ends up having nothing you know that

542
00:23:07,280 --> 00:23:09,080
you've said that this normal thing it's

543
00:23:09,080 --> 00:23:11,270
not a class anymore it's an element in

544
00:23:11,270 --> 00:23:12,860
your in your application and you've been

545
00:23:12,860 --> 00:23:14,870
able to say that every part of it styles

546
00:23:14,870 --> 00:23:16,490
comes from somewhere else you've just

547
00:23:16,490 --> 00:23:18,620
built a piece of like a novel piece of

548
00:23:18,620 --> 00:23:21,890
UI and not introduced a single line of

549
00:23:21,890 --> 00:23:24,560
CSS I mean assuming you just stripped

550
00:23:24,560 --> 00:23:27,590
this out with an optimizer later now I

551
00:23:27,590 --> 00:23:28,730
think that's really powerful the more

552
00:23:28,730 --> 00:23:32,380
times you add UI without adding CSS is

553
00:23:32,380 --> 00:23:37,310
good really good and this kind of goes

554
00:23:37,310 --> 00:23:39,980
on and on and on once you start to think

555
00:23:39,980 --> 00:23:41,510
about well what would you want to

556
00:23:41,510 --> 00:23:42,890
compose what do you want to bring

557
00:23:42,890 --> 00:23:44,480
together how do you want to separate all

558
00:23:44,480 --> 00:23:46,490
of the styles in your application you

559
00:23:46,490 --> 00:23:47,930
start to do things like this you start

560
00:23:47,930 --> 00:23:50,000
to say well my layout has things like

561
00:23:50,000 --> 00:23:52,640
the Flex vertical centered a margin one

562
00:23:52,640 --> 00:23:54,470
bottom padding one left padding one

563
00:23:54,470 --> 00:23:56,510
right because it'll lets you express

564
00:23:56,510 --> 00:23:58,340
these two objects an article in a

565
00:23:58,340 --> 00:24:00,110
masthead saying the article is a

566
00:24:00,110 --> 00:24:01,790
basically a vertically centered flexbox

567
00:24:01,790 --> 00:24:04,190
the masthead is a forty eight to forty

568
00:24:04,190 --> 00:24:07,820
eight point centered bold serif and the

569
00:24:07,820 --> 00:24:09,560
layer and and needs some padding on the

570
00:24:09,560 --> 00:24:11,630
sides of margin on the bottom now this

571
00:24:11,630 --> 00:24:13,400
generates markup that's reasonably

572
00:24:13,400 --> 00:24:15,590
complicated lots of classes but you

573
00:24:15,590 --> 00:24:19,130
don't see that you see this you just see

574
00:24:19,130 --> 00:24:20,810
the article and the masthead and you can

575
00:24:20,810 --> 00:24:22,550
go in and change all the different

576
00:24:22,550 --> 00:24:25,370
properties of that thing and it will

577
00:24:25,370 --> 00:24:27,860
change which classes get compiled but

578
00:24:27,860 --> 00:24:29,780
you never worry about that you worry

579
00:24:29,780 --> 00:24:34,250
about one thing at a time not both what

580
00:24:34,250 --> 00:24:35,900
this is effectively doing is defining an

581
00:24:35,900 --> 00:24:39,590
API into your Styles the CSS module

582
00:24:39,590 --> 00:24:42,350
becomes the point at which all of your

583
00:24:42,350 --> 00:24:44,090
visual information is collected and

584
00:24:44,090 --> 00:24:47,060
passed to your component and that it's

585
00:24:47,060 --> 00:24:48,850
that layer in the middle

586
00:24:48,850 --> 00:24:51,460
that I believe allows you to solve both

587
00:24:51,460 --> 00:24:55,210
isolation and reuse how am I going for

588
00:24:55,210 --> 00:24:57,250
time actually a bit ahead all right I'll

589
00:24:57,250 --> 00:24:58,950
take a bit long with my conclusion then

590
00:24:58,950 --> 00:25:03,250
um a lot of people when they start to

591
00:25:03,250 --> 00:25:04,810
find out about CSS modules because I

592
00:25:04,810 --> 00:25:07,330
think we we do a big blog post about a

593
00:25:07,330 --> 00:25:09,190
month ago and people have been reading

594
00:25:09,190 --> 00:25:10,420
it and asking questions one of the

595
00:25:10,420 --> 00:25:11,920
bigger questions is how does it relate

596
00:25:11,920 --> 00:25:13,780
to preprocessors and I mean when they

597
00:25:13,780 --> 00:25:15,400
say pre processes they mean SAS because

598
00:25:15,400 --> 00:25:18,580
66 percent right that is a bananas

599
00:25:18,580 --> 00:25:21,670
number of people to use one tool in our

600
00:25:21,670 --> 00:25:26,050
ecosystem and the truth is like we loves

601
00:25:26,050 --> 00:25:26,380
us

602
00:25:26,380 --> 00:25:28,240
I love SAS there's a lot of love for SAS

603
00:25:28,240 --> 00:25:30,070
in the room because I wouldn't have ever

604
00:25:30,070 --> 00:25:32,320
got through the first couple of months

605
00:25:32,320 --> 00:25:34,990
of doing CSS had I not had SAS I

606
00:25:34,990 --> 00:25:40,540
couldn't make sense of it without SAS if

607
00:25:40,540 --> 00:25:43,180
you're trying to marry isolation and

608
00:25:43,180 --> 00:25:45,970
reuse then using BEM for isolation which

609
00:25:45,970 --> 00:25:48,190
is what it's really good at and SAS for

610
00:25:48,190 --> 00:25:50,500
reuse is fantastic I mean the composer's

611
00:25:50,500 --> 00:25:52,210
keyword works basically the same as the

612
00:25:52,210 --> 00:25:54,160
extends keyword in SAS it just compiles

613
00:25:54,160 --> 00:25:55,630
quite differently it has different

614
00:25:55,630 --> 00:25:56,980
performance and other things

615
00:25:56,980 --> 00:25:58,780
implications but conceptually it's the

616
00:25:58,780 --> 00:26:02,830
same right and that was great but I do

617
00:26:02,830 --> 00:26:08,560
believe that given the way I CSS opens

618
00:26:08,560 --> 00:26:13,090
up a new way of doing multi file CSS CSS

619
00:26:13,090 --> 00:26:15,730
modules can eventually replace the need

620
00:26:15,730 --> 00:26:18,610
for SAS now I used kind of inflammatory

621
00:26:18,610 --> 00:26:20,590
emoji because there's no emoji for just

622
00:26:20,590 --> 00:26:23,020
like genuine respect and admiration for

623
00:26:23,020 --> 00:26:24,820
the generation that's gone before so I

624
00:26:24,820 --> 00:26:26,530
went with us wearing sunglasses and them

625
00:26:26,530 --> 00:26:28,150
on fire but like I do actually quite

626
00:26:28,150 --> 00:26:33,160
like SAS so what we're what we're trying

627
00:26:33,160 --> 00:26:34,870
to do is take all of the good things

628
00:26:34,870 --> 00:26:38,050
from SAS and every other technique look

629
00:26:38,050 --> 00:26:40,720
at what's possible now that a CSS file

630
00:26:40,720 --> 00:26:43,750
is actually legitimately local and then

631
00:26:43,750 --> 00:26:46,090
see what we want see what's good see

632
00:26:46,090 --> 00:26:47,590
what patterns emerge what auntie ballads

633
00:26:47,590 --> 00:26:49,240
we want to get rid of at the moment with

634
00:26:49,240 --> 00:26:51,340
out of three things into the mix and CSS

635
00:26:51,340 --> 00:26:52,780
module I told you about two the third is

636
00:26:52,780 --> 00:26:56,940
a bit smaller so I don't have time but

637
00:26:56,940 --> 00:26:59,890
that's the game now we're starting from

638
00:26:59,890 --> 00:27:02,020
a new generation of a baseline and we're

639
00:27:02,020 --> 00:27:02,310
look

640
00:27:02,310 --> 00:27:05,700
to see what works and so you might look

641
00:27:05,700 --> 00:27:07,440
at this and not like it that's fine you

642
00:27:07,440 --> 00:27:09,000
might look at it and love other you know

643
00:27:09,000 --> 00:27:10,170
other techniques you might think we're

644
00:27:10,170 --> 00:27:12,990
missing stuff but I hope that we all

645
00:27:12,990 --> 00:27:15,210
agree that that these are our goals

646
00:27:15,210 --> 00:27:17,430
these are our goals and if you if you

647
00:27:17,430 --> 00:27:19,800
come to us with arguments about how we

648
00:27:19,800 --> 00:27:21,300
could introduce things in a CSS modules

649
00:27:21,300 --> 00:27:23,970
that lead to good practice then that's

650
00:27:23,970 --> 00:27:27,600
where we'll go the other thing is how we

651
00:27:27,600 --> 00:27:29,610
can increase will make better

652
00:27:29,610 --> 00:27:31,290
abstractions that save cognitive load as

653
00:27:31,290 --> 00:27:34,080
you're developing then that's the point

654
00:27:34,080 --> 00:27:38,070
of this project I feel like we've made a

655
00:27:38,070 --> 00:27:40,290
new capability with things like web pack

656
00:27:40,290 --> 00:27:42,870
JSP and browser fly to make multi file

657
00:27:42,870 --> 00:27:46,140
CSS and CSS modules is al our best shot

658
00:27:46,140 --> 00:27:50,670
a best guess he didn't just me

659
00:27:50,670 --> 00:27:52,710
by all means there's a whole lot of

660
00:27:52,710 --> 00:27:55,740
people have contributed discussion code

661
00:27:55,740 --> 00:27:58,410
ideas I want to make special mention of

662
00:27:58,410 --> 00:28:00,660
mark and Tobias who did the original

663
00:28:00,660 --> 00:28:02,730
work on the local by default stuff which

664
00:28:02,730 --> 00:28:04,890
really opened this up really unlock to

665
00:28:04,890 --> 00:28:06,540
me Tobias a maintainer of web pack which

666
00:28:06,540 --> 00:28:10,410
makes a big deal is a big part of this

667
00:28:10,410 --> 00:28:15,660
project my slides are up there full of

668
00:28:15,660 --> 00:28:18,600
emoji you can read about it you can look

669
00:28:18,600 --> 00:28:20,610
at the specifications I definitely

670
00:28:20,610 --> 00:28:22,080
welcome feedback I would love to hear

671
00:28:22,080 --> 00:28:24,120
about use case your use case and whether

672
00:28:24,120 --> 00:28:27,420
it works with our stuff yeah thanks a

673
00:28:27,420 --> 00:28:27,570
lot

