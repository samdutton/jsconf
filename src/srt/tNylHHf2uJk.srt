1
00:00:19,199 --> 00:00:21,730
Well, I...

2
00:00:21,730 --> 00:00:24,259
Hi everyone!

3
00:00:24,259 --> 00:00:26,980
My name is Jenna.

4
00:00:26,980 --> 00:00:33,980
I'll be talking to you about the linguistic
relativity of programming languages.

5
00:00:33,980 --> 00:00:35,590
I know from people asking.

6
00:00:35,590 --> 00:00:37,940
What are you talking about.

7
00:00:37,940 --> 00:00:42,420
linguistic relativity is not obvious.

8
00:00:42,420 --> 00:00:43,420
Don't worry.

9
00:00:43,420 --> 00:00:44,680
I'll get there.

10
00:00:44,680 --> 00:00:49,140
First more information on me.

11
00:00:49,140 --> 00:00:55,250
I was fortunate to be part of the Fall 2012
hacker school.

12
00:00:55,250 --> 00:01:01,600
Which is an awesome 3 month program for becoming
a better programmer.

13
00:01:01,600 --> 00:01:04,900
They have a great set of social rules.

14
00:01:04,900 --> 00:01:10,720
Which makes it wonderful.

15
00:01:10,720 --> 00:01:12,420
That was fantastic.

16
00:01:12,420 --> 00:01:17,750
And now I'm a front end engineer at Bitly.

17
00:01:17,750 --> 00:01:26,340
You can find me on internet, Zeigenvector.

18
00:01:26,340 --> 00:01:28,399
Since I'm a good bitizen.

19
00:01:28,399 --> 00:01:33,069
I made you a linke.

20
00:01:33,069 --> 00:01:35,609
Those are the slides.

21
00:01:35,609 --> 00:01:37,189
Send them to your friends.

22
00:01:37,189 --> 00:01:38,189
Cool.

23
00:01:38,189 --> 00:01:40,200
All right.

24
00:01:40,200 --> 00:01:43,240
For the good stuff.

25
00:01:43,240 --> 00:01:47,780
First I'll explain what this linguistic relativity
thing is.

26
00:01:47,780 --> 00:01:53,369
Then, say, does it apply to programming languages?

27
00:01:53,369 --> 00:01:54,369
It does.

28
00:01:54,369 --> 00:01:55,740
Spoiler alert.

29
00:01:55,740 --> 00:01:59,939
Otherwise there will be no talk.

30
00:01:59,939 --> 00:02:07,189
Then I'll move on to, not the first person
to say, programming languages and linguistic

31
00:02:07,189 --> 00:02:09,020
relativity.

32
00:02:09,020 --> 00:02:12,090
Maybe have something to do with eachother.

33
00:02:12,090 --> 00:02:15,030
I'll tell you some other people have said.

34
00:02:15,030 --> 00:02:24,319
Then, go on to say, how it applies to programming
languages and in parallel the implications

35
00:02:24,319 --> 00:02:26,990
of the application.

36
00:02:26,990 --> 00:02:29,099
So, linguistic relativity.

37
00:02:29,099 --> 00:02:33,560
Once upon a time there were 2 men.

38
00:02:33,560 --> 00:02:37,209
Sapir and Benjamin Whorf.

39
00:02:37,209 --> 00:02:48,010
Now, the hypothesis is, it is a miss...

40
00:02:48,010 --> 00:02:49,130
Sapir was his mentor.

41
00:02:49,130 --> 00:02:54,269
Who didn't have much to say on the issue.

42
00:02:54,269 --> 00:02:55,390
This is history.

43
00:02:55,390 --> 00:02:59,680
So, this Sapir-Whorf hypothesis.

44
00:02:59,680 --> 00:03:07,299
The languages you speak determine, the strong
form, or influence, the weaker form, the way

45
00:03:07,299 --> 00:03:10,220
we think.

46
00:03:10,220 --> 00:03:14,720
No one really believes in the strong form.

47
00:03:14,720 --> 00:03:20,260
Because it is naieve to believe that we are
holding constraints by the languages we speak.

48
00:03:20,260 --> 00:03:24,370
We do have the ability to reason about things.

49
00:03:24,370 --> 00:03:26,740
That we don't exactly have words for it.

50
00:03:26,740 --> 00:03:29,040
We can't really explain.

51
00:03:29,040 --> 00:03:33,549
The weaker form, that's linguistic relativity.

52
00:03:33,549 --> 00:03:39,530
While stile controversial, it is easier to
see how it might apply.

53
00:03:39,530 --> 00:03:46,269
How the words that we have, the way that we
have to see things might at least cover our

54
00:03:46,269 --> 00:03:47,609
world.

55
00:03:47,609 --> 00:03:54,880
And an example of this, classic example, the
words that we have for colors.

56
00:03:54,880 --> 00:03:58,099
The colors exist on a spectrum.

57
00:03:58,099 --> 00:04:07,269
But we have a discrete amount of, discrete
words for the color space.

58
00:04:07,269 --> 00:04:15,079
So, the way in English think about this space
that I have up here.

59
00:04:15,079 --> 00:04:19,720
This might be the only use of gradients in
a presentation

60
00:04:19,720 --> 00:04:23,660
We have green and blue.

61
00:04:23,660 --> 00:04:31,660
While the barrier between the two might be
controversial between you and your friends.

62
00:04:31,660 --> 00:04:34,720
There is indeed a line.

63
00:04:34,720 --> 00:04:39,790
However if we were to have a third word in
between.

64
00:04:39,790 --> 00:04:41,160
Grue.

65
00:04:41,160 --> 00:04:44,840
Then we have 3 ways of thinking about this.

66
00:04:44,840 --> 00:04:50,220
2 lines that trisect.

67
00:04:50,220 --> 00:04:52,140
Of this spectrum.

68
00:04:52,140 --> 00:04:56,340
But, this is JS Conf EU.

69
00:04:56,340 --> 00:05:02,140
Does it apply to programming languages?

70
00:05:02,140 --> 00:05:03,360
I think so.

71
00:05:03,360 --> 00:05:08,460
I'd like to propose the programming languages
we know strongly influence the way we think

72
00:05:08,460 --> 00:05:10,590
about programming.

73
00:05:10,590 --> 00:05:12,580
This is strongly influence.

74
00:05:12,580 --> 00:05:16,260
Not quite you know, lazy influence.

75
00:05:16,260 --> 00:05:20,950
That spoken languages have on thought.

76
00:05:20,950 --> 00:05:27,290
This strong influence falls from key difference
that I see between programming languages and

77
00:05:27,290 --> 00:05:29,240
spoken languages.

78
00:05:29,240 --> 00:05:36,190
Programming languages create and manipulate
the space, rather than just describe it.

79
00:05:36,190 --> 00:05:38,840
This is not the case with spoken languages.

80
00:05:38,840 --> 00:05:44,280
We can only describe the space with spoken
languages.

81
00:05:44,280 --> 00:05:46,910
We are not wizzards from Harry Potter.

82
00:05:46,910 --> 00:05:50,490
To have the chair fly.

83
00:05:50,490 --> 00:05:53,440
It is not how it works.

84
00:05:53,440 --> 00:05:59,220
It feels like, when you program, you do magical
power.

85
00:05:59,220 --> 00:06:04,440
The language itself manipulates and creates
the space.

86
00:06:04,440 --> 00:06:10,470
Without programming languages, there is no
space, you are reasoning about.

87
00:06:10,470 --> 00:06:12,490
No data.

88
00:06:12,490 --> 00:06:13,510
Whatever.

89
00:06:13,510 --> 00:06:20,460
So, furthermore, animals don't have language
like we as humans do.

90
00:06:20,460 --> 00:06:27,090
They are capable of interacting with and manipulating
their environment.

91
00:06:27,090 --> 00:06:35,440
So, as I said, I'm not the first person to
say, programming languages, do they intersect?

92
00:06:35,440 --> 00:06:37,350
Have influence on eachother?

93
00:06:37,350 --> 00:06:42,840
Kenneth Iverson, one of the APL language program.

94
00:06:42,840 --> 00:06:45,840
Using symbòls.

95
00:06:45,840 --> 00:06:52,590
Programming languages offer important advantages
as tools of thought.

96
00:06:52,590 --> 00:07:01,620
It will have some influence on the way we
are thinking about the programming space.

97
00:07:01,620 --> 00:07:10,780
More notably and maybe infamously, Paul Graham
had an argument in his paper, speech paper.

98
00:07:10,780 --> 00:07:12,740
Beating the averages.

99
00:07:12,740 --> 00:07:17,710
This argument is the Blub paradox.

100
00:07:17,710 --> 00:07:21,860
Some prograngming languages are more powerful
than others.

101
00:07:21,860 --> 00:07:23,740
He motivates this argument.

102
00:07:23,740 --> 00:07:32,180
By supposing a fake very average programming
language, Blub.

103
00:07:32,180 --> 00:07:36,650
They can do whatever they want to do in Blub.

104
00:07:36,650 --> 00:07:37,650
It is enough for them.

105
00:07:37,650 --> 00:07:39,150
They can get their stuff down.

106
00:07:39,150 --> 00:07:43,520
They look at programmers in weaker languages.

107
00:07:43,520 --> 00:07:44,870
Languages they see as weaker.

108
00:07:44,870 --> 00:07:46,000
How could you use that?

109
00:07:46,000 --> 00:07:48,180
It doesn't have a construct?

110
00:07:48,180 --> 00:07:51,370
How do you do anything?

111
00:07:51,370 --> 00:07:56,060
Similarly they look at other stronger languages.

112
00:07:56,060 --> 00:07:57,840
Programs.

113
00:07:57,840 --> 00:07:59,890
Lisp is the strongest language.

114
00:07:59,890 --> 00:08:01,870
He loves lisp.

115
00:08:01,870 --> 00:08:06,670
So, Blub programmers look up to stronger languages.

116
00:08:06,670 --> 00:08:08,060
I'm happy using Blub.

117
00:08:08,060 --> 00:08:11,720
It can't be that much better.

118
00:08:11,720 --> 00:08:13,010
I don't understand the other things.

119
00:08:13,010 --> 00:08:14,270
I don't use them.

120
00:08:14,270 --> 00:08:17,840
If I don't use them, how important can they
be?

121
00:08:17,840 --> 00:08:23,310
I can get everything I need to do done.

122
00:08:23,310 --> 00:08:27,710
The Lisp programmers look down on Blub.

123
00:08:27,710 --> 00:08:37,300
More concretely, Python, Java, C and Perl.

124
00:08:37,300 --> 00:08:38,630
As Blubs.

125
00:08:38,630 --> 00:08:46,050
And he wonders, how can these programmers
get anything done in these languages?

126
00:08:46,050 --> 00:08:49,590
Without macros?

127
00:08:49,590 --> 00:08:52,440
Similarly, I don't know what macros are.

128
00:08:52,440 --> 00:08:59,130
I'm a mere Blub script programmer.

129
00:08:59,130 --> 00:09:01,050
Maybe I should look into it.

130
00:09:01,050 --> 00:09:04,480
It seems pretty cool.

131
00:09:04,480 --> 00:09:11,520
He goes on to say, programmers in Blub are
satisfied with whatever language they happen

132
00:09:11,520 --> 00:09:16,960
to use, because it dictates the way they think
about programs.

133
00:09:16,960 --> 00:09:21,090
He says, he knows from his own experience.

134
00:09:21,090 --> 00:09:23,370
When he started in Basic.

135
00:09:23,370 --> 00:09:25,910
He didn't miss it.

136
00:09:25,910 --> 00:09:29,520
He thought in basic.

137
00:09:29,520 --> 00:09:37,420
Dijkstra had something more to say about it.

138
00:09:37,420 --> 00:09:42,980
He says, they are mentally mutilated beyond
hope of regeneration.

139
00:09:42,980 --> 00:09:51,030
Well, this might have been said to prove a
point of some sort.

140
00:09:51,030 --> 00:09:55,200
Really, mentally mutilated beyond hope?

141
00:09:55,200 --> 00:09:57,940
You know...

142
00:09:57,940 --> 00:09:59,320
No.

143
00:09:59,320 --> 00:10:04,070
Paul Graham was able to rise above his basic
roots and learned Lisp.

144
00:10:04,070 --> 00:10:07,070
The most powerful language.

145
00:10:07,070 --> 00:10:15,510
With this I would like to amend my original
proposal and say that we are influenced by

146
00:10:15,510 --> 00:10:22,640
the constructs and idioms of the most powerful
programming language we know, not the languages

147
00:10:22,640 --> 00:10:26,740
themselves, or the language we are using at
the time.

148
00:10:26,740 --> 00:10:37,070
So, what do we do to really you know, optimize
for everyone mind expansion?

149
00:10:37,070 --> 00:10:40,300
There are 3 differences that I see, 3 more
differences.

150
00:10:40,300 --> 00:10:46,100
That I see between programming languages and
natural languages.

151
00:10:46,100 --> 00:10:49,210
Which motivates this proposal.

152
00:10:49,210 --> 00:10:54,850
The first of which is that we can learn more
programming languages and how to program them

153
00:10:54,850 --> 00:10:55,900
idiomatically.

154
00:10:55,900 --> 00:10:58,450
This is very hard.

155
00:10:58,450 --> 00:11:02,700
Especially for adults to learn zozer A new
spoken language.

156
00:11:02,700 --> 00:11:09,310
You can study one for years and years and
never become fluent.

157
00:11:09,310 --> 00:11:10,310
You might forget it.

158
00:11:10,310 --> 00:11:14,580
This is because your brains are no longer
plastic.

159
00:11:14,580 --> 00:11:22,090
Your neurons don't have the capability of
learning things as you used to.

160
00:11:22,090 --> 00:11:26,460
If you don't learn spoken language at a certain
age, you are doomed not to learn any.

161
00:11:26,460 --> 00:11:32,750
It is not with programming languages.

162
00:11:32,750 --> 00:11:37,080
We were capable of learning 1.

163
00:11:37,080 --> 00:11:43,330
Assume most of you here do know JS.

164
00:11:43,330 --> 00:11:45,680
We do have the capability to learn new languages.

165
00:11:45,680 --> 00:11:47,840
And learn another one.

166
00:11:47,840 --> 00:11:54,040
Within 6 months you are likely to be proficient
and make cool things if you want to.

167
00:11:54,040 --> 00:11:58,670
An example is from my personal experience.

168
00:11:58,670 --> 00:12:03,660
I started programming as a junior in university.

169
00:12:03,660 --> 00:12:11,779
For some reason, in 2010, they still decide
they are going to teach new programmers how

170
00:12:11,779 --> 00:12:14,360
to program in Java.

171
00:12:14,360 --> 00:12:17,620
And with that, they only taught us loops.

172
00:12:17,620 --> 00:12:21,810
I was pretty happy.

173
00:12:21,810 --> 00:12:23,810
Mutating data and arrays.

174
00:12:23,810 --> 00:12:25,460
It was powerful.

175
00:12:25,460 --> 00:12:29,400
I felt like I can do anything.

176
00:12:29,400 --> 00:12:35,520
Then, a year later I took a class in algorithms
and data structures.

177
00:12:35,520 --> 00:12:38,440
With that came Python.

178
00:12:38,440 --> 00:12:41,690
With Python came the list comprehension.

179
00:12:41,690 --> 00:12:44,660
I was able to learn this quickly.

180
00:12:44,660 --> 00:12:48,880
Especially the more simple constructs felt
like looping.

181
00:12:48,880 --> 00:12:57,870
Eventually I could pick up the more complicated
constructs zozer And it was pretty good.

182
00:12:57,870 --> 00:13:02,290
Then, I went to hacker school and started
off happy.

183
00:13:02,290 --> 00:13:11,270
In my programming language world zozer I made
friends who were super hardcore into functional

184
00:13:11,270 --> 00:13:12,710
languages.

185
00:13:12,710 --> 00:13:15,250
Do you even map, bro?

186
00:13:15,250 --> 00:13:16,630
What's that?

187
00:13:16,630 --> 00:13:21,370
So, I eventually picked up map.

188
00:13:21,370 --> 00:13:26,410
It took some time to wrap my head around it.

189
00:13:26,410 --> 00:13:28,920
I got it.

190
00:13:28,920 --> 00:13:36,070
And now I have chose map out of the toolbox
first as much as I can.

191
00:13:36,070 --> 00:13:43,760
So, the second way that programming languages
and natural languages are different.

192
00:13:43,760 --> 00:13:49,089
Is that we can implement the constructs of
more powerful languages, programming languages

193
00:13:49,089 --> 00:13:53,260
in whatever language we use at the time.

194
00:13:53,260 --> 00:13:55,820
This really does not happen in spoken languages.

195
00:13:55,820 --> 00:14:01,010
You can't say, well, I went to Germany and
heard this cool word.

196
00:14:01,010 --> 00:14:02,290
I'm going to keep using it.

197
00:14:02,290 --> 00:14:08,300
Here is the dictionary of all the cool words.

198
00:14:08,300 --> 00:14:11,130
I'm going to be using them.

199
00:14:11,130 --> 00:14:13,170
That doesn't happen.

200
00:14:13,170 --> 00:14:14,790
In spoken languages.

201
00:14:14,790 --> 00:14:17,360
It happens in programming languages.

202
00:14:17,360 --> 00:14:19,500
It happens with libraries.

203
00:14:19,500 --> 00:14:27,290
But more popularly in Javascript we have transformations,
precompilers and the like.

204
00:14:27,290 --> 00:14:34,130
So, Steele said, we should now think of a
language design for being a pattern for language

205
00:14:34,130 --> 00:14:40,100
designs, a tool for making more tools of the
same kind.

206
00:14:40,100 --> 00:14:47,080
And, I agree with that.

207
00:14:47,080 --> 00:14:52,890
An example of this is underscore or lowdash.

208
00:14:52,890 --> 00:14:58,420
Help stabilize what we can use, regardless
of the es spec.

209
00:14:58,420 --> 00:15:05,330
So, the JS is the thing we have to worry about.

210
00:15:05,330 --> 00:15:08,920
But, that's besides the point.

211
00:15:08,920 --> 00:15:12,350
Underscore allows me to use map whenever I
want.

212
00:15:12,350 --> 00:15:15,890
I love map now.

213
00:15:15,890 --> 00:15:19,450
I don't need it to be on the prototype necessarily.

214
00:15:19,450 --> 00:15:22,500
As long as I can do mapping things.

215
00:15:22,500 --> 00:15:26,220
All I really need.

216
00:15:26,220 --> 00:15:27,700
Another example of this.

217
00:15:27,700 --> 00:15:31,420
That was at JS camp US.

218
00:15:31,420 --> 00:15:32,420
Is Sweet.Js.

219
00:15:32,420 --> 00:15:36,250
You have macros now.

220
00:15:36,250 --> 00:15:40,399
We can craft the language we always wanted.

221
00:15:40,399 --> 00:15:45,529
No longer confined by Blub script.

222
00:15:45,529 --> 00:15:51,210
So, never used it.

223
00:15:51,210 --> 00:15:53,770
Going to try to in the future.

224
00:15:53,770 --> 00:16:02,340
And third example of this is, we have these
future scripts.

225
00:16:02,340 --> 00:16:04,290
They are still in the future.

226
00:16:04,290 --> 00:16:13,529
And you are all itching for classes and generators
and array comprehension.

227
00:16:13,529 --> 00:16:14,690
That can be now.

228
00:16:14,690 --> 00:16:18,410
If we use features and feature specs.

229
00:16:18,410 --> 00:16:21,980
No longer restricted by the language wae have
now.

230
00:16:21,980 --> 00:16:24,161
We can bring in those things that we have
seen in other languages.

231
00:16:24,161 --> 00:16:25,910
That we missed.

232
00:16:25,910 --> 00:16:28,740
If we want to.

233
00:16:28,740 --> 00:16:35,860
Thirdly, programming languages are synthetic
and we can change them if we want to.

234
00:16:35,860 --> 00:16:37,920
We make up programming languages.

235
00:16:37,920 --> 00:16:43,860
They can be whatever we want them to be.

236
00:16:43,860 --> 00:16:46,480
It is not really the case with spoken languages.

237
00:16:46,480 --> 00:16:49,800
They evolve over hundreds of years with no
regulations.

238
00:16:49,800 --> 00:16:53,089
It leads to irregularitis.

239
00:16:53,089 --> 00:16:59,080
We love to talk about the quirks and irregularities.

240
00:16:59,080 --> 00:17:05,240
We have it good, compared to English.

241
00:17:05,240 --> 00:17:08,750
Spoken languages tend to not catch on.

242
00:17:08,750 --> 00:17:10,399
There was Esperanto.

243
00:17:10,399 --> 00:17:15,149
Do you know any Esperanto speakers?

244
00:17:15,149 --> 00:17:17,270
No.

245
00:17:17,270 --> 00:17:20,600
A short anecdote.

246
00:17:20,600 --> 00:17:30,139
As a kid I used to think that spoken languages
like English were indeed standardized by a

247
00:17:30,139 --> 00:17:33,570
group of very important smart people sitting
in a room.

248
00:17:33,570 --> 00:17:37,190
It is not the case with spoken languages.

249
00:17:37,190 --> 00:17:43,029
But, really don't know what goes in TC night.

250
00:17:43,029 --> 00:17:53,259
So, of that, we can, if we are powerful enough,
submit proposals to Javascript or whatever

251
00:17:53,259 --> 00:17:55,980
programming language we are using.

252
00:17:55,980 --> 00:18:06,860
It is important between the difference of
computers and humans.

253
00:18:06,860 --> 00:18:09,210
So, we loose that.

254
00:18:09,210 --> 00:18:12,759
Also, get less quirks in languages.

255
00:18:12,759 --> 00:18:14,960
That's cool.

256
00:18:14,960 --> 00:18:19,549
Example of what is changing.

257
00:18:19,549 --> 00:18:21,659
As I mentioned.

258
00:18:21,659 --> 00:18:22,840
Javascript as array.

259
00:18:22,840 --> 00:18:24,210
And map in it.

260
00:18:24,210 --> 00:18:29,399
Eventually, we'll get array comprehension
and generators.

261
00:18:29,399 --> 00:18:30,399
That's cool.

262
00:18:30,399 --> 00:18:31,669
I know how to use array comprehension.

263
00:18:31,669 --> 00:18:36,090
Generators not yet.

264
00:18:36,090 --> 00:18:38,980
Still a little mystical to me.

265
00:18:38,980 --> 00:18:45,489
But I trust that like many other people, eventually
I'll be use them idiomatically.

266
00:18:45,489 --> 00:18:50,269
That will be awesome.

267
00:18:50,269 --> 00:18:57,650
So, Guy Steele said, languages that can't
easily grow will die.

268
00:18:57,650 --> 00:18:59,240
And yes.

269
00:18:59,240 --> 00:19:00,679
I think so.

270
00:19:00,679 --> 00:19:03,730
If we all go off and know other programming
languages.

271
00:19:03,730 --> 00:19:07,409
And JS doesn't have what we have.

272
00:19:07,409 --> 00:19:10,840
We will defect and write something else.

273
00:19:10,840 --> 00:19:13,970
I really want macros.

274
00:19:13,970 --> 00:19:17,970
But, we need you guys.

275
00:19:17,970 --> 00:19:20,059
Writing Javascript.

276
00:19:20,059 --> 00:19:22,269
We need Javascripts to grow.

277
00:19:22,269 --> 00:19:23,389
Furthermore.

278
00:19:23,389 --> 00:19:31,129
I'd like to say, grow allows for more rapid
growth.

279
00:19:31,129 --> 00:19:38,570
But what I mean is that for example, like
once we get generators.

280
00:19:38,570 --> 00:19:45,360
We can write more efficient and concise and
idiomatic things that we also miss.

281
00:19:45,360 --> 00:19:50,480
Also I read this article recently.

282
00:19:50,480 --> 00:19:55,840
About Csp processes.

283
00:19:55,840 --> 00:19:59,129
And also enclosures.

284
00:19:59,129 --> 00:20:00,169
I don't understand them.

285
00:20:00,169 --> 00:20:05,059
I'll be the first one to admit.

286
00:20:05,059 --> 00:20:09,230
But, you know, people want that.

287
00:20:09,230 --> 00:20:16,000
And if they want that it is not in JS, what
are they going to do?

288
00:20:16,000 --> 00:20:23,870
They want to be able to write these things
and have them in the language that they are

289
00:20:23,870 --> 00:20:24,870
writing.

290
00:20:24,870 --> 00:20:25,870
So, what do we do?

291
00:20:25,870 --> 00:20:29,470
We could all go off and learn closure script
and come back.

292
00:20:29,470 --> 00:20:34,340
Next year it will be CLJS 2015.

293
00:20:34,340 --> 00:20:39,429
Or, we all could go and new languages.

294
00:20:39,429 --> 00:20:44,830
It will make you a better programmer if you
know many languages.

295
00:20:44,830 --> 00:20:46,630
And bring them back to the community.

296
00:20:46,630 --> 00:20:49,470
And share with your friends and fellow programmers.

297
00:20:49,470 --> 00:20:52,749
Those who don't know JS.

298
00:20:52,749 --> 00:20:54,870
And make it great.

299
00:20:54,870 --> 00:21:02,870
I think, out of all of these 3 opportunities
that we have.

300
00:21:02,870 --> 00:21:08,970
I think the second option, creating libraries,
is the best.

301
00:21:08,970 --> 00:21:10,210
It is the most democratic.

302
00:21:10,210 --> 00:21:11,210
We can do it.

303
00:21:11,210 --> 00:21:18,359
It will teach you about the components of
your favourite concept in other languages.

304
00:21:18,359 --> 00:21:26,289
The JS community has a wide array of people
of different abilities.

305
00:21:26,289 --> 00:21:29,510
Few of them have cloud.

306
00:21:29,510 --> 00:21:32,351
So, that's all we have to do.

307
00:21:32,351 --> 00:21:37,769
We can write libraries if you want to use
something.

308
00:21:37,769 --> 00:21:48,679
But, another talk could be, well, let's have
1 language to rule them on all.

309
00:21:48,679 --> 00:21:49,679
That's not good either.

310
00:21:49,679 --> 00:21:52,779
There is a reason that we use languages that
we use.

311
00:21:52,779 --> 00:21:58,909
They evolve of certain circumstances.

312
00:21:58,909 --> 00:21:59,909
That's why we use them.

313
00:21:59,909 --> 00:22:02,640
There is reason why we have many languages.

314
00:22:02,640 --> 00:22:03,640
Let's keep JS weird.

315
00:22:03,640 --> 00:22:04,640
All right!

316
00:22:04,640 --> 00:22:05,640
(applause)

317
00:22:05,640 --> 00:22:06,640
so, these slides are on bit.Ly.

318
00:22:06,640 --> 00:22:07,640
And there is a slightly less evolved blog
post.

319
00:22:07,640 --> 00:22:08,640
We like short links.

320
00:22:08,640 --> 00:22:09,640
You can find me on Twitter.

321
00:22:09,640 --> 00:22:10,640
Hit me up with any questions.

322
00:22:10,640 --> 00:22:11,640
Thanks!

323
00:22:11,640 --> 00:22:12,640
That's what I look like if you can't see me
down here.

