1
00:00:18,950 --> 00:00:22,890

hi I'm Peter Higgins I had the pleasure

2
00:00:22,890 --> 00:00:25,260
of having my own little checkbox on one

3
00:00:25,260 --> 00:00:27,620
of the J s Kampf speaker submission

4
00:00:27,620 --> 00:00:30,720
forms yeah all of them maybe I don't

5
00:00:30,720 --> 00:00:32,790
know what it is that is compelling about

6
00:00:32,790 --> 00:00:35,400
me in particular that they want to hear

7
00:00:35,400 --> 00:00:38,610
but this is dojo already did that it's a

8
00:00:38,610 --> 00:00:40,260
it's a catchphrase that I've been saying

9
00:00:40,260 --> 00:00:43,980
for years and years and years now it's

10
00:00:43,980 --> 00:00:45,930
not very funny it's actually kind of

11
00:00:45,930 --> 00:00:47,580
depressing so we're gonna get get into

12
00:00:47,580 --> 00:00:49,620
that about me

13
00:00:49,620 --> 00:00:51,870
J's coffee alumni am a former dojo

14
00:00:51,870 --> 00:00:54,230
project leader I am no longer actively

15
00:00:54,230 --> 00:00:57,450
contributing to dojo I probably still

16
00:00:57,450 --> 00:00:58,650
write permissions but I don't actually

17
00:00:58,650 --> 00:01:05,550
do anything that's problematic I'm a

18
00:01:05,550 --> 00:01:10,110
generic code monkey my time as a project

19
00:01:10,110 --> 00:01:12,930
leave is much like this picture depicts

20
00:01:12,930 --> 00:01:15,930
a professional cat herder actually list

21
00:01:15,930 --> 00:01:17,759
this on my various LinkedIn and on my

22
00:01:17,759 --> 00:01:20,850
resume and and whatnot it's true of any

23
00:01:20,850 --> 00:01:23,580
open source lead if you own a project

24
00:01:23,580 --> 00:01:25,549
that more than 10 people are involved in

25
00:01:25,549 --> 00:01:29,430
you're a cat herder doesn't matter what

26
00:01:29,430 --> 00:01:31,229
it is it's a lot of a lot of work

27
00:01:31,229 --> 00:01:33,690
because cats are very agreeable I've

28
00:01:33,690 --> 00:01:36,990
been busy I left dojo and kind of

29
00:01:36,990 --> 00:01:38,490
disappeared into being just code monkey

30
00:01:38,490 --> 00:01:40,680
because of my princess fluffy but this

31
00:01:40,680 --> 00:01:43,710
is I'm a new father and entirely elated

32
00:01:43,710 --> 00:01:47,820
about that so that's where I've been and

33
00:01:47,820 --> 00:01:51,240
welcome to J's comm this is an epic

34
00:01:51,240 --> 00:01:53,760
thing that we've been doing here for

35
00:01:53,760 --> 00:01:55,770
some years now if you see this guy

36
00:01:55,770 --> 00:01:59,520
anywhere around thank him give him a pat

37
00:01:59,520 --> 00:02:00,960
on the back kick him in the shins or

38
00:02:00,960 --> 00:02:03,180
whatever it is he's a lot of work goes

39
00:02:03,180 --> 00:02:05,939
into this I like to think of this block

40
00:02:05,939 --> 00:02:09,560
as your digestive tract here we are

41
00:02:09,560 --> 00:02:11,910
finishing up your meals you're gonna sit

42
00:02:11,910 --> 00:02:13,950
and contemplate and I'm not really gonna

43
00:02:13,950 --> 00:02:15,600
do anything really really technical this

44
00:02:15,600 --> 00:02:17,040
is not going to blow your mind it's just

45
00:02:17,040 --> 00:02:19,170
going to Food for Thought light light

46
00:02:19,170 --> 00:02:22,920
food for thought and hopefully you will

47
00:02:22,920 --> 00:02:25,980
digest and innovate and continue on the

48
00:02:25,980 --> 00:02:27,209
spirit of jsf

49
00:02:27,209 --> 00:02:30,239
of amazing mind-blowing things so the

50
00:02:30,239 --> 00:02:31,680
real talk here is called history of the

51
00:02:31,680 --> 00:02:32,129
world

52
00:02:32,129 --> 00:02:33,450
it's not really doge already did that

53
00:02:33,450 --> 00:02:35,879
it's kind of a history of my world in

54
00:02:35,879 --> 00:02:38,819
JavaScript and whatnot I this year I'm

55
00:02:38,819 --> 00:02:41,819
celebrating 20 years of interwebs I got

56
00:02:41,819 --> 00:02:45,019
my first dial-up connection in 1993 as a

57
00:02:45,019 --> 00:02:49,530
young young lad at the ripe age of 13 it

58
00:02:49,530 --> 00:02:51,659
was I subsequently got kicked off the

59
00:02:51,659 --> 00:02:56,549
internet by the same ISP in 1994 but

60
00:02:56,549 --> 00:02:59,540
that's a whole long after track story I

61
00:02:59,540 --> 00:03:02,549
regained my Internet so what do we have

62
00:03:02,549 --> 00:03:05,609
we have 1993-1998 is kind of a dark age

63
00:03:05,609 --> 00:03:08,129
of the internet it was we've got dial-up

64
00:03:08,129 --> 00:03:10,260
we don't have anything this is this is

65
00:03:10,260 --> 00:03:12,599
awful this uh lots of the best when

66
00:03:12,599 --> 00:03:14,819
viewed and started I would still be

67
00:03:14,819 --> 00:03:17,519
biessing I was a heavy heavy BBS er from

68
00:03:17,519 --> 00:03:21,239
the age of 10 on so that was more

69
00:03:21,239 --> 00:03:22,500
interesting to me than the internet at

70
00:03:22,500 --> 00:03:25,049
the time but it kind of progressed on

71
00:03:25,049 --> 00:03:27,000
and then people started using it and

72
00:03:27,000 --> 00:03:28,799
then when the y2k thing happened it's

73
00:03:28,799 --> 00:03:30,180
that's when kind of like this whole

74
00:03:30,180 --> 00:03:32,489
pivotal thing happened it seemed like

75
00:03:32,489 --> 00:03:35,400
the BBS software at the time renegade

76
00:03:35,400 --> 00:03:37,349
just didn't want to fix their y2k bug so

77
00:03:37,349 --> 00:03:41,489
they quit developing renegade so it kind

78
00:03:41,489 --> 00:03:43,799
of went on into me focusing more on the

79
00:03:43,799 --> 00:03:46,859
internet seeing what was going on it's

80
00:03:46,859 --> 00:03:51,120
1999 right so we got Ajax we've got the

81
00:03:51,120 --> 00:03:54,510
the beginnings of the browser's the the

82
00:03:54,510 --> 00:03:57,030
majors or whatever Lynx was awesome

83
00:03:57,030 --> 00:03:59,299
because that was still a viable option

84
00:03:59,299 --> 00:04:02,129
unfortunately it's not so viable these

85
00:04:02,129 --> 00:04:03,209
days and then of course you have the

86
00:04:03,209 --> 00:04:06,180
granddaddy of most of the modern the web

87
00:04:06,180 --> 00:04:07,739
kits and the Chrome's and everything

88
00:04:07,739 --> 00:04:10,139
that's derivative of that conker which

89
00:04:10,139 --> 00:04:13,709
was pretty awesome in itself and 2001 to

90
00:04:13,709 --> 00:04:15,540
2005 we kind of went through like a

91
00:04:15,540 --> 00:04:18,359
renaissance right like Flash was

92
00:04:18,359 --> 00:04:20,400
everywhere it was we already had as you

93
00:04:20,400 --> 00:04:22,889
saw on the web RTC Raimi made a comment

94
00:04:22,889 --> 00:04:25,020
that they already had access to the

95
00:04:25,020 --> 00:04:26,490
camera and they already had access to

96
00:04:26,490 --> 00:04:28,229
the microphone and stuff and that's kind

97
00:04:28,229 --> 00:04:30,080
of that's disheartening right because

98
00:04:30,080 --> 00:04:31,740
flashes everywhere

99
00:04:31,740 --> 00:04:33,810
but in this time the JavaScript people

100
00:04:33,810 --> 00:04:35,430
are doing it's like the tail end of the

101
00:04:35,430 --> 00:04:38,729
dhtml amazingness where you've got the

102
00:04:38,729 --> 00:04:41,639
snowflakes and all the cool stuff coming

103
00:04:41,639 --> 00:04:43,289
down on the screen and then that's when

104
00:04:43,289 --> 00:04:44,909
the JavaScript library started forming

105
00:04:44,909 --> 00:04:45,300
it's like

106
00:04:45,300 --> 00:04:48,330
there's a thing here and we can form

107
00:04:48,330 --> 00:04:50,550
whole libraries to make everything

108
00:04:50,550 --> 00:04:51,180
awesome

109
00:04:51,180 --> 00:04:52,530
we got Script oculus and prototype

110
00:04:52,530 --> 00:04:53,930
prototype is probably one of the first

111
00:04:53,930 --> 00:04:58,170
real library solid that is a derivative

112
00:04:58,170 --> 00:05:01,650
of all these things then we get into

113
00:05:01,650 --> 00:05:03,360
2006 2009 this is where my major

114
00:05:03,360 --> 00:05:05,820
contribution to dojo really happened I

115
00:05:05,820 --> 00:05:07,860
was a little bit before and a little bit

116
00:05:07,860 --> 00:05:09,720
after but this is where the the sweet

117
00:05:09,720 --> 00:05:11,250
spot is and this is where there was a

118
00:05:11,250 --> 00:05:16,560
lot of fighting this is and Angus Kroll

119
00:05:16,560 --> 00:05:18,330
did a great talk

120
00:05:18,330 --> 00:05:20,190
the politics of JavaScript and he

121
00:05:20,190 --> 00:05:21,930
covered this really well so you should

122
00:05:21,930 --> 00:05:24,540
go find that talk and watch this but

123
00:05:24,540 --> 00:05:25,560
we'll double back here this is where

124
00:05:25,560 --> 00:05:26,820
dojo was doing things but there was a

125
00:05:26,820 --> 00:05:28,800
lot of fighting I seeing Indra DuPont

126
00:05:28,800 --> 00:05:30,930
here now makes me think of a

127
00:05:30,930 --> 00:05:32,580
particularly funny thing where Alex

128
00:05:32,580 --> 00:05:35,550
Russell was ranting he is another former

129
00:05:35,550 --> 00:05:37,230
approach dojo Project Lead and he's

130
00:05:37,230 --> 00:05:38,850
ranting heard it's like sucks

131
00:05:38,850 --> 00:05:40,590
you shouldn't use this whatever and it

132
00:05:40,590 --> 00:05:42,720
kind of created this rift right and then

133
00:05:42,720 --> 00:05:45,360
here at the tail end of this 2009 Chris

134
00:05:45,360 --> 00:05:47,100
comes in and says I'm gonna publicly

135
00:05:47,100 --> 00:05:49,830
shame you if you start arguing with

136
00:05:49,830 --> 00:05:51,630
people if you don't offer meaningful

137
00:05:51,630 --> 00:05:54,060
solutions and if you don't don't help

138
00:05:54,060 --> 00:05:56,010
you're not you're a part of the problem

139
00:05:56,010 --> 00:05:58,230
rather than a solution so we're in the

140
00:05:58,230 --> 00:05:59,550
modern era now right it starts about

141
00:05:59,550 --> 00:06:02,940
2010 it's going forward this is where

142
00:06:02,940 --> 00:06:05,640
all the amazing stuff this is a link to

143
00:06:05,640 --> 00:06:07,080
anguses talk I stole this slide

144
00:06:07,080 --> 00:06:08,700
completely it was like oh I don't want

145
00:06:08,700 --> 00:06:11,040
to have to go find my own logos but he

146
00:06:11,040 --> 00:06:13,220
left off a lot of people and a lot of

147
00:06:13,220 --> 00:06:15,570
little projects and stuff but this is

148
00:06:15,570 --> 00:06:25,050
like an age of enlightening all this

149
00:06:25,050 --> 00:06:30,560
time is the question this one I spent

150
00:06:30,560 --> 00:06:34,770
four years of my life defending this to

151
00:06:34,770 --> 00:06:36,900
the standards the to the zealots or

152
00:06:36,900 --> 00:06:38,970
whatever this was this is a fate worse

153
00:06:38,970 --> 00:06:41,490
than death it was like I I you know I

154
00:06:41,490 --> 00:06:43,530
shot young your grave or whatever it's

155
00:06:43,530 --> 00:06:48,540
like one attribute dosha type all it was

156
00:06:48,540 --> 00:06:51,390
doing under the covers was look at the

157
00:06:51,390 --> 00:06:53,040
attribute find the string get an object

158
00:06:53,040 --> 00:06:55,230
based on that and knew it up and the

159
00:06:55,230 --> 00:06:57,540
props are other note attributes that

160
00:06:57,540 --> 00:06:58,919
were there so

161
00:06:58,919 --> 00:07:05,999
okay cool html5 comes along and hey the

162
00:07:05,999 --> 00:07:08,939
data prop it's been it vindicated

163
00:07:08,939 --> 00:07:10,949
everything Doge is gonna do so let's

164
00:07:10,949 --> 00:07:13,370
just go change that to de todo Geo type

165
00:07:13,370 --> 00:07:15,389
problem solved no ones no one's gonna

166
00:07:15,389 --> 00:07:17,849
complain same stuff new class new prop

167
00:07:17,849 --> 00:07:20,939
node but why not use data set right

168
00:07:20,939 --> 00:07:22,919
because it's this is html5 this is the

169
00:07:22,919 --> 00:07:25,319
future this is amazing

170
00:07:25,319 --> 00:07:29,340
but in order to use data set we have to

171
00:07:29,340 --> 00:07:30,870
test for data set because we support

172
00:07:30,870 --> 00:07:34,979
browsers that don't have data set so we

173
00:07:34,979 --> 00:07:36,810
do we do a little quick feature test

174
00:07:36,810 --> 00:07:39,120
that's four lines of code to add to our

175
00:07:39,120 --> 00:07:41,520
thing oh and then we have to write a

176
00:07:41,520 --> 00:07:43,830
shim around it because if you're using

177
00:07:43,830 --> 00:07:47,129
props it does this mix case thing where

178
00:07:47,129 --> 00:07:48,930
the the prop is actually when it's on

179
00:07:48,930 --> 00:07:51,000
the data set it comes it's like the CSS

180
00:07:51,000 --> 00:07:54,930
CSS to JavaScript CSS and so we end up

181
00:07:54,930 --> 00:07:57,060
with this and we've got our native

182
00:07:57,060 --> 00:07:58,800
branch which is hey that's pretty cool

183
00:07:58,800 --> 00:08:00,629
just return this off and then you've got

184
00:08:00,629 --> 00:08:02,279
all this transforming so we've got like

185
00:08:02,279 --> 00:08:04,949
one two three depth of function calling

186
00:08:04,949 --> 00:08:08,550
just to do something for a data set but

187
00:08:08,550 --> 00:08:12,389
why not in the end it's all just get

188
00:08:12,389 --> 00:08:14,699
attribute it that's how it worked like

189
00:08:14,699 --> 00:08:16,259
it worked with the dojo type I worked

190
00:08:16,259 --> 00:08:17,939
with whatever attribute was there the

191
00:08:17,939 --> 00:08:21,240
spec never said explicitly ignore it

192
00:08:21,240 --> 00:08:23,099
just said don't do anything with that

193
00:08:23,099 --> 00:08:24,509
tributes we don't know so it wasn't

194
00:08:24,509 --> 00:08:28,669
really invalid the holder type thing but

195
00:08:28,669 --> 00:08:32,550
in the end back to just get attribute

196
00:08:32,550 --> 00:08:36,839
this is way too much for just looking up

197
00:08:36,839 --> 00:08:40,199
an attribute and so we also had the

198
00:08:40,199 --> 00:08:42,959
backwards compatibility which was always

199
00:08:42,959 --> 00:08:45,480
very important to dojo that the dojo

200
00:08:45,480 --> 00:08:48,899
type would still keep working so in the

201
00:08:48,899 --> 00:08:51,209
end well I have the wrapper for

202
00:08:51,209 --> 00:08:52,320
something that was just going to go back

203
00:08:52,320 --> 00:08:54,720
to I get attribute when all you had to

204
00:08:54,720 --> 00:08:56,970
do was detect if the data dojo type was

205
00:08:56,970 --> 00:08:59,880
there use this new way but still use the

206
00:08:59,880 --> 00:09:02,610
get attribute and if you're unfamiliar

207
00:09:02,610 --> 00:09:05,579
with what the dojo type attribute does

208
00:09:05,579 --> 00:09:09,569
in the first place it's very if you use

209
00:09:09,569 --> 00:09:11,970
backbone just passing the the node to

210
00:09:11,970 --> 00:09:12,870
the element and create

211
00:09:12,870 --> 00:09:14,640
new instance of a thing right there in

212
00:09:14,640 --> 00:09:17,430
the place in the Dom so using the Dom to

213
00:09:17,430 --> 00:09:20,010
store the data and the definition of

214
00:09:20,010 --> 00:09:20,690
things

215
00:09:20,690 --> 00:09:24,960
dojo did early early on and then of

216
00:09:24,960 --> 00:09:26,850
course you know bootstrap with its but I

217
00:09:26,850 --> 00:09:30,480
actually honestly I find two things

218
00:09:30,480 --> 00:09:31,950
wrong with this with the bootstrap you

219
00:09:31,950 --> 00:09:35,100
won the spec recommends I guess it's not

220
00:09:35,100 --> 00:09:38,040
set in stone that you prefix your data

221
00:09:38,040 --> 00:09:40,110
attributes if you are a library or doing

222
00:09:40,110 --> 00:09:44,570
anything so the data dojo type was

223
00:09:44,570 --> 00:09:47,100
intentionally added the dojo in there

224
00:09:47,100 --> 00:09:49,970
because of that right or the I guess the

225
00:09:49,970 --> 00:09:52,850
example in the spec was do query and

226
00:09:52,850 --> 00:09:57,240
Jojo I forget but they referenced those

227
00:09:57,240 --> 00:09:59,490
libraries specifically but it's just a

228
00:09:59,490 --> 00:10:02,070
way of accessing data upon the node so

229
00:10:02,070 --> 00:10:05,070
that's that's cool right we did

230
00:10:05,070 --> 00:10:07,200
something right but we did it wrong to

231
00:10:07,200 --> 00:10:08,790
begin with and we did this wrong to

232
00:10:08,790 --> 00:10:10,830
begin with to and this is a really

233
00:10:10,830 --> 00:10:15,029
really heated heated argument module

234
00:10:15,029 --> 00:10:17,580
loading does anyone has anyone ever

235
00:10:17,580 --> 00:10:21,810
written a module loader nice do you

236
00:10:21,810 --> 00:10:24,270
still use it no okay

237
00:10:24,270 --> 00:10:26,480
so really it's a module loader is just a

238
00:10:26,480 --> 00:10:28,980
we've determined through through years

239
00:10:28,980 --> 00:10:31,170
of of trying that it's really just

240
00:10:31,170 --> 00:10:35,070
inject injecting scripts right so these

241
00:10:35,070 --> 00:10:36,540
are a lot of injected scripts this is

242
00:10:36,540 --> 00:10:39,839
actually off of my airline website I

243
00:10:39,839 --> 00:10:42,560
just happen to like oh it's random page

244
00:10:42,560 --> 00:10:45,660
US air is up this is a nightmare

245
00:10:45,660 --> 00:10:48,029
and this has got to be generated because

246
00:10:48,029 --> 00:10:50,370
I don't know why it has to be generated

247
00:10:50,370 --> 00:10:52,080
actually because there might be someone

248
00:10:52,080 --> 00:10:54,050
that actually typed all this stuff out

249
00:10:54,050 --> 00:10:57,209
but you notice they're using jQuery 1/5

250
00:10:57,209 --> 00:11:02,640
which is four orders old technically but

251
00:11:02,640 --> 00:11:04,709
I bet it's because the 17th one down

252
00:11:04,709 --> 00:11:07,080
here doesn't support whatever the next

253
00:11:07,080 --> 00:11:09,839
the 1/7 API is of jQuery so this is a

254
00:11:09,839 --> 00:11:10,500
nightmare

255
00:11:10,500 --> 00:11:13,500
we need module loading in JavaScript for

256
00:11:13,500 --> 00:11:15,810
anything bigger than just your your

257
00:11:15,810 --> 00:11:18,240
little demo page that has some has

258
00:11:18,240 --> 00:11:21,890
implying so we created it early dojo

259
00:11:21,890 --> 00:11:26,280
supported a concept of packages where

260
00:11:26,280 --> 00:11:27,010
you could pass it

261
00:11:27,010 --> 00:11:30,610
a wild card but it wasn't really magical

262
00:11:30,610 --> 00:11:32,620
or it wasn't anything special right the

263
00:11:32,620 --> 00:11:34,090
asterik just meant load up package

264
00:11:34,090 --> 00:11:37,830
underscore underscore or dunder package

265
00:11:37,830 --> 00:11:40,000
because we didn't have a way to do

266
00:11:40,000 --> 00:11:42,190
Durand X's we can't like look into the

267
00:11:42,190 --> 00:11:44,290
file system and see hey what files are

268
00:11:44,290 --> 00:11:47,620
in this we can't do import from so we

269
00:11:47,620 --> 00:11:49,240
decided this is a great idea but the

270
00:11:49,240 --> 00:11:51,550
fact that it was just under package it

271
00:11:51,550 --> 00:11:52,960
was like a level of indirection that

272
00:11:52,960 --> 00:11:54,940
just made it stupid why not just have it

273
00:11:54,940 --> 00:11:58,630
an explicit package like name it so we

274
00:11:58,630 --> 00:12:01,240
did you dojo require foo bar Baz and

275
00:12:01,240 --> 00:12:05,590
then add-on load is kind of document

276
00:12:05,590 --> 00:12:07,990
ready but it wrapped around the the

277
00:12:07,990 --> 00:12:10,750
module system right so then you get the

278
00:12:10,750 --> 00:12:12,700
global object that's you know that's

279
00:12:12,700 --> 00:12:15,810
amazing but what's really happening is

280
00:12:15,810 --> 00:12:19,990
ugly it was just we just didn't know

281
00:12:19,990 --> 00:12:23,850
right so it starts out foo bar Baz

282
00:12:23,850 --> 00:12:26,890
synchronous xhr we do a path lookup

283
00:12:26,890 --> 00:12:29,260
figure out where this is configured to

284
00:12:29,260 --> 00:12:31,960
live sink exit our it and then eval it

285
00:12:31,960 --> 00:12:34,690
right there in place and then so foo bar

286
00:12:34,690 --> 00:12:36,730
Baz here all of them had to do a provide

287
00:12:36,730 --> 00:12:38,470
which creates the global object at that

288
00:12:38,470 --> 00:12:41,020
place and we got another require so we

289
00:12:41,020 --> 00:12:42,310
got a loop back to the synchronous xhr

290
00:12:42,310 --> 00:12:44,140
and keep doing this recursively until we

291
00:12:44,140 --> 00:12:46,000
hit the end of our thing fire at all

292
00:12:46,000 --> 00:12:48,550
modes and we've got a bunch of there was

293
00:12:48,550 --> 00:12:51,550
no way to avoid blocking the UI with

294
00:12:51,550 --> 00:12:54,250
this it was no matter if it was one file

295
00:12:54,250 --> 00:12:56,920
or four files or whatever even even with

296
00:12:56,920 --> 00:12:59,340
a build you still have that blocking

297
00:12:59,340 --> 00:13:01,600
during the during the transport of

298
00:13:01,600 --> 00:13:03,670
synchronous xhr even if you put it foot

299
00:13:03,670 --> 00:13:08,140
of the page so sync xhr also had same

300
00:13:08,140 --> 00:13:10,290
same origin policy limitations which is

301
00:13:10,290 --> 00:13:13,030
absurd because the script tag doesn't so

302
00:13:13,030 --> 00:13:14,560
we were kind of enforcing or like

303
00:13:14,560 --> 00:13:17,650
imposing this this short-sighted thing

304
00:13:17,650 --> 00:13:19,810
on everybody and of course Crockford

305
00:13:19,810 --> 00:13:23,380
tells us eval is evil so we shouldn't do

306
00:13:23,380 --> 00:13:28,150
that either but this guy james burke who

307
00:13:28,150 --> 00:13:29,740
is out here somewhere

308
00:13:29,740 --> 00:13:31,690
he

309
00:13:31,690 --> 00:13:35,480
you can clap for him I like him we're

310
00:13:35,480 --> 00:13:37,450
friends

311
00:13:37,450 --> 00:13:41,450
he was the core dojo Project Lead at the

312
00:13:41,450 --> 00:13:44,300
time he did all of the loader work and

313
00:13:44,300 --> 00:13:46,340
he kind of got burned out on the the the

314
00:13:46,340 --> 00:13:50,300
politics of trying to herd the cats and

315
00:13:50,300 --> 00:13:51,470
keep everything in line and keep

316
00:13:51,470 --> 00:13:52,760
everything normal and

317
00:13:52,760 --> 00:13:54,860
backwards-compatible and so he kind of

318
00:13:54,860 --> 00:13:58,430
left us and decided to start this

319
00:13:58,430 --> 00:14:00,050
project called require Jess I don't know

320
00:14:00,050 --> 00:14:02,990
if you've heard of it it's it's cool

321
00:14:02,990 --> 00:14:05,600
it's actually directly it's it's a

322
00:14:05,600 --> 00:14:07,700
copy-paste of the dojo X domain loader

323
00:14:07,700 --> 00:14:13,430
which James also wrote as part of his

324
00:14:13,430 --> 00:14:17,210
work at AOL for and with dojo so we came

325
00:14:17,210 --> 00:14:19,390
up with this oh here's our solution

326
00:14:19,390 --> 00:14:22,580
we'll create some kind of global object

327
00:14:22,580 --> 00:14:24,530
that when we inject the script it's just

328
00:14:24,530 --> 00:14:26,030
wrapped in this we get it's wrapped in

329
00:14:26,030 --> 00:14:30,380
this function and we'll tell will define

330
00:14:30,380 --> 00:14:31,790
the module wrapped inside this function

331
00:14:31,790 --> 00:14:33,470
so no matter what the original code was

332
00:14:33,470 --> 00:14:35,270
it gets wrapped around this other thing

333
00:14:35,270 --> 00:14:36,080
and then they have a little house

334
00:14:36,080 --> 00:14:38,900
resource check to prevent duplicate

335
00:14:38,900 --> 00:14:41,240
execution of the same same module and

336
00:14:41,240 --> 00:14:43,670
whatnot but this is really not pretty

337
00:14:43,670 --> 00:14:46,250
but this was generated this is the the

338
00:14:46,250 --> 00:14:48,470
build system generated this for the X

339
00:14:48,470 --> 00:14:53,240
domain case which was what allowed us to

340
00:14:53,240 --> 00:14:54,860
put it on the CD ends it was one of the

341
00:14:54,860 --> 00:14:56,870
unless you were a single fire library

342
00:14:56,870 --> 00:14:58,880
there was really no need to be on a CDN

343
00:14:58,880 --> 00:15:00,320
if you were a single file library but

344
00:15:00,320 --> 00:15:02,090
once you get bigger or more than one

345
00:15:02,090 --> 00:15:05,350
part you need to be able to community

346
00:15:05,350 --> 00:15:08,300
resources so this is the solution we

347
00:15:08,300 --> 00:15:10,910
came up with which actually ended up

348
00:15:10,910 --> 00:15:13,850
being the the foundation of AMD the

349
00:15:13,850 --> 00:15:16,640
concept of single function to register

350
00:15:16,640 --> 00:15:19,060
define and do everything and then the

351
00:15:19,060 --> 00:15:22,580
the function body of whatever it was is

352
00:15:22,580 --> 00:15:25,730
is the module so he took it the next

353
00:15:25,730 --> 00:15:29,540
step created anonymous modules and took

354
00:15:29,540 --> 00:15:31,610
the return value of whatever it is that

355
00:15:31,610 --> 00:15:34,250
function did based on its dependencies

356
00:15:34,250 --> 00:15:36,950
so you get this no longer are you foo

357
00:15:36,950 --> 00:15:40,310
bar Baz your whatever your path mapping

358
00:15:40,310 --> 00:15:42,110
comes out to be and then you get back

359
00:15:42,110 --> 00:15:44,180
whatever single object it is that you

360
00:15:44,180 --> 00:15:44,800
intended to

361
00:15:44,800 --> 00:15:49,389
so you can work with that independently

362
00:15:49,389 --> 00:15:52,119
and nicely so and it's also asynchronous

363
00:15:52,119 --> 00:15:56,439
it did it didn't block the UI thread

364
00:15:56,439 --> 00:15:57,519
anymore because it was just sending

365
00:15:57,519 --> 00:15:59,199
these things off and everything was

366
00:15:59,199 --> 00:16:01,540
compartmentalize so every part that

367
00:16:01,540 --> 00:16:03,429
comes back eventually and when

368
00:16:03,429 --> 00:16:05,170
everything comes back it triggers so

369
00:16:05,170 --> 00:16:06,399
that's good

370
00:16:06,399 --> 00:16:10,269
no UI blocking super fast and then this

371
00:16:10,269 --> 00:16:12,420
is what it ended up looking like so I

372
00:16:12,420 --> 00:16:16,119
find it quite nice I I do have a problem

373
00:16:16,119 --> 00:16:19,749
when it gets into when you have ten or

374
00:16:19,749 --> 00:16:21,999
fifteen or twenty or any more than 10 I

375
00:16:21,999 --> 00:16:26,170
guess modules that you need to load you

376
00:16:26,170 --> 00:16:28,540
end up with a really really long opening

377
00:16:28,540 --> 00:16:30,429
line and it's not pretty so you can

378
00:16:30,429 --> 00:16:31,569
break it on two new lines you get all

379
00:16:31,569 --> 00:16:32,739
this different syntactic stuff and

380
00:16:32,739 --> 00:16:35,739
whatever makes you happy but the

381
00:16:35,739 --> 00:16:39,160
alternative is is and the alternative

382
00:16:39,160 --> 00:16:41,679
that the node is presenting to the

383
00:16:41,679 --> 00:16:44,170
browser versus back-end thing is oh just

384
00:16:44,170 --> 00:16:46,449
go back to synchronous xhr and eval like

385
00:16:46,449 --> 00:16:50,319
why not just treat our require dot or

386
00:16:50,319 --> 00:16:53,350
require whatever load that up in the

387
00:16:53,350 --> 00:16:55,779
browser synchronous I checked our in

388
00:16:55,779 --> 00:16:57,670
eval because that's the only synchronous

389
00:16:57,670 --> 00:17:00,730
part about node is or - the sink

390
00:17:00,730 --> 00:17:04,270
functions so we came up with AMD

391
00:17:04,270 --> 00:17:07,809
hopefully AMD sticks hopefully more and

392
00:17:07,809 --> 00:17:12,909
more people buy into it or find the the

393
00:17:12,909 --> 00:17:16,089
utility in it in making anything more

394
00:17:16,089 --> 00:17:18,089
than just their their little demo apps

395
00:17:18,089 --> 00:17:22,839
so modules are coming to JavaScript I

396
00:17:22,839 --> 00:17:25,029
don't know that it's been approved if

397
00:17:25,029 --> 00:17:26,709
anyone wants to yell and tell me that it

398
00:17:26,709 --> 00:17:28,929
has like there's a final spec I don't

399
00:17:28,929 --> 00:17:30,190
believe there is I think they're still

400
00:17:30,190 --> 00:17:34,659
arguing and then UMD makes me cringe

401
00:17:34,659 --> 00:17:38,440
every time I see it thankfully UMD is a

402
00:17:38,440 --> 00:17:41,559
copy/paste from a repository of 70

403
00:17:41,559 --> 00:17:44,620
different options of types of module use

404
00:17:44,620 --> 00:17:47,770
that I can use and nowadays my shop my

405
00:17:47,770 --> 00:17:50,020
work has been using a lot of jQuery and

406
00:17:50,020 --> 00:17:51,990
backbone and all of those other great

407
00:17:51,990 --> 00:17:54,520
technologies so I just fork whatever

408
00:17:54,520 --> 00:17:57,399
plug-in it is add the UMD thing and then

409
00:17:57,399 --> 00:17:58,480
go start fixing their code

410
00:17:58,480 --> 00:18:04,870
so not happy with UMD but I wish more

411
00:18:04,870 --> 00:18:08,590
people used it if you not familiar with

412
00:18:08,590 --> 00:18:10,030
this you really should look it's it's a

413
00:18:10,030 --> 00:18:13,600
mess of factory functions and tricking

414
00:18:13,600 --> 00:18:16,000
if ease into thinking something else is

415
00:18:16,000 --> 00:18:19,270
the global and we can't can't agree on

416
00:18:19,270 --> 00:18:22,500
this but we need to we need to and

417
00:18:22,500 --> 00:18:24,580
really it's just something dojo already

418
00:18:24,580 --> 00:18:26,890
did so a lot of a lot of the problems

419
00:18:26,890 --> 00:18:29,080
that AMD solves and solves very

420
00:18:29,080 --> 00:18:31,810
elegantly were through years and years

421
00:18:31,810 --> 00:18:35,580
and years of James's work with dojo and

422
00:18:35,580 --> 00:18:37,060
backwards-compatible I think that's what

423
00:18:37,060 --> 00:18:39,550
finally the straw that broke the camel's

424
00:18:39,550 --> 00:18:40,660
back was the backwards compatibility

425
00:18:40,660 --> 00:18:43,420
because we had to migrate our entire

426
00:18:43,420 --> 00:18:46,150
code base to AMD while still maintaining

427
00:18:46,150 --> 00:18:49,150
support for require and or dojo required

428
00:18:49,150 --> 00:18:52,890
directly as a synchronous assumed loader

429
00:18:52,890 --> 00:18:54,820
another thing dojo has been doing

430
00:18:54,820 --> 00:18:59,230
forever it's back in JavaScript and

431
00:18:59,230 --> 00:19:01,690
everyone's o 2009 note came out this is

432
00:19:01,690 --> 00:19:04,090
great note is awesome we have JavaScript

433
00:19:04,090 --> 00:19:05,530
on the back end but we've always had it

434
00:19:05,530 --> 00:19:09,130
by way of Rhino and not to say that

435
00:19:09,130 --> 00:19:13,450
Rhino was good or anything we had it it

436
00:19:13,450 --> 00:19:15,430
was a the entire build system was

437
00:19:15,430 --> 00:19:17,110
written in JavaScript to concatenate

438
00:19:17,110 --> 00:19:19,270
JavaScript with the exception of shrink

439
00:19:19,270 --> 00:19:21,550
safe which was also using our custom

440
00:19:21,550 --> 00:19:22,930
Rhino so we're shipping around Java

441
00:19:22,930 --> 00:19:25,030
stuff and whatever it's nice to get away

442
00:19:25,030 --> 00:19:30,700
from rhino which is horribly slow and it

443
00:19:30,700 --> 00:19:35,490
also wreaked of Java even just the the

444
00:19:35,490 --> 00:19:38,620
api's you still had to write JavaScript

445
00:19:38,620 --> 00:19:40,540
as if it were Java when you wanted to go

446
00:19:40,540 --> 00:19:43,090
into the file IO stuff and it was it was

447
00:19:43,090 --> 00:19:45,970
just very very unpretty even passing

448
00:19:45,970 --> 00:19:47,680
strings back and forth if it was a Java

449
00:19:47,680 --> 00:19:49,300
originated string it was a special

450
00:19:49,300 --> 00:19:50,980
string and you had to cast it to a

451
00:19:50,980 --> 00:19:56,280
JavaScript string by using plus quote

452
00:19:56,280 --> 00:19:58,450
dojo built tool and then another thing

453
00:19:58,450 --> 00:20:01,420
that I'd love to see really really take

454
00:20:01,420 --> 00:20:04,030
off we had something called dojo XD TL

455
00:20:04,030 --> 00:20:07,480
which is a django template which django

456
00:20:07,480 --> 00:20:11,170
was popular way back before it's

457
00:20:11,170 --> 00:20:12,220
probably still very popular

458
00:20:12,220 --> 00:20:15,130
I don't use it now but we had a full

459
00:20:15,130 --> 00:20:18,309
implementation of the DTL language I'd

460
00:20:18,309 --> 00:20:21,460
love to have seen some kind of Express

461
00:20:21,460 --> 00:20:23,200
app or something that comes out and just

462
00:20:23,200 --> 00:20:24,549
straight up says you can use your

463
00:20:24,549 --> 00:20:25,840
templates in the back end or the front

464
00:20:25,840 --> 00:20:29,620
end it's we can either using the exact

465
00:20:29,620 --> 00:20:31,570
same exact same templates desire same

466
00:20:31,570 --> 00:20:34,210
data models everything which is really

467
00:20:34,210 --> 00:20:36,760
really now possibility with node it's

468
00:20:36,760 --> 00:20:38,320
it's right there on the cusp of

469
00:20:38,320 --> 00:20:43,659
happening i I did a mustache thing the

470
00:20:43,659 --> 00:20:45,429
proof of concept using just a simple

471
00:20:45,429 --> 00:20:47,770
node web server but it I never really

472
00:20:47,770 --> 00:20:50,470
never really fought so when we dropped

473
00:20:50,470 --> 00:20:55,030
Rhino dojos abilities using node and DT

474
00:20:55,030 --> 00:20:58,240
L was abandoned but there's no end to

475
00:20:58,240 --> 00:21:00,880
notes potential and likewise everyone

476
00:21:00,880 --> 00:21:03,780
should be very very excited about it

477
00:21:03,780 --> 00:21:07,179
there's it's just doesn't it hasn't just

478
00:21:07,179 --> 00:21:08,679
say via it's not to the pipe to the

479
00:21:08,679 --> 00:21:11,260
Python levels and a lot of the modules

480
00:21:11,260 --> 00:21:14,620
that you get are you can't be sure

481
00:21:14,620 --> 00:21:18,370
NPM is hit or miss there's a lot of

482
00:21:18,370 --> 00:21:19,929
stuff there's a lot of gems but there's

483
00:21:19,929 --> 00:21:23,200
a lot of crap and that's just yeah I

484
00:21:23,200 --> 00:21:24,480
guess the way of the world

485
00:21:24,480 --> 00:21:27,580
it'd be nice if there was a good clean

486
00:21:27,580 --> 00:21:32,710
solution to loading all that stuff UI

487
00:21:32,710 --> 00:21:35,470
libraries which is one of dojos biggest

488
00:21:35,470 --> 00:21:37,270
things that it was it was the monolithic

489
00:21:37,270 --> 00:21:39,909
core library plus a UI library plus

490
00:21:39,909 --> 00:21:43,090
plugins so everyone kind of has UI

491
00:21:43,090 --> 00:21:44,860
library there's there's several out

492
00:21:44,860 --> 00:21:49,120
there Digitas dojos i could do a whole

493
00:21:49,120 --> 00:21:52,360
other our talk based on the failures and

494
00:21:52,360 --> 00:21:56,020
the decisions behind various things that

495
00:21:56,020 --> 00:21:58,780
happened in digit digit is a wonderful

496
00:21:58,780 --> 00:22:02,200
little UI library but i can tell you

497
00:22:02,200 --> 00:22:05,169
what it does do it gives you instant

498
00:22:05,169 --> 00:22:07,419
space control you get the new up your

499
00:22:07,419 --> 00:22:10,049
thing and programmatic object-oriented

500
00:22:10,049 --> 00:22:13,299
access to everything and then the dom

501
00:22:13,299 --> 00:22:14,590
base view is really just a wrapper

502
00:22:14,590 --> 00:22:17,770
around all of that externalizing

503
00:22:17,770 --> 00:22:21,490
resources by way of now AMD text plugin

504
00:22:21,490 --> 00:22:25,059
keeping your templates out of out of the

505
00:22:25,059 --> 00:22:26,230
javascript code

506
00:22:26,230 --> 00:22:32,169
so interestingly the West's the script

507
00:22:32,169 --> 00:22:35,260
for the jQuery templates script type

508
00:22:35,260 --> 00:22:37,780
jQuery slash template interesting

509
00:22:37,780 --> 00:22:38,980
browser thing if it's not text

510
00:22:38,980 --> 00:22:40,690
JavaScript don't execute it so we could

511
00:22:40,690 --> 00:22:42,640
use these containers for completely

512
00:22:42,640 --> 00:22:44,950
arbitrary HTML that never never rendered

513
00:22:44,950 --> 00:22:48,490
whatsoever so that's a big I don't like

514
00:22:48,490 --> 00:22:50,590
it I never liked it when digit did it

515
00:22:50,590 --> 00:22:52,929
but they didn't do it so much for the

516
00:22:52,929 --> 00:22:54,549
templating they did it for methods so

517
00:22:54,549 --> 00:22:56,110
you could actually write script type

518
00:22:56,110 --> 00:22:59,590
equals dojo on and then that code inside

519
00:22:59,590 --> 00:23:01,390
of there would replace the the instance

520
00:23:01,390 --> 00:23:03,429
method for for whatever it is you're

521
00:23:03,429 --> 00:23:05,679
doing so it was really ugly I don't like

522
00:23:05,679 --> 00:23:07,570
putting my JavaScript in the HTML and

523
00:23:07,570 --> 00:23:10,660
one thing that digit does that nobody

524
00:23:10,660 --> 00:23:12,580
has done and digits done this for years

525
00:23:12,580 --> 00:23:13,990
and years I don't know how much money I

526
00:23:13,990 --> 00:23:16,929
BM has put into accessibility but

527
00:23:16,929 --> 00:23:20,350
accessibility is huge and a lot of

528
00:23:20,350 --> 00:23:22,350
people just kind of disregard it

529
00:23:22,350 --> 00:23:25,630
they outline:none display outline:none

530
00:23:25,630 --> 00:23:27,520
or whatever on anchors because they

531
00:23:27,520 --> 00:23:29,350
don't like that little dotted box around

532
00:23:29,350 --> 00:23:31,450
their anchor elements when you click it

533
00:23:31,450 --> 00:23:34,809
somebody needs that localization

534
00:23:34,809 --> 00:23:37,740
internationalization both out of the box

535
00:23:37,740 --> 00:23:40,870
alex has a great new solution to

536
00:23:40,870 --> 00:23:42,220
internationalization they don't really

537
00:23:42,220 --> 00:23:44,410
like dojos internationalization but it's

538
00:23:44,410 --> 00:23:46,720
built in it's all part of it it's

539
00:23:46,720 --> 00:23:48,340
something we learned and something that

540
00:23:48,340 --> 00:23:50,910
we needed so it's there it's been there

541
00:23:50,910 --> 00:23:53,309
for a long time

542
00:23:53,309 --> 00:23:56,679
another thing with digit too painful

543
00:23:56,679 --> 00:24:00,010
degrees it's backwards compatible we

544
00:24:00,010 --> 00:24:02,140
started out with functions like set

545
00:24:02,140 --> 00:24:04,780
disabled and set left-hand side

546
00:24:04,780 --> 00:24:06,760
something individual functions for

547
00:24:06,760 --> 00:24:07,840
everything is like that's not going to

548
00:24:07,840 --> 00:24:09,070
scale we're gonna have millions and

549
00:24:09,070 --> 00:24:10,450
millions of methods that are either set

550
00:24:10,450 --> 00:24:12,610
or yet or whatever so let's go to a

551
00:24:12,610 --> 00:24:15,490
setter just a straight set adder and

552
00:24:15,490 --> 00:24:17,799
then that ended up being renamed to just

553
00:24:17,799 --> 00:24:20,410
set and now it's been replaced with

554
00:24:20,410 --> 00:24:23,850
observable and watchable patterns and so

555
00:24:23,850 --> 00:24:27,070
but the benefit there is that you don't

556
00:24:27,070 --> 00:24:29,679
have to really think back to my job

557
00:24:29,679 --> 00:24:32,890
earlier about jQuery 1/5 and the the

558
00:24:32,890 --> 00:24:34,419
plugins that were listed there there's

559
00:24:34,419 --> 00:24:37,870
no way of knowing if if any of that

560
00:24:37,870 --> 00:24:39,910
stuff works I guess there is now with

561
00:24:39,910 --> 00:24:42,640
the modern plug-in repository I don't

562
00:24:42,640 --> 00:24:45,700
actually look at jQuery very much but I

563
00:24:45,700 --> 00:24:48,190
I believe there's a versioning system in

564
00:24:48,190 --> 00:24:50,470
some kind of package that jQuery thing

565
00:24:50,470 --> 00:24:53,430
that they've got going on but the

566
00:24:53,430 --> 00:24:56,350
there's a benefit to unifying everything

567
00:24:56,350 --> 00:24:58,810
it's in normalizing its and to

568
00:24:58,810 --> 00:25:00,820
normalizing names of functions and

569
00:25:00,820 --> 00:25:02,620
styles of names of functions because

570
00:25:02,620 --> 00:25:04,800
once you get past like a threshold of

571
00:25:04,800 --> 00:25:07,630
understanding the terminology or the the

572
00:25:07,630 --> 00:25:11,500
workings it's it's all comes clear

573
00:25:11,500 --> 00:25:16,330
instead of the the various jQuery

574
00:25:16,330 --> 00:25:18,790
plugins like oh I have to do this and

575
00:25:18,790 --> 00:25:20,260
sometimes I have to call it and

576
00:25:20,260 --> 00:25:22,960
sometimes I need to reinitialize it on a

577
00:25:22,960 --> 00:25:25,720
collection or whatever it's there's no

578
00:25:25,720 --> 00:25:27,610
unification between any of the plugins

579
00:25:27,610 --> 00:25:30,370
or any of the libraries that you piece

580
00:25:30,370 --> 00:25:35,860
together to develop and I'd like to see

581
00:25:35,860 --> 00:25:38,890
more standards there on naming

582
00:25:38,890 --> 00:25:42,940
conventions and and API on the

583
00:25:42,940 --> 00:25:46,660
interfaces right there's been a little

584
00:25:46,660 --> 00:25:47,740
bit of work when you look at something

585
00:25:47,740 --> 00:25:49,270
like bootstrap if you actually look at

586
00:25:49,270 --> 00:25:52,360
the the bootstrap javascript code some

587
00:25:52,360 --> 00:25:53,890
of its really really horrible but some

588
00:25:53,890 --> 00:25:55,900
of it you know it all follows a very

589
00:25:55,900 --> 00:25:58,360
simple pattern of here's a little simple

590
00:25:58,360 --> 00:26:01,350
class and then the plug-in side of it is

591
00:26:01,350 --> 00:26:04,870
do this do this do this do this reload

592
00:26:04,870 --> 00:26:07,090
our plugin so it's instantiation from an

593
00:26:07,090 --> 00:26:09,850
object or string based commands from

594
00:26:09,850 --> 00:26:11,890
that and it's already saved on the

595
00:26:11,890 --> 00:26:14,980
object so that's cool I'd love to see

596
00:26:14,980 --> 00:26:17,800
more style guides for individual modules

597
00:26:17,800 --> 00:26:21,070
and I'd love to see more of them AMD

598
00:26:21,070 --> 00:26:23,680
eyes so you can just take and pick so

599
00:26:23,680 --> 00:26:25,390
you don't need necessarily because a lot

600
00:26:25,390 --> 00:26:26,800
of jQuery plugins for instance don't

601
00:26:26,800 --> 00:26:28,810
even really need jQuery it's just a

602
00:26:28,810 --> 00:26:31,630
function stubbed off of a dollar sign in

603
00:26:31,630 --> 00:26:32,620
the end

604
00:26:32,620 --> 00:26:34,840
likewise with just stubbing a function

605
00:26:34,840 --> 00:26:37,090
that works on a collection it's really

606
00:26:37,090 --> 00:26:38,650
literally just stubbing a function that

607
00:26:38,650 --> 00:26:40,540
works on a collection that iterates over

608
00:26:40,540 --> 00:26:43,630
itself digit could do a lot of stuff

609
00:26:43,630 --> 00:26:47,860
better they don't have a concept of

610
00:26:47,860 --> 00:26:50,650
event delegation which is odd I mean

611
00:26:50,650 --> 00:26:52,500
internally it has a

612
00:26:52,500 --> 00:26:54,930
this connects so you can listen to

613
00:26:54,930 --> 00:26:56,640
events within the scope of yourself and

614
00:26:56,640 --> 00:26:58,140
it cleans up after itself but it never

615
00:26:58,140 --> 00:27:00,960
had like a straight-up delegation API

616
00:27:00,960 --> 00:27:02,760
which would have been beautiful actually

617
00:27:02,760 --> 00:27:06,720
kind of like that about backbone - the

618
00:27:06,720 --> 00:27:09,720
fact that that events object if you're

619
00:27:09,720 --> 00:27:11,700
inheriting you have no control over the

620
00:27:11,700 --> 00:27:14,100
the parent events necessarily I might be

621
00:27:14,100 --> 00:27:18,540
mistaken on that just an experience an

622
00:27:18,540 --> 00:27:21,030
alternate templating I find the digit

623
00:27:21,030 --> 00:27:22,950
templates they're very flat they're very

624
00:27:22,950 --> 00:27:25,500
nothing about them it's just variable

625
00:27:25,500 --> 00:27:27,390
substitution and I've got more complex

626
00:27:27,390 --> 00:27:28,710
data than that and I don't need to write

627
00:27:28,710 --> 00:27:31,920
one off so it's it's two lines of code I

628
00:27:31,920 --> 00:27:33,870
implemented mustache which was fun at

629
00:27:33,870 --> 00:27:35,700
the time until I learned that they don't

630
00:27:35,700 --> 00:27:36,870
support dot notation

631
00:27:36,870 --> 00:27:40,610
oh he's not even looking I was trying to

632
00:27:40,610 --> 00:27:42,390
sorry

633
00:27:42,390 --> 00:27:46,200
and then then and then core gesture

634
00:27:46,200 --> 00:27:48,120
which is which is all dojo really

635
00:27:48,120 --> 00:27:50,760
started out to be just a bunch of

636
00:27:50,760 --> 00:27:52,200
functions a bunch of hackers getting

637
00:27:52,200 --> 00:27:54,000
together and like oh hey we need a

638
00:27:54,000 --> 00:27:56,520
normalised is array or no that's a bad

639
00:27:56,520 --> 00:28:02,010
example that slipped yeah so the Israel

640
00:28:02,010 --> 00:28:08,010
um what's a good example bind stuff you

641
00:28:08,010 --> 00:28:09,690
find an underscore that's a great

642
00:28:09,690 --> 00:28:11,520
example there's a lot of stuff that's in

643
00:28:11,520 --> 00:28:13,410
underscore that that I took for granted

644
00:28:13,410 --> 00:28:15,390
because it's always just been attached

645
00:28:15,390 --> 00:28:19,080
to dojo it's been there it's this is the

646
00:28:19,080 --> 00:28:20,880
tie to go to jQuery stocks but only

647
00:28:20,880 --> 00:28:26,830
because jQuery tux is missing a tie

648
00:28:26,840 --> 00:28:30,330
it's it's like my favorite my favorite

649
00:28:30,330 --> 00:28:33,419
jQuery API is map because the dollar

650
00:28:33,419 --> 00:28:35,190
sign map and the dollar sign effing map

651
00:28:35,190 --> 00:28:37,799
aren't the same it's actually more of a

652
00:28:37,799 --> 00:28:41,100
map filter and then Cody Lindy who may

653
00:28:41,100 --> 00:28:43,230
may not be here called me out I was like

654
00:28:43,230 --> 00:28:44,549
why would you ever need something that

655
00:28:44,549 --> 00:28:46,350
map's down to a sparse array and I was

656
00:28:46,350 --> 00:28:48,149
like well in case you ever have ten

657
00:28:48,149 --> 00:28:49,409
things and you want to make sure they

658
00:28:49,409 --> 00:28:54,450
line back up later or bind its an event

659
00:28:54,450 --> 00:28:56,370
handler in jQuery confused so many

660
00:28:56,370 --> 00:28:59,279
people's like oh hey echo five start

661
00:28:59,279 --> 00:29:01,889
doing this new fancy binds in that use

662
00:29:01,889 --> 00:29:03,840
that I'm very confused what does this

663
00:29:03,840 --> 00:29:05,460
have to do with event handlers you know

664
00:29:05,460 --> 00:29:08,490
but it's impossible to even explain the

665
00:29:08,490 --> 00:29:11,549
concept of bind to the the avid jQuery

666
00:29:11,549 --> 00:29:14,759
user because they're this is something

667
00:29:14,759 --> 00:29:17,820
completely different than the rest of

668
00:29:17,820 --> 00:29:20,220
our this is and this is the most

669
00:29:20,220 --> 00:29:22,620
important thing this literally this is

670
00:29:22,620 --> 00:29:23,580
the most important thing in JavaScript

671
00:29:23,580 --> 00:29:26,789
in my eyes this is the the ability to

672
00:29:26,789 --> 00:29:29,549
control the context and and do whatever

673
00:29:29,549 --> 00:29:31,409
it is you want whatever it is you need

674
00:29:31,409 --> 00:29:33,960
to do and having an understanding of

675
00:29:33,960 --> 00:29:40,649
this is good I the each it just

676
00:29:40,649 --> 00:29:42,980
frustrates me son so much

677
00:29:42,980 --> 00:29:46,169
the fact that in order to iterate over a

678
00:29:46,169 --> 00:29:47,700
jQuery collection you have to reinstate

679
00:29:47,700 --> 00:29:50,519
like you end up reinstating a this

680
00:29:50,519 --> 00:29:53,190
jQuery object within itself rather than

681
00:29:53,190 --> 00:29:56,299
working directly on the node and then

682
00:29:56,299 --> 00:29:59,309
the key value pairs are all there's no

683
00:29:59,309 --> 00:30:00,629
way to get the original collection it's

684
00:30:00,629 --> 00:30:04,590
just so angering so angry I'm actually

685
00:30:04,590 --> 00:30:06,179
running really short on time so I'm

686
00:30:06,179 --> 00:30:08,669
gonna go underscore is not AMD um be

687
00:30:08,669 --> 00:30:11,899
ready it doesn't even have a um be shim

688
00:30:11,899 --> 00:30:16,620
plug for John Dalton lodash does I it's

689
00:30:16,620 --> 00:30:18,990
just a matter of a quick build and you

690
00:30:18,990 --> 00:30:20,759
get and actually faster than underscore

691
00:30:20,759 --> 00:30:23,940
underscore compliant underscore in your

692
00:30:23,940 --> 00:30:28,559
underscores you know I heard you like

693
00:30:28,559 --> 00:30:31,350
underscores I actually hate using the

694
00:30:31,350 --> 00:30:34,350
underscore as an API because it makes it

695
00:30:34,350 --> 00:30:35,759
look like I've already obfuscated my

696
00:30:35,759 --> 00:30:37,529
code

697
00:30:37,529 --> 00:30:40,000
have you ever called a dynamic method

698
00:30:40,000 --> 00:30:41,529
off of an underscore it's a it's a

699
00:30:41,529 --> 00:30:44,590
underscore bracket conditional question

700
00:30:44,590 --> 00:30:46,840
mark string colon string and it's

701
00:30:46,840 --> 00:30:48,700
just--it's and then you pass a jQuery

702
00:30:48,700 --> 00:30:50,110
collection of that and it's a dollar

703
00:30:50,110 --> 00:30:51,909
sign right after a parenthesis and it's

704
00:30:51,909 --> 00:30:55,080
just like what the did I just write

705
00:30:55,080 --> 00:30:57,100
and then you step back and you had a

706
00:30:57,100 --> 00:30:59,799
couple spaces around some things and you

707
00:30:59,799 --> 00:31:02,110
know it's okay hey I can kind of see or

708
00:31:02,110 --> 00:31:03,490
you start adding new lines after the

709
00:31:03,490 --> 00:31:05,409
parentheses and that's your the

710
00:31:05,409 --> 00:31:09,309
parentheses of the new squiggle so lots

711
00:31:09,309 --> 00:31:11,320
of stuff is an AMD ready as I mentioned

712
00:31:11,320 --> 00:31:13,299
I'd love to see more but in the end

713
00:31:13,299 --> 00:31:17,590
again it's just JavaScript dojo did so

714
00:31:17,590 --> 00:31:19,269
much stuff and dojo wrote so much

715
00:31:19,269 --> 00:31:21,039
JavaScript there's date normalization

716
00:31:21,039 --> 00:31:24,220
there's deferreds which is the early

717
00:31:24,220 --> 00:31:26,049
onset promises which are now also in

718
00:31:26,049 --> 00:31:29,019
jquery which everyone loves and like you

719
00:31:29,019 --> 00:31:31,500
would have been amazed at the time the

720
00:31:31,500 --> 00:31:34,480
when jquery first announced support for

721
00:31:34,480 --> 00:31:36,100
deferred and they were like everybody

722
00:31:36,100 --> 00:31:38,320
was like this is amazing this is great

723
00:31:38,320 --> 00:31:41,440
we need two promises or the

724
00:31:41,440 --> 00:31:45,309
and then I just can't I just one-handed

725
00:31:45,309 --> 00:31:47,320
clap you know it's we've been doing it

726
00:31:47,320 --> 00:31:49,929
forever it's it's like I'm proud of all

727
00:31:49,929 --> 00:31:54,669
of you for for using that but it's

728
00:31:54,669 --> 00:31:58,120
nothing new so I understand understand

729
00:31:58,120 --> 00:32:01,029
the language enjoy the nuance don't buy

730
00:32:01,029 --> 00:32:03,610
into any particular library other than

731
00:32:03,610 --> 00:32:05,980
the immediate goals that that library

732
00:32:05,980 --> 00:32:11,590
serves and just write code and continue

733
00:32:11,590 --> 00:32:29,880
learning and that's all I've got

