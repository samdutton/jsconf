1
00:00:00,780 --> 00:00:07,849

[Music]

2
00:00:07,849 --> 00:00:12,190
welcome everybody thanks for coming

3
00:00:12,200 --> 00:00:14,610
this is the talk your credit card was

4
00:00:14,610 --> 00:00:20,960
made with JavaScript this is me my

5
00:00:20,960 --> 00:00:24,750
handle on all sorts of wherever social

6
00:00:24,750 --> 00:00:26,580
media Twitter sort of stuff and where I

7
00:00:26,580 --> 00:00:33,149
work and where we created a or produced

8
00:00:33,149 --> 00:00:37,230
a smart card that goes on credit cards

9
00:00:37,230 --> 00:00:41,610
for ever for this was post and in the

10
00:00:41,610 --> 00:00:42,930
process of doing that we didn't just

11
00:00:42,930 --> 00:00:44,670
produce the the module we also did the

12
00:00:44,670 --> 00:00:49,649
entire integration for this for this

13
00:00:49,649 --> 00:00:52,230
product which included writing the

14
00:00:52,230 --> 00:00:55,579
programs for the machines that actually

15
00:00:55,579 --> 00:01:01,140
produce the cards later on and those

16
00:01:01,140 --> 00:01:05,880
programs are written in JavaScript so

17
00:01:05,880 --> 00:01:08,790
this talk is a bit of a curiosity I

18
00:01:08,790 --> 00:01:10,590
guess most of you won't be programming

19
00:01:10,590 --> 00:01:13,710
credit cards or personalized and credit

20
00:01:13,710 --> 00:01:17,369
cards so it's sort of hard for me and

21
00:01:17,369 --> 00:01:19,439
sorry it's a brother abstract topic

22
00:01:19,439 --> 00:01:21,810
there's a lot of bits and bytes and it's

23
00:01:21,810 --> 00:01:22,549
kind of boring

24
00:01:22,549 --> 00:01:27,210
so I want to try to get get you guys a

25
00:01:27,210 --> 00:01:28,920
general feeling I think you know some

26
00:01:28,920 --> 00:01:31,079
people are interested in in smart cards

27
00:01:31,079 --> 00:01:32,909
what all this is about how these things

28
00:01:32,909 --> 00:01:36,420
work to just get a general feeling of

29
00:01:36,420 --> 00:01:38,970
how the smart cards work have a look at

30
00:01:38,970 --> 00:01:43,020
that at these api's that are used on on

31
00:01:43,020 --> 00:01:45,119
the machines and there's an there's

32
00:01:45,119 --> 00:01:46,700
actually an open source implementation

33
00:01:46,700 --> 00:01:49,799
that you can that you can run on a

34
00:01:49,799 --> 00:01:53,909
normal laptop which you could use with

35
00:01:53,909 --> 00:01:56,880
just a normal reader to just look into

36
00:01:56,880 --> 00:01:58,229
your cards to see what they're actually

37
00:01:58,229 --> 00:02:00,659
doing and how they work so this is more

38
00:02:00,659 --> 00:02:03,240
of a preparation for you know maybe

39
00:02:03,240 --> 00:02:04,799
hacking a little bit with with the smart

40
00:02:04,799 --> 00:02:08,229
cards that you guys have in your pockets

41
00:02:08,239 --> 00:02:12,420
so basically when I when I said your

42
00:02:12,420 --> 00:02:14,160
credit card is made with JavaScript

43
00:02:14,160 --> 00:02:16,680
we're talking about these things the

44
00:02:16,680 --> 00:02:20,310
the card number that's that's punched

45
00:02:20,310 --> 00:02:25,140
into the card the magstripe data that's

46
00:02:25,140 --> 00:02:28,080
prepared the CVV that's that's that's

47
00:02:28,080 --> 00:02:30,150
calculated and put onto the back of the

48
00:02:30,150 --> 00:02:33,629
card and all of the keys and stuff that

49
00:02:33,629 --> 00:02:36,450
are inside of the that are started

50
00:02:36,450 --> 00:02:40,590
inside of the chip and if there's any

51
00:02:40,590 --> 00:02:42,360
questions you can feel free to just

52
00:02:42,360 --> 00:02:44,730
interrupt or if I'm going too fast or

53
00:02:44,730 --> 00:02:46,450
too slow

54
00:02:46,450 --> 00:02:48,500
[Music]

55
00:02:48,500 --> 00:02:52,769
one of the main so this is the next

56
00:02:52,769 --> 00:02:55,530
several slides are going to be just sort

57
00:02:55,530 --> 00:02:57,209
of in general what smart cards are how

58
00:02:57,209 --> 00:02:58,799
they work and one of the main

59
00:02:58,799 --> 00:03:01,470
misconceptions is that even with the

60
00:03:01,470 --> 00:03:04,440
with the magstripe is that sort of when

61
00:03:04,440 --> 00:03:07,140
you take your card put it in the ATM the

62
00:03:07,140 --> 00:03:10,769
ATM reads the PIN or whatever off of the

63
00:03:10,769 --> 00:03:12,840
mag stripe and then you types of painin

64
00:03:12,840 --> 00:03:16,069
and it compares the two and that the

65
00:03:16,069 --> 00:03:22,290
that the that the chip basically does

66
00:03:22,290 --> 00:03:24,900
the same it's just a store of data but

67
00:03:24,900 --> 00:03:27,989
the chip is really a full computer on

68
00:03:27,989 --> 00:03:32,549
the on the card so what typically

69
00:03:32,549 --> 00:03:35,190
happens and said that the data is

70
00:03:35,190 --> 00:03:38,609
exchanged you have these keys in the

71
00:03:38,609 --> 00:03:40,859
card and that are part that are specific

72
00:03:40,859 --> 00:03:46,109
to your card and they can find

73
00:03:46,109 --> 00:03:48,599
themselves into the into the into the

74
00:03:48,599 --> 00:03:50,489
chip this is when the chips in the

75
00:03:50,489 --> 00:03:55,970
factory being produced and when the

76
00:03:55,970 --> 00:04:01,799
merchant who accepts your card what they

77
00:04:01,799 --> 00:04:03,540
will do is they will they will give the

78
00:04:03,540 --> 00:04:08,010
card some data that they want signed

79
00:04:08,010 --> 00:04:10,739
from the card and just like in your

80
00:04:10,739 --> 00:04:12,870
computer there's a little man inside of

81
00:04:12,870 --> 00:04:14,699
it that can calculate and he has access

82
00:04:14,699 --> 00:04:20,940
to the to the keys and he can he can

83
00:04:20,940 --> 00:04:22,710
generate a cryptogram which then the

84
00:04:22,710 --> 00:04:26,370
merchant can use to prove towards the

85
00:04:26,370 --> 00:04:28,220
credit card organizations that yes

86
00:04:28,220 --> 00:04:29,720
did actually have this person in my

87
00:04:29,720 --> 00:04:33,440
store doing this transaction

88
00:04:33,450 --> 00:04:35,770
[Music]

89
00:04:35,770 --> 00:04:40,280
so again just getting going across some

90
00:04:40,280 --> 00:04:42,350
of the things that if you ever want to

91
00:04:42,350 --> 00:04:43,760
play around with this stuff and it's

92
00:04:43,760 --> 00:04:45,830
fairly easy to play around with that you

93
00:04:45,830 --> 00:04:48,290
know that you need to sort of have heard

94
00:04:48,290 --> 00:04:50,360
and this is gonna be really quick the

95
00:04:50,360 --> 00:04:52,580
whole thing is seven eight one six those

96
00:04:52,580 --> 00:04:55,310
are just the ISO norms that do

97
00:04:55,310 --> 00:04:59,210
everything with with chip cards and this

98
00:04:59,210 --> 00:05:00,470
is chip cards in general it's not

99
00:05:00,470 --> 00:05:03,800
specific to credit cards the one in two

100
00:05:03,800 --> 00:05:05,780
is really low physical layer we're

101
00:05:05,780 --> 00:05:07,580
talking centimeters how how big the

102
00:05:07,580 --> 00:05:08,900
little module is and where it is on a

103
00:05:08,900 --> 00:05:12,140
card and fault and and what the

104
00:05:12,140 --> 00:05:15,560
different pads on the thing mean level

105
00:05:15,560 --> 00:05:18,410
three is sort of this in between type of

106
00:05:18,410 --> 00:05:21,110
thing this is one of the few pictures

107
00:05:21,110 --> 00:05:23,930
and one of the nice elements in the and

108
00:05:23,930 --> 00:05:28,790
the specification suite where it's a

109
00:05:28,790 --> 00:05:30,560
little bit higher up it's on an on a

110
00:05:30,560 --> 00:05:33,919
signal level of how to communicate with

111
00:05:33,919 --> 00:05:36,980
the card if anybody does anything with

112
00:05:36,980 --> 00:05:38,660
with hardware it's it's it's basically

113
00:05:38,660 --> 00:05:41,510
just a UART you could just connect an

114
00:05:41,510 --> 00:05:45,169
rs-232 serial cable to it to a card and

115
00:05:45,169 --> 00:05:48,520
talk to it if you get voltages right

116
00:05:48,520 --> 00:05:51,140
there's only two three terms though out

117
00:05:51,140 --> 00:05:52,460
of this that you would ever come across

118
00:05:52,460 --> 00:05:54,410
and that you know you need to know it's

119
00:05:54,410 --> 00:05:57,110
T equals zero T equals one those are

120
00:05:57,110 --> 00:05:59,810
different modes of communication to the

121
00:05:59,810 --> 00:06:02,150
card and the only thing you need to know

122
00:06:02,150 --> 00:06:03,830
about those is that nobody ever uses T

123
00:06:03,830 --> 00:06:06,680
equals one and hgri TR is the thing that

124
00:06:06,680 --> 00:06:08,479
the card sends back to you to identify

125
00:06:08,479 --> 00:06:09,890
itself and that you can identify the

126
00:06:09,890 --> 00:06:14,630
card with when you get one and this next

127
00:06:14,630 --> 00:06:16,220
level four is the area where it gets

128
00:06:16,220 --> 00:06:17,780
interesting and this is what we're also

129
00:06:17,780 --> 00:06:19,220
going to see when we when we look at

130
00:06:19,220 --> 00:06:25,700
these when we look at these api's these

131
00:06:25,700 --> 00:06:28,430
are the APD use APD use or sort of the

132
00:06:28,430 --> 00:06:31,970
frames and they're anything from sort of

133
00:06:31,970 --> 00:06:34,850
an IP frame all the way to an HTTP

134
00:06:34,850 --> 00:06:36,140
request/response

135
00:06:36,140 --> 00:06:37,620
pair

136
00:06:37,620 --> 00:06:40,020
they're very reduced but these are all

137
00:06:40,020 --> 00:06:43,290
these define how to talk with the card

138
00:06:43,290 --> 00:06:47,040
on a on an application layer their

139
00:06:47,040 --> 00:06:49,670
commands that you sent to the card and

140
00:06:49,670 --> 00:06:52,200
this is what a what a pack of like that

141
00:06:52,200 --> 00:06:54,330
looks like you start off it's it's

142
00:06:54,330 --> 00:06:57,990
always four bytes the first quite is the

143
00:06:57,990 --> 00:07:00,030
class which is sort of metadata about

144
00:07:00,030 --> 00:07:04,530
this will the payload be encrypted is

145
00:07:04,530 --> 00:07:08,610
this a is this an iso standardized

146
00:07:08,610 --> 00:07:11,070
command things like that the second one

147
00:07:11,070 --> 00:07:13,740
is the actual command that's that that's

148
00:07:13,740 --> 00:07:16,050
being performed that could be something

149
00:07:16,050 --> 00:07:19,410
like select a file or an application on

150
00:07:19,410 --> 00:07:22,890
the card or I want to give you I want to

151
00:07:22,890 --> 00:07:25,650
present you a pin for me to to verify

152
00:07:25,650 --> 00:07:30,419
for me then p1 and p2 are parameters for

153
00:07:30,419 --> 00:07:34,470
the command and then optionally you can

154
00:07:34,470 --> 00:07:37,500
send data then you do an LC where you

155
00:07:37,500 --> 00:07:38,850
would say how many bytes of data you

156
00:07:38,850 --> 00:07:41,610
send and then the bytes that you send

157
00:07:41,610 --> 00:07:43,620
and if you want the command to answer

158
00:07:43,620 --> 00:07:45,690
back you would you would send le the

159
00:07:45,690 --> 00:07:47,010
length of the expected data that you

160
00:07:47,010 --> 00:07:52,229
sent back so the way this okay well you

161
00:07:52,229 --> 00:07:55,350
can skip over these bits I think there's

162
00:07:55,350 --> 00:07:57,180
different sorts of files that the whole

163
00:07:57,180 --> 00:07:59,040
thing defines and the files can be more

164
00:07:59,040 --> 00:08:00,930
or less anything they just have names

165
00:08:00,930 --> 00:08:02,550
but the way that they can either be a

166
00:08:02,550 --> 00:08:05,280
big chunk of data they can be variable

167
00:08:05,280 --> 00:08:07,050
or fixed length records they can be

168
00:08:07,050 --> 00:08:10,860
circular buffers so to be a little bit

169
00:08:10,860 --> 00:08:12,720
more concrete how this how this works

170
00:08:12,720 --> 00:08:15,360
this would be an APU that a terminal

171
00:08:15,360 --> 00:08:20,100
sends to to a card and so it starts the

172
00:08:20,100 --> 00:08:23,160
first bit the clasp is 0 the instruction

173
00:08:23,160 --> 00:08:25,200
is a 4 that means select select an

174
00:08:25,200 --> 00:08:29,640
application on the card the parameter of

175
00:08:29,640 --> 00:08:32,610
for that bit set says selected by name

176
00:08:32,610 --> 00:08:37,860
please share 0 and then I tell it I have

177
00:08:37,860 --> 00:08:39,060
to tell it the name that I want to

178
00:08:39,060 --> 00:08:42,390
select so I'm going to send it e eb hex

179
00:08:42,390 --> 00:08:47,610
e that's up 14 bytes and that last bit

180
00:08:47,610 --> 00:08:48,640
if you

181
00:08:48,640 --> 00:08:51,640
you're gonna ASCII and hex it's called

182
00:08:51,640 --> 00:08:55,210
it's one basis DDF or one that's what

183
00:08:55,210 --> 00:08:57,700
all credit cards basically happens there

184
00:08:57,700 --> 00:09:00,040
base application what everybody starts

185
00:09:00,040 --> 00:09:04,690
out so lightly and what you get back is

186
00:09:04,690 --> 00:09:06,850
the response code says word one says for

187
00:09:06,850 --> 00:09:09,100
two usually you will you would want 9000

188
00:09:09,100 --> 00:09:13,180
9000 as sort of the is sort of the 200

189
00:09:13,180 --> 00:09:18,880
okay of the smart card world 61 is sort

190
00:09:18,880 --> 00:09:24,820
of a almost okay but I can't there's

191
00:09:24,820 --> 00:09:26,470
some technical problems that the card

192
00:09:26,470 --> 00:09:30,550
can send back data in response to a

193
00:09:30,550 --> 00:09:33,760
command that sent it data so this it's

194
00:09:33,760 --> 00:09:36,910
it's a bit of a problem so the 61 says I

195
00:09:36,910 --> 00:09:38,410
would like to send you back data it's

196
00:09:38,410 --> 00:09:39,820
technically not possible though but

197
00:09:39,820 --> 00:09:42,100
there's 12 hex bytes of data I want to

198
00:09:42,100 --> 00:09:44,860
send you back so the next command and

199
00:09:44,860 --> 00:09:46,180
these are the only two commands don't

200
00:09:46,180 --> 00:09:49,720
worry that I'm I'm going to show C 0 is

201
00:09:49,720 --> 00:09:53,320
a get response it doesn't take any

202
00:09:53,320 --> 00:09:56,110
parameters it doesn't have any data that

203
00:09:56,110 --> 00:09:57,700
it sends but it says I'm expecting

204
00:09:57,700 --> 00:10:03,640
12-day 12 bytes of data back from you

205
00:10:03,640 --> 00:10:07,630
and in that case the the card responds

206
00:10:07,630 --> 00:10:10,870
with with the data and the all this data

207
00:10:10,870 --> 00:10:16,030
is tag length value people know deal

208
00:10:16,030 --> 00:10:18,820
with its darren coded if people deal

209
00:10:18,820 --> 00:10:21,910
with SSL you might have heard of it so

210
00:10:21,910 --> 00:10:26,589
this is a tag this 6f byte says the

211
00:10:26,589 --> 00:10:29,800
following data is 6f data and 6f happens

212
00:10:29,800 --> 00:10:32,620
to be file meta information

213
00:10:32,620 --> 00:10:35,710
there'll be hex 10 bytes of it because

214
00:10:35,710 --> 00:10:37,450
the first two bytes already taken up by

215
00:10:37,450 --> 00:10:40,960
the tagging at length the next this is a

216
00:10:40,960 --> 00:10:44,880
tag again and it's it's file name and

217
00:10:44,880 --> 00:10:47,350
we're back at the file name it was a

218
00:10:47,350 --> 00:10:53,320
bytes long that says one paces block and

219
00:10:53,320 --> 00:10:54,910
the 9000 that

220
00:10:54,910 --> 00:11:04,600
okay is at the end good so this level

221
00:11:04,600 --> 00:11:07,150
four thing these APD use and files and

222
00:11:07,150 --> 00:11:09,370
things that you can do are sort of like

223
00:11:09,370 --> 00:11:13,630
XML they define a lot of building blocks

224
00:11:13,630 --> 00:11:17,320
that you can use to make a file format

225
00:11:17,320 --> 00:11:19,420
but if you just like someone tells you

226
00:11:19,420 --> 00:11:20,590
oh it's XML you don't really know

227
00:11:20,590 --> 00:11:22,090
anything about the file format you just

228
00:11:22,090 --> 00:11:24,130
know that that's the building blocks

229
00:11:24,130 --> 00:11:25,900
that they're set up on so there's a

230
00:11:25,900 --> 00:11:29,830
bunch of application where there's a

231
00:11:29,830 --> 00:11:31,270
bunch of higher higher layered

232
00:11:31,270 --> 00:11:35,710
specifications that say well what do how

233
00:11:35,710 --> 00:11:37,090
do we put these building blocks together

234
00:11:37,090 --> 00:11:38,830
to make a contactless payment

235
00:11:38,830 --> 00:11:43,000
application or a something to use that

236
00:11:43,000 --> 00:11:45,670
the photocopier or something like that

237
00:11:45,670 --> 00:11:51,420
EMV is what is the standard

238
00:11:51,420 --> 00:11:53,380
specification or the base specification

239
00:11:53,380 --> 00:11:57,190
for all payment protocols these are

240
00:11:57,190 --> 00:12:00,570
master and different payment schemes

241
00:12:00,570 --> 00:12:04,110
make their own and they basically define

242
00:12:04,110 --> 00:12:07,150
make their own and they're based on EMV

243
00:12:07,150 --> 00:12:11,980
though and they define specifics of how

244
00:12:11,980 --> 00:12:14,470
terminals talk to the cards how ATMs

245
00:12:14,470 --> 00:12:17,610
talk to the cards and things like that

246
00:12:17,610 --> 00:12:21,130
so and finally there's a layer above

247
00:12:21,130 --> 00:12:24,090
that and that's what we're at which is

248
00:12:24,090 --> 00:12:27,280
which defines of how to interact with a

249
00:12:27,280 --> 00:12:31,720
card from the outside and basically

250
00:12:31,720 --> 00:12:33,820
there's it's a very small market these

251
00:12:33,820 --> 00:12:35,370
people making these machines that

252
00:12:35,370 --> 00:12:37,570
personalized cards but everybody thought

253
00:12:37,570 --> 00:12:40,000
of their own way of doing things and at

254
00:12:40,000 --> 00:12:42,760
one point they standardized it and

255
00:12:42,760 --> 00:12:44,890
strangely enough they standardized on on

256
00:12:44,890 --> 00:12:51,180
XML script to do that they also do they

257
00:12:51,180 --> 00:12:53,530
also specify other things that are in

258
00:12:53,530 --> 00:12:55,260
the card but this is only going to be

259
00:12:55,260 --> 00:12:59,950
the scripting language so there's a bit

260
00:12:59,950 --> 00:13:01,840
of it that there's an API that they that

261
00:13:01,840 --> 00:13:04,060
they define and and we're seeing a lot

262
00:13:04,060 --> 00:13:05,040
of the things that we saw

263
00:13:05,040 --> 00:13:10,589
before like the t1 and t0 protocols for

264
00:13:10,589 --> 00:13:14,160
the card the status word 1 status word

265
00:13:14,160 --> 00:13:17,220
of the response there's a Sunday PD you

266
00:13:17,220 --> 00:13:23,480
command to send bytes to the card

267
00:13:23,490 --> 00:13:27,269
it also contains primitives to deal with

268
00:13:27,269 --> 00:13:29,339
cryptography and especially in cases

269
00:13:29,339 --> 00:13:31,949
like this that you you have hardware

270
00:13:31,949 --> 00:13:34,190
security modules where all the keys are

271
00:13:34,190 --> 00:13:39,730
stored in so you need to access those

272
00:13:39,740 --> 00:13:43,470
one of the problematic things of dealing

273
00:13:43,470 --> 00:13:47,100
with these with this sort of data though

274
00:13:47,100 --> 00:13:49,259
and why why JavaScript really isn't a

275
00:13:49,259 --> 00:13:52,470
too good of it all of this was just

276
00:13:52,470 --> 00:13:54,779
bytes and that the PO at the point where

277
00:13:54,779 --> 00:13:56,250
they were there that this was specified

278
00:13:56,250 --> 00:14:01,110
into South 2003 there they roared there

279
00:14:01,110 --> 00:14:03,660
were no WebGL buffers there were no node

280
00:14:03,660 --> 00:14:05,759
buffers there was I'm not really sure

281
00:14:05,759 --> 00:14:08,279
how common joyous deals with character

282
00:14:08,279 --> 00:14:11,550
data so they made up a lot of their own

283
00:14:11,550 --> 00:14:14,940
stuff and there are really heavily

284
00:14:14,940 --> 00:14:17,790
influenced by Java they have two

285
00:14:17,790 --> 00:14:21,569
different ways to deal with these byte

286
00:14:21,569 --> 00:14:23,490
buffers are sort of like Java string

287
00:14:23,490 --> 00:14:25,800
buffers and that you can't really do

288
00:14:25,800 --> 00:14:29,540
anything with them but they're mutable

289
00:14:29,540 --> 00:14:32,220
although what the purpose of having a

290
00:14:32,220 --> 00:14:33,899
mutable data structure when you can't do

291
00:14:33,899 --> 00:14:35,940
in when you can't change it around this

292
00:14:35,940 --> 00:14:38,819
is sort of questionable and on the other

293
00:14:38,819 --> 00:14:41,790
hand the immutable string type has all

294
00:14:41,790 --> 00:14:43,620
these operations but that will keep on

295
00:14:43,620 --> 00:14:46,920
creating new byte strings but that's

296
00:14:46,920 --> 00:14:48,360
sort of the access into the bits and

297
00:14:48,360 --> 00:14:53,430
bytes world there's another problem with

298
00:14:53,430 --> 00:14:55,949
it that all this is there needs to be

299
00:14:55,949 --> 00:14:57,740
XML in this because these are financial

300
00:14:57,740 --> 00:15:01,680
some so they put their best man on on

301
00:15:01,680 --> 00:15:03,569
the job for this and what they came out

302
00:15:03,569 --> 00:15:07,380
up with is this I mean why you don't

303
00:15:07,380 --> 00:15:10,199
really need a pesky function

304
00:15:10,199 --> 00:15:14,199
keyword around and curly braces around

305
00:15:14,199 --> 00:15:20,259
your your script you can just have much

306
00:15:20,259 --> 00:15:25,480
more clear and succinct XML tags wrapped

307
00:15:25,480 --> 00:15:27,579
around your your individual functions

308
00:15:27,579 --> 00:15:29,079
and that makes everything a lot easier

309
00:15:29,079 --> 00:15:34,509
to deal with and it's there's all it's

310
00:15:34,509 --> 00:15:39,559
it's not very pretty

311
00:15:39,569 --> 00:15:44,290
okay that is how far I wanted to go

312
00:15:44,290 --> 00:15:46,089
because I think a lot of these things

313
00:15:46,089 --> 00:15:47,949
that we can if people are interested in

314
00:15:47,949 --> 00:15:50,170
this I think we can get we can we can

315
00:15:50,170 --> 00:15:52,930
play around with these things later what

316
00:15:52,930 --> 00:15:54,850
I was saying that I wanted to do a small

317
00:15:54,850 --> 00:15:57,790
sort of demo this is in case somebody's

318
00:15:57,790 --> 00:15:59,470
interested in trying this stuff out at

319
00:15:59,470 --> 00:16:03,069
home this is the open source

320
00:16:03,069 --> 00:16:05,290
implementation of the JavaScript part of

321
00:16:05,290 --> 00:16:13,660
it and they have a fairly nice yeah do

322
00:16:13,660 --> 00:16:14,980
you know a keyboard to mirror the

323
00:16:14,980 --> 00:16:32,500
displays

324
00:16:32,510 --> 00:16:47,630
[Music]

325
00:16:47,640 --> 00:16:50,710
okay I'm gonna have to sort of scoot

326
00:16:50,710 --> 00:17:17,120
around then I guess

327
00:17:17,130 --> 00:17:21,329
okay I don't have the card reader

328
00:17:21,329 --> 00:17:34,900
plugged in okay so

329
00:17:34,910 --> 00:17:41,780
okay so it recognized the card reader I

330
00:17:41,780 --> 00:17:47,640
can put in I can put in a card now and

331
00:17:47,640 --> 00:17:49,570
[Music]

332
00:17:49,570 --> 00:18:08,130
okay a card object selector

333
00:18:08,140 --> 00:18:16,810
and then I

334
00:18:16,820 --> 00:18:20,690
we sent that with a constant you can

335
00:18:20,690 --> 00:18:22,730
either turn off the electricity and turn

336
00:18:22,730 --> 00:18:26,330
it on again or or not do that we'll turn

337
00:18:26,330 --> 00:18:31,400
it on and off again just for kicks cold

338
00:18:31,400 --> 00:18:33,770
would be you actually cut off the

339
00:18:33,770 --> 00:18:35,690
electricity to the card warmers you just

340
00:18:35,690 --> 00:18:40,120
tell it to reset itself this is the ATR

341
00:18:40,120 --> 00:18:45,440
actually the these bits here of the 3b

342
00:18:45,440 --> 00:18:48,530
and 60 and and are the ATR and this is

343
00:18:48,530 --> 00:18:51,380
sort of this describes the this

344
00:18:51,380 --> 00:18:54,950
describes the card and now well I just

345
00:18:54,950 --> 00:19:02,690
would like to do is what was in the demo

346
00:19:02,690 --> 00:19:04,610
just to like the payment application and

347
00:19:04,610 --> 00:19:07,700
just see how that works so we need to do

348
00:19:07,700 --> 00:19:13,040
one of those five strings and that was

349
00:19:13,040 --> 00:19:21,320
one page one and then you have the way

350
00:19:21,320 --> 00:19:23,750
this works is now you tell it this is

351
00:19:23,750 --> 00:19:26,450
hex or in this case it's not hex its

352
00:19:26,450 --> 00:19:32,420
ASCII that I want the bites of and we

353
00:19:32,420 --> 00:19:34,820
have those bytes again so per se the

354
00:19:34,820 --> 00:19:39,860
length it's 14 that's right

355
00:19:39,860 --> 00:19:44,380
and now I can just do cards and apdu

356
00:19:44,380 --> 00:19:50,860
and that was the class by it is zero the

357
00:19:50,860 --> 00:19:53,450
instruction is select I want to select

358
00:19:53,450 --> 00:19:56,240
this file is a four I want to select it

359
00:19:56,240 --> 00:20:01,220
by name so I do that and then the second

360
00:20:01,220 --> 00:20:05,120
parameter is 0 and finally it has the

361
00:20:05,120 --> 00:20:06,980
utility method it calculates the length

362
00:20:06,980 --> 00:20:08,510
of the data I want to send I just have

363
00:20:08,510 --> 00:20:12,020
to give us the data and I can send that

364
00:20:12,020 --> 00:20:17,210
to it and this is the reply and response

365
00:20:17,210 --> 00:20:20,180
this library takes care of the get

366
00:20:20,180 --> 00:20:22,870
response part all in one go

367
00:20:22,870 --> 00:20:24,940
and this contains more data about the

368
00:20:24,940 --> 00:20:30,850
file than than my example did so what

369
00:20:30,850 --> 00:20:35,110
the only about done the question is be

370
00:20:35,110 --> 00:20:38,820
like what is the practical use of this

371
00:20:38,820 --> 00:20:42,400
on the I guess the main thing is really

372
00:20:42,400 --> 00:20:44,230
just play around with it to see you

373
00:20:44,230 --> 00:20:46,480
canyou can use Java for other stuff I

374
00:20:46,480 --> 00:20:51,700
could imagine having and if you're if

375
00:20:51,700 --> 00:20:54,220
you're doing server-side JavaScript the

376
00:20:54,220 --> 00:20:57,610
actually the only safe way to store SSL

377
00:20:57,610 --> 00:21:01,330
Certificates as is on on smart cards so

378
00:21:01,330 --> 00:21:04,360
this would be nice if and I'm sort of

379
00:21:04,360 --> 00:21:06,130
working on that is that you have a small

380
00:21:06,130 --> 00:21:10,270
FFI binding for for node or something

381
00:21:10,270 --> 00:21:12,070
like that that you can that you can

382
00:21:12,070 --> 00:21:14,500
access cards to store your your SSL

383
00:21:14,500 --> 00:21:16,900
credentials or if you're doing some

384
00:21:16,900 --> 00:21:19,299
local sort of things if you're doing

385
00:21:19,299 --> 00:21:21,179
home banking and you have a local

386
00:21:21,179 --> 00:21:24,130
component that does it that you can you

387
00:21:24,130 --> 00:21:25,840
can sometimes in Germany at least you

388
00:21:25,840 --> 00:21:28,390
need a smart card interaction in order

389
00:21:28,390 --> 00:21:33,640
to authenticate to authenticate your

390
00:21:33,640 --> 00:21:35,740
your your financial transactions that

391
00:21:35,740 --> 00:21:40,120
you want to do and it's just sort of fun

392
00:21:40,120 --> 00:21:41,799
to play around with and unless of course

393
00:21:41,799 --> 00:21:44,250
you have a job doing it and then it's

394
00:21:44,250 --> 00:21:48,190
fun to good so if there's any equal

395
00:21:48,190 --> 00:21:55,020
uestions I think we're yeah

396
00:21:55,030 --> 00:22:03,200
see there the money is not on your

397
00:22:03,200 --> 00:22:05,930
credit card the money is resting in your

398
00:22:05,930 --> 00:22:09,500
account that's the problem you could

399
00:22:09,500 --> 00:22:11,270
break your card with it you can also you

400
00:22:11,270 --> 00:22:13,250
can you can block your cart you can use

401
00:22:13,250 --> 00:22:16,580
it to block your card if you want to do

402
00:22:16,580 --> 00:22:18,800
that if you want to keep the money from

403
00:22:18,800 --> 00:22:23,030
getting off out of your account and then

404
00:22:23,030 --> 00:22:25,370
well in Germany there's a thing called a

405
00:22:25,370 --> 00:22:27,740
guide card where the money is actually

406
00:22:27,740 --> 00:22:31,430
on the on the chip but they say that's

407
00:22:31,430 --> 00:22:45,380
safe and you couldn't ever

408
00:22:45,390 --> 00:22:48,130
no this is not on the card at all this

409
00:22:48,130 --> 00:22:51,430
is just on the side of the computer to

410
00:22:51,430 --> 00:22:56,080
talk to the card but the the set of

411
00:22:56,080 --> 00:23:09,640
commands the the EMB this EMV that they

412
00:23:09,640 --> 00:23:11,680
define the language that's spoken by the

413
00:23:11,680 --> 00:23:13,300
card and that's that's the same on every

414
00:23:13,300 --> 00:23:16,180
card which enables you to you know go to

415
00:23:16,180 --> 00:23:18,640
Saudi Arabia and get money from an ATM

416
00:23:18,640 --> 00:23:21,250
there as well so unless you're in this

417
00:23:21,250 --> 00:23:22,720
unless you go to the states where they

418
00:23:22,720 --> 00:23:27,250
don't have chips it's it's the same

419
00:23:27,250 --> 00:23:30,160
everywhere there's some subtleties it's

420
00:23:30,160 --> 00:23:34,000
not quite true but and it's also the

421
00:23:34,000 --> 00:23:37,450
same when you're doing NFC or

422
00:23:37,450 --> 00:23:40,240
contactless payment then only the the

423
00:23:40,240 --> 00:23:42,100
bottom the physical layer is exchanged

424
00:23:42,100 --> 00:23:47,500
for RFID and everything above that these

425
00:23:47,500 --> 00:23:49,960
apd use and and all of that stays the

426
00:23:49,960 --> 00:23:52,690
same and you would be able to use this

427
00:23:52,690 --> 00:23:54,670
library to talk with the contactless

428
00:23:54,670 --> 00:23:57,490
credit card or an NFC based handy wallet

429
00:23:57,490 --> 00:23:59,020
or something like cellphone wallet or

430
00:23:59,020 --> 00:24:04,030
something like that

431
00:24:04,040 --> 00:24:07,580
okay okay thanks

