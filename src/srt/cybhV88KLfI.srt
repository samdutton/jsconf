1
00:00:11,580 --> 00:00:16,081
>> How is JSConf so far?

2
00:00:16,081 --> 00:00:27,710
My name is Maximiliano, a long name - Max
is fine, I can go by Max.

3
00:00:27,710 --> 00:00:35,750
I'm a mobile web developer, been doing web
development since browser since 1995.

4
00:00:35,750 --> 00:00:39,050
I'm travelling a lot for training and consulting.

5
00:00:39,050 --> 00:00:41,160
I'm from Buenos Aires.

6
00:00:41,160 --> 00:00:45,770
I've authored a couple of books, the last
two on web performance.

7
00:00:45,770 --> 00:00:52,720
I'm not here to talk about myself about how
the system is broke.

8
00:00:52,720 --> 00:00:55,510
For example, this is my phone this morning.

9
00:00:55,510 --> 00:01:00,190
It's trying to update 231 apps, okay?

10
00:01:00,190 --> 00:01:07,600
So I encourage you to do the same thing, disable
automatic updates and see what happens.

11
00:01:07,600 --> 00:01:15,000
Also you've probably heard about the news
in the last few months, apps currently sending

12
00:01:15,000 --> 00:01:21,350
a lot of data to different servers, sending
your data when Super League, not just on iOS

13
00:01:21,350 --> 00:01:27,000
but also on Android, and, again, because I'm
travelling a lot, I flew here through New

14
00:01:27,000 --> 00:01:34,250
York because I had a flight cancellation,
and I saw that in Manhattan, in Penn Station

15
00:01:34,250 --> 00:01:40,260
in downtown Manhattan, download the app for
the train station.

16
00:01:40,260 --> 00:01:43,600
Do we need an app for the train station?

17
00:01:43,600 --> 00:01:52,120
If you go to the store, it's 50 megabytes
for the train station app.

18
00:01:52,120 --> 00:01:54,380
Reviews are pretty bad, okay?

19
00:01:54,380 --> 00:01:56,600
And it's not just that app, okay.

20
00:01:56,600 --> 00:01:58,450
So this is a common scenario.

21
00:01:58,450 --> 00:02:01,110
We see this every day.

22
00:02:01,110 --> 00:02:05,659
You're thinking well, PWAs, right?

23
00:02:05,659 --> 00:02:10,920
PWAs should be the answer for a lot of these
apps, okay?

24
00:02:10,920 --> 00:02:14,540
That is why today I'm starting a new Twitter
account.

25
00:02:14,540 --> 00:02:17,069
It should be a PWA, okay?

26
00:02:17,069 --> 00:02:20,380
That's for real.

27
00:02:20,380 --> 00:02:23,270
[Applause].

28
00:02:23,270 --> 00:02:26,170
@shouldbePWA.

29
00:02:26,170 --> 00:02:31,569
They show a lot of apps out there that should
be based on the web platform.

30
00:02:31,569 --> 00:02:34,380
There's no need for an app.

31
00:02:34,380 --> 00:02:39,800
Progressive web apps, don't ask me nor a definition.

32
00:02:39,800 --> 00:02:41,540
How many of you have created PWAs?

33
00:02:41,540 --> 00:02:43,060
Let's see.

34
00:02:43,060 --> 00:02:44,980
Around 30 per cent.

35
00:02:44,980 --> 00:02:46,650
How many of you are working on the web?

36
00:02:46,650 --> 00:02:48,510
Most of you, right?

37
00:02:48,510 --> 00:02:53,849
So it basically is the same, so why 70 per
cent of you are not saying that you're creating

38
00:02:53,849 --> 00:02:55,370
PWAs?

39
00:02:55,370 --> 00:03:00,860
So I offer this article in Net - I authored
this article in .net magazine.

40
00:03:00,860 --> 00:03:14,210
I like this definition that PWA is the current
- it's basically the web.

41
00:03:14,210 --> 00:03:20,880
Just for the zero per cent of you if you've
not heard about this, it's a web app with

42
00:03:20,880 --> 00:03:26,630
service workers, and with, let's say, an optional
layer that has to do with distribution, how

43
00:03:26,630 --> 00:03:32,450
users will install or use the app, because
installation is not mandatory, you use the

44
00:03:32,450 --> 00:03:34,959
web app from the browser.

45
00:03:34,959 --> 00:03:41,430
So right now, today, 81 per cent of your users
are able to install a PWA from the browser

46
00:03:41,430 --> 00:03:44,150
they're actually using to access your websites.

47
00:03:44,150 --> 00:03:45,600
It's a lot.

48
00:03:45,600 --> 00:03:47,770
On mobile, it's 92, okay?

49
00:03:47,770 --> 00:03:50,459
On desktop, it's 69.

50
00:03:50,459 --> 00:03:53,890
These numbers are getting higher every day.

51
00:03:53,890 --> 00:03:56,520
So this is the support on mobile.

52
00:03:56,520 --> 00:04:01,310
It works on every browser when you're in a
website, you can actually install it from

53
00:04:01,310 --> 00:04:03,050
your home screen.

54
00:04:03,050 --> 00:04:08,160
That's the JSConf PWA, and then you have an
app.

55
00:04:08,160 --> 00:04:11,210
That app looks like any other app on Android,
okay?

56
00:04:11,210 --> 00:04:15,180
You have seen this before, probably.

57
00:04:15,180 --> 00:04:17,479
So that is I think pretty cool.

58
00:04:17,479 --> 00:04:19,350
It looks like any other app on Android.

59
00:04:19,350 --> 00:04:20,650
The same happens on iOS.

60
00:04:20,650 --> 00:04:24,270
You can go to Tinder, you know that one?

61
00:04:24,270 --> 00:04:31,339
Tinder is a PWA, you can go to your iPhone,
go to the share sheet and the home screen,

62
00:04:31,339 --> 00:04:32,550
create an icon.

63
00:04:32,550 --> 00:04:36,259
You're thinking that's not a PWA, it's just
a short cut to the website.

64
00:04:36,259 --> 00:04:43,030
If you open that icon, you have a standalone
fuel-screen experience from looks like any

65
00:04:43,030 --> 00:04:44,879
other app on the iPhone.

66
00:04:44,879 --> 00:04:47,340
So it's basically a PWA.

67
00:04:47,340 --> 00:04:55,800
Then you have - feature phones, I have this
Nokia here with me, feature phones, non-touch,

68
00:04:55,800 --> 00:04:58,750
they're supporting PWAs.

69
00:04:58,750 --> 00:04:59,979
But it's not just on mobile.

70
00:04:59,979 --> 00:05:12,339
On desktop you can go and install Trivago,
Tinder, by the way, and you have a - that

71
00:05:12,339 --> 00:05:17,169
works on Windows, Chromebook, Mac and Linux.

72
00:05:17,169 --> 00:05:21,229
You can open more PWAs at the same time.

73
00:05:21,229 --> 00:05:27,729
We have the properly, we just need to create
really, really good experiences, and today,

74
00:05:27,729 --> 00:05:34,199
let's say that I can say that maybe half of
the PWA s out there on R offering a good experience.

75
00:05:34,199 --> 00:05:41,949
The other half are away for offering a competition
like the native apps, and so we will try to

76
00:05:41,949 --> 00:05:45,370
see why, and what we can do today to improve
that experience.

77
00:05:45,370 --> 00:05:49,069
So, talking about the app cycle, okay?

78
00:05:49,069 --> 00:05:54,050
So because we are creating apps, not just
websites that will appear in the browser.

79
00:05:54,050 --> 00:06:00,259
So, when you open a PWA, so if the app loads
like any other content.

80
00:06:00,259 --> 00:06:02,699
That's not, that's no surprise.

81
00:06:02,699 --> 00:06:07,659
What happens when the user goes to the background
such as pressing the home screen?

82
00:06:07,659 --> 00:06:13,449
You have visibility change event, and there
you can pause a game or an animation, you

83
00:06:13,449 --> 00:06:18,500
can stop a timer, okay, because you're not
in the foreground any more.

84
00:06:18,500 --> 00:06:25,539
A couple of seconds later, mostly on mobile
devices such as Android, the app might be

85
00:06:25,539 --> 00:06:30,809
suspended, and there is a new freeze event
which means your app will be in memory for

86
00:06:30,809 --> 00:06:33,729
a while but you won't be executing any code.

87
00:06:33,729 --> 00:06:39,229
If you want to save the state or do something,
this is your last dinner.

88
00:06:39,229 --> 00:06:40,789
The freeze event.

89
00:06:40,789 --> 00:06:43,139
And then you go back to the app.

90
00:06:43,139 --> 00:06:49,270
If you're lucky enough, the app is still in
memory and now resume will be executed, and

91
00:06:49,270 --> 00:06:51,889
also the visibility change again.

92
00:06:51,889 --> 00:07:00,589
Let's say that, when you close the PWA, you
are using an intention app like recording

93
00:07:00,589 --> 00:07:07,199
a video, watching a Netflix movie, or using
a 3D game, when you go back, your app was

94
00:07:07,199 --> 00:07:12,830
discarded from memory, so in this case, the
PWA will start from scratch like a normal

95
00:07:12,830 --> 00:07:19,550
load but there is now a new boolean value
that you can query that will give you true,

96
00:07:19,550 --> 00:07:26,279
okay, in that case, and there you have the
opportunity to load again the state, the previous

97
00:07:26,279 --> 00:07:29,039
state that you saved before, okay?

98
00:07:29,039 --> 00:07:30,889
You need to start doing this.

99
00:07:30,889 --> 00:07:32,969
So, what about iOS?

100
00:07:32,969 --> 00:07:35,819
iOS isn't following exactly this rule.

101
00:07:35,819 --> 00:07:43,009
In fact, I did a research on the life cycle
of an iOS PWA and it looks like this.

102
00:07:43,009 --> 00:07:52,469
So, anyway, the important part here is that
here in the PWA and iOS, you can zoom in,

103
00:07:52,469 --> 00:07:56,520
control, click, type on a form, so that is
the current state.

104
00:07:56,520 --> 00:08:04,139
When you get out of the PWA, okay, your app
is current ly frozen, so, when you go back

105
00:08:04,139 --> 00:08:11,279
you can see a splash, so it's like starting
from a crash but the WebKit is restoring the

106
00:08:11,279 --> 00:08:12,279
state.

107
00:08:12,279 --> 00:08:19,789
If you kill the app, it also restores the
state, so there is no way to restart the app

108
00:08:19,789 --> 00:08:21,060
from the scratch.

109
00:08:21,060 --> 00:08:23,639
You can buy a new iPhone if you want!

110
00:08:23,639 --> 00:08:25,979
At least you can restart the phone.

111
00:08:25,979 --> 00:08:27,830
That's a problem.

112
00:08:27,830 --> 00:08:32,390
If you have an invalid state, there's no way
to get out of that.

113
00:08:32,390 --> 00:08:39,029
It's a good idea on iOS at least to provide
a reload action within the UI at least until

114
00:08:39,029 --> 00:08:40,300
Apple changes this.

115
00:08:40,300 --> 00:08:43,660
Also, you can provide full navigation like
a back button.

116
00:08:43,660 --> 00:08:53,490
We have gestures like swipe to go back but
it's a good idea to be sure you want for this.

117
00:08:53,490 --> 00:08:56,820
So what about the resources?

118
00:08:56,820 --> 00:09:02,900
Worker is the one that is storing and saving,
and serving those files.

119
00:09:02,900 --> 00:09:04,020
So - service worker.

120
00:09:04,020 --> 00:09:07,560
The problem is that there are situations where
you can find this.

121
00:09:07,560 --> 00:09:15,510
You open up an app, and Uber in this case,
Chrome, is saying I don't have the files.

122
00:09:15,510 --> 00:09:17,990
It's saying how is that possible?

123
00:09:17,990 --> 00:09:23,400
Because the browser can't delete the files
if there is a storage pressure, so no more

124
00:09:23,400 --> 00:09:29,820
space on that device, unless you request for
persistent storage, so this is something you

125
00:09:29,820 --> 00:09:32,580
need to do explicitly, right?

126
00:09:32,580 --> 00:09:40,610
It's a promise API, so you just ask for persistent
storage so your files will be there.

127
00:09:40,610 --> 00:09:43,170
Now let's move to another topic.

128
00:09:43,170 --> 00:09:47,210
This is programme aggressive experience.

129
00:09:47,210 --> 00:09:51,440
Star, we have been creating one app for all.

130
00:09:51,440 --> 00:10:04,340
So create an app, need JS, Vue, Angular, whatever,
we have a lot of devices, high-end 15s, low-end

131
00:10:04,340 --> 00:10:10,650
phones, feature phones that might be running
your app, and we have different bandwidth

132
00:10:10,650 --> 00:10:13,390
and latencies.

133
00:10:13,390 --> 00:10:18,530
I'm here with a 4G device on roaming, and
it looks like a slow 3G, okay?

134
00:10:18,530 --> 00:10:26,620
I know, so maybe you have a Samsung, S10 with
the best LTE plus, plus super ultra but four

135
00:10:26,620 --> 00:10:27,940
per cent of battery.

136
00:10:27,940 --> 00:10:35,380
I need something from your web app but I don't
want you to load those four megabytes of JavaScript,

137
00:10:35,380 --> 00:10:39,710
so what I'm saying is maybe we need to copy
something from YouTube?

138
00:10:39,710 --> 00:10:43,040
It has a model for users.

139
00:10:43,040 --> 00:10:48,510
It's trying to guess the best possible experience
for that user, and it is on quality.

140
00:10:48,510 --> 00:10:49,900
The user can change that.

141
00:10:49,900 --> 00:10:58,440
Why can't we do the same on our PWA, there
are a lot that those about the context, the

142
00:10:58,440 --> 00:11:06,960
perform servers, device memory API, so you
can gather information that scenario so you

143
00:11:06,960 --> 00:11:08,360
can make some decisions.

144
00:11:08,360 --> 00:11:12,140
Also, there is a reporting API available today.

145
00:11:12,140 --> 00:11:18,170
It's an HTTP header where you send an end
point or URL and the browser will send you

146
00:11:18,170 --> 00:11:25,870
for that particular user with real user metrics
information reports about performance issues.

147
00:11:25,870 --> 00:11:30,380
On that particular advice, on that particular
network, so then you can make decisions to

148
00:11:30,380 --> 00:11:36,460
keep a consistent experience, because we want
to have a consistent experience, such as changing

149
00:11:36,460 --> 00:11:43,740
the service worker cache policy based on this,
SSR, client-side rendering, you can switch

150
00:11:43,740 --> 00:11:50,100
based on the scenario, reducing the amount
of loaded data, and many other tricks that

151
00:11:50,100 --> 00:11:51,140
you can apply.

152
00:11:51,140 --> 00:11:57,470
So, we want to offer a good experience for
every user.

153
00:11:57,470 --> 00:12:01,750
We are creating PWAs for a real operating
system.

154
00:12:01,750 --> 00:12:07,560
So, we need some kind of platform integration,
so we need to do something else compared with

155
00:12:07,560 --> 00:12:09,100
a normal website.

156
00:12:09,100 --> 00:12:16,240
So, for example, web authentication is really
a good example of how you can improve this

157
00:12:16,240 --> 00:12:17,240
quickly.

158
00:12:17,240 --> 00:12:24,420
Today, for example ... it's a PWA where you
can actually log in pretty quickly with your

159
00:12:24,420 --> 00:12:26,310
current session on Android.

160
00:12:26,310 --> 00:12:32,430
I didn't have an account on that website before,
but with one click, I'm in, okay?

161
00:12:32,430 --> 00:12:34,850
This is coming on Safari as well.

162
00:12:34,850 --> 00:12:40,410
Web share, you're creating an app that is
standalone, so full screen, there is no browser

163
00:12:40,410 --> 00:12:44,420
UI, so how can I get out of my PWA?

164
00:12:44,420 --> 00:12:48,090
How can I get my content out of my PWA?

165
00:12:48,090 --> 00:12:55,670
We can share the content with a very simple
API available right now on iOS, Android, and

166
00:12:55,670 --> 00:12:57,910
some desk tomorrow operating systems.

167
00:12:57,910 --> 00:13:05,140
For example, I'm here on Twitter on iOS, Twitter
PWA, not the native app, and you can just

168
00:13:05,140 --> 00:13:06,530
share from there.

169
00:13:06,530 --> 00:13:11,310
It opens the native share dialogue, so I think
that's pretty cool.

170
00:13:11,310 --> 00:13:14,170
Also, we have a version that is web-share
target API.

171
00:13:14,170 --> 00:13:19,390
I can take a picture from my photos app, and
I can share that picture into the Twitter

172
00:13:19,390 --> 00:13:21,540
PWA, okay?

173
00:13:21,540 --> 00:13:22,620
Directly.

174
00:13:22,620 --> 00:13:27,700
That's the second version of the API that
is currently on Canary.

175
00:13:27,700 --> 00:13:33,910
Talking about Android, for those of you on
Android, we have something known as web ABK.

176
00:13:33,910 --> 00:13:36,280
How many have heard about web ABK.

177
00:13:36,280 --> 00:13:42,180
Oh, I can see no hands at all!

178
00:13:42,180 --> 00:13:48,970
That works on Chrome and Android.

179
00:13:48,970 --> 00:13:57,940
In the cloud, the Play store is scraping the
native Android package format and it is installing

180
00:13:57,940 --> 00:14:04,690
that silently into the device which means,
for example, the JSConf PWA is an Android.

181
00:14:04,690 --> 00:14:07,760
I can go to settings and see it's an Android
app.

182
00:14:07,760 --> 00:14:15,430
It says it was installed from the Play Store
which is false, because it's signed by the

183
00:14:15,430 --> 00:14:21,670
Play Store, and that creates a good first-palace
experience for your Android cruisers.

184
00:14:21,670 --> 00:14:22,680
The same happens on Samsung.

185
00:14:22,680 --> 00:14:29,279
If you're on a Samsung device and using the
internet browser, in this case, a web APK

186
00:14:29,279 --> 00:14:31,300
signed by Samsung apps.

187
00:14:31,300 --> 00:14:37,180
This is interesting because you're now creating
Android-native apps from an Android operating

188
00:14:37,180 --> 00:14:38,790
system point of view.

189
00:14:38,790 --> 00:14:47,320
Talking about desktop, today, on desktop,
you can do multi-window - that is Google drive

190
00:14:47,320 --> 00:14:48,320
on desktop.

191
00:14:48,320 --> 00:14:49,480
It's a PWA.

192
00:14:49,480 --> 00:14:52,300
You can open your window.

193
00:14:52,300 --> 00:14:54,990
So, it's a multi-window world.

194
00:14:54,990 --> 00:15:01,020
You can say on the web, it's multi-tab, but
you need to know what you're going to do with

195
00:15:01,020 --> 00:15:02,020
this.

196
00:15:02,020 --> 00:15:06,720
Now the user can have several apps open.

197
00:15:06,720 --> 00:15:12,600
You can use the service worker, for example,
in the message API to make some kind of control,

198
00:15:12,600 --> 00:15:21,120
and future looks really promising, so let
me show you an early mock on how tab on PWAs

199
00:15:21,120 --> 00:15:25,550
might look like later, might be this year,
I don't know.

200
00:15:25,550 --> 00:15:33,490
This is it from the last Google IO where you
can see it's your app with several tabs inside.

201
00:15:33,490 --> 00:15:37,290
We have a lot of new challenges on the way.

202
00:15:37,290 --> 00:15:42,860
Coming back to the iOS, our last platform
to talk about, let me tell you this: so, if

203
00:15:42,860 --> 00:15:53,820
you Google PWAs on iOS, the first, the second,
and articles there are my articles, okay?

204
00:15:53,820 --> 00:15:58,700
And the snippet you see there, it's also coming
from one of my articles.

205
00:15:58,700 --> 00:16:03,710
There is no documentation at all from Apple
or from the WebKit team.

206
00:16:03,710 --> 00:16:10,560
They are supporting partially, totally, or
the technologies, but there is no documentation,

207
00:16:10,560 --> 00:16:11,560
okay?

208
00:16:11,560 --> 00:16:18,680
You need to be careful, test a lot, and add
some metadata that is required for an iOS

209
00:16:18,680 --> 00:16:19,680
PWA.

210
00:16:19,680 --> 00:16:25,530
Let me tell you one thing only: Apple, shame
on you, right?

211
00:16:25,530 --> 00:16:28,400
Because this is a problem that we have as
a community.

212
00:16:28,400 --> 00:16:30,980
So, installation experience.

213
00:16:30,980 --> 00:16:33,940
So, we are creating apps, okay?

214
00:16:33,940 --> 00:16:36,250
So we want to create apps.

215
00:16:36,250 --> 00:16:39,960
So we need to improve how users will install
our app.

216
00:16:39,960 --> 00:16:44,570
First, because most users will never know
that there is an actual home screen and an

217
00:16:44,570 --> 00:16:50,240
install menu with three little dots, menu
in the browser.

218
00:16:50,240 --> 00:16:56,320
We manage on that, we have this web app service
worker and the distribution rings here.

219
00:16:56,320 --> 00:16:57,320
I did this on purpose.

220
00:16:57,320 --> 00:17:03,089
I didn't set web app manifest on the red ring
because I don't think it's the only one.

221
00:17:03,089 --> 00:17:07,419
Web app manifest is one of the key aspects
of the PWA, of course.

222
00:17:07,419 --> 00:17:11,900
It is the one that will give you on desktop
button in Chrome.

223
00:17:11,900 --> 00:17:22,230
It is giving you the mini info bar on Android,
and on other browsers, it would give you several

224
00:17:22,230 --> 00:17:30,110
budgets when you are PWA, you're passing the
PWA criteria been but I don't think this is

225
00:17:30,110 --> 00:17:34,000
the only important part on a PWA.

226
00:17:34,000 --> 00:17:42,179
You must provide your own install button within
your UI, within your menu, whenever you feel

227
00:17:42,179 --> 00:17:47,509
it's the moment to offer the user installation,
you can actually add your own install button.

228
00:17:47,509 --> 00:17:51,499
So it is simple but weird, okay?

229
00:17:51,499 --> 00:17:54,580
So you need to listen for a new event before
installing prompt.

230
00:17:54,580 --> 00:18:00,779
When the browser thinks that you're passing
a PWA criteria, it will fire that event, so

231
00:18:00,779 --> 00:18:07,179
you need to basically prevent default first,
just to avoid the browser to show its own

232
00:18:07,179 --> 00:18:13,029
banner, and then you want to save that argument
that you receive for later usage.

233
00:18:13,029 --> 00:18:17,490
And then when the user clicks on that button,
you will just call prompt, okay?

234
00:18:17,490 --> 00:18:19,350
So that is roughly how it worked.

235
00:18:19,350 --> 00:18:25,149
You can create your own button that will trigger
the native dialogue on desktop and on Android

236
00:18:25,149 --> 00:18:26,149
devices.

237
00:18:26,149 --> 00:18:33,440
So apart from web app manifests already mentioned,
you need to add iOS metadata, and something

238
00:18:33,440 --> 00:18:43,110
that it's not completely new, but for most
web developers, it's new: an app launcher.

239
00:18:43,110 --> 00:18:48,730
It's a native package that will trigger a
PWA.

240
00:18:48,730 --> 00:18:55,669
I'm not talking about a hybrid like Cordoba,
I'm talking about a launcher that opens the

241
00:18:55,669 --> 00:18:59,799
browser in a special full-screen standalone
mode.

242
00:18:59,799 --> 00:19:06,710
We're not patching our files, our HTML and
JavaScript files, we're not packaging those

243
00:19:06,710 --> 00:19:13,019
files, we're just launching the PWA and the
service worker will take care of the loading

244
00:19:13,019 --> 00:19:14,019
device.

245
00:19:14,019 --> 00:19:19,440
So, for windows, we can create an APPX - that's
the format available - and then you can go

246
00:19:19,440 --> 00:19:26,029
to the Microsoft Store for this Nokia device.

247
00:19:26,029 --> 00:19:34,260
You can create a cash generator - there are
free tools that will help you in the creation

248
00:19:34,260 --> 00:19:38,360
of this - so, again, you still have your web
app, you still have your service workers.

249
00:19:38,360 --> 00:19:43,149
We're talking about the outer ring - just
that.

250
00:19:43,149 --> 00:19:47,779
You need to do something else, not just the
web manifest for these - for these operating

251
00:19:47,779 --> 00:19:48,779
systems.

252
00:19:48,779 --> 00:19:55,450
But you're thinking, "Well, what about Play
Store?

253
00:19:55,450 --> 00:19:57,350
What about Android?."

254
00:19:57,350 --> 00:20:03,760
Let me give you an example, an e-commerce
site from the US where you can buy flowers.

255
00:20:03,760 --> 00:20:06,029
They created a really good PWA.

256
00:20:06,029 --> 00:20:10,919
There were even mentioned in the last Google
IO keynote.

257
00:20:10,919 --> 00:20:21,740
They also used to have a native review, was
kind of okay.

258
00:20:21,740 --> 00:20:30,651
Well [microphone breaking up] Play Store today,
you go to trending, then the fifth one, it's

259
00:20:30,651 --> 00:20:38,620
800 Flowers, and you can install the app from
the Play Store.

260
00:20:38,620 --> 00:20:43,799
That app is basically a PWA, okay?

261
00:20:43,799 --> 00:20:45,859
It's their PWA.

262
00:20:45,859 --> 00:20:51,690
So now they have replaced their native app
with a PWA.

263
00:20:51,690 --> 00:20:58,029
This is now possible, so you can publish new
apps and PWAs, or if you have on your company

264
00:20:58,029 --> 00:21:06,970
crappy Android native app, a package ID, upload
new versions, and all the users will receive

265
00:21:06,970 --> 00:21:09,460
now the PWA version.

266
00:21:09,460 --> 00:21:14,559
From now on, you don't need to upload any
more updates because you just change the files

267
00:21:14,559 --> 00:21:15,559
on your server.

268
00:21:15,559 --> 00:21:19,799
You don't need to package new APKs.

269
00:21:19,799 --> 00:21:22,470
So this is thanks to trusted web activities.

270
00:21:22,470 --> 00:21:28,220
There is something new available on Android
with Chrome, maybe it's going to appear with

271
00:21:28,220 --> 00:21:29,299
other browsers as well.

272
00:21:29,299 --> 00:21:35,230
So far, it's only on Chrome in a will let
you compile your own Android app, need to

273
00:21:35,230 --> 00:21:37,489
use Android Studio, okay?

274
00:21:37,489 --> 00:21:43,039
It's one line of code that you need to set
that is basically your URL.

275
00:21:43,039 --> 00:21:50,419
You need to show you're the owner of that
URL, and, when you do that, you set the icon,

276
00:21:50,419 --> 00:21:53,989
the URL, and you go to the Play Store.

277
00:21:53,989 --> 00:21:58,950
So you can actually today publish PWAs in
the Play Store, okay?

278
00:21:58,950 --> 00:22:00,450
So, what about iOS?

279
00:22:00,450 --> 00:22:02,869
Can we do something for iOS?

280
00:22:02,869 --> 00:22:05,299
Probably you're thinking no?

281
00:22:05,299 --> 00:22:09,360
. Let me tell you I found something, not what
you're expecting anyway.

282
00:22:09,360 --> 00:22:19,460
I found a tool called configurator where you
can actually set web clips for full screen.

283
00:22:19,460 --> 00:22:22,929
That full screen thing there that is basically
a PWA.

284
00:22:22,929 --> 00:22:29,480
This creates a mobile config file that you
can serve on Safari or website and send by

285
00:22:29,480 --> 00:22:30,480
email.

286
00:22:30,480 --> 00:22:37,309
If the user accepts that configuration file
... icons.

287
00:22:37,309 --> 00:22:39,700
This is for enterprise distribution?

288
00:22:39,700 --> 00:22:42,989
It's not for end-users.

289
00:22:42,989 --> 00:22:49,640
For enterprise distribution, this is one way
that you have today to distribute your PWAs.

290
00:22:49,640 --> 00:22:55,259
One tool that is cool and interesting that
you could use today to create these packages

291
00:22:55,259 --> 00:23:01,059
because we are web developers, Android studios
is there, it's kind of tricky to understand

292
00:23:01,059 --> 00:23:06,669
Android Studio and how it works, PWA builder
is a free tool from Microsoft that will help

293
00:23:06,669 --> 00:23:09,649
you create all these packages.

294
00:23:09,649 --> 00:23:20,309
If you already have a PWA, it will create
the AP KFOR the play store, the APPX or Microsoft

295
00:23:20,309 --> 00:23:24,950
Store, and it will even create you a version
for the iOS app store.

296
00:23:24,950 --> 00:23:26,399
Using that case the web use.

297
00:23:26,399 --> 00:23:30,440
It will be like a hybrid for iOS for the app
store.

298
00:23:30,440 --> 00:23:34,149
So we can distribute apps in the store.

299
00:23:34,149 --> 00:23:37,240
But you're thinking but we are the web, we
should not be in the store.

300
00:23:37,240 --> 00:23:40,490
That's a different discussion but, from a
business point of view, it's a good idea to

301
00:23:40,490 --> 00:23:41,860
be there.

302
00:23:41,860 --> 00:23:44,429
But we need to be careful.

303
00:23:44,429 --> 00:23:47,159
Because not every app can be in the store.

304
00:23:47,159 --> 00:23:54,470
For example, there is a PWA today that I'm
not sure if you've heard about, that icon,

305
00:23:54,470 --> 00:23:58,659
how many of you know what that icon is?

306
00:23:58,659 --> 00:24:00,090
Have one here.

307
00:24:00,090 --> 00:24:04,149
Well, that is YouPorn.

308
00:24:04,149 --> 00:24:09,070
They have a PWA, and of course they cannot
be in the store, okay?

309
00:24:09,070 --> 00:24:15,789
Because the store has some rules, and you
need to check those rules.

310
00:24:15,789 --> 00:24:20,139
You cannot publish private apps, apps for
your employee, for example.

311
00:24:20,139 --> 00:24:25,889
You cannot create apps using PayPal or other
mechanisms to sell content, so you need to

312
00:24:25,889 --> 00:24:29,359
check those rules, okay.

313
00:24:29,359 --> 00:24:36,330
So the modern PWA cheat sheet, we have seen
basic PWA support that we need to add, and

314
00:24:36,330 --> 00:24:39,249
then understand the live cycle.

315
00:24:39,249 --> 00:24:45,730
Progressive experience, not the same app for
all the users, and then platform integration,

316
00:24:45,730 --> 00:24:51,399
we need to integrate with every platform,
bugs, hacks, we need to do unfortunately.

317
00:24:51,399 --> 00:24:57,269
Then we need to improve installation experience,
create the install button and also publishing

318
00:24:57,269 --> 00:24:58,769
in the store, okay?

319
00:24:58,769 --> 00:25:05,359
So this is for me what you need to do today
to create a really good PWA, okay?

320
00:25:05,359 --> 00:25:08,639
That is all.

321
00:25:08,639 --> 00:25:10,830
Thank you!

