1
00:00:11,230 --> 00:00:14,480

hey everyone thanks for coming I'm max

2
00:00:14,480 --> 00:00:17,300
as was said I'm from San Francisco a

3
00:00:17,300 --> 00:00:19,250
place it's almost as beautiful as

4
00:00:19,250 --> 00:00:21,349
Iceland on a nice day this is a picture

5
00:00:21,349 --> 00:00:24,110
of one of my favorite places there today

6
00:00:24,110 --> 00:00:25,250
we're going to be talking about

7
00:00:25,250 --> 00:00:27,980
Bluetooth Harald Bluetooth was a king of

8
00:00:27,980 --> 00:00:30,080
denmark and norway in the 10th century

9
00:00:30,080 --> 00:00:32,480
AD he's widely known as the inventor of

10
00:00:32,480 --> 00:00:34,100
Bluetooth technology but there are no

11
00:00:34,100 --> 00:00:35,690
Bluetooth devices in his day so the

12
00:00:35,690 --> 00:00:37,220
technology went on used for hundreds of

13
00:00:37,220 --> 00:00:41,360
years actually not quite we're going to

14
00:00:41,360 --> 00:00:42,500
be talking about bluetooth low energy

15
00:00:42,500 --> 00:00:46,370
which is a variant of Bluetooth 4.2 'the

16
00:00:46,370 --> 00:00:47,840
smart it was originally developed by

17
00:00:47,840 --> 00:00:50,960
nokia in the early 2000s for lower power

18
00:00:50,960 --> 00:00:53,539
lower bandwidth devices like sensors and

19
00:00:53,539 --> 00:00:56,800
what we now call the Internet of Things

20
00:00:56,800 --> 00:00:58,910
bluetooth low energy can be thought of

21
00:00:58,910 --> 00:01:00,920
as a hierarchy of key value pairs what

22
00:01:00,920 --> 00:01:03,729
we call is the generic attribute profile

23
00:01:03,729 --> 00:01:07,940
and short for a gap so let's take a look

24
00:01:07,940 --> 00:01:09,530
at what this looks like so for example

25
00:01:09,530 --> 00:01:11,750
let's say we have a heart rate wristband

26
00:01:11,750 --> 00:01:14,030
and get terminology we would call that a

27
00:01:14,030 --> 00:01:15,740
gat server because it's what we connect

28
00:01:15,740 --> 00:01:18,860
to a GATT server contains a collection

29
00:01:18,860 --> 00:01:21,679
of services for instance this server has

30
00:01:21,679 --> 00:01:23,630
device information such as the vendor

31
00:01:23,630 --> 00:01:26,060
serial number inversion live heart rate

32
00:01:26,060 --> 00:01:27,979
data and a battery service which we can

33
00:01:27,979 --> 00:01:30,140
get battery up-to-date battery info from

34
00:01:30,140 --> 00:01:32,750
each of these services has a unique

35
00:01:32,750 --> 00:01:34,880
identifier which we can use to request

36
00:01:34,880 --> 00:01:38,300
it from the device a service contains a

37
00:01:38,300 --> 00:01:40,160
collection of characteristics for

38
00:01:40,160 --> 00:01:42,140
instance the heart rate service has live

39
00:01:42,140 --> 00:01:43,610
heart rate measurement data and body

40
00:01:43,610 --> 00:01:45,590
sensor location in this case the body

41
00:01:45,590 --> 00:01:46,880
sensor location would be the risk

42
00:01:46,880 --> 00:01:50,270
because this is a wristband services are

43
00:01:50,270 --> 00:01:52,459
really important for Bluetooth discovery

44
00:01:52,459 --> 00:01:54,200
when you want to find a device to

45
00:01:54,200 --> 00:01:57,020
connect to you do that by looking for a

46
00:01:57,020 --> 00:01:59,330
specific service a service provides

47
00:01:59,330 --> 00:02:01,190
interoperability between different

48
00:02:01,190 --> 00:02:02,390
devices by different manufacturers

49
00:02:02,390 --> 00:02:04,489
because it's like a schema if you have a

50
00:02:04,489 --> 00:02:06,110
heart rate service it'll be the same no

51
00:02:06,110 --> 00:02:08,690
matter what device you are talking to so

52
00:02:08,690 --> 00:02:10,940
for instance a client like a phone can

53
00:02:10,940 --> 00:02:12,920
look for a heart rate service and if

54
00:02:12,920 --> 00:02:14,390
there's a device that is offering the

55
00:02:14,390 --> 00:02:15,920
heart rate service out there it will be

56
00:02:15,920 --> 00:02:17,600
broadcasting it'll be advertising hey

57
00:02:17,600 --> 00:02:19,700
I've got heart rate service and then the

58
00:02:19,700 --> 00:02:22,710
client can start a connection with them

59
00:02:22,710 --> 00:02:25,140
web bluetooth is a relatively new

60
00:02:25,140 --> 00:02:27,450
development it's available right now in

61
00:02:27,450 --> 00:02:30,030
as flagged in Google Chrome so if you

62
00:02:30,030 --> 00:02:31,710
have google chrome stable you probably

63
00:02:31,710 --> 00:02:33,240
already have a browser which supports

64
00:02:33,240 --> 00:02:34,890
web bluetooth but it's still very

65
00:02:34,890 --> 00:02:37,440
experimental it's still changing and

66
00:02:37,440 --> 00:02:39,150
there may be unpredictability or even

67
00:02:39,150 --> 00:02:40,770
the potential for undiscovered security

68
00:02:40,770 --> 00:02:43,530
issues so it's still you know hold on to

69
00:02:43,530 --> 00:02:46,410
your horses and it is also under

70
00:02:46,410 --> 00:02:50,060
development in the servo browser engine

71
00:02:50,060 --> 00:02:52,710
so now let's take a look and make our

72
00:02:52,710 --> 00:02:54,420
first connection to a Bluetooth device

73
00:02:54,420 --> 00:02:56,760
this is called oh my oh I'm wearing one

74
00:02:56,760 --> 00:02:59,760
right here the Myo is a ring of

75
00:02:59,760 --> 00:03:02,940
electrical contacts and it's based it is

76
00:03:02,940 --> 00:03:05,130
able to detect electrical changes on

77
00:03:05,130 --> 00:03:07,530
your skin and recognize like crude arm

78
00:03:07,530 --> 00:03:09,090
gestures like if I make a fist it can

79
00:03:09,090 --> 00:03:12,240
recognize that and let's step through in

80
00:03:12,240 --> 00:03:13,920
the console how to connect to this Maya

81
00:03:13,920 --> 00:03:17,400
and we're going to do this live the Maya

82
00:03:17,400 --> 00:03:19,650
this is what the Maya looks like in

83
00:03:19,650 --> 00:03:21,050
terms of services and and

84
00:03:21,050 --> 00:03:22,650
characteristics there's a command

85
00:03:22,650 --> 00:03:24,330
characteristic which we can write values

86
00:03:24,330 --> 00:03:26,070
to to send commands to the device and

87
00:03:26,070 --> 00:03:28,050
there's a gesture characteristic which

88
00:03:28,050 --> 00:03:30,830
we can use to observe live gestures from

89
00:03:30,830 --> 00:03:35,360
here's the ideas for those services and

90
00:03:35,360 --> 00:03:38,100
as I advance the slides this these

91
00:03:38,100 --> 00:03:39,660
commands are going to be running live in

92
00:03:39,660 --> 00:03:42,510
the console dunno life so the first

93
00:03:42,510 --> 00:03:44,580
thing we need to do too is we need to

94
00:03:44,580 --> 00:03:47,760
find or discover the Myo device the Myo

95
00:03:47,760 --> 00:03:49,710
device is broadcasting hey I've got the

96
00:03:49,710 --> 00:03:51,630
Myo control service so what we're going

97
00:03:51,630 --> 00:03:53,730
to do is call navigator bluetooth dart

98
00:03:53,730 --> 00:03:55,800
request device and what we do is we pass

99
00:03:55,800 --> 00:03:57,840
it a filters object and the filters is

100
00:03:57,840 --> 00:03:59,550
basically describing what the device

101
00:03:59,550 --> 00:04:01,740
looks like that we want to connect to we

102
00:04:01,740 --> 00:04:03,510
also need to specify the gesture service

103
00:04:03,510 --> 00:04:05,070
here because we're going to need to

104
00:04:05,070 --> 00:04:06,600
access it later we need to specify up

105
00:04:06,600 --> 00:04:08,190
front all the servers were going

106
00:04:08,190 --> 00:04:10,290
services we're going to access on the

107
00:04:10,290 --> 00:04:13,140
device so when we run this code you'll

108
00:04:13,140 --> 00:04:15,420
see there's now a pop-up here that is

109
00:04:15,420 --> 00:04:18,359
offering to connect to the DeMaio on my

110
00:04:18,359 --> 00:04:22,860
arm this navigator Bluetooth dot request

111
00:04:22,860 --> 00:04:26,010
device requires user interaction so you

112
00:04:26,010 --> 00:04:27,780
need to have it connected to a mouse

113
00:04:27,780 --> 00:04:30,030
click or a key press we'll talk a little

114
00:04:30,030 --> 00:04:32,130
bit more about that later when I press

115
00:04:32,130 --> 00:04:34,500
the connect button the promise that is

116
00:04:34,500 --> 00:04:36,090
returned by a request device will

117
00:04:36,090 --> 00:04:36,569
resolve

118
00:04:36,569 --> 00:04:38,159
and as you see we've successfully got

119
00:04:38,159 --> 00:04:41,189
just a representation of a Bluetooth

120
00:04:41,189 --> 00:04:43,020
device here but we haven't connected to

121
00:04:43,020 --> 00:04:46,709
it yet to do that we call a gap connect

122
00:04:46,709 --> 00:04:50,189
on it let's give that a shot and let's

123
00:04:50,189 --> 00:04:52,889
wait cool okay so now we're actually

124
00:04:52,889 --> 00:04:55,289
connected to the device let's take

125
00:04:55,289 --> 00:04:56,669
another look at what the services and

126
00:04:56,669 --> 00:04:58,979
characteristics look like as a demo I'd

127
00:04:58,979 --> 00:05:01,469
like to show how to read and observe

128
00:05:01,469 --> 00:05:03,689
gestures from the device so what we need

129
00:05:03,689 --> 00:05:05,159
to do is drill down into the GATT

130
00:05:05,159 --> 00:05:07,349
hierarchy and get the gesture service

131
00:05:07,349 --> 00:05:08,909
and then the gesture characteristic from

132
00:05:08,909 --> 00:05:11,999
that to get the service we call get

133
00:05:11,999 --> 00:05:13,709
primary service with the idea of the

134
00:05:13,709 --> 00:05:16,469
service that we want that returns a gat

135
00:05:16,469 --> 00:05:19,529
service object and then we want to drill

136
00:05:19,529 --> 00:05:21,360
down and get the characteristic we call

137
00:05:21,360 --> 00:05:23,129
get characteristic on the service with

138
00:05:23,129 --> 00:05:24,689
the idea of the characteristic we're

139
00:05:24,689 --> 00:05:26,729
interested in characteristics are the

140
00:05:26,729 --> 00:05:28,800
values of the key value pairs in the

141
00:05:28,800 --> 00:05:34,830
hierarchy now that we have a reference

142
00:05:34,830 --> 00:05:37,409
to this characteristic we need to do two

143
00:05:37,409 --> 00:05:39,240
things we need to ask the device to

144
00:05:39,240 --> 00:05:41,490
notify us as the characteristic value

145
00:05:41,490 --> 00:05:43,740
changes and then we can set up an event

146
00:05:43,740 --> 00:05:45,539
listener that will print out the

147
00:05:45,539 --> 00:05:47,039
gestures as they received from the

148
00:05:47,039 --> 00:05:48,839
device I'm calling a function here

149
00:05:48,839 --> 00:05:51,089
called par smile gesture because the

150
00:05:51,089 --> 00:05:52,649
data you get from these characteristics

151
00:05:52,649 --> 00:05:54,839
is an encoded binary you have to decode

152
00:05:54,839 --> 00:05:57,089
it and interpret it into a higher level

153
00:05:57,089 --> 00:05:58,800
JavaScript form that's nice for us to

154
00:05:58,800 --> 00:06:01,199
work with so when I press the next

155
00:06:01,199 --> 00:06:03,059
button in advance the slide hopefully we

156
00:06:03,059 --> 00:06:04,349
should receive gestures from the device

157
00:06:04,349 --> 00:06:07,610
I'm going to make a fist with my hand

158
00:06:07,610 --> 00:06:11,279
uh-oh oh no that's okay there's one more

159
00:06:11,279 --> 00:06:13,199
thing that we have to do we need to send

160
00:06:13,199 --> 00:06:15,689
a command to the mile telling it please

161
00:06:15,689 --> 00:06:17,849
start recognizing gestures and sending

162
00:06:17,849 --> 00:06:19,169
them to me this is something specific to

163
00:06:19,169 --> 00:06:20,819
the mile we're turning on its internal

164
00:06:20,819 --> 00:06:22,499
classifier but this is a great example

165
00:06:22,499 --> 00:06:24,389
of how to write a value to a

166
00:06:24,389 --> 00:06:26,369
characteristic to do that we're going to

167
00:06:26,369 --> 00:06:28,409
need to encode a binary characteristic

168
00:06:28,409 --> 00:06:31,110
command value we do this using typed

169
00:06:31,110 --> 00:06:32,849
arrays as you can see this is a five

170
00:06:32,849 --> 00:06:37,110
byte array notably the last the last

171
00:06:37,110 --> 00:06:40,379
bite of the array is the value one and

172
00:06:40,379 --> 00:06:42,839
in the for the Myo that means please

173
00:06:42,839 --> 00:06:44,809
turn on the gesture classifier and

174
00:06:44,809 --> 00:06:47,300
that's what it looks like on the console

175
00:06:47,300 --> 00:06:48,990
finally we're going to write this

176
00:06:48,990 --> 00:06:49,740
command

177
00:06:49,740 --> 00:06:51,389
please turn on the carrot the recognizer

178
00:06:51,389 --> 00:06:53,940
to the to the control service of the

179
00:06:53,940 --> 00:06:56,759
Maya this is a this is similar to before

180
00:06:56,759 --> 00:06:58,169
but we're just using a lot of promise

181
00:06:58,169 --> 00:07:00,810
changing the entire web Bluetooth API is

182
00:07:00,810 --> 00:07:02,550
a lot of promises because each of these

183
00:07:02,550 --> 00:07:05,220
steps could involve asynchrony so we're

184
00:07:05,220 --> 00:07:06,449
getting the primaries we're getting the

185
00:07:06,449 --> 00:07:08,370
service for the control service then

186
00:07:08,370 --> 00:07:09,240
we're drilling down into the

187
00:07:09,240 --> 00:07:11,490
characteristic for sending commands and

188
00:07:11,490 --> 00:07:13,229
finally we're writing a value to the

189
00:07:13,229 --> 00:07:15,090
command characteristic which is the

190
00:07:15,090 --> 00:07:19,020
gestures command we have up here and now

191
00:07:19,020 --> 00:07:21,240
we have live Bluetooth data from the

192
00:07:21,240 --> 00:07:24,810
Mayo so the model can recognize a couple

193
00:07:24,810 --> 00:07:28,289
things if I spread my fingers I can also

194
00:07:28,289 --> 00:07:31,080
make a fist I can wave in I can wave out

195
00:07:31,080 --> 00:07:42,999
and I can tap my fingers maybe magic

196
00:07:43,009 --> 00:07:46,740
this is so freaking cool oh my gosh like

197
00:07:46,740 --> 00:07:48,300
the first time I got this working was

198
00:07:48,300 --> 00:07:50,099
amazing because i've had this my 0

199
00:07:50,099 --> 00:07:51,690
device for about like one or two years

200
00:07:51,690 --> 00:07:53,370
and i've never been able to use it on

201
00:07:53,370 --> 00:07:55,380
linux because the manufacturer never

202
00:07:55,380 --> 00:07:57,870
made a device driver for linux but here

203
00:07:57,870 --> 00:08:00,300
in just like what like 15 lines of code

204
00:08:00,300 --> 00:08:01,680
we have a connection to the device and

205
00:08:01,680 --> 00:08:03,210
we're able to get gestures off it this

206
00:08:03,210 --> 00:08:06,659
is magical let's talk more about what's

207
00:08:06,659 --> 00:08:09,719
going on here so from the mile which is

208
00:08:09,719 --> 00:08:11,219
like many of the bluetooth devices i'll

209
00:08:11,219 --> 00:08:12,990
show you today we're essentially getting

210
00:08:12,990 --> 00:08:15,840
a real time stream of data updates from

211
00:08:15,840 --> 00:08:18,569
the device if you're familiar with any

212
00:08:18,569 --> 00:08:21,030
functional reactive programming perhaps

213
00:08:21,030 --> 00:08:22,590
you've come across this concept of a

214
00:08:22,590 --> 00:08:24,569
stream before but you may be thinking of

215
00:08:24,569 --> 00:08:28,580
something that looks more like this or

216
00:08:28,580 --> 00:08:34,050
maybe this but uh that's okay here's an

217
00:08:34,050 --> 00:08:36,209
introduction of how to work with streams

218
00:08:36,209 --> 00:08:39,630
in reactive mind set we're going to use

219
00:08:39,630 --> 00:08:42,029
a library called extreme for this here's

220
00:08:42,029 --> 00:08:43,890
how to create a stream that will

221
00:08:43,890 --> 00:08:46,260
immediately emit five events the numbers

222
00:08:46,260 --> 00:08:53,759
one through five as JavaScript objects

223
00:08:53,769 --> 00:08:57,610
there we go but the stream is not going

224
00:08:57,610 --> 00:08:59,559
to do anything until we add our first

225
00:08:59,559 --> 00:09:02,079
listener to it a stream can be basically

226
00:09:02,079 --> 00:09:04,300
thought of as a value changing over time

227
00:09:04,300 --> 00:09:07,149
or a periodic sequence of events the

228
00:09:07,149 --> 00:09:10,239
stream listener is basically three

229
00:09:10,239 --> 00:09:12,309
callbacks a callback that is called when

230
00:09:12,309 --> 00:09:15,959
a new value is emitted from the stream a

231
00:09:15,959 --> 00:09:18,610
fatal error call back and a call back

232
00:09:18,610 --> 00:09:20,499
when the stream is complete and will no

233
00:09:20,499 --> 00:09:22,360
longer emit any values so what we have

234
00:09:22,360 --> 00:09:25,149
here is a utility function that will

235
00:09:25,149 --> 00:09:27,790
print out on the console when each of

236
00:09:27,790 --> 00:09:29,499
these callbacks is called so if we try

237
00:09:29,499 --> 00:09:31,509
that on our numbers stream as expected

238
00:09:31,509 --> 00:09:33,399
we get the numbers one through five and

239
00:09:33,399 --> 00:09:36,429
then the stream completes but where

240
00:09:36,429 --> 00:09:40,389
streams get really powerful got a got a

241
00:09:40,389 --> 00:09:43,299
key into this Maya gesture here is when

242
00:09:43,299 --> 00:09:45,339
you can use them to manipulate data and

243
00:09:45,339 --> 00:09:49,029
create data flows stream processes by

244
00:09:49,029 --> 00:09:51,220
which we're transforming the data so for

245
00:09:51,220 --> 00:09:53,079
example we can create a new stream of

246
00:09:53,079 --> 00:09:56,259
the values x 10 based on our original

247
00:09:56,259 --> 00:09:58,179
stream by mapping a function over it so

248
00:09:58,179 --> 00:10:00,999
in here we're mapping x 10 to our stream

249
00:10:00,999 --> 00:10:04,959
and we're printing it out maybe I should

250
00:10:04,959 --> 00:10:06,879
switch back to the keyboard as you can

251
00:10:06,879 --> 00:10:09,490
see now we have printed out the numbers

252
00:10:09,490 --> 00:10:11,439
1 through 10 through 50 and the stream

253
00:10:11,439 --> 00:10:13,990
completes but where this gets really

254
00:10:13,990 --> 00:10:18,040
interesting is asynchrony this time

255
00:10:18,040 --> 00:10:19,600
let's try printing out the numbers one

256
00:10:19,600 --> 00:10:21,459
through five but let's wait a second in

257
00:10:21,459 --> 00:10:24,899
between each in between each increment

258
00:10:24,899 --> 00:10:27,519
access periodic will give us a stream

259
00:10:27,519 --> 00:10:29,379
that waits a certain amount of time and

260
00:10:29,379 --> 00:10:31,449
will count up into infinity but we don't

261
00:10:31,449 --> 00:10:32,920
want to count into infinity we want to

262
00:10:32,920 --> 00:10:35,410
count up to the number five so we can

263
00:10:35,410 --> 00:10:36,910
create another stream called finished

264
00:10:36,910 --> 00:10:40,299
that weight that filters out any values

265
00:10:40,299 --> 00:10:43,360
that are less that are not greater than

266
00:10:43,360 --> 00:10:45,759
five so the first value will emit is

267
00:10:45,759 --> 00:10:47,529
when the count reaches six and then we

268
00:10:47,529 --> 00:10:49,149
can end our original stream the count

269
00:10:49,149 --> 00:10:51,610
stream when six is emitted so then we

270
00:10:51,610 --> 00:10:53,019
can just get the numbers one through

271
00:10:53,019 --> 00:10:56,819
five waiting a second in between mitts

272
00:10:56,819 --> 00:11:03,070
and then the stream completes cool

273
00:11:03,070 --> 00:11:05,420
wouldn't it be cool if we could treat

274
00:11:05,420 --> 00:11:10,270
Bluetooth devices like uh like streams

275
00:11:10,270 --> 00:11:12,800
I've been tinkering with a library for

276
00:11:12,800 --> 00:11:15,710
doing this the first thing we give this

277
00:11:15,710 --> 00:11:18,140
library is a description of the device

278
00:11:18,140 --> 00:11:19,760
we'd like to connect to this looks like

279
00:11:19,760 --> 00:11:22,370
the call to navigator dot bluetooth that

280
00:11:22,370 --> 00:11:24,560
request device we're passing in filters

281
00:11:24,560 --> 00:11:26,480
and optional services but now we give it

282
00:11:26,480 --> 00:11:28,160
a listen object that's a description of

283
00:11:28,160 --> 00:11:30,260
the services and characteristics and

284
00:11:30,260 --> 00:11:32,330
those services that we want to observe

285
00:11:32,330 --> 00:11:34,430
as a stream and what this library does

286
00:11:34,430 --> 00:11:38,320
is it it gets that characteristic it

287
00:11:38,320 --> 00:11:40,820
starts notifications running from them

288
00:11:40,820 --> 00:11:42,320
and it hooks up an event listener and it

289
00:11:42,320 --> 00:11:44,870
emits those events as a stream and if

290
00:11:44,870 --> 00:11:46,610
the device disconnects it will reconnect

291
00:11:46,610 --> 00:11:49,940
automatically so here is a view of the

292
00:11:49,940 --> 00:11:52,760
live data coming off of the Myo device

293
00:11:52,760 --> 00:11:56,270
on my arm it we're printing it out in

294
00:11:56,270 --> 00:11:58,280
hex format and if I make a fist you can

295
00:11:58,280 --> 00:12:01,510
see the value changes from 0 to 1 and

296
00:12:01,510 --> 00:12:04,430
we're using this library to we're just

297
00:12:04,430 --> 00:12:06,590
pulling out the the gesture service and

298
00:12:06,590 --> 00:12:09,500
gesture characteristic as a stream but

299
00:12:09,500 --> 00:12:11,720
that's not very nice to look at or code

300
00:12:11,720 --> 00:12:15,170
with so to parse this Milo gesture

301
00:12:15,170 --> 00:12:16,970
here's an example of how you can decode

302
00:12:16,970 --> 00:12:20,500
one of these binary events we have a

303
00:12:20,500 --> 00:12:25,430
mapping from from values to string

304
00:12:25,430 --> 00:12:28,340
gestures and we're just going to get the

305
00:12:28,340 --> 00:12:31,280
the value of the gesture in binary from

306
00:12:31,280 --> 00:12:33,680
the mile look it up on our table and

307
00:12:33,680 --> 00:12:36,970
return the value if we have a match and

308
00:12:36,970 --> 00:12:40,040
that's what this looks like so now we

309
00:12:40,040 --> 00:12:43,820
have a live stream of high-level like

310
00:12:43,820 --> 00:12:46,220
easy to work with gesture data you'll

311
00:12:46,220 --> 00:12:47,690
notice there's kind of a funny dollar

312
00:12:47,690 --> 00:12:51,260
sign after raw gesture that's how that's

313
00:12:51,260 --> 00:12:55,760
a convention for indicating whoops have

314
00:12:55,760 --> 00:12:57,830
to get a little bit less less excited

315
00:12:57,830 --> 00:13:00,830
with my arms that's a convention the

316
00:13:00,830 --> 00:13:02,510
dollar sign tells us that the variable

317
00:13:02,510 --> 00:13:04,310
we are working with is a stream and as

318
00:13:04,310 --> 00:13:05,930
we've see in the slides to follow all of

319
00:13:05,930 --> 00:13:08,750
these slides are transforming one stream

320
00:13:08,750 --> 00:13:10,760
of data into another stream of data and

321
00:13:10,760 --> 00:13:14,060
processing it as we go let's look at a

322
00:13:14,060 --> 00:13:15,520
second device

323
00:13:15,520 --> 00:13:17,550
this is a Bluetooth heart rate monitor

324
00:13:17,550 --> 00:13:20,230
the way it works is it shines a green

325
00:13:20,230 --> 00:13:22,900
light into your wrist and it detects the

326
00:13:22,900 --> 00:13:24,670
my new changes in color from blood

327
00:13:24,670 --> 00:13:27,520
pumping into and out of your skin out of

328
00:13:27,520 --> 00:13:31,060
your veins in underneath your skin this

329
00:13:31,060 --> 00:13:33,070
device is similar to the mile we're

330
00:13:33,070 --> 00:13:34,810
looking for a device this time that is

331
00:13:34,810 --> 00:13:36,610
advertising the heart rate service and

332
00:13:36,610 --> 00:13:38,200
we're going to pull we're going to dig

333
00:13:38,200 --> 00:13:39,280
into it and get the heart rate

334
00:13:39,280 --> 00:13:40,630
measurement characteristic from there

335
00:13:40,630 --> 00:13:43,090
you'll notice that instead of a variable

336
00:13:43,090 --> 00:13:44,650
where I'm holding an ID for these

337
00:13:44,650 --> 00:13:47,140
services and characteristics we're just

338
00:13:47,140 --> 00:13:49,180
passing a plain old JavaScript strings

339
00:13:49,180 --> 00:13:51,610
in here the reason is the heart rate

340
00:13:51,610 --> 00:13:53,050
service and heart rate characteristic

341
00:13:53,050 --> 00:13:55,270
are standard services provided by the

342
00:13:55,270 --> 00:14:00,220
bluetooth sig on back to that in a

343
00:14:00,220 --> 00:14:02,260
moment here's the binary data coming off

344
00:14:02,260 --> 00:14:04,450
of the heart rate heart rate stream

345
00:14:04,450 --> 00:14:09,190
coming straight from my arm right now so

346
00:14:09,190 --> 00:14:10,870
you may be wondering where you find

347
00:14:10,870 --> 00:14:11,980
information about these binary

348
00:14:11,980 --> 00:14:13,330
representations and what kind of

349
00:14:13,330 --> 00:14:15,370
services and characteristics there are

350
00:14:15,370 --> 00:14:17,830
this is a website from the bluetooth sig

351
00:14:17,830 --> 00:14:19,240
where they describe each of these

352
00:14:19,240 --> 00:14:20,710
characteristics and the data formats

353
00:14:20,710 --> 00:14:22,750
inside so we can drill down the

354
00:14:22,750 --> 00:14:24,520
characteristics listing to find heart

355
00:14:24,520 --> 00:14:26,410
rate measurement and then when we go

356
00:14:26,410 --> 00:14:29,100
look into their we find a table

357
00:14:29,100 --> 00:14:31,240
describing what each byte does and how

358
00:14:31,240 --> 00:14:32,650
to interpret it what the what the

359
00:14:32,650 --> 00:14:34,180
description is what the units are etc

360
00:14:34,180 --> 00:14:36,700
and this is what the heart rate

361
00:14:36,700 --> 00:14:41,740
measurement one looks like and then you

362
00:14:41,740 --> 00:14:43,270
can turn that into a big old JavaScript

363
00:14:43,270 --> 00:14:44,440
function we're not going to go into the

364
00:14:44,440 --> 00:14:45,760
details here but what's interesting

365
00:14:45,760 --> 00:14:46,990
about this function is it's actually

366
00:14:46,990 --> 00:14:48,760
straight from the web bluetooth spec

367
00:14:48,760 --> 00:14:52,570
draft it's used as an example there so

368
00:14:52,570 --> 00:14:54,100
if we apply this parse heart rate

369
00:14:54,100 --> 00:14:56,380
function to our stream of binary data we

370
00:14:56,380 --> 00:14:58,650
can get a live feed of heart rate data

371
00:14:58,650 --> 00:15:01,360
as a stream you can see here that

372
00:15:01,360 --> 00:15:05,590
there's the the heart rate value that's

373
00:15:05,590 --> 00:15:07,540
in beats per minute and there's also our

374
00:15:07,540 --> 00:15:09,370
hour intervals which is the amount of

375
00:15:09,370 --> 00:15:13,430
time in between each heart rate pulse

376
00:15:13,440 --> 00:15:15,790
now we're going to look at the last and

377
00:15:15,790 --> 00:15:17,890
most exciting device for me which is a

378
00:15:17,890 --> 00:15:21,250
bicycle sensor this bicycle sensor sits

379
00:15:21,250 --> 00:15:23,290
on the chainstay of your bike we have

380
00:15:23,290 --> 00:15:27,570
one right here and it basically there's

381
00:15:27,570 --> 00:15:29,430
there's a there's two magnets on this

382
00:15:29,430 --> 00:15:32,580
bike there's a magnet on the on the

383
00:15:32,580 --> 00:15:34,650
crank here by the pedal and there's a

384
00:15:34,650 --> 00:15:36,840
magnet on the spoke of the bike and as

385
00:15:36,840 --> 00:15:39,000
these magnets pass by the bike sensor

386
00:15:39,000 --> 00:15:42,450
it's going to count how many times how

387
00:15:42,450 --> 00:15:45,360
many times they've passed by frankly

388
00:15:45,360 --> 00:15:50,970
it's a glorified stopwatch but a

389
00:15:50,970 --> 00:15:52,740
stopwatch isn't a very useful piece of

390
00:15:52,740 --> 00:15:56,550
data to to work with to connect to the

391
00:15:56,550 --> 00:15:58,980
cycling cycle sensor we're going to use

392
00:15:58,980 --> 00:16:00,780
the cycling speed and cadence service

393
00:16:00,780 --> 00:16:04,830
which this device advertises and as you

394
00:16:04,830 --> 00:16:07,170
can see these are all so friendly string

395
00:16:07,170 --> 00:16:09,030
names so this is a standard service that

396
00:16:09,030 --> 00:16:11,550
you can you can refer to by its its its

397
00:16:11,550 --> 00:16:13,440
name alias when you're using the web

398
00:16:13,440 --> 00:16:16,890
Bluetooth API so let's look at the

399
00:16:16,890 --> 00:16:18,840
binary data coming off of the device if

400
00:16:18,840 --> 00:16:22,710
I give the wheel a turn we should see it

401
00:16:22,710 --> 00:16:25,680
update in a moment cool so what it's

402
00:16:25,680 --> 00:16:27,900
doing we can try turning the crank as

403
00:16:27,900 --> 00:16:35,820
well really exciting alright it will get

404
00:16:35,820 --> 00:16:40,470
more exciting a moment I'm going to save

405
00:16:40,470 --> 00:16:43,050
us the trouble of you know writing a

406
00:16:43,050 --> 00:16:44,820
parser for this and jump straight to the

407
00:16:44,820 --> 00:16:46,230
abstract data we're getting off of the

408
00:16:46,230 --> 00:16:48,030
device as you can see if I give the

409
00:16:48,030 --> 00:16:52,380
wheel another turn you're going to see

410
00:16:52,380 --> 00:16:56,730
indeed that the the revolutions of the

411
00:16:56,730 --> 00:16:59,130
wheel are ticking up and when I turn the

412
00:16:59,130 --> 00:17:05,490
crank the crank revolutions take up as

413
00:17:05,490 --> 00:17:07,800
well and we also have time stamps for

414
00:17:07,800 --> 00:17:09,329
those values which we can use to

415
00:17:09,329 --> 00:17:14,490
calculate the speed of rotation but

416
00:17:14,490 --> 00:17:16,320
first let's uh let's calculate distance

417
00:17:16,320 --> 00:17:18,240
distance is really easy we take the

418
00:17:18,240 --> 00:17:20,250
circumference of the wheel and multiply

419
00:17:20,250 --> 00:17:21,510
it by how many times it's turned around

420
00:17:21,510 --> 00:17:25,770
and then we can get a stream of the

421
00:17:25,770 --> 00:17:28,350
distance traveled we'll use this in our

422
00:17:28,350 --> 00:17:30,150
in our bike computer if we're going to

423
00:17:30,150 --> 00:17:33,360
display it to the to the rider and this

424
00:17:33,360 --> 00:17:41,340
is in kilometers

425
00:17:41,350 --> 00:17:46,910
cool now let's figure out how to create

426
00:17:46,910 --> 00:17:48,380
a stream of the speed of the bike

427
00:17:48,380 --> 00:17:49,130
because that's what we're really

428
00:17:49,130 --> 00:17:51,650
interested in going fast we want to

429
00:17:51,650 --> 00:17:53,180
measure the speed first of all in

430
00:17:53,180 --> 00:17:54,920
revolutions per minute the number of

431
00:17:54,920 --> 00:17:58,280
times the bicycle wheel goes around to

432
00:17:58,280 --> 00:18:00,950
do that we're going to take two samples

433
00:18:00,950 --> 00:18:02,270
we're going to look at like over time

434
00:18:02,270 --> 00:18:04,850
how much how many times the wheel is

435
00:18:04,850 --> 00:18:08,420
rotated over how much time but we

436
00:18:08,420 --> 00:18:11,180
haven't looked at a history yet in the

437
00:18:11,180 --> 00:18:13,400
context of the stream how do we get that

438
00:18:13,400 --> 00:18:15,290
previous value because currently the

439
00:18:15,290 --> 00:18:16,610
streams I've shown you so far are just

440
00:18:16,610 --> 00:18:18,200
the current most live value emitted

441
00:18:18,200 --> 00:18:21,140
every time well excess extreme has us

442
00:18:21,140 --> 00:18:23,090
covered here with an operator called

443
00:18:23,090 --> 00:18:24,830
pairwise and this operator you basically

444
00:18:24,830 --> 00:18:26,300
apply it to your stream and it

445
00:18:26,300 --> 00:18:28,250
transforms your stream into a new form

446
00:18:28,250 --> 00:18:30,860
that emits different types of values

447
00:18:30,860 --> 00:18:33,830
what pairwise does is it will emit

448
00:18:33,830 --> 00:18:36,770
consecutive values as array pairs of a

449
00:18:36,770 --> 00:18:39,080
stream so if we call print stream on

450
00:18:39,080 --> 00:18:41,650
this you can see 1 2 2 2 2 3 3 to 4 etc

451
00:18:41,650 --> 00:18:44,060
so we can use this to pair up our

452
00:18:44,060 --> 00:18:45,890
samples of data from the bicycle

453
00:18:45,890 --> 00:18:47,810
computer and we can use that to

454
00:18:47,810 --> 00:18:50,840
calculate rpm first we're going to do

455
00:18:50,840 --> 00:18:52,790
cadence cyclists like to know how

456
00:18:52,790 --> 00:18:54,860
quickly they're turning their how

457
00:18:54,860 --> 00:18:56,450
quickly they're turning the pedals and

458
00:18:56,450 --> 00:18:58,850
we measure that as cadence directly as

459
00:18:58,850 --> 00:19:01,700
rpm so this is how quickly I'm turning

460
00:19:01,700 --> 00:19:10,280
the pedals right now yeah but for the

461
00:19:10,280 --> 00:19:13,280
speed of the wheel Oh what you see

462
00:19:13,280 --> 00:19:15,230
happening here is we're taking the pairs

463
00:19:15,230 --> 00:19:17,030
of samples and we're just doing a little

464
00:19:17,030 --> 00:19:18,710
bit object plunging before we pass it

465
00:19:18,710 --> 00:19:20,360
into utility that does the math for us

466
00:19:20,360 --> 00:19:22,400
we're pulling out the the crank

467
00:19:22,400 --> 00:19:24,680
revolutions from the first sample and

468
00:19:24,680 --> 00:19:26,000
then the crank revolutions from the

469
00:19:26,000 --> 00:19:28,430
second sample and then the function revs

470
00:19:28,430 --> 00:19:30,740
to rpm is going to just do the math

471
00:19:30,740 --> 00:19:32,510
comparing how much time has passed and

472
00:19:32,510 --> 00:19:35,240
how many cranks have happened we can do

473
00:19:35,240 --> 00:19:36,980
that for speed as well so if i turn the

474
00:19:36,980 --> 00:19:40,780
wheel we can get our PM off of the wheel

475
00:19:40,780 --> 00:19:45,350
and finally what we want to do is

476
00:19:45,350 --> 00:19:48,800
convert convert that RPM to km/h and we

477
00:19:48,800 --> 00:19:50,060
do that by multiplying it by the

478
00:19:50,060 --> 00:19:51,820
circumference of the wheel giving

479
00:19:51,820 --> 00:19:54,340
how much how much distance we were

480
00:19:54,340 --> 00:19:56,320
travelling over time let's give this

481
00:19:56,320 --> 00:20:03,280
another world oops yeah so there there

482
00:20:03,280 --> 00:20:07,000
you have it we've created four streams

483
00:20:07,000 --> 00:20:09,520
of data now coming off of this bike I'll

484
00:20:09,520 --> 00:20:11,800
end my arm this is all completely live

485
00:20:11,800 --> 00:20:13,450
you can see my heart rate is going in a

486
00:20:13,450 --> 00:20:16,630
nice 120 beats per minute everyone's

487
00:20:16,630 --> 00:20:18,850
favorite electronic music tempo and as

488
00:20:18,850 --> 00:20:21,370
we interact with the bike we can get a

489
00:20:21,370 --> 00:20:26,890
live data off of it if we take a goals I

490
00:20:26,890 --> 00:20:31,300
view of what's going on here we've taken

491
00:20:31,300 --> 00:20:32,800
we've connected to a heart rate sensor

492
00:20:32,800 --> 00:20:35,290
here we've converted a stream of binary

493
00:20:35,290 --> 00:20:38,460
data into abstract heart rate data

494
00:20:38,460 --> 00:20:41,350
similarly we've connected to the bicycle

495
00:20:41,350 --> 00:20:43,960
sensor and we've got a system of streams

496
00:20:43,960 --> 00:20:45,790
that are all you know one step in the

497
00:20:45,790 --> 00:20:52,810
data processing flow oops yeah so based

498
00:20:52,810 --> 00:20:55,990
on the ABS on the parsed revolution

499
00:20:55,990 --> 00:20:58,810
counts and time stamps we can derive the

500
00:20:58,810 --> 00:21:01,330
distance travel the wheel rpm the crank

501
00:21:01,330 --> 00:21:03,670
rpm and from the wheel rpm we can do a

502
00:21:03,670 --> 00:21:06,100
little math and get the km/h and now we

503
00:21:06,100 --> 00:21:09,460
have four streams of bicycle information

504
00:21:09,460 --> 00:21:12,160
there's one last step to make a awesome

505
00:21:12,160 --> 00:21:14,950
bicycle computer which is we need to

506
00:21:14,950 --> 00:21:17,770
pipe this all into the Dom somehow we

507
00:21:17,770 --> 00:21:22,950
can use handlebars j/s for this get it

508
00:21:22,950 --> 00:21:26,590
just kidding instead we're going to use

509
00:21:26,590 --> 00:21:28,900
cycle jas for this there's no relation

510
00:21:28,900 --> 00:21:30,760
between cycle jets and bicycle jets by

511
00:21:30,760 --> 00:21:32,040
the way which is the name of this talk

512
00:21:32,040 --> 00:21:34,780
cycle j/s is a really cool library for

513
00:21:34,780 --> 00:21:36,550
building applications and behavior

514
00:21:36,550 --> 00:21:40,060
systems out of streams in cycle j/s your

515
00:21:40,060 --> 00:21:42,310
view is also a stream so we take our

516
00:21:42,310 --> 00:21:44,080
stream of all these like four different

517
00:21:44,080 --> 00:21:45,910
cycling metrics that we've collected up

518
00:21:45,910 --> 00:21:48,070
and we transform that stream into

519
00:21:48,070 --> 00:21:49,900
virtual Dom and when our stream emits

520
00:21:49,900 --> 00:21:51,640
virtual Dom in this case the component

521
00:21:51,640 --> 00:21:56,170
bicycle j/s each emitted virtual Dom get

522
00:21:56,170 --> 00:21:57,340
stiffed with the current state of the

523
00:21:57,340 --> 00:22:00,940
page and the page gets updated and in

524
00:22:00,940 --> 00:22:02,200
the end we get something that looks like

525
00:22:02,200 --> 00:22:06,440
this I'd like to give it a spin

526
00:22:06,440 --> 00:22:09,539
now it's very important to wear a helmet

527
00:22:09,539 --> 00:22:13,349
oh sorry it's very important to wear a

528
00:22:13,349 --> 00:22:16,109
helmet when you ride a bicycle someone

529
00:22:16,109 --> 00:22:18,299
once told me that your head is about the

530
00:22:18,299 --> 00:22:21,269
toughness of a ripe watermelon so keep

531
00:22:21,269 --> 00:22:24,529
that in mind and be safe it's also

532
00:22:24,529 --> 00:22:26,759
really important to wear shades when

533
00:22:26,759 --> 00:22:29,359
you're bicycling because it looks cool

534
00:22:29,359 --> 00:22:34,559
and oh wow I should have probably should

535
00:22:34,559 --> 00:22:36,209
have toned down the gestures but it's

536
00:22:36,209 --> 00:22:37,829
cool we've got wireless control because

537
00:22:37,829 --> 00:22:39,149
it's Bluetooth so everything's fine

538
00:22:39,149 --> 00:22:41,820
let's give this a spin this is my

539
00:22:41,820 --> 00:22:43,919
everyday ride you guys just riding along

540
00:22:43,919 --> 00:22:47,909
and harpa really cool so now you have it

541
00:22:47,909 --> 00:22:49,739
somehow we managed to go in the negative

542
00:22:49,739 --> 00:22:56,399
distance but you know time travel and

543
00:22:56,399 --> 00:22:58,679
we've got some cool graphs everything

544
00:22:58,679 --> 00:23:08,949
works great so that's that's bicycle jas

545
00:23:08,959 --> 00:23:14,159
thank you now as you saw by my my rudely

546
00:23:14,159 --> 00:23:16,499
advancing the slide too early the point

547
00:23:16,499 --> 00:23:18,389
I'm trying to make about all this is

548
00:23:18,389 --> 00:23:20,609
that the web is changing rather our

549
00:23:20,609 --> 00:23:23,809
expectations for the web are expanding

550
00:23:23,809 --> 00:23:26,940
bicycle j/s is an example of a web app

551
00:23:26,940 --> 00:23:29,039
that can run pretty much like a native

552
00:23:29,039 --> 00:23:30,659
app on your phone it works offline

553
00:23:30,659 --> 00:23:32,519
thanks to a service worker and it

554
00:23:32,519 --> 00:23:34,559
connects natively to your Bluetooth

555
00:23:34,559 --> 00:23:37,619
devices this is previously something

556
00:23:37,619 --> 00:23:39,929
that was a task relegated to native iOS

557
00:23:39,929 --> 00:23:41,700
and Android devices in fact for any of

558
00:23:41,700 --> 00:23:43,469
these gadgets many of which you may own

559
00:23:43,469 --> 00:23:45,269
you have the first thing you do when

560
00:23:45,269 --> 00:23:46,289
you're setting up one of these gadgets

561
00:23:46,289 --> 00:23:48,869
is you download and install and iOS are

562
00:23:48,869 --> 00:23:50,549
an Android app and if you're a PC user

563
00:23:50,549 --> 00:23:52,259
you're just left in the dust because

564
00:23:52,259 --> 00:23:55,139
it's not supported but now like that's

565
00:23:55,139 --> 00:23:56,759
that's the whole point of the web the

566
00:23:56,759 --> 00:23:58,739
web works everywhere for everyone so the

567
00:23:58,739 --> 00:24:01,589
promise of web bluetooth is now these

568
00:24:01,589 --> 00:24:03,809
interactions with real physical devices

569
00:24:03,809 --> 00:24:06,739
can happen straight from a web page

570
00:24:06,739 --> 00:24:10,229
that's really powerful another really

571
00:24:10,229 --> 00:24:11,549
cool thing if you see any node bots

572
00:24:11,549 --> 00:24:13,469
happening around if you have a node bot

573
00:24:13,469 --> 00:24:16,019
with a Bluetooth Low Energy chip you can

574
00:24:16,019 --> 00:24:17,999
actually send commands to your node bot

575
00:24:17,999 --> 00:24:19,440
now straight from the browser

576
00:24:19,440 --> 00:24:21,389
this is amazing for education and for

577
00:24:21,389 --> 00:24:23,429
like creative experimentation the

578
00:24:23,429 --> 00:24:25,379
barrier to entry of talking to these

579
00:24:25,379 --> 00:24:29,789
devices has just been decimated now you

580
00:24:29,789 --> 00:24:31,289
may be wondering a little bit and we're

581
00:24:31,289 --> 00:24:33,570
going to use this to conclude what are

582
00:24:33,570 --> 00:24:34,830
the security implications of this

583
00:24:34,830 --> 00:24:36,509
amazing wireless communication with

584
00:24:36,509 --> 00:24:37,889
devices around us and I'm going to talk

585
00:24:37,889 --> 00:24:40,080
about this a little bit remember how I

586
00:24:40,080 --> 00:24:42,240
said in the beginning that it requires

587
00:24:42,240 --> 00:24:44,220
user interaction before you can connect

588
00:24:44,220 --> 00:24:46,440
to a device that is really important

589
00:24:46,440 --> 00:24:50,340
because many of the devices out there

590
00:24:50,340 --> 00:24:52,769
may not have been designed with an

591
00:24:52,769 --> 00:24:54,539
adversarial attacker in mind they're

592
00:24:54,539 --> 00:24:55,980
like oh it's cool it's just cell phones

593
00:24:55,980 --> 00:24:57,389
or whatever you just have to install an

594
00:24:57,389 --> 00:24:59,700
app but now what a webpage can talk to

595
00:24:59,700 --> 00:25:02,220
my bluetooth device even worse these

596
00:25:02,220 --> 00:25:04,769
potentially insecure or buggy devices

597
00:25:04,769 --> 00:25:06,120
probably will never get their firmware

598
00:25:06,120 --> 00:25:08,639
updated so there was a serious concern

599
00:25:08,639 --> 00:25:11,100
about being able to send like nasty

600
00:25:11,100 --> 00:25:13,350
packets to Bluetooth devices but there's

601
00:25:13,350 --> 00:25:15,149
two defenses against this first the web

602
00:25:15,149 --> 00:25:17,490
Bluetooth API is very high level so the

603
00:25:17,490 --> 00:25:19,909
potential for crafting nasty packets is

604
00:25:19,909 --> 00:25:23,639
is limited but also every interaction

605
00:25:23,639 --> 00:25:26,129
with a Bluetooth device has to start

606
00:25:26,129 --> 00:25:27,629
with an interaction with the user and

607
00:25:27,629 --> 00:25:29,490
you can play a little fishing games but

608
00:25:29,490 --> 00:25:31,679
it's very hard to spoof getting that

609
00:25:31,679 --> 00:25:33,330
like do you want to connect to a device

610
00:25:33,330 --> 00:25:36,330
dialogue now there's a couple little

611
00:25:36,330 --> 00:25:37,409
nitty-gritty things that are interesting

612
00:25:37,409 --> 00:25:40,649
which is that Bluetooth devices around

613
00:25:40,649 --> 00:25:43,259
you can be a finger printing method like

614
00:25:43,259 --> 00:25:44,759
if you have a SmartWatch or a smart TV

615
00:25:44,759 --> 00:25:46,470
around you and you open up your browser

616
00:25:46,470 --> 00:25:48,570
and is just able to scan willy-nilly for

617
00:25:48,570 --> 00:25:51,059
devices that may be used to fingerprint

618
00:25:51,059 --> 00:25:53,070
you but thankfully that's also gated

619
00:25:53,070 --> 00:25:55,830
behind a user interaction finally and

620
00:25:55,830 --> 00:25:57,029
this is just nice to know about whenever

621
00:25:57,029 --> 00:25:59,159
you're dealing with Bluetooth or you

622
00:25:59,159 --> 00:26:00,480
know radio there's a potential of

623
00:26:00,480 --> 00:26:02,399
leaking your existence to the outside

624
00:26:02,399 --> 00:26:04,769
world so I don't know unless you're in a

625
00:26:04,769 --> 00:26:06,960
spy movie but if you open up your phone

626
00:26:06,960 --> 00:26:08,490
and scan for Bluetooth devices you're

627
00:26:08,490 --> 00:26:11,490
making your phone discoverable and what

628
00:26:11,490 --> 00:26:12,929
that means is it's broadcasting hey I'm

629
00:26:12,929 --> 00:26:14,940
here I'm a phone cool or what I'm a

630
00:26:14,940 --> 00:26:17,480
phone I'm talking I'm alive anyway uh

631
00:26:17,480 --> 00:26:20,129
your laptop is going to do that too when

632
00:26:20,129 --> 00:26:22,830
you open up a you know web bluetooth

633
00:26:22,830 --> 00:26:25,529
scan that's worth knowing about if you

634
00:26:25,529 --> 00:26:27,450
want to learn more about web bluetooth i

635
00:26:27,450 --> 00:26:30,139
suggest starting here the web bluetooth

636
00:26:30,139 --> 00:26:32,970
standard drafting process is very open

637
00:26:32,970 --> 00:26:33,420
and they

638
00:26:33,420 --> 00:26:34,890
have this great document if you go to

639
00:26:34,890 --> 00:26:37,290
their github with a browser support

640
00:26:37,290 --> 00:26:38,850
matrix for web bluetooth and there's

641
00:26:38,850 --> 00:26:40,320
also some really cool demos and like

642
00:26:40,320 --> 00:26:42,360
sample algorithms offered by the chrome

643
00:26:42,360 --> 00:26:47,160
team I want to say thank you to Andre

644
00:26:47,160 --> 00:26:49,200
salts for creating cycle j/s an extreme

645
00:26:49,200 --> 00:26:50,700
that was majorly inspiring and

646
00:26:50,700 --> 00:26:52,590
influential for this talk this entire

647
00:26:52,590 --> 00:26:54,720
presentation has been cycle j

648
00:26:54,720 --> 00:26:56,460
application it's composed using these

649
00:26:56,460 --> 00:26:59,250
streams of values and behaviors and i

650
00:26:59,250 --> 00:27:00,870
also want to thank hall door who is

651
00:27:00,870 --> 00:27:02,490
sitting somewhere over here for loaning

652
00:27:02,490 --> 00:27:04,950
us his totally sweet bike it's would

653
00:27:04,950 --> 00:27:06,900
have been possible without it so thank

