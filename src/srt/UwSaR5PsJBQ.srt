1
00:00:10,280 --> 00:00:13,010

my name is Francisco Thomas key I'm part

2
00:00:13,010 --> 00:00:14,629
of a company that I formed with two of

3
00:00:14,629 --> 00:00:17,539
my college friends called 280 north we

4
00:00:17,539 --> 00:00:19,250
have three products kind of out there

5
00:00:19,250 --> 00:00:21,740
today you may or may not have heard of

6
00:00:21,740 --> 00:00:26,150
them on the left is 280 slides it's kind

7
00:00:26,150 --> 00:00:27,970
of like PowerPoint or keynote on the web

8
00:00:27,970 --> 00:00:30,559
on the right is a product we just

9
00:00:30,559 --> 00:00:32,329
announced but we have not launched yet

10
00:00:32,329 --> 00:00:34,850
it's called Atlas it helps you build a

11
00:00:34,850 --> 00:00:37,040
kind of desktop class applications for

12
00:00:37,040 --> 00:00:38,840
the web and in the middle is what I'm

13
00:00:38,840 --> 00:00:40,070
going to be talking about today which is

14
00:00:40,070 --> 00:00:43,969
the cappuccino framework which is a set

15
00:00:43,969 --> 00:00:46,010
of kind of open source libraries that we

16
00:00:46,010 --> 00:00:47,780
released for building these kind of

17
00:00:47,780 --> 00:00:49,399
desktop class applications for the web

18
00:00:49,399 --> 00:00:51,409
and specifically today I'm going to be

19
00:00:51,409 --> 00:00:55,100
talking about Oh point 7 which is the

20
00:00:55,100 --> 00:00:57,260
latest version which we have not shipped

21
00:00:57,260 --> 00:01:00,109
yet but the beta is available and I kind

22
00:01:00,109 --> 00:01:01,129
of want to talk about some of the new

23
00:01:01,129 --> 00:01:03,769
stuff that's coming with that but before

24
00:01:03,769 --> 00:01:05,120
I do that I want to give kind of a

25
00:01:05,120 --> 00:01:06,170
little bit of background on the

26
00:01:06,170 --> 00:01:08,420
framework itself I'm not sure how many

27
00:01:08,420 --> 00:01:09,770
of you are familiar with it so I'll just

28
00:01:09,770 --> 00:01:11,890
kind of explain it a little bit and

29
00:01:11,890 --> 00:01:14,030
usually what I do is kind of give a

30
00:01:14,030 --> 00:01:15,860
primer of you know kind of information

31
00:01:15,860 --> 00:01:18,530
and how we do things in cappuccino but

32
00:01:18,530 --> 00:01:19,969
today I'd like to do it a little bit

33
00:01:19,969 --> 00:01:21,890
differently and kind of give you the

34
00:01:21,890 --> 00:01:24,320
background of what led to creating this

35
00:01:24,320 --> 00:01:27,710
framework and it kind of started back in

36
00:01:27,710 --> 00:01:30,680
2005 oh this is what I'm talking about

37
00:01:30,680 --> 00:01:34,340
specifically objective J sorry I kind of

38
00:01:34,340 --> 00:01:38,930
started back in 2005 I was still in

39
00:01:38,930 --> 00:01:41,149
college then and we kind of started

40
00:01:41,149 --> 00:01:42,619
saying hey you know this web thing is

41
00:01:42,619 --> 00:01:45,049
catching on we should make some apps for

42
00:01:45,049 --> 00:01:47,299
the web and at the time we had not

43
00:01:47,299 --> 00:01:48,890
thought about cappuccino or objective J

44
00:01:48,890 --> 00:01:50,210
or anything or just you know we were

45
00:01:50,210 --> 00:01:51,770
really big on the open web and we're

46
00:01:51,770 --> 00:01:53,750
just going to use javascript etc etc and

47
00:01:53,750 --> 00:01:57,560
Mozilla just kind of announced some new

48
00:01:57,560 --> 00:01:59,060
nifty things that they added to

49
00:01:59,060 --> 00:02:03,729
JavaScript one of them was the for each

50
00:02:03,729 --> 00:02:06,289
thing that you the for each method on

51
00:02:06,289 --> 00:02:09,110
the array class and you know you all

52
00:02:09,110 --> 00:02:11,120
know it for each does and I said oh

53
00:02:11,120 --> 00:02:12,620
that's really cool like javascript is

54
00:02:12,620 --> 00:02:14,030
getting better like I had not touched

55
00:02:14,030 --> 00:02:15,560
JavaScript at this point for very long

56
00:02:15,560 --> 00:02:17,300
time I'd but done mainly objective c and

57
00:02:17,300 --> 00:02:19,400
c++ so I was just coming back to the web

58
00:02:19,400 --> 00:02:20,870
and I was saying oh and it seems like

59
00:02:20,870 --> 00:02:22,760
things are really coming along I'm going

60
00:02:22,760 --> 00:02:23,080
to be

61
00:02:23,080 --> 00:02:25,350
member of the open source society and

62
00:02:25,350 --> 00:02:28,690
implement for each for WebKit so the

63
00:02:28,690 --> 00:02:29,980
very first piece of code I ever

64
00:02:29,980 --> 00:02:31,930
committed to WebKit was all those

65
00:02:31,930 --> 00:02:33,850
Mozilla functions like index of and for

66
00:02:33,850 --> 00:02:35,800
each for the array class and I was like

67
00:02:35,800 --> 00:02:38,500
all right now we got WebKit and Mozilla

68
00:02:38,500 --> 00:02:40,540
I'm sure i ii will put this in within

69
00:02:40,540 --> 00:02:41,920
the year and we'll be all set this will

70
00:02:41,920 --> 00:02:44,590
be great so four years later I still

71
00:02:44,590 --> 00:02:47,530
does not have for each and we're not

72
00:02:47,530 --> 00:02:49,510
talking like complex code here i'm not

73
00:02:49,510 --> 00:02:51,340
saying like oh man IE still doesn't have

74
00:02:51,340 --> 00:02:53,200
jit compilation no we're talking about

75
00:02:53,200 --> 00:02:55,900
for each this is a for loop literally

76
00:02:55,900 --> 00:02:57,700
all you have to do to implement this is

77
00:02:57,700 --> 00:03:00,280
write a for loop and we still don't have

78
00:03:00,280 --> 00:03:03,790
that nie and that kind of set the mantra

79
00:03:03,790 --> 00:03:06,190
for what you know resulted in cappuccino

80
00:03:06,190 --> 00:03:08,530
so that was kind of what Mozilla called

81
00:03:08,530 --> 00:03:11,440
JavaScript 1.6 and then we started

82
00:03:11,440 --> 00:03:13,990
having a lot of this kind of similar

83
00:03:13,990 --> 00:03:16,720
effect another one was equi script for

84
00:03:16,720 --> 00:03:19,390
in all honesty had ECMO script for

85
00:03:19,390 --> 00:03:22,000
existed in 2005 we probably would not

86
00:03:22,000 --> 00:03:26,380
have done any of what we did like I have

87
00:03:26,380 --> 00:03:28,750
some problems with the ACMA script for

88
00:03:28,750 --> 00:03:31,600
specification but there you know purely

89
00:03:31,600 --> 00:03:33,760
little annoyances like I think it's a

90
00:03:33,760 --> 00:03:35,590
perfectly fine language and had it

91
00:03:35,590 --> 00:03:37,120
existed i would not have felt the need

92
00:03:37,120 --> 00:03:38,920
to invent a new language or anything we

93
00:03:38,920 --> 00:03:42,670
would have just made apps with this but

94
00:03:42,670 --> 00:03:44,410
that didn't happen right I mean for like

95
00:03:44,410 --> 00:03:46,570
a solid year we were told ECMO scripts

96
00:03:46,570 --> 00:03:48,580
for its common this this is the real

97
00:03:48,580 --> 00:03:52,060
deal guys and and you know from the they

98
00:03:52,060 --> 00:03:54,370
hosted classes on this Mozilla you know

99
00:03:54,370 --> 00:03:56,140
had the reference implementation and

100
00:03:56,140 --> 00:03:59,410
then all it took was one meeting for

101
00:03:59,410 --> 00:04:00,940
this thing to get abandoned completely

102
00:04:00,940 --> 00:04:03,790
and then now my history is a little

103
00:04:03,790 --> 00:04:04,900
fuzzy on this part because I kind of

104
00:04:04,900 --> 00:04:07,030
stopped paying attention but I believe

105
00:04:07,030 --> 00:04:08,950
this is the one that came after it kind

106
00:04:08,950 --> 00:04:10,870
of went backwards a little and this is I

107
00:04:10,870 --> 00:04:12,370
think this is called harmony it's kind

108
00:04:12,370 --> 00:04:13,930
of a few of the things from four and a

109
00:04:13,930 --> 00:04:15,910
few other things from other places and I

110
00:04:15,910 --> 00:04:17,620
just checked Wikipedia last night and

111
00:04:17,620 --> 00:04:21,580
there's now echo script five and I have

112
00:04:21,580 --> 00:04:25,030
no idea what this does but the thing

113
00:04:25,030 --> 00:04:26,470
that gets to me is like every time they

114
00:04:26,470 --> 00:04:27,850
announce a new one of these ECMO scripts

115
00:04:27,850 --> 00:04:29,860
like people get really excited like who

116
00:04:29,860 --> 00:04:32,110
oh man things are going to change this

117
00:04:32,110 --> 00:04:34,990
time right and and the same image always

118
00:04:34,990 --> 00:04:36,490
comes to my mind when people have

119
00:04:36,490 --> 00:04:39,210
reaction which is this like the

120
00:04:39,210 --> 00:04:41,800
standards bodies were like you know here

121
00:04:41,800 --> 00:04:43,120
comes a new JavaScript guys what

122
00:04:43,120 --> 00:04:45,789
everyone gets excited so I think I speak

123
00:04:45,789 --> 00:04:48,460
for everyone when I say good grief you

124
00:04:48,460 --> 00:04:53,229
know and this is really unfortunate just

125
00:04:53,229 --> 00:04:54,849
because if you kind of look at the

126
00:04:54,849 --> 00:04:56,849
landscape outside the client-side web

127
00:04:56,849 --> 00:05:00,789
things like Ruby Python Java scholars

128
00:05:00,789 --> 00:05:04,990
gala it's really exciting out there it

129
00:05:04,990 --> 00:05:07,030
for a number of reasons one I don't know

130
00:05:07,030 --> 00:05:08,440
if you guys read read it or not but it

131
00:05:08,440 --> 00:05:10,180
seems like someone invents a new

132
00:05:10,180 --> 00:05:12,400
language like every week and you know

133
00:05:12,400 --> 00:05:13,960
maybe the language won't survive but

134
00:05:13,960 --> 00:05:15,669
like there's lots of really great ideas

135
00:05:15,669 --> 00:05:17,440
and they all cross influence each other

136
00:05:17,440 --> 00:05:20,020
and you know scholars is relatively new

137
00:05:20,020 --> 00:05:21,819
and it's it's it's a really great

138
00:05:21,819 --> 00:05:24,159
language built on top of the JVM but

139
00:05:24,159 --> 00:05:26,830
additionally within each language like

140
00:05:26,830 --> 00:05:29,380
so much is being done like you know the

141
00:05:29,380 --> 00:05:31,690
difference between ruby 1.9 and 1.8 is

142
00:05:31,690 --> 00:05:33,729
so great and they're always trying to

143
00:05:33,729 --> 00:05:36,370
add things to python etc and i really

144
00:05:36,370 --> 00:05:39,159
wish we had that on the client-side web

145
00:05:39,159 --> 00:05:42,430
and we don't and it's kind of it's kind

146
00:05:42,430 --> 00:05:44,349
of funny like we call it the open web

147
00:05:44,349 --> 00:05:46,690
but it's really closed to us the

148
00:05:46,690 --> 00:05:49,060
developers like very rarely do the

149
00:05:49,060 --> 00:05:50,889
standards bodies come and ask us the

150
00:05:50,889 --> 00:05:52,330
developers like what do you need it's

151
00:05:52,330 --> 00:05:55,300
very much a we know how to make it you

152
00:05:55,300 --> 00:05:57,280
guys just sit we'll figure it out and

153
00:05:57,280 --> 00:05:59,500
and that's really distressing to me

154
00:05:59,500 --> 00:06:01,630
again coming from these communities or

155
00:06:01,630 --> 00:06:03,039
where i can say hey I want this feature

156
00:06:03,039 --> 00:06:05,380
and a couple weeks later it's in there

157
00:06:05,380 --> 00:06:10,659
and then to not have that so basically

158
00:06:10,659 --> 00:06:12,909
there's there's kind of two ways to

159
00:06:12,909 --> 00:06:15,310
approach this problem you know given

160
00:06:15,310 --> 00:06:17,560
that javascript is not going to change

161
00:06:17,560 --> 00:06:19,270
like we can't go in and change

162
00:06:19,270 --> 00:06:22,300
javascript in every browser the only

163
00:06:22,300 --> 00:06:23,740
option is really to build something on

164
00:06:23,740 --> 00:06:25,750
top of javascript and what most people

165
00:06:25,750 --> 00:06:27,430
do is precisely that right they build

166
00:06:27,430 --> 00:06:28,630
some library that kind of makes

167
00:06:28,630 --> 00:06:32,979
javascript insane we had kind of a

168
00:06:32,979 --> 00:06:35,860
different approach which was to build a

169
00:06:35,860 --> 00:06:38,229
whole language on top of javascript and

170
00:06:38,229 --> 00:06:41,830
we call it objective j and this is kind

171
00:06:41,830 --> 00:06:44,289
of the stuff it does i'll get into it

172
00:06:44,289 --> 00:06:44,900
and a little

173
00:06:44,900 --> 00:06:46,910
detail in a second but I want to tell

174
00:06:46,910 --> 00:06:49,070
you why we decided to make a language as

175
00:06:49,070 --> 00:06:52,790
opposed to a set of libraries like every

176
00:06:52,790 --> 00:06:55,910
single language is equally dynamic like

177
00:06:55,910 --> 00:06:58,580
if you want garbage collection and C++

178
00:06:58,580 --> 00:07:00,470
you can get it you just have to

179
00:07:00,470 --> 00:07:01,850
implement it yourself and you know you

180
00:07:01,850 --> 00:07:03,949
make the garbage collected object class

181
00:07:03,949 --> 00:07:06,050
and as long as every single object in

182
00:07:06,050 --> 00:07:08,840
your application you know subclasses

183
00:07:08,840 --> 00:07:11,449
that your whole program will be garbage

184
00:07:11,449 --> 00:07:13,610
collected right if you want first class

185
00:07:13,610 --> 00:07:16,220
function objects and C++ you can do that

186
00:07:16,220 --> 00:07:18,800
too just make the functor class you want

187
00:07:18,800 --> 00:07:21,020
classes and see fine right the wrapper

188
00:07:21,020 --> 00:07:22,669
functions and this is what people used

189
00:07:22,669 --> 00:07:24,620
to do right back in the sea days before

190
00:07:24,620 --> 00:07:26,810
we had C++ and objective-c in cetera et

191
00:07:26,810 --> 00:07:28,880
cetera people actually wrote rapper

192
00:07:28,880 --> 00:07:31,070
functions around structs to simulate

193
00:07:31,070 --> 00:07:34,340
classes and see but when we did that no

194
00:07:34,340 --> 00:07:37,010
one said ah see see how elegant see is

195
00:07:37,010 --> 00:07:38,599
you can do just about anything and see

196
00:07:38,599 --> 00:07:39,710
no people were like man this really

197
00:07:39,710 --> 00:07:42,169
sucks this should really be a language

198
00:07:42,169 --> 00:07:44,360
feature and that's the way I feel about

199
00:07:44,360 --> 00:07:46,280
a lot of the things that people are

200
00:07:46,280 --> 00:07:48,349
currently doing with libraries today

201
00:07:48,349 --> 00:07:51,199
specifically trying to fix kind of like

202
00:07:51,199 --> 00:07:54,050
the class problems in JavaScript I think

203
00:07:54,050 --> 00:07:55,370
there's a pretty clear difference in

204
00:07:55,370 --> 00:07:57,949
your code between the things that

205
00:07:57,949 --> 00:08:00,260
actually achieve goals for your

206
00:08:00,260 --> 00:08:02,510
application like taking the cosine of a

207
00:08:02,510 --> 00:08:04,639
number right like that that's that's

208
00:08:04,639 --> 00:08:06,380
something that has to do with the direct

209
00:08:06,380 --> 00:08:08,659
goal of your application versus the meta

210
00:08:08,659 --> 00:08:10,310
work of your applications such as

211
00:08:10,310 --> 00:08:13,220
creating objects or classes I think you

212
00:08:13,220 --> 00:08:15,110
know functions and you know libraries

213
00:08:15,110 --> 00:08:17,539
are there to provide you with you know

214
00:08:17,539 --> 00:08:20,539
these kind of tangible functions that do

215
00:08:20,539 --> 00:08:22,099
tangible things like you know draw a

216
00:08:22,099 --> 00:08:24,320
circle or you know calculate the cosine

217
00:08:24,320 --> 00:08:26,720
etc and the language should handle all

218
00:08:26,720 --> 00:08:28,580
the meadow work and the reason is

219
00:08:28,580 --> 00:08:31,490
because it's nice when you have visual

220
00:08:31,490 --> 00:08:33,650
distinction between like I'm creating a

221
00:08:33,650 --> 00:08:35,479
class versus you know again taking the

222
00:08:35,479 --> 00:08:37,430
cosine of something and you know it's

223
00:08:37,430 --> 00:08:39,080
not just for humans tools you know

224
00:08:39,080 --> 00:08:41,240
really benefit from this too right like

225
00:08:41,240 --> 00:08:44,420
if you have actual syntax constructs for

226
00:08:44,420 --> 00:08:46,640
classes and that sort of thing then your

227
00:08:46,640 --> 00:08:48,500
tools can correctly syntax highlight it

228
00:08:48,500 --> 00:08:49,940
and make a little pop-up menus with all

229
00:08:49,940 --> 00:08:52,670
the methods etc the other problem is

230
00:08:52,670 --> 00:08:56,209
that since it's since today all these

231
00:08:56,209 --> 00:08:58,010
kind of meta features are considered you

232
00:08:58,010 --> 00:08:58,240
know

233
00:08:58,240 --> 00:09:01,240
library domain basically every single

234
00:09:01,240 --> 00:09:02,770
JavaScript library that comes out is

235
00:09:02,770 --> 00:09:04,720
doing the same thing they all have their

236
00:09:04,720 --> 00:09:08,110
own kind of unique class structure and

237
00:09:08,110 --> 00:09:09,490
that's really unfortunate because you

238
00:09:09,490 --> 00:09:10,770
know I shouldn't have to commit to

239
00:09:10,770 --> 00:09:13,209
prototypes classes just because i'm

240
00:09:13,209 --> 00:09:14,890
using the prototype library or dojos

241
00:09:14,890 --> 00:09:17,170
classes because i'm using you know the

242
00:09:17,170 --> 00:09:20,020
dojo library so what we really wanted to

243
00:09:20,020 --> 00:09:21,370
do is say hey these are two separate

244
00:09:21,370 --> 00:09:22,570
problems you know there's the problem of

245
00:09:22,570 --> 00:09:24,100
creating applications and then there's a

246
00:09:24,100 --> 00:09:26,680
problem of writing code so let's kind of

247
00:09:26,680 --> 00:09:28,480
separate this out an objective J all

248
00:09:28,480 --> 00:09:30,970
it's meant for is to solve what we

249
00:09:30,970 --> 00:09:32,709
consider to be the holes in JavaScript

250
00:09:32,709 --> 00:09:34,570
which I think a lot of people consider

251
00:09:34,570 --> 00:09:35,950
to be holding JavaScript which is the

252
00:09:35,950 --> 00:09:37,330
reason we have all these ECMO script

253
00:09:37,330 --> 00:09:39,790
specifications in the first place so the

254
00:09:39,790 --> 00:09:41,320
first one I think is a no-brainer right

255
00:09:41,320 --> 00:09:44,350
code importing like I'm I'm still

256
00:09:44,350 --> 00:09:47,490
surprised like how many companies have

257
00:09:47,490 --> 00:09:50,350
dedicated teams that basically manage

258
00:09:50,350 --> 00:09:53,080
dependencies in an application like this

259
00:09:53,080 --> 00:09:54,700
doesn't exist anywhere else like no one

260
00:09:54,700 --> 00:09:57,220
else has like job title of managing dot

261
00:09:57,220 --> 00:10:00,220
h's for like a C++ like application only

262
00:10:00,220 --> 00:10:02,410
in JavaScript where you can't clearly

263
00:10:02,410 --> 00:10:04,420
identify the dependencies and so you

264
00:10:04,420 --> 00:10:05,529
have to put them in the right order and

265
00:10:05,529 --> 00:10:07,089
then can catch them together or whatever

266
00:10:07,089 --> 00:10:09,339
so one of the main things that objective

267
00:10:09,339 --> 00:10:11,380
J does is allow you to import code in

268
00:10:11,380 --> 00:10:12,850
the same way that you would in Java or

269
00:10:12,850 --> 00:10:15,760
C++ its import and then the file name

270
00:10:15,760 --> 00:10:18,820
and the reason this is so much better as

271
00:10:18,820 --> 00:10:20,520
a language feature versus you know

272
00:10:20,520 --> 00:10:27,579
library feature is that so this is a bit

273
00:10:27,579 --> 00:10:29,829
technical but you know if you import

274
00:10:29,829 --> 00:10:31,240
code and then you write code and then

275
00:10:31,240 --> 00:10:33,250
you import code right so in for code

276
00:10:33,250 --> 00:10:36,579
import if it's a function that actually

277
00:10:36,579 --> 00:10:38,140
goes and fetches the file which some

278
00:10:38,140 --> 00:10:39,850
libraries do right I'm not saying we're

279
00:10:39,850 --> 00:10:41,200
the only people that have code importing

280
00:10:41,200 --> 00:10:43,149
but in other libraries it's just a

281
00:10:43,149 --> 00:10:44,980
function you say you know import this

282
00:10:44,980 --> 00:10:47,200
file and then it fetches it and evals it

283
00:10:47,200 --> 00:10:49,079
if you do that you have to block

284
00:10:49,079 --> 00:10:51,910
execution until that's done and now I'm

285
00:10:51,910 --> 00:10:53,410
not saying that the actual fetching of

286
00:10:53,410 --> 00:10:54,670
the file is synchronous it's still a

287
00:10:54,670 --> 00:10:56,920
synchronous but you can't continue to

288
00:10:56,920 --> 00:10:58,570
work until the file is fetched and

289
00:10:58,570 --> 00:11:00,640
executed so the nice thing about having

290
00:11:00,640 --> 00:11:02,440
this field language feature is that we

291
00:11:02,440 --> 00:11:03,940
actually can look through all your code

292
00:11:03,940 --> 00:11:05,589
see all the files you're going to import

293
00:11:05,589 --> 00:11:08,440
and import them ahead of time so you

294
00:11:08,440 --> 00:11:11,020
know what we're maximizing all the Ajax

295
00:11:11,020 --> 00:11:13,930
requests up a heads up front because you

296
00:11:13,930 --> 00:11:15,220
know we are language and we can see

297
00:11:15,220 --> 00:11:17,440
exactly everything you've written the

298
00:11:17,440 --> 00:11:19,570
second thing we add to javascript is

299
00:11:19,570 --> 00:11:22,360
classical inheritance now if you guys

300
00:11:22,360 --> 00:11:24,460
want to you know go to a cigar bar later

301
00:11:24,460 --> 00:11:25,960
and discuss the philosophy of

302
00:11:25,960 --> 00:11:27,940
prototypical versus classical and blah

303
00:11:27,940 --> 00:11:30,430
blah blah that's fine but the reality is

304
00:11:30,430 --> 00:11:32,290
a lot of people are really used to this

305
00:11:32,290 --> 00:11:34,480
form of inheritance at the very least

306
00:11:34,480 --> 00:11:37,780
it's as good as prototipo and UI

307
00:11:37,780 --> 00:11:40,000
libraries really really function well

308
00:11:40,000 --> 00:11:42,640
with classical inheritance and I think

309
00:11:42,640 --> 00:11:44,200
this has proven itself because a lot of

310
00:11:44,200 --> 00:11:46,210
what libraries do today in javascript is

311
00:11:46,210 --> 00:11:48,960
kind of emulate this classical behavior

312
00:11:48,960 --> 00:11:51,040
again the unfortunate thing of it not

313
00:11:51,040 --> 00:11:52,930
being a language feature is that a lot

314
00:11:52,930 --> 00:11:54,130
of these libraries don't get it quite

315
00:11:54,130 --> 00:11:56,110
right they don't have proper support for

316
00:11:56,110 --> 00:11:57,700
calling superclass implementations of

317
00:11:57,700 --> 00:12:00,930
methods etc we get that all just fine

318
00:12:00,930 --> 00:12:03,610
the other feature we add the next two

319
00:12:03,610 --> 00:12:05,500
are kind of related is dynamic dispatch

320
00:12:05,500 --> 00:12:07,960
and method missing if you guys are

321
00:12:07,960 --> 00:12:09,400
coming from the Ruby world you're

322
00:12:09,400 --> 00:12:12,730
probably familiar with this just long

323
00:12:12,730 --> 00:12:14,200
story short you know you can basically

324
00:12:14,200 --> 00:12:16,180
intercept any method call and do

325
00:12:16,180 --> 00:12:17,440
whatever you want with it so you can

326
00:12:17,440 --> 00:12:20,010
read your rerouted and do whatever

327
00:12:20,010 --> 00:12:22,330
intori know you can swap classes at

328
00:12:22,330 --> 00:12:25,840
runtime etc but by far I think the

329
00:12:25,840 --> 00:12:27,370
coolest thing about objective J is that

330
00:12:27,370 --> 00:12:30,700
it is completely open source and to give

331
00:12:30,700 --> 00:12:32,800
you an example of what that means we

332
00:12:32,800 --> 00:12:34,660
open source this and like September or

333
00:12:34,660 --> 00:12:36,850
something and immediately a lot of

334
00:12:36,850 --> 00:12:38,650
people said oh I really wish this had

335
00:12:38,650 --> 00:12:40,300
you know the automatic setter get our

336
00:12:40,300 --> 00:12:42,370
generation that ruby has and a week

337
00:12:42,370 --> 00:12:44,080
later we added that language feature and

338
00:12:44,080 --> 00:12:45,790
you're just not going to get that you

339
00:12:45,790 --> 00:12:48,400
know if the language itself is an open

340
00:12:48,400 --> 00:12:50,710
source so the other cool thing is that

341
00:12:50,710 --> 00:12:52,810
you can take objective J and you know if

342
00:12:52,810 --> 00:12:54,400
you disagree with some of the decisions

343
00:12:54,400 --> 00:12:56,230
we made you can change it you know you

344
00:12:56,230 --> 00:12:58,270
can create a whole new syntax you can

345
00:12:58,270 --> 00:13:00,400
you know fix a bug that we deemed not

346
00:13:00,400 --> 00:13:02,940
important enough for us to fix etc

347
00:13:02,940 --> 00:13:06,240
another really interesting thing is that

348
00:13:06,240 --> 00:13:08,410
the underlying run time since it is

349
00:13:08,410 --> 00:13:09,640
completely written in JavaScript

350
00:13:09,640 --> 00:13:11,380
actually opens the doors for writing a

351
00:13:11,380 --> 00:13:13,330
lot of different languages not just

352
00:13:13,330 --> 00:13:15,280
objective J I know if you guys are

353
00:13:15,280 --> 00:13:17,710
familiar with Mac Ruby but it's

354
00:13:17,710 --> 00:13:19,660
basically a ruby implementation on the

355
00:13:19,660 --> 00:13:21,310
Mac that's written on top of the

356
00:13:21,310 --> 00:13:22,760
objective-c runtime

357
00:13:22,760 --> 00:13:23,870
and I know that there's someone trying

358
00:13:23,870 --> 00:13:26,240
to do the same thing with an objective

359
00:13:26,240 --> 00:13:28,040
JRuby or something but since the

360
00:13:28,040 --> 00:13:29,390
objective J runtime is exactly the same

361
00:13:29,390 --> 00:13:30,890
as the objective-c runtime they're

362
00:13:30,890 --> 00:13:32,180
trying to do the same thing kind of

363
00:13:32,180 --> 00:13:33,710
bringing Ruby to the client side on top

364
00:13:33,710 --> 00:13:35,510
of hour run time so I think that's

365
00:13:35,510 --> 00:13:37,040
really exciting the fact that you know

366
00:13:37,040 --> 00:13:39,910
basically it's it's a set of features

367
00:13:39,910 --> 00:13:42,320
kind of small talk like features that

368
00:13:42,320 --> 00:13:44,240
you can use for any language we happen

369
00:13:44,240 --> 00:13:45,560
to build the first one which was

370
00:13:45,560 --> 00:13:47,240
objective J but you guys can go and kind

371
00:13:47,240 --> 00:13:49,820
of start going nuts but one of the

372
00:13:49,820 --> 00:13:51,050
really important things about objective

373
00:13:51,050 --> 00:13:54,680
J is that it's what is called a strict

374
00:13:54,680 --> 00:13:56,990
superset of JavaScript and that means

375
00:13:56,990 --> 00:13:59,930
that every valid line of JavaScript is a

376
00:13:59,930 --> 00:14:01,850
valid line of objective J so all

377
00:14:01,850 --> 00:14:03,620
existing JavaScript libraries are going

378
00:14:03,620 --> 00:14:06,380
to be play nice with objective J so I'm

379
00:14:06,380 --> 00:14:07,640
not talking about cappuccino just

380
00:14:07,640 --> 00:14:09,410
objective J if you still want to use

381
00:14:09,410 --> 00:14:10,970
jQuery if you still want to use

382
00:14:10,970 --> 00:14:12,770
prototype whatever you can use it with

383
00:14:12,770 --> 00:14:14,840
objective J that's fine so this is just

384
00:14:14,840 --> 00:14:17,690
kind of a this is our take on JavaScript

385
00:14:17,690 --> 00:14:19,310
to putting it out there if you want to

386
00:14:19,310 --> 00:14:21,470
start making libraries that have kind of

387
00:14:21,470 --> 00:14:23,000
this you know classical inheritance feel

388
00:14:23,000 --> 00:14:25,030
and have these features you can do that

389
00:14:25,030 --> 00:14:27,320
so the other side of the coin of course

390
00:14:27,320 --> 00:14:29,950
is the cappuccino framework itself and

391
00:14:29,950 --> 00:14:32,660
I'm going to kind of rewind again to

392
00:14:32,660 --> 00:14:35,350
when we started working on this stuff I

393
00:14:35,350 --> 00:14:37,850
mean it's is still true today but what I

394
00:14:37,850 --> 00:14:39,350
like to say is that you know the web is

395
00:14:39,350 --> 00:14:41,630
the spectrum of different kinds of

396
00:14:41,630 --> 00:14:44,180
applications on the left-hand side you

397
00:14:44,180 --> 00:14:46,040
have you know completely static web

398
00:14:46,040 --> 00:14:48,620
pages like New York Times we're getting

399
00:14:48,620 --> 00:14:50,330
kind of less and less of these but you

400
00:14:50,330 --> 00:14:52,250
know it's very much the original vision

401
00:14:52,250 --> 00:14:53,420
of the web a bunch of documents

402
00:14:53,420 --> 00:14:55,730
connected by hyperlinks in the middle

403
00:14:55,730 --> 00:14:57,440
you have things like Amazon which is

404
00:14:57,440 --> 00:14:59,270
again a bunch of documents connected by

405
00:14:59,270 --> 00:15:02,180
hyperlinks but no one can deny that this

406
00:15:02,180 --> 00:15:03,980
is actually an application whereas New

407
00:15:03,980 --> 00:15:06,650
York Times really isn't you know you

408
00:15:06,650 --> 00:15:08,510
haven't you can buy stuff etc I don't

409
00:15:08,510 --> 00:15:11,300
need to convince you guys then you have

410
00:15:11,300 --> 00:15:12,800
things like Facebook which really blur

411
00:15:12,800 --> 00:15:14,190
the line right it is it

412
00:15:14,190 --> 00:15:16,050
traditional page well yeah everyone has

413
00:15:16,050 --> 00:15:18,210
their own page but each page can have

414
00:15:18,210 --> 00:15:19,950
multiple applications in it and be

415
00:15:19,950 --> 00:15:22,170
incredibly dynamic so you know facebook

416
00:15:22,170 --> 00:15:24,060
is a really really unique thing that you

417
00:15:24,060 --> 00:15:27,000
know only the web was able to kind of

418
00:15:27,000 --> 00:15:28,710
enable and then at the very right hand

419
00:15:28,710 --> 00:15:30,390
side we have things like Google Maps and

420
00:15:30,390 --> 00:15:32,460
at the time that we were writing all

421
00:15:32,460 --> 00:15:34,290
these frameworks you know I think google

422
00:15:34,290 --> 00:15:36,750
maps may have been like the only one but

423
00:15:36,750 --> 00:15:38,100
basically these are things that are

424
00:15:38,100 --> 00:15:40,410
competing head on with what is

425
00:15:40,410 --> 00:15:42,920
traditionally in the desktop space and

426
00:15:42,920 --> 00:15:45,240
when we kind of started writing this

427
00:15:45,240 --> 00:15:47,970
stuff most of the library's kind of

428
00:15:47,970 --> 00:15:49,740
focused on that middle section like you

429
00:15:49,740 --> 00:15:51,690
know adding dynamic behaviors to

430
00:15:51,690 --> 00:15:55,070
websites versus creating a full-blown

431
00:15:55,070 --> 00:15:58,560
application I think that that's still

432
00:15:58,560 --> 00:16:01,290
mainly true today I think there are

433
00:16:01,290 --> 00:16:03,840
definitely a lot more libraries that do

434
00:16:03,840 --> 00:16:04,980
what we're trying to do kind of make

435
00:16:04,980 --> 00:16:07,380
full blown applications but I don't

436
00:16:07,380 --> 00:16:08,970
think there's any library that kind of

437
00:16:08,970 --> 00:16:10,740
handles the whole spectrum I don't think

438
00:16:10,740 --> 00:16:13,110
that any library would ever be able to

439
00:16:13,110 --> 00:16:16,260
do that well so what we decided to do

440
00:16:16,260 --> 00:16:17,910
was to make a library that just deals

441
00:16:17,910 --> 00:16:18,960
with building these kinds of

442
00:16:18,960 --> 00:16:21,300
applications and just on this right-hand

443
00:16:21,300 --> 00:16:24,180
side again some examples are you know

444
00:16:24,180 --> 00:16:28,310
our 20 slides meebo and Google Maps and

445
00:16:28,310 --> 00:16:31,350
I think if you look at kind of the big

446
00:16:31,350 --> 00:16:33,690
examples of these websites it's clear

447
00:16:33,690 --> 00:16:35,520
that we're still not there yet framework

448
00:16:35,520 --> 00:16:37,950
wise like if you look at me Bo I mean

449
00:16:37,950 --> 00:16:39,450
what everyone's doing is kind of rolling

450
00:16:39,450 --> 00:16:40,980
their own framework if you look at me Bo

451
00:16:40,980 --> 00:16:42,750
a large part of their company is

452
00:16:42,750 --> 00:16:45,270
dedicated to managing their UI framework

453
00:16:45,270 --> 00:16:47,340
which you know a company that makes a

454
00:16:47,340 --> 00:16:49,470
chat client really shouldn't be focusing

455
00:16:49,470 --> 00:16:51,330
on and that would definitely not be the

456
00:16:51,330 --> 00:16:52,770
case in the desktop world right they

457
00:16:52,770 --> 00:16:54,600
wouldn't have some guy that's figuring

458
00:16:54,600 --> 00:16:57,510
out how to draw windows obviously Google

459
00:16:57,510 --> 00:17:00,089
can just buy 50 thousand companies and

460
00:17:00,089 --> 00:17:02,970
we had just but but what I mean to say

461
00:17:02,970 --> 00:17:04,620
about that they are also not using a

462
00:17:04,620 --> 00:17:06,089
public framework that you are doing it

463
00:17:06,089 --> 00:17:08,250
on their own zoho is doing the same

464
00:17:08,250 --> 00:17:10,110
thing obviously we did the same thing in

465
00:17:10,110 --> 00:17:11,699
open-source stars so I think it's pretty

466
00:17:11,699 --> 00:17:13,079
clear that they're still pretty big void

467
00:17:13,079 --> 00:17:17,970
in this space and again I wanted to

468
00:17:17,970 --> 00:17:21,030
focus on the fact that cappuccino is

469
00:17:21,030 --> 00:17:22,589
designed solely for this and usually

470
00:17:22,589 --> 00:17:24,060
this is where people come in and say no

471
00:17:24,060 --> 00:17:25,890
the web is totally different than the

472
00:17:25,890 --> 00:17:27,150
desktop you don't get it

473
00:17:27,150 --> 00:17:28,950
everything's like one of these middle

474
00:17:28,950 --> 00:17:31,590
apps and and I do agree that it's it's a

475
00:17:31,590 --> 00:17:33,840
lot fuzzier than you know all the way on

476
00:17:33,840 --> 00:17:35,340
the right or on the are all the way on

477
00:17:35,340 --> 00:17:37,110
the left but I think that there are some

478
00:17:37,110 --> 00:17:40,200
pretty really clear-cut cases and a good

479
00:17:40,200 --> 00:17:44,550
example of that is lacoste calm so

480
00:17:44,550 --> 00:17:48,270
lacoste you know makes clothing and this

481
00:17:48,270 --> 00:17:51,000
is their online store this really should

482
00:17:51,000 --> 00:17:53,010
be a web page but instead it's this you

483
00:17:53,010 --> 00:17:55,020
know humongous flash monster which takes

484
00:17:55,020 --> 00:17:58,080
approximately 50 years to load and you

485
00:17:58,080 --> 00:18:00,060
know they sell like three total products

486
00:18:00,060 --> 00:18:01,970
and yet they somehow find a way to have

487
00:18:01,970 --> 00:18:04,710
50,000 hierarchical flash menus that you

488
00:18:04,710 --> 00:18:06,240
have to navigate through and then when

489
00:18:06,240 --> 00:18:07,710
you finally find that pair of pants that

490
00:18:07,710 --> 00:18:09,750
you want you can't even like email the

491
00:18:09,750 --> 00:18:11,100
link to anyone because again it's a

492
00:18:11,100 --> 00:18:13,230
flash app so I think this is a perfect

493
00:18:13,230 --> 00:18:14,670
example of something that shouldn't use

494
00:18:14,670 --> 00:18:16,920
cappuccino shouldn't use flash should

495
00:18:16,920 --> 00:18:20,070
use traditional JavaScript and HTML like

496
00:18:20,070 --> 00:18:23,780
Amazon but the opposite case exists to

497
00:18:23,780 --> 00:18:26,820
mapquest is very very traditional web

498
00:18:26,820 --> 00:18:28,530
kind of paigey and it really shouldn't

499
00:18:28,530 --> 00:18:30,450
be like you know you type in the address

500
00:18:30,450 --> 00:18:32,130
and it takes you to a new page you get

501
00:18:32,130 --> 00:18:33,840
the map if you want to get a different

502
00:18:33,840 --> 00:18:34,890
map you have to type in the address

503
00:18:34,890 --> 00:18:36,900
again refresh again and it all feels

504
00:18:36,900 --> 00:18:38,100
very slow it feels very

505
00:18:38,100 --> 00:18:39,990
counterproductive as opposed to google

506
00:18:39,990 --> 00:18:41,670
maps of course wait you know you just

507
00:18:41,670 --> 00:18:42,540
type it in and you get the results

508
00:18:42,540 --> 00:18:46,200
immediately so again I think there are

509
00:18:46,200 --> 00:18:48,240
some cases where it's very clear this is

510
00:18:48,240 --> 00:18:50,520
kind of like a desktop app just happens

511
00:18:50,520 --> 00:18:54,300
to be in the browser so what we decided

512
00:18:54,300 --> 00:18:56,550
to do was you know we know that making

513
00:18:56,550 --> 00:18:59,970
api's is hard so we just said let's just

514
00:18:59,970 --> 00:19:02,700
steal the best api that exists and of

515
00:19:02,700 --> 00:19:04,770
course we were mac programmers and we

516
00:19:04,770 --> 00:19:06,510
feel very strongly that the cocoa api is

517
00:19:06,510 --> 00:19:09,120
a really really good one I think it's

518
00:19:09,120 --> 00:19:11,280
hard to deny that the stuff on max looks

519
00:19:11,280 --> 00:19:14,490
pretty darn good and that's not despite

520
00:19:14,490 --> 00:19:15,990
the API it's because of that and

521
00:19:15,990 --> 00:19:19,800
similarly that same API is you know

522
00:19:19,800 --> 00:19:21,420
exists for the iPhone and the stuff on

523
00:19:21,420 --> 00:19:22,890
the iphone looks pretty darn good too

524
00:19:22,890 --> 00:19:26,700
and in our minds this has kind of helped

525
00:19:26,700 --> 00:19:28,980
Coco prove its chops right you had

526
00:19:28,980 --> 00:19:31,320
something that for 20 years was solely

527
00:19:31,320 --> 00:19:33,510
used on the desktop and then they turned

528
00:19:33,510 --> 00:19:35,790
around and like kind of blew the doors

529
00:19:35,790 --> 00:19:37,590
off with the phone so I think that kind

530
00:19:37,590 --> 00:19:39,030
of demonstrates that this is a pretty

531
00:19:39,030 --> 00:19:40,169
powerful API

532
00:19:40,169 --> 00:19:42,600
I that can do a number of things so what

533
00:19:42,600 --> 00:19:44,549
we did was it's actually an open

534
00:19:44,549 --> 00:19:45,960
standard it's called open step so we

535
00:19:45,960 --> 00:19:48,419
took that and we threw it on the web so

536
00:19:48,419 --> 00:19:50,159
now the same way that you make apps for

537
00:19:50,159 --> 00:19:53,399
the mac is and the iphone is the way

538
00:19:53,399 --> 00:19:57,419
that you can make apps on the web so i'm

539
00:19:57,419 --> 00:19:58,919
going to give you a quick example this

540
00:19:58,919 --> 00:20:09,779
is our appt 280 slides so again the idea

541
00:20:09,779 --> 00:20:12,090
is to create this kind of desktop feel

542
00:20:12,090 --> 00:20:14,669
so you know we have kind of built-in

543
00:20:14,669 --> 00:20:23,399
search you know you can take in media

544
00:20:23,399 --> 00:20:25,529
and we have like quick look and stuff

545
00:20:25,529 --> 00:20:28,019
like that that you have like on your Mac

546
00:20:28,019 --> 00:20:30,330
and you can do just about anything you

547
00:20:30,330 --> 00:20:32,159
want and this works in IE and you know

548
00:20:32,159 --> 00:20:34,200
mozilla and everything and and this is

549
00:20:34,200 --> 00:20:35,759
all using exactly the same technology as

550
00:20:35,759 --> 00:20:37,139
you would on mac OS 10 it's called core

551
00:20:37,139 --> 00:20:38,580
graphics and you know you don't need to

552
00:20:38,580 --> 00:20:39,659
worry about whether you have CSS

553
00:20:39,659 --> 00:20:42,239
transforms or not it's just going to

554
00:20:42,239 --> 00:20:43,889
work and you can use copy paste as you

555
00:20:43,889 --> 00:20:45,899
can see and you know all from the

556
00:20:45,899 --> 00:20:48,499
keyboard and also have undo and redo

557
00:20:48,499 --> 00:20:56,639
that sort of thing and we have movies on

558
00:20:56,639 --> 00:20:59,820
JS comp one which goes against the

559
00:20:59,820 --> 00:21:03,299
suggested J has come wireless there we

560
00:21:03,299 --> 00:21:08,009
go joist in quick look these two and so

561
00:21:08,009 --> 00:21:09,929
load up the YouTube movie very slowly

562
00:21:09,929 --> 00:21:13,289
sorry but you guys can't believe me that

563
00:21:13,289 --> 00:21:16,049
that's loading oh there it is there you

564
00:21:16,049 --> 00:21:20,460
go don't have to believe me so again

565
00:21:20,460 --> 00:21:21,570
everything's supposed to be very drag

566
00:21:21,570 --> 00:21:24,179
and drop and it works exactly like the

567
00:21:24,179 --> 00:21:26,220
desktop you know copy paste should work

568
00:21:26,220 --> 00:21:29,399
on everything not just text etc and you

569
00:21:29,399 --> 00:21:30,929
know this thing is auto saving

570
00:21:30,929 --> 00:21:32,879
constantly based on my undo stack so if

571
00:21:32,879 --> 00:21:35,549
I have undos that means that my document

572
00:21:35,549 --> 00:21:37,080
is edited so it knows to automatically

573
00:21:37,080 --> 00:21:38,759
autosave and that's kind of the thing

574
00:21:38,759 --> 00:21:40,499
that this framework does for you it kind

575
00:21:40,499 --> 00:21:42,389
of handles all that sort of behavior

576
00:21:42,389 --> 00:21:45,080
that you get for free on the desktop

577
00:21:45,080 --> 00:21:50,539
let's go back here

578
00:21:50,549 --> 00:21:55,440
yeah so yes that was building cappuccino

579
00:21:55,440 --> 00:21:57,759
so I'm going to talk about the things

580
00:21:57,759 --> 00:22:02,350
we're adding 40.7 so one of the things

581
00:22:02,350 --> 00:22:04,120
that people kind of have complained

582
00:22:04,120 --> 00:22:07,529
about with cappuccino and rightfully so

583
00:22:07,529 --> 00:22:11,529
is debugging now debugging JavaScript

584
00:22:11,529 --> 00:22:13,750
pretty much sucks but it's a little bit

585
00:22:13,750 --> 00:22:18,610
worse in objective J currently and so

586
00:22:18,610 --> 00:22:21,789
that's pretty bad and a lot of people

587
00:22:21,789 --> 00:22:22,870
thought that this was because we were

588
00:22:22,870 --> 00:22:24,159
like abstract away JavaScript or

589
00:22:24,159 --> 00:22:26,350
something but that's not the case even

590
00:22:26,350 --> 00:22:29,169
to our surprise it just happens to be

591
00:22:29,169 --> 00:22:31,870
that we at 280 north are particularly

592
00:22:31,870 --> 00:22:35,200
good at exposing latent bugs in existing

593
00:22:35,200 --> 00:22:38,379
debuggers so the code we made like if

594
00:22:38,379 --> 00:22:39,789
you did in normal JavaScript it would

595
00:22:39,789 --> 00:22:41,259
have the same effect so let me give you

596
00:22:41,259 --> 00:22:44,379
some examples the first one is if actual

597
00:22:44,379 --> 00:22:45,399
I'm going to focus entirely on the

598
00:22:45,399 --> 00:22:48,009
profilers except where we didn't most of

599
00:22:48,009 --> 00:22:52,299
work so if you profile objective J code

600
00:22:52,299 --> 00:22:53,230
you get something that looks like this

601
00:22:53,230 --> 00:22:55,419
I'm sure all of you have run into this

602
00:22:55,419 --> 00:22:57,250
at some point or another basically all

603
00:22:57,250 --> 00:22:58,750
the interesting functions are question

604
00:22:58,750 --> 00:23:01,360
marks like I don't know this is and that

605
00:23:01,360 --> 00:23:02,740
makes it really really hard to profile

606
00:23:02,740 --> 00:23:05,350
because we have you know thousands of

607
00:23:05,350 --> 00:23:07,750
methods and one of them is really slow I

608
00:23:07,750 --> 00:23:10,149
knew that already so that's that's

609
00:23:10,149 --> 00:23:12,940
definitely a problem this is Firebug by

610
00:23:12,940 --> 00:23:14,350
the way and a lot of people don't know

611
00:23:14,350 --> 00:23:17,200
this but Safari also has a profiler and

612
00:23:17,200 --> 00:23:20,169
we also don't work really well there I

613
00:23:20,169 --> 00:23:22,000
don't know it can anyone tell what's

614
00:23:22,000 --> 00:23:26,309
wrong I'll give you a hint I should be

615
00:23:26,309 --> 00:23:28,720
you know making objective J message send

616
00:23:28,720 --> 00:23:30,399
faster because it's taking up five

617
00:23:30,399 --> 00:23:32,139
hundred percent of the profile so

618
00:23:32,139 --> 00:23:35,080
clearly the all this was pretty useless

619
00:23:35,080 --> 00:23:38,259
for our needs but again these are all

620
00:23:38,259 --> 00:23:40,720
clearly bugs that would happen in any

621
00:23:40,720 --> 00:23:43,269
library there's there's no magic that we

622
00:23:43,269 --> 00:23:44,529
put in there that makes the profiles

623
00:23:44,529 --> 00:23:49,090
show up is five hundred percent so the

624
00:23:49,090 --> 00:23:51,940
kind of cool thing about our team is you

625
00:23:51,940 --> 00:23:53,110
know we know the WebKit people pretty

626
00:23:53,110 --> 00:23:54,580
well and you know this used to be our

627
00:23:54,580 --> 00:23:56,590
day job we all used to work at Apple so

628
00:23:56,590 --> 00:23:58,179
we got together with them in kind of the

629
00:23:58,179 --> 00:23:59,649
last two weeks we said let's really

630
00:23:59,649 --> 00:24:01,240
tackle this problem let's make you

631
00:24:01,240 --> 00:24:04,930
no debugging objective J in at least in

632
00:24:04,930 --> 00:24:06,730
WebKit for starters just an awesome

633
00:24:06,730 --> 00:24:09,070
experience and so we did a lot of work

634
00:24:09,070 --> 00:24:11,320
on the Safari inspector and a lot of

635
00:24:11,320 --> 00:24:12,910
this work you're going to get whether

636
00:24:12,910 --> 00:24:14,440
you use objective J or JavaScript we

637
00:24:14,440 --> 00:24:18,760
added some really cool things so the

638
00:24:18,760 --> 00:24:20,620
first one that we tackled was this

639
00:24:20,620 --> 00:24:22,900
problem with anonymous function so the

640
00:24:22,900 --> 00:24:24,430
way you get this kind of anonymous

641
00:24:24,430 --> 00:24:25,240
function I don't know what you're

642
00:24:25,240 --> 00:24:26,740
talking about thing is when you create

643
00:24:26,740 --> 00:24:29,620
these functions without names right the

644
00:24:29,620 --> 00:24:31,240
profiler doesn't know what to call that

645
00:24:31,240 --> 00:24:33,640
so it just says ? or anonymous function

646
00:24:33,640 --> 00:24:35,620
now there is a traditional technique to

647
00:24:35,620 --> 00:24:37,600
kind of circumvent this problem which is

648
00:24:37,600 --> 00:24:39,580
oh just give it a name and that works so

649
00:24:39,580 --> 00:24:42,850
in this case that would work but there

650
00:24:42,850 --> 00:24:44,380
are other problems that are related to

651
00:24:44,380 --> 00:24:46,120
that for example this is kind of if you

652
00:24:46,120 --> 00:24:48,600
do a traditional JavaScript classy thing

653
00:24:48,600 --> 00:24:51,400
if you run this through Firebug you're

654
00:24:51,400 --> 00:24:52,630
going to get this which is not very

655
00:24:52,630 --> 00:24:54,700
useful I mean okay yes one of them is

656
00:24:54,700 --> 00:24:56,560
slow I don't know which one so there's a

657
00:24:56,560 --> 00:24:58,870
general problem with how functions are

658
00:24:58,870 --> 00:25:01,600
named in profilers and this comes from

659
00:25:01,600 --> 00:25:03,370
the fact that you know functions don't

660
00:25:03,370 --> 00:25:05,560
really have names the function exists in

661
00:25:05,560 --> 00:25:07,480
the ether and you have a variable with a

662
00:25:07,480 --> 00:25:10,420
name that points to that function so a

663
00:25:10,420 --> 00:25:12,340
lot of the profiler code is trying to do

664
00:25:12,340 --> 00:25:14,440
tricky things to you know try to figure

665
00:25:14,440 --> 00:25:16,920
out what name you want to see

666
00:25:16,920 --> 00:25:18,730
unfortunately you can never be tricky

667
00:25:18,730 --> 00:25:20,080
enough because you know JavaScript's

668
00:25:20,080 --> 00:25:22,060
pretty dynamic and you can always trick

669
00:25:22,060 --> 00:25:24,340
the profiler and so one really good

670
00:25:24,340 --> 00:25:26,500
example of that is this if you have a

671
00:25:26,500 --> 00:25:28,720
function that generates functions you're

672
00:25:28,720 --> 00:25:30,310
never going to be able to name all those

673
00:25:30,310 --> 00:25:34,260
generated functions very well right so

674
00:25:34,260 --> 00:25:36,250
that's how it's going to show up in the

675
00:25:36,250 --> 00:25:38,430
Safari profiler right useless as we said

676
00:25:38,430 --> 00:25:41,260
and even if I do this that's not going

677
00:25:41,260 --> 00:25:42,490
to help because now they're all going to

678
00:25:42,490 --> 00:25:44,380
be called iterating so unless you do

679
00:25:44,380 --> 00:25:46,750
some sort of ridiculous eval creation of

680
00:25:46,750 --> 00:25:48,400
the function you're never going to have

681
00:25:48,400 --> 00:25:49,750
a very good name for it and obviously

682
00:25:49,750 --> 00:25:51,490
you don't want a huge performance hit

683
00:25:51,490 --> 00:25:53,680
just to be able to name a function so we

684
00:25:53,680 --> 00:25:55,030
talked to the WebKit people a lot about

685
00:25:55,030 --> 00:25:56,140
this and we came up with a pretty good

686
00:25:56,140 --> 00:25:58,780
solution we added a new property to the

687
00:25:58,780 --> 00:26:01,450
function object it's called display name

688
00:26:01,450 --> 00:26:04,270
and now you can manually set it and you

689
00:26:04,270 --> 00:26:06,970
know it'll use that first before any of

690
00:26:06,970 --> 00:26:09,520
its little tricks so for example what we

691
00:26:09,520 --> 00:26:12,310
do here is you create a function and

692
00:26:12,310 --> 00:26:14,020
then you said its display name

693
00:26:14,020 --> 00:26:17,080
if you look in Safari very nice i see

694
00:26:17,080 --> 00:26:18,760
the function with a thousand iterations

695
00:26:18,760 --> 00:26:21,640
is the slowest one that makes sense and

696
00:26:21,640 --> 00:26:23,140
the really cool thing about that is that

697
00:26:23,140 --> 00:26:26,500
it makes objective j methods first-class

698
00:26:26,500 --> 00:26:28,480
citizens in safari so when you use

699
00:26:28,480 --> 00:26:29,950
objective j you're going to get you know

700
00:26:29,950 --> 00:26:31,330
a stack trace that looks exactly like

701
00:26:31,330 --> 00:26:33,790
objective-c on mac OS 10 so we think

702
00:26:33,790 --> 00:26:37,420
that's really cool additionally we fixed

703
00:26:37,420 --> 00:26:39,310
a bunch of these bugs that resulted in

704
00:26:39,310 --> 00:26:40,840
like the ridiculous amount of

705
00:26:40,840 --> 00:26:44,080
percentages and so forth showing up so i

706
00:26:44,080 --> 00:26:46,480
think the Safari profiling experience is

707
00:26:46,480 --> 00:26:48,340
really the best right now and i'm going

708
00:26:48,340 --> 00:26:51,400
to show you why what makes Safari

709
00:26:51,400 --> 00:26:53,320
profiling so cool is that you have a

710
00:26:53,320 --> 00:26:55,720
number of ways to look at your code so

711
00:26:55,720 --> 00:26:58,330
right here we we've been profiling the

712
00:26:58,330 --> 00:27:00,910
application did finish launching method

713
00:27:00,910 --> 00:27:03,460
of our application and in this top-down

714
00:27:03,460 --> 00:27:05,620
view you kind of see everything that

715
00:27:05,620 --> 00:27:07,480
happens in your program so obviously

716
00:27:07,480 --> 00:27:09,580
since we profiled application did finish

717
00:27:09,580 --> 00:27:11,560
launching you know a hundred percent of

718
00:27:11,560 --> 00:27:12,940
the profile took place in that method

719
00:27:12,940 --> 00:27:15,310
right so if we now uncle apps that tree

720
00:27:15,310 --> 00:27:17,200
we see all the methods that got called

721
00:27:17,200 --> 00:27:19,390
inside of it and how they got divvied up

722
00:27:19,390 --> 00:27:21,340
so you can kind of start you know

723
00:27:21,340 --> 00:27:23,890
following the trace of your program so

724
00:27:23,890 --> 00:27:25,480
this is kind of cool but it's actually

725
00:27:25,480 --> 00:27:27,310
not as useful as what Firebug currently

726
00:27:27,310 --> 00:27:30,700
has which is kind of the flat list so in

727
00:27:30,700 --> 00:27:32,350
Safari that's called the bottom-up

728
00:27:32,350 --> 00:27:38,950
profile and if you don't uncollectible

729
00:27:38,950 --> 00:27:41,350
you have a flat list with you know the

730
00:27:41,350 --> 00:27:42,790
slowest stuff on top you can sort it

731
00:27:42,790 --> 00:27:47,230
obviously so the problem with the flat

732
00:27:47,230 --> 00:27:49,540
list though is that you're missing a lot

733
00:27:49,540 --> 00:27:53,350
of subtle information for example if we

734
00:27:53,350 --> 00:27:55,960
said Oh set frame size is pretty slow

735
00:27:55,960 --> 00:27:58,510
you know it's number two I might spend a

736
00:27:58,510 --> 00:28:00,610
lot of time trying to optimize set frame

737
00:28:00,610 --> 00:28:02,980
size and it might Rack my brain over it

738
00:28:02,980 --> 00:28:04,480
for a long time and say man this is just

739
00:28:04,480 --> 00:28:06,250
a for loop there's no way I can make

740
00:28:06,250 --> 00:28:09,130
this any faster which is where this

741
00:28:09,130 --> 00:28:11,260
little tree comes in because the tree

742
00:28:11,260 --> 00:28:13,720
shows you a reverse or inverse back

743
00:28:13,720 --> 00:28:15,940
trace of your code so basically what

744
00:28:15,940 --> 00:28:18,520
this says is set frame size got called

745
00:28:18,520 --> 00:28:20,770
from these four methods now you'll see

746
00:28:20,770 --> 00:28:22,270
something really interesting here which

747
00:28:22,270 --> 00:28:25,840
is set frame size was only slow when it

748
00:28:25,840 --> 00:28:27,040
was called from size

749
00:28:27,040 --> 00:28:29,350
to fit it's actually really really fast

750
00:28:29,350 --> 00:28:32,020
in all the other cases so it's not

751
00:28:32,020 --> 00:28:35,050
really set frame size that slow but some

752
00:28:35,050 --> 00:28:38,320
sort of dynamic between size to fit and

753
00:28:38,320 --> 00:28:42,700
set frame size so you know perhaps size

754
00:28:42,700 --> 00:28:45,640
to fit blows a cache that set frame size

755
00:28:45,640 --> 00:28:48,130
relies on and you wouldn't really know

756
00:28:48,130 --> 00:28:53,530
that okay you wouldn't really know that

757
00:28:53,530 --> 00:28:56,410
unless you know you had this kind of

758
00:28:56,410 --> 00:28:58,120
view and you can go all the way down so

759
00:28:58,120 --> 00:29:01,630
this is really cool I think so again

760
00:29:01,630 --> 00:29:03,820
Safari profiling is working really well

761
00:29:03,820 --> 00:29:07,120
oh this is something else that's cool

762
00:29:07,120 --> 00:29:09,190
you we have these buttons called focus

763
00:29:09,190 --> 00:29:10,840
and exclude so if you want to get rid of

764
00:29:10,840 --> 00:29:12,580
like every instance of a function in

765
00:29:12,580 --> 00:29:14,020
your profile like I already know I can't

766
00:29:14,020 --> 00:29:15,610
make that any faster you can just get

767
00:29:15,610 --> 00:29:17,230
rid of it and if you want to focus on

768
00:29:17,230 --> 00:29:18,670
just one function that becomes like a

769
00:29:18,670 --> 00:29:20,470
hundred percent and you can focus on

770
00:29:20,470 --> 00:29:24,400
that sub graph so you know debugging and

771
00:29:24,400 --> 00:29:27,070
web kids going to be really great I just

772
00:29:27,070 --> 00:29:28,860
got this code checked in last night so

773
00:29:28,860 --> 00:29:31,720
tomorrow's nightly should have it which

774
00:29:31,720 --> 00:29:33,640
means debugging so far is going to be

775
00:29:33,640 --> 00:29:35,350
really great when safari four strips

776
00:29:35,350 --> 00:29:37,630
which means that debugging with chrome

777
00:29:37,630 --> 00:29:38,770
is going to be really great as soon as

778
00:29:38,770 --> 00:29:40,330
they pull in those changes so we're

779
00:29:40,330 --> 00:29:41,740
really happy with the way that's working

780
00:29:41,740 --> 00:29:43,900
out what we're doing next is we're

781
00:29:43,900 --> 00:29:45,490
already actually started working on

782
00:29:45,490 --> 00:29:47,560
these same patches for Firebug mainly

783
00:29:47,560 --> 00:29:50,230
the display name thing doing the kind of

784
00:29:50,230 --> 00:29:53,320
tree thing is a bit harder I just don't

785
00:29:53,320 --> 00:29:56,140
know enough about our bug yet the other

786
00:29:56,140 --> 00:29:58,000
thing we want to do is build more of

787
00:29:58,000 --> 00:29:59,440
these tools we want the exact same tools

788
00:29:59,440 --> 00:30:03,130
for profiling memory basically and also

789
00:30:03,130 --> 00:30:04,840
we want to explore this idea of dynamic

790
00:30:04,840 --> 00:30:06,310
interaction between the debugger and

791
00:30:06,310 --> 00:30:08,380
code more so this kind of display name

792
00:30:08,380 --> 00:30:09,550
thing is kind of just the tip of the

793
00:30:09,550 --> 00:30:11,650
iceberg right like the idea that you can

794
00:30:11,650 --> 00:30:13,420
tell the debugger certain things and

795
00:30:13,420 --> 00:30:15,070
we've got some pretty interesting things

796
00:30:15,070 --> 00:30:19,360
we're working on in that regard so the

797
00:30:19,360 --> 00:30:21,070
other thing that's coming in all point

798
00:30:21,070 --> 00:30:22,720
seven is themes I'm actually going to

799
00:30:22,720 --> 00:30:24,100
skip through this because I guess I

800
00:30:24,100 --> 00:30:28,830
don't have a lot of time or do I I mean

801
00:30:28,830 --> 00:30:31,810
so I guess I'll just blow by this really

802
00:30:31,810 --> 00:30:33,640
quickly so we added themes to the latest

803
00:30:33,640 --> 00:30:36,610
version of cappuccino that's the class

804
00:30:36,610 --> 00:30:38,080
that handles it that's not what's really

805
00:30:38,080 --> 00:30:40,029
important what I wanted to mention is

806
00:30:40,029 --> 00:30:41,409
that you know not only do we think it's

807
00:30:41,409 --> 00:30:42,879
really important to have a theming

808
00:30:42,879 --> 00:30:44,169
engine but we think it's really

809
00:30:44,169 --> 00:30:45,999
important for you know your stuff to

810
00:30:45,999 --> 00:30:47,950
look really really good by default so we

811
00:30:47,950 --> 00:30:50,019
hired a professional design firm their

812
00:30:50,019 --> 00:30:52,690
name is sofa you may FIFA Millie er with

813
00:30:52,690 --> 00:30:54,279
some of their products they also made

814
00:30:54,279 --> 00:30:56,799
the cappuccino logo for us and we kind

815
00:30:56,799 --> 00:30:58,090
of assigned them the task of making a

816
00:30:58,090 --> 00:30:59,799
really really beautiful theme that looks

817
00:30:59,799 --> 00:31:02,139
good both on Windows or Mac ie whatever

818
00:31:02,139 --> 00:31:04,239
and they did a really great job it's

819
00:31:04,239 --> 00:31:06,789
called Aristo you know you run it on

820
00:31:06,789 --> 00:31:09,039
vista you know I II and it kind of feels

821
00:31:09,039 --> 00:31:11,169
like Windows and you know you run it on

822
00:31:11,169 --> 00:31:13,149
safari Mac and it kind of feels like Mac

823
00:31:13,149 --> 00:31:15,669
and it doesn't feel at all like Linux

824
00:31:15,669 --> 00:31:17,139
when you learn it in Linux but I think

825
00:31:17,139 --> 00:31:20,979
that's a good thing and the other really

826
00:31:20,979 --> 00:31:22,059
cool thing about that is that we're

827
00:31:22,059 --> 00:31:24,249
completely open sourcing this this this

828
00:31:24,249 --> 00:31:26,559
UI and I don't mean we're just throwing

829
00:31:26,559 --> 00:31:28,629
the pngs out there but we've taken all

830
00:31:28,629 --> 00:31:30,609
you know Photoshop files that you know

831
00:31:30,609 --> 00:31:32,710
that they made over time and we're going

832
00:31:32,710 --> 00:31:34,629
to dump that all into the github tree as

833
00:31:34,629 --> 00:31:36,460
well so you can go in there and kind of

834
00:31:36,460 --> 00:31:38,589
see how they develop their art you can

835
00:31:38,589 --> 00:31:40,389
learn from their skills etc etc you know

836
00:31:40,389 --> 00:31:41,769
we want kind of the same open source

837
00:31:41,769 --> 00:31:43,629
experience for the artwork in cappuccino

838
00:31:43,629 --> 00:31:47,139
as for the code so we recently announced

839
00:31:47,139 --> 00:31:48,639
this thing called Atlas and it kind of

840
00:31:48,639 --> 00:31:51,399
allows you to build applications for the

841
00:31:51,399 --> 00:31:53,259
web but what a lot of people don't know

842
00:31:53,259 --> 00:31:54,849
about is that you can kind of already do

843
00:31:54,849 --> 00:31:56,950
this with the 0 point 7 beta using a

844
00:31:56,950 --> 00:31:58,419
tool called nib to sit which I'll show

845
00:31:58,419 --> 00:32:03,969
you right now so if you guys have a max

846
00:32:03,969 --> 00:32:07,739
I don't know if you do hopefully you do

847
00:32:07,739 --> 00:32:09,940
there's a tool called interface builder

848
00:32:09,940 --> 00:32:12,519
that's what you use to make applications

849
00:32:12,519 --> 00:32:16,599
on the mac and there's these interface

850
00:32:16,599 --> 00:32:26,899
files called zibs launched said oh

851
00:32:26,909 --> 00:32:30,029
so basically you just have a kind of a

852
00:32:30,029 --> 00:32:33,149
little UI builder tool and what we've

853
00:32:33,149 --> 00:32:35,279
done is created a converter that

854
00:32:35,279 --> 00:32:37,820
converts from there zibs two are

855
00:32:37,820 --> 00:32:40,109
equivalent formats I'll show you what

856
00:32:40,109 --> 00:32:41,369
that looks like I'll do this kind of

857
00:32:41,369 --> 00:32:45,659
empty thing first you just run the tool

858
00:32:45,659 --> 00:32:56,670
on the file

859
00:32:56,680 --> 00:33:12,040
go and

860
00:33:12,050 --> 00:33:13,820
so this is just an empty window right

861
00:33:13,820 --> 00:33:17,000
that's all we had so let's actually put

862
00:33:17,000 --> 00:33:18,170
some stuff in there and you can kind of

863
00:33:18,170 --> 00:33:21,560
see how this works so if we can go grab

864
00:33:21,560 --> 00:33:30,710
a button we can throw it in here so it's

865
00:33:30,710 --> 00:33:32,210
got these really cool kind of layout

866
00:33:32,210 --> 00:33:36,800
tools so if I can Center the button by

867
00:33:36,800 --> 00:33:38,480
just removing all the anchors and you'll

868
00:33:38,480 --> 00:33:39,740
see there it shows you exactly what's

869
00:33:39,740 --> 00:33:41,330
going to happen so I'm going to save

870
00:33:41,330 --> 00:33:44,180
this file now and I'm going to run this

871
00:33:44,180 --> 00:33:52,430
again and now when i refresh you'll see

872
00:33:52,430 --> 00:33:54,340
there is a button inside that window and

873
00:33:54,340 --> 00:33:57,740
as you can as you can see it's perfectly

874
00:33:57,740 --> 00:34:03,470
centered in the window I'll show you

875
00:34:03,470 --> 00:34:05,780
something more interesting it's putting

876
00:34:05,780 --> 00:34:14,480
a slider and the text field so there's a

877
00:34:14,480 --> 00:34:15,890
really cool concept in interface builder

878
00:34:15,890 --> 00:34:18,230
called connections which allows you to

879
00:34:18,230 --> 00:34:21,590
kind of bind objects together so I'm

880
00:34:21,590 --> 00:34:23,000
going to tell this text field to take

881
00:34:23,000 --> 00:34:26,540
the value from the slider when it

882
00:34:26,540 --> 00:34:35,069
changes so when I run this again

883
00:34:35,079 --> 00:34:36,879
you'll see that we also have the slider

884
00:34:36,879 --> 00:34:38,169
and the text field and when I move the

885
00:34:38,169 --> 00:34:39,249
slider around it just updates

886
00:34:39,249 --> 00:34:45,999
automatically and let me just steal a

887
00:34:45,999 --> 00:35:06,710
menu I can throw a menu in here

888
00:35:06,720 --> 00:35:09,450
as you can see we now have a menu all

889
00:35:09,450 --> 00:35:11,460
the stuff in there so if we want to edit

890
00:35:11,460 --> 00:35:13,050
that menu we can just open this up and

891
00:35:13,050 --> 00:35:28,390
we can add kind of a new item and loops

892
00:35:28,400 --> 00:35:32,010
and this stuff moves a little bit hokey

893
00:35:32,010 --> 00:35:33,960
but the mac people like it so i'll show

894
00:35:33,960 --> 00:35:37,770
you too this was all the rage back when

895
00:35:37,770 --> 00:35:39,900
webgate was first created we can create

896
00:35:39,900 --> 00:35:46,340
an o-line browser grab a web view here

897
00:35:46,340 --> 00:36:08,780
just drop that in

898
00:36:08,790 --> 00:36:10,320
and I'm going to take I'm going to tell

899
00:36:10,320 --> 00:36:15,390
this Web buta to take its URL from this

900
00:36:15,390 --> 00:36:17,460
text field so take string your rail from

901
00:36:17,460 --> 00:36:20,520
and I'm also going to add a button or

902
00:36:20,520 --> 00:36:27,870
back button and I'm going to tell the

903
00:36:27,870 --> 00:36:29,430
web you to go back when you press this

904
00:36:29,430 --> 00:36:39,690
button and one last thing we're tell the

905
00:36:39,690 --> 00:36:41,130
window not to be visible when I first

906
00:36:41,130 --> 00:36:43,320
launch the program and instead I'm going

907
00:36:43,320 --> 00:36:44,760
to have this menu item which I called

908
00:36:44,760 --> 00:36:50,530
browser open the window so order front

909
00:36:50,540 --> 00:37:07,099
so we run this tool

910
00:37:07,109 --> 00:37:09,299
so here's the empty window again if I go

911
00:37:09,299 --> 00:37:11,339
to other stuff here we'll see browser

912
00:37:11,339 --> 00:37:12,930
that opens up the little browser window

913
00:37:12,930 --> 00:37:21,059
and come in here there's apple com I can

914
00:37:21,059 --> 00:37:26,369
go somewhere else and I hit back it goes

915
00:37:26,369 --> 00:37:31,650
back amazing so one of the things that

916
00:37:31,650 --> 00:37:33,390
kind of you I builders get wrong is that

917
00:37:33,390 --> 00:37:36,420
you can basically do what's in the

918
00:37:36,420 --> 00:37:37,950
Builder and that's it and then

919
00:37:37,950 --> 00:37:39,509
everything else you kind of got to stop

920
00:37:39,509 --> 00:37:41,609
using the builder for but what interface

921
00:37:41,609 --> 00:37:43,650
builder is really great for is kind of

922
00:37:43,650 --> 00:37:45,569
expanding it and I kind of want to give

923
00:37:45,569 --> 00:37:48,289
you a quick demo of how we do that so

924
00:37:48,289 --> 00:37:57,130
let's go to just a new project

925
00:37:57,140 --> 00:38:08,900
so we're going to make a new class

926
00:38:08,910 --> 00:38:10,680
so I'm going to make a new class and so

927
00:38:10,680 --> 00:38:11,940
you'll get kind of a few love objective

928
00:38:11,940 --> 00:38:16,560
J as I do this too and to make class you

929
00:38:16,560 --> 00:38:18,870
use the implementation keyword and we're

930
00:38:18,870 --> 00:38:19,800
going to make a new kind of view that

931
00:38:19,800 --> 00:38:21,420
just draws a triangle on the screen so

932
00:38:21,420 --> 00:38:23,720
we're going to call it triangle view and

933
00:38:23,720 --> 00:38:28,530
it is a subclass of the view class so

934
00:38:28,530 --> 00:38:37,650
there we go and to draw you implement

935
00:38:37,650 --> 00:38:40,740
the draw rect method this is just like

936
00:38:40,740 --> 00:38:43,650
Java and obviously Objective C so I've

937
00:38:43,650 --> 00:38:45,840
got the snippet of code that draws a

938
00:38:45,840 --> 00:38:52,650
triangle here for me it's not

939
00:38:52,650 --> 00:38:54,450
particularly interesting basically we

940
00:38:54,450 --> 00:38:56,960
just set the field color to red and then

941
00:38:56,960 --> 00:39:00,630
make a veggie a path that starts at the

942
00:39:00,630 --> 00:39:02,720
top center and moves to the bottom right

943
00:39:02,720 --> 00:39:06,090
bottom left etc so now that we've got

944
00:39:06,090 --> 00:39:09,300
this this class here we have to somehow

945
00:39:09,300 --> 00:39:11,730
tell interface builder about it so what

946
00:39:11,730 --> 00:39:20,220
we're going to do close this so we've

947
00:39:20,220 --> 00:39:22,650
got a blank one now we're just going to

948
00:39:22,650 --> 00:39:25,080
tell it to use the super class which is

949
00:39:25,080 --> 00:39:29,540
the view I'm going to drop this in here

950
00:39:29,540 --> 00:39:33,030
and I'm going to go to the its

951
00:39:33,030 --> 00:39:34,260
properties and i'm going to say you know

952
00:39:34,260 --> 00:39:36,210
what you're not a few anymore you're a

953
00:39:36,210 --> 00:39:39,000
triangle view and i'm going to go ahead

954
00:39:39,000 --> 00:39:56,740
and set its resize flags as well

955
00:39:56,750 --> 00:39:58,680
hopefully if I've done everything right

956
00:39:58,680 --> 00:40:09,520
here

957
00:40:09,530 --> 00:40:11,510
there you go there's our red triangle

958
00:40:11,510 --> 00:40:14,000
and since the resize flags are said it's

959
00:40:14,000 --> 00:40:17,980
going to redraw you know correctly so

960
00:40:17,980 --> 00:40:20,210
now we wanted to kind of interact with

961
00:40:20,210 --> 00:40:21,650
other controls so we're going to try to

962
00:40:21,650 --> 00:40:23,480
do is put a color well in there that can

963
00:40:23,480 --> 00:40:25,370
change the color of the triangle so I'm

964
00:40:25,370 --> 00:40:27,080
going to make a little more room I'm

965
00:40:27,080 --> 00:40:29,810
going to move this down I'm going to

966
00:40:29,810 --> 00:40:33,290
choose color well and throw that in

967
00:40:33,290 --> 00:40:38,150
there and so before we can change the

968
00:40:38,150 --> 00:40:39,500
color of the triangle the triangle has

969
00:40:39,500 --> 00:40:42,020
to have this idea of a settable color so

970
00:40:42,020 --> 00:40:43,580
I'm going to give it a member variable

971
00:40:43,580 --> 00:40:47,600
which is a color now again I said that

972
00:40:47,600 --> 00:40:49,820
objective j is a superset of JavaScript

973
00:40:49,820 --> 00:40:51,350
so as you can see here I'm doing this in

974
00:40:51,350 --> 00:40:52,880
a very strict way as you would like in

975
00:40:52,880 --> 00:40:54,440
Java declaring all you remember

976
00:40:54,440 --> 00:40:55,970
variables ahead of time you don't

977
00:40:55,970 --> 00:40:57,560
actually need to do this it's more of a

978
00:40:57,560 --> 00:40:59,660
stylistic thing like hey look these are

979
00:40:59,660 --> 00:41:01,070
the variables i'll be using in my class

980
00:41:01,070 --> 00:41:02,780
so again you could leave that out and

981
00:41:02,780 --> 00:41:05,240
just add it to the class automatically

982
00:41:05,240 --> 00:41:07,250
as you would with javascript so i'm

983
00:41:07,250 --> 00:41:10,220
going to add a new method called take

984
00:41:10,220 --> 00:41:16,170
color from

985
00:41:16,180 --> 00:41:18,619
basically all this does is set its color

986
00:41:18,619 --> 00:41:22,849
to whatever color the parameter you pass

987
00:41:22,849 --> 00:41:25,309
in contains and I have to do one more

988
00:41:25,309 --> 00:41:28,670
thing which is notify this view that it

989
00:41:28,670 --> 00:41:31,160
needs to redraw itself because you know

990
00:41:31,160 --> 00:41:35,059
the color change so normally when i add

991
00:41:35,059 --> 00:41:36,529
a method like this interface builder

992
00:41:36,529 --> 00:41:38,359
would pick up on it automatically but

993
00:41:38,359 --> 00:41:39,859
since we're using saveetha edit and not

994
00:41:39,859 --> 00:41:41,900
Xcode it doesn't but there's a really

995
00:41:41,900 --> 00:41:44,059
easy workaround to that I'm going to

996
00:41:44,059 --> 00:41:48,829
just click on here and add it myself

997
00:41:48,829 --> 00:41:51,619
manually here into the actions so take

998
00:41:51,619 --> 00:41:53,630
color from that's what I named it i

999
00:41:53,630 --> 00:41:56,119
believe so now it's got this this idea

1000
00:41:56,119 --> 00:41:58,400
of an action that it can perform so i'm

1001
00:41:58,400 --> 00:42:00,470
going to connect the color well and

1002
00:42:00,470 --> 00:42:03,829
choose take color from so once again

1003
00:42:03,829 --> 00:42:12,819
i'll save it are we run this

1004
00:42:12,829 --> 00:42:17,660
oh yeah

1005
00:42:17,670 --> 00:42:20,760
so now I've got this color well oh it's

1006
00:42:20,760 --> 00:42:29,490
not working oh yes there you go see that

1007
00:42:29,490 --> 00:42:30,839
would have been really easy to find now

1008
00:42:30,839 --> 00:42:32,220
because debugging is just so grating

1009
00:42:32,220 --> 00:42:38,130
averaging there you go so are y'all

1010
00:42:38,130 --> 00:42:41,040
refresh it there we go now it's just

1011
00:42:41,040 --> 00:42:42,089
going to automatically take the color

1012
00:42:42,089 --> 00:42:45,630
from the color wheel and the other cool

1013
00:42:45,630 --> 00:42:46,710
thing about interface builder is that

1014
00:42:46,710 --> 00:42:48,059
you're not just limited to interface

1015
00:42:48,059 --> 00:42:49,500
elements you can actually kind of create

1016
00:42:49,500 --> 00:42:51,990
abstract objects on the fly so let's

1017
00:42:51,990 --> 00:42:55,829
just create kind of a useless object but

1018
00:42:55,829 --> 00:42:58,740
just for demonstration purposes it's

1019
00:42:58,740 --> 00:43:02,369
call it alerter and it just inherits

1020
00:43:02,369 --> 00:43:05,130
from the normal object class and it's

1021
00:43:05,130 --> 00:43:10,420
got also an action which is say stuff

1022
00:43:10,430 --> 00:43:16,410
and all it does is alert hey there so

1023
00:43:16,410 --> 00:43:18,299
I'm going to come into interface builder

1024
00:43:18,299 --> 00:43:20,609
and just like before I chose kind of

1025
00:43:20,609 --> 00:43:22,619
like the base view class I'm just going

1026
00:43:22,619 --> 00:43:24,210
to choose the base object class and just

1027
00:43:24,210 --> 00:43:25,829
throw it into here now the reason it's

1028
00:43:25,829 --> 00:43:26,880
going down there is because it's an

1029
00:43:26,880 --> 00:43:28,440
abstract object right it wouldn't make

1030
00:43:28,440 --> 00:43:30,690
sense to put it in the window so just as

1031
00:43:30,690 --> 00:43:32,760
before I'm going to say hey wait a

1032
00:43:32,760 --> 00:43:34,559
minute this isn't an object it's a

1033
00:43:34,559 --> 00:43:38,760
alerter so now we've got this alert or

1034
00:43:38,760 --> 00:43:40,170
object that will be created when we load

1035
00:43:40,170 --> 00:43:43,290
this interface and I guess we can add a

1036
00:43:43,290 --> 00:43:45,150
button to make it say what it wants to

1037
00:43:45,150 --> 00:43:55,470
say

1038
00:43:55,480 --> 00:43:57,520
and again we have to add the action

1039
00:43:57,520 --> 00:44:00,990
again because we're not using Xcode so

1040
00:44:00,990 --> 00:44:03,970
there you go and now I can connect this

1041
00:44:03,970 --> 00:44:15,130
to hear not shown

1042
00:44:15,140 --> 00:44:33,349
17

1043
00:44:33,359 --> 00:44:39,420
all it's not showing up and I know that

1044
00:44:39,420 --> 00:44:41,369
I shouldn't matter I mean I put this

1045
00:44:41,369 --> 00:44:49,739
here and try redoing it I'm sure it's

1046
00:44:49,739 --> 00:44:53,099
something simple oh there you yeah

1047
00:44:53,099 --> 00:44:55,349
almost felt it or something ok so now

1048
00:44:55,349 --> 00:44:57,779
it's in there and we'll run this tool

1049
00:44:57,779 --> 00:45:03,640
again

1050
00:45:03,650 --> 00:45:09,230
so fresh there we go so that's kind of

1051
00:45:09,230 --> 00:45:11,270
just an idea of how you create

1052
00:45:11,270 --> 00:45:13,310
applications in the cocoa world and thus

1053
00:45:13,310 --> 00:45:14,960
how you can use those same strategies to

1054
00:45:14,960 --> 00:45:18,660
create them within the cappuccino world

1055
00:45:18,670 --> 00:45:30,880
back to presentation here

1056
00:45:30,890 --> 00:45:33,019
so you can try out the everything I

1057
00:45:33,019 --> 00:45:34,640
showed you is part of this Oh point 7

1058
00:45:34,640 --> 00:45:36,230
beta it's actually not in the stable

1059
00:45:36,230 --> 00:45:39,200
release yet so you can go to github and

1060
00:45:39,200 --> 00:45:42,440
try it out you don't have to remember

1061
00:45:42,440 --> 00:45:43,970
that URL you can just go to our normal

1062
00:45:43,970 --> 00:45:47,180
one and it's listed in there this is our

1063
00:45:47,180 --> 00:45:48,740
website all this stuff I showed you is

1064
00:45:48,740 --> 00:45:50,450
completely open source and you can

1065
00:45:50,450 --> 00:45:51,859
download the stable release from here

1066
00:45:51,859 --> 00:45:54,349
and there's also a link to github where

1067
00:45:54,349 --> 00:45:56,559
you can you know try out the betas

1068
00:45:56,559 --> 00:45:59,720
here's some more information we're

1069
00:45:59,720 --> 00:46:01,849
always in the IRC room we have really

1070
00:46:01,849 --> 00:46:03,619
really bad sleeping schedules so one of

1071
00:46:03,619 --> 00:46:06,049
us is always awake during the day so you

1072
00:46:06,049 --> 00:46:09,019
can find us there and that's it I have

1073
00:46:09,019 --> 00:46:20,799
some time for questions now if you have

1074
00:46:20,809 --> 00:46:25,559
yes but in this kind of non-objective J

1075
00:46:25,559 --> 00:46:26,789
way they're actually using the run time

1076
00:46:26,789 --> 00:46:28,680
to build their own language I know of at

1077
00:46:28,680 --> 00:46:32,400
least three people doing that so one of

1078
00:46:32,400 --> 00:46:39,930
them being that Ruby thing we're we're

1079
00:46:39,930 --> 00:46:40,979
going to release you in the summer we're

1080
00:46:40,979 --> 00:46:44,190
working really hard on it it'll be done

1081
00:46:44,190 --> 00:46:47,220
soon so I guess something I should

1082
00:46:47,220 --> 00:46:48,329
mention is kind of what's the difference

1083
00:46:48,329 --> 00:46:50,579
between interface builder and Atlas one

1084
00:46:50,579 --> 00:46:52,170
obvious one is that Atlas runs in the

1085
00:46:52,170 --> 00:46:53,309
browser and thus you don't need a mac

1086
00:46:53,309 --> 00:46:55,559
for it but the other one is that you

1087
00:46:55,559 --> 00:46:57,660
know Atlas is a lot more internet

1088
00:46:57,660 --> 00:46:59,339
centric right interface builder was

1089
00:46:59,339 --> 00:47:00,930
designed for just building desktop

1090
00:47:00,930 --> 00:47:03,749
applications whereas Atlas adds kind of

1091
00:47:03,749 --> 00:47:06,450
these this idea of you know internet

1092
00:47:06,450 --> 00:47:07,440
controllers where you can just

1093
00:47:07,440 --> 00:47:09,299
automatically draw those little

1094
00:47:09,299 --> 00:47:12,119
connections to like Twitter or RSS feeds

1095
00:47:12,119 --> 00:47:14,900
and that sort of thing so that's kind of

1096
00:47:14,900 --> 00:47:17,130
what we've been working on another

1097
00:47:17,130 --> 00:47:19,440
interesting thing is that our plug-in

1098
00:47:19,440 --> 00:47:21,329
API is exactly the same as interface

1099
00:47:21,329 --> 00:47:23,519
builders plug-in API so all the existing

1100
00:47:23,519 --> 00:47:25,380
plug-ins for interface builder and the

1101
00:47:25,380 --> 00:47:27,660
Mac are just going to work with Atlas so

1102
00:47:27,660 --> 00:47:28,920
a lot of people have made finally you

1103
00:47:28,920 --> 00:47:30,299
know these really flashy controls for

1104
00:47:30,299 --> 00:47:31,859
the mac and you'll be able to upload

1105
00:47:31,859 --> 00:47:40,410
those to Atlas and use them to yes like

1106
00:47:40,410 --> 00:47:42,630
arrow keys and like man seeking man be

1107
00:47:42,630 --> 00:47:44,660
that's what yeah yeah that's all hilton

1108
00:47:44,660 --> 00:47:48,069
you see this working for some time ago

1109
00:47:48,069 --> 00:47:52,299
uh yeah Atlas actually supports the

1110
00:47:52,299 --> 00:47:55,449
iphone so one of the ideas we had was

1111
00:47:55,449 --> 00:47:57,999
nibs that this kind of interface format

1112
00:47:57,999 --> 00:48:00,369
that exists for the Mac today is used

1113
00:48:00,369 --> 00:48:02,140
for localization a lot on the Mac

1114
00:48:02,140 --> 00:48:03,459
because it can just make a completely

1115
00:48:03,459 --> 00:48:05,109
different UI for every localization

1116
00:48:05,109 --> 00:48:06,999
which is really I think the right way to

1117
00:48:06,999 --> 00:48:08,769
go a lot of times for example like in

1118
00:48:08,769 --> 00:48:11,079
Israel you might want your entire UI to

1119
00:48:11,079 --> 00:48:13,479
be completely flipped right as opposed

1120
00:48:13,479 --> 00:48:16,299
to kind of the the American one and we

1121
00:48:16,299 --> 00:48:18,039
took that same idea and applied it to

1122
00:48:18,039 --> 00:48:20,229
different platforms so you can have kind

1123
00:48:20,229 --> 00:48:22,660
of the same core code and then have a

1124
00:48:22,660 --> 00:48:24,579
you know interface file for the iPhone

1125
00:48:24,579 --> 00:48:26,079
and that gets launched automatically

1126
00:48:26,079 --> 00:48:27,699
when it's loaded in the iphone and then

1127
00:48:27,699 --> 00:48:28,959
you have a different interface file for

1128
00:48:28,959 --> 00:48:30,160
the desktop and that gets launched

1129
00:48:30,160 --> 00:48:31,989
automatically and each one would have it

1130
00:48:31,989 --> 00:48:33,640
has like its own unique set of widgets

1131
00:48:33,640 --> 00:48:34,690
like you know there's very I phony

1132
00:48:34,690 --> 00:48:36,759
widgets for the iPhone and you know

1133
00:48:36,759 --> 00:48:38,829
desktop you widget for the desktop etc

1134
00:48:38,829 --> 00:48:44,440
so as Derek J use of the end of the

1135
00:48:44,440 --> 00:48:46,050
posters and ads on

1136
00:48:46,050 --> 00:48:48,510
so the way objective J works is that

1137
00:48:48,510 --> 00:48:50,010
it's a very very thin layer on how the

1138
00:48:50,010 --> 00:48:51,930
JavaScript again it's it's a couple

1139
00:48:51,930 --> 00:48:55,110
features that we feel it should have had

1140
00:48:55,110 --> 00:48:57,450
such as you know classical inheritance

1141
00:48:57,450 --> 00:48:59,100
and that sort of thing so you can

1142
00:48:59,100 --> 00:49:00,810
actually write objective J without

1143
00:49:00,810 --> 00:49:02,940
objective J if you want you can use all

1144
00:49:02,940 --> 00:49:04,740
the library functions to do the same

1145
00:49:04,740 --> 00:49:06,180
thing I don't know why you would but you

1146
00:49:06,180 --> 00:49:09,210
could so the way that this kind of

1147
00:49:09,210 --> 00:49:10,920
automatically works that I'm typing in

1148
00:49:10,920 --> 00:49:12,510
this new language and it's just working

1149
00:49:12,510 --> 00:49:15,080
in the browser is that we actually have

1150
00:49:15,080 --> 00:49:17,910
the the compiler written in JavaScript

1151
00:49:17,910 --> 00:49:19,500
and it grabs your code converts it to

1152
00:49:19,500 --> 00:49:21,120
JavaScript and then runs it very quickly

1153
00:49:21,120 --> 00:49:23,520
now we understand that you know for some

1154
00:49:23,520 --> 00:49:25,950
really highly you know high-traffic

1155
00:49:25,950 --> 00:49:27,450
applications that can be a little suited

1156
00:49:27,450 --> 00:49:30,120
slow so we actually have a separate

1157
00:49:30,120 --> 00:49:31,530
compiler where you can compile it all

1158
00:49:31,530 --> 00:49:33,030
ahead of time and compress it all into

1159
00:49:33,030 --> 00:49:34,830
one file and do all the crazy things you

1160
00:49:34,830 --> 00:49:36,900
need to do for the web so you can choose

1161
00:49:36,900 --> 00:49:40,770
either one all right this is love you

1162
00:49:40,770 --> 00:49:43,440
can write it happen every day and I want

1163
00:49:43,440 --> 00:49:50,430
to play the desktop is today um kind of

1164
00:49:50,430 --> 00:49:52,890
so you can obviously just throw a

1165
00:49:52,890 --> 00:49:57,570
webview into a containing view but so I

1166
00:49:57,570 --> 00:49:58,890
didn't really go into this but you know

1167
00:49:58,890 --> 00:50:00,720
objective j doesn't use the Dom at all

1168
00:50:00,720 --> 00:50:02,670
etc as you saw I never touched any sort

1169
00:50:02,670 --> 00:50:05,400
of you know traditional w3c technologies

1170
00:50:05,400 --> 00:50:07,110
and one of the big reasons behind that

1171
00:50:07,110 --> 00:50:08,460
is that we wanted to be able to build it

1172
00:50:08,460 --> 00:50:11,250
on top of any graphics library so one of

1173
00:50:11,250 --> 00:50:12,630
the things we've been experimenting with

1174
00:50:12,630 --> 00:50:14,490
is kind of having cappuccino run

1175
00:50:14,490 --> 00:50:16,740
entirely on SVG instead and the other

1176
00:50:16,740 --> 00:50:18,120
thing we've been kind of experimenting

1177
00:50:18,120 --> 00:50:19,860
with is actually talking to the native

1178
00:50:19,860 --> 00:50:22,320
graphics library so on Mac OS 10 we

1179
00:50:22,320 --> 00:50:24,090
could just talk directly to core

1180
00:50:24,090 --> 00:50:26,250
graphics so that's definitely another

1181
00:50:26,250 --> 00:50:29,460
option that's not anywhere near done but

1182
00:50:29,460 --> 00:50:31,680
you could just take the throw of web

1183
00:50:31,680 --> 00:50:33,120
view into an application approach and

1184
00:50:33,120 --> 00:50:35,120
have it work

1185
00:50:35,120 --> 00:50:43,100
Billy so I e78 firefox 23 Safari all of

1186
00:50:43,100 --> 00:50:51,570
them opera attend job of a question

1187
00:50:51,580 --> 00:50:54,980
on the App Store the iphone app store so

1188
00:50:54,980 --> 00:50:57,020
we actually have a one that we shipped

1189
00:50:57,020 --> 00:51:01,760
that runs cappuccino we that's it

1190
00:51:01,760 --> 00:51:03,710
because we haven't released the code for

1191
00:51:03,710 --> 00:51:07,460
that but the code will be in there for

1192
00:51:07,460 --> 00:51:09,200
atlas we have an open source that part

1193
00:51:09,200 --> 00:51:16,070
yet so yes / no yes

1194
00:51:16,070 --> 00:51:19,080
yeah so we have an our own little custom

1195
00:51:19,080 --> 00:51:21,900
testing suite it's called oj unit it's

1196
00:51:21,900 --> 00:51:25,650
it's in the it's in the just github tree

1197
00:51:25,650 --> 00:51:28,380
if you want to look at that and for

1198
00:51:28,380 --> 00:51:30,359
documentation it's admittedly a little

1199
00:51:30,359 --> 00:51:32,250
sparse but the nice thing about the

1200
00:51:32,250 --> 00:51:34,530
documentation is that all the apple docs

1201
00:51:34,530 --> 00:51:36,359
for cocoa are exactly the same since

1202
00:51:36,359 --> 00:51:38,670
it's the exact same API so you can go to

1203
00:51:38,670 --> 00:51:40,440
developer.apple.com and that's pretty

1204
00:51:40,440 --> 00:51:42,660
good documentation but everyone likes a

1205
00:51:42,660 --> 00:51:52,069
sec

