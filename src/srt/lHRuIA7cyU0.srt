1
00:00:00,320 --> 00:00:02,070

[Music]

2
00:00:02,070 --> 00:00:03,840
[Applause]

3
00:00:03,840 --> 00:00:05,660
[Music]

4
00:00:05,660 --> 00:00:07,410
[Applause]

5
00:00:07,410 --> 00:00:09,280
[Music]

6
00:00:09,280 --> 00:00:11,020
[Applause]

7
00:00:11,020 --> 00:00:12,780
[Music]

8
00:00:12,780 --> 00:00:16,860
[Applause]

9
00:00:16,870 --> 00:00:26,240
[Music]

10
00:00:26,250 --> 00:00:28,660
all right I can't see any of you which

11
00:00:28,660 --> 00:00:31,689
I'm sure you've heard today so if you're

12
00:00:31,689 --> 00:00:33,160
here for I talked about how to better

13
00:00:33,160 --> 00:00:35,050
use react you should probably go to the

14
00:00:35,050 --> 00:00:37,510
a track so this talk is more about fun

15
00:00:37,510 --> 00:00:40,660
and just silliness quickly I'm Dylan

16
00:00:40,660 --> 00:00:42,700
I've been working with JavaScript since

17
00:00:42,700 --> 00:00:43,780
96

18
00:00:43,780 --> 00:00:46,090
I was a bit of a masochist picking it up

19
00:00:46,090 --> 00:00:47,980
that early you really couldn't do that

20
00:00:47,980 --> 00:00:49,329
much with it at the time I was trying to

21
00:00:49,329 --> 00:00:52,650
put results of my experiments in

22
00:00:52,650 --> 00:00:54,940
physical chemistry online at the time

23
00:00:54,940 --> 00:00:56,500
and about eight years later I could do

24
00:00:56,500 --> 00:00:59,470
that with dojo so things have changed a

25
00:00:59,470 --> 00:01:03,670
lot over that time and I had my jokes

26
00:01:03,670 --> 00:01:05,530
stolen by Janna in her talk this morning

27
00:01:05,530 --> 00:01:07,180
because my middle name is Carl so I

28
00:01:07,180 --> 00:01:08,920
thought it would be great to say that

29
00:01:08,920 --> 00:01:10,030
the reason it's called Carlsbad is

30
00:01:10,030 --> 00:01:13,450
because I'm bad but anyway Carlsbad has

31
00:01:13,450 --> 00:01:15,729
an even more unusual history kind of

32
00:01:15,729 --> 00:01:17,470
like how most things work in JavaScript

33
00:01:17,470 --> 00:01:20,080
or browsers so the town was discovered

34
00:01:20,080 --> 00:01:22,810
in late 1800s by someone and they

35
00:01:22,810 --> 00:01:24,520
collected a water sample and it happened

36
00:01:24,520 --> 00:01:27,010
to match the water quality and purity of

37
00:01:27,010 --> 00:01:29,500
a spa in the Czech Republic that had the

38
00:01:29,500 --> 00:01:31,990
name Carlsbad but with a k' which stands

39
00:01:31,990 --> 00:01:34,420
for charles's bath which because it was

40
00:01:34,420 --> 00:01:36,549
like a nice pure water city had a very

41
00:01:36,549 --> 00:01:38,650
nice spa so of course it's named after

42
00:01:38,650 --> 00:01:41,560
something spelled wrong with after

43
00:01:41,560 --> 00:01:43,270
something that no longer has that name

44
00:01:43,270 --> 00:01:45,220
and no longer has any relationship to

45
00:01:45,220 --> 00:01:47,140
the original source kind of like almost

46
00:01:47,140 --> 00:01:48,549
everything that happens today in

47
00:01:48,549 --> 00:01:50,200
browsers so I thought that was pretty

48
00:01:50,200 --> 00:01:53,710
fitting I also in searching for the logo

49
00:01:53,710 --> 00:01:55,540
found this lovely other logo called

50
00:01:55,540 --> 00:01:57,369
Carlsbad Tech and that reminded me of

51
00:01:57,369 --> 00:01:59,439
for us his talk about how to build the

52
00:01:59,439 --> 00:02:01,240
world's worst website so I thought that

53
00:02:01,240 --> 00:02:02,170
was pretty funny because they probably

54
00:02:02,170 --> 00:02:05,080
did not intend for it to be Carlsbad

55
00:02:05,080 --> 00:02:10,750
tech instead of the Carlsbad tank also I

56
00:02:10,750 --> 00:02:12,909
have never had so many mosquito bites in

57
00:02:12,909 --> 00:02:15,790
my life I am always the person who

58
00:02:15,790 --> 00:02:17,799
manages stand on everyone else who gets

59
00:02:17,799 --> 00:02:19,660
bit and this time that's been me I've

60
00:02:19,660 --> 00:02:22,770
had 50 bytes or so so I'm gonna remember

61
00:02:22,770 --> 00:02:24,760
mosquito je s cough

62
00:02:24,760 --> 00:02:28,540
worker Tom Jen's pixel art for us is

63
00:02:28,540 --> 00:02:30,129
terrible website and a few other things

64
00:02:30,129 --> 00:02:32,230
and so so far I'm having a great time

65
00:02:32,230 --> 00:02:33,760
now how many are here for their first

66
00:02:33,760 --> 00:02:36,220
time at je s cough raise your hands so

67
00:02:36,220 --> 00:02:38,409
if I'm not blind it looks like roughly

68
00:02:38,409 --> 00:02:40,599
half of you it's actually my first time

69
00:02:40,599 --> 00:02:42,819
as well even though I've had a ticket

70
00:02:42,819 --> 00:02:44,319
four or five times before and always had

71
00:02:44,319 --> 00:02:45,549
to give it to someone else because the

72
00:02:45,549 --> 00:02:47,519
world had conspired against me to attend

73
00:02:47,519 --> 00:02:51,540
but I'd like to flash back to je s cough

74
00:02:51,540 --> 00:02:53,799
2013 how many of you were here for that

75
00:02:53,799 --> 00:02:57,060
event okay roughly ten to twenty percent

76
00:02:57,060 --> 00:03:00,250
so the first je s cough a few years

77
00:03:00,250 --> 00:03:02,079
before that Peter Higgins one of our

78
00:03:02,079 --> 00:03:05,470
dojo contributors early on would pretty

79
00:03:05,470 --> 00:03:07,329
much troll everyone as well as Kris

80
00:03:07,329 --> 00:03:08,829
Williams he got into it quite well the

81
00:03:08,829 --> 00:03:10,299
original creator of je s coffin he would

82
00:03:10,299 --> 00:03:12,519
say you know someone would come up with

83
00:03:12,519 --> 00:03:14,049
this talk about some amazing new thing

84
00:03:14,049 --> 00:03:15,310
and they begged oder already did that

85
00:03:15,310 --> 00:03:18,040
come on like get with it right and the

86
00:03:18,040 --> 00:03:19,930
funny thing was jQuery was really

87
00:03:19,930 --> 00:03:22,900
popular but dojo had like promises it

88
00:03:22,900 --> 00:03:25,510
had modules and had a build system when

89
00:03:25,510 --> 00:03:28,389
it had the equivalent of web components

90
00:03:28,389 --> 00:03:30,310
and it had some V Thomas stuff and have

91
00:03:30,310 --> 00:03:33,160
all these things like in 2007 and so

92
00:03:33,160 --> 00:03:36,280
this meme came to happen but J s come

93
00:03:36,280 --> 00:03:38,680
2013 was also the year that react was

94
00:03:38,680 --> 00:03:41,410
first announced so it was kind of a cool

95
00:03:41,410 --> 00:03:43,449
thing and here's Pete Aikens giving the

96
00:03:43,449 --> 00:03:45,370
talk dojo already did that and they

97
00:03:45,370 --> 00:03:47,590
managed to capture an awesome screenshot

98
00:03:47,590 --> 00:03:49,359
of him making a ridiculous face so

99
00:03:49,359 --> 00:03:51,970
that's why I had to show it and the meme

100
00:03:51,970 --> 00:03:53,560
is dojo already did that now

101
00:03:53,560 --> 00:03:56,590
unfortunately the Dadd hashtag has been

102
00:03:56,590 --> 00:03:59,169
super like taken over by something

103
00:03:59,169 --> 00:04:00,819
really not worth checking out I don't

104
00:04:00,819 --> 00:04:02,079
remember where it is but just don't do

105
00:04:02,079 --> 00:04:05,440
it but the funny thing is I was never

106
00:04:05,440 --> 00:04:07,449
involved with this but I'd show up when

107
00:04:07,449 --> 00:04:09,099
I'd meet people like adios Monty who's

108
00:04:09,099 --> 00:04:11,109
known as like the web performance you

109
00:04:11,109 --> 00:04:13,720
know God of all talks and he I show up

110
00:04:13,720 --> 00:04:15,250
in Google a couple years ago in London

111
00:04:15,250 --> 00:04:17,079
and he's like hey Dylan it's time for

112
00:04:17,079 --> 00:04:18,909
our selfie man and he's got the dojo I

113
00:04:18,909 --> 00:04:20,739
already did that you know signs for us

114
00:04:20,739 --> 00:04:22,780
to take the photos so this meme has

115
00:04:22,780 --> 00:04:24,820
followed me around forever and I'm

116
00:04:24,820 --> 00:04:26,020
hoping that this is the year I can

117
00:04:26,020 --> 00:04:28,030
change it to be react already did that

118
00:04:28,030 --> 00:04:31,510
also yani a formidable he did this

119
00:04:31,510 --> 00:04:34,360
really fun tweet a few months ago which

120
00:04:34,360 --> 00:04:36,010
was looking back at some of the quotes

121
00:04:36,010 --> 00:04:37,840
when react was first announced at je s

122
00:04:37,840 --> 00:04:38,380
coffee and

123
00:04:38,380 --> 00:04:40,870
it was pretty much universally panned it

124
00:04:40,870 --> 00:04:44,290
was like ohmygod JSX why stop ruining

125
00:04:44,290 --> 00:04:47,020
j/s people I can see this getting out of

126
00:04:47,020 --> 00:04:49,420
hand quickly this is terrible so did we

127
00:04:49,420 --> 00:04:51,130
really not learn anything from the PHP

128
00:04:51,130 --> 00:04:53,200
days are you seriously gonna mix markup

129
00:04:53,200 --> 00:04:55,690
and logic again like people just love to

130
00:04:55,690 --> 00:04:57,640
react after that but it's super you know

131
00:04:57,640 --> 00:05:00,460
it persevered and listened so the

132
00:05:00,460 --> 00:05:03,070
question today is has react already done

133
00:05:03,070 --> 00:05:05,410
that and so you could answer that by has

134
00:05:05,410 --> 00:05:08,290
react one what will we say in five years

135
00:05:08,290 --> 00:05:10,750
at je s Kampf 2023 who wherever that

136
00:05:10,750 --> 00:05:11,310
might be

137
00:05:11,310 --> 00:05:13,600
will we consider alternatives how many

138
00:05:13,600 --> 00:05:15,130
of you use react as your primary

139
00:05:15,130 --> 00:05:17,650
framework of choice so again more than

140
00:05:17,650 --> 00:05:23,410
half which is great so we started to

141
00:05:23,410 --> 00:05:27,220
work on dojo back in 2004 and we built

142
00:05:27,220 --> 00:05:29,410
it over the years we came out with one

143
00:05:29,410 --> 00:05:31,510
dot Oh in 2007 and we came out with two

144
00:05:31,510 --> 00:05:33,580
dot Oh a few months ago and then three

145
00:05:33,580 --> 00:05:34,930
dot o a couple months later because we

146
00:05:34,930 --> 00:05:36,460
want to catch up to react to sixteen as

147
00:05:36,460 --> 00:05:40,810
quickly as possible and but we did that

148
00:05:40,810 --> 00:05:43,450
what we realized is it's time to you

149
00:05:43,450 --> 00:05:45,070
know pretty much our framework existed

150
00:05:45,070 --> 00:05:47,980
before es5 was finalized before es6

151
00:05:47,980 --> 00:05:50,530
before type script before web components

152
00:05:50,530 --> 00:05:53,320
before html5 before mobile browsers came

153
00:05:53,320 --> 00:05:55,960
out so it was a pretty heavily technical

154
00:05:55,960 --> 00:05:57,670
deaded framework and so we said all

155
00:05:57,670 --> 00:05:58,960
right if we're not just going to use

156
00:05:58,960 --> 00:06:00,700
react if we want to create our own thing

157
00:06:00,700 --> 00:06:02,230
and we've primarily been focused on the

158
00:06:02,230 --> 00:06:04,000
enterprise over the years what are the

159
00:06:04,000 --> 00:06:05,740
things that matter to us and for us that

160
00:06:05,740 --> 00:06:08,370
was developer efficiency and ergonomics

161
00:06:08,370 --> 00:06:10,690
longevity of things our customers have

162
00:06:10,690 --> 00:06:13,120
apps that they wrote so funny story

163
00:06:13,120 --> 00:06:15,780
Apple had the Apple store running dojo

164
00:06:15,780 --> 00:06:18,970
0.44 like eight years which was just we

165
00:06:18,970 --> 00:06:20,410
would cringe we would beg them to update

166
00:06:20,410 --> 00:06:21,340
and like now it works

167
00:06:21,340 --> 00:06:24,220
all right thanks Apple unlike this

168
00:06:24,220 --> 00:06:25,600
laptop which is on its fourth

169
00:06:25,600 --> 00:06:27,550
replacement and a year-and-a-half thing

170
00:06:27,550 --> 00:06:29,080
but at least they keep replacing it so

171
00:06:29,080 --> 00:06:31,020
that's good

172
00:06:31,020 --> 00:06:33,520
interoperability I'm kind of tired of

173
00:06:33,520 --> 00:06:34,960
framework Wars I want things to just

174
00:06:34,960 --> 00:06:37,690
work together and if any framework says

175
00:06:37,690 --> 00:06:39,310
it's perfect at everything it's probably

176
00:06:39,310 --> 00:06:41,830
not perfect at anything so you know when

177
00:06:41,830 --> 00:06:42,910
you build something you need to be very

178
00:06:42,910 --> 00:06:44,590
focused on what you're trying to do what

179
00:06:44,590 --> 00:06:45,550
you're trying to achieve and what you're

180
00:06:45,550 --> 00:06:49,450
trying to build and so I would say that

181
00:06:49,450 --> 00:06:51,910
react has some challenges today as it

182
00:06:51,910 --> 00:06:52,210
grows

183
00:06:52,210 --> 00:06:54,400
because we have been at the point where

184
00:06:54,400 --> 00:06:56,410
we were like a dominant framework and

185
00:06:56,410 --> 00:06:58,090
now we're kind of like this unknown

186
00:06:58,090 --> 00:07:00,699
framework that no one's using and the

187
00:07:00,699 --> 00:07:02,919
challenges you have is as you become big

188
00:07:02,919 --> 00:07:04,870
you have to support legacy you have to

189
00:07:04,870 --> 00:07:06,430
support all your users because you don't

190
00:07:06,430 --> 00:07:07,960
want to break them which of course is a

191
00:07:07,960 --> 00:07:09,430
good thing but that makes it very

192
00:07:09,430 --> 00:07:11,710
difficult to figure out what you want to

193
00:07:11,710 --> 00:07:13,539
do next and reinvent yourself to stay

194
00:07:13,539 --> 00:07:14,979
relevant instead of something else

195
00:07:14,979 --> 00:07:16,990
coming along to replace you and I think

196
00:07:16,990 --> 00:07:18,520
that's the fundamental challenge that no

197
00:07:18,520 --> 00:07:20,169
one has solved in the 20 years of

198
00:07:20,169 --> 00:07:22,599
JavaScript and that we invent something

199
00:07:22,599 --> 00:07:24,789
and it's great and then we get fatigued

200
00:07:24,789 --> 00:07:26,139
from supporting it the early

201
00:07:26,139 --> 00:07:27,789
contributors get burnout they back off

202
00:07:27,789 --> 00:07:30,130
and then someone else comes along with

203
00:07:30,130 --> 00:07:31,900
the next big thing maybe it's view maybe

204
00:07:31,900 --> 00:07:34,440
it's felt maybe it's new dojo whatever

205
00:07:34,440 --> 00:07:37,720
there's I find the biggest challenge

206
00:07:37,720 --> 00:07:40,270
react has today is cohesion across

207
00:07:40,270 --> 00:07:42,940
project so I imagine if all of you

208
00:07:42,940 --> 00:07:44,740
raised hands and shared your react

209
00:07:44,740 --> 00:07:46,389
applications yeah your render functions

210
00:07:46,389 --> 00:07:48,340
would look similar but I bet you might

211
00:07:48,340 --> 00:07:49,870
be using different routers different

212
00:07:49,870 --> 00:07:51,669
components different approaches to your

213
00:07:51,669 --> 00:07:53,440
build process some of you might be using

214
00:07:53,440 --> 00:07:54,729
typescript some of you might be using

215
00:07:54,729 --> 00:07:56,320
flow some of you might be using vanilla

216
00:07:56,320 --> 00:07:58,419
JavaScript and so on and there's not a

217
00:07:58,419 --> 00:08:00,820
lot of direction around what's the right

218
00:08:00,820 --> 00:08:02,409
way to build the perfect react

219
00:08:02,409 --> 00:08:04,449
application and that's both its strength

220
00:08:04,449 --> 00:08:07,990
and its weakness and like I said too

221
00:08:07,990 --> 00:08:11,370
many choices so developer ergonomics

222
00:08:11,370 --> 00:08:13,870
means many things to many people but to

223
00:08:13,870 --> 00:08:16,300
me what I'm trying to get at is I want

224
00:08:16,300 --> 00:08:18,550
to do things that are the right way out

225
00:08:18,550 --> 00:08:19,930
of the box without having to be an

226
00:08:19,930 --> 00:08:21,849
expert at every esoteric feature of the

227
00:08:21,849 --> 00:08:26,110
language so by default and like you know

228
00:08:26,110 --> 00:08:27,699
something that's nice and ergonomically

229
00:08:27,699 --> 00:08:29,889
friendly has a consistent architecture

230
00:08:29,889 --> 00:08:31,930
it doesn't feel like each package or

231
00:08:31,930 --> 00:08:33,610
each piece of my framework is different

232
00:08:33,610 --> 00:08:36,669
or feels different or feels inconclusive

233
00:08:36,669 --> 00:08:39,099
give me some good defaults out of the

234
00:08:39,099 --> 00:08:40,839
box so don't make me think if I don't

235
00:08:40,839 --> 00:08:42,459
have to like if I know better than you

236
00:08:42,459 --> 00:08:44,290
framework author great let me do my

237
00:08:44,290 --> 00:08:46,360
thing but by default don't make me

238
00:08:46,360 --> 00:08:48,250
answer 5,000 questions before I get

239
00:08:48,250 --> 00:08:50,589
started and of course help me facilitate

240
00:08:50,589 --> 00:08:52,779
the authoring of better code so if a

241
00:08:52,779 --> 00:08:54,880
framework is getting in my way or it's

242
00:08:54,880 --> 00:08:56,079
I'm having to go through great

243
00:08:56,079 --> 00:08:57,520
workarounds to get it to behave

244
00:08:57,520 --> 00:08:59,380
consistently I've kind of lost the

245
00:08:59,380 --> 00:09:00,940
benefit of having a framework to begin

246
00:09:00,940 --> 00:09:04,779
with so I'm a big fan of typescript I'm

247
00:09:04,779 --> 00:09:05,710
sure that's not

248
00:09:05,710 --> 00:09:07,510
prising to anyone who has met me I know

249
00:09:07,510 --> 00:09:09,460
typescript gets mixed ratings in the

250
00:09:09,460 --> 00:09:10,660
reactive community and I think that's

251
00:09:10,660 --> 00:09:13,570
okay so and there's flow of course so

252
00:09:13,570 --> 00:09:16,720
typescript I like it better because it

253
00:09:16,720 --> 00:09:18,850
supports interfaces and that goes back

254
00:09:18,850 --> 00:09:21,010
to that interoperability goal of hey

255
00:09:21,010 --> 00:09:22,540
I've got this dependency and I want to

256
00:09:22,540 --> 00:09:24,640
replace it with something else in almost

257
00:09:24,640 --> 00:09:26,230
every other programming language we have

258
00:09:26,230 --> 00:09:28,660
an interface definition that we know if

259
00:09:28,660 --> 00:09:30,310
this object has this method and this

260
00:09:30,310 --> 00:09:31,630
property in this whatever and whatever

261
00:09:31,630 --> 00:09:33,790
then I can safely swap that out with

262
00:09:33,790 --> 00:09:35,800
something else in JavaScript we've never

263
00:09:35,800 --> 00:09:36,640
really had that

264
00:09:36,640 --> 00:09:38,830
and so typescript facilitates that but

265
00:09:38,830 --> 00:09:40,510
you need to define some types to then be

266
00:09:40,510 --> 00:09:42,400
able to define interfaces to then be

267
00:09:42,400 --> 00:09:44,020
able to say okay I can swap this thing

268
00:09:44,020 --> 00:09:48,460
out with this other thing the other nice

269
00:09:48,460 --> 00:09:50,590
benefit of defining types in the

270
00:09:50,590 --> 00:09:52,780
ergonomic benefit there is that I can't

271
00:09:52,780 --> 00:09:54,850
remember why I wrote something the way I

272
00:09:54,850 --> 00:09:57,130
did two months later much less a year or

273
00:09:57,130 --> 00:10:00,010
two later and so typescript and flow

274
00:10:00,010 --> 00:10:02,620
sort of forced you to define what you

275
00:10:02,620 --> 00:10:04,330
were thinking and so that you can

276
00:10:04,330 --> 00:10:06,460
remember your own code later much less

277
00:10:06,460 --> 00:10:09,220
your teammates and your colleagues also

278
00:10:09,220 --> 00:10:11,020
I used to joke that there was no need

279
00:10:11,020 --> 00:10:12,910
for you know people would come to dojo

280
00:10:12,910 --> 00:10:14,380
and JavaScript training workshops we

281
00:10:14,380 --> 00:10:17,200
would lead and they'd be like Oh kid

282
00:10:17,200 --> 00:10:18,430
Dylan this is cool but I'm a Java

283
00:10:18,430 --> 00:10:20,470
developer where's my autocomplete and

284
00:10:20,470 --> 00:10:22,330
I'm like you're an idiot you just

285
00:10:22,330 --> 00:10:25,030
remember everything in your head like

286
00:10:25,030 --> 00:10:28,090
why why would you ever want autocomplete

287
00:10:28,090 --> 00:10:30,430
it makes you a lazy engineer right and

288
00:10:30,430 --> 00:10:31,870
that's kind of funny until you make

289
00:10:31,870 --> 00:10:34,840
typos and can't find them and so on so

290
00:10:34,840 --> 00:10:36,820
actually having first-class IDE support

291
00:10:36,820 --> 00:10:38,260
with auto-completion is really nice

292
00:10:38,260 --> 00:10:40,150
especially when you get into more

293
00:10:40,150 --> 00:10:41,770
involved api's that are difficult to

294
00:10:41,770 --> 00:10:44,650
remember so last year we wrote a

295
00:10:44,650 --> 00:10:46,240
framework series and we did a music

296
00:10:46,240 --> 00:10:48,250
theme and the idea behind it it was a

297
00:10:48,250 --> 00:10:50,770
200 in some page blog series so it was

298
00:10:50,770 --> 00:10:53,680
really concise and terse but basically

299
00:10:53,680 --> 00:10:55,690
we looked at frameworks and asked about

300
00:10:55,690 --> 00:10:57,760
a thousand questions to help you try to

301
00:10:57,760 --> 00:10:59,380
evaluate a framework for you and it

302
00:10:59,380 --> 00:11:00,760
wasn't about telling you which framework

303
00:11:00,760 --> 00:11:02,740
to use it was to try to help you think

304
00:11:02,740 --> 00:11:05,560
deeper than music selection so I used to

305
00:11:05,560 --> 00:11:08,080
joke that if we picked our music like we

306
00:11:08,080 --> 00:11:09,520
picked our framework we would all be

307
00:11:09,520 --> 00:11:11,890
using Justin Bieber ojs right because

308
00:11:11,890 --> 00:11:14,800
and that obviously was not cool in 2013

309
00:11:14,800 --> 00:11:16,390
and that's definitely not cool today

310
00:11:16,390 --> 00:11:18,580
so when you're choosing a framework a

311
00:11:18,580 --> 00:11:19,540
need to sort of get

312
00:11:19,540 --> 00:11:24,070
on the surface and dig deeper and so you

313
00:11:24,070 --> 00:11:25,449
know when you look at organ aam --ax I'm

314
00:11:25,449 --> 00:11:26,889
just gonna look at three things today

315
00:11:26,889 --> 00:11:28,750
that are different than react and that's

316
00:11:28,750 --> 00:11:31,060
view spelt and dojo and it's not because

317
00:11:31,060 --> 00:11:32,920
I'm saying use those instead of react

318
00:11:32,920 --> 00:11:35,649
but just a sort of a comparison so I'm

319
00:11:35,649 --> 00:11:37,720
trying to figure out why view is popular

320
00:11:37,720 --> 00:11:39,610
so I look at it and I think this is kind

321
00:11:39,610 --> 00:11:42,040
of like react it's not necessarily

322
00:11:42,040 --> 00:11:44,470
faster but I think the reason people

323
00:11:44,470 --> 00:11:46,660
like it is I think there's two reasons

324
00:11:46,660 --> 00:11:50,410
it's gained popularity one you can kind

325
00:11:50,410 --> 00:11:52,690
of use something that's closer to HTML

326
00:11:52,690 --> 00:11:54,279
so people who historically hate

327
00:11:54,279 --> 00:11:56,290
JavaScript frameworks but maybe they

328
00:11:56,290 --> 00:11:58,389
love to jQuery find it more approachable

329
00:11:58,389 --> 00:12:00,759
and easier to get started with and yet

330
00:12:00,759 --> 00:12:02,319
they can still build real applications

331
00:12:02,319 --> 00:12:04,509
out of it the other reason I think is

332
00:12:04,509 --> 00:12:07,120
that Evan Yu is just very good at

333
00:12:07,120 --> 00:12:08,949
communicating with everyone about how

334
00:12:08,949 --> 00:12:10,329
great the framework is and how to use it

335
00:12:10,329 --> 00:12:12,430
and he's very passionate and it really

336
00:12:12,430 --> 00:12:14,350
shows how much a strong leader of her

337
00:12:14,350 --> 00:12:16,389
project can really drive adoption and

338
00:12:16,389 --> 00:12:20,110
encourage growth smell I don't know how

339
00:12:20,110 --> 00:12:22,480
many of you have heard of svelte I can

340
00:12:22,480 --> 00:12:24,069
barely see I only see like a couple of

341
00:12:24,069 --> 00:12:27,010
hands going up it's intended to be the

342
00:12:27,010 --> 00:12:29,410
magical disappearing UI framework and

343
00:12:29,410 --> 00:12:30,760
the idea behind it is you write some

344
00:12:30,760 --> 00:12:32,589
code following some conventions that are

345
00:12:32,589 --> 00:12:34,420
mostly aligned with modern standards and

346
00:12:34,420 --> 00:12:36,010
you end up with something that doesn't

347
00:12:36,010 --> 00:12:37,389
feel like you used a framework at all

348
00:12:37,389 --> 00:12:38,800
because the build process kind of

349
00:12:38,800 --> 00:12:40,569
removes the pieces you don't need and

350
00:12:40,569 --> 00:12:42,220
that's really nice because by default

351
00:12:42,220 --> 00:12:43,720
you're writing code that's aligned with

352
00:12:43,720 --> 00:12:46,990
modern standards and doing that there

353
00:12:46,990 --> 00:12:48,190
are a lot of ways to measure performance

354
00:12:48,190 --> 00:12:51,160
and to me an ergonomic approach to

355
00:12:51,160 --> 00:12:52,930
building applications is one that's

356
00:12:52,930 --> 00:12:56,740
performant out-of-the-box so there was

357
00:12:56,740 --> 00:12:59,230
an article a few months ago there's this

358
00:12:59,230 --> 00:13:00,760
reference application called the real

359
00:13:00,760 --> 00:13:02,860
world application and the real world

360
00:13:02,860 --> 00:13:05,529
application is intended to give a more

361
00:13:05,529 --> 00:13:09,310
substantial than like to do MVC look at

362
00:13:09,310 --> 00:13:11,410
how you build applications and to tell

363
00:13:11,410 --> 00:13:13,540
you how does a framework actually look

364
00:13:13,540 --> 00:13:15,189
and how does it actually compare in the

365
00:13:15,189 --> 00:13:17,949
real world and so this person took a

366
00:13:17,949 --> 00:13:19,810
bunch of the examples basically took all

367
00:13:19,810 --> 00:13:21,910
the client-side frameworks that were had

368
00:13:21,910 --> 00:13:24,069
referenced examples embers not on there

369
00:13:24,069 --> 00:13:25,449
not because he didn't like ember but

370
00:13:25,449 --> 00:13:27,490
because ember did not provide an example

371
00:13:27,490 --> 00:13:31,209
so and what they found was that svelt

372
00:13:31,209 --> 00:13:33,460
and dojo painted much faster

373
00:13:33,460 --> 00:13:35,110
than any of the other options on there

374
00:13:35,110 --> 00:13:37,210
and app run I think which I hadn't heard

375
00:13:37,210 --> 00:13:38,680
of before but that's kind of cool right

376
00:13:38,680 --> 00:13:42,010
and then a big reason for that is the

377
00:13:42,010 --> 00:13:44,560
initial bundle size for svelte dojo an

378
00:13:44,560 --> 00:13:47,110
app run were really small and that's

379
00:13:47,110 --> 00:13:49,120
because spelt is doing this thing where

380
00:13:49,120 --> 00:13:51,040
it's basically taking all the stuff and

381
00:13:51,040 --> 00:13:52,690
we're moving it at Build time that you

382
00:13:52,690 --> 00:13:55,149
don't need and dojo is basically saying

383
00:13:55,149 --> 00:13:57,430
I'm only going to include for your

384
00:13:57,430 --> 00:13:58,870
initial render the stuff you need to

385
00:13:58,870 --> 00:14:01,600
render upfront so it's doing all the

386
00:14:01,600 --> 00:14:02,890
different optimizations that you might

387
00:14:02,890 --> 00:14:06,160
want we also did a hacker news PWA dojo

388
00:14:06,160 --> 00:14:09,070
example application and I didn't know

389
00:14:09,070 --> 00:14:11,140
lighthouse could get all 100's which is

390
00:14:11,140 --> 00:14:12,850
pretty cool it was pretty amazing

391
00:14:12,850 --> 00:14:15,300
now the reason is we've basically

392
00:14:15,300 --> 00:14:18,520
cheated by only including what you need

393
00:14:18,520 --> 00:14:20,110
to actually render your app now it

394
00:14:20,110 --> 00:14:22,270
sounds simple but a lot of times you're

395
00:14:22,270 --> 00:14:23,709
like oh just use code splitting just use

396
00:14:23,709 --> 00:14:25,330
webpack and then you go down seven

397
00:14:25,330 --> 00:14:26,980
levels of hell and you never actually

398
00:14:26,980 --> 00:14:29,290
get there and the idea behind a good

399
00:14:29,290 --> 00:14:30,910
ergonomics solution is to say alright if

400
00:14:30,910 --> 00:14:32,560
we can have to use webpack you don't

401
00:14:32,560 --> 00:14:34,300
have to be a web pack expert to get the

402
00:14:34,300 --> 00:14:36,160
fastest application instead we'll just

403
00:14:36,160 --> 00:14:38,110
look at what you're doing and we'll

404
00:14:38,110 --> 00:14:43,540
optimize it for you by default so dojos

405
00:14:43,540 --> 00:14:46,540
pros you know they're one way to look at

406
00:14:46,540 --> 00:14:48,640
it obviously when you decide what

407
00:14:48,640 --> 00:14:49,779
framework to use you need to make your

408
00:14:49,779 --> 00:14:51,520
own pros and cons lists based on your

409
00:14:51,520 --> 00:14:54,130
own analysis but the idea is it's got

410
00:14:54,130 --> 00:14:56,410
components they import an export to web

411
00:14:56,410 --> 00:14:58,000
components it's using typescript for

412
00:14:58,000 --> 00:15:00,580
ergonomics it leverages and aligns with

413
00:15:00,580 --> 00:15:02,320
a bunch of modern standards rather than

414
00:15:02,320 --> 00:15:03,610
trying to deviate from them or come up

415
00:15:03,610 --> 00:15:05,529
with its own thing but it's also

416
00:15:05,529 --> 00:15:06,640
something that's really really

417
00:15:06,640 --> 00:15:08,890
straightforward and easy to make fast

418
00:15:08,890 --> 00:15:14,980
and that's kind of nice so optimization

419
00:15:14,980 --> 00:15:17,740
of ergonomics to me means all right if

420
00:15:17,740 --> 00:15:19,300
you're gonna have build system how do

421
00:15:19,300 --> 00:15:21,040
you make an application fast well you

422
00:15:21,040 --> 00:15:22,990
you follow all of Alex Russell's

423
00:15:22,990 --> 00:15:25,600
guidelines for pwace Alex Russell is the

424
00:15:25,600 --> 00:15:27,790
Google standards evangelist who was

425
00:15:27,790 --> 00:15:29,800
originally a dojo co-founder with me and

426
00:15:29,800 --> 00:15:31,570
he's pretty much the get off my lawn

427
00:15:31,570 --> 00:15:34,029
grandfather of JavaScript who talks

428
00:15:34,029 --> 00:15:36,130
about 3G networks and really slow

429
00:15:36,130 --> 00:15:37,870
Android phones and we like to troll I'm

430
00:15:37,870 --> 00:15:39,160
asking him why Google won't buy I'm a

431
00:15:39,160 --> 00:15:42,790
good device okay so starting out with

432
00:15:42,790 --> 00:15:45,220
all the recommendations for PWA s having

433
00:15:45,220 --> 00:15:47,170
a good CLI tooling that will do

434
00:15:47,170 --> 00:15:48,490
what we call build time rendering which

435
00:15:48,490 --> 00:15:50,860
is look at what you need to render first

436
00:15:50,860 --> 00:15:52,750
and build that into the initial bundle

437
00:15:52,750 --> 00:15:55,389
build that HTML and CSS and JavaScript

438
00:15:55,389 --> 00:15:57,700
into that page up front to render it

439
00:15:57,700 --> 00:15:59,889
follow the purple guidelines do code

440
00:15:59,889 --> 00:16:02,649
splitting but the killer for us is okay

441
00:16:02,649 --> 00:16:04,389
yeah we still need to support ie 11

442
00:16:04,389 --> 00:16:07,720
because enterprises but if you don't

443
00:16:07,720 --> 00:16:09,820
need it let's not include it so the idea

444
00:16:09,820 --> 00:16:12,010
with dojo is its evergreen by default

445
00:16:12,010 --> 00:16:14,410
and then you add in the polyfills and

446
00:16:14,410 --> 00:16:16,029
pony fills and backports support you

447
00:16:16,029 --> 00:16:17,800
need so you start out with something

448
00:16:17,800 --> 00:16:19,930
really small and lean whereas dojo one

449
00:16:19,930 --> 00:16:22,089
started out with everything to support

450
00:16:22,089 --> 00:16:25,510
back to ie6 and no way to remove it so

451
00:16:25,510 --> 00:16:27,430
obviously by flipping that around you

452
00:16:27,430 --> 00:16:29,380
start out by supporting the users that

453
00:16:29,380 --> 00:16:31,269
can not only new your fastest

454
00:16:31,269 --> 00:16:33,310
applications first and then you add in

455
00:16:33,310 --> 00:16:35,260
legacy support as an opt-in rather than

456
00:16:35,260 --> 00:16:38,769
an opt-out so like I said we've really

457
00:16:38,769 --> 00:16:40,690
aimed to be lean and I think any organ

458
00:16:40,690 --> 00:16:42,250
AMA créme work should be focused on that

459
00:16:42,250 --> 00:16:44,350
so one you need to make it easy and

460
00:16:44,350 --> 00:16:46,329
consistent to write code you can use

461
00:16:46,329 --> 00:16:47,440
things like typescript

462
00:16:47,440 --> 00:16:48,910
you can use other tools like prettier

463
00:16:48,910 --> 00:16:50,889
and so on and web pack and whatever but

464
00:16:50,889 --> 00:16:53,050
the idea is organ ah mcc's or something

465
00:16:53,050 --> 00:16:54,970
where you write code and you're not

466
00:16:54,970 --> 00:16:56,589
having to make a lot of changes and

467
00:16:56,589 --> 00:16:58,149
things are just natural and work the way

468
00:16:58,149 --> 00:16:58,949
they should

469
00:16:58,949 --> 00:17:02,110
so we aligned with pretty much every

470
00:17:02,110 --> 00:17:04,270
modern pattern and standard that should

471
00:17:04,270 --> 00:17:07,120
be followed and the reason for that is

472
00:17:07,120 --> 00:17:10,689
dojo one was started in 2004 there were

473
00:17:10,689 --> 00:17:13,329
no mobile devices there was no github

474
00:17:13,329 --> 00:17:15,309
there was no promises there was no

475
00:17:15,309 --> 00:17:16,780
module system there was no build

476
00:17:16,780 --> 00:17:19,089
approach there were no web components

477
00:17:19,089 --> 00:17:21,459
there were no array iteration methods

478
00:17:21,459 --> 00:17:22,870
there was no for each there was no

479
00:17:22,870 --> 00:17:25,030
prototype DUP behind we had to invent

480
00:17:25,030 --> 00:17:27,520
all of these things and of course we

481
00:17:27,520 --> 00:17:29,290
didn't invent them the right way we just

482
00:17:29,290 --> 00:17:31,840
came up with a way and the problem with

483
00:17:31,840 --> 00:17:33,669
that is it's really cool to innovate and

484
00:17:33,669 --> 00:17:36,490
and draw things forward but then you

485
00:17:36,490 --> 00:17:38,020
become incompatible with the rest of the

486
00:17:38,020 --> 00:17:40,000
web and that's not good so what we've

487
00:17:40,000 --> 00:17:41,380
done is we've said let's find all the

488
00:17:41,380 --> 00:17:42,640
modern standards that are out there that

489
00:17:42,640 --> 00:17:44,110
makes sense that helped you make a fast

490
00:17:44,110 --> 00:17:47,320
application but let's not impose the

491
00:17:47,320 --> 00:17:49,660
weight of those standards on you so use

492
00:17:49,660 --> 00:17:51,250
them the way the language intends them

493
00:17:51,250 --> 00:17:53,530
and I'll give a couple examples right

494
00:17:53,530 --> 00:17:58,090
here so for example in dojo and we've

495
00:17:58,090 --> 00:17:59,169
been doing this for a couple of years

496
00:17:59,169 --> 00:18:01,059
now all which

497
00:18:01,059 --> 00:18:03,730
or components by default our importa

498
00:18:03,730 --> 00:18:06,249
bilawal as web components the idea being

499
00:18:06,249 --> 00:18:08,470
I create this nice widget with dojo I

500
00:18:08,470 --> 00:18:10,090
want to use it an angular application or

501
00:18:10,090 --> 00:18:11,259
a react application or a view

502
00:18:11,259 --> 00:18:12,940
application as long as I can get a web

503
00:18:12,940 --> 00:18:14,470
component working there I can import it

504
00:18:14,470 --> 00:18:16,360
or export it now web components and

505
00:18:16,360 --> 00:18:17,950
custom elements are not a perfect

506
00:18:17,950 --> 00:18:20,080
standard but that's sort of the first

507
00:18:20,080 --> 00:18:21,639
path to interoperability between

508
00:18:21,639 --> 00:18:23,740
component libraries and systems and

509
00:18:23,740 --> 00:18:26,259
because dojos bundle size is so small

510
00:18:26,259 --> 00:18:28,749
it's not inconceivable to think that

511
00:18:28,749 --> 00:18:31,269
it's a bad idea to include dojo to be

512
00:18:31,269 --> 00:18:33,279
able to do that how many of you've used

513
00:18:33,279 --> 00:18:34,840
intersection observers or resize

514
00:18:34,840 --> 00:18:38,019
observers I'm not seeing any hands go up

515
00:18:38,019 --> 00:18:39,639
but I might just be blind by the light

516
00:18:39,639 --> 00:18:42,159
at this point ok so narrow section

517
00:18:42,159 --> 00:18:44,289
observer and a resize observer are new

518
00:18:44,289 --> 00:18:46,570
observable style ap eyes that are in

519
00:18:46,570 --> 00:18:48,820
browsers that help you know if something

520
00:18:48,820 --> 00:18:51,190
has moved into view of a particular box

521
00:18:51,190 --> 00:18:54,249
or if the browser has resized itself so

522
00:18:54,249 --> 00:18:55,570
we used to have to do a lot of hacks to

523
00:18:55,570 --> 00:18:57,100
do like infinite scrolling lists and

524
00:18:57,100 --> 00:18:59,559
resize detection and we aligned with

525
00:18:59,559 --> 00:19:00,970
those as well as web animations and

526
00:19:00,970 --> 00:19:02,740
focus events now the reason these are

527
00:19:02,740 --> 00:19:05,200
particularly interesting is in the react

528
00:19:05,200 --> 00:19:06,580
world I think I'm getting ahead of

529
00:19:06,580 --> 00:19:10,539
myself yeah in the react world typically

530
00:19:10,539 --> 00:19:12,070
when you need to do something on a Dom

531
00:19:12,070 --> 00:19:14,049
node you have to sort of go through a

532
00:19:14,049 --> 00:19:15,519
bunch of Hoops to get a reference to a

533
00:19:15,519 --> 00:19:17,619
node to then do something what we've

534
00:19:17,619 --> 00:19:19,570
done with dojo is we've said instead of

535
00:19:19,570 --> 00:19:21,549
breaking the reactive architecture with

536
00:19:21,549 --> 00:19:25,600
a V Dom system we instead say you know

537
00:19:25,600 --> 00:19:27,549
what those are cool things to expose

538
00:19:27,549 --> 00:19:28,869
let's make them as available available

539
00:19:28,869 --> 00:19:31,690
as properties that you can react to it's

540
00:19:31,690 --> 00:19:33,129
basically anytime we find something

541
00:19:33,129 --> 00:19:34,720
where it's like man I wish I just had a

542
00:19:34,720 --> 00:19:36,549
reference to a Dom node instead of

543
00:19:36,549 --> 00:19:38,289
saying here's a Dom node and breaking

544
00:19:38,289 --> 00:19:40,539
the architecture we say well why and

545
00:19:40,539 --> 00:19:42,580
then we provide those properties as

546
00:19:42,580 --> 00:19:45,879
something you can react to I don't know

547
00:19:45,879 --> 00:19:47,320
if you can see that because I can't see

548
00:19:47,320 --> 00:19:49,690
it let me come out of the light yeah so

549
00:19:49,690 --> 00:19:52,690
the idea here is basically you import

550
00:19:52,690 --> 00:19:55,600
this meta property and this one's for an

551
00:19:55,600 --> 00:19:57,970
intersection observer and then you can

552
00:19:57,970 --> 00:20:00,249
just react to its properties and changes

553
00:20:00,249 --> 00:20:02,350
later so rather than having to get the

554
00:20:02,350 --> 00:20:03,970
node and figure out something's inside

555
00:20:03,970 --> 00:20:06,009
of something else you can just use this

556
00:20:06,009 --> 00:20:08,980
API and quickly work with it inside of a

557
00:20:08,980 --> 00:20:10,690
render function to determine if

558
00:20:10,690 --> 00:20:12,190
something is inside of something else

559
00:20:12,190 --> 00:20:14,200
and then react to that so the idea is if

560
00:20:14,200 --> 00:20:14,440
you

561
00:20:14,440 --> 00:20:16,360
got a long page with a lot of images so

562
00:20:16,360 --> 00:20:17,980
we've got a newsfeed or some other UI

563
00:20:17,980 --> 00:20:18,669
like that

564
00:20:18,669 --> 00:20:20,409
you don't want to load all the the

565
00:20:20,409 --> 00:20:24,309
content and images down below so as the

566
00:20:24,309 --> 00:20:26,049
user Scrolls then you start to prefetch

567
00:20:26,049 --> 00:20:27,879
the images or prefetch the content that

568
00:20:27,879 --> 00:20:30,070
you want to render it's a really nice

569
00:20:30,070 --> 00:20:33,730
fast way to do that we've tried to align

570
00:20:33,730 --> 00:20:35,529
with standards so instead of saying oh

571
00:20:35,529 --> 00:20:37,480
let's use SAS well let's use less let's

572
00:20:37,480 --> 00:20:38,889
use stylus we've aligned or something

573
00:20:38,889 --> 00:20:41,169
called post CSS and what that is is it's

574
00:20:41,169 --> 00:20:43,779
kind of like babble but for styling so

575
00:20:43,779 --> 00:20:46,330
it takes all the CSS next properties

576
00:20:46,330 --> 00:20:48,190
like the variables what I call them

577
00:20:48,190 --> 00:20:49,570
something else but the variables and the

578
00:20:49,570 --> 00:20:51,970
nesting of things and whatnot lets you

579
00:20:51,970 --> 00:20:54,639
write CSS syntax as the spec proposes it

580
00:20:54,639 --> 00:20:56,769
and then transpires it back to CSS that

581
00:20:56,769 --> 00:20:58,899
works in today's browsers and then we

582
00:20:58,899 --> 00:21:00,850
also do something that's kind of fun in

583
00:21:00,850 --> 00:21:05,019
dojo which is you write CSS modules for

584
00:21:05,019 --> 00:21:06,669
your components you write a set of

585
00:21:06,669 --> 00:21:09,009
classes for that component and then we

586
00:21:09,009 --> 00:21:10,960
scope them unique to that component so

587
00:21:10,960 --> 00:21:12,940
we kind of break the C part of CSS so

588
00:21:12,940 --> 00:21:14,470
just be called style sheets right and

589
00:21:14,470 --> 00:21:18,100
then what we do is we use typescript to

590
00:21:18,100 --> 00:21:20,830
compile that CSS into a typescript

591
00:21:20,830 --> 00:21:22,779
module then we can import in your widget

592
00:21:22,779 --> 00:21:25,029
you're like why would you do that well

593
00:21:25,029 --> 00:21:26,500
it's just a list of string names but

594
00:21:26,500 --> 00:21:28,750
then for that IDE experience when you go

595
00:21:28,750 --> 00:21:31,269
to a theme or style your component you

596
00:21:31,269 --> 00:21:33,159
can only include the class names that

597
00:21:33,159 --> 00:21:34,809
have been scoped to that widget so you

598
00:21:34,809 --> 00:21:35,860
don't have to go back and look at that

599
00:21:35,860 --> 00:21:38,679
file you don't have to accidentally typo

600
00:21:38,679 --> 00:21:40,149
the class name and wonder why things

601
00:21:40,149 --> 00:21:41,820
aren't rendering the way they should

602
00:21:41,820 --> 00:21:44,230
that sounds like a little tiny thing

603
00:21:44,230 --> 00:21:45,970
maybe that saves you five or ten seconds

604
00:21:45,970 --> 00:21:48,279
a day but that's what economics is all

605
00:21:48,279 --> 00:21:49,600
about it's looking for those silly

606
00:21:49,600 --> 00:21:51,190
little pain points and trying to refine

607
00:21:51,190 --> 00:21:53,799
them and make them a bit better we also

608
00:21:53,799 --> 00:21:55,750
support internationalization and

609
00:21:55,750 --> 00:21:57,399
accessibility out of the box of all of

610
00:21:57,399 --> 00:21:59,590
our components internationalization as a

611
00:21:59,590 --> 00:22:02,350
spec is almost as large as all of atma

612
00:22:02,350 --> 00:22:05,980
script 2000 whatever year we're in 2018

613
00:22:05,980 --> 00:22:07,990
plus all the years before it's just a

614
00:22:07,990 --> 00:22:09,820
very convoluted and involved spec and

615
00:22:09,820 --> 00:22:12,039
it's still evolving and doing that out

616
00:22:12,039 --> 00:22:13,509
of the box is really important to be

617
00:22:13,509 --> 00:22:17,620
able to support that efficiently how

618
00:22:17,620 --> 00:22:19,179
many of you are British or non-american

619
00:22:19,179 --> 00:22:23,470
a few ok so you may have heard of this

620
00:22:23,470 --> 00:22:25,299
called routing and you're probably

621
00:22:25,299 --> 00:22:26,619
wondering why everyone here calls it

622
00:22:26,619 --> 00:22:28,310
routing I don't know the answer

623
00:22:28,310 --> 00:22:31,790
but I'm bilingual here bullet forms of

624
00:22:31,790 --> 00:22:34,880
English so there we go we we've done is

625
00:22:34,880 --> 00:22:35,990
we've said you know one of the benefits

626
00:22:35,990 --> 00:22:38,750
of having a set of things that actually

627
00:22:38,750 --> 00:22:41,390
work together so previously for years

628
00:22:41,390 --> 00:22:43,220
they've said microframeworks Vennela je

629
00:22:43,220 --> 00:22:45,620
s for the win and then you realize when

630
00:22:45,620 --> 00:22:47,120
you build up a bunch of things you've

631
00:22:47,120 --> 00:22:49,520
got 500 Meg's of NPM dependencies and

632
00:22:49,520 --> 00:22:51,740
and you've just got a lot of technical

633
00:22:51,740 --> 00:22:53,050
debt but you've got a lot of repetition

634
00:22:53,050 --> 00:22:57,380
so knowing that hey I've got a component

635
00:22:57,380 --> 00:22:59,750
system that works this way we have a

636
00:22:59,750 --> 00:23:01,460
routing system that can be added after

637
00:23:01,460 --> 00:23:03,950
the fact so the idea behind an ergonomic

638
00:23:03,950 --> 00:23:05,660
routing system is one that's declarative

639
00:23:05,660 --> 00:23:06,470
where you've written an application

640
00:23:06,470 --> 00:23:08,750
you've written some components you've

641
00:23:08,750 --> 00:23:10,430
managed your state in some sort of store

642
00:23:10,430 --> 00:23:12,590
and then you can add routing on top of

643
00:23:12,590 --> 00:23:14,120
that without having to rewrite any of

644
00:23:14,120 --> 00:23:15,590
your components or any of your logic or

645
00:23:15,590 --> 00:23:20,060
any of your interactions we have an

646
00:23:20,060 --> 00:23:22,310
application state store it started out

647
00:23:22,310 --> 00:23:25,040
very similar to redux not surprising but

648
00:23:25,040 --> 00:23:27,080
we've diverged quite significantly

649
00:23:27,080 --> 00:23:29,480
probably the biggest thing we don't like

650
00:23:29,480 --> 00:23:32,570
about redux is it's not always clear

651
00:23:32,570 --> 00:23:34,310
where and redux you're supposed to do

652
00:23:34,310 --> 00:23:35,720
things where do you put your business

653
00:23:35,720 --> 00:23:37,460
logic where do you do your reducers and

654
00:23:37,460 --> 00:23:40,160
on and on and you ask the redux team and

655
00:23:40,160 --> 00:23:41,150
they give you different answers and

656
00:23:41,150 --> 00:23:42,830
sometimes their answers change over time

657
00:23:42,830 --> 00:23:45,140
so the idea behind our stores we've got

658
00:23:45,140 --> 00:23:47,960
three separate sort of places in a store

659
00:23:47,960 --> 00:23:50,390
and it's very clear like this is where

660
00:23:50,390 --> 00:23:53,300
you do your reduction style code this is

661
00:23:53,300 --> 00:23:54,590
where you do your business logic and

662
00:23:54,590 --> 00:23:55,130
this is where you do your

663
00:23:55,130 --> 00:23:57,830
transformations and so forth and the

664
00:23:57,830 --> 00:23:59,690
benefit of that is certainty and

665
00:23:59,690 --> 00:24:01,730
consistency so that if you've worked

666
00:24:01,730 --> 00:24:03,170
with an odor store in one application

667
00:24:03,170 --> 00:24:05,600
and you come to another application from

668
00:24:05,600 --> 00:24:06,770
a different company it won't feel

669
00:24:06,770 --> 00:24:10,010
completely different hopefully again

670
00:24:10,010 --> 00:24:11,780
this is talk is not like telling you

671
00:24:11,780 --> 00:24:14,510
what we did in dojo mostly to sort of

672
00:24:14,510 --> 00:24:16,280
contrast it with some of the things that

673
00:24:16,280 --> 00:24:18,530
we observe and react because we do quite

674
00:24:18,530 --> 00:24:20,120
a bit of work with react as well so it's

675
00:24:20,120 --> 00:24:21,890
not like I'm trying to say all you react

676
00:24:21,890 --> 00:24:23,180
users are wrong and you should come you

677
00:24:23,180 --> 00:24:25,010
stay oh that's not the intent here just

678
00:24:25,010 --> 00:24:26,990
to sort of tell you the things we do

679
00:24:26,990 --> 00:24:28,100
because maybe they'll help make your

680
00:24:28,100 --> 00:24:31,480
react applications better as well

681
00:24:31,480 --> 00:24:33,680
joe-joe one was particularly how many of

682
00:24:33,680 --> 00:24:35,390
you actually used dojo one by the way

683
00:24:35,390 --> 00:24:36,710
okay

684
00:24:36,710 --> 00:24:38,480
so ten twenty percent more than I

685
00:24:38,480 --> 00:24:41,030
expected so that's cool so dojo one

686
00:24:41,030 --> 00:24:42,350
started out with not the

687
00:24:42,350 --> 00:24:44,120
testsuite I mean it was really difficult

688
00:24:44,120 --> 00:24:46,370
to do the things we do today dojo to has

689
00:24:46,370 --> 00:24:48,919
near 100% code coverage analysis on

690
00:24:48,919 --> 00:24:50,600
everything every kind of test you can

691
00:24:50,600 --> 00:24:54,740
imagine and also a set of utilities I

692
00:24:54,740 --> 00:24:56,090
would say it's somewhat similar to

693
00:24:56,090 --> 00:24:58,700
enzyme but for the idea is you want to

694
00:24:58,700 --> 00:25:00,559
be able to test components as easily as

695
00:25:00,559 --> 00:25:02,690
you can test raw dom nodes otherwise it

696
00:25:02,690 --> 00:25:03,769
can become really difficult and tedious

697
00:25:03,769 --> 00:25:07,519
to write tests for your widgets so a

698
00:25:07,519 --> 00:25:10,100
dojo application might just use these

699
00:25:10,100 --> 00:25:11,960
api so might use the core framework and

700
00:25:11,960 --> 00:25:14,210
a build system and then you might use

701
00:25:14,210 --> 00:25:15,950
some widgets and themes maybe the test

702
00:25:15,950 --> 00:25:17,659
tooling and maybe some interoperability

703
00:25:17,659 --> 00:25:19,909
the interoperability package includes

704
00:25:19,909 --> 00:25:22,070
things like support for Redux so if you

705
00:25:22,070 --> 00:25:23,210
have a Redux tour and you want to

706
00:25:23,210 --> 00:25:24,799
experiment with the dojo application you

707
00:25:24,799 --> 00:25:31,100
can do that su dojo and pretty much most

708
00:25:31,100 --> 00:25:33,620
modern frameworks claim to be reactive

709
00:25:33,620 --> 00:25:35,389
and that's not something react invented

710
00:25:35,389 --> 00:25:37,370
like the previous talk said almost

711
00:25:37,370 --> 00:25:39,320
nothing is new in javascript almost

712
00:25:39,320 --> 00:25:40,549
everything is pulled from somewhere else

713
00:25:40,549 --> 00:25:42,860
so the idea of reactive architectures is

714
00:25:42,860 --> 00:25:46,159
not native JavaScript but these are the

715
00:25:46,159 --> 00:25:48,019
things that dojo does and that pretty

716
00:25:48,019 --> 00:25:52,100
much most modern frameworks do so if you

717
00:25:52,100 --> 00:25:53,659
want to learn about dojo we're in a lot

718
00:25:53,659 --> 00:25:55,519
of places but the key is if you're

719
00:25:55,519 --> 00:25:57,259
looking at something that looks like es

720
00:25:57,259 --> 00:25:59,330
3 or es5 code you're in the wrong place

721
00:25:59,330 --> 00:26:01,429
that's the old dojo so just forget about

722
00:26:01,429 --> 00:26:02,840
that unless you still need to support

723
00:26:02,840 --> 00:26:04,460
that if you're looking for a modern

724
00:26:04,460 --> 00:26:06,080
typescript framework that's where dojo

725
00:26:06,080 --> 00:26:08,149
Deo comes into place how many of you

726
00:26:08,149 --> 00:26:13,039
views code sandbox not a lot okay it is

727
00:26:13,039 --> 00:26:16,580
the coolest online editor ever because

728
00:26:16,580 --> 00:26:18,799
it was it's written by a couple of

729
00:26:18,799 --> 00:26:20,750
people from the Netherlands that are in

730
00:26:20,750 --> 00:26:23,600
their late teens or early 20s and it is

731
00:26:23,600 --> 00:26:25,820
phenomenal so it takes Monaco which is

732
00:26:25,820 --> 00:26:30,350
the editor like the actual IDE portion

733
00:26:30,350 --> 00:26:34,610
of vs code but it works in a browser but

734
00:26:34,610 --> 00:26:36,529
then they've taken that and they've

735
00:26:36,529 --> 00:26:38,659
added like all sorts of support for

736
00:26:38,659 --> 00:26:42,190
features so we can do like typescript

737
00:26:42,190 --> 00:26:44,779
typescript basically error detection and

738
00:26:44,779 --> 00:26:47,210
validation in the browser we can do web

739
00:26:47,210 --> 00:26:50,120
pack builds on the fly we can do CSS

740
00:26:50,120 --> 00:26:51,350
compilation on the fly it's just

741
00:26:51,350 --> 00:26:53,120
phenomenal and they have templates for

742
00:26:53,120 --> 00:26:55,610
react and angular and dojo and if you

743
00:26:55,610 --> 00:26:57,350
and developed in a handful of other

744
00:26:57,350 --> 00:26:59,600
frameworks so it's really quick as like

745
00:26:59,600 --> 00:27:00,980
you just want to try something out or

746
00:27:00,980 --> 00:27:02,420
see an example it's a great environment

747
00:27:02,420 --> 00:27:07,250
to try that out so getting involved with

748
00:27:07,250 --> 00:27:08,960
dojo we're part of the Jas Foundation

749
00:27:08,960 --> 00:27:10,640
which is one of the other sponsors here

750
00:27:10,640 --> 00:27:13,010
the Jas foundation was actually started

751
00:27:13,010 --> 00:27:14,510
as a merger between the jQuery

752
00:27:14,510 --> 00:27:17,000
foundation and dojo Foundation and it's

753
00:27:17,000 --> 00:27:19,070
an open source foundation that the idea

754
00:27:19,070 --> 00:27:21,110
is to protect a project from turning

755
00:27:21,110 --> 00:27:24,680
evil so probably the biggest uproar

756
00:27:24,680 --> 00:27:26,030
until about a year and a half ago with

757
00:27:26,030 --> 00:27:28,850
react was that react had this weird

758
00:27:28,850 --> 00:27:30,950
clause about patents that no one

759
00:27:30,950 --> 00:27:33,740
understood in their licensing and until

760
00:27:33,740 --> 00:27:35,060
enough people complained I think it was

761
00:27:35,060 --> 00:27:36,530
WordPress that finally complained and

762
00:27:36,530 --> 00:27:38,150
they changed the license but the idea

763
00:27:38,150 --> 00:27:39,410
behind the foundation is to prevent

764
00:27:39,410 --> 00:27:40,610
those types of issues from ever coming

765
00:27:40,610 --> 00:27:43,910
up we have a lot of help online as any

766
00:27:43,910 --> 00:27:46,490
good ergonomic framework should have and

767
00:27:46,490 --> 00:27:47,990
then we also offer a commercial support

768
00:27:47,990 --> 00:27:49,520
for people so I'll talk about the site

769
00:27:49,520 --> 00:27:50,750
pen in a moment but it's not really a

770
00:27:50,750 --> 00:27:53,570
big deal but so the idea behind

771
00:27:53,570 --> 00:27:56,750
ergonomics is not one little thing it's

772
00:27:56,750 --> 00:27:58,370
about looking at all these little pieces

773
00:27:58,370 --> 00:28:00,020
and finding a way to make things better

774
00:28:00,020 --> 00:28:02,120
so it's about creating applications that

775
00:28:02,120 --> 00:28:03,680
are fast it's about looking for pain

776
00:28:03,680 --> 00:28:05,060
points things that break the

777
00:28:05,060 --> 00:28:08,150
architecture variable names package

778
00:28:08,150 --> 00:28:10,940
resources bundle sizes technical debt

779
00:28:10,940 --> 00:28:12,800
and just not accepting things that don't

780
00:28:12,800 --> 00:28:15,140
feel right so I've seen a few talks here

781
00:28:15,140 --> 00:28:17,960
where I admit I kind of got bored with

782
00:28:17,960 --> 00:28:19,610
the talk and it wasn't that I'm an

783
00:28:19,610 --> 00:28:22,040
asshole well okay maybe I am but I

784
00:28:22,040 --> 00:28:23,990
looked at it I'm like I don't like that

785
00:28:23,990 --> 00:28:25,730
variable name right and that's such a

786
00:28:25,730 --> 00:28:27,320
stupid reason to say I don't want to

787
00:28:27,320 --> 00:28:29,270
listen to this talk but to me it's like

788
00:28:29,270 --> 00:28:31,850
if you pick a variable name that feels

789
00:28:31,850 --> 00:28:34,250
like it's giving me cognitive dissonance

790
00:28:34,250 --> 00:28:36,560
while I'm reading it I'm just

791
00:28:36,560 --> 00:28:37,940
disagreeing with you as a framework

792
00:28:37,940 --> 00:28:40,960
author that this is wrong right and so

793
00:28:40,960 --> 00:28:43,520
when you're caring about your users

794
00:28:43,520 --> 00:28:45,260
enough to say I want to make it so you

795
00:28:45,260 --> 00:28:47,930
know what I should look at every object

796
00:28:47,930 --> 00:28:50,150
or class name or whatever or property

797
00:28:50,150 --> 00:28:51,680
name and it should be obvious what it

798
00:28:51,680 --> 00:28:52,070
does

799
00:28:52,070 --> 00:28:54,410
I shouldn't have to wonder hmm I wonder

800
00:28:54,410 --> 00:28:58,760
what that is about okay so react already

801
00:28:58,760 --> 00:29:00,530
did that I would love that to be the new

802
00:29:00,530 --> 00:29:02,090
meme from this conference so I think it

803
00:29:02,090 --> 00:29:03,650
would be funny I think it'd be great to

804
00:29:03,650 --> 00:29:04,880
troll the react team but you don't have

805
00:29:04,880 --> 00:29:08,600
to so the question is okay in five years

806
00:29:08,600 --> 00:29:09,410
will react still

807
00:29:09,410 --> 00:29:11,570
here absolutely it's real going away of

808
00:29:11,570 --> 00:29:14,570
course not has react heavily inspired

809
00:29:14,570 --> 00:29:16,250
others so you know the question was like

810
00:29:16,250 --> 00:29:18,500
all these things from dojo made their

811
00:29:18,500 --> 00:29:19,970
way into standards made their way into

812
00:29:19,970 --> 00:29:22,250
react in other frameworks is react doing

813
00:29:22,250 --> 00:29:23,690
the same thing to other frameworks today

814
00:29:23,690 --> 00:29:27,770
absolutely like without a doubt does

815
00:29:27,770 --> 00:29:30,560
everything you do have to be react no I

816
00:29:30,560 --> 00:29:33,070
mean why not right

817
00:29:33,070 --> 00:29:36,230
so can we safely say react or did that I

818
00:29:36,230 --> 00:29:37,880
would say yes now that's my own

819
00:29:37,880 --> 00:29:39,350
hypothesis you can come to your own

820
00:29:39,350 --> 00:29:41,930
conclusions of course and could we say

821
00:29:41,930 --> 00:29:43,910
dojo already did that again we'll ask

822
00:29:43,910 --> 00:29:45,410
that question now and we'll have certain

823
00:29:45,410 --> 00:29:50,900
five years hopefully so to conclude work

824
00:29:50,900 --> 00:29:51,950
with site pen we've been around since

825
00:29:51,950 --> 00:29:54,380
2000 which is like you know a hundred

826
00:29:54,380 --> 00:29:57,380
million years in JavaScript time and we

827
00:29:57,380 --> 00:30:00,320
are also a remote consulting company

828
00:30:00,320 --> 00:30:01,640
we've been around for a long time and we

829
00:30:01,640 --> 00:30:03,350
help lots of great companies try to do

830
00:30:03,350 --> 00:30:05,780
better with JavaScript the fun thing is

831
00:30:05,780 --> 00:30:07,610
we actually train Facebook back in like

832
00:30:07,610 --> 00:30:09,320
2008 on how to write JavaScript code

833
00:30:09,320 --> 00:30:11,240
which is cool so back when they were

834
00:30:11,240 --> 00:30:12,890
just PHP people who did not know how to

835
00:30:12,890 --> 00:30:14,510
write good JavaScript we went in and

836
00:30:14,510 --> 00:30:15,650
taught them that we helped make Facebook

837
00:30:15,650 --> 00:30:18,050
fast so we've helped lots of companies

838
00:30:18,050 --> 00:30:19,690
throughout the years make the web better

839
00:30:19,690 --> 00:30:23,360
we also do some really fun things so if

840
00:30:23,360 --> 00:30:25,220
you haven't gotten your swag bag yet get

841
00:30:25,220 --> 00:30:26,540
it if you haven't looked inside of it

842
00:30:26,540 --> 00:30:28,730
you'll find one of these who's open this

843
00:30:28,730 --> 00:30:31,730
yet a few people this is a card game we

844
00:30:31,730 --> 00:30:33,050
created called milestone mam it's not

845
00:30:33,050 --> 00:30:34,760
just a deck of cards it's a deck of

846
00:30:34,760 --> 00:30:36,080
cards about everything that goes wrong

847
00:30:36,080 --> 00:30:38,720
in projects so the mayhem cards are the

848
00:30:38,720 --> 00:30:40,340
fun cards just like the grim repo who's

849
00:30:40,340 --> 00:30:41,390
the guy who pushed us to production

850
00:30:41,390 --> 00:30:43,550
without testing there's the scope creep

851
00:30:43,550 --> 00:30:45,950
who everyone hates and the idea is the

852
00:30:45,950 --> 00:30:47,300
game is kind of played like blackjack

853
00:30:47,300 --> 00:30:49,850
meets Russian roulette which is kind of

854
00:30:49,850 --> 00:30:51,140
like how software development works

855
00:30:51,140 --> 00:30:53,480
basically you're a project manager yes

856
00:30:53,480 --> 00:30:55,220
you're a project manager trying to get

857
00:30:55,220 --> 00:30:57,200
to 20 story points before your opponent

858
00:30:57,200 --> 00:30:59,090
so if you come to the fireside chat

859
00:30:59,090 --> 00:31:00,260
tonight bring your game and I'll show

860
00:31:00,260 --> 00:31:03,560
you how to play we also run a podcast

861
00:31:03,560 --> 00:31:05,330
called talk script which is kind of fun

862
00:31:05,330 --> 00:31:07,220
and on the table out there there should

863
00:31:07,220 --> 00:31:09,350
still be some MMS that our top script

864
00:31:09,350 --> 00:31:11,840
branded they taste as good as our

865
00:31:11,840 --> 00:31:13,970
content is so we've also been

866
00:31:13,970 --> 00:31:15,620
interviewing a lot of the speakers here

867
00:31:15,620 --> 00:31:17,000
so that content will be online in the

868
00:31:17,000 --> 00:31:20,330
next couple weeks so I don't know how

869
00:31:20,330 --> 00:31:22,100
much time that is but I hope it's about

870
00:31:22,100 --> 00:31:23,149
the right time so thank

871
00:31:23,149 --> 00:31:23,960
for coming

