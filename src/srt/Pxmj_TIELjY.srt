1
00:00:00,670 --> 00:00:12,550

ah my name is Justin Meyer I work for

2
00:00:12,550 --> 00:00:15,160
Jupiter JavaScript and salty all we do

3
00:00:15,160 --> 00:00:17,230
is JavaScript consulting and today I'm

4
00:00:17,230 --> 00:00:19,000
talk a little bit about JavaScript MVC

5
00:00:19,000 --> 00:00:21,090
and you might be wondering what is

6
00:00:21,090 --> 00:00:25,420
JavaScript MVC JavaScript MVC is taking

7
00:00:25,420 --> 00:00:27,310
all of our last three years experience

8
00:00:27,310 --> 00:00:29,350
writing jQuery applications and then

9
00:00:29,350 --> 00:00:31,359
injecting them into the ass of jQuery

10
00:00:31,359 --> 00:00:33,909
what Jake wit what it is is JavaScript

11
00:00:33,909 --> 00:00:36,219
it's it's jQuery on steroids all right

12
00:00:36,219 --> 00:00:39,489
that is JavaScript MVC and yeah so

13
00:00:39,489 --> 00:00:42,339
that's us but there is no you know this

14
00:00:42,339 --> 00:00:44,019
isn't the MLB there's you can use

15
00:00:44,019 --> 00:00:46,229
steroids in your JavaScript development

16
00:00:46,229 --> 00:00:49,269
so what makes a real big strong beefy

17
00:00:49,269 --> 00:00:52,209
JavaScript application that's quality

18
00:00:52,209 --> 00:00:56,229
maintainability and development time so

19
00:00:56,229 --> 00:00:58,269
what are we what are we juicing on with

20
00:00:58,269 --> 00:01:00,940
JavaScript MVC well for quality we got

21
00:01:00,940 --> 00:01:03,360
like the HGH of dependency management

22
00:01:03,360 --> 00:01:06,729
air reporting and testing for

23
00:01:06,729 --> 00:01:08,649
maintainability we've got the MVC

24
00:01:08,649 --> 00:01:10,710
architecture the thin server

25
00:01:10,710 --> 00:01:14,350
architecture of like is the gym and for

26
00:01:14,350 --> 00:01:16,750
development time we got like the android

27
00:01:16,750 --> 00:01:21,219
or and row of generators and widgets and

28
00:01:21,219 --> 00:01:23,259
things like that so or talk today about

29
00:01:23,259 --> 00:01:25,810
is like all these little tiny components

30
00:01:25,810 --> 00:01:28,210
that with three point o are all going to

31
00:01:28,210 --> 00:01:29,710
become individual that you can use

32
00:01:29,710 --> 00:01:31,450
independent of the entire framework and

33
00:01:31,450 --> 00:01:33,880
how the combination of them you can

34
00:01:33,880 --> 00:01:36,399
really build large enterprise jquery

35
00:01:36,399 --> 00:01:40,060
applications so the first thing i want

36
00:01:40,060 --> 00:01:41,289
to talk about is thin serve our

37
00:01:41,289 --> 00:01:43,869
architecture when we're hired by our

38
00:01:43,869 --> 00:01:47,049
clients it's invariably to clean up the

39
00:01:47,049 --> 00:01:51,219
mess that javed ajax left behind see ten

40
00:01:51,219 --> 00:01:52,689
years ago we really had it all figured

41
00:01:52,689 --> 00:01:56,740
out right the the server would just get

42
00:01:56,740 --> 00:01:59,920
HTTP requests and respond with HTML that

43
00:01:59,920 --> 00:02:01,869
could pretty much do everything and then

44
00:02:01,869 --> 00:02:04,359
ajax came around completely uninvited

45
00:02:04,359 --> 00:02:07,030
and just messed up everything because we

46
00:02:07,030 --> 00:02:09,190
were left medium to decide do we put

47
00:02:09,190 --> 00:02:10,869
this functionality on the server do we

48
00:02:10,869 --> 00:02:13,239
put on the client the lines got blurred

49
00:02:13,239 --> 00:02:14,200
responsibilities got

50
00:02:14,200 --> 00:02:16,750
shared and this is kind of what we do it

51
00:02:16,750 --> 00:02:20,200
is cleaning this up with jQuery so what

52
00:02:20,200 --> 00:02:23,160
is then sir architecture well there's a

53
00:02:23,160 --> 00:02:30,220
semi and a problem so since our

54
00:02:30,220 --> 00:02:32,470
architecture is really an approach to

55
00:02:32,470 --> 00:02:34,030
developing this where it's kind of

56
00:02:34,030 --> 00:02:35,800
draconian that just says do not produce

57
00:02:35,800 --> 00:02:38,349
HTM on your server except to just get

58
00:02:38,349 --> 00:02:41,470
your page started and everything is

59
00:02:41,470 --> 00:02:43,269
service based because it really benefits

60
00:02:43,269 --> 00:02:46,480
from the you know service organization

61
00:02:46,480 --> 00:02:47,650
everybody's been talking about for years

62
00:02:47,650 --> 00:02:51,610
but nobody really does so the first

63
00:02:51,610 --> 00:02:53,019
thing for jobs should we see is it kind

64
00:02:53,019 --> 00:02:55,239
of leans towards an application

65
00:02:55,239 --> 00:02:56,650
architecture kind of like this you don't

66
00:02:56,650 --> 00:02:58,450
have to develop like this but it really

67
00:02:58,450 --> 00:03:00,970
wants you to there's a lot of benefits

68
00:03:00,970 --> 00:03:02,769
to this and I don't have time to go into

69
00:03:02,769 --> 00:03:05,200
really any of them but Peter Svensson

70
00:03:05,200 --> 00:03:08,049
he's around somewhere here he gave a

71
00:03:08,049 --> 00:03:10,120
google talk about in server architecture

72
00:03:10,120 --> 00:03:12,190
where if you haven't looked at it please

73
00:03:12,190 --> 00:03:13,750
look that up because it goes into all

74
00:03:13,750 --> 00:03:15,459
these great benefits and it's a great

75
00:03:15,459 --> 00:03:17,799
way to build your applications okay so

76
00:03:17,799 --> 00:03:21,370
the first thing we noticed when we were

77
00:03:21,370 --> 00:03:23,410
building these large giant JavaScript

78
00:03:23,410 --> 00:03:26,230
applications is that if they produce a

79
00:03:26,230 --> 00:03:28,299
lot of files but at least they should

80
00:03:28,299 --> 00:03:29,519
have been because we weren't actually

81
00:03:29,519 --> 00:03:32,980
creating a bunch of files because

82
00:03:32,980 --> 00:03:34,150
there's all this overhead where you got

83
00:03:34,150 --> 00:03:35,829
to like add some functionality if you

84
00:03:35,829 --> 00:03:37,780
want it to be in a its own file like it

85
00:03:37,780 --> 00:03:40,209
should be you've got the problem of like

86
00:03:40,209 --> 00:03:41,590
actually adding it to your build script

87
00:03:41,590 --> 00:03:43,329
so the first thing we worked on because

88
00:03:43,329 --> 00:03:46,930
we want to be as lazy as possible is a

89
00:03:46,930 --> 00:03:49,060
dependency management system so we built

90
00:03:49,060 --> 00:03:52,750
steel so steel is really the easiest way

91
00:03:52,750 --> 00:03:54,940
I think to do dependency management

92
00:03:54,940 --> 00:04:00,569
possible so we've got this long let's

93
00:04:00,569 --> 00:04:07,010
add some extra open tabs

94
00:04:07,020 --> 00:04:10,990
fun with live demos um so we've got this

95
00:04:10,990 --> 00:04:14,470
basic HTML application up so we can look

96
00:04:14,470 --> 00:04:19,030
at the HTML of it real quick and you'll

97
00:04:19,030 --> 00:04:22,540
see we are loading reloading jQuery and

98
00:04:22,540 --> 00:04:24,850
jQuery UI from the CDN and just adding

99
00:04:24,850 --> 00:04:26,440
some real basic inline functionality

100
00:04:26,440 --> 00:04:28,090
this isn't code that you know we would

101
00:04:28,090 --> 00:04:31,180
ever do the first step for good

102
00:04:31,180 --> 00:04:33,100
dependency managers just make it so or

103
00:04:33,100 --> 00:04:35,920
compression is make it so you don't have

104
00:04:35,920 --> 00:04:39,940
a separate script to mess up so I we

105
00:04:39,940 --> 00:04:41,680
release with steel you can just run a

106
00:04:41,680 --> 00:04:43,840
simple script point it at any page the

107
00:04:43,840 --> 00:04:46,060
page can be online can be anywhere it

108
00:04:46,060 --> 00:04:47,830
can read the scripts in your page and

109
00:04:47,830 --> 00:04:50,410
then just compress your application so

110
00:04:50,410 --> 00:04:56,410
this is loading from the CDN takes a

111
00:04:56,410 --> 00:04:58,620
little bit because the internet is slow

112
00:04:58,620 --> 00:05:02,530
and while it's compressing we can

113
00:05:02,530 --> 00:05:05,020
probably go and just switch to the

114
00:05:05,020 --> 00:05:08,860
compress app that it's making so this is

115
00:05:08,860 --> 00:05:10,270
you know this is nothing really like

116
00:05:10,270 --> 00:05:12,010
special at this point it's just showing

117
00:05:12,010 --> 00:05:14,410
one little tiny easy thing we added on

118
00:05:14,410 --> 00:05:16,450
to something like closure so you don't

119
00:05:16,450 --> 00:05:18,479
have to worry about your build scripts

120
00:05:18,479 --> 00:05:22,210
but it fails in two ways the first is it

121
00:05:22,210 --> 00:05:23,890
doesn't do any dependency management at

122
00:05:23,890 --> 00:05:25,030
this point right if we have another

123
00:05:25,030 --> 00:05:26,979
application that needs to load a bunch

124
00:05:26,979 --> 00:05:29,770
of scripts how does it handle that and

125
00:05:29,770 --> 00:05:31,419
then there's that annoying bit of like

126
00:05:31,419 --> 00:05:33,040
having to clear out all the other

127
00:05:33,040 --> 00:05:34,990
scripts and then kind of switch to the

128
00:05:34,990 --> 00:05:38,140
production bill so what we've made is

129
00:05:38,140 --> 00:05:40,570
also the steel script which is pretty

130
00:05:40,570 --> 00:05:42,460
easy so if we look at another page it

131
00:05:42,460 --> 00:05:44,470
has the exact same functionality that's

132
00:05:44,470 --> 00:05:51,190
basic HTML we can see here we load the

133
00:05:51,190 --> 00:05:52,690
steel script and then tell it out for a

134
00:05:52,690 --> 00:05:54,490
script to load and then if we look in

135
00:05:54,490 --> 00:05:58,990
our basic j/s we steal jQuery and jQuery

136
00:05:58,990 --> 00:06:01,690
UI and then describe the functionality

137
00:06:01,690 --> 00:06:03,760
that we want that depends on that now if

138
00:06:03,760 --> 00:06:05,800
we have another application like that

139
00:06:05,800 --> 00:06:07,870
adds some bonus functionality so we can

140
00:06:07,870 --> 00:06:15,969
look at that real quick so it's

141
00:06:15,979 --> 00:06:18,690
okay so this is like added functionality

142
00:06:18,690 --> 00:06:21,690
from the previous application we have

143
00:06:21,690 --> 00:06:25,530
another HTML page with another HTML

144
00:06:25,530 --> 00:06:28,199
bonus page that loads bonus shares from

145
00:06:28,199 --> 00:06:29,639
getting remove the production it's going

146
00:06:29,639 --> 00:06:33,150
to work yeah and then we have the bonus

147
00:06:33,150 --> 00:06:35,039
GS that it loads and that just loads the

148
00:06:35,039 --> 00:06:36,810
other application and adds whatever

149
00:06:36,810 --> 00:06:38,910
functionality it wants its just really I

150
00:06:38,910 --> 00:06:40,889
mean this is just a very basic example

151
00:06:40,889 --> 00:06:43,259
but you see the syntax for loading

152
00:06:43,259 --> 00:06:44,849
dependencies and then and then running

153
00:06:44,849 --> 00:06:46,349
them is really easy but the really

154
00:06:46,349 --> 00:06:48,270
awesome part is how easy is to take all

155
00:06:48,270 --> 00:06:50,400
of those dependencies and just compress

156
00:06:50,400 --> 00:06:55,450
them so if we compress this application

157
00:06:55,460 --> 00:07:00,870
you compress jsu just point it to our

158
00:07:00,870 --> 00:07:04,530
page can open the page in MGAs see every

159
00:07:04,530 --> 00:07:08,039
script tag that's loading so this is it

160
00:07:08,039 --> 00:07:09,840
could be you know this is a separate

161
00:07:09,840 --> 00:07:11,460
package from all of javascript if you

162
00:07:11,460 --> 00:07:13,199
see and you can use it independent of

163
00:07:13,199 --> 00:07:18,599
the entire the entire product so that is

164
00:07:18,599 --> 00:07:20,099
to switch to the production bill that

165
00:07:20,099 --> 00:07:21,840
this is going to is going to make it's

166
00:07:21,840 --> 00:07:23,610
really easy now we just do that comma

167
00:07:23,610 --> 00:07:26,789
production so that's basically steel

168
00:07:26,789 --> 00:07:29,760
made compressing and building your big

169
00:07:29,760 --> 00:07:31,500
jQuery apps and doing dependency is

170
00:07:31,500 --> 00:07:36,300
really easy so the next thing I'm going

171
00:07:36,300 --> 00:07:38,550
to talk about is continue with this

172
00:07:38,550 --> 00:07:40,889
theme of we're just very lazy developers

173
00:07:40,889 --> 00:07:43,349
is the code generators what do you want

174
00:07:43,349 --> 00:07:44,070
to do when you start building

175
00:07:44,070 --> 00:07:45,780
application is get to like a working

176
00:07:45,780 --> 00:07:49,680
state as quickly as possible you want if

177
00:07:49,680 --> 00:07:50,849
you want to create alt like an

178
00:07:50,849 --> 00:07:52,349
application structure and then you want

179
00:07:52,349 --> 00:07:53,610
to be able have some real functionality

180
00:07:53,610 --> 00:07:55,620
you can screw around with from the

181
00:07:55,620 --> 00:07:58,050
server so we have generators which you

182
00:07:58,050 --> 00:08:01,650
can have scaffold up basic functionality

183
00:08:01,650 --> 00:08:07,730
really quickly

184
00:08:07,740 --> 00:08:10,120
so this will generate an application

185
00:08:10,120 --> 00:08:12,760
structure for us to work from with tests

186
00:08:12,760 --> 00:08:15,640
and things like that it also will get to

187
00:08:15,640 --> 00:08:17,200
integrates all the other features that

188
00:08:17,200 --> 00:08:19,180
we're going to show and then we can

189
00:08:19,180 --> 00:08:21,580
scaffold part of our data model so if we

190
00:08:21,580 --> 00:08:23,140
have like a service that's producing

191
00:08:23,140 --> 00:08:24,640
we're making a cook back cookbook

192
00:08:24,640 --> 00:08:30,240
application here we can scaffold a

193
00:08:30,240 --> 00:08:32,350
recipe model and then get some

194
00:08:32,350 --> 00:08:34,419
functionality that we can we can go and

195
00:08:34,419 --> 00:08:43,210
modify so oh we have to include our

196
00:08:43,210 --> 00:08:56,639
files that we generated of course

197
00:08:56,649 --> 00:08:58,749
so we'll include our recipe model and

198
00:08:58,749 --> 00:08:59,800
rest of the controller that we just

199
00:08:59,800 --> 00:09:00,819
generated we're going to get into how

200
00:09:00,819 --> 00:09:04,629
these work in a second but it's really

201
00:09:04,629 --> 00:09:06,430
nice to go from like absolutely nothing

202
00:09:06,430 --> 00:09:08,709
working to being able to kind of edit

203
00:09:08,709 --> 00:09:11,230
and delete things right away just really

204
00:09:11,230 --> 00:09:12,970
basic so you can connect to any back-end

205
00:09:12,970 --> 00:09:14,980
services you have just test out with the

206
00:09:14,980 --> 00:09:19,809
servers working ok so the next thing I

207
00:09:19,809 --> 00:09:23,439
want to talk about is class and I

208
00:09:23,439 --> 00:09:24,970
wouldn't paid too much attention for

209
00:09:24,970 --> 00:09:26,800
your own sake to this next slide this is

210
00:09:26,800 --> 00:09:29,199
really just crap I put up just to show

211
00:09:29,199 --> 00:09:30,670
that there's a lot of different ways

212
00:09:30,670 --> 00:09:33,759
people do things in JavaScript a lot of

213
00:09:33,759 --> 00:09:35,439
ways to write the exact same piece of

214
00:09:35,439 --> 00:09:37,809
code and what you really need to do when

215
00:09:37,809 --> 00:09:39,699
you're writing big jquery applications

216
00:09:39,699 --> 00:09:43,480
is pick a organizational unit that you

217
00:09:43,480 --> 00:09:46,360
can that you can develop from and you

218
00:09:46,360 --> 00:09:47,980
want it to be like repeatable you want

219
00:09:47,980 --> 00:09:52,019
it to be readable and you know just not

220
00:09:52,019 --> 00:09:54,879
and basically legible so what we picked

221
00:09:54,879 --> 00:09:57,699
is class this is based on Jenner Isaac's

222
00:09:57,699 --> 00:09:59,679
class and we've added like all these

223
00:09:59,679 --> 00:10:01,589
different features such as like

224
00:10:01,589 --> 00:10:05,819
namespacing static inheritance mix-ins

225
00:10:05,819 --> 00:10:08,769
introspection like it's a JavaScript

226
00:10:08,769 --> 00:10:10,629
version of ad hoc polymorphism which is

227
00:10:10,629 --> 00:10:12,809
just like a weird thing which is like

228
00:10:12,809 --> 00:10:15,519
offshoot classes we've had a lot of

229
00:10:15,519 --> 00:10:19,029
things and we basically build everything

230
00:10:19,029 --> 00:10:20,800
around the structure and there's a lot

231
00:10:20,800 --> 00:10:23,559
of debate if a class is needed but you

232
00:10:23,559 --> 00:10:27,429
can pick you can pick any structure in

233
00:10:27,429 --> 00:10:29,259
your JavaScript applications but please

234
00:10:29,259 --> 00:10:31,899
pick one don't leave a bunch of nested

235
00:10:31,899 --> 00:10:35,879
anonymous functions in your jquery cub

236
00:10:35,879 --> 00:10:38,290
so the next thing is really the

237
00:10:38,290 --> 00:10:40,540
model-view-controller is what we juice

238
00:10:40,540 --> 00:10:44,470
on and we realize none of the facebook i

239
00:10:44,470 --> 00:10:45,910
was talking about this these so there's

240
00:10:45,910 --> 00:10:47,199
three things that you do in any

241
00:10:47,199 --> 00:10:48,879
javascript application I really think

242
00:10:48,879 --> 00:10:51,339
it's for and what I like to use an

243
00:10:51,339 --> 00:10:52,959
example is like a Google style

244
00:10:52,959 --> 00:10:56,679
auto-suggest so you know with the Google

245
00:10:56,679 --> 00:10:57,850
style auto-suggest like someone will

246
00:10:57,850 --> 00:10:59,230
start typing you want to respond to that

247
00:10:59,230 --> 00:11:00,939
event then you're going to go to your

248
00:11:00,939 --> 00:11:03,549
server and you're going to you're going

249
00:11:03,549 --> 00:11:05,589
to pull back data and then maybe you'll

250
00:11:05,589 --> 00:11:07,509
want to massage that data a little bit

251
00:11:07,509 --> 00:11:09,970
to prepare it for the view or prepare

252
00:11:09,970 --> 00:11:13,329
it put in the page or modify the Dom so

253
00:11:13,329 --> 00:11:15,310
what we realize is if you can break

254
00:11:15,310 --> 00:11:17,910
apart an application in these four parts

255
00:11:17,910 --> 00:11:21,160
it results in much more scalar or a

256
00:11:21,160 --> 00:11:23,740
scalable and modular code and this is

257
00:11:23,740 --> 00:11:25,689
what the MVC of JavaScript MVC is really

258
00:11:25,689 --> 00:11:28,689
about so to kind of break this down how

259
00:11:28,689 --> 00:11:31,420
this how we envision breaking down

260
00:11:31,420 --> 00:11:34,720
almost any JavaScript functionality this

261
00:11:34,720 --> 00:11:36,100
is how we kind of do it so to use this

262
00:11:36,100 --> 00:11:38,290
an example a you person types job now

263
00:11:38,290 --> 00:11:39,790
that's an event and you want to respond

264
00:11:39,790 --> 00:11:41,740
to that with new controller so we'll

265
00:11:41,740 --> 00:11:44,310
have a will have a search controller and

266
00:11:44,310 --> 00:11:46,750
that'll have a key up function these all

267
00:11:46,750 --> 00:11:48,550
get bounds of that delegation will see

268
00:11:48,550 --> 00:11:51,430
that more in a little bit and then you

269
00:11:51,430 --> 00:11:53,980
want to wrap that service layer with

270
00:11:53,980 --> 00:11:55,870
something we have a search model so

271
00:11:55,870 --> 00:11:57,639
we'll make a using the search model will

272
00:11:57,639 --> 00:11:59,589
make a request to find all searches and

273
00:11:59,589 --> 00:12:01,810
then the search model will actually do

274
00:12:01,810 --> 00:12:06,519
the service wrapping and then let's say

275
00:12:06,519 --> 00:12:08,170
with that search data coming back you

276
00:12:08,170 --> 00:12:10,089
want some domain specific functionality

277
00:12:10,089 --> 00:12:11,889
on it right you want a little bit more

278
00:12:11,889 --> 00:12:13,870
information than just the raw services

279
00:12:13,870 --> 00:12:15,579
giving you like if you want to know if

280
00:12:15,579 --> 00:12:17,139
it's already been visited or not you can

281
00:12:17,139 --> 00:12:19,720
add that functionality in the model and

282
00:12:19,720 --> 00:12:21,670
then when the model returns back the

283
00:12:21,670 --> 00:12:25,410
list of searches you basically just

284
00:12:25,410 --> 00:12:27,910
insert that use a client site template

285
00:12:27,910 --> 00:12:31,120
to insert that into the dot this is this

286
00:12:31,120 --> 00:12:34,089
is pretty basic now a lot of people

287
00:12:34,089 --> 00:12:35,709
rightfully should be thinking right now

288
00:12:35,709 --> 00:12:39,160
well all this takes like three lines of

289
00:12:39,160 --> 00:12:41,439
jQuery code why are we turning it into

290
00:12:41,439 --> 00:12:43,149
this light into this mess right here

291
00:12:43,149 --> 00:12:44,860
well the difference is because those

292
00:12:44,860 --> 00:12:47,559
three lines of jQuery code if you're

293
00:12:47,559 --> 00:12:48,970
writing like and some of the apps that

294
00:12:48,970 --> 00:12:49,899
we've worked on where they're like

295
00:12:49,899 --> 00:12:51,480
hundreds of thousands of lines of code

296
00:12:51,480 --> 00:12:54,009
it becomes a mess and you want to be

297
00:12:54,009 --> 00:12:56,500
able to reuse and like wrap things so we

298
00:12:56,500 --> 00:12:58,509
want a search model that we can call too

299
00:12:58,509 --> 00:13:00,639
we want organize controllers that have

300
00:13:00,639 --> 00:13:03,339
like a good layout so let's go into each

301
00:13:03,339 --> 00:13:05,410
one these a little bit so this is the

302
00:13:05,410 --> 00:13:08,980
controller and this is a skeleton of a

303
00:13:08,980 --> 00:13:11,889
tabs code now this is really the bread

304
00:13:11,889 --> 00:13:14,230
and butter of JavaScript MVC in my

305
00:13:14,230 --> 00:13:15,610
opinion is what most people when they

306
00:13:15,610 --> 00:13:18,100
use it they like and if you're jquery

307
00:13:18,100 --> 00:13:19,689
developer hopefully right now you're

308
00:13:19,689 --> 00:13:21,550
kind of marveling at its beauty it might

309
00:13:21,550 --> 00:13:23,500
look like no the the nerdy

310
00:13:23,500 --> 00:13:25,950
girl with glasses and a ponytail but

311
00:13:25,950 --> 00:13:29,730
it's to me it's it's really nice because

312
00:13:29,730 --> 00:13:32,110
first it's based on class so it's

313
00:13:32,110 --> 00:13:33,850
extendable inheritable mix in a bowl all

314
00:13:33,850 --> 00:13:34,990
these great things that you might want

315
00:13:34,990 --> 00:13:36,990
to do with a widget you can do with it

316
00:13:36,990 --> 00:13:40,570
but then it's clear the events are so

317
00:13:40,570 --> 00:13:43,090
clearly labeled and linear right you

318
00:13:43,090 --> 00:13:45,490
know that that Li click you're not

319
00:13:45,490 --> 00:13:47,080
you're not binding event handlers and

320
00:13:47,080 --> 00:13:48,790
this nested structure you're writing

321
00:13:48,790 --> 00:13:51,610
rules for your widget not you're not

322
00:13:51,610 --> 00:13:53,680
binding and these crazy nested things

323
00:13:53,680 --> 00:13:55,600
it's just right there you just read it

324
00:13:55,600 --> 00:13:57,070
you say oh it's Li click and that is

325
00:13:57,070 --> 00:14:00,070
hooked up with event delegation and the

326
00:14:00,070 --> 00:14:01,360
controller will automatically when it's

327
00:14:01,360 --> 00:14:03,550
when you can remove the controller just

328
00:14:03,550 --> 00:14:05,020
removes all its vent handlers it's all

329
00:14:05,020 --> 00:14:07,090
taken care for you I also got some other

330
00:14:07,090 --> 00:14:09,280
nice things like write that in the class

331
00:14:09,280 --> 00:14:10,750
name of whatever element it's acting

332
00:14:10,750 --> 00:14:13,660
upon it writes the its name in there so

333
00:14:13,660 --> 00:14:15,640
when you're inspecting with Firebug you

334
00:14:15,640 --> 00:14:18,850
can actually see oh it's a tabs widget

335
00:14:18,850 --> 00:14:21,220
there must be and I'm clicking on an li

336
00:14:21,220 --> 00:14:22,420
in the tabs wait I wonder if there's an

337
00:14:22,420 --> 00:14:24,670
L if there's a tabs widget in my source

338
00:14:24,670 --> 00:14:27,340
with an L I click right you have you can

339
00:14:27,340 --> 00:14:29,290
see your code just by looking at the DOM

340
00:14:29,290 --> 00:14:31,839
and then also finally God map it creates

341
00:14:31,839 --> 00:14:37,210
a jquery plugin ok so model or connect

342
00:14:37,210 --> 00:14:38,530
being able connect to a service is

343
00:14:38,530 --> 00:14:41,230
really the linchpin of thin servers are

344
00:14:41,230 --> 00:14:42,970
thin server architecture right you'll

345
00:14:42,970 --> 00:14:43,930
need to be able to connect to these

346
00:14:43,930 --> 00:14:46,480
services really easy so model is really

347
00:14:46,480 --> 00:14:48,100
designed to do that the basic model can

348
00:14:48,100 --> 00:14:49,870
connect to any service really easy and

349
00:14:49,870 --> 00:14:51,880
map into that that search kind of

350
00:14:51,880 --> 00:14:54,190
function out we saw previously but we

351
00:14:54,190 --> 00:14:57,430
also have an RPC and a rest model that

352
00:14:57,430 --> 00:14:58,570
can connect to those services

353
00:14:58,570 --> 00:15:00,370
automatically so this is what would look

354
00:15:00,370 --> 00:15:02,740
one would look like it's like two lines

355
00:15:02,740 --> 00:15:04,839
of code and this would if you could

356
00:15:04,839 --> 00:15:09,160
connect it to gears so with just this

357
00:15:09,160 --> 00:15:11,290
line of real there's four lines of code

358
00:15:11,290 --> 00:15:14,740
but really two lines of code you can you

359
00:15:14,740 --> 00:15:17,200
can find all recipes and arrest services

360
00:15:17,200 --> 00:15:19,330
you can find one recipe you can create a

361
00:15:19,330 --> 00:15:21,820
new recipe you can update a recipe and

362
00:15:21,820 --> 00:15:23,170
you can delete a recipe you get the full

363
00:15:23,170 --> 00:15:25,900
like crud contract with two lines of

364
00:15:25,900 --> 00:15:27,700
code and you're everywhere else can just

365
00:15:27,700 --> 00:15:29,500
access it through this now we've got a

366
00:15:29,500 --> 00:15:32,740
little demo which is that first skeleton

367
00:15:32,740 --> 00:15:34,870
we made just replaced with that at one

368
00:15:34,870 --> 00:15:36,790
line of code so here

369
00:15:36,790 --> 00:15:40,330
can see it connected to you can see it

370
00:15:40,330 --> 00:15:43,360
connected to the recipes JSON and you

371
00:15:43,360 --> 00:15:46,000
can create and destroy them you can see

372
00:15:46,000 --> 00:15:48,340
it making me the request for you now

373
00:15:48,340 --> 00:15:49,720
this is really nice I mean this is not

374
00:15:49,720 --> 00:15:51,550
anything anybody can't do but with only

375
00:15:51,550 --> 00:15:53,110
two lines of code it's just nice to be

376
00:15:53,110 --> 00:15:57,220
able to get this so if we like refresh

377
00:15:57,220 --> 00:16:00,910
the page and now we can yeah we can work

378
00:16:00,910 --> 00:16:03,730
offline this is your support right now

379
00:16:03,730 --> 00:16:08,650
is prototype but uh now if we just come

380
00:16:08,650 --> 00:16:11,500
back online I don't know you sure if

381
00:16:11,500 --> 00:16:14,560
that will work you'd have to refresh you

382
00:16:14,560 --> 00:16:15,700
have to delete it when you're offline

383
00:16:15,700 --> 00:16:17,830
for any changes oh no we did delete what

384
00:16:17,830 --> 00:16:19,840
I'll fine okay okay okay and then it

385
00:16:19,840 --> 00:16:20,890
will make the changes for you

386
00:16:20,890 --> 00:16:23,710
automatically all right built-in cool

387
00:16:23,710 --> 00:16:27,490
anyways so let's the final piece of the

388
00:16:27,490 --> 00:16:30,250
MVC triumph rate is views now there's

389
00:16:30,250 --> 00:16:33,610
been a lot of talk on and lately about

390
00:16:33,610 --> 00:16:34,810
Jake where it's like the most popular

391
00:16:34,810 --> 00:16:36,550
thing is like should jQuery bring views

392
00:16:36,550 --> 00:16:37,360
and everybody's like got their own

393
00:16:37,360 --> 00:16:38,860
opinion and what makes what's the best

394
00:16:38,860 --> 00:16:40,660
view template and to me that really

395
00:16:40,660 --> 00:16:44,170
misses the point it's not necessarily

396
00:16:44,170 --> 00:16:46,210
about the view it's about how you use it

397
00:16:46,210 --> 00:16:47,980
because ever you're never going to make

398
00:16:47,980 --> 00:16:50,980
everybody happy so with view we try to

399
00:16:50,980 --> 00:16:52,540
make a stand or like a uniform

400
00:16:52,540 --> 00:16:54,640
templating interface in JavaScript MVC

401
00:16:54,640 --> 00:16:56,830
where you could use any client-side

402
00:16:56,830 --> 00:16:59,170
template in kind of the similar way so

403
00:16:59,170 --> 00:17:01,480
would it so an example of it would be

404
00:17:01,480 --> 00:17:03,010
something like this this will you know

405
00:17:03,010 --> 00:17:06,400
insert will render to do's ejs which is

406
00:17:06,400 --> 00:17:09,250
a templating file with to do data and

407
00:17:09,250 --> 00:17:13,420
then cert that after bar and what but

408
00:17:13,420 --> 00:17:15,730
just by what we've done is because it's

409
00:17:15,730 --> 00:17:17,500
uniform interface you get things like

410
00:17:17,500 --> 00:17:19,390
compression and template look up for

411
00:17:19,390 --> 00:17:21,940
free so currently supported is embedded

412
00:17:21,940 --> 00:17:25,510
j/s which is this djamel and micro

413
00:17:25,510 --> 00:17:27,700
templates so these are all support it's

414
00:17:27,700 --> 00:17:28,990
really easy to hook into so here's a

415
00:17:28,990 --> 00:17:31,330
like a brief example that's what a

416
00:17:31,330 --> 00:17:33,790
djamel template looks like and ejs

417
00:17:33,790 --> 00:17:35,890
template and they're all getting certain

418
00:17:35,890 --> 00:17:38,770
to page in the exact same way so you can

419
00:17:38,770 --> 00:17:40,420
use any template language you want on

420
00:17:40,420 --> 00:17:44,890
the client with JavaScript MVC so a lot

421
00:17:44,890 --> 00:17:48,580
of the benefit to the MVC approach

422
00:17:48,580 --> 00:17:50,260
actually comes when you're doing like

423
00:17:50,260 --> 00:17:51,970
in betweens these like little subtle

424
00:17:51,970 --> 00:17:53,860
problems that everybody has to face when

425
00:17:53,860 --> 00:17:55,570
you're building an AJAX application and

426
00:17:55,570 --> 00:17:57,730
consider like a little to-do list you're

427
00:17:57,730 --> 00:18:00,100
constantly when we are making a to-do

428
00:18:00,100 --> 00:18:04,570
list having somehow label each div so it

429
00:18:04,570 --> 00:18:07,600
knows that it's it to do so that later

430
00:18:07,600 --> 00:18:09,670
you can call actions upon it makes no

431
00:18:09,670 --> 00:18:11,320
which service to call and things like

432
00:18:11,320 --> 00:18:12,910
that and figuring it out is like

433
00:18:12,910 --> 00:18:14,320
something you have to do every time

434
00:18:14,320 --> 00:18:15,670
unless you have a pattern that you

435
00:18:15,670 --> 00:18:18,010
already know works and JavaScript MVC

436
00:18:18,010 --> 00:18:20,290
work so a hypothetical to do controller

437
00:18:20,290 --> 00:18:23,050
would kind of work like this so you

438
00:18:23,050 --> 00:18:24,430
would first find all your to do's from

439
00:18:24,430 --> 00:18:26,920
your service that you would then you

440
00:18:26,920 --> 00:18:28,420
would show them and cert them into the

441
00:18:28,420 --> 00:18:31,330
Dom because controller knows the name of

442
00:18:31,330 --> 00:18:33,520
the controller and the action the show

443
00:18:33,520 --> 00:18:34,960
actions ended it's in it can

444
00:18:34,960 --> 00:18:37,540
automatically kind of like rails by

445
00:18:37,540 --> 00:18:39,100
convention know where to look up the

446
00:18:39,100 --> 00:18:41,890
view without you telling it to and then

447
00:18:41,890 --> 00:18:43,300
in the view you'll loop through all the

448
00:18:43,300 --> 00:18:45,070
to do's and you'll spit them in the page

449
00:18:45,070 --> 00:18:47,800
with the template the real interesting

450
00:18:47,800 --> 00:18:51,220
part is is this little bit yeah by

451
00:18:51,220 --> 00:18:52,870
inserting something that's not a string

452
00:18:52,870 --> 00:18:55,840
it knows to put that in the jQuery data

453
00:18:55,840 --> 00:18:57,820
so that it later there it's really easy

454
00:18:57,820 --> 00:18:59,200
to look up so when it comes time to

455
00:18:59,200 --> 00:19:04,930
delete a single element right we listen

456
00:19:04,930 --> 00:19:08,230
to delete click when that happens we

457
00:19:08,230 --> 00:19:10,660
just basically go up one element to our

458
00:19:10,660 --> 00:19:13,150
div and then we can get our model really

459
00:19:13,150 --> 00:19:15,040
easy and then call destroy on that model

460
00:19:15,040 --> 00:19:17,950
it's like that easy right it's it's

461
00:19:17,950 --> 00:19:20,470
really simple so then because we use

462
00:19:20,470 --> 00:19:23,980
open Ajax like published messages that

463
00:19:23,980 --> 00:19:25,090
are the result of all our service

464
00:19:25,090 --> 00:19:27,340
requests we don't have to if we had

465
00:19:27,340 --> 00:19:29,050
multiple of these to do which it's on

466
00:19:29,050 --> 00:19:31,300
the page and you delete one to do that

467
00:19:31,300 --> 00:19:32,710
was shown another place while you just

468
00:19:32,710 --> 00:19:34,840
subscribe to the delete of that to do

469
00:19:34,840 --> 00:19:36,880
and it will remove itself automatically

470
00:19:36,880 --> 00:19:39,280
all right there's just like little tions

471
00:19:39,280 --> 00:19:41,590
that you're always constantly doing that

472
00:19:41,590 --> 00:19:43,150
get handled because you're using this

473
00:19:43,150 --> 00:19:46,270
a.m MVC approach all right so the next

474
00:19:46,270 --> 00:19:48,310
thing is testing and this is really

475
00:19:48,310 --> 00:19:50,230
really important and this is the coolest

476
00:19:50,230 --> 00:19:51,580
thing I think to come out of the third

477
00:19:51,580 --> 00:19:54,130
version of JavaScript MVC it's because

478
00:19:54,130 --> 00:19:58,240
testing just sucks so bad right I look

479
00:19:58,240 --> 00:20:01,660
is it noise selenium is awesome but it's

480
00:20:01,660 --> 00:20:02,450
still

481
00:20:02,450 --> 00:20:05,270
sucks so does all testing solutions

482
00:20:05,270 --> 00:20:06,830
until now but you guys could say that my

483
00:20:06,830 --> 00:20:10,430
sucks too so the problem with each

484
00:20:10,430 --> 00:20:11,780
testing solution there's like three main

485
00:20:11,780 --> 00:20:13,010
ways there's like a browser-based

486
00:20:13,010 --> 00:20:16,430
testing which is like qunit and that is

487
00:20:16,430 --> 00:20:19,010
really easy to write but it's manually

488
00:20:19,010 --> 00:20:20,540
driven all right you got to stand there

489
00:20:20,540 --> 00:20:21,920
and open each browser and test it

490
00:20:21,920 --> 00:20:24,290
there's the simulated browser

491
00:20:24,290 --> 00:20:26,390
environments like MJ s there's a bunch

492
00:20:26,390 --> 00:20:27,860
of others those are really nice but

493
00:20:27,860 --> 00:20:29,600
they're not really high fidelity because

494
00:20:29,600 --> 00:20:31,430
it's not the real browser running but

495
00:20:31,430 --> 00:20:33,770
it's fast so you can get like good gut

496
00:20:33,770 --> 00:20:35,540
check if your codes really working and

497
00:20:35,540 --> 00:20:38,000
then there's the like selenium the

498
00:20:38,000 --> 00:20:40,490
browser drivers these actually pop open

499
00:20:40,490 --> 00:20:42,820
browsers and then run your tests on them

500
00:20:42,820 --> 00:20:45,590
those do have high fidelity but the

501
00:20:45,590 --> 00:20:48,200
problem is very hard to write like

502
00:20:48,200 --> 00:20:49,520
they're hard to write tests kind of hard

503
00:20:49,520 --> 00:20:50,900
to debug test because sometimes it

504
00:20:50,900 --> 00:20:52,160
happened so fast you came and see what's

505
00:20:52,160 --> 00:20:56,000
going on so it's really needed is it

506
00:20:56,000 --> 00:20:59,210
tier 2 you had a question ok if there

507
00:20:59,210 --> 00:21:00,170
anybody is a question just raise your

508
00:21:00,170 --> 00:21:05,930
hand sorry I should I said every way so

509
00:21:05,930 --> 00:21:07,280
what we mean is funk unit and it's

510
00:21:07,280 --> 00:21:09,130
really a tiered approach it kind of has

511
00:21:09,130 --> 00:21:13,220
all of these parts in it but a really

512
00:21:13,220 --> 00:21:15,410
nice asynchronous syntax that you can

513
00:21:15,410 --> 00:21:17,630
write one test and it runs in in the

514
00:21:17,630 --> 00:21:19,610
browser it runs an end and it runs in

515
00:21:19,610 --> 00:21:21,470
selenium so the syntax look something

516
00:21:21,470 --> 00:21:24,710
like this it's based on cue units syntax

517
00:21:24,710 --> 00:21:27,170
but it's also kind of based on jQuery

518
00:21:27,170 --> 00:21:29,630
too so you basically select something

519
00:21:29,630 --> 00:21:31,400
this would test like a numeric txt bak

520
00:21:31,400 --> 00:21:34,090
you can only enter in numbers all right

521
00:21:34,090 --> 00:21:36,290
look at it's pretty basic you click on

522
00:21:36,290 --> 00:21:42,410
it you you type in 27 it doesn't write

523
00:21:42,410 --> 00:21:43,910
anything like it should and then you

524
00:21:43,910 --> 00:21:47,210
type 27 the numbers and it has 27 it's

525
00:21:47,210 --> 00:21:49,640
really easy unfortunate fortunately we

526
00:21:49,640 --> 00:21:51,650
were we had a great enough client who

527
00:21:51,650 --> 00:21:56,810
let us show some example of this running

528
00:21:56,810 --> 00:21:57,980
that if we just started working on this

529
00:21:57,980 --> 00:22:02,750
prototype for them so it's running all

530
00:22:02,750 --> 00:22:05,540
the tests in the browser so if you look

531
00:22:05,540 --> 00:22:08,360
at the funk unit page okay so this is I

532
00:22:08,360 --> 00:22:10,640
mean it is qunit it's just we've added

533
00:22:10,640 --> 00:22:13,160
this ability to like drive another page

534
00:22:13,160 --> 00:22:16,039
with qunit so you can open another page

535
00:22:16,039 --> 00:22:18,440
then click on things really easy so okay

536
00:22:18,440 --> 00:22:20,749
we looks like real quick at the code for

537
00:22:20,749 --> 00:22:27,259
what that looks like so basic okay so

538
00:22:27,259 --> 00:22:28,399
this is what the code for that looks

539
00:22:28,399 --> 00:22:29,299
like just like what we're looking at

540
00:22:29,299 --> 00:22:31,519
before right opens a page clicks on it

541
00:22:31,519 --> 00:22:34,249
check something exists check something

542
00:22:34,249 --> 00:22:36,470
else exists then gets a text for it they

543
00:22:36,470 --> 00:22:37,759
say sit the reason why it's kind of like

544
00:22:37,759 --> 00:22:39,049
a synchronous like this it handles

545
00:22:39,049 --> 00:22:40,220
asynchronous behavior really well you

546
00:22:40,220 --> 00:22:41,479
can call weights because it basically

547
00:22:41,479 --> 00:22:43,220
compiles the list of commands is going

548
00:22:43,220 --> 00:22:47,899
to make and then runs them so we can run

549
00:22:47,899 --> 00:22:53,009
this in selenium really really easy so

550
00:22:53,019 --> 00:22:55,249
just the script this automatically is

551
00:22:55,249 --> 00:22:57,499
integrated with JavaScript MVC so this

552
00:22:57,499 --> 00:22:59,629
is going to open up this will take a

553
00:22:59,629 --> 00:23:01,700
second or two this is going to open up

554
00:23:01,700 --> 00:23:15,259
IE and then run those tests in IE so

555
00:23:15,259 --> 00:23:17,269
this is all automated right so you can

556
00:23:17,269 --> 00:23:19,609
actually just trigger a command and have

557
00:23:19,609 --> 00:23:21,950
nightly builds run all this every night

558
00:23:21,950 --> 00:23:24,169
but then be able but the awesome part

559
00:23:24,169 --> 00:23:25,369
about it is I mean selenium can already

560
00:23:25,369 --> 00:23:27,470
do this the awesome part is you can open

561
00:23:27,470 --> 00:23:29,299
this up in your browser and debug it

562
00:23:29,299 --> 00:23:32,690
right like you can you can have Firebug

563
00:23:32,690 --> 00:23:34,399
hit an error and like see what the

564
00:23:34,399 --> 00:23:37,309
heck's going on oh boy this is really

565
00:23:37,309 --> 00:23:42,619
slow okay we can just it'll just show

566
00:23:42,619 --> 00:23:46,509
some okays we could just cancel it then

567
00:23:46,509 --> 00:23:48,679
yeah this is this is why i said it's

568
00:23:48,679 --> 00:23:56,389
slow yeah so I should have mention that

569
00:23:56,389 --> 00:23:57,710
every through this Third Point no

570
00:23:57,710 --> 00:23:59,119
release it hasn't come out quite yet

571
00:23:59,119 --> 00:24:00,320
we're trying to like the next week and a

572
00:24:00,320 --> 00:24:02,239
half or two weeks everything should be

573
00:24:02,239 --> 00:24:03,710
standalone we're trying to make

574
00:24:03,710 --> 00:24:05,450
everything some things obviously depend

575
00:24:05,450 --> 00:24:07,549
on jQuery but phone Canyon won't depend

576
00:24:07,549 --> 00:24:10,549
on jQuery and steel won't depend on

577
00:24:10,549 --> 00:24:11,359
jQuery but we're trying to make

578
00:24:11,359 --> 00:24:14,629
everything is useful as possible for as

579
00:24:14,629 --> 00:24:17,539
many people as possible it's a hook so

580
00:24:17,539 --> 00:24:21,590
eventually he'll okay so that's funk

581
00:24:21,590 --> 00:24:24,289
unit damn it is just a javascript error

582
00:24:24,289 --> 00:24:28,159
reporting service a real quick demo this

583
00:24:28,159 --> 00:24:29,170
causes an error

584
00:24:29,170 --> 00:24:31,450
cause an air this will this is just a

585
00:24:31,450 --> 00:24:32,800
really simple script that you can clue

586
00:24:32,800 --> 00:24:34,390
your pages that detect errors and then

587
00:24:34,390 --> 00:24:37,000
send will email you when an error

588
00:24:37,000 --> 00:24:39,160
happens or prompt the user to type in

589
00:24:39,160 --> 00:24:43,840
what happened so so that just sent

590
00:24:43,840 --> 00:24:45,910
there's just sentiment air and the

591
00:24:45,910 --> 00:24:49,120
message so that's pretty nice you can

592
00:24:49,120 --> 00:24:50,860
use this it's a it's an open source free

593
00:24:50,860 --> 00:24:54,670
service document j/s there's been a lot

594
00:24:54,670 --> 00:24:56,410
of awesome documentation engines coming

595
00:24:56,410 --> 00:24:58,780
out recently ours is based on Remy

596
00:24:58,780 --> 00:25:01,300
sharps it looks like really sharps you

597
00:25:01,300 --> 00:25:04,140
document it with j s stock type stuff

598
00:25:04,140 --> 00:25:09,580
looks like this you can search really

599
00:25:09,580 --> 00:25:14,710
basic I don't it's nice okay go to the

600
00:25:14,710 --> 00:25:18,250
next so then the final two pieces that

601
00:25:18,250 --> 00:25:20,470
were kind of releasing back as a bunch

602
00:25:20,470 --> 00:25:23,890
of jQuery extensions and widgets we wish

603
00:25:23,890 --> 00:25:27,970
it so first the on widgets there's a

604
00:25:27,970 --> 00:25:29,290
milk we're releasing a bunch of widgets

605
00:25:29,290 --> 00:25:31,180
but they have like everybody's release

606
00:25:31,180 --> 00:25:32,800
the same type of widgets over and over

607
00:25:32,800 --> 00:25:33,880
and over again so what we're going to

608
00:25:33,880 --> 00:25:38,080
try to do this is a an idea a lot from

609
00:25:38,080 --> 00:25:40,990
yahoo de cats and ben almond i've talked

610
00:25:40,990 --> 00:25:43,240
a lot about with this is a vent oriented

611
00:25:43,240 --> 00:25:45,610
architecture for widgets so the idea is

612
00:25:45,610 --> 00:25:48,070
what if your widgets were like the Dom

613
00:25:48,070 --> 00:25:49,660
like the Dom actually provided like a

614
00:25:49,660 --> 00:25:53,110
tab widget so the idea is like you could

615
00:25:53,110 --> 00:25:58,990
click on a tab you click on the tab and

616
00:25:58,990 --> 00:26:01,680
then it might trigger a hide request on

617
00:26:01,680 --> 00:26:04,510
another div and then you can listen to

618
00:26:04,510 --> 00:26:06,430
that and then prevent default prevent

619
00:26:06,430 --> 00:26:09,250
the actual hiding of it and then if you

620
00:26:09,250 --> 00:26:10,720
didn't it would call show and then you

621
00:26:10,720 --> 00:26:12,940
could listen to show and do any complex

622
00:26:12,940 --> 00:26:14,740
functionality you want the ideas we want

623
00:26:14,740 --> 00:26:16,810
to provide a very small sub reusable

624
00:26:16,810 --> 00:26:19,030
subset of like an event system for your

625
00:26:19,030 --> 00:26:21,700
widgets and that you can add any crazy

626
00:26:21,700 --> 00:26:23,710
custom functionality on you want on

627
00:26:23,710 --> 00:26:25,150
because I feel a big problem with

628
00:26:25,150 --> 00:26:26,920
current widget libraries is that they're

629
00:26:26,920 --> 00:26:28,570
like monolithic they have to every

630
00:26:28,570 --> 00:26:31,030
feature under the Sun because there's

631
00:26:31,030 --> 00:26:33,220
not a great way always to like get in

632
00:26:33,220 --> 00:26:35,800
there and make changes so this is fuii

633
00:26:35,800 --> 00:26:38,410
we got like this is this is all

634
00:26:38,410 --> 00:26:40,600
prototype right now this isn't like

635
00:26:40,600 --> 00:26:41,890
coming out anytime

636
00:26:41,890 --> 00:26:43,750
next week or so but you're really

637
00:26:43,750 --> 00:26:45,850
interesting one I was taking some time

638
00:26:45,850 --> 00:26:50,350
to load isn't it so we got a lot of

639
00:26:50,350 --> 00:26:53,350
jQuery UI ones done but the interest

640
00:26:53,350 --> 00:26:55,180
rate one is menu so just by this basic

641
00:26:55,180 --> 00:26:57,670
menu right here we're able to add like a

642
00:26:57,670 --> 00:26:59,980
lot of different type of crazy menus so

643
00:26:59,980 --> 00:27:02,800
if you scroll down a navigation so this

644
00:27:02,800 --> 00:27:06,700
is just that menu but we've mixed in a

645
00:27:06,700 --> 00:27:09,040
shiftable class that listens to like

646
00:27:09,040 --> 00:27:11,530
open and close and a fade in and fade

647
00:27:11,530 --> 00:27:13,210
out a bowl class that that listens to

648
00:27:13,210 --> 00:27:15,070
open and close so it allows you to like

649
00:27:15,070 --> 00:27:16,840
mix in other things that with snow

650
00:27:16,840 --> 00:27:21,190
events it's a crazy brainstorming idea

651
00:27:21,190 --> 00:27:22,870
but with that same menu then we created

652
00:27:22,870 --> 00:27:25,990
tabs and we have like a toolbar but all

653
00:27:25,990 --> 00:27:27,820
of these stuff use their like exact same

654
00:27:27,820 --> 00:27:32,560
base code event system code so okay and

655
00:27:32,560 --> 00:27:34,480
as you can tell we're really into event

656
00:27:34,480 --> 00:27:37,060
or in architecture so we're have a bunch

657
00:27:37,060 --> 00:27:38,890
of jQuery extensions we're going to put

658
00:27:38,890 --> 00:27:41,080
out so these are really just a lot very

659
00:27:41,080 --> 00:27:43,000
similar in functionality to a lot of the

660
00:27:43,000 --> 00:27:45,100
jQuery UI ones the difference is is like

661
00:27:45,100 --> 00:27:49,960
for drag and drop the source instead of

662
00:27:49,960 --> 00:27:51,940
like having a plug-in do drag and drop

663
00:27:51,940 --> 00:27:53,620
you just bind to the event drag and drop

664
00:27:53,620 --> 00:27:55,060
and it works with live and things like

665
00:27:55,060 --> 00:27:57,580
that so we had history select all these

666
00:27:57,580 --> 00:28:00,130
different ones but well history is

667
00:28:00,130 --> 00:28:01,720
integrated that's actually been almonds

668
00:28:01,720 --> 00:28:04,420
but it's integrated in a funny way and

669
00:28:04,420 --> 00:28:06,520
then Chavez going to be see provides a

670
00:28:06,520 --> 00:28:13,150
bunch of other helpers so so it's oh so

671
00:28:13,150 --> 00:28:15,100
the last thing I'd like to do Java sort

672
00:28:15,100 --> 00:28:17,170
of EC really dependent on a lot of like

673
00:28:17,170 --> 00:28:20,650
to get its fix a lot of other people's

674
00:28:20,650 --> 00:28:22,600
work so these are really the dealers

675
00:28:22,600 --> 00:28:25,060
that help juice up JavaScript MVC and

676
00:28:25,060 --> 00:28:29,290
who's worked on these projects so we're

677
00:28:29,290 --> 00:28:30,310
really excited about the three point of

678
00:28:30,310 --> 00:28:31,840
release it's like a week away if you do

679
00:28:31,840 --> 00:28:34,240
jquery development hopefully this

680
00:28:34,240 --> 00:28:39,570
interests you thanks everybody

