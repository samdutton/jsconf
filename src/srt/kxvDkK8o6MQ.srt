1
00:00:06,110 --> 00:00:14,930

so there are many categories of wasps my

2
00:00:14,930 --> 00:00:17,360
favorite of the solitary wasps and of

3
00:00:17,360 --> 00:00:21,310
them the digger wasps the digger wasps

4
00:00:21,310 --> 00:00:27,800
dig a lot sometimes several feet into

5
00:00:27,800 --> 00:00:33,500
the ground they can dig bit careful and

6
00:00:33,500 --> 00:00:35,270
they're smart and they're precise the

7
00:00:35,270 --> 00:00:40,730
facile for instance she will go out

8
00:00:40,730 --> 00:00:47,270
looking for crickets paralyze them drag

9
00:00:47,270 --> 00:00:50,090
them back home and it so it can be a

10
00:00:50,090 --> 00:00:51,860
long ways you have to go like climb up a

11
00:00:51,860 --> 00:00:54,739
tree fly down if because the crickets

12
00:00:54,739 --> 00:00:56,420
heavy and have to go up another tree

13
00:00:56,420 --> 00:01:00,950
it's a mission but when she gets back to

14
00:01:00,950 --> 00:01:07,250
the hole she has a little ritual she

15
00:01:07,250 --> 00:01:11,390
takes the cricket drags it to the edge

16
00:01:11,390 --> 00:01:14,150
of the hole right on the edge goes down

17
00:01:14,150 --> 00:01:17,180
check things out comes back up and grabs

18
00:01:17,180 --> 00:01:22,850
the cricket then dragged him down to the

19
00:01:22,850 --> 00:01:27,020
depths where she lays her eggs stores

20
00:01:27,020 --> 00:01:30,409
the cricket comes back up seals up the

21
00:01:30,409 --> 00:01:35,540
hole he's still following me and then so

22
00:01:35,540 --> 00:01:38,750
when like the poppy wasps or whatever

23
00:01:38,750 --> 00:01:42,140
they're called a emerge they have some

24
00:01:42,140 --> 00:01:44,709
food

25
00:01:44,719 --> 00:01:51,299
it's a pretty good system but a long

26
00:01:51,299 --> 00:01:59,919
time ago someone found a bug in it hey

27
00:01:59,929 --> 00:02:05,670
what's on bugs though I guess crickets

28
00:02:05,670 --> 00:02:11,670
are the ritual goes like this drag the

29
00:02:11,670 --> 00:02:14,730
cricket to the edge of the hole you go

30
00:02:14,730 --> 00:02:17,970
down check things out come back up and

31
00:02:17,970 --> 00:02:22,250
drag the cricket in and go lay some eggs

32
00:02:22,250 --> 00:02:26,599
but for some reason some weird person

33
00:02:26,599 --> 00:02:30,810
sound a floor or a hack if you messed

34
00:02:30,810 --> 00:02:33,390
with one of the steps you could get the

35
00:02:33,390 --> 00:02:36,780
wasp into an infinite loop after

36
00:02:36,780 --> 00:02:41,430
dragging the cricket to the edge while

37
00:02:41,430 --> 00:02:44,010
it was down checking things out for some

38
00:02:44,010 --> 00:02:46,190
reason I don't know why move the food

39
00:02:46,190 --> 00:02:48,540
just a little bit just a little bit it

40
00:02:48,540 --> 00:02:51,810
was like a couple of inches and when the

41
00:02:51,810 --> 00:02:55,079
worst came back up she was like that's

42
00:02:55,079 --> 00:02:59,010
not right so she dragged the food to the

43
00:02:59,010 --> 00:03:02,130
edge of the hole then went down to check

44
00:03:02,130 --> 00:03:07,579
things out and they do move the foods

45
00:03:07,579 --> 00:03:13,079
and I was like what so she dragged the

46
00:03:13,079 --> 00:03:17,579
cricket to edge of the hole for infinity

47
00:03:17,579 --> 00:03:19,829
which I mean it was like in nineteen

48
00:03:19,829 --> 00:03:21,900
eighteen hundred so infinity was only

49
00:03:21,900 --> 00:03:26,160
about 40 but then like they did gave up

50
00:03:26,160 --> 00:03:27,630
they got bored that's how you defined

51
00:03:27,630 --> 00:03:29,670
infinity is just like now I'm not doing

52
00:03:29,670 --> 00:03:34,260
this anymore I read that on a Snapple

53
00:03:34,260 --> 00:03:39,660
lid

54
00:03:39,670 --> 00:03:43,460
today I want to talk about rendering

55
00:03:43,460 --> 00:03:48,380
things and with the intention of

56
00:03:48,380 --> 00:03:50,960
rendering stuff for the web and stuff

57
00:03:50,960 --> 00:03:53,270
for our applications widgets and user

58
00:03:53,270 --> 00:03:56,090
interface components and I want to look

59
00:03:56,090 --> 00:03:58,700
at doing them with what I mean I they

60
00:03:58,700 --> 00:04:00,440
think it's a real term this functional

61
00:04:00,440 --> 00:04:03,430
rendering but also i'm going to call it

62
00:04:03,430 --> 00:04:05,780
so i want to look at rendering things

63
00:04:05,780 --> 00:04:08,990
functionally rendering things and then

64
00:04:08,990 --> 00:04:10,750
doing that in react and react native

65
00:04:10,750 --> 00:04:12,800
with the goal to making some cool

66
00:04:12,800 --> 00:04:15,350
widgets so i want to start with pure

67
00:04:15,350 --> 00:04:22,730
functions the wasp going into infinite

68
00:04:22,730 --> 00:04:26,090
loop was not a bug it was a feature like

69
00:04:26,090 --> 00:04:28,190
all of our bugs it's a feature not a

70
00:04:28,190 --> 00:04:31,400
flaw wasps have a big problem with

71
00:04:31,400 --> 00:04:35,360
parasites so while she's out looking for

72
00:04:35,360 --> 00:04:38,380
crickets flyers and stuff could get in

73
00:04:38,380 --> 00:04:41,840
to the nest into the hole and if she

74
00:04:41,840 --> 00:04:45,050
didn't go down and check it out then the

75
00:04:45,050 --> 00:04:47,660
Flies would eat her eggs and things and

76
00:04:47,660 --> 00:04:50,690
it wouldn't be good she comes back up

77
00:04:50,690 --> 00:04:52,730
and the food is moved even just a bit

78
00:04:52,730 --> 00:04:56,620
she'd has to assume to have parasites

79
00:04:56,620 --> 00:05:00,919
bear to go down and check it out the

80
00:05:00,919 --> 00:05:03,590
worst was a pure function from cricket

81
00:05:03,590 --> 00:05:06,350
to puppy wasps an array of puppy wasps

82
00:05:06,350 --> 00:05:10,460
no messing around with the state always

83
00:05:10,460 --> 00:05:13,340
got to come back to the same inputs same

84
00:05:13,340 --> 00:05:15,169
outputs even if someone sits there

85
00:05:15,169 --> 00:05:17,300
forever we end up with our puppy puppy

86
00:05:17,300 --> 00:05:22,870
wasps so looking at some examples of

87
00:05:22,870 --> 00:05:26,990
functions and some tests are tests for

88
00:05:26,990 --> 00:05:30,980
you guys here's an example of what is

89
00:05:30,980 --> 00:05:33,530
the result of this expression I was

90
00:05:33,530 --> 00:05:35,060
there you know a little bit tricky there

91
00:05:35,060 --> 00:05:39,390
with a DVD you icon in the middle oh

92
00:05:39,400 --> 00:05:43,580
damn unicode okay seven thanks to the

93
00:05:43,580 --> 00:05:47,539
DVD the point is it's always seven every

94
00:05:47,539 --> 00:05:49,039
time you run this nothing's ever going

95
00:05:49,039 --> 00:05:50,070
to change the fact that

96
00:05:50,070 --> 00:05:52,140
seven well unless they have a changed

97
00:05:52,140 --> 00:05:55,080
unicode but how about this guy what's

98
00:05:55,080 --> 00:05:57,930
the result of this one sign starts at

99
00:05:57,930 --> 00:05:59,700
the bottom and close starts at the top

100
00:05:59,700 --> 00:06:05,270
it's fun ok cool here's a trickier one I

101
00:06:05,270 --> 00:06:09,570
have a function that takes an X and

102
00:06:09,570 --> 00:06:12,180
returns to x times X and what is the

103
00:06:12,180 --> 00:06:15,300
result of square 1.5 I thought point 5

104
00:06:15,300 --> 00:06:16,440
because I thought that was pretty nasty

105
00:06:16,440 --> 00:06:20,150
enough I looked it up on my calculator

106
00:06:20,150 --> 00:06:29,000
any 12.25 are you sure you really sure

107
00:06:29,000 --> 00:06:33,990
yes there's no reason that this function

108
00:06:33,990 --> 00:06:38,430
will never return not return 2.25 what

109
00:06:38,430 --> 00:06:41,130
does it mean if it didn't return 2.25 it

110
00:06:41,130 --> 00:06:42,990
would mean like the apocalypse and that

111
00:06:42,990 --> 00:06:45,720
computers were topsy-turvy and dogs and

112
00:06:45,720 --> 00:06:54,550
cats living together what about this guy

113
00:06:54,560 --> 00:07:01,410
anyone I don't know and we see this more

114
00:07:01,410 --> 00:07:04,560
of an example of an impure function

115
00:07:04,560 --> 00:07:06,960
which is relying on some sort of hidden

116
00:07:06,960 --> 00:07:12,810
state I've got a function of Omega which

117
00:07:12,810 --> 00:07:14,940
takes an X and returns excellent abdo

118
00:07:14,940 --> 00:07:20,070
ratio and what's the result come on they

119
00:07:20,070 --> 00:07:21,540
told us in high see there told us in

120
00:07:21,540 --> 00:07:29,660
school like anything x 0 is 0

121
00:07:29,670 --> 00:07:32,350
functions do like with side effects or

122
00:07:32,350 --> 00:07:35,530
that rely on hidden state a dangerous

123
00:07:35,530 --> 00:07:38,200
can be dangerous that's where fewer

124
00:07:38,200 --> 00:07:39,250
functions have some really nice

125
00:07:39,250 --> 00:07:43,240
qualities they make it easier to reason

126
00:07:43,240 --> 00:07:48,460
about the behavior of our code to make

127
00:07:48,460 --> 00:07:53,070
like assumptions about the behavior what

128
00:07:53,070 --> 00:07:54,850
optimizations we could make and things

129
00:07:54,850 --> 00:07:57,220
like that they're composable and I went

130
00:07:57,220 --> 00:07:58,870
composable to sort of run through this

131
00:07:58,870 --> 00:08:05,440
talk as a theme i guess if we know what

132
00:08:05,440 --> 00:08:06,940
has to go in and we know what comes out

133
00:08:06,940 --> 00:08:08,830
then we can use the output as input of

134
00:08:08,830 --> 00:08:10,090
something else and we know that it's not

135
00:08:10,090 --> 00:08:11,590
going to break anything else and we can

136
00:08:11,590 --> 00:08:13,960
use all the functions together and

137
00:08:13,960 --> 00:08:16,870
they'll always work for all eternity or

138
00:08:16,870 --> 00:08:20,320
until the apocalypse but I want to talk

139
00:08:20,320 --> 00:08:22,390
about rendering and specifically making

140
00:08:22,390 --> 00:08:24,880
like widgets for the web and stuff which

141
00:08:24,880 --> 00:08:27,430
is harder to do without side effects

142
00:08:27,430 --> 00:08:30,040
thanks to our billing the technology we

143
00:08:30,040 --> 00:08:32,020
have it's hard to do anyway because the

144
00:08:32,020 --> 00:08:35,440
easiest way to think of a drawing API is

145
00:08:35,440 --> 00:08:36,640
through some functions that they you

146
00:08:36,640 --> 00:08:39,280
draw some stuff on the screen so here's

147
00:08:39,280 --> 00:08:43,300
an example where I'm calling the same

148
00:08:43,300 --> 00:08:45,790
function twice it should draw the same

149
00:08:45,790 --> 00:08:48,100
rectangle I'm sure same inputs I should

150
00:08:48,100 --> 00:08:52,839
get the same outputs but it's relying on

151
00:08:52,839 --> 00:08:55,570
a whole bunch of context that's why its

152
00:08:55,570 --> 00:08:57,640
context so depending on the context

153
00:08:57,640 --> 00:09:01,660
we'll get a different output addition

154
00:09:01,660 --> 00:09:03,520
the canvas is a bit slow for making

155
00:09:03,520 --> 00:09:08,230
widgets you can do it but pushing pixels

156
00:09:08,230 --> 00:09:10,420
is pretty slow using the built-in

157
00:09:10,420 --> 00:09:12,550
effects and you get a built-in shadows

158
00:09:12,550 --> 00:09:15,160
and things which would get with CSS so

159
00:09:15,160 --> 00:09:16,510
we want to be able to do something some

160
00:09:16,510 --> 00:09:19,180
more interesting stuff so WebGL that's

161
00:09:19,180 --> 00:09:20,980
an option now because it's supported

162
00:09:20,980 --> 00:09:24,070
everywhere and it's really fast and we

163
00:09:24,070 --> 00:09:27,910
can you know make 3d games that are

164
00:09:27,910 --> 00:09:32,200
really amazing but it's old and it's a

165
00:09:32,200 --> 00:09:33,910
big ball of state here's some

166
00:09:33,910 --> 00:09:36,430
boilerplate for setting up something

167
00:09:36,430 --> 00:09:38,620
just to draw a couple of triangles in

168
00:09:38,620 --> 00:09:39,950
WebGL

169
00:09:39,950 --> 00:09:43,700
and of the boilerplate these bits set

170
00:09:43,700 --> 00:09:47,360
global state it's a mess well you can

171
00:09:47,360 --> 00:09:49,070
feel that it's an old API when you use

172
00:09:49,070 --> 00:09:54,670
it you can feel the parts that that are

173
00:09:54,670 --> 00:09:56,810
troublesome and you have to be careful

174
00:09:56,810 --> 00:09:59,060
because you need to put things into a

175
00:09:59,060 --> 00:10:00,980
state do the drawing you want change the

176
00:10:00,980 --> 00:10:02,390
state do the drawing you want and then

177
00:10:02,390 --> 00:10:04,370
it becomes hard to reason about what

178
00:10:04,370 --> 00:10:06,950
what is in that in that the next frame

179
00:10:06,950 --> 00:10:10,970
of rendering so if we're going to go

180
00:10:10,970 --> 00:10:12,830
with something you had no state and was

181
00:10:12,830 --> 00:10:14,660
just pure functions but how could we

182
00:10:14,660 --> 00:10:18,380
draw anything then Haskell guys of if

183
00:10:18,380 --> 00:10:20,330
you ever do intro to Haskell then you

184
00:10:20,330 --> 00:10:22,250
know this problem is sleep you can't

185
00:10:22,250 --> 00:10:23,810
change anything you can't change state

186
00:10:23,810 --> 00:10:25,430
what am I supposed to do anything there

187
00:10:25,430 --> 00:10:27,560
is a way in the browser that currently

188
00:10:27,560 --> 00:10:29,290
exists and I don't know much about it

189
00:10:29,290 --> 00:10:35,710
but it is one it's the CSS only drawing

190
00:10:35,710 --> 00:10:37,910
think I don't know too much about this i

191
00:10:37,910 --> 00:10:41,000
like it because what i like about is its

192
00:10:41,000 --> 00:10:44,480
declarative stateless well I don't know

193
00:10:44,480 --> 00:10:45,680
if you'd want to use it it looks pretty

194
00:10:45,680 --> 00:10:47,990
hairy underneath it but it is one option

195
00:10:47,990 --> 00:10:49,940
but I don't really want to go making my

196
00:10:49,940 --> 00:10:52,760
widgets this way so I want to know what

197
00:10:52,760 --> 00:10:54,230
some other options are and I want them

198
00:10:54,230 --> 00:10:55,820
to be really fast because I want to do a

199
00:10:55,820 --> 00:10:58,310
lot of pixel pushing and a lot of

200
00:10:58,310 --> 00:11:02,350
advanced effects so i'm going to revisit

201
00:11:02,350 --> 00:11:06,320
WebGL this is the WebGL pipeline it's

202
00:11:06,320 --> 00:11:09,560
all the steps that happen to get some

203
00:11:09,560 --> 00:11:12,800
code from the of the from the API goes

204
00:11:12,800 --> 00:11:14,360
through a rendering pipeline and there's

205
00:11:14,360 --> 00:11:15,890
a couple of places where we're allowed a

206
00:11:15,890 --> 00:11:19,220
mess with stuff before it gets drawn to

207
00:11:19,220 --> 00:11:20,900
the screen and this happens every frame

208
00:11:20,900 --> 00:11:24,110
so you set up the pipeline and you can

209
00:11:24,110 --> 00:11:26,030
mess with it there's two places in here

210
00:11:26,030 --> 00:11:28,640
there's a vertex shader which is for

211
00:11:28,640 --> 00:11:31,370
defining your geometry and you vertexes

212
00:11:31,370 --> 00:11:33,530
in space and what things are going to

213
00:11:33,530 --> 00:11:35,750
sort of shape and then there's a

214
00:11:35,750 --> 00:11:38,030
fragment shader there the orange boxes

215
00:11:38,030 --> 00:11:42,950
in this the vertex shader defines the

216
00:11:42,950 --> 00:11:47,780
geometry in 3d so when it's not in 3d

217
00:11:47,780 --> 00:11:51,450
it's the model is 3d it could be 40 or

218
00:11:51,450 --> 00:11:54,880
just a model but it gets projected onto

219
00:11:54,880 --> 00:11:57,550
a 2d screen and usually it's 3 because

220
00:11:57,550 --> 00:12:00,010
that's the one we like looking at but if

221
00:12:00,010 --> 00:12:01,480
you draw it on the screen then it just

222
00:12:01,480 --> 00:12:03,640
looks like this is just a mash of color

223
00:12:03,640 --> 00:12:06,760
because screen is 2d it's we don't

224
00:12:06,760 --> 00:12:09,339
really have 3d screens in the way that

225
00:12:09,339 --> 00:12:11,860
we get some 3d effects and things that

226
00:12:11,860 --> 00:12:14,860
look like 3d is through the fragment

227
00:12:14,860 --> 00:12:19,029
shader and the fragment shader is what's

228
00:12:19,029 --> 00:12:21,640
responsible for doing a lighting and fog

229
00:12:21,640 --> 00:12:24,640
and highlights and and things like that

230
00:12:24,640 --> 00:12:26,820
that make things look really cool I

231
00:12:26,820 --> 00:12:28,810
don't know where there was a hashtag and

232
00:12:28,810 --> 00:12:34,209
I'm sorry the way the fragment shader

233
00:12:34,209 --> 00:12:36,399
works so you have your geometry and it's

234
00:12:36,399 --> 00:12:38,440
made up of triangles so whatever your

235
00:12:38,440 --> 00:12:40,600
shape is is made up a whole ton of

236
00:12:40,600 --> 00:12:45,640
triangles and for each triangle one of

237
00:12:45,640 --> 00:12:49,630
the steps in that render pipeline is the

238
00:12:49,630 --> 00:12:53,050
vertex shader and this is where we have

239
00:12:53,050 --> 00:12:57,070
a chance to color coughing's in the

240
00:12:57,070 --> 00:12:58,690
first example I showed where it was just

241
00:12:58,690 --> 00:13:01,180
flat we're just making choosing a color

242
00:13:01,180 --> 00:13:03,459
white for every pixel we're saying this

243
00:13:03,459 --> 00:13:05,560
is the color it's white here I'm saying

244
00:13:05,560 --> 00:13:07,000
it's red so I don't know if you can

245
00:13:07,000 --> 00:13:10,560
really see it there every pixel is red

246
00:13:10,560 --> 00:13:13,390
because I've setting the fragment color

247
00:13:13,390 --> 00:13:18,610
to be 100 and one for alpha that little

248
00:13:18,610 --> 00:13:23,410
bit of snippet of code is glsl GL shader

249
00:13:23,410 --> 00:13:27,180
language it's kind of a see like

250
00:13:27,180 --> 00:13:31,089
language it's pretty interesting has

251
00:13:31,089 --> 00:13:32,350
some interesting properties that we'll

252
00:13:32,350 --> 00:13:34,020
look at in a minute and the reason that

253
00:13:34,020 --> 00:13:35,740
the thing that makes it so interesting

254
00:13:35,740 --> 00:13:42,190
is that although the WebGL whole API is

255
00:13:42,190 --> 00:13:46,089
very stateful and you need to be careful

256
00:13:46,089 --> 00:13:47,649
where you're mutating things and

257
00:13:47,649 --> 00:13:49,930
changing things shaders themselves are

258
00:13:49,930 --> 00:13:52,209
very functional they're just a function

259
00:13:52,209 --> 00:13:55,990
from point to color and so for every

260
00:13:55,990 --> 00:13:59,440
spot on a triangle you get to choose

261
00:13:59,440 --> 00:14:01,480
what color comes out it'll say like the

262
00:14:01,480 --> 00:14:03,790
first pixel and you say it's read this

263
00:14:03,790 --> 00:14:05,770
can pick celine say it's red the third

264
00:14:05,770 --> 00:14:08,080
pixel ooh so it's slightly less red and

265
00:14:08,080 --> 00:14:11,290
then it looks like we have shading or of

266
00:14:11,290 --> 00:14:14,980
course just like CSS drawing which is

267
00:14:14,980 --> 00:14:18,190
kind of seems like a hack a cool one

268
00:14:18,190 --> 00:14:20,800
people do abuse them and instead of just

269
00:14:20,800 --> 00:14:23,020
making lighting effects people start

270
00:14:23,020 --> 00:14:29,410
doing winamp visualizations because they

271
00:14:29,410 --> 00:14:31,660
look really cool and that's what we want

272
00:14:31,660 --> 00:14:35,650
but this is all in the browser now and

273
00:14:35,650 --> 00:14:38,290
it's all supported in a lot of places

274
00:14:38,290 --> 00:14:42,490
and we can use it everywhere so there's

275
00:14:42,490 --> 00:14:45,940
this sort of a side stream of shading

276
00:14:45,940 --> 00:14:48,610
shape shader coding that's run up in the

277
00:14:48,610 --> 00:14:52,660
world and it relies not on the geometry

278
00:14:52,660 --> 00:14:55,390
in 3d shapes but it's just on two

279
00:14:55,390 --> 00:14:58,360
triangles so here's my phone on the side

280
00:14:58,360 --> 00:15:01,810
and the two triangles are a box and we

281
00:15:01,810 --> 00:15:03,340
know from the web if we know the box

282
00:15:03,340 --> 00:15:04,930
model we know things are made up of

283
00:15:04,930 --> 00:15:09,040
boxes but we can convert every box into

284
00:15:09,040 --> 00:15:11,650
two triangles and we have a box and then

285
00:15:11,650 --> 00:15:15,910
for every pixel on the screen we can run

286
00:15:15,910 --> 00:15:18,070
a program I think about that that's

287
00:15:18,070 --> 00:15:21,190
pretty crazy every point we get to run a

288
00:15:21,190 --> 00:15:24,250
program and say what color should come

289
00:15:24,250 --> 00:15:27,250
out and like everything on the internet

290
00:15:27,250 --> 00:15:31,510
is in the world as soon as someone comes

291
00:15:31,510 --> 00:15:33,970
up with like a little creative idea for

292
00:15:33,970 --> 00:15:35,560
using something it goes out of control

293
00:15:35,560 --> 00:15:39,100
arm this is that here's some video from

294
00:15:39,100 --> 00:15:41,890
this year's shader showdown finals which

295
00:15:41,890 --> 00:15:46,260
is live coding glsl shaders in

296
00:15:46,260 --> 00:15:49,840
competitive mode

297
00:15:49,850 --> 00:15:52,470
that's from the revision demo party this

298
00:15:52,470 --> 00:15:58,109
year and people make if if you look on

299
00:15:58,109 --> 00:16:04,649
shader toy calm and GL SL doraku calm

300
00:16:04,649 --> 00:16:10,759
there's amazing amount of effects and

301
00:16:10,759 --> 00:16:14,660
creative outlet like creative output

302
00:16:14,660 --> 00:16:18,779
from simple tiny functions and that's

303
00:16:18,779 --> 00:16:20,220
what the shaders are they're made up of

304
00:16:20,220 --> 00:16:24,119
like they're just simple functions that

305
00:16:24,119 --> 00:16:27,509
are pure and can be composed and once

306
00:16:27,509 --> 00:16:29,699
you have those two properties you mash

307
00:16:29,699 --> 00:16:30,839
things together and you can make

308
00:16:30,839 --> 00:16:32,189
something bigger and you can rely on

309
00:16:32,189 --> 00:16:34,470
that and that's when things get

310
00:16:34,470 --> 00:16:37,709
interesting so this is just a little

311
00:16:37,709 --> 00:16:41,549
side just like in the CSS shaders the

312
00:16:41,549 --> 00:16:46,169
CSS drawing you you can start making

313
00:16:46,169 --> 00:16:48,480
extra shapes people figure out how like

314
00:16:48,480 --> 00:16:50,970
if I can if I can run a program at every

315
00:16:50,970 --> 00:16:54,329
dot and I figure out how far each point

316
00:16:54,329 --> 00:16:59,970
is from the center of the canvas and I

317
00:16:59,970 --> 00:17:02,220
make it either black if it's further

318
00:17:02,220 --> 00:17:06,059
away or red if it's closer to this point

319
00:17:06,059 --> 00:17:08,339
then I have a circle and so you have a

320
00:17:08,339 --> 00:17:09,839
simple thing for making a circle and

321
00:17:09,839 --> 00:17:15,000
then that extends to other shapes simple

322
00:17:15,000 --> 00:17:19,019
functions that generate a shape then

323
00:17:19,019 --> 00:17:20,699
they can be combined because it's just a

324
00:17:20,699 --> 00:17:22,740
function and you have things like the

325
00:17:22,740 --> 00:17:25,610
minimum function I'll show you this guy

326
00:17:25,610 --> 00:17:28,169
here here's an example they've got to

327
00:17:28,169 --> 00:17:30,090
define a box which is one of those

328
00:17:30,090 --> 00:17:32,610
previous functions and a cylinder and

329
00:17:32,610 --> 00:17:34,740
then the minimum between from the

330
00:17:34,740 --> 00:17:38,309
surface to whichever one is farthest

331
00:17:38,309 --> 00:17:40,679
away gets drawn and they looks like they

332
00:17:40,679 --> 00:17:42,929
intersect looks like there's the union

333
00:17:42,929 --> 00:17:44,669
of the two and you can do the opposite

334
00:17:44,669 --> 00:17:45,960
and get the intersection and then you

335
00:17:45,960 --> 00:17:48,659
can start carving out shapes and then

336
00:17:48,659 --> 00:17:51,570
you can become you can have more complex

337
00:17:51,570 --> 00:17:53,880
shapes that are just made up of these

338
00:17:53,880 --> 00:17:56,990
same small functions added together and

339
00:17:56,990 --> 00:17:59,760
again it's the internet so people go

340
00:17:59,760 --> 00:18:02,520
crazy this is from

341
00:18:02,520 --> 00:18:07,260
a pc demo 64k it's a 64k demo but this

342
00:18:07,260 --> 00:18:09,240
is just one tiny piece of it there's a

343
00:18:09,240 --> 00:18:13,230
lot in there all made up of those

344
00:18:13,230 --> 00:18:17,580
functions together composed and you're

345
00:18:17,580 --> 00:18:20,760
making these scenes so crazy that's the

346
00:18:20,760 --> 00:18:23,040
power of pure functions and

347
00:18:23,040 --> 00:18:25,800
composability and that's what we need is

348
00:18:25,800 --> 00:18:27,120
start that's what I'm really interested

349
00:18:27,120 --> 00:18:29,300
in there's something at the moment that

350
00:18:29,300 --> 00:18:32,520
okay let's let's get out from shaders

351
00:18:32,520 --> 00:18:34,410
and 3d and things and we'll go back to

352
00:18:34,410 --> 00:18:41,400
web dev a bit and apps there is a

353
00:18:41,400 --> 00:18:45,270
technology that's become big now that is

354
00:18:45,270 --> 00:18:49,550
kind of following these this idea of

355
00:18:49,550 --> 00:18:54,500
composable pieces and in a functional

356
00:18:54,500 --> 00:19:00,540
manner and that is react it's a

357
00:19:00,540 --> 00:19:03,150
JavaScript library for building user

358
00:19:03,150 --> 00:19:07,560
interfaces but it's I mean everyone when

359
00:19:07,560 --> 00:19:09,510
they first had it's like oh not another

360
00:19:09,510 --> 00:19:12,300
framework but this one I like this this

361
00:19:12,300 --> 00:19:14,700
I love the core ideas of react which is

362
00:19:14,700 --> 00:19:18,840
this idea of composers ability and pure

363
00:19:18,840 --> 00:19:21,060
functions and now how is reactive pure

364
00:19:21,060 --> 00:19:23,220
function will you make up your

365
00:19:23,220 --> 00:19:25,260
components and whatever you want to get

366
00:19:25,260 --> 00:19:28,260
because it has this one-way data flow

367
00:19:28,260 --> 00:19:31,530
model to get anything into a component

368
00:19:31,530 --> 00:19:34,440
it has to come from above a parent or be

369
00:19:34,440 --> 00:19:36,660
part of its local state so there are two

370
00:19:36,660 --> 00:19:38,160
ways that you can affect how something's

371
00:19:38,160 --> 00:19:41,000
rendered in react which means it's a

372
00:19:41,000 --> 00:19:44,550
function of its properties passed down

373
00:19:44,550 --> 00:19:48,540
and its local state which is only

374
00:19:48,540 --> 00:19:52,020
looking after itself to their virtual

375
00:19:52,020 --> 00:19:54,150
Dom thing which then under the magic

376
00:19:54,150 --> 00:19:56,460
under the hood gets turned into real Dom

377
00:19:56,460 --> 00:19:58,260
which i think is not the interesting

378
00:19:58,260 --> 00:19:59,940
part of react this is the interesting

379
00:19:59,940 --> 00:20:03,390
part of react you get the benefits of

380
00:20:03,390 --> 00:20:06,900
pure functions like being out a reason

381
00:20:06,900 --> 00:20:08,400
about it and you know what Abdul

382
00:20:08,400 --> 00:20:10,730
performance optimizations

383
00:20:10,730 --> 00:20:13,560
all the good things that we come from

384
00:20:13,560 --> 00:20:16,260
the shaders that come from pure

385
00:20:16,260 --> 00:20:19,470
functions in case you haven't seen it

386
00:20:19,470 --> 00:20:22,200
here's a terrible example I just quickly

387
00:20:22,200 --> 00:20:25,380
wrote up but you'll have a component you

388
00:20:25,380 --> 00:20:29,490
can pass in some properties and inside

389
00:20:29,490 --> 00:20:32,100
the components you have the state so

390
00:20:32,100 --> 00:20:35,490
then each your app becomes a composition

391
00:20:35,490 --> 00:20:39,270
of these components and like I said it

392
00:20:39,270 --> 00:20:41,100
isolates the state in the component and

393
00:20:41,100 --> 00:20:43,740
then can be composed which is what i'm

394
00:20:43,740 --> 00:20:48,020
talking about as being interesting whoo

395
00:20:48,020 --> 00:20:52,500
so now finally talked about shaders and

396
00:20:52,500 --> 00:20:54,840
you will guys were all like whoa those

397
00:20:54,840 --> 00:20:57,750
shaders are really cool oh and then I

398
00:20:57,750 --> 00:20:59,430
talked about reacting you're like yeah

399
00:20:59,430 --> 00:21:01,260
react that's really cool now so

400
00:21:01,260 --> 00:21:02,910
obviously at this point you're all

401
00:21:02,910 --> 00:21:06,540
thinking come can't we have react and

402
00:21:06,540 --> 00:21:12,390
shaders together well I've got some good

403
00:21:12,390 --> 00:21:20,100
news introducing GL react this is a this

404
00:21:20,100 --> 00:21:22,140
is a project that I've been working on

405
00:21:22,140 --> 00:21:25,560
at us our super-secret startup it's a

406
00:21:25,560 --> 00:21:27,060
little bit less super-secret now it's

407
00:21:27,060 --> 00:21:29,790
called Project September I can say your

408
00:21:29,790 --> 00:21:32,430
name we've been working for the last

409
00:21:32,430 --> 00:21:35,280
five or so months on an application that

410
00:21:35,280 --> 00:21:39,720
will be out in January it's all react

411
00:21:39,720 --> 00:21:45,110
native and graph ql and fun stuff and

412
00:21:45,110 --> 00:21:49,670
it's in the businesses in the fashion

413
00:21:49,670 --> 00:21:56,390
social fashion something like that now

414
00:21:56,390 --> 00:21:58,680
the problem with this is that it needs

415
00:21:58,680 --> 00:22:00,330
to look I mean it's not a problem it's

416
00:22:00,330 --> 00:22:02,760
an excellent problem if you're going to

417
00:22:02,760 --> 00:22:06,330
release a fashion social app it has to

418
00:22:06,330 --> 00:22:08,190
look really cool and it has to be really

419
00:22:08,190 --> 00:22:10,800
interesting and has to get people

420
00:22:10,800 --> 00:22:13,590
quickly you have a small time to try to

421
00:22:13,590 --> 00:22:15,690
get somebody hooked on your app and go

422
00:22:15,690 --> 00:22:17,820
and it's in that fashion is they're

423
00:22:17,820 --> 00:22:20,419
fickle you know so

424
00:22:20,419 --> 00:22:22,730
the design our designer she's really

425
00:22:22,730 --> 00:22:25,070
good and she wanted a bunch of things

426
00:22:25,070 --> 00:22:29,179
that just don't exist as designers one

427
00:22:29,179 --> 00:22:32,929
and so we decided it was a good chance

428
00:22:32,929 --> 00:22:38,210
to get the power of WebGL into a react

429
00:22:38,210 --> 00:22:41,739
native app it seemed to make sense and

430
00:22:41,739 --> 00:22:45,080
thanks to my good friend and co-worker

431
00:22:45,080 --> 00:22:49,899
gate on Ronaldo who came over from Paris

432
00:22:49,899 --> 00:22:52,519
one week and the first week he started

433
00:22:52,519 --> 00:22:56,149
with us and turned out most of G or

434
00:22:56,149 --> 00:23:02,580
react now he's made it all summer and

435
00:23:02,590 --> 00:23:07,009
I'm presenting it GL react is the two

436
00:23:07,009 --> 00:23:09,559
triangles I talked about before two

437
00:23:09,559 --> 00:23:12,499
triangles make up a box the box is the

438
00:23:12,499 --> 00:23:15,289
component so in react whatever you would

439
00:23:15,289 --> 00:23:17,659
be rendering is these two triangles come

440
00:23:17,659 --> 00:23:20,119
out because it's WebGL it's super fast

441
00:23:20,119 --> 00:23:22,779
and you can do some interesting things

442
00:23:22,779 --> 00:23:25,580
because it's react and because the way

443
00:23:25,580 --> 00:23:28,730
we've written it it's very composable

444
00:23:28,730 --> 00:23:32,720
and you can instead of having one off

445
00:23:32,720 --> 00:23:34,779
little shaders that i was showing before

446
00:23:34,779 --> 00:23:37,309
you have the ability to compose the

447
00:23:37,309 --> 00:23:41,600
shaders in a react way and make complex

448
00:23:41,600 --> 00:23:43,039
effects which you can then packaged

449
00:23:43,039 --> 00:23:45,320
together as a new effect and use that

450
00:23:45,320 --> 00:23:46,850
somewhere else and package that together

451
00:23:46,850 --> 00:23:49,460
as a new effect and all those advantages

452
00:23:49,460 --> 00:23:54,169
of composability can be yours what can

453
00:23:54,169 --> 00:24:00,830
it do oh you ask he asks yes well it can

454
00:24:00,830 --> 00:24:02,480
be its I said it's two triangles and

455
00:24:02,480 --> 00:24:06,379
shader so it does have a can-do shade

456
00:24:06,379 --> 00:24:08,139
it's just what I was showing before like

457
00:24:08,139 --> 00:24:11,239
that is what it does it can draw two

458
00:24:11,239 --> 00:24:14,869
triangles you can run a glsl program for

459
00:24:14,869 --> 00:24:17,179
every pixel in those two triangles and

460
00:24:17,179 --> 00:24:20,960
you can do fancy shader effects but

461
00:24:20,960 --> 00:24:24,019
that's not why we built it we built it

462
00:24:24,019 --> 00:24:26,149
because we needed it for making widgets

463
00:24:26,149 --> 00:24:29,130
and making things that we couldn't do

464
00:24:29,130 --> 00:24:34,050
in the UI alone and Dom so for example

465
00:24:34,050 --> 00:24:37,470
we needed a way to Instagram afire

466
00:24:37,470 --> 00:24:45,330
things we needed a way to rotate hues

467
00:24:45,330 --> 00:24:52,410
and change text dynamically we needed to

468
00:24:52,410 --> 00:24:54,420
draw things and now this one I like this

469
00:24:54,420 --> 00:24:57,960
one because it's using is it going it's

470
00:24:57,960 --> 00:25:02,970
using a where does he go he's not going

471
00:25:02,970 --> 00:25:05,820
anyway it's a pie chart doesn't know it

472
00:25:05,820 --> 00:25:07,560
looks at it's a pie loader it looks

473
00:25:07,560 --> 00:25:10,200
better than that in real life there we

474
00:25:10,200 --> 00:25:13,740
go now it's using that idea of drawing a

475
00:25:13,740 --> 00:25:16,550
function where am I at this point am i

476
00:25:16,550 --> 00:25:19,350
if the pixels here am I on or off that

477
00:25:19,350 --> 00:25:21,750
kind of thing so it's using all the same

478
00:25:21,750 --> 00:25:24,150
techniques that come from the crazy demo

479
00:25:24,150 --> 00:25:28,230
scene world to draw a UI component it's

480
00:25:28,230 --> 00:25:30,060
going to be in a fashion app that's kind

481
00:25:30,060 --> 00:25:33,150
of cool I like that idea we've it can do

482
00:25:33,150 --> 00:25:36,720
more advanced things here can't really

483
00:25:36,720 --> 00:25:38,640
see it on here but it's like instant

484
00:25:38,640 --> 00:25:42,810
tilt-shift with vignette effects and you

485
00:25:42,810 --> 00:25:44,790
stuck and poison is very it's very

486
00:25:44,790 --> 00:25:48,360
snazzy but where can you use it you

487
00:25:48,360 --> 00:25:58,440
asking hey everywhere for Country and

488
00:25:58,440 --> 00:26:04,890
Western iOS and Android and desktop so

489
00:26:04,890 --> 00:26:06,930
it's it's a good library for doing some

490
00:26:06,930 --> 00:26:11,820
cool things but just like react I think

491
00:26:11,820 --> 00:26:13,970
the important things are not like what

492
00:26:13,970 --> 00:26:16,830
fancy-pants things going to do is what

493
00:26:16,830 --> 00:26:19,340
are the core principles behind it and

494
00:26:19,340 --> 00:26:23,010
what I think is most interesting about

495
00:26:23,010 --> 00:26:24,450
this and I've said it a million times

496
00:26:24,450 --> 00:26:27,150
now is the composability aspect of it

497
00:26:27,150 --> 00:26:31,350
being able to know that what you're

498
00:26:31,350 --> 00:26:32,550
putting in is what you're going to get

499
00:26:32,550 --> 00:26:34,860
out all the time and be able to take the

500
00:26:34,860 --> 00:26:36,480
output put it as the input of something

501
00:26:36,480 --> 00:26:39,920
else and make something bigger

502
00:26:39,920 --> 00:26:43,610
where am I and it gets rid of all the

503
00:26:43,610 --> 00:26:45,860
crappy with WebGL stuff which is really

504
00:26:45,860 --> 00:26:47,960
nice because we're the WebGL stuff is is

505
00:26:47,960 --> 00:26:52,370
horrible so today actually or maybe

506
00:26:52,370 --> 00:26:55,280
tomorrow is the launch of GTL react

507
00:26:55,280 --> 00:27:01,190
version to wait you know epic I didn't

508
00:27:01,190 --> 00:27:07,010
even know Joey at version 1 now we are

509
00:27:07,010 --> 00:27:09,050
first version of it was kind of a

510
00:27:09,050 --> 00:27:13,040
prototype and now this version is much

511
00:27:13,040 --> 00:27:17,780
more powerful and works as a react

512
00:27:17,780 --> 00:27:20,780
component as a dumb as react native and

513
00:27:20,780 --> 00:27:24,290
in the Dom it's hitting WebGL on the

514
00:27:24,290 --> 00:27:26,870
browser and it's hitting we had to write

515
00:27:26,870 --> 00:27:30,650
a bunch of objective-c in java for react

516
00:27:30,650 --> 00:27:33,950
native so you guys didn't have to the

517
00:27:33,950 --> 00:27:38,420
api is pretty simple and in fact it got

518
00:27:38,420 --> 00:27:40,250
a little more complicated in version 2

519
00:27:40,250 --> 00:27:43,250
to take advantage of this what I've been

520
00:27:43,250 --> 00:27:45,770
banging on about those ability I'll

521
00:27:45,770 --> 00:27:48,470
quickly show you how this is getting the

522
00:27:48,470 --> 00:27:52,820
simplest shader you can into our GL

523
00:27:52,820 --> 00:27:54,980
create shader which is exactly modeled

524
00:27:54,980 --> 00:28:00,500
on the stylesheet create from react we

525
00:28:00,500 --> 00:28:02,720
make a component which is a function

526
00:28:02,720 --> 00:28:07,820
that will render out a GL node which is

527
00:28:07,820 --> 00:28:09,920
the loss the part in the middle and the

528
00:28:09,920 --> 00:28:12,110
GL mode is the effect itself the thing

529
00:28:12,110 --> 00:28:13,430
that you want to do so here I'm saying

530
00:28:13,430 --> 00:28:17,420
it's that hello GL effect and it can

531
00:28:17,420 --> 00:28:18,830
take some extra things that I'll talk

532
00:28:18,830 --> 00:28:20,900
about in a minute now the final part and

533
00:28:20,900 --> 00:28:24,170
the reason that the API is like more

534
00:28:24,170 --> 00:28:26,660
verbose on this end is because we split

535
00:28:26,660 --> 00:28:29,990
out the surface now the surface is what

536
00:28:29,990 --> 00:28:31,850
finally renders that so there's a

537
00:28:31,850 --> 00:28:34,250
surface for react native and as a

538
00:28:34,250 --> 00:28:39,950
surface for the DOM and the effect goes

539
00:28:39,950 --> 00:28:41,690
in the middle what what's good about

540
00:28:41,690 --> 00:28:43,460
that is that the effect in the middle is

541
00:28:43,460 --> 00:28:45,650
now it doesn't care where it's running

542
00:28:45,650 --> 00:28:47,300
at all and it remains exactly the same

543
00:28:47,300 --> 00:28:49,250
everywhere and you can package it up and

544
00:28:49,250 --> 00:28:49,920
put on MP

545
00:28:49,920 --> 00:28:52,470
and anybody can use it in react native

546
00:28:52,470 --> 00:28:57,180
or wherever react goes next and and it

547
00:28:57,180 --> 00:29:01,260
will work like by magic go skip over

548
00:29:01,260 --> 00:29:05,850
this one you can rasterize a bunch of

549
00:29:05,850 --> 00:29:10,680
stuff like images and and other GL modes

550
00:29:10,680 --> 00:29:13,020
so talk about a minute here's an example

551
00:29:13,020 --> 00:29:16,710
with react canvas spitting out some

552
00:29:16,710 --> 00:29:18,660
images and texts that get turned into

553
00:29:18,660 --> 00:29:20,850
canvas which think you can run pixel

554
00:29:20,850 --> 00:29:22,710
shaders over your fragment shaders over

555
00:29:22,710 --> 00:29:26,480
ok finally my favorite thing is

556
00:29:26,480 --> 00:29:28,740
composability this is why I think that

557
00:29:28,740 --> 00:29:32,070
it's a really cool tool I start with a

558
00:29:32,070 --> 00:29:35,360
dog with a garlic clove on its head and

559
00:29:35,360 --> 00:29:40,260
over you make the before I showed the

560
00:29:40,260 --> 00:29:42,630
create component and it spits back it

561
00:29:42,630 --> 00:29:45,240
runs the GL mode and will affect

562
00:29:45,240 --> 00:29:47,340
whatever the children are so here I've

563
00:29:47,340 --> 00:29:49,440
made that just a plain old react

564
00:29:49,440 --> 00:29:52,290
component which is the blur and it can

565
00:29:52,290 --> 00:29:54,180
then be used with whatever you put in

566
00:29:54,180 --> 00:29:56,820
the middle either a URL or another GL

567
00:29:56,820 --> 00:30:02,430
node or or another GL component and then

568
00:30:02,430 --> 00:30:03,960
you can combine them so then you make

569
00:30:03,960 --> 00:30:06,270
another one is a humor Tate effect and

570
00:30:06,270 --> 00:30:08,970
then our dogs gone blurry and funny

571
00:30:08,970 --> 00:30:10,650
colored and then you can combine it with

572
00:30:10,650 --> 00:30:12,240
a negative effect and then it's gone

573
00:30:12,240 --> 00:30:16,670
blurry and you rotated and negative and

574
00:30:16,670 --> 00:30:20,130
what's up word is then another effect

575
00:30:20,130 --> 00:30:22,010
that you can have an effect called

576
00:30:22,010 --> 00:30:26,580
blurry rotate negative thing and then

577
00:30:26,580 --> 00:30:28,590
use that anywhere inside your inside

578
00:30:28,590 --> 00:30:30,690
your own programs which is really cool

579
00:30:30,690 --> 00:30:32,880
also because it works like react native

580
00:30:32,880 --> 00:30:36,090
like react it lets us do some other

581
00:30:36,090 --> 00:30:38,850
crazy things like the most impressive is

582
00:30:38,850 --> 00:30:43,020
been utter share nodes we make a render

583
00:30:43,020 --> 00:30:45,330
treat like an AST that is what needs to

584
00:30:45,330 --> 00:30:46,950
be rendered then we can look at things

585
00:30:46,950 --> 00:30:49,200
for referential transparency say that's

586
00:30:49,200 --> 00:30:50,220
the same thing that's the same thing

587
00:30:50,220 --> 00:30:52,050
they can be the same note and we can do

588
00:30:52,050 --> 00:30:55,020
a bunch less processing in WebGL which

589
00:30:55,020 --> 00:30:58,320
is really interesting and as I said then

590
00:30:58,320 --> 00:30:59,820
you can just package them up as your

591
00:30:59,820 --> 00:31:02,260
effect that you want run my affair

592
00:31:02,260 --> 00:31:05,020
and anybody in the world can use them in

593
00:31:05,020 --> 00:31:10,750
fact just today there's been six effects

594
00:31:10,750 --> 00:31:14,260
pushed to mpm so you can start playing

595
00:31:14,260 --> 00:31:18,040
with them today GL react negative and

596
00:31:18,040 --> 00:31:20,230
contrast saturation and things like that

597
00:31:20,230 --> 00:31:23,380
so we're hoping that this is going to

598
00:31:23,380 --> 00:31:24,400
grow and people are going to start

599
00:31:24,400 --> 00:31:28,390
adding really cool effects and the

600
00:31:28,390 --> 00:31:31,630
beauty is that none of the power of glsl

601
00:31:31,630 --> 00:31:33,040
is hidden from you if you want to get

602
00:31:33,040 --> 00:31:35,260
your hands dirty and be the shader

603
00:31:35,260 --> 00:31:38,740
coders competition next year then start

604
00:31:38,740 --> 00:31:40,570
now it's a good good way to start

605
00:31:40,570 --> 00:31:42,610
learning and if you don't want to see

606
00:31:42,610 --> 00:31:45,430
glsl in your life then go to NPM and

607
00:31:45,430 --> 00:31:46,930
find the affects other people are doing

608
00:31:46,930 --> 00:31:49,360
and then you can just apply them to any

609
00:31:49,360 --> 00:31:52,030
set of two triangles and your component

610
00:31:52,030 --> 00:31:56,470
in your app lastly lastly lastly is

611
00:31:56,470 --> 00:31:58,510
there's the GL react playground which

612
00:31:58,510 --> 00:32:00,370
will show you your shader broken down

613
00:32:00,370 --> 00:32:04,180
into into its render tree on right there

614
00:32:04,180 --> 00:32:08,050
and all the pieces that will retreat

615
00:32:08,050 --> 00:32:10,030
it's being processed so you can see

616
00:32:10,030 --> 00:32:12,790
performance issues or how long things

617
00:32:12,790 --> 00:32:14,380
are taking and what things look like at

618
00:32:14,380 --> 00:32:16,990
each step then you can tweak it and you

619
00:32:16,990 --> 00:32:19,240
can make really cool effects so there

620
00:32:19,240 --> 00:32:24,070
you go composability is powerful try not

621
00:32:24,070 --> 00:32:26,020
to mutate state if you can avoid it and

622
00:32:26,020 --> 00:32:30,070
WebGL is going to be really cool for

623
00:32:30,070 --> 00:32:37,379
making widgets thank

