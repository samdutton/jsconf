1
00:00:02,510 --> 00:00:07,250
Sociolinguistics and the JavaScript Community:
A Love Story

2
00:00:07,250 --> 00:00:09,670
By
Harriett Lawrence

3
00:00:39,789 --> 00:00:40,789
[ Applause ]
>> Okay.

4
00:00:40,789 --> 00:00:41,789
Hello, I'm Harriet.

5
00:00:41,789 --> 00:00:42,789
As Glenn said, I'm from Melbourne, Australia.

6
00:00:42,789 --> 00:00:45,199
And today I'm going talking about community
building with the help of sociolinguistics.

7
00:00:45,199 --> 00:00:53,260
This is a talk about what it is, how to use
in the JavaScript and how we can use it in

8
00:00:53,260 --> 00:00:59,229
daytoday communications to make it more welcoming
and a thing to be a part

9
00:00:59,229 --> 00:01:03,739
Of before that, a little bit about me.

10
00:01:03,739 --> 00:01:05,790
I work as a technical writer.

11
00:01:05,790 --> 00:01:08,510
We're a continuous integration platform.

12
00:01:08,510 --> 00:01:10,280
Our product is mostly used by other developers.

13
00:01:10,280 --> 00:01:16,230
So I spend a lot of time thinking about how
best to explain parts of our product to nontechnical

14
00:01:16,230 --> 00:01:19,150
users who may or may not be familiar with
integration.

15
00:01:19,150 --> 00:01:26,930
I worked for five years before I found I was
interested in writing documentation and helping

16
00:01:26,930 --> 00:01:30,980
other developers use cool tools than writing
code.

17
00:01:30,980 --> 00:01:33,500
This kicked off my master's degree.

18
00:01:33,500 --> 00:01:39,880
And I'm mostly through a master�s of applied
linguistic at the University of Melbourne.

19
00:01:39,880 --> 00:01:48,170
I got interested in the intersection of linguistics
and computer science.

20
00:01:48,170 --> 00:01:52,350
This started as a paper for uni, this paper,
in fact.

21
00:01:52,350 --> 00:01:59,280
And gave me the opportunity to prepare a tutorial
that introduced JavaScript from a few years

22
00:01:59,280 --> 00:02:00,320
ago.

23
00:02:00,320 --> 00:02:05,100
I can't squish 4 or 5,000 words into a 25minute
talk.

24
00:02:05,100 --> 00:02:09,690
But I'll do my best and you can find me afterwards
with questions.

25
00:02:09,690 --> 00:02:11,879
For so let's talk about communities.

26
00:02:11,879 --> 00:02:14,349
What is a community?

27
00:02:14,349 --> 00:02:17,590
Pretty much just a bunch of people all together
doing a thing.

28
00:02:17,590 --> 00:02:20,290
In linguistics, it's a community of practice.

29
00:02:20,290 --> 00:02:22,909
It's a shared meeting making.

30
00:02:22,909 --> 00:02:27,340
And usually this term is used for communities
formed around a specific goal.

31
00:02:27,340 --> 00:02:30,340
Like a project or an open source tool.

32
00:02:30,340 --> 00:02:34,629
But we can take this further and look at communities
that form around programming languages.

33
00:02:34,629 --> 00:02:39,740
They're communities of practice just like
those that form around natural languages.

34
00:02:39,740 --> 00:02:43,090
We need to look at what the community looks
like from the outside as well as from the

35
00:02:43,090 --> 00:02:44,150
inside.

36
00:02:44,150 --> 00:02:46,739
This is how it looks to potential members.

37
00:02:46,739 --> 00:02:54,180
When they want to join the community, they
have to look at what they are doing differently.

38
00:02:54,180 --> 00:02:59,909
And we are part of the JavaScript and part
of other ones as well.

39
00:02:59,909 --> 00:03:10,760
How do you feel beauty talking about using
JavaScript versus Ruby and Erlang.

40
00:03:10,760 --> 00:03:18,359
They can be divided into language and culture.

41
00:03:18,359 --> 00:03:22,550
The language is jargon and communitywide injokes.

42
00:03:22,550 --> 00:03:23,989
That kind of stuff.

43
00:03:23,989 --> 00:03:28,439
The cultural things, our approach to open
source, diversity strategy, how we go about

44
00:03:28,439 --> 00:03:30,569
solving problems.

45
00:03:30,569 --> 00:03:33,519
Problems with communication as well as programming
problems.

46
00:03:33,519 --> 00:03:40,010
The language can also be described in linguistic
faction early, and social factors.

47
00:03:40,010 --> 00:03:44,879
We mush these together, we get sociolinguistics.

48
00:03:44,879 --> 00:03:46,599
And we have definitions.

49
00:03:46,599 --> 00:03:49,189
Sociolinguistic, study of how language functions
in a society.

50
00:03:49,189 --> 00:03:54,150
This is a really broad field and covers way
too much stuff for this talk.

51
00:03:54,150 --> 00:03:59,419
So something relevant to us is language socialization.

52
00:03:59,419 --> 00:04:02,359
Becoming a member of society through the use
of language.

53
00:04:02,359 --> 00:04:06,290
I said this talk about would be about sociolinguistic,
I lied.

54
00:04:06,290 --> 00:04:07,529
It is about socialization.

55
00:04:07,529 --> 00:04:09,949
But doesn't sound as exciting.

56
00:04:09,949 --> 00:04:17,580
In the natural language learning sense, socialization
is the words we use and all of the other stuff

57
00:04:17,580 --> 00:04:19,030
that's not words as well.

58
00:04:19,030 --> 00:04:22,460
You might be familiar with this concept.

59
00:04:22,460 --> 00:04:25,810
Have you found it's easier to learn a language
if you're living in a country that speaks

60
00:04:25,810 --> 00:04:27,050
it?

61
00:04:27,050 --> 00:04:30,650
You get the pronunciation and the slang and
the body language and all this important junk

62
00:04:30,650 --> 00:04:31,760
at the same time.

63
00:04:31,760 --> 00:04:35,190
All of this together is socialization.

64
00:04:35,190 --> 00:04:39,441
So being part of a community means that you're
helping to build it.

65
00:04:39,441 --> 00:04:41,660
And we want nice communities.

66
00:04:41,660 --> 00:04:42,970
We want people to feel welcome.

67
00:04:42,970 --> 00:04:45,650
And we want it to be easy for them to join.

68
00:04:45,650 --> 00:04:49,340
And these things are really important because
we want people to be part of the JavaScript

69
00:04:49,340 --> 00:04:51,100
magic.

70
00:04:51,100 --> 00:04:53,680
Let's look at how we can do this better.

71
00:04:53,680 --> 00:04:57,900
The JavaScript people are pretty great at
this stuff compared to a lot of other tech

72
00:04:57,900 --> 00:05:00,010
communities.

73
00:05:00,010 --> 00:05:05,130
But what does socialization look like in practice?

74
00:05:05,130 --> 00:05:10,420
The most important thing for us is the language
that we use when we talk about JavaScript.

75
00:05:10,420 --> 00:05:12,140
So there are different programming languages.

76
00:05:12,140 --> 00:05:14,170
We have different ways of being a member.

77
00:05:14,170 --> 00:05:19,450
So how do we let people know what our special
JavaScript way of doing things actually is?

78
00:05:19,450 --> 00:05:22,200
We use socialization strategies.

79
00:05:22,200 --> 00:05:24,440
And there's heaps of them and I'm not going
to cover them together.

80
00:05:24,440 --> 00:05:29,660
I have picked out some and divided into three
categories to make them easy to use.

81
00:05:29,660 --> 00:05:34,980
We have welcoming, focused and communityfocused.

82
00:05:34,980 --> 00:05:39,770
There are two types of welcoming.

83
00:05:39,770 --> 00:05:40,770
Positive and negative.

84
00:05:40,770 --> 00:05:45,370
So an example of some positive welcoming is
something like this.

85
00:05:45,370 --> 00:05:47,680
So here's my tiny project.

86
00:05:47,680 --> 00:05:51,100
Learning this thing was hard, but was also
fun and worth it.

87
00:05:51,100 --> 00:05:54,750
So let's break this down into sections.

88
00:05:54,750 --> 00:05:56,670
Here's some of my tiny project.

89
00:05:56,670 --> 00:06:00,690
This little bit actually tell us quite a lot
about our community of practice.

90
00:06:00,690 --> 00:06:05,440
It tells us that posting a small project or
a fragment of one is totally normal and things

91
00:06:05,440 --> 00:06:12,460
don't have to be huge, brilliant ideas or
finished or perfect for us to share them.

92
00:06:12,460 --> 00:06:14,090
Learning this thing was hard.

93
00:06:14,090 --> 00:06:17,520
This shows people who are reading the Tweet
that JavaScript developers are comfortable

94
00:06:17,520 --> 00:06:21,730
with vulnerability and it makes vulnerability
okay for others as well.

95
00:06:21,730 --> 00:06:25,860
And it was also fun and worth it.

96
00:06:25,860 --> 00:06:28,870
So this shows that there's a payoff for all
of this work that you're putting in, and you

97
00:06:28,870 --> 00:06:33,830
don't have to finish things for them to be
worthwhile to share.

98
00:06:33,830 --> 00:06:37,461
So these things together, when viewed from
outside the JavaScript community, welcome

99
00:06:37,461 --> 00:06:39,700
people in a positive fashion.

100
00:06:39,700 --> 00:06:43,940
Seeing Tweets like this fosters good will
towards our community and could spark people's

101
00:06:43,940 --> 00:06:47,020
interest in learning JavaScript.

102
00:06:47,020 --> 00:06:50,210
So seeing Tweets like this is great for users
who are new to JavaScript.

103
00:06:50,210 --> 00:06:53,760
But it's also nice for people who are already
members.

104
00:06:53,760 --> 00:06:57,000
It helps everyone feel more comfortable about
using JavaScript and being associated with

105
00:06:57,000 --> 00:06:59,900
our community.

106
00:06:59,900 --> 00:07:03,700
Just as a side note, it's often not possible
for people in minority groups to post things

107
00:07:03,700 --> 00:07:04,700
like this.

108
00:07:04,700 --> 00:07:09,170
They can be seen as less capable and less
experienced even if they're an expert, and

109
00:07:09,170 --> 00:07:12,090
it's potentially damaging to their job opportunities.

110
00:07:12,090 --> 00:07:17,730
So those of you in positions of privilege,
please use that privilege� so many Ps�

111
00:07:17,730 --> 00:07:21,790
to make this communication style the norm.

112
00:07:21,790 --> 00:07:23,000
Next up we have negative welcoming.

113
00:07:23,000 --> 00:07:25,000
I have made this pull request.

114
00:07:25,000 --> 00:07:27,590
How about this for the photo?

115
00:07:27,590 --> 00:07:29,120
My friend has commented on it.

116
00:07:29,120 --> 00:07:30,910
LOL, so gross.

117
00:07:30,910 --> 00:07:33,780
This might be an injoke, we know it's sarcasm.

118
00:07:33,780 --> 00:07:39,150
But for those not in the sarcasm club, it
might look mean.

119
00:07:39,150 --> 00:07:41,230
It's actually a joke, right?

120
00:07:41,230 --> 00:07:48,811
No, it's not it makes it look like when someone
makes a pull request, we're going to make

121
00:07:48,811 --> 00:07:54,610
light of their efforts and could be alienating
to existing team members as well as newcomers.

122
00:07:54,610 --> 00:07:59,460
Could entirely scare off external potential
contributors.

123
00:07:59,460 --> 00:08:03,960
Negative welcoming like this and other hazing
confronts new members with their short comings.

124
00:08:03,960 --> 00:08:11,700
Imagine seeing this when you just starting
using JavaScript and you thought this PR looks

125
00:08:11,700 --> 00:08:12,700
great.

126
00:08:12,700 --> 00:08:15,430
If they're saying this about this code, what
are they going to say about mine?

127
00:08:15,430 --> 00:08:18,440
That's discouraging.

128
00:08:18,440 --> 00:08:20,760
Next up we have learnerfocused strategies.

129
00:08:20,760 --> 00:08:25,410
And start off with legitimation.

130
00:08:25,410 --> 00:08:29,310
This is telling learners and members that
the things that they have been working on

131
00:08:29,310 --> 00:08:31,240
are legitimate.

132
00:08:31,240 --> 00:08:35,340
So being encouraging to people working in
JavaScript or on a particular project.

133
00:08:35,340 --> 00:08:37,060
It's kind of like positive reinforcement.

134
00:08:37,060 --> 00:08:42,760
So it's hard to be in the JavaScript community
if no one recognizes the work you're doing

135
00:08:42,760 --> 00:08:45,530
as an appropriate use of JavaScript.

136
00:08:45,530 --> 00:08:49,450
For example, a colleague post this is pull
request.

137
00:08:49,450 --> 00:08:50,630
Updates to the new sign in page.

138
00:08:50,630 --> 00:08:54,500
And I have gone into cool� thumbs up.

139
00:08:54,500 --> 00:08:58,240
At first glance, this is friendly and supportive.

140
00:08:58,240 --> 00:09:02,070
But what if we took this a step forward with
something like this.

141
00:09:02,070 --> 00:09:07,090
Nice use of props, you're really getting the
hang of React.

142
00:09:07,090 --> 00:09:11,270
This is not much longer, but conveys the same
message as the previous comment.

143
00:09:11,270 --> 00:09:16,000
But makes it so clear to the author of the
pull request that the work they have done

144
00:09:16,000 --> 00:09:19,840
is a good use of the language they are working
in.

145
00:09:19,840 --> 00:09:24,020
And use this strategy if they tried a new
approach to a problem that didn't work out

146
00:09:24,020 --> 00:09:27,110
or a pull request that's not going to be merged.

147
00:09:27,110 --> 00:09:32,110
These scenarios should not delegitimatize
the work that's done.

148
00:09:32,110 --> 00:09:36,900
Make sure that the authors still feel good
about working with java script just by changing

149
00:09:36,900 --> 00:09:39,210
how we talk about.

150
00:09:39,210 --> 00:09:42,450
This leads into our next strategy, normalizing
failure.

151
00:09:42,450 --> 00:09:47,700
So failing to complete a task shouldn't reflect
on you personally or your coding ability.

152
00:09:47,700 --> 00:09:52,620
We all know that writing java script is hard
and we're not perfect all the time.

153
00:09:52,620 --> 00:09:56,420
We need to make sure that our juniors and
people outside our community know this as

154
00:09:56,420 --> 00:09:58,750
well, as well as our existing members.

155
00:09:58,750 --> 00:10:03,570
For example, I've personally been trying to
stop using the words "easy" and" Simple" in

156
00:10:03,570 --> 00:10:06,340
documentation we write.

157
00:10:06,340 --> 00:10:10,120
We have some setup introductions.

158
00:10:10,120 --> 00:10:13,000
My setup instructions.

159
00:10:13,000 --> 00:10:16,140
Get set up with the short and easy instructions.

160
00:10:16,140 --> 00:10:20,690
Spin up the Docker container, run tests, run
build, party.

161
00:10:20,690 --> 00:10:24,790
We have both the words "Easy" and" Simple"
here.

162
00:10:24,790 --> 00:10:29,760
These are fine if you know how to do all the
steps and they run smoothly.

163
00:10:29,760 --> 00:10:33,300
But if you don't know how to use Docker or
anything goes wrong, we have undercut the

164
00:10:33,300 --> 00:10:38,140
user's confidence by telling them it's easy.

165
00:10:38,140 --> 00:10:41,950
By adding a few extra bits to the instructions,
we could make people more comfortable with

166
00:10:41,950 --> 00:10:44,310
not succeeding on their first shot.

167
00:10:44,310 --> 00:10:47,290
So let's add more to the introduction.

168
00:10:47,290 --> 00:10:50,130
The steps below will help you set up the project.

169
00:10:50,130 --> 00:10:56,820
If you run into trouble, check out our FAQs
or ask a question in Slack.

170
00:10:56,820 --> 00:10:59,910
We have removed the word, easy, which is a
great start.

171
00:10:59,910 --> 00:11:03,490
And by mentioning that you may need help,
we are immediately noticing the possibility

172
00:11:03,490 --> 00:11:04,860
of failing to set this up.

173
00:11:04,860 --> 00:11:08,090
So we can make a list of instructions better
too.

174
00:11:08,090 --> 00:11:13,089
Spin up a Docker container, run test.

175
00:11:13,089 --> 00:11:17,050
Build the code with npm run build.

176
00:11:17,050 --> 00:11:20,880
So by removing the word "Simply" from the
first step, we have changed the expectations

177
00:11:20,880 --> 00:11:23,520
how difficult this task is going to be.

178
00:11:23,520 --> 00:11:28,770
And by removing the links we have removed
the frankly unreasonable assumption that you

179
00:11:28,770 --> 00:11:34,400
know what you're doing and don't need to look
anything up.

180
00:11:34,400 --> 00:11:39,930
So these two learnerfocused strategies, legitimization
and normalizing failure work together to make

181
00:11:39,930 --> 00:11:44,720
it easier to persevere when we are faced with
problems we don't know how to solve.

182
00:11:44,720 --> 00:11:53,500
Next up is selfefficacy, which is about supporting
the belief to succeed.

183
00:11:53,500 --> 00:12:02,100
The first study in 2012, their coding abilities
learning how to program.

184
00:12:02,100 --> 00:12:09,751
If they didn't believe in their own ability
and succeed and successfully write code, even

185
00:12:09,751 --> 00:12:15,520
if nay made a lot of mistakes along the way,
both their performance and their mental well-being

186
00:12:15,520 --> 00:12:18,370
decreased dramatically.

187
00:12:18,370 --> 00:12:23,080
One of the major takeaways from the study
was that if students have much higher ratio

188
00:12:23,080 --> 00:12:27,210
of successes to failures when they're first
learning, they're much more likely to develop

189
00:12:27,210 --> 00:12:29,690
resilience and positive selfefficacy.

190
00:12:29,690 --> 00:12:34,490
So we can take that suggestion and apply it
to our community.

191
00:12:34,490 --> 00:12:38,510
When people are learning JavaScript, help
them have a good time with it.

192
00:12:38,510 --> 00:12:43,440
If your project or team has new contributors,
start tagging your tasks even if you know

193
00:12:43,440 --> 00:12:46,310
it's something you're working on.

194
00:12:46,310 --> 00:12:50,280
So lots of projects use tags on their issues
and usually look like this.

195
00:12:50,280 --> 00:12:52,279
Here we have an issue.

196
00:12:52,279 --> 00:12:54,940
Update team photos to use team module.

197
00:12:54,940 --> 00:13:03,600
Three tags, frontend, new contributor� and
they flag things appropriately for those starting

198
00:13:03,600 --> 00:13:04,860
out.

199
00:13:04,860 --> 00:13:06,660
But I think we can do one better.

200
00:13:06,660 --> 00:13:13,680
What if we were tagging with more useful and
less� reaction like these� React only,

201
00:13:13,680 --> 00:13:16,100
selfcontained and documented.

202
00:13:16,100 --> 00:13:18,040
These provide even more information.

203
00:13:18,040 --> 00:13:24,560
And they're not tying in people who have contributed.

204
00:13:24,560 --> 00:13:29,800
Juniors can identify this is a task they're
capable of and provides all of the pertinent

205
00:13:29,800 --> 00:13:34,680
knowledge straight up, rather than having
to wade through an issue description.

206
00:13:34,680 --> 00:13:38,520
It tells you it that's React, so you know
you won't suddenly find yourself waiting for

207
00:13:38,520 --> 00:13:40,540
a C library.

208
00:13:40,540 --> 00:13:48,480
And adding that it's documented lets contributors
know there's help available.

209
00:13:48,480 --> 00:13:57,140
So having� busy work junior task, which
to be quite honest I hated being assign when

210
00:13:57,140 --> 00:13:58,660
had I was a junior.

211
00:13:58,660 --> 00:14:01,250
And the legitimate useful work that it is.

212
00:14:01,250 --> 00:14:05,750
And it is much more appealing for developers
at other stages of their career.

213
00:14:05,750 --> 00:14:12,870
As a senior developer, you don't want to be
rearchitecting parts of your code, or shaving

214
00:14:12,870 --> 00:14:14,920
yaks while looking at complex bugs.

215
00:14:14,920 --> 00:14:18,870
Sometimes you need small tasks that are well
documented.

216
00:14:18,870 --> 00:14:25,840
The last strategy I'm going to talk about
is legitimate peripheral participation.

217
00:14:25,840 --> 00:14:31,020
This one I'm particularly passionate about,
so it gets rockets.

218
00:14:31,020 --> 00:14:36,560
So this is about ways that you can participate
in the JavaScript community that aren't writing

219
00:14:36,560 --> 00:14:37,560
code.

220
00:14:37,560 --> 00:14:40,730
But are still important parts of being a member.

221
00:14:40,730 --> 00:14:43,430
Things like uploading stack questions and
answers.

222
00:14:43,430 --> 00:14:48,360
Or asking and answering yourself.

223
00:14:48,360 --> 00:14:51,950
Tweeting about new thing was done or challenges
you are facing.

224
00:14:51,950 --> 00:14:56,089
Making these activities just as important
as writing code makes our community easier

225
00:14:56,089 --> 00:14:57,980
to join.

226
00:14:57,980 --> 00:15:01,830
And it's easier to be a part of for existing
members.

227
00:15:01,830 --> 00:15:06,360
Writing code is a cool part of our community,
having other activities be equally important

228
00:15:06,360 --> 00:15:11,680
is way more fun and provides us all with legitimate
ways to engage when we can't or don't want

229
00:15:11,680 --> 00:15:13,070
to be writing code.

230
00:15:13,070 --> 00:15:22,250
So finally, we've got a communityfocused strategies.

231
00:15:22,250 --> 00:15:25,310
First one I'll talk about is active participation.

232
00:15:25,310 --> 00:15:29,080
This is about encouraging people to do communication
well.

233
00:15:29,080 --> 00:15:33,950
And we don't get awesome communities without
people interacting with each other.

234
00:15:33,950 --> 00:15:38,610
So even though this is called active participation,
it covers activities like reading blog posts

235
00:15:38,610 --> 00:15:43,810
or looking at things on stack overflow, as
well as obviously active things like talking

236
00:15:43,810 --> 00:15:45,970
to other developers and attending meetups.

237
00:15:45,970 --> 00:15:50,010
Everyone here has take a great step for this
one by attending this conference.

238
00:15:50,010 --> 00:15:53,420
And now you can all take it a step further.

239
00:15:53,420 --> 00:15:56,290
Tell the people that you meet what you're
working on.

240
00:15:56,290 --> 00:15:58,399
Even if you don't think it's particularly
exciting.

241
00:15:58,399 --> 00:16:02,950
Or if you're willing to really commit to improving
your community, tell people what you're struggling

242
00:16:02,950 --> 00:16:03,950
with.

243
00:16:03,950 --> 00:16:07,700
You might find yourself talking to someone
who has that exact same niche web compact

244
00:16:07,700 --> 00:16:11,209
con fig bug and can help you fix it.

245
00:16:11,209 --> 00:16:16,440
For next up, strategies for getting help.

246
00:16:16,440 --> 00:16:20,250
Defining how people can find help relating
to your project.

247
00:16:20,250 --> 00:16:23,120
Applies to internal projects as well as open
source ones.

248
00:16:23,120 --> 00:16:29,760
Rather than just listing the names of the
maintainers and assuming people can get in

249
00:16:29,760 --> 00:16:37,350
touch with you, have a go at figuring out
ways that users or team members can get help.

250
00:16:37,350 --> 00:16:41,650
We want to define as much as we can so people
are comfortable trying to help themselves.

251
00:16:41,650 --> 00:16:46,600
If that doesn't work, they're also comfortable
asking other people for help.

252
00:16:46,600 --> 00:16:48,110
This can be scary.

253
00:16:48,110 --> 00:16:52,120
It's a bit like booking your own doctor�s
appointment and talking to people on the phone

254
00:16:52,120 --> 00:16:54,140
is not a good time.

255
00:16:54,140 --> 00:16:58,130
But it's vastly improved if you know what
you should say and what to say it.

256
00:16:58,130 --> 00:17:03,860
In the same way, asking for help with JavaScript
can be much less difficult if you know there

257
00:17:03,860 --> 00:17:05,760
are steps you can follow.

258
00:17:05,760 --> 00:17:09,339
So add more to the read me.

259
00:17:09,339 --> 00:17:12,170
We can add sections for debugging.

260
00:17:12,170 --> 00:17:15,360
Maybe different parts of your project have
different debugging strategies.

261
00:17:15,360 --> 00:17:17,650
Like installation versus rung tests.

262
00:17:17,650 --> 00:17:20,530
You can add an FAQ.

263
00:17:20,530 --> 00:17:25,100
If you have community support, like Slack
groups or local meetups.

264
00:17:25,100 --> 00:17:26,900
And tell them where to ask questions.

265
00:17:26,900 --> 00:17:30,300
So other places that people can go to ask
question it is they can't sort is out for

266
00:17:30,300 --> 00:17:32,309
themselves.

267
00:17:32,309 --> 00:17:36,880
So where to ask questions is really a whole
point of its own and leads me to my final

268
00:17:36,880 --> 00:17:41,100
communityfocused strategy, support structures.

269
00:17:41,100 --> 00:17:42,100
These are really vital.

270
00:17:42,100 --> 00:17:45,640
There are so many different places you can
get help in the JavaScript community.

271
00:17:45,640 --> 00:17:52,290
There are thousands of online tutorials, meetups,
Twitter, conferences, GitHub issues, Slack

272
00:17:52,290 --> 00:17:54,250
groups, and so many more.

273
00:17:54,250 --> 00:17:59,010
But we need to let people know where to go
and that it's okay to do so.

274
00:17:59,010 --> 00:18:01,850
So JavaScript already does this pretty well.

275
00:18:01,850 --> 00:18:06,230
We encourage people to talk about things that
have gone badly as well as the ones that have

276
00:18:06,230 --> 00:18:07,230
worked.

277
00:18:07,230 --> 00:18:10,910
But we can set an even better example for
our newcomers by posting about things we have

278
00:18:10,910 --> 00:18:12,110
learned at every level.

279
00:18:12,110 --> 00:18:16,299
So doesn't just have to be junior developers
writing about their first experience with

280
00:18:16,299 --> 00:18:17,299
JavaScript.

281
00:18:17,299 --> 00:18:21,650
Or senior developers talking about superadvanced
and deep technical concepts.

282
00:18:21,650 --> 00:18:25,960
It's how you have been working with JavaScript
for five years and set up your first express

283
00:18:25,960 --> 00:18:27,340
server the other day.

284
00:18:27,340 --> 00:18:31,790
Or finally looked up what that actually means.

285
00:18:31,790 --> 00:18:38,970
Opening up the conversation at all levels
combines and creates the support for all levels

286
00:18:38,970 --> 00:18:43,460
no matter where they are in the JavaScript
journey.

287
00:18:43,460 --> 00:18:46,100
So let's recap.

288
00:18:46,100 --> 00:18:49,890
Socialization is all the things that we do
to become members of a new community.

289
00:18:49,890 --> 00:18:53,280
And all the things that I talk about today
are used all the time in natural language

290
00:18:53,280 --> 00:18:58,540
learning and really effective at building
language communities.

291
00:18:58,540 --> 00:19:02,760
They're all things that we can start using
in our programming communities.

292
00:19:02,760 --> 00:19:05,770
So let's start thinking about the language
that we're using when we interact with our

293
00:19:05,770 --> 00:19:10,330
fellow developers, when we're training new
team members, when friends ask about JavaScript

294
00:19:10,330 --> 00:19:12,660
or start using it for the first time.

295
00:19:12,660 --> 00:19:16,480
And especially when we post on the Internet
about JavaScript.

296
00:19:16,480 --> 00:19:20,780
By thinking about the language we use when
we talk about JavaScript, each of us can make

297
00:19:20,780 --> 00:19:25,470
our community a friendlier, more welcoming
place for new people and new ideas.

298
00:19:25,470 --> 00:19:26,470
Thanks.

299
00:19:26,470 --> 00:19:27,470
[ Applause ]
>> Thanks Harriet.

300
00:19:27,470 --> 00:19:28,470
I think we're going to take a short break
here as we have a few minutes before we sync

301
00:19:28,470 --> 00:19:29,470
up with the next session at 4:30.

