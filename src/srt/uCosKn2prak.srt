1
00:00:35,000 --> 00:00:37,050

cool so I'm gonna talk about JavaScript

2
00:00:37,050 --> 00:00:39,989
tooling uh this is a bit about kind of

3
00:00:39,989 --> 00:00:42,000
what the ecosystem with tools are around

4
00:00:42,000 --> 00:00:45,960
kind of rich web app development so i'll

5
00:00:45,960 --> 00:00:49,350
be talking about the existing tooling

6
00:00:49,350 --> 00:00:51,210
framework kind of contextualizing it

7
00:00:51,210 --> 00:00:54,390
into the developer experience also be

8
00:00:54,390 --> 00:00:57,030
demoing quite a few things some chrome

9
00:00:57,030 --> 00:01:01,370
developer tools new features but yeah

10
00:01:01,370 --> 00:01:04,530
okay so i think we'll start off with the

11
00:01:04,530 --> 00:01:06,240
goal and i know this is my goal I I

12
00:01:06,240 --> 00:01:09,090
think many of these people here share to

13
00:01:09,090 --> 00:01:11,160
which is that we want rich web apps we

14
00:01:11,160 --> 00:01:13,080
want powerful web apps that are fast fun

15
00:01:13,080 --> 00:01:16,350
responsive awesome to use provide new

16
00:01:16,350 --> 00:01:18,990
compelling unique experiences and the

17
00:01:18,990 --> 00:01:20,399
problem that I think that we face a lot

18
00:01:20,399 --> 00:01:22,710
or that I see is that well development

19
00:01:22,710 --> 00:01:24,810
of course takes time but a lot of that

20
00:01:24,810 --> 00:01:27,750
time we're spending on common tasks

21
00:01:27,750 --> 00:01:29,429
things that not only that we've done

22
00:01:29,429 --> 00:01:31,560
before like individually but also the

23
00:01:31,560 --> 00:01:33,690
collective we has done before I don't

24
00:01:33,690 --> 00:01:35,610
want to do the exact same thing that

25
00:01:35,610 --> 00:01:37,770
Alex did two weeks ago and rewrite it in

26
00:01:37,770 --> 00:01:40,560
my version so I want to be able to you

27
00:01:40,560 --> 00:01:43,079
know take advantage of of the hive mind

28
00:01:43,079 --> 00:01:45,509
the the community so no developer wants

29
00:01:45,509 --> 00:01:48,090
to be operating on mundane tasks

30
00:01:48,090 --> 00:01:49,380
spinning their wheels they want to

31
00:01:49,380 --> 00:01:53,540
create and craft unique experiences so

32
00:01:53,540 --> 00:01:57,810
tools allow a lot of power so I'm going

33
00:01:57,810 --> 00:01:59,399
to talk a little bit about that

34
00:01:59,399 --> 00:02:03,240
situation talking about tools is kind of

35
00:02:03,240 --> 00:02:07,380
a abroad thing and to capture kind of

36
00:02:07,380 --> 00:02:08,759
everything that encompassed I asked a

37
00:02:08,759 --> 00:02:10,799
while ago kind of with the tools that

38
00:02:10,799 --> 00:02:14,930
you use and I got responses like these

39
00:02:14,930 --> 00:02:17,700
so this captures everything from CSS

40
00:02:17,700 --> 00:02:19,829
preprocessors minification

41
00:02:19,829 --> 00:02:22,709
concatenations of build tools templating

42
00:02:22,709 --> 00:02:24,390
languages web frameworks your clients at

43
00:02:24,390 --> 00:02:27,150
NBC I mean everything you could consider

44
00:02:27,150 --> 00:02:28,739
all these things tools and I say that's

45
00:02:28,739 --> 00:02:31,650
that's fair but this is quite a few

46
00:02:31,650 --> 00:02:33,269
things and this is only a portion of

47
00:02:33,269 --> 00:02:35,040
this and all of these projects

48
00:02:35,040 --> 00:02:37,200
competitors so I want to kind of

49
00:02:37,200 --> 00:02:40,140
contextualize this a little bit more so

50
00:02:40,140 --> 00:02:45,290
here is my my attempt

51
00:02:45,290 --> 00:02:48,660
this funny little infographic I think

52
00:02:48,660 --> 00:02:51,180
tries to demonstrate that we can take

53
00:02:51,180 --> 00:02:52,890
these tools and plot them along the life

54
00:02:52,890 --> 00:02:54,180
cycle of a project and so you can view

55
00:02:54,180 --> 00:02:57,030
the kind of Y axis is the amount of code

56
00:02:57,030 --> 00:02:59,970
or something but we start off on a

57
00:02:59,970 --> 00:03:01,709
project will have some boilerplate code

58
00:03:01,709 --> 00:03:03,150
I don't think many of us start these

59
00:03:03,150 --> 00:03:06,030
days a new significant project with like

60
00:03:06,030 --> 00:03:09,420
a single empty text file but maybe you

61
00:03:09,420 --> 00:03:11,310
do and that's that's cool so we start

62
00:03:11,310 --> 00:03:14,190
off with like some code some structure

63
00:03:14,190 --> 00:03:16,140
some skeleton we might use some

64
00:03:16,140 --> 00:03:18,330
authoring abstractions and so I'm just

65
00:03:18,330 --> 00:03:19,860
using that as a catch-all term to cover

66
00:03:19,860 --> 00:03:23,040
CSS preprocessors templating languages

67
00:03:23,040 --> 00:03:26,100
anything that compiles down to HTML CSS

68
00:03:26,100 --> 00:03:29,040
and JavaScript essentially then we have

69
00:03:29,040 --> 00:03:30,390
our frameworks in our client-side

70
00:03:30,390 --> 00:03:32,850
application stack we have a workflow of

71
00:03:32,850 --> 00:03:36,860
iteration of debugging a browser testing

72
00:03:36,860 --> 00:03:39,600
after that performance tuning build an

73
00:03:39,600 --> 00:03:41,519
optimization and then deployment so

74
00:03:41,519 --> 00:03:43,140
we're going to walk through a few of

75
00:03:43,140 --> 00:03:45,209
these sections and talk about what are

76
00:03:45,209 --> 00:03:48,269
the tools in age so first I want to

77
00:03:48,269 --> 00:03:49,680
touch on often abstractions and of

78
00:03:49,680 --> 00:03:52,530
course the SS has provided people a lot

79
00:03:52,530 --> 00:03:55,769
of pain but these days so show hands how

80
00:03:55,769 --> 00:03:58,739
many people use something like SAS less

81
00:03:58,739 --> 00:04:02,040
stylist cool enters your hands if you

82
00:04:02,040 --> 00:04:06,150
did not raise your hand that's good ok

83
00:04:06,150 --> 00:04:08,400
cool so that was a lot more than the

84
00:04:08,400 --> 00:04:11,430
second one could so I think that that

85
00:04:11,430 --> 00:04:13,950
situation has come along quite quite

86
00:04:13,950 --> 00:04:18,090
considerably next when it comes to mark

87
00:04:18,090 --> 00:04:21,720
up I see a lot of options here so Hamill

88
00:04:21,720 --> 00:04:22,919
started out said we could take the

89
00:04:22,919 --> 00:04:25,380
selector syntax of CSS and make markup

90
00:04:25,380 --> 00:04:28,710
out of it and mark down is good for pros

91
00:04:28,710 --> 00:04:31,080
not so much for the skeleton of HTML

92
00:04:31,080 --> 00:04:33,810
Jade kind of takes what Hamill did and

93
00:04:33,810 --> 00:04:35,729
makes it cool and the handlebars is also

94
00:04:35,729 --> 00:04:39,390
awesome I think I wanted to show one of

95
00:04:39,390 --> 00:04:42,030
the something that I think is beautiful

96
00:04:42,030 --> 00:04:45,750
i remember a while ago James Pierce was

97
00:04:45,750 --> 00:04:48,860
talking about he's like the

98
00:04:48,860 --> 00:04:50,870
idea of my most beautiful the most

99
00:04:50,870 --> 00:04:55,039
beautiful web page to me is it was like

100
00:04:55,039 --> 00:05:00,770
this he's like I I can't imagine

101
00:05:00,770 --> 00:05:02,419
anything more beautiful than that and I

102
00:05:02,419 --> 00:05:03,620
remember when he said that I was like

103
00:05:03,620 --> 00:05:06,289
that's crazy bro you don't have any

104
00:05:06,289 --> 00:05:09,050
markup in there and and now I'm like I'm

105
00:05:09,050 --> 00:05:11,360
totally into that that is awesome and

106
00:05:11,360 --> 00:05:14,060
these days you know I also really like

107
00:05:14,060 --> 00:05:17,090
this you know so this is this is a jade

108
00:05:17,090 --> 00:05:20,539
file but then down in the middle I have

109
00:05:20,539 --> 00:05:22,699
a section of markdown down at the bottom

110
00:05:22,699 --> 00:05:24,590
I have coffee script so I'm able to you

111
00:05:24,590 --> 00:05:26,900
know to develop any kind of these

112
00:05:26,900 --> 00:05:28,729
abstractions not worried about my angle

113
00:05:28,729 --> 00:05:31,460
brackets I am sick and tired of angle

114
00:05:31,460 --> 00:05:33,469
brackets to be honest I just I hate them

115
00:05:33,469 --> 00:05:36,229
so and this is really nice and you know

116
00:05:36,229 --> 00:05:40,099
it just compiles to exactly what you

117
00:05:40,099 --> 00:05:42,860
would want and it's all a piece of cake

118
00:05:42,860 --> 00:05:45,770
so I like the kind of power that these

119
00:05:45,770 --> 00:05:51,319
provide these days next when it comes to

120
00:05:51,319 --> 00:05:54,860
scripting abstractions I over on the

121
00:05:54,860 --> 00:05:57,830
CoffeeScript wiki is this enormous page

122
00:05:57,830 --> 00:06:00,219
of languages that compile to JavaScript

123
00:06:00,219 --> 00:06:02,360
there's quite a few of them some of them

124
00:06:02,360 --> 00:06:05,479
just handle the ink Renee synchronicity

125
00:06:05,479 --> 00:06:08,060
of JavaScript and adds a few keywords to

126
00:06:08,060 --> 00:06:11,060
handle that others are more

127
00:06:11,060 --> 00:06:12,770
comprehensive so of course the one that

128
00:06:12,770 --> 00:06:14,469
most of us are familiar with with is

129
00:06:14,469 --> 00:06:18,560
CoffeeScript dart you could consider so

130
00:06:18,560 --> 00:06:19,939
it has a few different forums but it

131
00:06:19,939 --> 00:06:21,529
does compiled down to acma script

132
00:06:21,529 --> 00:06:23,960
version 5 and so if you like that you

133
00:06:23,960 --> 00:06:26,569
could use that tracer which was

134
00:06:26,569 --> 00:06:28,490
announced the last year's conf allows

135
00:06:28,490 --> 00:06:30,289
you to write in Equus crypt next

136
00:06:30,289 --> 00:06:33,740
compiles down to es5 as well so you kind

137
00:06:33,740 --> 00:06:38,689
of have your choice so there's a few so

138
00:06:38,689 --> 00:06:40,969
I like embracing the authoring

139
00:06:40,969 --> 00:06:44,779
abstraction next going into iteration

140
00:06:44,779 --> 00:06:48,259
workflow and I wanted to show a few

141
00:06:48,259 --> 00:06:49,669
things when it comes to browser devtools

142
00:06:49,669 --> 00:06:52,590
so one of the things that

143
00:06:52,590 --> 00:06:54,580
I'm not going to be able to demo right

144
00:06:54,580 --> 00:06:57,790
now but is extremely exciting is but we

145
00:06:57,790 --> 00:06:59,290
just introduced with Google Chrome for

146
00:06:59,290 --> 00:07:01,240
Android so on Google Chrome for Android

147
00:07:01,240 --> 00:07:04,090
we have full remote debugging what this

148
00:07:04,090 --> 00:07:07,360
means is that the the web inspector the

149
00:07:07,360 --> 00:07:11,890
chrome developer tools is available so

150
00:07:11,890 --> 00:07:13,960
this is a web app right it's all in

151
00:07:13,960 --> 00:07:16,570
JavaScript and CSS and I can load this

152
00:07:16,570 --> 00:07:19,530
up as just a page inside my browser

153
00:07:19,530 --> 00:07:22,930
connecting to my phone have all the same

154
00:07:22,930 --> 00:07:25,930
functionality so the winery if you've

155
00:07:25,930 --> 00:07:27,970
used before has kind of a subset of

156
00:07:27,970 --> 00:07:30,280
what's available and is awesome but

157
00:07:30,280 --> 00:07:31,600
there's a lot of things coming in like

158
00:07:31,600 --> 00:07:34,780
front since we just added indexdb is now

159
00:07:34,780 --> 00:07:36,610
a first class citizen inside the storage

160
00:07:36,610 --> 00:07:40,270
of chrome devtools but having the

161
00:07:40,270 --> 00:07:43,270
ability to do scripta bugging and live

162
00:07:43,270 --> 00:07:45,610
script editing is a pretty powerful

163
00:07:45,610 --> 00:07:47,560
thing so we're excited to have that

164
00:07:47,560 --> 00:07:49,060
ability to connect right to your phone

165
00:07:49,060 --> 00:07:51,910
and show that but there's a few more

166
00:07:51,910 --> 00:07:53,320
things inside the chrome dev tools that

167
00:07:53,320 --> 00:07:57,520
I want to show this is a demo showing

168
00:07:57,520 --> 00:07:59,950
multi-touch events and you can you can

169
00:07:59,950 --> 00:08:03,370
paint with multi-touch on touch device

170
00:08:03,370 --> 00:08:04,900
but it's only wired up for the touch

171
00:08:04,900 --> 00:08:09,190
events so typically on a desktop it

172
00:08:09,190 --> 00:08:13,419
would be quite annoying but nowadays so

173
00:08:13,419 --> 00:08:16,030
in chrome devtools go down to the bottom

174
00:08:16,030 --> 00:08:18,910
right is a settings panel and right here

175
00:08:18,910 --> 00:08:20,350
is this little guy emulate touch events

176
00:08:20,350 --> 00:08:23,410
I can check that and be like that's not

177
00:08:23,410 --> 00:08:26,230
how you doing so you get your touch

178
00:08:26,230 --> 00:08:29,230
events looks like my x and y is off it's

179
00:08:29,230 --> 00:08:33,630
cool

180
00:08:33,640 --> 00:08:37,070
I'm also pretty jazzed about a few other

181
00:08:37,070 --> 00:08:38,180
things in here so when it comes to

182
00:08:38,180 --> 00:08:40,130
mobile development it's been in quite a

183
00:08:40,130 --> 00:08:42,560
pain but we now have override user agent

184
00:08:42,560 --> 00:08:44,480
so this changes it at the network level

185
00:08:44,480 --> 00:08:46,820
and I can just mask as an iphone 5 or

186
00:08:46,820 --> 00:08:50,600
what have you disabled cash had been

187
00:08:50,600 --> 00:08:52,160
brought up before but a new one that I

188
00:08:52,160 --> 00:08:56,350
really like is dr. right so dr. Wright

189
00:08:56,350 --> 00:09:00,320
does what it says and I like this for a

190
00:09:00,320 --> 00:09:02,540
few reasons one is which I love to have

191
00:09:02,540 --> 00:09:05,480
you know a full vertical view of my

192
00:09:05,480 --> 00:09:10,490
scripts right side by side the other is

193
00:09:10,490 --> 00:09:12,740
that I can now adjust this and let's say

194
00:09:12,740 --> 00:09:14,330
that I was working with more of a

195
00:09:14,330 --> 00:09:18,560
responsive web design so a doctor right

196
00:09:18,560 --> 00:09:20,600
I can be able to test that out a little

197
00:09:20,600 --> 00:09:22,820
bit more have my dev tools go side by

198
00:09:22,820 --> 00:09:26,960
side with my with my code and and

199
00:09:26,960 --> 00:09:29,540
manipulate it like that but we only have

200
00:09:29,540 --> 00:09:32,030
this code up there's a few things that

201
00:09:32,030 --> 00:09:34,310
that's worth showing its kind of new so

202
00:09:34,310 --> 00:09:36,050
if you notice there's this little script

203
00:09:36,050 --> 00:09:37,910
panel kind of hides away when you don't

204
00:09:37,910 --> 00:09:41,600
need it it's really handy but if you

205
00:09:41,600 --> 00:09:42,830
already know what file your opening

206
00:09:42,830 --> 00:09:45,370
there's a few shortcuts command Oh

207
00:09:45,370 --> 00:09:48,890
brings up a little file picker so I know

208
00:09:48,890 --> 00:09:52,190
that I want the multi-touch I can just

209
00:09:52,190 --> 00:09:54,650
type multi and just go through to that

210
00:09:54,650 --> 00:09:57,590
and then I also know that perhaps I want

211
00:09:57,590 --> 00:10:01,310
to go down and and make some changes and

212
00:10:01,310 --> 00:10:04,610
I want to make some changes in pre draw

213
00:10:04,610 --> 00:10:07,130
and I can type command shift oh it

214
00:10:07,130 --> 00:10:08,690
brings up a list of all the functions

215
00:10:08,690 --> 00:10:11,510
that are defined in this file and a

216
00:10:11,510 --> 00:10:12,500
bigger file this would be much more

217
00:10:12,500 --> 00:10:14,360
helpful and so I can jump right down to

218
00:10:14,360 --> 00:10:18,410
pre draw and make my changes so in this

219
00:10:18,410 --> 00:10:21,110
case i think probably i'm going to do a

220
00:10:21,110 --> 00:10:23,020
few things i'm going to go over here

221
00:10:23,020 --> 00:10:26,780
clear out the current painting and then

222
00:10:26,780 --> 00:10:31,910
i'm going to go back and we are going to

223
00:10:31,910 --> 00:10:35,350
inside pre draw just change these colors

224
00:10:35,350 --> 00:10:37,640
to this so I'm just doing live editing

225
00:10:37,640 --> 00:10:42,150
of my javascript and

226
00:10:42,160 --> 00:10:52,139
it's cool emulate touch events thank you

227
00:10:52,139 --> 00:10:55,509
cool nice so I just changed the colors

228
00:10:55,509 --> 00:10:57,759
on the fly to be a little bit more j/s

229
00:10:57,759 --> 00:11:02,019
confi but I have that complete ability

230
00:11:02,019 --> 00:11:04,389
so that's the same sort of power we also

231
00:11:04,389 --> 00:11:06,879
have in in the mobile debugging scenario

232
00:11:06,879 --> 00:11:09,639
as well the next thing that I want to

233
00:11:09,639 --> 00:11:11,019
show a source map so source Maps is

234
00:11:11,019 --> 00:11:12,699
another feature inside chrome dev tools

235
00:11:12,699 --> 00:11:15,250
and it just kind of manifest in the last

236
00:11:15,250 --> 00:11:17,439
few months so I want to show it off a

237
00:11:17,439 --> 00:11:19,660
little bit we have a full tutorial about

238
00:11:19,660 --> 00:11:21,939
it on html5 rocks com that shows the

239
00:11:21,939 --> 00:11:23,199
demos that i'm about to show in some

240
00:11:23,199 --> 00:11:29,139
more but it has a lot of power so this

241
00:11:29,139 --> 00:11:32,019
is just a basic little app with all the

242
00:11:32,019 --> 00:11:36,490
colors and that's a hot pink as I didn't

243
00:11:36,490 --> 00:11:37,899
know there's a hot pink as text that's

244
00:11:37,899 --> 00:11:41,110
really that makes designing websites so

245
00:11:41,110 --> 00:11:44,649
much easier okay good no more hex codes

246
00:11:44,649 --> 00:11:51,160
super all right so now I'm gonna see it

247
00:11:51,160 --> 00:11:52,750
looks like source Maps is already on I'm

248
00:11:52,750 --> 00:11:54,160
going to turn that off just for a second

249
00:11:54,160 --> 00:11:57,519
i'm going to refresh the page and now if

250
00:11:57,519 --> 00:12:00,250
you look we have this compiled j oz i'm

251
00:12:00,250 --> 00:12:01,689
going to view sorceress or a second just

252
00:12:01,689 --> 00:12:04,779
to make sure basic page it looks like

253
00:12:04,779 --> 00:12:06,490
there were some scripts but they're

254
00:12:06,490 --> 00:12:08,139
commented out now and we're just dealing

255
00:12:08,139 --> 00:12:10,720
with the compiled JavaScript we did have

256
00:12:10,720 --> 00:12:13,600
a jquery and these two other files but

257
00:12:13,600 --> 00:12:15,069
we ran it through closure compiler

258
00:12:15,069 --> 00:12:18,060
announced the compiled and that's cool

259
00:12:18,060 --> 00:12:21,160
but if i want to debug this well i can

260
00:12:21,160 --> 00:12:26,589
go down and hit the pretty print and you

261
00:12:26,589 --> 00:12:29,170
know at least it's indented and i can't

262
00:12:29,170 --> 00:12:30,569
set breakpoints and that doesn't work

263
00:12:30,569 --> 00:12:32,709
but still I'm dealing with variable

264
00:12:32,709 --> 00:12:36,100
names like a and B so if I enables

265
00:12:36,100 --> 00:12:39,430
source maps let's turn them on right

266
00:12:39,430 --> 00:12:45,430
there and refresh the page and now yeah

267
00:12:45,430 --> 00:12:49,139
so now we have a jquery

268
00:12:49,139 --> 00:12:51,509
the original unmanned are two other

269
00:12:51,509 --> 00:12:55,889
files here and so just to like verify a

270
00:12:55,889 --> 00:12:59,129
view source the page is running compiled

271
00:12:59,129 --> 00:13:01,529
jas but in the dev tools I have my

272
00:13:01,529 --> 00:13:04,829
original source files and I still have

273
00:13:04,829 --> 00:13:06,290
the same power so i can set breakpoints

274
00:13:06,290 --> 00:13:10,829
let's say right there and as I click we

275
00:13:10,829 --> 00:13:15,019
break I can even open the console and

276
00:13:15,019 --> 00:13:18,209
interact with them interact down there

277
00:13:18,209 --> 00:13:23,220
so it's mapping the identifiers of my

278
00:13:23,220 --> 00:13:24,949
compiled code back to my original code

279
00:13:24,949 --> 00:13:28,589
it's doing a little trick in there down

280
00:13:28,589 --> 00:13:31,220
at the very bottom my compiled code is

281
00:13:31,220 --> 00:13:41,429
oh sorry yeah there it is wouldn't not

282
00:13:41,429 --> 00:13:43,259
the source mapping URL so this is just a

283
00:13:43,259 --> 00:13:46,379
JSON file which does the the mapping so

284
00:13:46,379 --> 00:13:47,730
that's pretty cool and really nice for

285
00:13:47,730 --> 00:13:49,739
the the use case of debugging production

286
00:13:49,739 --> 00:13:52,350
javascript but of course it does have

287
00:13:52,350 --> 00:13:53,699
quite a bit more power of that source

288
00:13:53,699 --> 00:13:56,279
maps were designed to kind of be a

289
00:13:56,279 --> 00:14:00,029
language agnostic so I'm show off one

290
00:14:00,029 --> 00:14:04,709
more demo with source maps so this right

291
00:14:04,709 --> 00:14:08,399
here is 0 as page is gonna okay good

292
00:14:08,399 --> 00:14:11,489
good good so this page here is showing

293
00:14:11,489 --> 00:14:15,480
off I can script next so we have some

294
00:14:15,480 --> 00:14:20,100
traits and setting up a class and so

295
00:14:20,100 --> 00:14:21,299
this page is actually going to be using

296
00:14:21,299 --> 00:14:24,600
tracer to do live evaluation of this so

297
00:14:24,600 --> 00:14:29,399
i can edit this code and on the fly it

298
00:14:29,399 --> 00:14:31,139
generates a source map which is this

299
00:14:31,139 --> 00:14:33,179
what it looks like and the compiled down

300
00:14:33,179 --> 00:14:35,999
i can script 5 code that it runs i can

301
00:14:35,999 --> 00:14:37,759
open this up in chrome dev tools and

302
00:14:37,759 --> 00:14:43,619
here you see this is this code is is

303
00:14:43,619 --> 00:14:45,679
matching what i had in this text area

304
00:14:45,679 --> 00:14:49,019
but if you look you know class mix in

305
00:14:49,019 --> 00:14:49,920
you know this

306
00:14:49,920 --> 00:14:53,790
not yes five but i can set breakpoints

307
00:14:53,790 --> 00:14:58,339
in it and i'll just create a new guy a

308
00:14:58,339 --> 00:15:01,560
new instance of my interval class and we

309
00:15:01,560 --> 00:15:03,420
break right inside of it so chrome

310
00:15:03,420 --> 00:15:05,459
devtools is doing the the magic to make

311
00:15:05,459 --> 00:15:08,430
to make it allow me to allow me to write

312
00:15:08,430 --> 00:15:11,250
and debug inside my abstracted i canna

313
00:15:11,250 --> 00:15:14,040
script next and the browser's just

314
00:15:14,040 --> 00:15:17,130
handling the mapping so really excited

315
00:15:17,130 --> 00:15:18,630
about this the sort of power that we

316
00:15:18,630 --> 00:15:21,300
have now with with source maps well

317
00:15:21,300 --> 00:15:25,050
we're talking about iteration one touch

318
00:15:25,050 --> 00:15:28,350
on linting just for a second a lot of

319
00:15:28,350 --> 00:15:31,709
people use JSN jslint this closure

320
00:15:31,709 --> 00:15:33,630
linter closure style sheets actually has

321
00:15:33,630 --> 00:15:36,779
a CSS linter just for playing CSS pretty

322
00:15:36,779 --> 00:15:40,980
powerful i did want to ask i'm just

323
00:15:40,980 --> 00:15:42,480
going to assume that I one here uses a

324
00:15:42,480 --> 00:15:47,060
linter just okay good but so everyone

325
00:15:47,060 --> 00:15:50,370
how many people use have like immediate

326
00:15:50,370 --> 00:15:52,139
feedback as you type your editor your

327
00:15:52,139 --> 00:15:53,760
IDE is letting you know like if

328
00:15:53,760 --> 00:15:55,709
something breaks against your linter

329
00:15:55,709 --> 00:15:59,519
yeah okay on file save you get like a

330
00:15:59,519 --> 00:16:01,620
report okay maybe like a build process

331
00:16:01,620 --> 00:16:03,540
that tells you that like someone

332
00:16:03,540 --> 00:16:05,130
committed something's been okay cool

333
00:16:05,130 --> 00:16:08,940
good I asked around somewhat similar to

334
00:16:08,940 --> 00:16:11,640
to the results here I know that when I

335
00:16:11,640 --> 00:16:14,040
added in a real-time linting into my

336
00:16:14,040 --> 00:16:16,140
editor I'd you know you don't have those

337
00:16:16,140 --> 00:16:18,029
instances where there is that missing

338
00:16:18,029 --> 00:16:20,880
comma or that semicolon that that was

339
00:16:20,880 --> 00:16:23,760
actually a colon and all that stuff that

340
00:16:23,760 --> 00:16:26,339
just drives you crazy so I'm really keen

341
00:16:26,339 --> 00:16:30,149
on that's kind of setup but then I also

342
00:16:30,149 --> 00:16:33,140
want to touch on equi script tooling

343
00:16:33,140 --> 00:16:36,630
prima is is a project that is kind of

344
00:16:36,630 --> 00:16:38,880
really exciting right now in this prima

345
00:16:38,880 --> 00:16:41,130
if you're not familiar with it is a

346
00:16:41,130 --> 00:16:44,370
parser for ECMO script we're in an echo

347
00:16:44,370 --> 00:16:50,600
script itself and so this guy here is

348
00:16:50,600 --> 00:16:53,010
it's just showing off so we're going to

349
00:16:53,010 --> 00:16:54,600
take take this little segment we're

350
00:16:54,600 --> 00:16:56,279
going to parse it so this is what is

351
00:16:56,279 --> 00:16:58,470
prima can give you

352
00:16:58,470 --> 00:17:00,890
kind of adjacent representation of the

353
00:17:00,890 --> 00:17:04,070
AST or the absa abstract syntax tree

354
00:17:04,070 --> 00:17:05,970
here's another way to look at it right

355
00:17:05,970 --> 00:17:09,720
here so so that's kind of the base

356
00:17:09,720 --> 00:17:13,650
functionality of what it does a more

357
00:17:13,650 --> 00:17:18,030
flippant way of looking at it aria who

358
00:17:18,030 --> 00:17:19,590
who wrote it who's also the author of

359
00:17:19,590 --> 00:17:23,580
phantom Jas ran through all the common

360
00:17:23,580 --> 00:17:25,410
popular JavaScript libraries and said

361
00:17:25,410 --> 00:17:27,480
what are all the most popular keywords

362
00:17:27,480 --> 00:17:31,850
and made this very pretty rainbow graph

363
00:17:31,850 --> 00:17:36,060
but s prima is ushering in a lot of new

364
00:17:36,060 --> 00:17:37,560
tools that are being built around it so

365
00:17:37,560 --> 00:17:39,720
there's already code coverage tools code

366
00:17:39,720 --> 00:17:42,960
generation tools documentation creation

367
00:17:42,960 --> 00:17:44,670
tools just by parsing JavaScript files

368
00:17:44,670 --> 00:17:47,460
even Anton who writes j/s hint is

369
00:17:47,460 --> 00:17:48,930
creating a new version of days hint

370
00:17:48,930 --> 00:17:51,660
based on as prima so it's offering a lot

371
00:17:51,660 --> 00:17:53,820
more flexibility in parsing the original

372
00:17:53,820 --> 00:17:57,420
JavaScript that a lot of other projects

373
00:17:57,420 --> 00:17:59,310
that work with the language themselves

374
00:17:59,310 --> 00:18:02,820
are documented on this very hidden away

375
00:18:02,820 --> 00:18:06,870
tucked away page that's a jazz tools

376
00:18:06,870 --> 00:18:13,320
resources page the so there is a chase

377
00:18:13,320 --> 00:18:15,330
tools google group as well where this

378
00:18:15,330 --> 00:18:18,900
kind of stuff is discussed but this guy

379
00:18:18,900 --> 00:18:22,320
has put together a lot of the tools for

380
00:18:22,320 --> 00:18:24,510
dealing with the language itself so

381
00:18:24,510 --> 00:18:27,870
parser is an AST traversal source

382
00:18:27,870 --> 00:18:29,940
implementation and so if I just turn on

383
00:18:29,940 --> 00:18:32,490
all the tools there's quite a few of

384
00:18:32,490 --> 00:18:34,620
them so I think you'd be surprised by

385
00:18:34,620 --> 00:18:35,910
the amount of tools that people have

386
00:18:35,910 --> 00:18:37,200
written already just to deal with the

387
00:18:37,200 --> 00:18:39,390
language itself and it's pretty

388
00:18:39,390 --> 00:18:40,440
interesting one of them that I want to

389
00:18:40,440 --> 00:18:42,630
call out which is JSON it's a JavaScript

390
00:18:42,630 --> 00:18:46,170
port of bison is actually used by

391
00:18:46,170 --> 00:18:48,720
handlebars so handlebar stem bleedin

392
00:18:48,720 --> 00:18:51,480
language uses JSON to compile your

393
00:18:51,480 --> 00:18:54,690
template and the cool thing of that is

394
00:18:54,690 --> 00:18:58,110
that it actually does create an AST from

395
00:18:58,110 --> 00:19:00,120
the template that you had and we don't

396
00:19:00,120 --> 00:19:01,710
have time to show it now but talk to

397
00:19:01,710 --> 00:19:03,600
Alex exton later because he's had

398
00:19:03,600 --> 00:19:05,790
devised some really cool way of working

399
00:19:05,790 --> 00:19:07,980
with that AST directly and modifying the

400
00:19:07,980 --> 00:19:08,500
AST

401
00:19:08,500 --> 00:19:12,220
b-before before running against the data

402
00:19:12,220 --> 00:19:13,930
that goes into it to make some good

403
00:19:13,930 --> 00:19:19,270
changes testing I'm not going to spend

404
00:19:19,270 --> 00:19:21,940
too much time on but I did want to point

405
00:19:21,940 --> 00:19:26,710
out Tess Ling one of its authors might

406
00:19:26,710 --> 00:19:28,150
be in the audience but there's certainly

407
00:19:28,150 --> 00:19:32,800
a lot of fans to assess Ling is is a

408
00:19:32,800 --> 00:19:35,830
really awesome service that I i use kind

409
00:19:35,830 --> 00:19:37,240
of in a non-traditional way but I did

410
00:19:37,240 --> 00:19:40,600
want to show kind of what it can do so

411
00:19:40,600 --> 00:19:43,570
you essentially get to write a test that

412
00:19:43,570 --> 00:19:46,450
run in browsers but in the cloud so you

413
00:19:46,450 --> 00:19:48,190
know most a lot of people run max they

414
00:19:48,190 --> 00:19:50,020
don't have internet explorer certainly

415
00:19:50,020 --> 00:19:51,520
handy on here but it'd be nice to just

416
00:19:51,520 --> 00:19:54,010
run my tests against it I actually use

417
00:19:54,010 --> 00:19:57,520
Tesla ng2 to try out different feature

418
00:19:57,520 --> 00:20:00,010
detection techniques so this one here I

419
00:20:00,010 --> 00:20:02,430
was trying out how can we detect

420
00:20:02,430 --> 00:20:05,920
xmlhttprequest level 2 and so there's a

421
00:20:05,920 --> 00:20:08,050
few different techniques like these and

422
00:20:08,050 --> 00:20:10,870
so I just kind of test them out and log

423
00:20:10,870 --> 00:20:13,840
out how they go now I can just take this

424
00:20:13,840 --> 00:20:16,510
small little test and say I want to run

425
00:20:16,510 --> 00:20:20,590
this against every browser ever and so I

426
00:20:20,590 --> 00:20:22,630
can just do that right here and then

427
00:20:22,630 --> 00:20:24,940
running that against Tess lang here is I

428
00:20:24,940 --> 00:20:27,640
sixes results I sevens results I ate

429
00:20:27,640 --> 00:20:29,380
sighs and nines and I don't have to

430
00:20:29,380 --> 00:20:30,730
worry about the browser set up at all

431
00:20:30,730 --> 00:20:33,970
you know I just test throw my unit tests

432
00:20:33,970 --> 00:20:38,120
right against it it's really really nice

433
00:20:38,130 --> 00:20:43,390
all right so that's it for build and

434
00:20:43,390 --> 00:20:45,270
build there's a lot of best practices

435
00:20:45,270 --> 00:20:47,800
when it comes to things that we've heard

436
00:20:47,800 --> 00:20:52,450
from Steve Souders and it's quite quite

437
00:20:52,450 --> 00:20:55,960
a pain to keep track of them all but

438
00:20:55,960 --> 00:20:57,340
there's a lot of tools that are that are

439
00:20:57,340 --> 00:20:58,720
making this better so of course we have

440
00:20:58,720 --> 00:21:01,059
our armineh fires

441
00:21:01,059 --> 00:21:03,190
or concatenation techniques a lot of

442
00:21:03,190 --> 00:21:06,840
people right tools to deal with that in

443
00:21:06,840 --> 00:21:10,929
in ant make great call those or batch

444
00:21:10,929 --> 00:21:12,999
Python scripts one of the things in the

445
00:21:12,999 --> 00:21:14,559
html5 boilerplate build script that we

446
00:21:14,559 --> 00:21:16,179
tried to do is we'll see if we could

447
00:21:16,179 --> 00:21:19,299
generalize the process of getting a site

448
00:21:19,299 --> 00:21:22,059
ready for production and and now we're

449
00:21:22,059 --> 00:21:23,889
you've even took in that and put it into

450
00:21:23,889 --> 00:21:25,360
node but one of the cool things that

451
00:21:25,360 --> 00:21:26,559
we've done with that node thing is that

452
00:21:26,559 --> 00:21:30,370
we're using grunt and so grunt if you're

453
00:21:30,370 --> 00:21:32,799
very interested in it that you're

454
00:21:32,799 --> 00:21:35,289
actually in the wrong room because Ben

455
00:21:35,289 --> 00:21:37,149
almond is doing a talk about it over

456
00:21:37,149 --> 00:21:41,289
there but so grunta is a JavaScript a

457
00:21:41,289 --> 00:21:44,649
node-based tooling framework sorry build

458
00:21:44,649 --> 00:21:46,749
process which i think is really good

459
00:21:46,749 --> 00:21:48,879
right now a lot of people have kind of

460
00:21:48,879 --> 00:21:51,429
their own different ways and I think we

461
00:21:51,429 --> 00:21:53,049
could actually codify a lot of the best

462
00:21:53,049 --> 00:21:54,460
practices and turn them into reusable

463
00:21:54,460 --> 00:21:57,789
code so grunt is kind of a meeting place

464
00:21:57,789 --> 00:22:00,009
for that I'm really excited about seeing

465
00:22:00,009 --> 00:22:04,419
that grow lastly in deployment there's a

466
00:22:04,419 --> 00:22:06,759
lot of Jenkins and Travis are the main

467
00:22:06,759 --> 00:22:11,139
continuous integration frameworks and I

468
00:22:11,139 --> 00:22:13,210
did want to show I think there's a lot

469
00:22:13,210 --> 00:22:15,690
of projects now that are using Travis

470
00:22:15,690 --> 00:22:19,990
hooked up to their github projects this

471
00:22:19,990 --> 00:22:22,409
is what we did from modernizer so

472
00:22:22,409 --> 00:22:26,169
moderniser after every commit it kicks

473
00:22:26,169 --> 00:22:29,230
off Travis gets notified Travis pulls in

474
00:22:29,230 --> 00:22:32,139
our newest code loads in our test suite

475
00:22:32,139 --> 00:22:34,869
into Phantom j/s phantom runs our queue

476
00:22:34,869 --> 00:22:39,090
unit tests and everything passes

477
00:22:39,090 --> 00:22:41,700
and and we're good but I really you know

478
00:22:41,700 --> 00:22:43,590
in its free and open source and awesome

479
00:22:43,590 --> 00:22:46,830
I think I think this sort of setup of

480
00:22:46,830 --> 00:22:48,930
you know having a continuous integration

481
00:22:48,930 --> 00:22:50,850
tests for server that's running against

482
00:22:50,850 --> 00:22:53,370
all your commits is is really powerful

483
00:22:53,370 --> 00:22:55,080
in nowadays it's much easier than it's

484
00:22:55,080 --> 00:22:58,050
ever been there's a quote from Kyle

485
00:22:58,050 --> 00:22:59,430
neath of github here which i think is

486
00:22:59,430 --> 00:23:02,700
really cool he says deployment is an art

487
00:23:02,700 --> 00:23:04,050
and the style in which you deploy

488
00:23:04,050 --> 00:23:05,640
impacts our company culture more than

489
00:23:05,640 --> 00:23:08,130
you think deploy with style I remember

490
00:23:08,130 --> 00:23:10,950
like five years ago there was a blog

491
00:23:10,950 --> 00:23:14,330
post by dreamhost and they were like

492
00:23:14,330 --> 00:23:16,530
they're like every time we push to

493
00:23:16,530 --> 00:23:20,990
production we play salt-n-pepa's push it

494
00:23:20,990 --> 00:23:23,550
mm-hmm and I was like that sounds

495
00:23:23,550 --> 00:23:26,850
awesome but these days I think like you

496
00:23:26,850 --> 00:23:29,370
know with ideas of continuous deployment

497
00:23:29,370 --> 00:23:31,710
that might that song might get a little

498
00:23:31,710 --> 00:23:34,920
old but I I do think that you know you

499
00:23:34,920 --> 00:23:36,210
want to you want to find a deployment

500
00:23:36,210 --> 00:23:38,750
mechanism that feels really good too

501
00:23:38,750 --> 00:23:41,520
there's a few projects on the future to

502
00:23:41,520 --> 00:23:43,290
lean side that I'm that I'm excited

503
00:23:43,290 --> 00:23:46,620
about that I've seen things like it's

504
00:23:46,620 --> 00:23:49,050
from Chris dip and this is a plug-in for

505
00:23:49,050 --> 00:23:51,480
AMD called you a optimized which

506
00:23:51,480 --> 00:23:55,350
basically says we can we can branch on

507
00:23:55,350 --> 00:23:56,610
features but it'd be interesting to

508
00:23:56,610 --> 00:24:00,720
branch based on user agent so that we

509
00:24:00,720 --> 00:24:04,290
can optimize for our builds based on

510
00:24:04,290 --> 00:24:06,540
what device it's going to and and built

511
00:24:06,540 --> 00:24:09,420
up as an AMD module another approach on

512
00:24:09,420 --> 00:24:13,110
a similar kind of idea

513
00:24:13,110 --> 00:24:17,340
is this is by yen's arps a taxi boo who

514
00:24:17,340 --> 00:24:20,040
wrote AMD feature and this is a similar

515
00:24:20,040 --> 00:24:23,610
basic idea but we're just going to use a

516
00:24:23,610 --> 00:24:26,580
feature detect and here is a drop-down

517
00:24:26,580 --> 00:24:29,100
file for iOS here's the drop-down for

518
00:24:29,100 --> 00:24:31,290
Android and we can just give one to the

519
00:24:31,290 --> 00:24:37,230
two either based on a detect this is

520
00:24:37,230 --> 00:24:41,790
also a kind of setup that I think is

521
00:24:41,790 --> 00:24:43,740
really interesting if everyone if

522
00:24:43,740 --> 00:24:47,580
anyone's used closure compiler advanced

523
00:24:47,580 --> 00:24:50,820
optimization mode you really love it or

524
00:24:50,820 --> 00:24:52,169
you hate it but setting up all those

525
00:24:52,169 --> 00:24:55,049
annotations in your code is quite a bit

526
00:24:55,049 --> 00:25:01,070
of work this is a this was a project to

527
00:25:01,070 --> 00:25:03,450
generate those annotations for more

528
00:25:03,450 --> 00:25:04,650
closure compiler advanced optimization

529
00:25:04,650 --> 00:25:07,440
mode through coffeescript so essentially

530
00:25:07,440 --> 00:25:11,250
right coffeescript and the annotations

531
00:25:11,250 --> 00:25:14,910
are actually provided for you so these

532
00:25:14,910 --> 00:25:16,740
are you know directions where I think

533
00:25:16,740 --> 00:25:19,169
make a lot of sense and so I encourage

534
00:25:19,169 --> 00:25:21,059
you to check out you know this project

535
00:25:21,059 --> 00:25:23,730
and and certainly as library authors

536
00:25:23,730 --> 00:25:26,549
what you can do to provide similar

537
00:25:26,549 --> 00:25:32,160
usability in conclusion what web app

538
00:25:32,160 --> 00:25:35,130
development is bumpy and it's tough and

539
00:25:35,130 --> 00:25:37,320
cross browser certainly the first half

540
00:25:37,320 --> 00:25:40,890
and mobile is is a whole nother mess but

541
00:25:40,890 --> 00:25:42,390
I think tools give your development

542
00:25:42,390 --> 00:25:44,700
vehicle a lot of suspension and kind of

543
00:25:44,700 --> 00:25:46,200
smooth out that bumpy road into

544
00:25:46,200 --> 00:25:48,690
something a little bit more reasonable I

545
00:25:48,690 --> 00:25:50,490
also just want to say embrace

546
00:25:50,490 --> 00:25:52,770
dependencies don't be afraid of abusing

547
00:25:52,770 --> 00:25:55,049
dependencies not certainly not only on

548
00:25:55,049 --> 00:25:58,049
the build side but also in the client

549
00:25:58,049 --> 00:25:59,460
side a lot of people have done

550
00:25:59,460 --> 00:26:02,190
significant work for you already and

551
00:26:02,190 --> 00:26:05,370
take advantage of that and that's it for

552
00:26:05,370 --> 00:26:09,090
me thank

