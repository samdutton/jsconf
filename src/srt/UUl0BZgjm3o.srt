1
00:00:00,550 --> 00:00:02,149

[Applause]

2
00:00:02,149 --> 00:00:05,609
hi everyone thank you all for coming

3
00:00:05,609 --> 00:00:07,710
yeah this is my first time in a big

4
00:00:07,710 --> 00:00:09,719
conference like yes calm even as a

5
00:00:09,719 --> 00:00:12,599
speaker so guys this is amazing this is

6
00:00:12,599 --> 00:00:17,490
beautiful like oh I start so I'm Sabrina

7
00:00:17,490 --> 00:00:20,250
I came from Portugal where I work at far

8
00:00:20,250 --> 00:00:22,560
fetch as a white Vela / besides that

9
00:00:22,560 --> 00:00:25,680
from design to front-end I'm a web lover

10
00:00:25,680 --> 00:00:28,500
and today I'm here to share with you how

11
00:00:28,500 --> 00:00:30,929
you can improve your CSS mix-ins with

12
00:00:30,929 --> 00:00:34,680
JavaScript so I know what you are

13
00:00:34,680 --> 00:00:35,160
thinking

14
00:00:35,160 --> 00:00:38,280
Oh CSS come for yesterday now it's all

15
00:00:38,280 --> 00:00:40,950
about JavaScript well guess what I'm I'm

16
00:00:40,950 --> 00:00:42,960
going to talk about both CSS and

17
00:00:42,960 --> 00:00:45,000
JavaScript but before starting let me

18
00:00:45,000 --> 00:00:45,390
know

19
00:00:45,390 --> 00:00:47,309
is anyone here that doesn't know

20
00:00:47,309 --> 00:00:51,989
anything about CSS anything no one right

21
00:00:51,989 --> 00:00:52,590
perfect

22
00:00:52,590 --> 00:00:56,430
so how many of you are used to tools

23
00:00:56,430 --> 00:01:01,590
like sass or less Oh quite a lot right a

24
00:01:01,590 --> 00:01:06,810
lot okay what about post CSS Alf okay

25
00:01:06,810 --> 00:01:11,100
what about the new wave of CSS NGS like

26
00:01:11,100 --> 00:01:15,299
style components or glamorous some of

27
00:01:15,299 --> 00:01:16,110
you okay

28
00:01:16,110 --> 00:01:18,360
whatever the tool we use we've been

29
00:01:18,360 --> 00:01:21,659
using them because CSS doesn't have

30
00:01:21,659 --> 00:01:24,750
logic right you just write a class give

31
00:01:24,750 --> 00:01:26,810
it some rules and you hope that it works

32
00:01:26,810 --> 00:01:30,150
the good part about tools like sauce or

33
00:01:30,150 --> 00:01:32,820
post CSS is that allow us to write some

34
00:01:32,820 --> 00:01:36,659
logic here we have for loop where you

35
00:01:36,659 --> 00:01:39,479
increment the ninja level from one to

36
00:01:39,479 --> 00:01:41,939
ten and dagger the level the faster than

37
00:01:41,939 --> 00:01:44,549
emotion will be another thing that you

38
00:01:44,549 --> 00:01:47,490
can do it's as conditionals so if the

39
00:01:47,490 --> 00:01:49,590
ninja level is ten it will be invisible

40
00:01:49,590 --> 00:01:52,259
otherwise it will take some time does it

41
00:01:52,259 --> 00:01:52,890
make sense

42
00:01:52,890 --> 00:01:56,070
no but I hope you get idea okay another

43
00:01:56,070 --> 00:01:58,380
thing that you can do it's at some

44
00:01:58,380 --> 00:02:00,750
mix-ins I will talk more about them

45
00:02:00,750 --> 00:02:03,450
later so all of this logic is really

46
00:02:03,450 --> 00:02:07,469
cool until at the end of the day he will

47
00:02:07,469 --> 00:02:09,959
end up with something like this let me

48
00:02:09,959 --> 00:02:13,770
describe this for you you have a mixin

49
00:02:13,770 --> 00:02:17,100
let as a each after 15 lines of calls

50
00:02:17,100 --> 00:02:20,400
you have an include inside that includes

51
00:02:20,400 --> 00:02:23,550
and after another 50 lines of code you

52
00:02:23,550 --> 00:02:25,980
have a four with a thief with some

53
00:02:25,980 --> 00:02:28,680
quests a class with some variables and

54
00:02:28,680 --> 00:02:32,190
another includes and after that I don't

55
00:02:32,190 --> 00:02:35,310
care I really don't care this is not CSS

56
00:02:35,310 --> 00:02:38,160
it can be like you know what we call

57
00:02:38,160 --> 00:02:40,680
this this is spaghetti code this is

58
00:02:40,680 --> 00:02:43,920
readable code like I look at this and

59
00:02:43,920 --> 00:02:47,160
it's like can't we simplify this I wish

60
00:02:47,160 --> 00:02:49,950
I could handle all of these logic with

61
00:02:49,950 --> 00:02:52,230
JavaScript and let me tell you if you

62
00:02:52,230 --> 00:02:54,330
are not the guy who is writing this

63
00:02:54,330 --> 00:02:57,090
someone else is doing that for you these

64
00:02:57,090 --> 00:02:59,700
are the most popular post CSS plugins

65
00:02:59,700 --> 00:03:03,420
that allow us to write logic in CSS like

66
00:03:03,420 --> 00:03:06,720
mix-ins functions conditionals and at

67
00:03:06,720 --> 00:03:08,610
the end of the month it's more than

68
00:03:08,610 --> 00:03:11,160
alpha million of downloads that's a lot

69
00:03:11,160 --> 00:03:13,920
of logic that you wish you could use

70
00:03:13,920 --> 00:03:17,070
javascript and to do that you need to

71
00:03:17,070 --> 00:03:20,850
use post CSS WIPO CSS well possesses is

72
00:03:20,850 --> 00:03:23,130
really fast compared to sauce because

73
00:03:23,130 --> 00:03:25,260
it's built with JavaScript and sass is

74
00:03:25,260 --> 00:03:28,590
built with Ruby then it's modular so

75
00:03:28,590 --> 00:03:30,630
it's easy to contribute like writing a

76
00:03:30,630 --> 00:03:33,960
plug-in with those plugins you have

77
00:03:33,960 --> 00:03:36,390
access to features that are impossible

78
00:03:36,390 --> 00:03:39,540
with sauce and last but not least it's

79
00:03:39,540 --> 00:03:44,040
really simple to start to setup in any

80
00:03:44,040 --> 00:03:46,110
project with web pack or belt or

81
00:03:46,110 --> 00:03:49,380
whatever so before jumping to JavaScript

82
00:03:49,380 --> 00:03:52,020
let me quickly explain how a mixin works

83
00:03:52,020 --> 00:03:55,530
with CSS in this case with post CSS so

84
00:03:55,530 --> 00:03:58,020
you define a mix in and you give it a

85
00:03:58,020 --> 00:04:01,410
name sites dynamics in can have

86
00:04:01,410 --> 00:04:03,510
arguments like a function in JavaScript

87
00:04:03,510 --> 00:04:06,870
let's give it a value inside the mixing

88
00:04:06,870 --> 00:04:10,440
you can have whatever logic you want but

89
00:04:10,440 --> 00:04:12,060
in this case let's keep it simple a

90
00:04:12,060 --> 00:04:14,370
width and a height rule with the same

91
00:04:14,370 --> 00:04:18,090
value that's it to use the mixing you'll

92
00:04:18,090 --> 00:04:21,150
need to write hot mix in the name of the

93
00:04:21,150 --> 00:04:23,520
mixing size and give it a value 20

94
00:04:23,520 --> 00:04:27,390
pixels after that post CSS mix-ins will

95
00:04:27,390 --> 00:04:27,630
do

96
00:04:27,630 --> 00:04:29,940
all the magic and you will end up with a

97
00:04:29,940 --> 00:04:32,670
width and a height of 20 pixels that's

98
00:04:32,670 --> 00:04:34,920
it this is all you need to know about

99
00:04:34,920 --> 00:04:38,340
CSS to follow the rest of my talk now

100
00:04:38,340 --> 00:04:40,860
with JavaScript it's pretty the same but

101
00:04:40,860 --> 00:04:42,780
with a function but there is one main

102
00:04:42,780 --> 00:04:45,540
difference the mixin name is a file name

103
00:04:45,540 --> 00:04:49,560
in this case size GS the mixin I'm will

104
00:04:49,560 --> 00:04:52,620
recites another difference is the first

105
00:04:52,620 --> 00:04:54,330
argument is a mixin note

106
00:04:54,330 --> 00:04:56,790
mixing all is created by post CSS and

107
00:04:56,790 --> 00:04:59,130
with that you can have access to the

108
00:04:59,130 --> 00:05:02,820
context of the mixing but we all don't

109
00:05:02,820 --> 00:05:05,730
need that in this example so you just

110
00:05:05,730 --> 00:05:07,380
need to know that it's used at work for

111
00:05:07,380 --> 00:05:10,110
CSS then you pass the the rest of the

112
00:05:10,110 --> 00:05:12,720
arguments in this case of le then to

113
00:05:12,720 --> 00:05:15,420
return the CSS you return as an object a

114
00:05:15,420 --> 00:05:17,820
width and height of the same well pretty

115
00:05:17,820 --> 00:05:22,110
simple pretty similar to CSS now the

116
00:05:22,110 --> 00:05:24,570
only thing missing is to connect this

117
00:05:24,570 --> 00:05:28,590
mixing to the CSS files to do that you

118
00:05:28,590 --> 00:05:30,090
need to update the post CSS

119
00:05:30,090 --> 00:05:32,670
configuration file that file is very

120
00:05:32,670 --> 00:05:35,340
well all your plugins one of them is the

121
00:05:35,340 --> 00:05:38,690
process s mix-ins possesses mix-ins as a

122
00:05:38,690 --> 00:05:41,430
option called mix-ins directory where

123
00:05:41,430 --> 00:05:43,590
you pass the folder that has all your

124
00:05:43,590 --> 00:05:47,730
mix ins that's it now back to the CSS

125
00:05:47,730 --> 00:05:49,920
file you just need to call the mix in

126
00:05:49,920 --> 00:05:52,170
it's a global mixing so you don't even

127
00:05:52,170 --> 00:05:54,750
need to import the mixing and all the

128
00:05:54,750 --> 00:05:57,360
logic behind that mixing is handled by

129
00:05:57,360 --> 00:06:00,120
JavaScript how cool is that this is

130
00:06:00,120 --> 00:06:03,870
something new now what can you do with

131
00:06:03,870 --> 00:06:08,010
logic that you can't in CSS what happens

132
00:06:08,010 --> 00:06:16,159
to logic in JavaScript

133
00:06:16,169 --> 00:06:19,620
let's be honest here guys how many of

134
00:06:19,620 --> 00:06:22,560
you write unit tests JavaScript unit

135
00:06:22,560 --> 00:06:30,629
tests oh okay okay is anyone here that

136
00:06:30,629 --> 00:06:33,090
doesn't write unit tests in JavaScript

137
00:06:33,090 --> 00:06:36,300
don't be shy come on it's okay come on

138
00:06:36,300 --> 00:06:37,740
no one okay

139
00:06:37,740 --> 00:06:42,150
some of you okay okay is anyone here

140
00:06:42,150 --> 00:06:47,499
that doesn't care at all about tests I

141
00:06:47,509 --> 00:06:50,909
saw you and I understand you i sir I do

142
00:06:50,909 --> 00:06:53,370
I know why you don't write tests you

143
00:06:53,370 --> 00:06:54,779
don't write this and you don't care

144
00:06:54,779 --> 00:06:58,319
about tests because your code is so so

145
00:06:58,319 --> 00:07:01,949
perfect so simple doesn't need to be

146
00:07:01,949 --> 00:07:04,800
tested right what could be wrong or

147
00:07:04,800 --> 00:07:09,300
maybe just maybe your code is so complex

148
00:07:09,300 --> 00:07:12,120
it's like come on it works on my machine

149
00:07:12,120 --> 00:07:13,949
don't touch it it will work on next

150
00:07:13,949 --> 00:07:17,159
Monday okay well let me tell you my

151
00:07:17,159 --> 00:07:20,490
story when years ago more or less I

152
00:07:20,490 --> 00:07:23,430
didn't care about this come on

153
00:07:23,430 --> 00:07:25,080
like I didn't care because I didn't

154
00:07:25,080 --> 00:07:28,020
understand them but when I found myself

155
00:07:28,020 --> 00:07:30,810
writing the same code over and over

156
00:07:30,810 --> 00:07:33,379
again I understood I understood that

157
00:07:33,379 --> 00:07:35,849
writing tests forced you to simplify

158
00:07:35,849 --> 00:07:39,449
your code and that's not easy when you

159
00:07:39,449 --> 00:07:42,060
write tests you need to know exactly

160
00:07:42,060 --> 00:07:45,060
what to cause what to do and when you

161
00:07:45,060 --> 00:07:48,180
know what to do you do less and when you

162
00:07:48,180 --> 00:07:51,270
do less you can do better so in your

163
00:07:51,270 --> 00:07:52,349
next project

164
00:07:52,349 --> 00:07:54,779
don't forget about tests they will

165
00:07:54,779 --> 00:07:56,969
improve you they will improve your calls

166
00:07:56,969 --> 00:07:59,009
and they even if you don't know how to

167
00:07:59,009 --> 00:08:00,479
test you can start today

168
00:08:00,479 --> 00:08:03,419
by testing a CSS mixing with JavaScript

169
00:08:03,419 --> 00:08:05,599
so let's do it

170
00:08:05,599 --> 00:08:08,969
although the tests work a test is simple

171
00:08:08,969 --> 00:08:11,189
as you expect something to match an

172
00:08:11,189 --> 00:08:14,069
output so let's see how we test the size

173
00:08:14,069 --> 00:08:17,069
mix in it start by importing the size

174
00:08:17,069 --> 00:08:19,649
then you have a test function area I'm

175
00:08:19,649 --> 00:08:22,139
using just just is a test framework

176
00:08:22,139 --> 00:08:24,180
built by Facebook but you can use

177
00:08:24,180 --> 00:08:26,729
whatever you want then in your test

178
00:08:26,729 --> 00:08:29,519
function you give it a description slice

179
00:08:29,519 --> 00:08:32,130
return the width and height then you

180
00:08:32,130 --> 00:08:35,159
expect the size that it's a mixing node

181
00:08:35,159 --> 00:08:37,560
and the value two we call tuned output

182
00:08:37,560 --> 00:08:40,260
remember the mixing no this is why pasta

183
00:08:40,260 --> 00:08:41,729
says that we don't need it

184
00:08:41,729 --> 00:08:46,769
nope then you pass a value twenty four

185
00:08:46,769 --> 00:08:49,620
pixels and then you just need to write

186
00:08:49,620 --> 00:08:52,230
the expected output an object with a

187
00:08:52,230 --> 00:08:55,529
width and height of 24 pixels after that

188
00:08:55,529 --> 00:08:57,990
you just need to run the test see a

189
00:08:57,990 --> 00:09:00,839
green checkmark and be happy you don't

190
00:09:00,839 --> 00:09:03,209
need to worry about this mixing anymore

191
00:09:03,209 --> 00:09:06,390
because it's tested you have CSS logic

192
00:09:06,390 --> 00:09:09,510
tested with JavaScript so until at the

193
00:09:09,510 --> 00:09:12,540
end of the day you can enjoy the rest of

194
00:09:12,540 --> 00:09:14,339
the day how cool is that

195
00:09:14,339 --> 00:09:20,940
it's really cool no I think it's great

196
00:09:20,940 --> 00:09:23,250
that we have these tools that allow us

197
00:09:23,250 --> 00:09:25,680
to create these small improvements in

198
00:09:25,680 --> 00:09:28,709
our CSS because we like to improve we

199
00:09:28,709 --> 00:09:30,569
like to evolve and that's our wave

200
00:09:30,569 --> 00:09:34,019
evolution works not really let me tell

201
00:09:34,019 --> 00:09:45,130
you our evolution really works ready

202
00:09:45,140 --> 00:09:50,470
you're laughing but this is not fun

203
00:09:50,480 --> 00:09:53,820
waiting for w3c to approve a feature and

204
00:09:53,820 --> 00:09:56,730
then all browsers is supported so we can

205
00:09:56,730 --> 00:10:02,070
use that feature this is a pain so my

206
00:10:02,070 --> 00:10:05,880
question is is where is our CSS mixing

207
00:10:05,880 --> 00:10:08,310
in this process we where is the size

208
00:10:08,310 --> 00:10:11,160
mixing well it's not here it's not here

209
00:10:11,160 --> 00:10:13,590
because we don't like to wait we don't

210
00:10:13,590 --> 00:10:15,930
like to wait for a web evolution it's

211
00:10:15,930 --> 00:10:20,040
too slow so what we do we create a web

212
00:10:20,040 --> 00:10:23,970
evolution nowadays almost every project

213
00:10:23,970 --> 00:10:26,040
as one of these tools

214
00:10:26,040 --> 00:10:28,800
that's all where evolution works we like

215
00:10:28,800 --> 00:10:31,170
to create we like to evolve we like to

216
00:10:31,170 --> 00:10:35,730
be one step ahead and how web evolution

217
00:10:35,730 --> 00:10:38,190
works like that you create something we

218
00:10:38,190 --> 00:10:40,920
share it so people can see how amazing

219
00:10:40,920 --> 00:10:44,490
is that or not and you use it until the

220
00:10:44,490 --> 00:10:47,070
day it gets approval and this is what we

221
00:10:47,070 --> 00:10:49,650
are doing with our mixing we already

222
00:10:49,650 --> 00:10:52,770
creatives what about sharing you have

223
00:10:52,770 --> 00:10:55,710
your mix-ins folder full of mix-ins that

224
00:10:55,710 --> 00:10:57,660
improves your project your project

225
00:10:57,660 --> 00:11:00,900
workflow what about the others maybe

226
00:11:00,900 --> 00:11:03,540
there is someone else that needs exactly

227
00:11:03,540 --> 00:11:05,820
the same mixing as you you could share

228
00:11:05,820 --> 00:11:10,230
it so how can you share this I'm talking

229
00:11:10,230 --> 00:11:13,560
about mix-ins for almost 15 minutes and

230
00:11:13,560 --> 00:11:15,570
there is something that I have to

231
00:11:15,570 --> 00:11:17,790
confess you there is one thing that I

232
00:11:17,790 --> 00:11:19,170
don't like about mix-ins

233
00:11:19,170 --> 00:11:22,560
the problem is with mix-ins is that when

234
00:11:22,560 --> 00:11:25,620
you have a lot of mix-ins you have

235
00:11:25,620 --> 00:11:29,970
mix-ins everywhere so what if I tell you

236
00:11:29,970 --> 00:11:32,700
that you can simplify even more this

237
00:11:32,700 --> 00:11:36,330
mixing instead of writing at mixing size

238
00:11:36,330 --> 00:11:39,750
20 pixels you could just write size 20

239
00:11:39,750 --> 00:11:44,220
pixels it looks simpler official doesn't

240
00:11:44,220 --> 00:11:46,410
it it could be one day who knows and

241
00:11:46,410 --> 00:11:49,260
this is one of the things that I most

242
00:11:49,260 --> 00:11:51,750
like about post ESS it allow us to

243
00:11:51,750 --> 00:11:55,260
create custom CSS in this case we are

244
00:11:55,260 --> 00:11:57,360
creating a custom property

245
00:11:57,360 --> 00:11:59,550
and to do this you need to write a post

246
00:11:59,550 --> 00:12:02,600
CSS plugin so let's do it

247
00:12:02,600 --> 00:12:06,990
to help you there is a post CSS plugin

248
00:12:06,990 --> 00:12:09,420
boilerplate hungry tub and we only use

249
00:12:09,420 --> 00:12:14,510
them we only use it in this talk so

250
00:12:14,510 --> 00:12:17,579
first of all you need to import post CSS

251
00:12:17,579 --> 00:12:21,149
to have access to the post CSS API after

252
00:12:21,149 --> 00:12:23,040
that you'll create a post ESS plug-in

253
00:12:23,040 --> 00:12:26,430
let's give it a name for CSS sites then

254
00:12:26,430 --> 00:12:28,980
you'll have initializer the initializer

255
00:12:28,980 --> 00:12:31,110
is a callback function that gives you

256
00:12:31,110 --> 00:12:33,839
access to the CSS itself in a person

257
00:12:33,839 --> 00:12:37,560
node like an ast with that you are ready

258
00:12:37,560 --> 00:12:39,930
to transform the CSS with JavaScript

259
00:12:39,930 --> 00:12:41,930
this is what you have on the boilerplate

260
00:12:41,930 --> 00:12:45,240
so before starting to actually write

261
00:12:45,240 --> 00:12:49,019
some code let me see if it's working to

262
00:12:49,019 --> 00:12:51,570
see if this plug-in works I need to set

263
00:12:51,570 --> 00:12:54,750
up a new project with post CSS after

264
00:12:54,750 --> 00:12:56,640
that I need to apply to process s

265
00:12:56,640 --> 00:12:58,890
configuration adding the post ESS size

266
00:12:58,890 --> 00:13:02,449
plug-in then let's write some CSS that

267
00:13:02,449 --> 00:13:06,959
uses that plug-in and then you also

268
00:13:06,959 --> 00:13:09,810
fresh the page while you code until it

269
00:13:09,810 --> 00:13:14,269
works doesn't feel right doesn't it

270
00:13:14,269 --> 00:13:18,540
sorry to say this but know there are

271
00:13:18,540 --> 00:13:20,699
better ways than doing this this is not

272
00:13:20,699 --> 00:13:23,160
how you should test your code like I'm

273
00:13:23,160 --> 00:13:26,790
talking about CSS mix-ins but we all do

274
00:13:26,790 --> 00:13:30,949
this in our daily basis don't worry so

275
00:13:30,949 --> 00:13:35,100
there are better ways faster ways to to

276
00:13:35,100 --> 00:13:39,600
test a post ESS plug-in or your calls so

277
00:13:39,600 --> 00:13:42,480
instead of having a refresh driven

278
00:13:42,480 --> 00:13:44,550
development we can have a test-driven

279
00:13:44,550 --> 00:13:47,250
development also known as TDD where you

280
00:13:47,250 --> 00:13:50,010
start by writing the tests and then

281
00:13:50,010 --> 00:13:52,320
write the code needed to make those

282
00:13:52,320 --> 00:13:55,890
tests pass so let's write our test to

283
00:13:55,890 --> 00:13:59,160
this plug-in so you start by importing

284
00:13:59,160 --> 00:14:02,339
the plug-in and post ESS then you have a

285
00:14:02,339 --> 00:14:04,050
run function this is what you have on

286
00:14:04,050 --> 00:14:06,149
the boilerplate you can see a run

287
00:14:06,149 --> 00:14:08,790
function the run function like a utility

288
00:14:08,790 --> 00:14:10,980
function that saves you

289
00:14:10,980 --> 00:14:13,230
writing expects something to match and

290
00:14:13,230 --> 00:14:15,329
output in this case you are expecting

291
00:14:15,329 --> 00:14:18,810
that the post CSS process result to

292
00:14:18,810 --> 00:14:21,839
match the expected output

293
00:14:21,839 --> 00:14:25,139
it might sound hard to understand but

294
00:14:25,139 --> 00:14:27,480
you'll you'll understand that after that

295
00:14:27,480 --> 00:14:29,279
you have a test function with a

296
00:14:29,279 --> 00:14:31,560
description and then you call the run

297
00:14:31,560 --> 00:14:33,720
function where you give it an input and

298
00:14:33,720 --> 00:14:37,110
an output so if you write a class foo

299
00:14:37,110 --> 00:14:39,870
with a size 1 pixel then you are

300
00:14:39,870 --> 00:14:41,850
expecting the foo with a width and a

301
00:14:41,850 --> 00:14:44,490
height of 1 pixel that's it and if you

302
00:14:44,490 --> 00:14:47,130
run the test now it will file so let's

303
00:14:47,130 --> 00:14:50,339
make it pass back to our processes

304
00:14:50,339 --> 00:14:53,399
plug-in code the first thing that you

305
00:14:53,399 --> 00:14:56,610
need to do it's to look for the size

306
00:14:56,610 --> 00:15:00,300
property in your CSS to do that use the

307
00:15:00,300 --> 00:15:02,760
world declaration method that you can't

308
00:15:02,760 --> 00:15:04,740
filter by property in this case the size

309
00:15:04,740 --> 00:15:07,320
when you have a match you'll have access

310
00:15:07,320 --> 00:15:11,430
to the declaration itself and with that

311
00:15:11,430 --> 00:15:14,490
you just need to do two things to get

312
00:15:14,490 --> 00:15:16,949
the size value and all the weed and

313
00:15:16,949 --> 00:15:19,500
direct properties the size value is

314
00:15:19,500 --> 00:15:22,170
simple as declaration dot value then to

315
00:15:22,170 --> 00:15:24,449
add the weed indict properties you use

316
00:15:24,449 --> 00:15:26,699
clone before where you pass an object

317
00:15:26,699 --> 00:15:31,680
with a property and the value now let me

318
00:15:31,680 --> 00:15:35,699
see if it works we have class a square

319
00:15:35,699 --> 00:15:38,730
class with a size 80 pixels and the red

320
00:15:38,730 --> 00:15:41,279
background is anyone here that thinks

321
00:15:41,279 --> 00:15:42,690
that this will not work

322
00:15:42,690 --> 00:15:45,209
I believe it works I mean my code is

323
00:15:45,209 --> 00:15:48,389
perfect right of course it works

324
00:15:48,389 --> 00:15:52,279
come on now if it works on the browser

325
00:15:52,279 --> 00:15:56,550
it will work on the test yes

326
00:15:56,550 --> 00:16:02,970
no no of course it works what a second

327
00:16:02,970 --> 00:16:05,910
oh it doesn't work my code is not

328
00:16:05,910 --> 00:16:08,370
perfect anymore so we are suspecting the

329
00:16:08,370 --> 00:16:10,529
width and height of 1 pixel but we also

330
00:16:10,529 --> 00:16:13,500
receive the size 1 pixel there is two

331
00:16:13,500 --> 00:16:14,810
problems here

332
00:16:14,810 --> 00:16:18,420
CSS arrows on the browser are silent so

333
00:16:18,420 --> 00:16:21,060
you will not see size is not the finest

334
00:16:21,060 --> 00:16:22,959
on the console

335
00:16:22,959 --> 00:16:27,019
besides that and worse than that the you

336
00:16:27,019 --> 00:16:30,529
are with this you are having more coal

337
00:16:30,529 --> 00:16:33,259
that you expect on your production file

338
00:16:33,259 --> 00:16:36,649
and that's not good so in this case unit

339
00:16:36,649 --> 00:16:40,490
tests l pellets and because in this case

340
00:16:40,490 --> 00:16:43,459
we forgot to remove the size property so

341
00:16:43,459 --> 00:16:45,680
to home of the size property it's simple

342
00:16:45,680 --> 00:16:48,290
as declaration that he move that's it

343
00:16:48,290 --> 00:16:52,129
now if you run the test again it will

344
00:16:52,129 --> 00:16:54,250
pass simple as that

345
00:16:54,250 --> 00:16:57,079
this is all you need to write a post CSS

346
00:16:57,079 --> 00:17:00,829
plug in less than ten lines of code how

347
00:17:00,829 --> 00:17:01,850
simple is that

348
00:17:01,850 --> 00:17:06,650
and we let like what can you do with the

349
00:17:06,650 --> 00:17:09,470
size eight eighty pixels that we

350
00:17:09,470 --> 00:17:12,860
couldn't do with the mixing you can

351
00:17:12,860 --> 00:17:17,209
publish it you can share it so from your

352
00:17:17,209 --> 00:17:19,850
project you can level up to another

353
00:17:19,850 --> 00:17:24,100
project and share it with everyone

354
00:17:24,100 --> 00:17:27,230
actually this plug-in already exists is

355
00:17:27,230 --> 00:17:29,750
called Poe CSS short size and you can

356
00:17:29,750 --> 00:17:33,169
have more logic than just having a value

357
00:17:33,169 --> 00:17:35,840
you can add a second value so we the

358
00:17:35,840 --> 00:17:38,690
night you can have proportional values

359
00:17:38,690 --> 00:17:41,600
and if you have a size you can have a

360
00:17:41,600 --> 00:17:46,250
mean size and of course a Mac size there

361
00:17:46,250 --> 00:17:48,919
are a lot of really good possi SS

362
00:17:48,919 --> 00:17:51,860
plug-ins like CSS next allow us to write

363
00:17:51,860 --> 00:17:54,890
CSS for it's like barbell for JavaScript

364
00:17:54,890 --> 00:17:58,190
you have FTL CSS that transforms the

365
00:17:58,190 --> 00:18:00,460
left to right from right to left

366
00:18:00,460 --> 00:18:03,049
direction and the web possess a short

367
00:18:03,049 --> 00:18:05,150
possessor short is a group of small

368
00:18:05,150 --> 00:18:08,179
plugins like Poe CSS short sites that

369
00:18:08,179 --> 00:18:10,700
allow us to have shortened properties in

370
00:18:10,700 --> 00:18:14,440
CSS and you can check much more plugins

371
00:18:14,440 --> 00:18:20,900
now so far my talk is all about GS in

372
00:18:20,900 --> 00:18:24,980
CSS instead of CSS in GS but you can

373
00:18:24,980 --> 00:18:27,820
also apply this at mix-ins

374
00:18:27,820 --> 00:18:31,850
concept with CSS NGS tools let's see

375
00:18:31,850 --> 00:18:35,680
with glamorous with glamorous we

376
00:18:35,680 --> 00:18:38,680
the CSS in an object so to use the size

377
00:18:38,680 --> 00:18:40,990
function in this case you can use the

378
00:18:40,990 --> 00:18:44,290
spread operator to get the value which

379
00:18:44,290 --> 00:18:46,450
style components is pretty the same but

380
00:18:46,450 --> 00:18:49,360
instead of an object is a template

381
00:18:49,360 --> 00:18:51,850
literal well you need to use the

382
00:18:51,850 --> 00:18:55,030
placeholder the dollar with the brackets

383
00:18:55,030 --> 00:18:58,420
and that's it so whatever the tool you

384
00:18:58,420 --> 00:19:03,420
you use you can improve your CSS let me

385
00:19:03,420 --> 00:19:06,490
let me say something here like I'm not

386
00:19:06,490 --> 00:19:10,330
saying that CSS mix-ins are well like

387
00:19:10,330 --> 00:19:13,030
they can do but they can do if you have

388
00:19:13,030 --> 00:19:15,370
your small project yeah you can use CSS

389
00:19:15,370 --> 00:19:18,130
mix-ins that's okay but if you have

390
00:19:18,130 --> 00:19:20,530
bigger projects where you need to feel

391
00:19:20,530 --> 00:19:23,860
safer about your calls you can use

392
00:19:23,860 --> 00:19:26,350
JavaScript to help you you can test your

393
00:19:26,350 --> 00:19:28,750
code you can test your CSS logic that's

394
00:19:28,750 --> 00:19:31,900
really nice so a quick recap

395
00:19:31,900 --> 00:19:34,690
how can JavaScript improve your CSS

396
00:19:34,690 --> 00:19:37,150
mix-ins so say no more

397
00:19:37,150 --> 00:19:40,960
- weird sass syntax and spaghetti code

398
00:19:40,960 --> 00:19:43,210
and all of that you can enjoy javascript

399
00:19:43,210 --> 00:19:47,050
es6 AST whatever you want you have a

400
00:19:47,050 --> 00:19:50,860
full power and the rio CSS for the first

401
00:19:50,860 --> 00:19:53,730
time you can test your CSS logic and

402
00:19:53,730 --> 00:19:56,350
this is really cool this is what i like

403
00:19:56,350 --> 00:19:59,980
most and if your mixing is really nice

404
00:19:59,980 --> 00:20:03,310
you can share it with the web and that's

405
00:20:03,310 --> 00:20:05,350
why I came here today because I found

406
00:20:05,350 --> 00:20:07,780
something that improves my workflow and

407
00:20:07,780 --> 00:20:10,090
I believe that might improve yours as

408
00:20:10,090 --> 00:20:12,580
well because sharing is what make us

409
00:20:12,580 --> 00:20:15,120
better thank you

410
00:20:15,120 --> 00:20:16,540
[Applause]

411
00:20:16,540 --> 00:20:19,240
[Music]

412
00:20:19,240 --> 00:20:19,320
you

