1
00:00:04,549 --> 00:00:07,410

hi everyone thanks for coming out today

2
00:00:07,410 --> 00:00:11,460
I'm Michelle and I like Alex said and

3
00:00:11,460 --> 00:00:14,969
from about 12 blocks down telegraph or

4
00:00:14,969 --> 00:00:18,630
down Broadway so if you ever are into

5
00:00:18,630 --> 00:00:21,060
Chinese food or Korean food I have

6
00:00:21,060 --> 00:00:25,350
recommendations I work it's right and we

7
00:00:25,350 --> 00:00:27,449
do payment stuff this is not stripe but

8
00:00:27,449 --> 00:00:28,680
it's a place right across the street

9
00:00:28,680 --> 00:00:30,240
from tripe because we take security

10
00:00:30,240 --> 00:00:33,120
security really seriously we don't want

11
00:00:33,120 --> 00:00:36,000
to show your office at stripe I'm

12
00:00:36,000 --> 00:00:37,440
currently working on a rewrite of our

13
00:00:37,440 --> 00:00:40,140
user facing payments dashboard with Alex

14
00:00:40,140 --> 00:00:42,840
actually as for everyone else at stripe

15
00:00:42,840 --> 00:00:44,539
sometimes they'll need to write CSS

16
00:00:44,539 --> 00:00:46,710
usually for existing user facing

17
00:00:46,710 --> 00:00:48,570
payments dashboard so it takes up a

18
00:00:48,570 --> 00:00:51,780
pretty big chunk of our code base for

19
00:00:51,780 --> 00:00:54,090
some people this CSS writing is not by

20
00:00:54,090 --> 00:00:56,699
choice but because they need to ship

21
00:00:56,699 --> 00:00:57,750
some feature they're working on and

22
00:00:57,750 --> 00:00:59,910
adding that last bit of CSS or that

23
00:00:59,910 --> 00:01:02,250
button to the dashboard is the final

24
00:01:02,250 --> 00:01:03,989
blocker before they can you know right

25
00:01:03,989 --> 00:01:05,519
their blog post you know send that email

26
00:01:05,519 --> 00:01:08,909
that they ship something or people work

27
00:01:08,909 --> 00:01:10,350
on CSS because they're on call and

28
00:01:10,350 --> 00:01:11,790
something broke so they need to fix a

29
00:01:11,790 --> 00:01:14,970
bug so it's definitely not on the top of

30
00:01:14,970 --> 00:01:16,650
everyone's mind and it's definitely not

31
00:01:16,650 --> 00:01:18,270
the most pleasant task for people to be

32
00:01:18,270 --> 00:01:21,450
working on so in working on the rewrite

33
00:01:21,450 --> 00:01:23,310
of the new user dashboard I'm trying to

34
00:01:23,310 --> 00:01:26,520
solve some of these issues when we first

35
00:01:26,520 --> 00:01:28,229
built our current existing dashboard we

36
00:01:28,229 --> 00:01:29,880
created handful of reusable backbone

37
00:01:29,880 --> 00:01:32,490
views these had the honor of having

38
00:01:32,490 --> 00:01:34,740
their own CSS for each template

39
00:01:34,740 --> 00:01:37,140
everything else was essentially custom /

40
00:01:37,140 --> 00:01:39,030
template things that weren't obviously

41
00:01:39,030 --> 00:01:40,650
JavaScript components to not get

42
00:01:40,650 --> 00:01:42,240
considered for any sort of CSS for

43
00:01:42,240 --> 00:01:44,640
usability as an example this modal

44
00:01:44,640 --> 00:01:46,740
component complete with its own fancy

45
00:01:46,740 --> 00:01:50,100
lightbox JavaScript had its own template

46
00:01:50,100 --> 00:01:52,890
and its own CSS and it was really

47
00:01:52,890 --> 00:01:56,490
special but this modal explanation

48
00:01:56,490 --> 00:01:58,619
inside this model is stalled

49
00:01:58,619 --> 00:02:00,479
specifically for this template that

50
00:02:00,479 --> 00:02:02,280
appears in so it just has a few lines

51
00:02:02,280 --> 00:02:05,270
and create new account view dot CSS and

52
00:02:05,270 --> 00:02:07,950
this what it worked for us at the time

53
00:02:07,950 --> 00:02:10,530
but as we began having more models that

54
00:02:10,530 --> 00:02:12,130
needed explanation

55
00:02:12,130 --> 00:02:14,950
we just kept repeating that style over

56
00:02:14,950 --> 00:02:16,000
and over again in the individual

57
00:02:16,000 --> 00:02:19,060
templates wait a bunch of files just

58
00:02:19,060 --> 00:02:21,760
like this where it was easy to style

59
00:02:21,760 --> 00:02:23,110
each individual view separately

60
00:02:23,110 --> 00:02:25,570
especially because we had sass to help

61
00:02:25,570 --> 00:02:27,190
us and sass allowed us in nesstar

62
00:02:27,190 --> 00:02:29,500
selectors infinitely so we could go

63
00:02:29,500 --> 00:02:31,210
crazy and style away without worrying

64
00:02:31,210 --> 00:02:33,730
about affecting other templates except

65
00:02:33,730 --> 00:02:35,740
sometimes right because they might be

66
00:02:35,740 --> 00:02:37,480
used inside other templates or they

67
00:02:37,480 --> 00:02:39,870
might be reused in other contexts

68
00:02:39,870 --> 00:02:42,010
sometimes a particular temporary styling

69
00:02:42,010 --> 00:02:44,140
might use in two places or nests in a

70
00:02:44,140 --> 00:02:45,550
different template thatÃ­s tiles not

71
00:02:45,550 --> 00:02:47,920
affected either way by looking at the

72
00:02:47,920 --> 00:02:49,300
file names in the folder structure

73
00:02:49,300 --> 00:02:51,310
there's no good way to tell because

74
00:02:51,310 --> 00:02:53,530
there's no convention about which files

75
00:02:53,530 --> 00:02:55,840
are which views are reusable which fees

76
00:02:55,840 --> 00:02:58,810
aren't reusable and there's no easy way

77
00:02:58,810 --> 00:03:01,090
to tell which side effects the CSS your

78
00:03:01,090 --> 00:03:03,970
writing will have so let me take you

79
00:03:03,970 --> 00:03:06,790
into a couple minutes in the life of me

80
00:03:06,790 --> 00:03:08,410
who needs to add some CSS to our

81
00:03:08,410 --> 00:03:11,020
existing dashboard so I need to add an

82
00:03:11,020 --> 00:03:14,620
explanation to this field view so I'm

83
00:03:14,620 --> 00:03:16,240
going to look for a similar similar

84
00:03:16,240 --> 00:03:20,710
looking thing and I will inspect element

85
00:03:20,710 --> 00:03:22,900
because I have no idea where it lists

86
00:03:22,900 --> 00:03:25,360
and it looks like this particular

87
00:03:25,360 --> 00:03:27,280
explanation actually gets its tiles from

88
00:03:27,280 --> 00:03:29,710
like three different places so I try to

89
00:03:29,710 --> 00:03:31,780
grep for the first one because I don't

90
00:03:31,780 --> 00:03:33,360
think me a source Maps set up properly

91
00:03:33,360 --> 00:03:36,580
and I don't find anything and that's

92
00:03:36,580 --> 00:03:39,310
because it's arbitrarily nested like

93
00:03:39,310 --> 00:03:41,230
three levels deeper than it should be

94
00:03:41,230 --> 00:03:43,390
and if you look at the side like there's

95
00:03:43,390 --> 00:03:45,550
much more nesting beyond just what the

96
00:03:45,550 --> 00:03:49,120
screen shot captures so at this point

97
00:03:49,120 --> 00:03:50,920
it's probably no longer worth it to try

98
00:03:50,920 --> 00:03:53,830
to find styles i want so i take the last

99
00:03:53,830 --> 00:03:55,870
set of styles find the color make my own

100
00:03:55,870 --> 00:03:58,900
element look as close as possible and so

101
00:03:58,900 --> 00:04:01,240
there's another eight lines of CSS added

102
00:04:01,240 --> 00:04:03,880
to our code base there's no big deal

103
00:04:03,880 --> 00:04:06,160
right unless you're doing it for three

104
00:04:06,160 --> 00:04:08,770
years and over many different developers

105
00:04:08,770 --> 00:04:12,370
about their own style overriding but it

106
00:04:12,370 --> 00:04:15,880
definitely gets the job done and after

107
00:04:15,880 --> 00:04:17,770
performing this horrible process many

108
00:04:17,770 --> 00:04:20,500
times myself I have determined that

109
00:04:20,500 --> 00:04:24,590
there are four stages of CSS degradation

110
00:04:24,590 --> 00:04:28,340
and the first one is determination this

111
00:04:28,340 --> 00:04:30,410
is where we are 10 people to let's drive

112
00:04:30,410 --> 00:04:32,870
right we are starry eyed and ear to ship

113
00:04:32,870 --> 00:04:34,880
a user dashboard and we're smart too

114
00:04:34,880 --> 00:04:37,340
right so we'll pull the best tools in we

115
00:04:37,340 --> 00:04:39,380
will pull in SAS we will clearly define

116
00:04:39,380 --> 00:04:42,229
how we want to organize our views and

117
00:04:42,229 --> 00:04:43,790
CSS in a way that makes styling them

118
00:04:43,790 --> 00:04:47,000
really easy so we ship a thing and we

119
00:04:47,000 --> 00:04:51,020
celebrate because we have an MVP one

120
00:04:51,020 --> 00:04:54,949
year and 10 engineers later we are in

121
00:04:54,949 --> 00:04:57,590
the development stage this is where we

122
00:04:57,590 --> 00:04:59,750
start building the non MVP features and

123
00:04:59,750 --> 00:05:01,280
enhance existing features so

124
00:05:01,280 --> 00:05:02,510
everything's so good everything still

125
00:05:02,510 --> 00:05:05,600
works everything's like semi easy to

126
00:05:05,600 --> 00:05:06,740
find maybe you need you're looking to

127
00:05:06,740 --> 00:05:08,180
place instead of one to find what you're

128
00:05:08,180 --> 00:05:10,970
looking for and of course SAS is still

129
00:05:10,970 --> 00:05:13,520
super useful super easy to add new CSS

130
00:05:13,520 --> 00:05:16,520
and there's an evolution to be bugs

131
00:05:16,520 --> 00:05:20,030
introduced as we continue developing but

132
00:05:20,030 --> 00:05:22,010
because I'm just fixing this bug and

133
00:05:22,010 --> 00:05:24,590
it's pretty urgent and maybe I'll leave

134
00:05:24,590 --> 00:05:28,400
a few importance in the code but it's

135
00:05:28,400 --> 00:05:29,870
okay because I'll fix it later like it's

136
00:05:29,870 --> 00:05:35,030
not important that I fix it now so as

137
00:05:35,030 --> 00:05:38,630
Adam mentioned before in his talk CSS is

138
00:05:38,630 --> 00:05:41,030
append only so keep in mind that this

139
00:05:41,030 --> 00:05:44,960
poop will probably never disappear so

140
00:05:44,960 --> 00:05:47,000
another year passed and another 20

141
00:05:47,000 --> 00:05:48,950
engineers and we're at thirty engineers

142
00:05:48,950 --> 00:05:50,780
now developments picking up pace and

143
00:05:50,780 --> 00:05:52,580
this is where we enter the third stage

144
00:05:52,580 --> 00:05:57,020
of code degradation and it's denial so

145
00:05:57,020 --> 00:05:58,520
dashboard still works most of the time

146
00:05:58,520 --> 00:06:02,090
so everything's good I can't hear or see

147
00:06:02,090 --> 00:06:05,660
any of this poop in the CSS because I

148
00:06:05,660 --> 00:06:07,250
only touch it once or twice per week and

149
00:06:07,250 --> 00:06:09,500
you know this is even my team's code to

150
00:06:09,500 --> 00:06:11,630
maintain its not my project so why do I

151
00:06:11,630 --> 00:06:15,620
care about this and one year and 40

152
00:06:15,620 --> 00:06:17,000
engineers later you're growing

153
00:06:17,000 --> 00:06:19,510
exponentially and so is the poopy CSS

154
00:06:19,510 --> 00:06:21,680
and this is where you enter the fourth

155
00:06:21,680 --> 00:06:25,789
stage despair this is where every time

156
00:06:25,789 --> 00:06:28,729
you fix a bug something breaks your CSS

157
00:06:28,729 --> 00:06:30,710
is growing at a rate about 3 poops per

158
00:06:30,710 --> 00:06:32,840
week and there's nothing you can do

159
00:06:32,840 --> 00:06:34,900
about it because everything's hopeless

160
00:06:34,900 --> 00:06:37,280
so let's break down how our existing

161
00:06:37,280 --> 00:06:38,420
dashboard CSS man

162
00:06:38,420 --> 00:06:40,940
just spiral downhill so badly it's not

163
00:06:40,940 --> 00:06:42,260
been the stage one we made the bad

164
00:06:42,260 --> 00:06:44,270
decisions I think the decisions we made

165
00:06:44,270 --> 00:06:45,500
at the time were one hundred percent the

166
00:06:45,500 --> 00:06:47,120
right decisions and were perfect for our

167
00:06:47,120 --> 00:06:49,790
size and our expertise and our timeline

168
00:06:49,790 --> 00:06:52,190
for the project the way that our CSS was

169
00:06:52,190 --> 00:06:54,470
handled was optimized for you know fast

170
00:06:54,470 --> 00:06:56,600
development and simplicity but as an

171
00:06:56,600 --> 00:06:59,240
organization grew our CSS needed to you

172
00:06:59,240 --> 00:07:01,070
know our CSS needs started change not

173
00:07:01,070 --> 00:07:03,140
every engineer that join was good at or

174
00:07:03,140 --> 00:07:05,810
even cared about CSS and more

175
00:07:05,810 --> 00:07:07,160
importantly they didn't have the context

176
00:07:07,160 --> 00:07:09,140
to know exactly how every view and our

177
00:07:09,140 --> 00:07:11,660
CSS or in our code base worked or was

178
00:07:11,660 --> 00:07:14,090
used regardless I believe that if we can

179
00:07:14,090 --> 00:07:15,560
start over and treat CSS as a

180
00:07:15,560 --> 00:07:17,510
first-class tool we can avoid some of

181
00:07:17,510 --> 00:07:20,210
these problems as an example we wouldn't

182
00:07:20,210 --> 00:07:22,130
write JavaScript without tests or

183
00:07:22,130 --> 00:07:27,260
without a winter right maybe so why

184
00:07:27,260 --> 00:07:30,430
would we tolerate such things in our CSS

185
00:07:30,430 --> 00:07:33,590
so what were the problems first problem

186
00:07:33,590 --> 00:07:35,960
I think was that there were no tests and

187
00:07:35,960 --> 00:07:37,730
some people say it's almost impossible

188
00:07:37,730 --> 00:07:40,400
to test CSS and that's sort of true and

189
00:07:40,400 --> 00:07:42,860
we'll get into that later the second was

190
00:07:42,860 --> 00:07:45,590
that there were no conventions well

191
00:07:45,590 --> 00:07:46,880
technically there were conventions right

192
00:07:46,880 --> 00:07:49,430
that each template can have an S CSS

193
00:07:49,430 --> 00:07:51,590
file in the same folder as a template

194
00:07:51,590 --> 00:07:53,720
but more specific than that the actual

195
00:07:53,720 --> 00:07:55,220
way the CSS was written had no

196
00:07:55,220 --> 00:07:57,500
convention we see everything from nested

197
00:07:57,500 --> 00:08:01,880
selectors to very vague selectors to you

198
00:08:01,880 --> 00:08:03,890
know more specifically named selectors

199
00:08:03,890 --> 00:08:09,260
in various forms and some IDs even in

200
00:08:09,260 --> 00:08:12,650
there and finally what I think was our

201
00:08:12,650 --> 00:08:14,210
most important issue was that we had no

202
00:08:14,210 --> 00:08:17,000
CSS for use again technically there was

203
00:08:17,000 --> 00:08:19,220
CSS we use just not any sort of

204
00:08:19,220 --> 00:08:21,910
structured documented or explicit kind

205
00:08:21,910 --> 00:08:25,100
in the art form of reusing CSS was

206
00:08:25,100 --> 00:08:27,230
reusing CSS EPS styled are various

207
00:08:27,230 --> 00:08:29,750
reasonable backbone views there's no

208
00:08:29,750 --> 00:08:32,240
concept of like pulling out of you or

209
00:08:32,240 --> 00:08:33,950
CSS that you found useful in other

210
00:08:33,950 --> 00:08:36,350
places so as an example we have this

211
00:08:36,350 --> 00:08:37,820
thing called transfers list view which

212
00:08:37,820 --> 00:08:39,590
you think is only used on the transfers

213
00:08:39,590 --> 00:08:41,210
page to display the transfers list if

214
00:08:41,210 --> 00:08:43,520
it's actually used in three places and

215
00:08:43,520 --> 00:08:45,320
just by looking at the file and that's

216
00:08:45,320 --> 00:08:47,240
CSS you have no idea that that's the

217
00:08:47,240 --> 00:08:48,740
case and you have no idea that it's

218
00:08:48,740 --> 00:08:50,120
being used in many different contexts

219
00:08:50,120 --> 00:08:51,350
a--'s

220
00:08:51,350 --> 00:08:53,660
meanwhile sublet subscriptions listview

221
00:08:53,660 --> 00:08:55,970
is actually only used in one place even

222
00:08:55,970 --> 00:08:56,900
though it seems like something that

223
00:08:56,900 --> 00:08:59,180
might be reusable and there's absolutely

224
00:08:59,180 --> 00:09:00,980
no documentation which components you

225
00:09:00,980 --> 00:09:04,430
can reuse and which you can't so what

226
00:09:04,430 --> 00:09:07,220
does this matter the first thing is that

227
00:09:07,220 --> 00:09:09,290
too much of this cruft filled up will

228
00:09:09,290 --> 00:09:11,180
make it really hard to tackle the non

229
00:09:11,180 --> 00:09:12,980
MVP problems that you eventually want to

230
00:09:12,980 --> 00:09:14,800
get to write like mobile readiness

231
00:09:14,800 --> 00:09:19,610
accessibility and you just can't tackle

232
00:09:19,610 --> 00:09:21,020
those things unless you look at every

233
00:09:21,020 --> 00:09:22,610
single file and rewrite every single

234
00:09:22,610 --> 00:09:25,340
view and it gets progressively more

235
00:09:25,340 --> 00:09:27,560
sluggish or snail ish to build new

236
00:09:27,560 --> 00:09:31,100
things and that eventually causes

237
00:09:31,100 --> 00:09:32,510
unhappiness while working in the code

238
00:09:32,510 --> 00:09:34,790
base and even worse like disdain or

239
00:09:34,790 --> 00:09:36,590
shame for the code base and the project

240
00:09:36,590 --> 00:09:38,930
that you're working on so let's start

241
00:09:38,930 --> 00:09:42,140
over this time from CSS first since we

242
00:09:42,140 --> 00:09:43,520
built this iteration of the dashboard

243
00:09:43,520 --> 00:09:44,750
over three years ago a lot has changed

244
00:09:44,750 --> 00:09:48,080
and there's more tools available now to

245
00:09:48,080 --> 00:09:49,910
solve our problems and allow us to think

246
00:09:49,910 --> 00:09:51,860
of CSS as the first class citizen just

247
00:09:51,860 --> 00:09:53,840
like other tools that we use most

248
00:09:53,840 --> 00:09:55,070
developers would cringe as they left

249
00:09:55,070 --> 00:09:56,930
crappy javascript in the code base and

250
00:09:56,930 --> 00:10:00,290
we should think of CSS the same way the

251
00:10:00,290 --> 00:10:01,970
first problem we should tackle was the

252
00:10:01,970 --> 00:10:03,850
last one that i mentioned no CSS for use

253
00:10:03,850 --> 00:10:05,960
we're tackling this problem with our own

254
00:10:05,960 --> 00:10:09,790
CSS component library called boot stripe

255
00:10:09,790 --> 00:10:12,560
this we also considered like stripes

256
00:10:12,560 --> 00:10:17,360
trap but wasn't as good we split our

257
00:10:17,360 --> 00:10:19,310
dashboard designs into composable

258
00:10:19,310 --> 00:10:21,020
components everything from a responsive

259
00:10:21,020 --> 00:10:23,420
content section that can be composed

260
00:10:23,420 --> 00:10:26,120
with other components all the way to the

261
00:10:26,120 --> 00:10:29,930
smaller details like big number and this

262
00:10:29,930 --> 00:10:32,450
will form at a number into the currency

263
00:10:32,450 --> 00:10:34,520
of your choice and for the locale of

264
00:10:34,520 --> 00:10:38,600
your choice and all this documentation

265
00:10:38,600 --> 00:10:41,120
is automatically generated and it's

266
00:10:41,120 --> 00:10:43,010
written right in your code in your CSS

267
00:10:43,010 --> 00:10:45,050
file so it's right in your face and you

268
00:10:45,050 --> 00:10:46,670
feel guilty if you don't update it you

269
00:10:46,670 --> 00:10:50,330
have to your CSS so investing the time

270
00:10:50,330 --> 00:10:52,040
to build these components may seem kind

271
00:10:52,040 --> 00:10:53,420
of daunting but once bootstrap was

272
00:10:53,420 --> 00:10:55,610
finished it was extremely easy to fill a

273
00:10:55,610 --> 00:10:56,870
page on a dashboard with these

274
00:10:56,870 --> 00:10:58,850
components and then we can worry about

275
00:10:58,850 --> 00:11:00,500
the ten percent less that's

276
00:11:00,500 --> 00:11:03,570
implementation and polish

277
00:11:03,570 --> 00:11:07,380
and and you don't have to worry about

278
00:11:07,380 --> 00:11:09,420
these like little things being styled

279
00:11:09,420 --> 00:11:11,310
because we probably would have thought

280
00:11:11,310 --> 00:11:13,410
about them in designing our more context

281
00:11:13,410 --> 00:11:17,520
specific components so one side effect

282
00:11:17,520 --> 00:11:21,750
was that developers who did not know CSS

283
00:11:21,750 --> 00:11:24,660
at stripe began using boot stripe for

284
00:11:24,660 --> 00:11:27,840
their own projects internally and this

285
00:11:27,840 --> 00:11:29,370
was something that really didn't happen

286
00:11:29,370 --> 00:11:31,200
before because it's so difficult to get

287
00:11:31,200 --> 00:11:32,520
something to look nice and many

288
00:11:32,520 --> 00:11:35,220
developers don't know CSS at all or are

289
00:11:35,220 --> 00:11:38,100
really bad at design so this allowed

290
00:11:38,100 --> 00:11:40,380
them to get something on a page looking

291
00:11:40,380 --> 00:11:42,450
nice without having to consult designers

292
00:11:42,450 --> 00:11:46,860
or write CSS so the next problem was no

293
00:11:46,860 --> 00:11:49,230
conventions so here's what we've settled

294
00:11:49,230 --> 00:11:51,270
on in terms of class naming we have a

295
00:11:51,270 --> 00:11:54,420
namespace stash componentname dash

296
00:11:54,420 --> 00:11:57,600
descendant dash dash descriptor so as an

297
00:11:57,600 --> 00:11:59,190
example we have boots stripe is our

298
00:11:59,190 --> 00:12:02,790
namespace OBS big number dash delimiter

299
00:12:02,790 --> 00:12:06,690
dash comma and a big number delimiter is

300
00:12:06,690 --> 00:12:08,790
like the delimiter that almost your

301
00:12:08,790 --> 00:12:11,640
thousands and millions and such and in

302
00:12:11,640 --> 00:12:13,350
this case it's a comma because we're in

303
00:12:13,350 --> 00:12:16,860
the US but in Europe you would have a

304
00:12:16,860 --> 00:12:20,700
period instead so before we get too much

305
00:12:20,700 --> 00:12:22,530
into that I'll briefly go over the tools

306
00:12:22,530 --> 00:12:24,360
that we've adopted for our new dashboard

307
00:12:24,360 --> 00:12:27,510
/ SAS so SAS was really amazing for CSS

308
00:12:27,510 --> 00:12:29,910
experts it makes people's lives much

309
00:12:29,910 --> 00:12:31,530
easier but when most folks who work on

310
00:12:31,530 --> 00:12:33,570
your CSS only know how to pens the

311
00:12:33,570 --> 00:12:35,640
bottom the file in really arbitrary ways

312
00:12:35,640 --> 00:12:37,620
that somehow magically work because

313
00:12:37,620 --> 00:12:40,920
that's this magic it's time to try find

314
00:12:40,920 --> 00:12:43,200
a new tool that will give them less rope

315
00:12:43,200 --> 00:12:45,690
to hang themselves with rework is what

316
00:12:45,690 --> 00:12:47,550
we ended up choosing rework is a plug-in

317
00:12:47,550 --> 00:12:50,220
for CSS pre-processing and its default

318
00:12:50,220 --> 00:12:52,440
form it takes the CSS you gives it

319
00:12:52,440 --> 00:12:54,300
parses in internet abstract syntax tree

320
00:12:54,300 --> 00:12:56,370
and composite to the exact same thing on

321
00:12:56,370 --> 00:12:57,990
the other end so that's not very

322
00:12:57,990 --> 00:12:59,460
interesting and you don't need to know

323
00:12:59,460 --> 00:13:01,410
exactly what it means but the gist of it

324
00:13:01,410 --> 00:13:03,150
is that during this middle phase when

325
00:13:03,150 --> 00:13:05,220
you have your CSS in the form of an AST

326
00:13:05,220 --> 00:13:07,230
you can write small plugins that will

327
00:13:07,230 --> 00:13:08,790
manipulate the abstract syntax tree

328
00:13:08,790 --> 00:13:10,680
before it's compiled back into the CSS

329
00:13:10,680 --> 00:13:12,750
so in this case we pulled in the we work

330
00:13:12,750 --> 00:13:16,230
deciduous safai plugin which turned this

331
00:13:16,230 --> 00:13:17,459
evergreen tree in

332
00:13:17,459 --> 00:13:21,420
deciduous tree this difficult because

333
00:13:21,420 --> 00:13:23,610
rather than pulling in a monolithic CSS

334
00:13:23,610 --> 00:13:26,100
framework for CSS non-expert sees we're

335
00:13:26,100 --> 00:13:27,420
now able to pick and choose specific

336
00:13:27,420 --> 00:13:30,089
plugins and tools with limited scope so

337
00:13:30,089 --> 00:13:32,699
non-experts don't add things to the CSS

338
00:13:32,699 --> 00:13:36,029
said they don't understand so another

339
00:13:36,029 --> 00:13:38,309
tool is CSS and it's a styling

340
00:13:38,309 --> 00:13:40,379
methodology for component based

341
00:13:40,379 --> 00:13:41,879
development includes the CSS

342
00:13:41,879 --> 00:13:44,339
preprocessor built atop of rework as

343
00:13:44,339 --> 00:13:46,230
well as a style guide we brought heavily

344
00:13:46,230 --> 00:13:47,519
from the style guide and creating our

345
00:13:47,519 --> 00:13:50,339
own and fork the suit CSS conformance

346
00:13:50,339 --> 00:13:52,379
checkers for ourselves but we didn't

347
00:13:52,379 --> 00:13:54,029
take the CSS preprocessor because we had

348
00:13:54,029 --> 00:13:57,209
our own needs so rework stripe

349
00:13:57,209 --> 00:13:59,339
conformance is fort from rework suit

350
00:13:59,339 --> 00:14:01,860
conformance and enforces CSS you write

351
00:14:01,860 --> 00:14:04,889
follows our predefined rules not only

352
00:14:04,889 --> 00:14:06,660
does a trucker tell you if your success

353
00:14:06,660 --> 00:14:09,240
doesn't conform it will not even build

354
00:14:09,240 --> 00:14:13,529
the file as an example i added a big

355
00:14:13,529 --> 00:14:16,050
dash number to the big number component

356
00:14:16,050 --> 00:14:18,059
and a build fails and there's info about

357
00:14:18,059 --> 00:14:20,069
like what line number it's on and what

358
00:14:20,069 --> 00:14:26,059
exactly the misbehaving selector is so

359
00:14:26,059 --> 00:14:28,110
again because developers will grumble

360
00:14:28,110 --> 00:14:30,299
about being dry but pull and rework

361
00:14:30,299 --> 00:14:31,740
namespace to the letter submit that

362
00:14:31,740 --> 00:14:37,619
pesky namespace that's in every class we

363
00:14:37,619 --> 00:14:39,360
also pulled in rework inherit a plug-in

364
00:14:39,360 --> 00:14:40,769
that lets us use very simple very

365
00:14:40,769 --> 00:14:43,860
limited inheritance so one in this

366
00:14:43,860 --> 00:14:45,240
example one common way of styling

367
00:14:45,240 --> 00:14:46,949
checkboxes is too high the input element

368
00:14:46,949 --> 00:14:50,279
and then style a like fake label element

369
00:14:50,279 --> 00:14:52,619
on top of that input element with your

370
00:14:52,619 --> 00:14:54,089
actual checkbox style and then have a

371
00:14:54,089 --> 00:14:56,670
second label element that is the actual

372
00:14:56,670 --> 00:14:59,040
label the checkbox and in this case we

373
00:14:59,040 --> 00:15:00,869
wrote like this whole thing for our

374
00:15:00,869 --> 00:15:03,660
checkbox that falls off the page but for

375
00:15:03,660 --> 00:15:04,860
a radio button we were just able to

376
00:15:04,860 --> 00:15:08,220
inherit those three elements and it

377
00:15:08,220 --> 00:15:14,939
works well so we have bundled these and

378
00:15:14,939 --> 00:15:17,639
more into our own CSS preprocessor

379
00:15:17,639 --> 00:15:23,610
called KF CSS and these are the features

380
00:15:23,610 --> 00:15:26,399
available in KFC SS includes everything

381
00:15:26,399 --> 00:15:28,679
from rework inherit and rework namespace

382
00:15:28,679 --> 00:15:29,970
which you saw on the slides before two

383
00:15:29,970 --> 00:15:31,410
smaller helpers like

384
00:15:31,410 --> 00:15:33,360
rework move media which simply moves all

385
00:15:33,360 --> 00:15:35,759
your media queries to the end of the

386
00:15:35,759 --> 00:15:37,769
file and we work far as which gives us

387
00:15:37,769 --> 00:15:40,620
CSS level for compatible variables so

388
00:15:40,620 --> 00:15:42,029
something to our wages here right like

389
00:15:42,029 --> 00:15:44,759
no nesting there's no fancy math or any

390
00:15:44,759 --> 00:15:47,129
function stuff beyond the simple calc

391
00:15:47,129 --> 00:15:49,529
function that we're allowing them again

392
00:15:49,529 --> 00:15:51,180
in general we want to limit the scope of

393
00:15:51,180 --> 00:15:53,310
the features that CSS non-experts like

394
00:15:53,310 --> 00:15:56,370
myself can use and abuse and you know

395
00:15:56,370 --> 00:15:59,339
create all their terrible CSS with so

396
00:15:59,339 --> 00:16:01,170
you're probably thinking that this is

397
00:16:01,170 --> 00:16:02,730
getting pretty out of hand now right

398
00:16:02,730 --> 00:16:04,560
like all this accessibility stuff we've

399
00:16:04,560 --> 00:16:08,189
thrown in all these long class names and

400
00:16:08,189 --> 00:16:10,529
this is just for one big number right

401
00:16:10,529 --> 00:16:13,920
but in reality you're not really going

402
00:16:13,920 --> 00:16:15,360
to be writing that much markup you

403
00:16:15,360 --> 00:16:16,620
should only be writing our markup once

404
00:16:16,620 --> 00:16:19,680
and attracting it away with some

405
00:16:19,680 --> 00:16:21,269
template of some sort and in our case

406
00:16:21,269 --> 00:16:23,310
we're using handlebars but any templates

407
00:16:23,310 --> 00:16:25,079
would work it's not groundbreaking

408
00:16:25,079 --> 00:16:27,629
anyway but abstracting away components

409
00:16:27,629 --> 00:16:29,459
makes dealing with deleting code and

410
00:16:29,459 --> 00:16:33,389
upgrading your code much easier and the

411
00:16:33,389 --> 00:16:36,689
final issue is no tests truth is testing

412
00:16:36,689 --> 00:16:38,550
CSS is pretty hard one of the reasons

413
00:16:38,550 --> 00:16:40,410
we're able to test the SS now is because

414
00:16:40,410 --> 00:16:42,509
we're using CSS components if you've

415
00:16:42,509 --> 00:16:43,949
ever had to visually difficult page

416
00:16:43,949 --> 00:16:45,990
before you know that it's often not very

417
00:16:45,990 --> 00:16:47,730
effective right like things changed all

418
00:16:47,730 --> 00:16:48,959
the time and you don't want to always

419
00:16:48,959 --> 00:16:51,329
like play find the difference for every

420
00:16:51,329 --> 00:16:53,639
change the hardest part about testing

421
00:16:53,639 --> 00:16:55,980
CSS is actually all the different states

422
00:16:55,980 --> 00:16:57,959
that your elements can have in all the

423
00:16:57,959 --> 00:16:59,399
different ways that those elements can

424
00:16:59,399 --> 00:17:02,759
interact with each other so we have

425
00:17:02,759 --> 00:17:05,220
pulled in rework pseudo classes which

426
00:17:05,220 --> 00:17:06,659
gives us pseudo classes for each of

427
00:17:06,659 --> 00:17:08,220
these states and we are able to compose

428
00:17:08,220 --> 00:17:10,909
them in our tests to mock these states

429
00:17:10,909 --> 00:17:14,159
and we pulled in grunt huxley which then

430
00:17:14,159 --> 00:17:17,339
takes screenshots of our test cases and

431
00:17:17,339 --> 00:17:20,730
gifts them in this way we can also

432
00:17:20,730 --> 00:17:22,319
declaratively write tests right like you

433
00:17:22,319 --> 00:17:24,750
don't want to tell your you know phantom

434
00:17:24,750 --> 00:17:26,280
jay has to go click on this button and

435
00:17:26,280 --> 00:17:28,770
then check what the state is we're able

436
00:17:28,770 --> 00:17:30,330
to like explicitly say these are the

437
00:17:30,330 --> 00:17:32,100
states I would care about and we want to

438
00:17:32,100 --> 00:17:34,789
make sure that they stay the same so

439
00:17:34,789 --> 00:17:36,900
huxley is pretty cool this is an example

440
00:17:36,900 --> 00:17:39,780
of a diff that it found from a two pixel

441
00:17:39,780 --> 00:17:42,630
vertical line change another great thing

442
00:17:42,630 --> 00:17:44,610
about checking these these

443
00:17:44,610 --> 00:17:52,840
in woo i don't know why it has that

444
00:17:52,850 --> 00:17:54,630
other great thing about checking these

445
00:17:54,630 --> 00:17:58,320
files in is that we are able to use

446
00:17:58,320 --> 00:18:01,290
github stools to you know the onion skin

447
00:18:01,290 --> 00:18:03,059
to lure the swype tool to see the

448
00:18:03,059 --> 00:18:10,200
difference between images so why do we

449
00:18:10,200 --> 00:18:13,740
care about this so why would you build

450
00:18:13,740 --> 00:18:15,900
your own component library from scratch

451
00:18:15,900 --> 00:18:19,169
when you know there's bootstrap around

452
00:18:19,169 --> 00:18:22,440
and it's it's a lot of work right well

453
00:18:22,440 --> 00:18:30,180
hopefully

454
00:18:30,190 --> 00:18:33,309
sorry about that hopefully with your own

455
00:18:33,309 --> 00:18:35,320
component library you're then able to

456
00:18:35,320 --> 00:18:39,029
spend ninety percent of your time

457
00:18:39,029 --> 00:18:41,289
building up this component library and

458
00:18:41,289 --> 00:18:43,330
then every time you add new features to

459
00:18:43,330 --> 00:18:45,250
your app you will then just have to do

460
00:18:45,250 --> 00:18:47,350
the last ten percent of polishing and

461
00:18:47,350 --> 00:18:51,580
building and then hopefully a few years

462
00:18:51,580 --> 00:18:53,110
from now instead of trying to figure out

463
00:18:53,110 --> 00:18:55,000
what exactly this means when trying to

464
00:18:55,000 --> 00:18:57,580
sell an explanation in our settings you

465
00:18:57,580 --> 00:19:00,690
will know exactly what class is to add

466
00:19:00,690 --> 00:19:03,370
the hope is that if we think about CSS

467
00:19:03,370 --> 00:19:05,529
first then we will eventually be able to

