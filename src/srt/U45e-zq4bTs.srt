1
00:00:08,420 --> 00:00:19,470

Wow danke Schon gut morgen ich heisse a

2
00:00:19,470 --> 00:00:22,769
pizza egg warning London which means

3
00:00:22,769 --> 00:00:26,490
igloo click here's a sign ich kann ich

4
00:00:26,490 --> 00:00:28,170
sprechen Deutsch and that's it that's

5
00:00:28,170 --> 00:00:36,120
all I'm going to say my job is now my

6
00:00:36,120 --> 00:00:37,890
title is creative technologist but it's

7
00:00:37,890 --> 00:00:39,450
kind of mixed with creative technologist

8
00:00:39,450 --> 00:00:42,270
and front-end lead basically it means I

9
00:00:42,270 --> 00:00:45,210
get to evaluate cool new technologies

10
00:00:45,210 --> 00:00:47,219
web technologies and then tell our

11
00:00:47,219 --> 00:00:48,989
clients what we can and can't do we try

12
00:00:48,989 --> 00:00:51,570
and come up with creative ways for them

13
00:00:51,570 --> 00:00:57,239
to do new stuff and so I have to keep an

14
00:00:57,239 --> 00:00:59,219
eye on what's coming and what other

15
00:00:59,219 --> 00:01:00,989
things that's coming that most excites

16
00:01:00,989 --> 00:01:02,670
me is what I'm here to talk about today

17
00:01:02,670 --> 00:01:08,820
which is web components before I get

18
00:01:08,820 --> 00:01:10,080
into it properly just a couple little

19
00:01:10,080 --> 00:01:12,240
points point number one what you see

20
00:01:12,240 --> 00:01:14,159
here is subject to change but when I say

21
00:01:14,159 --> 00:01:16,530
that I mean just the property names and

22
00:01:16,530 --> 00:01:18,390
some of the values things like that

23
00:01:18,390 --> 00:01:20,460
they're subject to change the concept of

24
00:01:20,460 --> 00:01:22,619
web components is not going away this is

25
00:01:22,619 --> 00:01:25,170
not some floated mooted technology that

26
00:01:25,170 --> 00:01:27,240
may or may not happen this will happen

27
00:01:27,240 --> 00:01:29,970
but possibly not exactly in the format

28
00:01:29,970 --> 00:01:33,210
i'm going to show you the second point

29
00:01:33,210 --> 00:01:35,280
is there will be code there will be lots

30
00:01:35,280 --> 00:01:36,420
of code i've tried to keep it to a

31
00:01:36,420 --> 00:01:38,310
minimum but i can't kind of avoid

32
00:01:38,310 --> 00:01:40,110
telling you about new code stuff without

33
00:01:40,110 --> 00:01:43,320
showing you too much code and it's

34
00:01:43,320 --> 00:01:44,490
ironic that i've been asked to speak

35
00:01:44,490 --> 00:01:47,250
here at CSS comp because CSS is going to

36
00:01:47,250 --> 00:01:48,840
make up about twenty-five percent of

37
00:01:48,840 --> 00:01:51,119
what i'm going to talk about i have to

38
00:01:51,119 --> 00:01:52,979
get through the HTML and javascript

39
00:01:52,979 --> 00:01:55,380
stuff to get to the good CSS stuff at

40
00:01:55,380 --> 00:01:57,299
the end so all the explanation of web

41
00:01:57,299 --> 00:01:58,979
components is just to get me to where I

42
00:01:58,979 --> 00:02:05,100
want to be to talk about CSS so I've

43
00:02:05,100 --> 00:02:07,020
said I'm here to talk about web

44
00:02:07,020 --> 00:02:10,170
components but that's not exactly the

45
00:02:10,170 --> 00:02:11,700
truth what I'm actually here to talk to

46
00:02:11,700 --> 00:02:12,690
you about

47
00:02:12,690 --> 00:02:17,880
is the secret of ultimate power they

48
00:02:17,880 --> 00:02:18,840
didn't know that when you bought your

49
00:02:18,840 --> 00:02:22,200
tickets I want to give you a very quick

50
00:02:22,200 --> 00:02:24,360
demo this is the only time I'm going to

51
00:02:24,360 --> 00:02:26,490
break out the browser window so if you

52
00:02:26,490 --> 00:02:27,930
excuse me for this so what we've got

53
00:02:27,930 --> 00:02:32,040
here is a video element and a video

54
00:02:32,040 --> 00:02:33,840
element you can see the mark up for it

55
00:02:33,840 --> 00:02:34,770
hope that's large enough for everybody

56
00:02:34,770 --> 00:02:36,450
to see it's just a video element with

57
00:02:36,450 --> 00:02:39,030
nothing inside it completely empty but

58
00:02:39,030 --> 00:02:40,920
that video element has a play button and

59
00:02:40,920 --> 00:02:43,440
it has a Sikh bar it has a timer and it

60
00:02:43,440 --> 00:02:45,480
has a volume control it has so where is

61
00:02:45,480 --> 00:02:47,190
all that stuff it's not here in the

62
00:02:47,190 --> 00:02:50,580
markup so we have to rely on the browser

63
00:02:50,580 --> 00:02:52,440
to render that stuff for us but why

64
00:02:52,440 --> 00:02:54,120
should that be the case why can't we

65
00:02:54,120 --> 00:02:55,530
make our where we can make our own with

66
00:02:55,530 --> 00:02:57,630
JavaScript but why can't we why do we

67
00:02:57,630 --> 00:03:00,000
have to use JavaScript to to build this

68
00:03:00,000 --> 00:03:01,710
stuff from scratch why can't we make our

69
00:03:01,710 --> 00:03:04,470
own stuff and there's actually a little

70
00:03:04,470 --> 00:03:06,780
bit of a secret in here I've said it's

71
00:03:06,780 --> 00:03:18,720
empty but if i can find my cursor and i

72
00:03:18,720 --> 00:03:26,400
can enable this option here and now go

73
00:03:26,400 --> 00:03:28,890
back into my markup as you really are

74
00:03:28,890 --> 00:03:33,660
doing this over my shoulder what's this

75
00:03:33,660 --> 00:03:36,000
inside there's a document fragment way

76
00:03:36,000 --> 00:03:38,459
that there's a div and there's lots more

77
00:03:38,459 --> 00:03:41,370
deals and there's tons of divs and

78
00:03:41,370 --> 00:03:43,739
there's input types this video element

79
00:03:43,739 --> 00:03:47,280
is full of markup but none of it's

80
00:03:47,280 --> 00:03:50,250
exposed to you the browser makers of the

81
00:03:50,250 --> 00:03:51,720
browser vendors are holding back this

82
00:03:51,720 --> 00:03:57,540
stuff from you

83
00:03:57,550 --> 00:04:07,380
back to my slides if I can

84
00:04:07,390 --> 00:04:10,610
it's gone back to the ranch late okay so

85
00:04:10,610 --> 00:04:12,470
this thing is actually full of markup

86
00:04:12,470 --> 00:04:16,519
which makes me think what the frig is

87
00:04:16,519 --> 00:04:24,830
going on incorrect slide all of this

88
00:04:24,830 --> 00:04:30,460
stuff the video element the date picker

89
00:04:30,460 --> 00:04:33,110
the progress bar all of this stuff

90
00:04:33,110 --> 00:04:34,940
contains this markup which is not

91
00:04:34,940 --> 00:04:36,620
available to you as developers the

92
00:04:36,620 --> 00:04:38,840
browser makers have created it with HTML

93
00:04:38,840 --> 00:04:40,970
CSS and JavaScript and just not exposed

94
00:04:40,970 --> 00:04:43,610
it to you this is the core of the

95
00:04:43,610 --> 00:04:45,250
concept that's known as the shadow Dom

96
00:04:45,250 --> 00:04:47,330
you've probably heard of the shadow Dom

97
00:04:47,330 --> 00:04:49,820
that's essentially what it is its secret

98
00:04:49,820 --> 00:04:53,480
mark up inside elements it's rendered

99
00:04:53,480 --> 00:04:57,500
but it's invisible in the Dom it's kind

100
00:04:57,500 --> 00:05:00,110
of like when you're on the when you're

101
00:05:00,110 --> 00:05:01,370
on the metro and you're reading a copy

102
00:05:01,370 --> 00:05:03,260
of Faust by Goethe but inside you've

103
00:05:03,260 --> 00:05:06,220
actually got a copy of shades of grey

104
00:05:06,220 --> 00:05:08,870
get high must belong and I don't even

105
00:05:08,870 --> 00:05:13,669
want to know what that means so the

106
00:05:13,669 --> 00:05:17,000
shadow DOM is shades of grey there's

107
00:05:17,000 --> 00:05:19,960
your little tweetable thing for today i

108
00:05:19,960 --> 00:05:21,830
want to show you quickly how you can

109
00:05:21,830 --> 00:05:24,200
make your own shadow Dom the first step

110
00:05:24,200 --> 00:05:26,330
is to create a shadow root and one thing

111
00:05:26,330 --> 00:05:27,530
if you will just want to bluff your way

112
00:05:27,530 --> 00:05:28,910
through talking about the shadow Dom

113
00:05:28,910 --> 00:05:30,950
just put the word shadow and put in

114
00:05:30,950 --> 00:05:33,380
front of a bunch of stuff you can talk

115
00:05:33,380 --> 00:05:38,380
about shadow root shadow Dom shadow host

116
00:05:38,380 --> 00:05:41,390
Shadowcat shadow wars shadow anything

117
00:05:41,390 --> 00:05:43,160
just start talking about shadow stuff

118
00:05:43,160 --> 00:05:48,740
and people go he no shadow Dom the

119
00:05:48,740 --> 00:05:50,960
shadow root is the new route inside the

120
00:05:50,960 --> 00:05:52,729
element and it's very very easy to

121
00:05:52,729 --> 00:05:54,950
create you select an element and you say

122
00:05:54,950 --> 00:05:58,160
create a shadow root that's it what

123
00:05:58,160 --> 00:05:59,510
that's done is that's created that new

124
00:05:59,510 --> 00:06:02,539
roots inside the element and then you

125
00:06:02,539 --> 00:06:05,950
can put some content inside there and

126
00:06:05,950 --> 00:06:08,900
append it to your target element you've

127
00:06:08,900 --> 00:06:11,300
created a shadow Dom inside that element

128
00:06:11,300 --> 00:06:14,419
that's how simple it is the mark-up say

129
00:06:14,419 --> 00:06:17,750
you have this markup so you've got a

130
00:06:17,750 --> 00:06:19,400
deal with an idea foo and inside that is

131
00:06:19,400 --> 00:06:20,340
an h1

132
00:06:20,340 --> 00:06:21,990
and then you apply the rule I've just

133
00:06:21,990 --> 00:06:23,550
done which has created a new shadow root

134
00:06:23,550 --> 00:06:25,860
with an h2 inside it the end result kind

135
00:06:25,860 --> 00:06:27,660
of looks like this the h1 is no longer

136
00:06:27,660 --> 00:06:30,120
visible it's been made invisible and the

137
00:06:30,120 --> 00:06:32,100
shadow route takes preference the shadow

138
00:06:32,100 --> 00:06:34,889
DOM is what shows up just to break that

139
00:06:34,889 --> 00:06:38,430
out a little bit that's the shadow host

140
00:06:38,430 --> 00:06:39,960
which I mentioned before which is the

141
00:06:39,960 --> 00:06:42,090
element we've selected and then the old

142
00:06:42,090 --> 00:06:45,419
original dumb markup was the h1 that's

143
00:06:45,419 --> 00:06:48,300
the real Dom as i call it and then we

144
00:06:48,300 --> 00:06:50,280
created a new element inside that with

145
00:06:50,280 --> 00:06:55,470
H&H to which is the shadow Dom ultimate

146
00:06:55,470 --> 00:06:58,740
power creating elements inside elements

147
00:06:58,740 --> 00:07:00,180
which aren't available to anybody else

148
00:07:00,180 --> 00:07:02,400
you control how the page displays

149
00:07:02,400 --> 00:07:04,229
ultimate power you've taken over the

150
00:07:04,229 --> 00:07:10,950
browser vendors role shadow DOM is one

151
00:07:10,950 --> 00:07:14,940
attempt at solving a problem and there

152
00:07:14,940 --> 00:07:18,030
are other complementary technologies

153
00:07:18,030 --> 00:07:19,800
that sends it so in the main problem

154
00:07:19,800 --> 00:07:24,510
which use HTML and CSS as well and the

155
00:07:24,510 --> 00:07:27,780
problem is this see we've created a nice

156
00:07:27,780 --> 00:07:30,630
widget on our website which does I don't

157
00:07:30,630 --> 00:07:32,610
know something whatever it does doesn't

158
00:07:32,610 --> 00:07:33,870
matter but we've created this widget

159
00:07:33,870 --> 00:07:35,580
we're going to use it extensively across

160
00:07:35,580 --> 00:07:39,000
our whole site and we've created some

161
00:07:39,000 --> 00:07:42,260
CSS which is going to style it blue and

162
00:07:42,260 --> 00:07:44,430
then we go with this widget works so

163
00:07:44,430 --> 00:07:45,750
well on this side I'm going to move it

164
00:07:45,750 --> 00:07:49,680
over to one of my other sites special

165
00:07:49,680 --> 00:07:52,820
effects the problem is on our other site

166
00:07:52,820 --> 00:07:56,250
we have an existing selector with higher

167
00:07:56,250 --> 00:07:58,580
specificity which uses another color

168
00:07:58,580 --> 00:08:02,070
it's overwritten this thing and this is

169
00:08:02,070 --> 00:08:03,270
what prevents us from having like

170
00:08:03,270 --> 00:08:06,090
genuine code reusability today there are

171
00:08:06,090 --> 00:08:07,680
lots of ways we tried to stop this we've

172
00:08:07,680 --> 00:08:11,400
come up with object-oriented CSS be emu

173
00:08:11,400 --> 00:08:14,070
no dr why all this stuff which try to

174
00:08:14,070 --> 00:08:15,810
work around this problem but the problem

175
00:08:15,810 --> 00:08:17,580
is still there this is still a risk of

176
00:08:17,580 --> 00:08:22,760
code reusability the solution lies in

177
00:08:22,760 --> 00:08:26,520
what's called encapsulation and if you

178
00:08:26,520 --> 00:08:28,560
used lots of other object oriented

179
00:08:28,560 --> 00:08:30,200
languages you'll understand

180
00:08:30,200 --> 00:08:34,240
encapsulation already encapsulation

181
00:08:34,240 --> 00:08:38,140
basically means the thing has all it

182
00:08:38,140 --> 00:08:40,510
needs everything it needs is contained

183
00:08:40,510 --> 00:08:45,070
within itself but it also means nothing

184
00:08:45,070 --> 00:08:48,670
gets in and nothing gets out so this

185
00:08:48,670 --> 00:08:50,440
encapsulation would allow us to pick up

186
00:08:50,440 --> 00:08:52,300
a bunch of code and put it on another

187
00:08:52,300 --> 00:08:54,100
website and not have to worry about

188
00:08:54,100 --> 00:08:56,860
inheritance or conflicts anything like

189
00:08:56,860 --> 00:09:00,010
that this is the problem that web

190
00:09:00,010 --> 00:09:03,850
components are solving we actually do

191
00:09:03,850 --> 00:09:08,260
have encapsulation in HTML already it

192
00:09:08,260 --> 00:09:12,310
looks like that you could if you wanted

193
00:09:12,310 --> 00:09:14,529
to put all your stuff inside a separate

194
00:09:14,529 --> 00:09:16,060
document and include it over I frames

195
00:09:16,060 --> 00:09:20,320
and you have some encapsulation the

196
00:09:20,320 --> 00:09:21,970
problems with iframe well they're too

197
00:09:21,970 --> 00:09:23,800
many to list but I'll try a few extra

198
00:09:23,800 --> 00:09:27,070
network requests multiple rendering

199
00:09:27,070 --> 00:09:30,580
contexts and possible cross-origin

200
00:09:30,580 --> 00:09:34,510
resource sharing conflicts which make

201
00:09:34,510 --> 00:09:36,370
basically iframes just not a great

202
00:09:36,370 --> 00:09:40,920
solution so the better encapsulation is

203
00:09:40,920 --> 00:09:45,670
web components shadow DOM is part of web

204
00:09:45,670 --> 00:09:47,820
components but what are the whole thing

205
00:09:47,820 --> 00:09:50,770
one definition would probably be there a

206
00:09:50,770 --> 00:09:53,740
set or a suite of emerging complimentary

207
00:09:53,740 --> 00:09:55,930
standards aimed at making reusable

208
00:09:55,930 --> 00:10:00,160
widgets I would probably best define

209
00:10:00,160 --> 00:10:02,560
them as the biggest change to web

210
00:10:02,560 --> 00:10:06,130
development since xmlhttprequest they're

211
00:10:06,130 --> 00:10:07,180
genuinely going to be that

212
00:10:07,180 --> 00:10:11,410
transformative so the three core

213
00:10:11,410 --> 00:10:13,180
components of the web components

214
00:10:13,180 --> 00:10:16,329
components of web components parts alone

215
00:10:16,329 --> 00:10:18,459
the three bits a web components are

216
00:10:18,459 --> 00:10:23,579
shadow Dom templates and custom elements

217
00:10:23,579 --> 00:10:27,700
shadow Dom we've already covered so I

218
00:10:27,700 --> 00:10:32,690
will move on to talk about templates

219
00:10:32,700 --> 00:10:35,670
hands up if you've used mustache

220
00:10:35,670 --> 00:10:39,100
handlebars some kind of right most of

221
00:10:39,100 --> 00:10:40,630
you see you're aware with how we do

222
00:10:40,630 --> 00:10:42,520
templating at the moment is probably

223
00:10:42,520 --> 00:10:44,650
done something like this we include a

224
00:10:44,650 --> 00:10:46,029
script and you put stuff in it and you

225
00:10:46,029 --> 00:10:48,070
can you can include variables and hold

226
00:10:48,070 --> 00:10:49,240
and all that kind of stuff that's a very

227
00:10:49,240 --> 00:10:53,410
very simple way of doing it so this is a

228
00:10:53,410 --> 00:10:54,970
really common pattern to do this now

229
00:10:54,970 --> 00:10:56,470
which is why we have these JavaScript

230
00:10:56,470 --> 00:10:59,290
libraries but what web standards bodies

231
00:10:59,290 --> 00:11:01,390
are doing now is trying not to create

232
00:11:01,390 --> 00:11:02,980
brand-new stuff and give it to you

233
00:11:02,980 --> 00:11:04,450
they're trying to look at the stuff you

234
00:11:04,450 --> 00:11:07,300
do and make that native so this is one

235
00:11:07,300 --> 00:11:08,680
of the first patterns that is going to

236
00:11:08,680 --> 00:11:13,030
go native so we've got this new template

237
00:11:13,030 --> 00:11:15,700
element and the template element just

238
00:11:15,700 --> 00:11:18,520
does this you define it and then it has

239
00:11:18,520 --> 00:11:21,310
markup inside it so what's the advantage

240
00:11:21,310 --> 00:11:24,970
of doing that instead of using

241
00:11:24,970 --> 00:11:29,230
javascript the mark-up inside this is

242
00:11:29,230 --> 00:11:33,130
inert when the browser loads over the

243
00:11:33,130 --> 00:11:34,720
page with the template element inside it

244
00:11:34,720 --> 00:11:37,060
it does nothing with the dark up that's

245
00:11:37,060 --> 00:11:39,010
inside the template tag the template

246
00:11:39,010 --> 00:11:42,400
element so if I had this I had an

247
00:11:42,400 --> 00:11:44,500
external script being called and an

248
00:11:44,500 --> 00:11:46,930
image being called when I use the

249
00:11:46,930 --> 00:11:49,150
template element none of that stuff gets

250
00:11:49,150 --> 00:11:51,730
loaded the mark-up is completely inert

251
00:11:51,730 --> 00:11:54,700
it does nothing all it's there for is

252
00:11:54,700 --> 00:11:59,620
for you to pick up and use elsewhere if

253
00:11:59,620 --> 00:12:01,270
I go back to my original example I

254
00:12:01,270 --> 00:12:03,520
showed a second ago I've got just an h2

255
00:12:03,520 --> 00:12:05,050
elements of super simple barely worth

256
00:12:05,050 --> 00:12:11,800
making a template for a little bit this

257
00:12:11,800 --> 00:12:13,120
isn't this might be a little bit complex

258
00:12:13,120 --> 00:12:15,220
for you but try to try and stay with me

259
00:12:15,220 --> 00:12:17,740
so what's inside this what's inside the

260
00:12:17,740 --> 00:12:21,870
template element is known as content

261
00:12:21,870 --> 00:12:25,930
everyone's there with me on that ok so

262
00:12:25,930 --> 00:12:27,310
what's in here is known as the content

263
00:12:27,310 --> 00:12:31,660
and we can get this content using the

264
00:12:31,660 --> 00:12:34,600
new content object API so we're going to

265
00:12:34,600 --> 00:12:37,570
clone that element in there we're going

266
00:12:37,570 --> 00:12:39,970
to get the content and make a copy of it

267
00:12:39,970 --> 00:12:44,740
and then we can say choose another

268
00:12:44,740 --> 00:12:46,210
element that's on the page and just

269
00:12:46,210 --> 00:12:49,540
append up our content inside it so given

270
00:12:49,540 --> 00:12:51,820
markup like this we could then clone

271
00:12:51,820 --> 00:12:54,010
what was in our template just append it

272
00:12:54,010 --> 00:12:57,730
inside like that really simple that's

273
00:12:57,730 --> 00:12:59,050
what template it does you're all used to

274
00:12:59,050 --> 00:13:00,600
it everybody knows it

275
00:13:00,600 --> 00:13:02,850
the advantage is at this point the

276
00:13:02,850 --> 00:13:04,980
markup becomes active so if you had

277
00:13:04,980 --> 00:13:07,769
image get images if you had external

278
00:13:07,769 --> 00:13:09,810
resources scripts and everything when

279
00:13:09,810 --> 00:13:11,699
they get inserted into the Dom then they

280
00:13:11,699 --> 00:13:14,579
load then they become active then you

281
00:13:14,579 --> 00:13:18,360
can select them so templates his desk

282
00:13:18,360 --> 00:13:19,649
doing exactly what we've already done

283
00:13:19,649 --> 00:13:20,970
they've just standardized it and use the

284
00:13:20,970 --> 00:13:22,560
power of the browser to make it a little

285
00:13:22,560 --> 00:13:24,959
better this is what browsers do best is

286
00:13:24,959 --> 00:13:26,490
being able to standardize the stuff that

287
00:13:26,490 --> 00:13:28,079
you built on top of them and make them

288
00:13:28,079 --> 00:13:29,310
kind of native give them call

289
00:13:29,310 --> 00:13:30,690
functionality that they couldn't do

290
00:13:30,690 --> 00:13:34,199
otherwise but if you've got templates in

291
00:13:34,199 --> 00:13:36,300
your page as I showed there if they're

292
00:13:36,300 --> 00:13:37,829
in your marker obviously they can only

293
00:13:37,829 --> 00:13:39,839
apply to the same page there's got a

294
00:13:39,839 --> 00:13:41,790
kind of a one-to-one relationship unless

295
00:13:41,790 --> 00:13:44,279
you're using Ajax X so much

296
00:13:44,279 --> 00:13:47,220
xmlhttprequest whatever but by generally

297
00:13:47,220 --> 00:13:48,959
just like that they can only be applied

298
00:13:48,959 --> 00:13:50,310
to the same page so what we want to be

299
00:13:50,310 --> 00:13:54,180
able to do is make those templates more

300
00:13:54,180 --> 00:13:55,649
useful we want to be able to share them

301
00:13:55,649 --> 00:14:00,630
across multiple documents which is where

302
00:14:00,630 --> 00:14:04,319
the import relation type comes in so

303
00:14:04,319 --> 00:14:05,819
just by doing this you can love the link

304
00:14:05,819 --> 00:14:08,130
in your head you can say it's an import

305
00:14:08,130 --> 00:14:11,120
and you just include an HTML fragment

306
00:14:11,120 --> 00:14:13,110
this will be done natively in the

307
00:14:13,110 --> 00:14:14,730
browser so you'll be able to take all

308
00:14:14,730 --> 00:14:16,639
those templates you've already made and

309
00:14:16,639 --> 00:14:18,389
you'll be able to share them across

310
00:14:18,389 --> 00:14:23,040
multiple files from a one-to-one

311
00:14:23,040 --> 00:14:25,259
relationship you suddenly go like that

312
00:14:25,259 --> 00:14:28,170
this is the reusability that we've been

313
00:14:28,170 --> 00:14:30,959
talking about this provides that

314
00:14:30,959 --> 00:14:32,990
reusability or makes it much much easier

315
00:14:32,990 --> 00:14:35,130
that's what this stuff's intended to do

316
00:14:35,130 --> 00:14:36,509
it's not intend to do something brand

317
00:14:36,509 --> 00:14:39,389
new intended to make stuff easier for

318
00:14:39,389 --> 00:14:45,480
you and native so we've talked about

319
00:14:45,480 --> 00:14:46,829
shadow Dom we talked about templates

320
00:14:46,829 --> 00:14:50,180
it's time to come on to custom elements

321
00:14:50,180 --> 00:14:53,399
so you've created stuff with a template

322
00:14:53,399 --> 00:14:54,899
you might have appended a shadow Dom

323
00:14:54,899 --> 00:14:56,910
into it you've made code that's

324
00:14:56,910 --> 00:15:00,089
encapsulated and reusable but it still

325
00:15:00,089 --> 00:15:03,420
relies on you kind of marking up your

326
00:15:03,420 --> 00:15:04,980
content with class names or something

327
00:15:04,980 --> 00:15:06,660
like that which just seems a bit of a

328
00:15:06,660 --> 00:15:10,740
legacy kind of pattern say we created a

329
00:15:10,740 --> 00:15:12,839
special kind of new bar called of wonder

330
00:15:12,839 --> 00:15:13,810
bar

331
00:15:13,810 --> 00:15:16,360
we would still have to use our class

332
00:15:16,360 --> 00:15:17,560
names and everything to apply those

333
00:15:17,560 --> 00:15:19,750
styles but wouldn't it be better again

334
00:15:19,750 --> 00:15:22,420
if we could do that natively if we could

335
00:15:22,420 --> 00:15:23,800
go for real a hundred percent

336
00:15:23,800 --> 00:15:25,900
reusability just like we've seen shadow

337
00:15:25,900 --> 00:15:27,790
Dom gives us access to the elements

338
00:15:27,790 --> 00:15:30,820
inside other elements why can't we have

339
00:15:30,820 --> 00:15:32,650
access to the elements themselves if

340
00:15:32,650 --> 00:15:35,980
we're doing a constant repetitive markup

341
00:15:35,980 --> 00:15:39,400
pattern why shouldn't we be able to make

342
00:15:39,400 --> 00:15:45,010
an element that does that for us and now

343
00:15:45,010 --> 00:15:48,850
we can you just register the element in

344
00:15:48,850 --> 00:15:51,670
the Dom just say okay we register this

345
00:15:51,670 --> 00:15:53,050
element and we going to call it wonder

346
00:15:53,050 --> 00:15:56,260
hyphen bar it has to be something hyphen

347
00:15:56,260 --> 00:15:59,410
something because all HTML elements are

348
00:15:59,410 --> 00:16:01,390
a single word so this by using by

349
00:16:01,390 --> 00:16:03,970
hyphenating it just prevents conflicts

350
00:16:03,970 --> 00:16:07,620
with existing and future HTML elements

351
00:16:07,620 --> 00:16:11,470
so we register that and now we have an

352
00:16:11,470 --> 00:16:13,390
element called the underbar which we can

353
00:16:13,390 --> 00:16:14,950
just place into our document gets

354
00:16:14,950 --> 00:16:17,620
rendered at Dom time when when the DOM

355
00:16:17,620 --> 00:16:19,480
is rendered it behaves just like every

356
00:16:19,480 --> 00:16:24,490
other element on the page and inside

357
00:16:24,490 --> 00:16:27,160
that wunderbar we have our shadow Dom we

358
00:16:27,160 --> 00:16:30,970
have our templates so what we've got

359
00:16:30,970 --> 00:16:37,380
here is fully encapsulated and reusable

360
00:16:37,380 --> 00:16:42,060
elements with shadow Dom with templates

361
00:16:42,060 --> 00:16:45,339
with custom elements we can put stuff

362
00:16:45,339 --> 00:16:47,200
inside our elements and we can just take

363
00:16:47,200 --> 00:16:48,490
that element put it anywhere in our

364
00:16:48,490 --> 00:16:50,200
documents and it work and behave the

365
00:16:50,200 --> 00:16:52,690
same every single place basically what

366
00:16:52,690 --> 00:16:54,880
this does as I've waited before is it

367
00:16:54,880 --> 00:16:57,670
kind of brings semantics back to mark up

368
00:16:57,670 --> 00:16:59,680
rather than your page being covered in

369
00:16:59,680 --> 00:17:03,400
dibs or whatever or extended buttons you

370
00:17:03,400 --> 00:17:05,350
can create your own elements register

371
00:17:05,350 --> 00:17:06,579
them and they will work and they will

372
00:17:06,579 --> 00:17:08,050
provide the exact same functionality

373
00:17:08,050 --> 00:17:09,850
everywhere these oh this is what web

374
00:17:09,850 --> 00:17:12,640
components does encapsulation

375
00:17:12,640 --> 00:17:16,209
reusability dead dead simple what I've

376
00:17:16,209 --> 00:17:18,040
shown you is like the tip of the iceberg

377
00:17:18,040 --> 00:17:19,990
they do loads more you can have per

378
00:17:19,990 --> 00:17:23,040
element api's you can define your own is

379
00:17:23,040 --> 00:17:25,689
exceptionally powerful but the basic set

380
00:17:25,689 --> 00:17:27,430
up to get it up and running the cork

381
00:17:27,430 --> 00:17:31,000
concepts are simple and I think at the

382
00:17:31,000 --> 00:17:32,050
moment the big problem with web

383
00:17:32,050 --> 00:17:34,600
components is just it's probably just

384
00:17:34,600 --> 00:17:36,340
lacking a bit of documentation is

385
00:17:36,340 --> 00:17:38,200
probably lacking a bit of detail it's

386
00:17:38,200 --> 00:17:39,940
hard to get your head around at first

387
00:17:39,940 --> 00:17:44,890
but it's really really super simple so

388
00:17:44,890 --> 00:17:47,050
now that I've talked about what web

389
00:17:47,050 --> 00:17:49,210
components are using HTML and JavaScript

390
00:17:49,210 --> 00:17:54,610
I can get to the CSS at last it is CSS

391
00:17:54,610 --> 00:18:01,300
calf to rule one brand new concept that

392
00:18:01,300 --> 00:18:03,730
web components bring and I say brand-new

393
00:18:03,730 --> 00:18:06,010
is brand-new to CSS it's not brand new

394
00:18:06,010 --> 00:18:07,810
to wearable computing languages it's

395
00:18:07,810 --> 00:18:11,670
brand new to CSS is the concept of scope

396
00:18:11,670 --> 00:18:13,420
now we're going to have to start

397
00:18:13,420 --> 00:18:15,250
thinking about scope in our documents

398
00:18:15,250 --> 00:18:17,170
which if you use JavaScript really

399
00:18:17,170 --> 00:18:19,600
perfectly aware of but just to give you

400
00:18:19,600 --> 00:18:22,360
a quick example if I were to use an

401
00:18:22,360 --> 00:18:25,360
inline style element like this they save

402
00:18:25,360 --> 00:18:26,890
the booing and hissing until afterwards

403
00:18:26,890 --> 00:18:28,750
if I were to use an inline style element

404
00:18:28,750 --> 00:18:33,100
like this CSS is all has the same scope

405
00:18:33,100 --> 00:18:35,620
currently some no matter where I place

406
00:18:35,620 --> 00:18:38,680
that style in my document it's going to

407
00:18:38,680 --> 00:18:41,290
render every single p across my whole

408
00:18:41,290 --> 00:18:44,500
document there's no scope it doesn't get

409
00:18:44,500 --> 00:18:46,240
contained just to where I put it in the

410
00:18:46,240 --> 00:18:50,800
document the scope is totally global but

411
00:18:50,800 --> 00:18:52,750
we want to be able to pick up elements

412
00:18:52,750 --> 00:18:54,190
and drop them in other places and we

413
00:18:54,190 --> 00:18:55,990
want to have that encapsulation we want

414
00:18:55,990 --> 00:18:58,390
them to be contained we want them to be

415
00:18:58,390 --> 00:19:02,170
encapsulated if we're putting CSS inside

416
00:19:02,170 --> 00:19:04,630
our documents inside our widgets and

417
00:19:04,630 --> 00:19:06,370
dropping them into websites that global

418
00:19:06,370 --> 00:19:08,560
scope is going to leak Styles back out

419
00:19:08,560 --> 00:19:09,850
into the document it's going to have the

420
00:19:09,850 --> 00:19:12,280
opposite problem of what we want so the

421
00:19:12,280 --> 00:19:15,730
first attempt at working around this is

422
00:19:15,730 --> 00:19:19,270
very very simple you just add the scoped

423
00:19:19,270 --> 00:19:21,520
attribute to your style when that's

424
00:19:21,520 --> 00:19:25,600
their CSS has scope it scoped to the

425
00:19:25,600 --> 00:19:27,940
parent of wherever you've placed that

426
00:19:27,940 --> 00:19:34,990
style now that p will only apply here

427
00:19:35,000 --> 00:19:38,250
you don't actually need to do this if

428
00:19:38,250 --> 00:19:43,590
you're using shadow Dom if I do this if

429
00:19:43,590 --> 00:19:45,150
I'm setting up a new shadow root and I

430
00:19:45,150 --> 00:19:47,550
apply some CSS in there I don't need to

431
00:19:47,550 --> 00:19:50,850
scope that because shadow Dom has its

432
00:19:50,850 --> 00:19:53,280
own scope the shadow scope I told you

433
00:19:53,280 --> 00:19:55,080
about the shadow X pattern right

434
00:19:55,080 --> 00:19:57,800
everything shadow something shadow scope

435
00:19:57,800 --> 00:20:01,010
and that's provided by something called

436
00:20:01,010 --> 00:20:05,040
the shadow boundary the shadow boundary

437
00:20:05,040 --> 00:20:07,679
is not as I first suspected the name of

438
00:20:07,679 --> 00:20:11,760
the evil empire in Babylon 5 big love

439
00:20:11,760 --> 00:20:13,350
for Babylon 5 that was good at was big

440
00:20:13,350 --> 00:20:17,100
here in Germany right shadow boundary

441
00:20:17,100 --> 00:20:18,660
basically works like this say we have a

442
00:20:18,660 --> 00:20:23,790
little reusable widget and we applies in

443
00:20:23,790 --> 00:20:25,740
CSS and CSS is just applied directly to

444
00:20:25,740 --> 00:20:26,610
the widget right that's

445
00:20:26,610 --> 00:20:28,820
non-controversial everybody knows that

446
00:20:28,820 --> 00:20:31,950
when we create a shadow Dom it puts a

447
00:20:31,950 --> 00:20:34,860
shadow boundary around that Dom content

448
00:20:34,860 --> 00:20:41,670
and the CSS is turned away the way we

449
00:20:41,670 --> 00:20:43,140
can change that we can either say

450
00:20:43,140 --> 00:20:46,440
actually I want this widget to inherit

451
00:20:46,440 --> 00:20:47,850
all of the styles from my page that's

452
00:20:47,850 --> 00:20:50,880
intentional so we can just when we set

453
00:20:50,880 --> 00:20:52,380
it up we can just say apply author

454
00:20:52,380 --> 00:20:57,630
Styles is true and that will just let

455
00:20:57,630 --> 00:20:59,730
the CSS pass through the shadow boundary

456
00:20:59,730 --> 00:21:04,770
by explicit permission but there are

457
00:21:04,770 --> 00:21:06,900
times when we don't want the whole of

458
00:21:06,900 --> 00:21:09,510
the CSS the stylesheet to be applied to

459
00:21:09,510 --> 00:21:11,940
our widget we just maybe want some bits

460
00:21:11,940 --> 00:21:14,300
of it we want to expose the widget to

461
00:21:14,300 --> 00:21:17,460
the CSS we have to create kind of an API

462
00:21:17,460 --> 00:21:20,100
for it a lot very low-level API kind of

463
00:21:20,100 --> 00:21:21,630
thing so we can just allow little bits

464
00:21:21,630 --> 00:21:27,040
of CSF to apply to where we want them

465
00:21:27,050 --> 00:21:30,510
this is done through pseudo elements now

466
00:21:30,510 --> 00:21:31,800
you probably use cedar elements before

467
00:21:31,800 --> 00:21:33,480
it very very likely you have it before

468
00:21:33,480 --> 00:21:37,950
after or you can get even more complex

469
00:21:37,950 --> 00:21:39,690
ones like I showed very briefly earlier

470
00:21:39,690 --> 00:21:43,230
an example of a progress bar or CSS / an

471
00:21:43,230 --> 00:21:45,960
html5 progress bar and if you view the

472
00:21:45,960 --> 00:21:48,029
shadow Dom for progress bar

473
00:21:48,029 --> 00:21:49,950
that's the main element and then inside

474
00:21:49,950 --> 00:21:52,349
that you get a div which is has this

475
00:21:52,349 --> 00:21:55,619
pseudo element WebKit progress bar and

476
00:21:55,619 --> 00:21:58,109
then inside that as a WebKit progress

477
00:21:58,109 --> 00:22:00,389
about you so if i want to restyle the

478
00:22:00,389 --> 00:22:04,469
progress bar WebKit has exposed certain

479
00:22:04,469 --> 00:22:07,109
parts of it to me so i could change the

480
00:22:07,109 --> 00:22:08,789
color of that progress bar from green to

481
00:22:08,789 --> 00:22:10,649
blue I can do whatever I want with it

482
00:22:10,649 --> 00:22:12,450
because they've actually exposed that to

483
00:22:12,450 --> 00:22:15,299
me and there's a lot of these if you if

484
00:22:15,299 --> 00:22:16,559
you search online you'll find a whole

485
00:22:16,559 --> 00:22:18,960
list of these WebKit only pseudo

486
00:22:18,960 --> 00:22:21,149
elements and Firefox only pseudo

487
00:22:21,149 --> 00:22:26,009
elements and with the shadow Dom with us

488
00:22:26,009 --> 00:22:27,690
being able to create our own reusable

489
00:22:27,690 --> 00:22:29,219
widgets we want to be able to do the

490
00:22:29,219 --> 00:22:32,369
same as well these are being called

491
00:22:32,369 --> 00:22:36,299
parts or the part attribute and so when

492
00:22:36,299 --> 00:22:37,979
you set up your shadow Dom you've

493
00:22:37,979 --> 00:22:39,779
created a shadow root and then you just

494
00:22:39,779 --> 00:22:42,690
add an attribute to whatever content you

495
00:22:42,690 --> 00:22:44,969
put inside you just say the part is and

496
00:22:44,969 --> 00:22:52,229
you give it a name ache in my case and

497
00:22:52,229 --> 00:22:53,789
then you put that content inside your

498
00:22:53,789 --> 00:22:56,309
target so when it's rendered you'll get

499
00:22:56,309 --> 00:22:57,629
this you get your div and then you get

500
00:22:57,629 --> 00:22:58,889
your document fragment which means

501
00:22:58,889 --> 00:23:01,950
inside here is the shadow DOM and we say

502
00:23:01,950 --> 00:23:03,239
that's how it's Rena suisse a part

503
00:23:03,239 --> 00:23:05,429
equals Apes which means that's exposed

504
00:23:05,429 --> 00:23:10,469
to the CSS so by use of this pseudo

505
00:23:10,469 --> 00:23:13,139
element function we can now apply styles

506
00:23:13,139 --> 00:23:14,789
directly to the attributes we want to do

507
00:23:14,789 --> 00:23:18,629
before so we created our own kind of

508
00:23:18,629 --> 00:23:20,969
little CSS API for this thing we've

509
00:23:20,969 --> 00:23:25,180
exposed certain parts of it to styling

510
00:23:25,190 --> 00:23:27,539
so I'm going to go back to scope for a

511
00:23:27,539 --> 00:23:31,409
second with CSS bringing scope that

512
00:23:31,409 --> 00:23:33,210
allows us to do something that was

513
00:23:33,210 --> 00:23:37,849
previously not really permitted in CSS

514
00:23:37,849 --> 00:23:41,279
they're called custom properties but

515
00:23:41,279 --> 00:23:44,580
really they're variables but they're not

516
00:23:44,580 --> 00:23:50,039
full variables they have limits this is

517
00:23:50,039 --> 00:23:52,289
how they're defined first of all I give

518
00:23:52,289 --> 00:23:55,679
it some scope I say this one applies to

519
00:23:55,679 --> 00:23:59,099
the whole body of the document and I'm

520
00:23:59,099 --> 00:24:01,529
defining a custom a custom element a

521
00:24:01,529 --> 00:24:01,980
custom

522
00:24:01,980 --> 00:24:03,960
property called VAR hyphen highlight

523
00:24:03,960 --> 00:24:05,610
that's the format you have to use always

524
00:24:05,610 --> 00:24:08,100
VAR hyphen something and then I give

525
00:24:08,100 --> 00:24:15,360
that a value and then in my code i use

526
00:24:15,360 --> 00:24:17,040
the VAR function with the name that was

527
00:24:17,040 --> 00:24:20,840
after that so it's very very simple

528
00:24:20,840 --> 00:24:25,410
variable like syntax it's not the full

529
00:24:25,410 --> 00:24:27,090
variable syntax people of our so why not

530
00:24:27,090 --> 00:24:28,860
just use the string you know everywhere

531
00:24:28,860 --> 00:24:31,260
else uses the string and that's because

532
00:24:31,260 --> 00:24:34,620
these aren't fully variables yet there

533
00:24:34,620 --> 00:24:35,669
that's why they're being they're not

534
00:24:35,669 --> 00:24:36,660
being called variables they're being

535
00:24:36,660 --> 00:24:38,309
called custom properties because you

536
00:24:38,309 --> 00:24:40,950
can't do anything with for example the

537
00:24:40,950 --> 00:24:44,010
selector you can't do anything with the

538
00:24:44,010 --> 00:24:47,910
property you can only change values so

539
00:24:47,910 --> 00:24:49,169
that's why they're not being called

540
00:24:49,169 --> 00:24:51,200
variables so much as custom properties

541
00:24:51,200 --> 00:24:55,049
so this scope I talked about so I

542
00:24:55,049 --> 00:24:57,059
defined previously I've got my thing set

543
00:24:57,059 --> 00:24:58,440
on the body and I'm going to do it but

544
00:24:58,440 --> 00:24:59,940
then I can also just change it to say

545
00:24:59,940 --> 00:25:02,970
well in sight only inside the few

546
00:25:02,970 --> 00:25:06,780
element then change what this custom

547
00:25:06,780 --> 00:25:09,720
property does again these are very

548
00:25:09,720 --> 00:25:11,730
simple just like if you use SAS or less

549
00:25:11,730 --> 00:25:14,760
you can send values or arguments into

550
00:25:14,760 --> 00:25:16,169
these you can create quite complex

551
00:25:16,169 --> 00:25:17,820
things but I'm showing you the the

552
00:25:17,820 --> 00:25:19,770
absolute basics so this is the reason

553
00:25:19,770 --> 00:25:22,049
why we have these now and I know I've

554
00:25:22,049 --> 00:25:24,270
seen arguments again saying well we can

555
00:25:24,270 --> 00:25:27,320
do variables in SAS let's just have that

556
00:25:27,320 --> 00:25:29,910
you can that's true the one thing that

557
00:25:29,910 --> 00:25:32,130
browsers implementation brings to the

558
00:25:32,130 --> 00:25:34,650
party is scope you can't do this scope

559
00:25:34,650 --> 00:25:38,760
when using SAS or less so the brows are

560
00:25:38,760 --> 00:25:40,049
the one when they looked at it and they

561
00:25:40,049 --> 00:25:41,910
said well actually as we're creating

562
00:25:41,910 --> 00:25:44,100
scope now is a good time for us to have

563
00:25:44,100 --> 00:25:46,110
custom properties we couldn't do that

564
00:25:46,110 --> 00:25:47,580
before there was no reason for us to do

565
00:25:47,580 --> 00:25:50,160
it and as everybody was totally correct

566
00:25:50,160 --> 00:25:51,780
you could do it in SAS unless there was

567
00:25:51,780 --> 00:25:54,030
no use for it but CSS have found this

568
00:25:54,030 --> 00:25:56,250
opportunity which is to provide scope

569
00:25:56,250 --> 00:25:57,840
which is why they're being done it

570
00:25:57,840 --> 00:26:02,730
natively again you don't have to provide

571
00:26:02,730 --> 00:26:06,610
this if you want creating a shadow Dom

572
00:26:06,620 --> 00:26:09,299
actually sorry I beg your pardon shadow

573
00:26:09,299 --> 00:26:12,870
Dom this is the one exception where it

574
00:26:12,870 --> 00:26:15,630
will inherit the CSS whether you

575
00:26:15,630 --> 00:26:18,690
permit it or not that scope applies to

576
00:26:18,690 --> 00:26:20,700
everything in the document so if you

577
00:26:20,700 --> 00:26:22,920
creating something in the shadow Dom you

578
00:26:22,920 --> 00:26:24,960
can still use your custom properties

579
00:26:24,960 --> 00:26:31,890
there that's perfectly valid okay so

580
00:26:31,890 --> 00:26:33,300
I've just got a little time left I'm

581
00:26:33,300 --> 00:26:36,560
going to talk about briefly the future

582
00:26:36,560 --> 00:26:40,650
or the possible future this is stuff

583
00:26:40,650 --> 00:26:43,110
that's been mooted floated may not

584
00:26:43,110 --> 00:26:44,790
happen not a hundred percent because

585
00:26:44,790 --> 00:26:48,350
there are issues around it but it's so

586
00:26:48,350 --> 00:26:50,970
exciting and potentially terrifying in

587
00:26:50,970 --> 00:26:52,950
what it allows us to do that I really

588
00:26:52,950 --> 00:26:54,870
wanted to talk about it these are called

589
00:26:54,870 --> 00:26:59,610
decorators there's a new decorator

590
00:26:59,610 --> 00:27:02,160
element proposed it's not implemented

591
00:27:02,160 --> 00:27:04,380
anyway its proposed so it's a decorator

592
00:27:04,380 --> 00:27:06,990
element and you give it an ID or some

593
00:27:06,990 --> 00:27:09,540
kind of unique identifier and then you

594
00:27:09,540 --> 00:27:13,080
put a template inside it and you can put

595
00:27:13,080 --> 00:27:14,250
whatever you like in that template the

596
00:27:14,250 --> 00:27:15,570
other new thing we've got here is this

597
00:27:15,570 --> 00:27:18,930
content element and that's blank in here

598
00:27:18,930 --> 00:27:25,500
totally blanks it says content so we've

599
00:27:25,500 --> 00:27:28,710
got this markup here which is from a

600
00:27:28,710 --> 00:27:30,060
conference I did previously and

601
00:27:30,060 --> 00:27:33,360
neglected to update so we've got this

602
00:27:33,360 --> 00:27:37,800
markup here and we want to what we can

603
00:27:37,800 --> 00:27:42,330
now do with it using decorators is using

604
00:27:42,330 --> 00:27:44,700
this new property take the template

605
00:27:44,700 --> 00:27:47,480
which we defined on the previous page

606
00:27:47,480 --> 00:27:51,480
take that template and apply it to this

607
00:27:51,480 --> 00:27:54,600
element and the content of this element

608
00:27:54,600 --> 00:27:58,290
the h1 will now go where the content tag

609
00:27:58,290 --> 00:28:02,070
was before so this markup will become

610
00:28:02,070 --> 00:28:07,200
using CSS this markup we're actually

611
00:28:07,200 --> 00:28:11,550
applying mark up with CSS which as I

612
00:28:11,550 --> 00:28:14,030
said is actually really really clever

613
00:28:14,030 --> 00:28:17,250
because you can use media queries to

614
00:28:17,250 --> 00:28:20,120
actually fundamentally change the page

615
00:28:20,120 --> 00:28:24,120
but also really terrifying that could

616
00:28:24,120 --> 00:28:27,630
backfire badly which is why it's not

617
00:28:27,630 --> 00:28:29,280
been implemented yet but it's been

618
00:28:29,280 --> 00:28:31,080
floated and I think it's a clever clever

619
00:28:31,080 --> 00:28:33,750
idea but there are lots of issues around

620
00:28:33,750 --> 00:28:40,050
it so that may not happen so you're

621
00:28:40,050 --> 00:28:41,160
probably asking you guys is great

622
00:28:41,160 --> 00:28:42,930
Wednesday stuff coming the thing is this

623
00:28:42,930 --> 00:28:46,260
stuff is already here in bits and pieces

624
00:28:46,260 --> 00:28:49,050
and quite often prepped off most of it

625
00:28:49,050 --> 00:28:53,640
is in chrome or canary these guys are

626
00:28:53,640 --> 00:28:54,960
really pushing this stuff hard it was

627
00:28:54,960 --> 00:28:58,080
their idea originally especially Chrome

628
00:28:58,080 --> 00:29:00,780
Canary already has shadow Dom already

629
00:29:00,780 --> 00:29:03,720
has scope Styles already has some of

630
00:29:03,720 --> 00:29:10,350
custom elements I think it's got the

631
00:29:10,350 --> 00:29:13,320
template element is also in there so

632
00:29:13,320 --> 00:29:14,580
there's all there even some of it you

633
00:29:14,580 --> 00:29:16,500
have to enable through the flags but

634
00:29:16,500 --> 00:29:18,810
it's kind of mostly there and because of

635
00:29:18,810 --> 00:29:21,240
that or probe which is based on blink is

636
00:29:21,240 --> 00:29:24,570
also going to have this stuff Safari is

637
00:29:24,570 --> 00:29:26,640
following along slowly this stuff was

638
00:29:26,640 --> 00:29:28,980
all implemented in WebKit when there was

639
00:29:28,980 --> 00:29:31,350
a when before chrome switch to blink so

640
00:29:31,350 --> 00:29:33,030
some of its still in WebKit but they're

641
00:29:33,030 --> 00:29:35,820
planning to take some bits out there not

642
00:29:35,820 --> 00:29:39,030
too keen on the shadow Dom right now but

643
00:29:39,030 --> 00:29:40,320
it is actually still there if you

644
00:29:40,320 --> 00:29:45,570
download safari 6.1 or seven it has that

645
00:29:45,570 --> 00:29:48,030
flag to hide or enable the shadow Dom so

646
00:29:48,030 --> 00:29:49,560
it's implemented but they're removing

647
00:29:49,560 --> 00:29:51,030
the API so you can't do anything with it

648
00:29:51,030 --> 00:29:56,160
and Firefox or Firefox nightly also

649
00:29:56,160 --> 00:29:57,270
implements quite a lot of this stuff

650
00:29:57,270 --> 00:30:00,330
they have custom element registration

651
00:30:00,330 --> 00:30:03,000
they have template element they have

652
00:30:03,000 --> 00:30:05,610
scoped styles that's all in Firefox

653
00:30:05,610 --> 00:30:07,980
again some of it has to be enabled but

654
00:30:07,980 --> 00:30:10,050
this is not something originally when it

655
00:30:10,050 --> 00:30:12,000
was mooted it was like oh chroma just

656
00:30:12,000 --> 00:30:13,440
you know Google or just creating this

657
00:30:13,440 --> 00:30:14,970
stuff which no one's going to use it's

658
00:30:14,970 --> 00:30:16,860
not the case this is a cross-browser

659
00:30:16,860 --> 00:30:19,740
like everybody's behind this this is the

660
00:30:19,740 --> 00:30:22,230
future of web development whether you

661
00:30:22,230 --> 00:30:24,650
like it or not it definitely is coming

662
00:30:24,650 --> 00:30:26,730
there's place to learn about this stuff

663
00:30:26,730 --> 00:30:30,210
go to the polymer project and again this

664
00:30:30,210 --> 00:30:32,130
stuff is unique because the polymer

665
00:30:32,130 --> 00:30:36,630
project is kind of a polyfill for all of

666
00:30:36,630 --> 00:30:40,980
this stuff but it's also how this stuff

667
00:30:40,980 --> 00:30:43,290
is getting created

668
00:30:43,290 --> 00:30:45,570
all of the feedback they're not the

669
00:30:45,570 --> 00:30:47,220
browser's are not implementing much of

670
00:30:47,220 --> 00:30:48,810
this stuff natively it's all being done

671
00:30:48,810 --> 00:30:51,630
at kind of a low-level API levels

672
00:30:51,630 --> 00:30:52,680
they're Korea they're building this

673
00:30:52,680 --> 00:30:55,320
polymer library to not only polyfill the

674
00:30:55,320 --> 00:30:57,180
stuff but also to reflect the latest

675
00:30:57,180 --> 00:30:58,920
standard and take in developer feedback

676
00:30:58,920 --> 00:31:02,220
so the more you use this the more

677
00:31:02,220 --> 00:31:03,870
developed the standard guess this is

678
00:31:03,870 --> 00:31:06,900
being driven by the community so it's a

679
00:31:06,900 --> 00:31:09,750
really really interesting opportunity to

680
00:31:09,750 --> 00:31:14,190
get involved go to html5 rocks com

681
00:31:14,190 --> 00:31:15,780
they've got a bunch of stuff on web

682
00:31:15,780 --> 00:31:17,910
components some really good tutorials a

683
00:31:17,910 --> 00:31:19,680
guy called Eric Begelman at Google who's

684
00:31:19,680 --> 00:31:22,050
driving this stuff great explaining all

685
00:31:22,050 --> 00:31:25,980
of these things follow him on Google+ he

686
00:31:25,980 --> 00:31:28,830
writes about a lot there Mozilla have

687
00:31:28,830 --> 00:31:30,960
created this pattern library called

688
00:31:30,960 --> 00:31:34,770
brick which is a series of custom

689
00:31:34,770 --> 00:31:36,300
elements that you can just take a knew

690
00:31:36,300 --> 00:31:38,250
straight away as I said Mozilla are

691
00:31:38,250 --> 00:31:41,280
fully behind this and there's a website

692
00:31:41,280 --> 00:31:43,110
called custom elements do which is a

693
00:31:43,110 --> 00:31:46,110
community-based repository of custom

694
00:31:46,110 --> 00:31:47,970
elements that so you can just take the

695
00:31:47,970 --> 00:31:49,620
library take the element drop it in your

696
00:31:49,620 --> 00:31:53,130
pager this stuff just works in

697
00:31:53,130 --> 00:31:55,890
conclusion what's that doing there in

698
00:31:55,890 --> 00:31:57,600
conclusion web components provide

699
00:31:57,600 --> 00:32:01,590
reusability and encapsulation and scope

700
00:32:01,590 --> 00:32:10,239
is coming to CSS Thank You shun

701
00:32:10,249 --> 00:32:14,050
thanks

702
00:32:14,060 --> 00:32:22,700
you

