1
00:00:09,110 --> 00:00:13,679

thank you very much sunny I have four

2
00:00:13,679 --> 00:00:15,150
minutes to get from this slide to the

3
00:00:15,150 --> 00:00:15,870
next slide

4
00:00:15,870 --> 00:00:20,490
good morning I've infected my entire

5
00:00:20,490 --> 00:00:24,449
presentation with emoji I've never used

6
00:00:24,449 --> 00:00:27,529
emoji before probably using it wrong but

7
00:00:27,529 --> 00:00:30,150
one of my philosophies is you have to

8
00:00:30,150 --> 00:00:32,239
use something incorrectly and poorly

9
00:00:32,239 --> 00:00:35,090
before you can learn to use it right so

10
00:00:35,090 --> 00:00:37,800
if anybody is an emoji expert I

11
00:00:37,800 --> 00:00:42,090
apologize in advance so here we go it's

12
00:00:42,090 --> 00:00:44,160
my first emoji attempt Who am I

13
00:00:44,160 --> 00:00:48,360
Tim Oxley as signee mentioned that I'm

14
00:00:48,360 --> 00:00:49,770
an Australian developer I've been living

15
00:00:49,770 --> 00:00:51,539
in Singapore for the last three or four

16
00:00:51,539 --> 00:00:55,680
years I grew up on PHP and all that

17
00:00:55,680 --> 00:00:58,530
rubbish ended up becoming deciding I

18
00:00:58,530 --> 00:01:00,870
wanted to do something with my life so I

19
00:01:00,870 --> 00:01:04,260
got rid of PHP so I shouldn't bag

20
00:01:04,260 --> 00:01:06,000
I shouldn't bash any technology really

21
00:01:06,000 --> 00:01:12,229
but anyway moved to JavaScript and

22
00:01:12,229 --> 00:01:14,850
started presenting it meetups ended up

23
00:01:14,850 --> 00:01:21,990
becoming okay what I do okay I've now

24
00:01:21,990 --> 00:01:23,280
worked for a company called node source

25
00:01:23,280 --> 00:01:27,799
so node sauce it's trying to make node

26
00:01:27,799 --> 00:01:30,750
better for enterprises so no it's going

27
00:01:30,750 --> 00:01:33,329
getting going crazy at the moment and

28
00:01:33,329 --> 00:01:36,210
we're building tools to help help

29
00:01:36,210 --> 00:01:39,240
enterprise use node better we've

30
00:01:39,240 --> 00:01:41,430
launched a product called n solid about

31
00:01:41,430 --> 00:01:43,320
a month ago it's the first like big

32
00:01:43,320 --> 00:01:44,579
product that I've been involved in so

33
00:01:44,579 --> 00:01:46,229
I'm kind of proud of it so I'm just

34
00:01:46,229 --> 00:01:48,240
plugging that a little bit we we

35
00:01:48,240 --> 00:01:49,799
produced like a runtime for node that

36
00:01:49,799 --> 00:01:51,710
allows you to get like cool

37
00:01:51,710 --> 00:01:53,729
introspection capability so you can get

38
00:01:53,729 --> 00:01:56,280
like stack traces and CPU profiles out

39
00:01:56,280 --> 00:01:59,430
of it and visualize them in beautiful

40
00:01:59,430 --> 00:02:04,700
graphs like that so under my talk

41
00:02:04,700 --> 00:02:07,320
modular versus monolith this is

42
00:02:07,320 --> 00:02:08,849
something which

43
00:02:08,849 --> 00:02:11,519
some of you may be familiar with me

44
00:02:11,519 --> 00:02:14,730
discussing this at length in the past at

45
00:02:14,730 --> 00:02:18,450
various times one of the times in which

46
00:02:18,450 --> 00:02:23,640
I discussed this was a 2012 not J's conf

47
00:02:23,640 --> 00:02:26,910
it was jeaious camp J's camp it's

48
00:02:26,910 --> 00:02:28,379
confusing because I have camp jeaious

49
00:02:28,379 --> 00:02:30,780
and there was jazz camp so is that I

50
00:02:30,780 --> 00:02:35,040
spoke about this but I have changed my

51
00:02:35,040 --> 00:02:36,019
mind

52
00:02:36,019 --> 00:02:38,280
so if anybody is familiar with what I

53
00:02:38,280 --> 00:02:43,290
said this will be different so just a

54
00:02:43,290 --> 00:02:47,220
little bit of background node node has

55
00:02:47,220 --> 00:02:50,129
this compared to a lot of other

56
00:02:50,129 --> 00:02:51,750
ecosystems we've got this culture of

57
00:02:51,750 --> 00:02:55,019
extreme modularity the the idea is that

58
00:02:55,019 --> 00:02:57,660
you can build an application up out of

59
00:02:57,660 --> 00:02:59,400
like lots of little tiny pieces each has

60
00:02:59,400 --> 00:03:02,280
like a single responsibility and you're

61
00:03:02,280 --> 00:03:05,099
building your building using like lots

62
00:03:05,099 --> 00:03:08,190
of little Lego blocks and you know you

63
00:03:08,190 --> 00:03:10,349
can it's not uncommon to see projects

64
00:03:10,349 --> 00:03:13,380
using hundreds if not thousands of

65
00:03:13,380 --> 00:03:16,079
dependencies often hundreds if not

66
00:03:16,079 --> 00:03:19,079
thousands of the same dependency which

67
00:03:19,079 --> 00:03:20,010
is very unfortunate

68
00:03:20,010 --> 00:03:23,310
hopefully salt resolved in NPM 3 if you

69
00:03:23,310 --> 00:03:24,930
if anything will actually install

70
00:03:24,930 --> 00:03:32,250
eventually anyway so in 2012 I spoke

71
00:03:32,250 --> 00:03:35,900
about the idea of building modular

72
00:03:35,900 --> 00:03:39,540
applications and the idea I feel like

73
00:03:39,540 --> 00:03:42,150
maybe I was a little bit immature at the

74
00:03:42,150 --> 00:03:45,690
time so take some of this with a grain

75
00:03:45,690 --> 00:03:48,180
of salt but one of the things which I

76
00:03:48,180 --> 00:03:50,099
was advocating was avoiding frameworks

77
00:03:50,099 --> 00:03:51,510
because you know they they give you

78
00:03:51,510 --> 00:03:53,579
vendor lock-in it's really difficult

79
00:03:53,579 --> 00:03:54,870
once you're on a framework it's

80
00:03:54,870 --> 00:03:56,129
difficult to move away from a framework

81
00:03:56,129 --> 00:03:58,500
because all of your codes locked to that

82
00:03:58,500 --> 00:04:01,139
framework and because it's locked to the

83
00:04:01,139 --> 00:04:03,900
framework you're also in a situation

84
00:04:03,900 --> 00:04:06,150
where when the framework dies so does

85
00:04:06,150 --> 00:04:08,220
all of your code this is a bad thing and

86
00:04:08,220 --> 00:04:10,290
it's something that we should be trying

87
00:04:10,290 --> 00:04:12,120
to avoid if we're trying to you know

88
00:04:12,120 --> 00:04:15,090
continue having our code bases live for

89
00:04:15,090 --> 00:04:19,650
long periods of time my main objection

90
00:04:19,650 --> 00:04:22,109
to using frameworks is actually it's

91
00:04:22,109 --> 00:04:23,729
more just investment in something which

92
00:04:23,729 --> 00:04:27,750
is going to go away quickly so after

93
00:04:27,750 --> 00:04:30,210
every 18 months I felt like now I don't

94
00:04:30,210 --> 00:04:31,620
know anything about web development

95
00:04:31,620 --> 00:04:34,159
anymore this is a really frustrating

96
00:04:34,159 --> 00:04:36,900
thing you know a new of every 18 months

97
00:04:36,900 --> 00:04:40,770
so my solution that the solution that I

98
00:04:40,770 --> 00:04:42,090
presented was rather than building on

99
00:04:42,090 --> 00:04:43,590
top of frameworks - you build things

100
00:04:43,590 --> 00:04:45,750
using libraries and library solve all of

101
00:04:45,750 --> 00:04:48,330
your problems if you build something

102
00:04:48,330 --> 00:04:50,009
with a library you know it'll be

103
00:04:50,009 --> 00:04:52,710
reusable you can be more robust you know

104
00:04:52,710 --> 00:04:53,370
you're right

105
00:04:53,370 --> 00:04:55,229
yeah you can write documentation in the

106
00:04:55,229 --> 00:04:58,250
readme for the sort of library

107
00:04:58,250 --> 00:05:01,919
you know the you'll make better code

108
00:05:01,919 --> 00:05:03,750
quality because you're solving smaller

109
00:05:03,750 --> 00:05:05,430
simpler problems you've got less things

110
00:05:05,430 --> 00:05:07,770
going on it's it's all about sort of

111
00:05:07,770 --> 00:05:09,389
keeping things simple to the point

112
00:05:09,389 --> 00:05:12,360
single responsibilities etc over and not

113
00:05:12,360 --> 00:05:14,129
only that it the the great thing about

114
00:05:14,129 --> 00:05:15,719
it is that it makes it very easy to take

115
00:05:15,719 --> 00:05:17,250
something which you've built and open

116
00:05:17,250 --> 00:05:22,349
source it and my the way I was treating

117
00:05:22,349 --> 00:05:24,060
this was well okay if you can open

118
00:05:24,060 --> 00:05:25,259
source why not open source everything

119
00:05:25,259 --> 00:05:26,069
from the beginning

120
00:05:26,069 --> 00:05:28,080
you know library first development build

121
00:05:28,080 --> 00:05:31,110
build the concept was if you've got

122
00:05:31,110 --> 00:05:34,319
something if you're you know we often

123
00:05:34,319 --> 00:05:37,889
will pull tools out of NPM and use them

124
00:05:37,889 --> 00:05:39,449
in our projects to solve various

125
00:05:39,449 --> 00:05:42,750
problems and if you know I sort of saw

126
00:05:42,750 --> 00:05:44,550
it as my responsibility if I if I feel

127
00:05:44,550 --> 00:05:46,349
like I need something if I'm looking for

128
00:05:46,349 --> 00:05:48,629
something and I don't find it it's my

129
00:05:48,629 --> 00:05:50,550
responsibility as an open source

130
00:05:50,550 --> 00:05:52,650
developer - well I'm gonna fill in that

131
00:05:52,650 --> 00:05:54,930
gap if I've been able to fill in nine

132
00:05:54,930 --> 00:05:57,210
out of my ten gaps it's my

133
00:05:57,210 --> 00:06:00,110
responsibility fill in the the tenth one

134
00:06:00,110 --> 00:06:05,610
and so if you're if you're if by

135
00:06:05,610 --> 00:06:08,219
producing libraries you're producing

136
00:06:08,219 --> 00:06:10,259
higher quality code overall and as you

137
00:06:10,259 --> 00:06:11,879
know got a bit the benefit for the

138
00:06:11,879 --> 00:06:15,990
community you know the overall quality

139
00:06:15,990 --> 00:06:18,060
is better so wouldn't it make sense to

140
00:06:18,060 --> 00:06:19,650
build your entire application as a big

141
00:06:19,650 --> 00:06:21,960
set of libraries and start you know why

142
00:06:21,960 --> 00:06:24,509
not even start with libraries at the

143
00:06:24,509 --> 00:06:25,949
time I was talking about a project

144
00:06:25,949 --> 00:06:29,430
called component which was thing by TJ

145
00:06:29,430 --> 00:06:32,719
Holloway Jack

146
00:06:32,729 --> 00:06:36,599
unfortunately between 2012 and 2015

147
00:06:36,599 --> 00:06:39,729
what component died and which was okay

148
00:06:39,729 --> 00:06:41,680
though it's okay one of the things that

149
00:06:41,680 --> 00:06:42,999
I mentioned in the talk was that if

150
00:06:42,999 --> 00:06:45,400
component dies if there's no you know

151
00:06:45,400 --> 00:06:46,680
there was there's only a little bit of

152
00:06:46,680 --> 00:06:48,939
overhead so a lot of the things which I

153
00:06:48,939 --> 00:06:50,800
made components I made I had probably

154
00:06:50,800 --> 00:06:53,620
twenty thirty components they're all now

155
00:06:53,620 --> 00:06:56,370
NPN modules so that was nice but

156
00:06:56,370 --> 00:06:58,840
unfortunately there are some other major

157
00:06:58,840 --> 00:07:03,060
major issues with building things

158
00:07:03,060 --> 00:07:05,830
library first or even having a heavy

159
00:07:05,830 --> 00:07:08,349
focus on constructing libraries out of

160
00:07:08,349 --> 00:07:11,080
the pieces which you're using to

161
00:07:11,080 --> 00:07:14,740
construct your application number one is

162
00:07:14,740 --> 00:07:16,029
that there's rabbit holes everywhere

163
00:07:16,029 --> 00:07:17,860
it's very difficult if you're trying to

164
00:07:17,860 --> 00:07:22,270
build the pure try to build libraries to

165
00:07:22,270 --> 00:07:23,830
solve all of your problems you end up

166
00:07:23,830 --> 00:07:25,870
just constantly building libraries I

167
00:07:25,870 --> 00:07:27,279
remember there was one day I started out

168
00:07:27,279 --> 00:07:29,439
with a particular problem and three days

169
00:07:29,439 --> 00:07:31,569
later I realized I'd built like four or

170
00:07:31,569 --> 00:07:35,770
five libraries and I hadn't even got all

171
00:07:35,770 --> 00:07:37,509
the pieces that I need needed to solve

172
00:07:37,509 --> 00:07:40,449
the original problem which it's good

173
00:07:40,449 --> 00:07:41,860
because all these line these are

174
00:07:41,860 --> 00:07:42,759
actually some of my more popular

175
00:07:42,759 --> 00:07:45,520
libraries on NPM at the moment but they

176
00:07:45,520 --> 00:07:46,930
actually they weren't solving the

177
00:07:46,930 --> 00:07:48,460
problem that I had at the time which was

178
00:07:48,460 --> 00:07:51,159
something actually quite simple it's

179
00:07:51,159 --> 00:07:56,259
very frustrating and the the problem was

180
00:07:56,259 --> 00:07:58,389
you know when there's if you think of

181
00:07:58,389 --> 00:08:01,029
the idea of a library it's often it's

182
00:08:01,029 --> 00:08:03,069
it's quite simple and you think oh yeah

183
00:08:03,069 --> 00:08:04,300
I'll get this done in about twenty

184
00:08:04,300 --> 00:08:08,139
minutes but in reality libraries take a

185
00:08:08,139 --> 00:08:10,599
lot longer I find that if I'm gonna be

186
00:08:10,599 --> 00:08:12,849
producing something of a you know a high

187
00:08:12,849 --> 00:08:14,349
level of quality something that's open

188
00:08:14,349 --> 00:08:16,000
source of all it generally takes me at

189
00:08:16,000 --> 00:08:19,449
least six to eight hours and that's just

190
00:08:19,449 --> 00:08:21,250
for like for example if my lab we just

191
00:08:21,250 --> 00:08:23,319
has one line of code in it it's you know

192
00:08:23,319 --> 00:08:25,389
maybe maybe a few more than that but if

193
00:08:25,389 --> 00:08:28,479
if your work even even for the simplest

194
00:08:28,479 --> 00:08:30,099
stuff it can take this amount of time

195
00:08:30,099 --> 00:08:31,779
because you're you'll build your thing

196
00:08:31,779 --> 00:08:33,729
you'll realize that the API is not very

197
00:08:33,729 --> 00:08:35,169
good when you start writing the readme I

198
00:08:35,169 --> 00:08:37,500
can't publish this this is embarrassing

199
00:08:37,500 --> 00:08:40,329
it takes too many arguments so you go

200
00:08:40,329 --> 00:08:41,979
and you change your API which means you

201
00:08:41,979 --> 00:08:43,329
need to update your test which means you

202
00:08:43,329 --> 00:08:44,740
need to update the documentation which

203
00:08:44,740 --> 00:08:46,450
you just wrote

204
00:08:46,450 --> 00:08:48,339
and you know you end up with this thing

205
00:08:48,339 --> 00:08:51,550
which you know because it's supposed to

206
00:08:51,550 --> 00:08:53,620
be reusable now you end up having to

207
00:08:53,620 --> 00:08:55,540
take into account all these additional

208
00:08:55,540 --> 00:08:58,630
use cases which probably never happened

209
00:08:58,630 --> 00:09:00,579
in your application but because you want

210
00:09:00,579 --> 00:09:02,170
this to be you don't want the next

211
00:09:02,170 --> 00:09:04,440
person to use your library to pass it

212
00:09:04,440 --> 00:09:07,269
you know some strange value in anything

213
00:09:07,269 --> 00:09:12,060
breaks so you want to make it robust but

214
00:09:12,060 --> 00:09:15,550
this is an awful lot of work and

215
00:09:15,550 --> 00:09:17,740
unfortunately all those qualities that I

216
00:09:17,740 --> 00:09:20,290
was discussing before you know reusable

217
00:09:20,290 --> 00:09:22,899
more robust high quality code all this

218
00:09:22,899 --> 00:09:24,699
stuff it doesn't just come for free

219
00:09:24,699 --> 00:09:26,320
magically by building things with

220
00:09:26,320 --> 00:09:29,680
libraries this is an unfortunate thing

221
00:09:29,680 --> 00:09:32,350
and something I didn't really take into

222
00:09:32,350 --> 00:09:34,889
account I just I sort of assumed that

223
00:09:34,889 --> 00:09:36,910
reason why this stuff's taking so long

224
00:09:36,910 --> 00:09:40,720
is because I'm crap but maybe it wasn't

225
00:09:40,720 --> 00:09:42,399
because I was crap it's just that this

226
00:09:42,399 --> 00:09:44,709
stuff things just take time or maybe

227
00:09:44,709 --> 00:09:46,540
maybe I am crap and maybe I just need to

228
00:09:46,540 --> 00:09:48,190
live with that that's okay I can live

229
00:09:48,190 --> 00:09:50,769
with that the problem is is that if you

230
00:09:50,769 --> 00:09:52,060
try to build everything at a hundred

231
00:09:52,060 --> 00:09:53,829
percent quality all of the time you end

232
00:09:53,829 --> 00:09:56,620
up investing an awful lot of time over

233
00:09:56,620 --> 00:09:58,779
engineering because you're building

234
00:09:58,779 --> 00:10:00,640
stuff which like I said

235
00:10:00,640 --> 00:10:03,790
taking into account cases which you

236
00:10:03,790 --> 00:10:06,070
don't need in your application you're

237
00:10:06,070 --> 00:10:07,449
making it more robust than these to me

238
00:10:07,449 --> 00:10:09,040
maybe it doesn't even need documentation

239
00:10:09,040 --> 00:10:11,170
because it's like one function and it

240
00:10:11,170 --> 00:10:12,880
takes two arguments and you know a

241
00:10:12,880 --> 00:10:15,630
comment above it will be sufficient so

242
00:10:15,630 --> 00:10:18,160
the thing thing is most of the time

243
00:10:18,160 --> 00:10:19,990
you're not gonna need all of this

244
00:10:19,990 --> 00:10:23,529
additional quality that you're injecting

245
00:10:23,529 --> 00:10:25,930
and the worst part is a lot of the time

246
00:10:25,930 --> 00:10:28,420
I would build stuff and then go to

247
00:10:28,420 --> 00:10:30,910
integrate it and then discover I didn't

248
00:10:30,910 --> 00:10:32,649
even need the thing in the first place I

249
00:10:32,649 --> 00:10:33,819
could have just done the whole thing

250
00:10:33,819 --> 00:10:38,310
with one line of code and this is just

251
00:10:38,310 --> 00:10:42,130
such a waste of time great for the

252
00:10:42,130 --> 00:10:43,389
community and I think that's probably

253
00:10:43,389 --> 00:10:46,329
one of the reasons why NPM has you know

254
00:10:46,329 --> 00:10:48,579
most of the it's the largest package

255
00:10:48,579 --> 00:10:51,550
repository ever in the history of

256
00:10:51,550 --> 00:10:54,000
humanity because a lot of people are

257
00:10:54,000 --> 00:10:56,470
over engineering and it's great benefits

258
00:10:56,470 --> 00:10:58,750
the community but may not necessarily

259
00:10:58,750 --> 00:11:00,490
benefit the people who's out

260
00:11:00,490 --> 00:11:03,279
actually paying you to build the right

261
00:11:03,279 --> 00:11:07,930
thing so unfortunately if you were

262
00:11:07,930 --> 00:11:11,410
building libraries first you often

263
00:11:11,410 --> 00:11:16,270
you'll build the wrong thing so the the

264
00:11:16,270 --> 00:11:18,790
solutions of this is to constantly be

265
00:11:18,790 --> 00:11:20,350
asking yourself what problem I trying to

266
00:11:20,350 --> 00:11:22,540
solve is this the simplest thing which

267
00:11:22,540 --> 00:11:25,540
will work and I would often ask myself

268
00:11:25,540 --> 00:11:28,420
that while I was having a shower I do a

269
00:11:28,420 --> 00:11:29,620
lot of thinking in the shower so I

270
00:11:29,620 --> 00:11:32,470
enjoyed that's why that emojis they just

271
00:11:32,470 --> 00:11:36,760
have to explain that often if it's not

272
00:11:36,760 --> 00:11:38,380
the simplest thing you know you need to

273
00:11:38,380 --> 00:11:41,560
you know roll roll back I don't this is

274
00:11:41,560 --> 00:11:43,690
just something which I am constantly I

275
00:11:43,690 --> 00:11:46,810
have in my mind and I'm almost always

276
00:11:46,810 --> 00:11:49,170
when I'm doing things the answer is no

277
00:11:49,170 --> 00:11:55,089
socks but but that's okay we we try to

278
00:11:55,089 --> 00:11:56,529
get better

279
00:11:56,529 --> 00:11:58,390
there's a quote don't know where it from

280
00:11:58,390 --> 00:12:03,550
where it came from which reads we've all

281
00:12:03,550 --> 00:12:06,339
had projects in which we spent 80% of

282
00:12:06,339 --> 00:12:07,899
the time working on a small piece which

283
00:12:07,899 --> 00:12:10,180
we found interesting and 20% of the time

284
00:12:10,180 --> 00:12:12,520
building the other 80% of the program

285
00:12:12,520 --> 00:12:15,610
and this is something I've this is again

286
00:12:15,610 --> 00:12:17,110
the reason why I'd like to build those

287
00:12:17,110 --> 00:12:18,910
modules I'm gonna solve this problem

288
00:12:18,910 --> 00:12:20,500
really well and that I find that

289
00:12:20,500 --> 00:12:23,200
interesting the idea of taking a taking

290
00:12:23,200 --> 00:12:24,910
something and doing a good job of it

291
00:12:24,910 --> 00:12:27,370
understanding the whole thing but yeah

292
00:12:27,370 --> 00:12:29,170
is that the simple thing that'll work

293
00:12:29,170 --> 00:12:33,370
probably not and the the way I get

294
00:12:33,370 --> 00:12:35,440
around another way that I tricked myself

295
00:12:35,440 --> 00:12:38,860
a question that I asked myself to figure

296
00:12:38,860 --> 00:12:40,660
out am i doing is this the right

297
00:12:40,660 --> 00:12:43,839
decision should I build this is if I

298
00:12:43,839 --> 00:12:47,740
asked myself is this going to be fun if

299
00:12:47,740 --> 00:12:49,300
I think something's going to be fun I

300
00:12:49,300 --> 00:12:50,380
probably shouldn't be building it

301
00:12:50,380 --> 00:12:51,640
because I'm building it for me not for

302
00:12:51,640 --> 00:12:55,029
the product this is a horrible reality I

303
00:12:55,029 --> 00:12:58,180
hate this but yeah a lot of the time if

304
00:12:58,180 --> 00:13:00,480
you're building something that's fun you

305
00:13:00,480 --> 00:13:02,680
should probably second guess whether

306
00:13:02,680 --> 00:13:04,270
you're building it for you or actually

307
00:13:04,270 --> 00:13:06,220
to solve the problem it's a little sucks

308
00:13:06,220 --> 00:13:07,510
but maybe there's a better way but

309
00:13:07,510 --> 00:13:11,170
anyway overall the point here is that

310
00:13:11,170 --> 00:13:14,569
avoid premature modularization

311
00:13:14,569 --> 00:13:17,239
because you might end up putting the

312
00:13:17,239 --> 00:13:20,709
wrong thing into your program because

313
00:13:20,709 --> 00:13:23,869
it's difficult to know upfront all of

314
00:13:23,869 --> 00:13:25,730
the things that you're going to need so

315
00:13:25,730 --> 00:13:28,850
tend to build things top down I put a

316
00:13:28,850 --> 00:13:30,290
saxophone in here because I had this

317
00:13:30,290 --> 00:13:32,859
sort of idea of this image in my head of

318
00:13:32,859 --> 00:13:35,480
starting a band I've always wanted to

319
00:13:35,480 --> 00:13:37,100
start a band I've been in bands but they

320
00:13:37,100 --> 00:13:41,509
were never any good but the I had this

321
00:13:41,509 --> 00:13:44,569
vision of like starting a band and like

322
00:13:44,569 --> 00:13:46,489
getting this writing this excellent you

323
00:13:46,489 --> 00:13:49,369
know lead part but and then just jumping

324
00:13:49,369 --> 00:13:50,899
on the first instrument that I saw was

325
00:13:50,899 --> 00:13:53,089
like a like a saxophone and but then

326
00:13:53,089 --> 00:13:54,559
later realizing and we'll hang on we're

327
00:13:54,559 --> 00:13:55,819
in a metal band what the hell am I doing

328
00:13:55,819 --> 00:14:01,189
with a saxophone and that so if we if

329
00:14:01,189 --> 00:14:02,059
we're going to avoid premature

330
00:14:02,059 --> 00:14:05,509
modularization what are other what are

331
00:14:05,509 --> 00:14:06,919
our other options there are other

332
00:14:06,919 --> 00:14:10,299
options of these things before my

333
00:14:10,299 --> 00:14:12,949
whenever I needed to model I modular

334
00:14:12,949 --> 00:14:14,359
eyes something I would just instantly go

335
00:14:14,359 --> 00:14:16,970
straight for external package because

336
00:14:16,970 --> 00:14:20,600
this seemed if you look at a lot of the

337
00:14:20,600 --> 00:14:23,480
prolific authors of stuff this seems to

338
00:14:23,480 --> 00:14:25,220
be the way that they work but I'm not

339
00:14:25,220 --> 00:14:26,959
sure whether this is actually a good way

340
00:14:26,959 --> 00:14:30,379
to work in your everyday work so you've

341
00:14:30,379 --> 00:14:31,489
got all these other options which are

342
00:14:31,489 --> 00:14:33,980
much simpler which come with far lower

343
00:14:33,980 --> 00:14:37,009
overheads which you can use before you

344
00:14:37,009 --> 00:14:39,589
end up moving something out so basically

345
00:14:39,589 --> 00:14:41,980
what I'm trying to say is you can I

346
00:14:41,980 --> 00:14:45,019
don't even mind having a whole bunch of

347
00:14:45,019 --> 00:14:46,789
stuff just in one function that's fine

348
00:14:46,789 --> 00:14:49,689
as long as it's not complicated

349
00:14:49,689 --> 00:14:52,220
but if that gets complicated if it's too

350
00:14:52,220 --> 00:14:53,660
much to hold in your head then you can

351
00:14:53,660 --> 00:14:55,639
break it out to a file folder or an

352
00:14:55,639 --> 00:14:57,619
internal package all these things which

353
00:14:57,619 --> 00:15:00,949
are which have lower overheads before

354
00:15:00,949 --> 00:15:04,759
you get to an external package next

355
00:15:04,759 --> 00:15:07,339
point is assume that your first attempt

356
00:15:07,339 --> 00:15:10,669
will be bad so this is another thing if

357
00:15:10,669 --> 00:15:11,809
you're building things which are open

358
00:15:11,809 --> 00:15:16,910
source and your first attempt is bad or

359
00:15:16,910 --> 00:15:18,679
one you've now got other people using

360
00:15:18,679 --> 00:15:23,029
your bad first attempt but to you've

361
00:15:23,029 --> 00:15:24,799
gone and invested all this time in

362
00:15:24,799 --> 00:15:26,360
adding all that documentation all those

363
00:15:26,360 --> 00:15:27,379
tests in

364
00:15:27,379 --> 00:15:30,379
think which may or may not be the best

365
00:15:30,379 --> 00:15:31,069
solution

366
00:15:31,069 --> 00:15:33,379
like tests a really good way of making

367
00:15:33,379 --> 00:15:35,720
sure that your code doesn't change and

368
00:15:35,720 --> 00:15:39,259
so maybe a good maybe it's important

369
00:15:39,259 --> 00:15:40,519
it's important to prototype I guess is

370
00:15:40,519 --> 00:15:43,160
what I'm trying to say here it's not

371
00:15:43,160 --> 00:15:45,859
always clear how to best slice up the

372
00:15:45,859 --> 00:15:48,409
logic for your application and you're

373
00:15:48,409 --> 00:15:49,489
probably going to make some bad

374
00:15:49,489 --> 00:15:51,019
decisions up front

375
00:15:51,019 --> 00:15:52,399
now I'm Judah incomplete or missing

376
00:15:52,399 --> 00:15:56,929
information so not only that the you'll

377
00:15:56,929 --> 00:16:01,429
end up with you slice things up in a way

378
00:16:01,429 --> 00:16:02,839
which doesn't make sense

379
00:16:02,839 --> 00:16:04,999
next week it might have made sense for

380
00:16:04,999 --> 00:16:06,169
the changes now but it doesn't make

381
00:16:06,169 --> 00:16:09,019
sense later and especially if you're

382
00:16:09,019 --> 00:16:10,519
building things library first like I was

383
00:16:10,519 --> 00:16:13,009
the longer you leave integration with

384
00:16:13,009 --> 00:16:15,199
your application the greater the chance

385
00:16:15,199 --> 00:16:17,299
that you're going to discover that the

386
00:16:17,299 --> 00:16:18,649
thing that you're building doesn't make

387
00:16:18,649 --> 00:16:19,970
any sense

388
00:16:19,970 --> 00:16:24,889
and one of the times when I realized how

389
00:16:24,889 --> 00:16:28,369
bad my my first attempts were was at

390
00:16:28,369 --> 00:16:31,999
purgatory so I've been very very fond

391
00:16:31,999 --> 00:16:35,299
memories of doing toad retreats and we

392
00:16:35,299 --> 00:16:37,039
did one for death vestager who actually

393
00:16:37,039 --> 00:16:39,709
came along to that couple people one

394
00:16:39,709 --> 00:16:43,369
okay there we go so that's good

395
00:16:43,369 --> 00:16:45,199
more people should go next time there's

396
00:16:45,199 --> 00:16:46,579
one make sure you go to this because it

397
00:16:46,579 --> 00:16:48,350
was really eye-opening for me when when

398
00:16:48,350 --> 00:16:52,149
I went to code read a few years ago

399
00:16:52,149 --> 00:16:54,229
between 2012 and 2015

400
00:16:54,229 --> 00:16:58,100
I realized so you've got the the idea of

401
00:16:58,100 --> 00:16:59,689
a code retreat is that you've got 45

402
00:16:59,689 --> 00:17:02,659
minutes to try and implement a very

403
00:17:02,659 --> 00:17:04,699
simple algorithm using test-driven

404
00:17:04,699 --> 00:17:08,209
development and after the 45 minutes you

405
00:17:08,209 --> 00:17:11,000
delete your code and pause briefly for

406
00:17:11,000 --> 00:17:13,850
reflection and then you find a new

407
00:17:13,850 --> 00:17:15,169
partner I'm sorry you're doing it all in

408
00:17:15,169 --> 00:17:17,299
pair programming you find a new partner

409
00:17:17,299 --> 00:17:19,909
and then you repeat and so over the

410
00:17:19,909 --> 00:17:21,379
course of the day you solve the same

411
00:17:21,379 --> 00:17:23,689
problem over and over again maybe four

412
00:17:23,689 --> 00:17:25,789
or five times and the general experience

413
00:17:25,789 --> 00:17:27,470
seems to be that everybody starts out

414
00:17:27,470 --> 00:17:31,009
building like classes and all this just

415
00:17:31,009 --> 00:17:32,899
boilerplate rubbish you know you'll see

416
00:17:32,899 --> 00:17:35,980
things with accesses and pretty much

417
00:17:35,980 --> 00:17:39,679
everything except for implementing the

418
00:17:39,679 --> 00:17:40,790
four

419
00:17:40,790 --> 00:17:42,260
properties of this algorithm and I

420
00:17:42,260 --> 00:17:43,940
remember there was one group who said oh

421
00:17:43,940 --> 00:17:45,800
yeah know what we're nearly done we're

422
00:17:45,800 --> 00:17:46,940
nearly done we just need to implement

423
00:17:46,940 --> 00:17:49,700
the algorithm now and it's like that was

424
00:17:49,700 --> 00:17:52,580
that's where you should have started and

425
00:17:52,580 --> 00:17:54,770
so they were building all these pieces

426
00:17:54,770 --> 00:17:56,450
and I was building all these pieces not

427
00:17:56,450 --> 00:17:58,520
that's not just everybody else and then

428
00:17:58,520 --> 00:18:00,260
it made me realize it scared the

429
00:18:00,260 --> 00:18:02,000
out of me because I was like everything

430
00:18:02,000 --> 00:18:03,980
that I build is usually just on the

431
00:18:03,980 --> 00:18:06,020
first attempt and I'm usually I'm

432
00:18:06,020 --> 00:18:08,090
probably injecting all this additional

433
00:18:08,090 --> 00:18:10,190
complexity into my applications that I

434
00:18:10,190 --> 00:18:14,770
never go back and delete and revisit so

435
00:18:14,770 --> 00:18:19,880
this is I open it so I guess the

436
00:18:19,880 --> 00:18:22,130
suggestion here is that if you're going

437
00:18:22,130 --> 00:18:25,190
to be don't be don't get Precious about

438
00:18:25,190 --> 00:18:26,480
your code

439
00:18:26,480 --> 00:18:31,040
there's the often we try to make our

440
00:18:31,040 --> 00:18:33,380
code live for as long as possible so as

441
00:18:33,380 --> 00:18:34,970
you know we make it extensible and we

442
00:18:34,970 --> 00:18:38,330
make it robust all this kind of stuff

443
00:18:38,330 --> 00:18:41,030
but perhaps a better solution is to

444
00:18:41,030 --> 00:18:44,720
start by well first validate that this

445
00:18:44,720 --> 00:18:46,670
thing even needs to exist validate that

446
00:18:46,670 --> 00:18:50,700
it's a good solution to the problem and

447
00:18:50,710 --> 00:18:53,930
if it's not revisited delete your code

448
00:18:53,930 --> 00:18:57,650
start again I guess yeah point is don't

449
00:18:57,650 --> 00:18:59,210
be don't be afraid to tweet your code

450
00:18:59,210 --> 00:19:02,260
start over and there's a good anecdote

451
00:19:02,260 --> 00:19:06,230
from me I remember there was a Smith

452
00:19:06,230 --> 00:19:08,390
days working on the speech I was late I

453
00:19:08,390 --> 00:19:10,820
couldn't get this thing done I made it

454
00:19:10,820 --> 00:19:13,520
really hard and I was really stressed

455
00:19:13,520 --> 00:19:15,710
about it and I'd written some tests and

456
00:19:15,710 --> 00:19:17,180
in the teardown of the techno in the

457
00:19:17,180 --> 00:19:20,990
setup of the tests I are what the you

458
00:19:20,990 --> 00:19:23,090
know the the the working folder and then

459
00:19:23,090 --> 00:19:26,180
you know keep working I'll keep going

460
00:19:26,180 --> 00:19:28,040
with the tests what I didn't realize is

461
00:19:28,040 --> 00:19:29,660
I've accidentally put too many dots in

462
00:19:29,660 --> 00:19:32,330
my which folder to delete and it deleted

463
00:19:32,330 --> 00:19:34,880
my project folder and because I was

464
00:19:34,880 --> 00:19:36,950
stressed I hadn't been you know obeying

465
00:19:36,950 --> 00:19:38,750
best practices and I hadn't committed

466
00:19:38,750 --> 00:19:43,020
for maybe two or three days

467
00:19:43,030 --> 00:19:45,300
and to leave my get a folder of course

468
00:19:45,300 --> 00:19:48,130
so that was just gone it was just

469
00:19:48,130 --> 00:19:50,140
nothing sorry I had been committing but

470
00:19:50,140 --> 00:19:51,310
I hadn't been pushing because I didn't

471
00:19:51,310 --> 00:19:53,410
want the my peers to see my crappy

472
00:19:53,410 --> 00:19:55,480
attempts at doing something complicated

473
00:19:55,480 --> 00:19:57,510
anyway

474
00:19:57,510 --> 00:20:00,130
deadline was looming I I think I had to

475
00:20:00,130 --> 00:20:03,580
demo this thing at 11 p.m. and I managed

476
00:20:03,580 --> 00:20:06,130
to pull it together in you know four or

477
00:20:06,130 --> 00:20:08,860
five hours and I was like well what the

478
00:20:08,860 --> 00:20:10,780
hell have I been doing why why did I

479
00:20:10,780 --> 00:20:12,550
spend two or three days and what had

480
00:20:12,550 --> 00:20:14,110
happened is that over the two or three

481
00:20:14,110 --> 00:20:17,350
days I'd realize I'd gotten a proper

482
00:20:17,350 --> 00:20:19,210
understanding of the problem and I ended

483
00:20:19,210 --> 00:20:21,130
up I was more fighting my crappy

484
00:20:21,130 --> 00:20:23,410
implementation rather than actually

485
00:20:23,410 --> 00:20:26,980
solving the problem so why didn't I

486
00:20:26,980 --> 00:20:28,240
delete my code earlier that's the

487
00:20:28,240 --> 00:20:32,080
question so over engineering the adding

488
00:20:32,080 --> 00:20:34,090
of unnecessary complexity this is

489
00:20:34,090 --> 00:20:36,190
something we all do something we should

490
00:20:36,190 --> 00:20:38,890
try to avoid picking emojis for these

491
00:20:38,890 --> 00:20:41,050
slides is very difficult that may look

492
00:20:41,050 --> 00:20:43,570
like a fat man that's fallen over but

493
00:20:43,570 --> 00:20:46,150
it's actually it's a baby and I thought

494
00:20:46,150 --> 00:20:48,900
that this was a good example of

495
00:20:48,900 --> 00:20:51,160
over-engineering at least in at least in

496
00:20:51,160 --> 00:20:54,310
Australia we often have people often use

497
00:20:54,310 --> 00:20:57,880
they make a baby to save a relationship

498
00:20:57,880 --> 00:20:59,470
and I thought that was a good example of

499
00:20:59,470 --> 00:21:04,060
over-engineering don't do that

500
00:21:04,060 --> 00:21:06,910
over-engineering it's probably a simple

501
00:21:06,910 --> 00:21:11,670
solution just talk to each other when is

502
00:21:11,670 --> 00:21:14,620
complexity kills projects this is like

503
00:21:14,620 --> 00:21:16,990
the leading source of project death is

504
00:21:16,990 --> 00:21:20,610
complexity and you want to avoid it and

505
00:21:20,610 --> 00:21:24,190
but you know because complexity

506
00:21:24,190 --> 00:21:25,600
increases the likelihood that you're

507
00:21:25,600 --> 00:21:27,250
going to end up with bugs security

508
00:21:27,250 --> 00:21:29,380
problems it creates it stops you from

509
00:21:29,380 --> 00:21:31,980
being able to add additional features

510
00:21:31,980 --> 00:21:35,470
it's it's the shittest so we want to

511
00:21:35,470 --> 00:21:40,020
avoid complexity on any level

512
00:21:40,020 --> 00:21:43,060
over-engineering adds complexity and I

513
00:21:43,060 --> 00:21:45,550
found that at least in my circles that

514
00:21:45,550 --> 00:21:47,350
over-engineering is far more common than

515
00:21:47,350 --> 00:21:52,780
under engineering if you're

516
00:21:52,790 --> 00:21:55,070
if you're if you've been reading books

517
00:21:55,070 --> 00:21:57,320
about like programming a lot of the

518
00:21:57,320 --> 00:21:59,090
content that you read is about

519
00:21:59,090 --> 00:22:01,190
preventing under engineering they tell

520
00:22:01,190 --> 00:22:02,690
you how to break things up and you know

521
00:22:02,690 --> 00:22:04,010
single responsibility principle all

522
00:22:04,010 --> 00:22:07,430
those kind of stuff but there there's

523
00:22:07,430 --> 00:22:10,070
not a huge amount of advice on how do we

524
00:22:10,070 --> 00:22:12,350
how do you prevent people from taking

525
00:22:12,350 --> 00:22:16,330
that too far because often yeah the the

526
00:22:16,330 --> 00:22:18,770
simple solution for today's problem is

527
00:22:18,770 --> 00:22:20,000
not a simple solution for tomorrow's

528
00:22:20,000 --> 00:22:25,520
problem and biggest yeah if you if you

529
00:22:25,520 --> 00:22:28,970
if you're doing over engineering this is

530
00:22:28,970 --> 00:22:31,040
going to be far more costly than under

531
00:22:31,040 --> 00:22:33,950
engineering this is because the wrong

532
00:22:33,950 --> 00:22:37,340
structure is going to be more costly to

533
00:22:37,340 --> 00:22:39,590
change than having no structure at all

534
00:22:39,590 --> 00:22:41,360
this is something that I found quite

535
00:22:41,360 --> 00:22:44,000
often when I work on like all rubbish

536
00:22:44,000 --> 00:22:45,500
applications

537
00:22:45,500 --> 00:22:47,390
I find myself able to be a lot more

538
00:22:47,390 --> 00:22:49,360
productive as long as they have tests

539
00:22:49,360 --> 00:22:53,540
because they're you know if people are

540
00:22:53,540 --> 00:22:55,310
just writing big long dirty methods and

541
00:22:55,310 --> 00:22:56,900
it's disgusting you hate yourself by it

542
00:22:56,900 --> 00:22:59,300
went by contributing to this mess but I

543
00:22:59,300 --> 00:23:00,200
find myself

544
00:23:00,200 --> 00:23:03,500
weirdly productive then if I'd gone in

545
00:23:03,500 --> 00:23:06,500
and tried to make things good make

546
00:23:06,500 --> 00:23:10,420
things structured make things awesome so

547
00:23:10,420 --> 00:23:13,010
structure can be easily extracted from

548
00:23:13,010 --> 00:23:16,130
no structure but incorrect structure you

549
00:23:16,130 --> 00:23:18,130
need first you first need to reverse it

550
00:23:18,130 --> 00:23:22,580
before you can change it so the way that

551
00:23:22,580 --> 00:23:24,440
I've been working these days is trying

552
00:23:24,440 --> 00:23:26,660
to make the least amount of decisions

553
00:23:26,660 --> 00:23:28,700
possible and just let the code kind of

554
00:23:28,700 --> 00:23:31,010
be a little bit crap it's ok because

555
00:23:31,010 --> 00:23:33,320
you're probably not going to make a good

556
00:23:33,320 --> 00:23:34,880
decision about how to make it less crap

557
00:23:34,880 --> 00:23:40,190
now make it later defer decisions if

558
00:23:40,190 --> 00:23:44,060
your thought the thinking with that it's

559
00:23:44,060 --> 00:23:46,640
like a if you're getting if somebody

560
00:23:46,640 --> 00:23:48,260
hands you a grub you don't know whether

561
00:23:48,260 --> 00:23:50,920
you're gonna get a moth or a butterfly

562
00:23:50,920 --> 00:23:54,890
so so you don't know whether do I do I

563
00:23:54,890 --> 00:24:00,980
keep this or do I put it outside so yeah

564
00:24:00,980 --> 00:24:02,990
the further making important decisions

565
00:24:02,990 --> 00:24:04,910
for as long as you can because you will

566
00:24:04,910 --> 00:24:06,190
always have more in from

567
00:24:06,190 --> 00:24:08,409
later and this will help you make better

568
00:24:08,409 --> 00:24:10,870
decisions so every decision that you

569
00:24:10,870 --> 00:24:12,669
make now is going to be a worse decision

570
00:24:12,669 --> 00:24:14,350
than a decision that you make later so

571
00:24:14,350 --> 00:24:16,090
try not to make decisions

572
00:24:16,090 --> 00:24:19,269
just leave it leave it

573
00:24:19,269 --> 00:24:21,340
and the best way you can leave it is by

574
00:24:21,340 --> 00:24:24,039
not well this is pretty much the exact

575
00:24:24,039 --> 00:24:25,450
same point drawing pencil before you

576
00:24:25,450 --> 00:24:30,919
join Inc make sure that you haven't

577
00:24:30,929 --> 00:24:35,190
don't don't get not too much structure

578
00:24:35,190 --> 00:24:37,870
this is something this particular point

579
00:24:37,870 --> 00:24:40,210
actually something that I discovered

580
00:24:40,210 --> 00:24:42,159
before I used to I wanted to be a

581
00:24:42,159 --> 00:24:47,230
musician and I was working with a guy

582
00:24:47,230 --> 00:24:50,889
and he was like Tim you never finished a

583
00:24:50,889 --> 00:24:52,779
song you end up with just working on a

584
00:24:52,779 --> 00:24:54,879
little loop I was like yeah it's a good

585
00:24:54,879 --> 00:24:56,740
loop but that's not a song you know

586
00:24:56,740 --> 00:25:00,460
we're trying to sell songs and I'd be

587
00:25:00,460 --> 00:25:02,470
working for like hours just trying to

588
00:25:02,470 --> 00:25:04,509
get like make sure the snare was

589
00:25:04,509 --> 00:25:05,950
compressed correctly you had the right

590
00:25:05,950 --> 00:25:07,960
EQ and you know because once I get the

591
00:25:07,960 --> 00:25:09,549
good loop then I can make the song but

592
00:25:09,549 --> 00:25:11,169
what ends up happening is you get so

593
00:25:11,169 --> 00:25:13,799
focused on this loop that you have no

594
00:25:13,799 --> 00:25:16,090
perspective of the big picture of well

595
00:25:16,090 --> 00:25:17,440
what does this even look like in the

596
00:25:17,440 --> 00:25:19,330
context of a song and now I have a whole

597
00:25:19,330 --> 00:25:21,879
library of just loops they're not songs

598
00:25:21,879 --> 00:25:23,409
there and there's nothing I can do about

599
00:25:23,409 --> 00:25:24,639
them because I can't think about them in

600
00:25:24,639 --> 00:25:28,149
the context of a song so the idea here

601
00:25:28,149 --> 00:25:30,519
is that what this guy's just said Tim

602
00:25:30,519 --> 00:25:34,059
you are not allowed to use a compressor

603
00:25:34,059 --> 00:25:35,950
no let's use EQ until you have at least

604
00:25:35,950 --> 00:25:39,299
have a song structure in place and

605
00:25:39,299 --> 00:25:41,350
instantly as soon as I had the song

606
00:25:41,350 --> 00:25:43,330
structure in place I was able to put

607
00:25:43,330 --> 00:25:44,440
together songs that weren't good songs

608
00:25:44,440 --> 00:25:46,299
but there were actual songs are better

609
00:25:46,299 --> 00:25:48,190
than loops and then later I could come

610
00:25:48,190 --> 00:25:50,049
back and fix the loops and change stuff

611
00:25:50,049 --> 00:25:53,379
and what ended up happening was don't

612
00:25:53,379 --> 00:25:56,590
worry about if the thing that you put

613
00:25:56,590 --> 00:25:58,210
into your code now it doesn't have to be

614
00:25:58,210 --> 00:25:59,950
there forever you can delete it it's

615
00:25:59,950 --> 00:26:01,840
just like a starting point the you know

616
00:26:01,840 --> 00:26:04,330
the I would just write the crappiest

617
00:26:04,330 --> 00:26:06,399
bassline I possibly good just to get me

618
00:26:06,399 --> 00:26:07,870
a starting point something to build on

619
00:26:07,870 --> 00:26:09,639
and you should do the same thing in your

620
00:26:09,639 --> 00:26:11,379
code just get something to start with

621
00:26:11,379 --> 00:26:17,080
that you can build on top of

622
00:26:17,090 --> 00:26:21,100
when you're building code you're often

623
00:26:21,100 --> 00:26:23,690
trying to organize things by adding

624
00:26:23,690 --> 00:26:27,220
abstractions and the abstractions will

625
00:26:27,220 --> 00:26:29,300
increase sorry

626
00:26:29,300 --> 00:26:31,130
they'll decrease to local complexity so

627
00:26:31,130 --> 00:26:33,230
they solve the small problem while

628
00:26:33,230 --> 00:26:35,690
increasing the the global complexity so

629
00:26:35,690 --> 00:26:39,650
a good example is if there's a project

630
00:26:39,650 --> 00:26:41,480
an open-source project I guess I won't

631
00:26:41,480 --> 00:26:43,520
mention it but there's an open-source

632
00:26:43,520 --> 00:26:45,050
project that I was working with recently

633
00:26:45,050 --> 00:26:49,220
which had one function per file and this

634
00:26:49,220 --> 00:26:51,800
is it had a hell of a lot of functions

635
00:26:51,800 --> 00:26:53,960
and this was very difficult to actually

636
00:26:53,960 --> 00:26:57,410
understand like to actually figure out

637
00:26:57,410 --> 00:26:59,210
what was going on in the program you

638
00:26:59,210 --> 00:27:01,430
have to open file file and then you have

639
00:27:01,430 --> 00:27:03,050
a file which is just all it's doing is

640
00:27:03,050 --> 00:27:05,000
requiring some other file and it's just

641
00:27:05,000 --> 00:27:06,680
you're following this horrible endless

642
00:27:06,680 --> 00:27:11,660
chain of complexity and it's very

643
00:27:11,660 --> 00:27:13,970
frustrating because it's the whole

644
00:27:13,970 --> 00:27:16,010
concept of can't see the forest for the

645
00:27:16,010 --> 00:27:21,320
trees so every every time you add an

646
00:27:21,320 --> 00:27:24,410
abstraction it adds to the global

647
00:27:24,410 --> 00:27:27,260
complexity so just be aware of that and

648
00:27:27,260 --> 00:27:31,420
try to reduce complexity everywhere

649
00:27:31,420 --> 00:27:34,790
because we often find ourselves building

650
00:27:34,790 --> 00:27:36,350
the wrong thing for the right reasons so

651
00:27:36,350 --> 00:27:38,480
we can justify building our abstract

652
00:27:38,480 --> 00:27:42,290
function factory factory but you know it

653
00:27:42,290 --> 00:27:44,480
makes sense it'll you know it'll make

654
00:27:44,480 --> 00:27:46,340
things easier in the long run to have

655
00:27:46,340 --> 00:27:49,430
this thing but perhaps a simpler

656
00:27:49,430 --> 00:27:51,550
solution would have worked and there's I

657
00:27:51,550 --> 00:27:54,350
have to like that there's probably

658
00:27:54,350 --> 00:27:56,060
people who know when I'm what slide I'm

659
00:27:56,060 --> 00:28:06,200
gonna bring up next to xkcd comic

660
00:28:06,210 --> 00:28:08,490
and this is what engineers do all the

661
00:28:08,490 --> 00:28:11,190
time the the alt text here is I find

662
00:28:11,190 --> 00:28:13,049
that when someone's taking time to do

663
00:28:13,049 --> 00:28:14,730
something right in the present they're a

664
00:28:14,730 --> 00:28:16,679
perfectionist with no ability to

665
00:28:16,679 --> 00:28:19,259
prioritize whereas when someone took

666
00:28:19,259 --> 00:28:20,789
time to do something right in the past

667
00:28:20,789 --> 00:28:22,649
there are master artisan of great

668
00:28:22,649 --> 00:28:26,399
foresight so but I think this is the

669
00:28:26,399 --> 00:28:28,049
this is the kind of thing that we as

670
00:28:28,049 --> 00:28:30,690
engineers do all the time and it's

671
00:28:30,690 --> 00:28:32,190
horrible and we should stop this

672
00:28:32,190 --> 00:28:34,200
so pointers build the simplest thing

673
00:28:34,200 --> 00:28:38,279
that works and sometimes a good rule

674
00:28:38,279 --> 00:28:41,039
that I find for trying to make sure that

675
00:28:41,039 --> 00:28:42,860
I build the simplest thing that works is

676
00:28:42,860 --> 00:28:46,110
flat is better than nested and this is

677
00:28:46,110 --> 00:28:48,330
this is one of my favorite mantras

678
00:28:48,330 --> 00:28:50,909
because it you're able to use this thing

679
00:28:50,909 --> 00:28:55,320
to guide design decisions all the way

680
00:28:55,320 --> 00:28:57,629
from statement level all the way up to

681
00:28:57,629 --> 00:29:01,529
package level so for example at the

682
00:29:01,529 --> 00:29:03,059
statement level you should try to avoid

683
00:29:03,059 --> 00:29:07,200
complex chains of if if-else logic that

684
00:29:07,200 --> 00:29:09,749
sucks at function level you shouldn't

685
00:29:09,749 --> 00:29:12,210
have like nested callbacks class level

686
00:29:12,210 --> 00:29:13,499
you shouldn't have you know multiple

687
00:29:13,499 --> 00:29:15,090
levels of inheritance these are the

688
00:29:15,090 --> 00:29:18,029
examples but the idea is that whenever

689
00:29:18,029 --> 00:29:20,610
you have a choice between a nested

690
00:29:20,610 --> 00:29:22,499
structure and a flat structure you

691
00:29:22,499 --> 00:29:24,149
should probably always pick the flat

692
00:29:24,149 --> 00:29:28,019
structure so because the simplest thing

693
00:29:28,019 --> 00:29:33,210
is probably flat so back to what this

694
00:29:33,210 --> 00:29:35,869
talks about modular versus monolith

695
00:29:35,869 --> 00:29:39,840
being somebody I've built things purely

696
00:29:39,840 --> 00:29:44,490
monolith and purely modular the projects

697
00:29:44,490 --> 00:29:46,320
that I built purely modular are still in

698
00:29:46,320 --> 00:29:48,169
development

699
00:29:48,169 --> 00:29:51,119
so I think that the sweet spots probably

700
00:29:51,119 --> 00:29:55,619
somewhere in the middle so I don't know

701
00:29:55,619 --> 00:30:00,139
that's a good name but but maybe maybe

702
00:30:00,139 --> 00:30:02,519
point is we should try to avoid

703
00:30:02,519 --> 00:30:06,200
premature modular ization stop trying to

704
00:30:06,200 --> 00:30:09,840
architect things too much in advance

705
00:30:09,840 --> 00:30:15,710
just just simplest thing that'll work

706
00:30:15,710 --> 00:30:17,090
and often the simple thing that will

707
00:30:17,090 --> 00:30:18,799
work is to build a monolith

708
00:30:18,799 --> 00:30:21,259
this is probably a statement which I in

709
00:30:21,259 --> 00:30:23,539
2012 I wouldn't have thought I would

710
00:30:23,539 --> 00:30:26,149
ever be making but I truly believe in

711
00:30:26,149 --> 00:30:28,759
this now I'm converted and the reason

712
00:30:28,759 --> 00:30:32,779
why the reason why is because yeah we

713
00:30:32,779 --> 00:30:35,120
have all these we have all these other

714
00:30:35,120 --> 00:30:39,830
options to use before we get to breaking

715
00:30:39,830 --> 00:30:46,429
things out into external packages so and

716
00:30:46,429 --> 00:30:49,070
the other thing is a nice and really

717
00:30:49,070 --> 00:30:51,289
nice thing I think about what Facebook

718
00:30:51,289 --> 00:30:55,519
and Google there's a bunch of other big

719
00:30:55,519 --> 00:30:57,529
companies when they when big companies

720
00:30:57,529 --> 00:30:59,509
do open source they don't just open

721
00:30:59,509 --> 00:31:00,830
source everything that they're doing

722
00:31:00,830 --> 00:31:04,009
that might solve a problem they solve

723
00:31:04,009 --> 00:31:05,629
the problem internally first make sure

724
00:31:05,629 --> 00:31:08,539
that they get it right and then and then

725
00:31:08,539 --> 00:31:10,730
they open source it and I was thinking

726
00:31:10,730 --> 00:31:12,679
like if you're selling somebody a toilet

727
00:31:12,679 --> 00:31:14,299
you want to make sure that it works

728
00:31:14,299 --> 00:31:16,820
before you give it to them

729
00:31:16,820 --> 00:31:20,879
otherwise they're gonna be very unhappy

730
00:31:20,889 --> 00:31:24,139
because one of the problems with NPM at

731
00:31:24,139 --> 00:31:26,090
the moment is that there's an awful lot

732
00:31:26,090 --> 00:31:30,919
of abandonware so these are things which

733
00:31:30,919 --> 00:31:33,169
people have built to solve which they

734
00:31:33,169 --> 00:31:34,309
thought they were going to use to solve

735
00:31:34,309 --> 00:31:36,980
such as such a problem but it turns out

736
00:31:36,980 --> 00:31:41,029
that you know they they didn't need it

737
00:31:41,029 --> 00:31:43,940
or it wasn't the right fit or whatever

738
00:31:43,940 --> 00:31:46,100
there's there's an awful lot of

739
00:31:46,100 --> 00:31:48,320
abandonware on NPM and this sucks

740
00:31:48,320 --> 00:31:52,129
and I own a lot of bandim where it's

741
00:31:52,129 --> 00:31:53,929
because it's very hard to maintain or

742
00:31:53,929 --> 00:31:55,639
even make good decisions about the

743
00:31:55,639 --> 00:31:58,549
direction of a package that you yourself

744
00:31:58,549 --> 00:32:00,919
don't use I'm very happy for other

745
00:32:00,919 --> 00:32:05,149
people to use my packages but if I don't

746
00:32:05,149 --> 00:32:06,559
use it I'm not in a very good position

747
00:32:06,559 --> 00:32:09,950
to be making good decisions about it so

748
00:32:09,950 --> 00:32:11,600
and I haven't got this in the slide but

749
00:32:11,600 --> 00:32:13,669
there is a good there's a good community

750
00:32:13,669 --> 00:32:17,990
driven solution for this which is it's

751
00:32:17,990 --> 00:32:20,899
called open open source so if you get it

752
00:32:20,899 --> 00:32:26,149
open open source dot-com net there's a

753
00:32:26,149 --> 00:32:29,770
manifesto there and the basic idea is

754
00:32:29,770 --> 00:32:32,420
especially in the situation that you are

755
00:32:32,420 --> 00:32:34,670
no longer maintaining something when you

756
00:32:34,670 --> 00:32:35,720
no longer interested in maintaining

757
00:32:35,720 --> 00:32:38,270
something but even if you are a good

758
00:32:38,270 --> 00:32:42,590
policy to adopt is adopting you

759
00:32:42,590 --> 00:32:44,840
contribute anybody who's like interested

760
00:32:44,840 --> 00:32:47,390
in being sorry anybody who makes a

761
00:32:47,390 --> 00:32:49,220
significant contribution to the project

762
00:32:49,220 --> 00:32:53,840
becomes a contributor and then that's

763
00:32:53,840 --> 00:32:55,640
additional resources that your project

764
00:32:55,640 --> 00:32:58,370
now has to field request publish new

765
00:32:58,370 --> 00:33:01,280
versions etc so perhaps after the point

766
00:33:01,280 --> 00:33:02,990
that you're when you're no longer

767
00:33:02,990 --> 00:33:05,600
interested in whatever it is that you're

768
00:33:05,600 --> 00:33:08,960
building somebody else can pick it up

769
00:33:08,960 --> 00:33:11,930
and run with it and this works there's

770
00:33:11,930 --> 00:33:13,700
this amazing thing which happens when

771
00:33:13,700 --> 00:33:17,720
you give somebody commit rights to your

772
00:33:17,720 --> 00:33:19,580
project you it might be a likes of a

773
00:33:19,580 --> 00:33:20,960
scary thing you think all they're gonna

774
00:33:20,960 --> 00:33:22,480
delete it and replace it with

775
00:33:22,480 --> 00:33:26,600
CoffeeScript but in reality this doesn't

776
00:33:26,600 --> 00:33:28,610
happen when you give people

777
00:33:28,610 --> 00:33:30,860
responsibility they generally take that

778
00:33:30,860 --> 00:33:33,800
seriously and you you actually see an

779
00:33:33,800 --> 00:33:35,530
increase in activity because they're

780
00:33:35,530 --> 00:33:38,420
they feel like they need to live up to

781
00:33:38,420 --> 00:33:40,490
this responsibility that you've given

782
00:33:40,490 --> 00:33:44,600
them so I found that I haven't done this

783
00:33:44,600 --> 00:33:46,820
a huge amount on on my projects but I

784
00:33:46,820 --> 00:33:48,890
know that it's worked very well for a

785
00:33:48,890 --> 00:33:52,790
lot of other people and in fact with the

786
00:33:52,790 --> 00:33:54,740
author of Express's departure from the

787
00:33:54,740 --> 00:33:56,720
j/s community this is the open

788
00:33:56,720 --> 00:33:58,370
open-source model is basically what's

789
00:33:58,370 --> 00:34:00,080
happened to all of his packages anybody

790
00:34:00,080 --> 00:34:02,600
who made significant significant

791
00:34:02,600 --> 00:34:06,050
contributions through those packages are

792
00:34:06,050 --> 00:34:08,690
now maintainer

793
00:34:08,690 --> 00:34:11,899
so that's nice but the point is we're

794
00:34:11,899 --> 00:34:14,450
talking about over-engineering let's do

795
00:34:14,450 --> 00:34:16,760
this of it build the simplest thing that

796
00:34:16,760 --> 00:34:24,260
works oh yeah saxophone and avoid

797
00:34:24,260 --> 00:34:28,460
unnecessary complexity so the ball so I

798
00:34:28,460 --> 00:34:30,320
was thinking here I'm justifying my

799
00:34:30,320 --> 00:34:34,850
emoji use here when you're at home and

800
00:34:34,850 --> 00:34:37,220
nobody's there do you even need to use a

801
00:34:37,220 --> 00:34:39,830
bowl just eat it out of the can do you

802
00:34:39,830 --> 00:34:41,570
even need to heat it up

803
00:34:41,570 --> 00:34:44,899
open that lid just eat it avoid

804
00:34:44,899 --> 00:34:50,179
unnecessary complexity thank you thank

805
00:34:50,179 --> 00:34:55,899
you Tim thank you so much questions

806
00:34:55,899 --> 00:35:05,990
questions okay maybe a couple I just

807
00:35:05,990 --> 00:35:08,500
want to come in in the Oscar poll

808
00:35:08,500 --> 00:35:11,360
because something about over engineering

809
00:35:11,360 --> 00:35:13,790
and under engineering because I have

810
00:35:13,790 --> 00:35:16,730
found that over engineering usually the

811
00:35:16,730 --> 00:35:18,650
consequence of the prevails

812
00:35:18,650 --> 00:35:20,840
under engineering so these things that

813
00:35:20,840 --> 00:35:22,760
people swim between the two ends and

814
00:35:22,760 --> 00:35:25,820
they never find the moderate meter for

815
00:35:25,820 --> 00:35:32,090
example I have seen 116 like 16,000

816
00:35:32,090 --> 00:35:34,520
lines over in one just keep our menu

817
00:35:34,520 --> 00:35:37,250
right and so that's why that does a

818
00:35:37,250 --> 00:35:39,890
people are or people try to say all the

819
00:35:39,890 --> 00:35:42,500
things but apparently they failed so I

820
00:35:42,500 --> 00:35:45,260
think there's a point another question

821
00:35:45,260 --> 00:35:47,900
maybe you can find some middle point

822
00:35:47,900 --> 00:35:51,650
that you have no no that is really hard

823
00:35:51,650 --> 00:35:53,900
like the point is is that balancing this

824
00:35:53,900 --> 00:35:57,470
stuff is hard but I guess the thing is

825
00:35:57,470 --> 00:36:00,320
is that a lot of over engineering does

826
00:36:00,320 --> 00:36:05,240
come from being yeah it's reactionary so

827
00:36:05,240 --> 00:36:06,980
you get burnt by something in the past

828
00:36:06,980 --> 00:36:08,900
like frameworks and then you like never

829
00:36:08,900 --> 00:36:11,060
again rally against them destroy every

830
00:36:11,060 --> 00:36:14,330
single framework there is so but maybe

831
00:36:14,330 --> 00:36:17,660
that's a overreaction so you know maybe

832
00:36:17,660 --> 00:36:19,970
the best solution I don't know what the

833
00:36:19,970 --> 00:36:21,980
best solution is it's it's hard balance

834
00:36:21,980 --> 00:36:31,070
right or one last question I'll be quick

835
00:36:31,070 --> 00:36:34,220
yeah first of all awesome talk a lot of

836
00:36:34,220 --> 00:36:37,790
great insights couldn't agree more and I

837
00:36:37,790 --> 00:36:42,200
think that another thing that might

838
00:36:42,200 --> 00:36:45,770
worth referring to or like mentioning is

839
00:36:45,770 --> 00:36:47,900
software longer David long activity

840
00:36:47,900 --> 00:36:50,780
because a lot of times we just write on

841
00:36:50,780 --> 00:36:52,880
something and we hope that at some point

842
00:36:52,880 --> 00:36:53,990
in the future it will be

843
00:36:53,990 --> 00:36:57,619
useful for someone but in reality if we

844
00:36:57,619 --> 00:36:59,480
write software for a living if we get

845
00:36:59,480 --> 00:37:01,850
paid for it even at the

846
00:37:01,850 --> 00:37:03,830
best-case-scenario it's unlikely that

847
00:37:03,830 --> 00:37:07,160
our our code will outlive more than five

848
00:37:07,160 --> 00:37:12,950
years yeah it shouldn't and I guess it's

849
00:37:12,950 --> 00:37:14,390
probably a deleted slide in there about

850
00:37:14,390 --> 00:37:18,730
this but one of the things which I find

851
00:37:18,730 --> 00:37:22,400
best is just to yeah don't don't design

852
00:37:22,400 --> 00:37:24,050
your code for extensibility design your

853
00:37:24,050 --> 00:37:26,710
code so that can be easily deleted so

854
00:37:26,710 --> 00:37:28,970
instead of instead of trying trying to

855
00:37:28,970 --> 00:37:31,010
force your code to live forever force

856
00:37:31,010 --> 00:37:32,750
your code to be deleted quickly

857
00:37:32,750 --> 00:37:36,440
I think that's policy

858
00:37:36,440 --> 00:37:38,990
I remember this is this is saying that

859
00:37:38,990 --> 00:37:41,330
one of the virtual programmer is being

860
00:37:41,330 --> 00:37:45,020
lazy lazy arrogant selfish I think that

861
00:37:45,020 --> 00:37:48,410
so do you think one of your problem is

862
00:37:48,410 --> 00:37:55,850
that you work too hard well I think

863
00:37:55,850 --> 00:37:57,830
sometimes we think we're being lazy cuz

864
00:37:57,830 --> 00:38:00,590
we'll spend like oh I don't want to I

865
00:38:00,590 --> 00:38:02,150
don't want to do find and replace in

866
00:38:02,150 --> 00:38:06,200
these files I'm going to I'm gonna write

867
00:38:06,200 --> 00:38:08,359
a tool you know this is me being lazy

868
00:38:08,359 --> 00:38:10,609
but turns out a lot of the time you

869
00:38:10,609 --> 00:38:13,520
you'll spend an hour or five hours or

870
00:38:13,520 --> 00:38:15,859
two days saving yourself five minutes

871
00:38:15,859 --> 00:38:17,930
down the road with the idea that okay

872
00:38:17,930 --> 00:38:22,520
I'm being lazy I think that's I think

873
00:38:22,520 --> 00:38:25,400
yeah we do do too much and focusing on

874
00:38:25,400 --> 00:38:28,330
just the task at hand I think is the

875
00:38:28,330 --> 00:38:29,510
important thing

876
00:38:29,510 --> 00:38:33,430
all right thank you Tim Oxley

