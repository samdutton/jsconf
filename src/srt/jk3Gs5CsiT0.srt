1
00:00:10,180 --> 00:00:12,100

so my talk will be again about

2
00:00:12,100 --> 00:00:13,990
server-side JavaScript but in contrast

3
00:00:13,990 --> 00:00:15,550
that gets to the most of the other talks

4
00:00:15,550 --> 00:00:18,910
i'm not talking about no chess but first

5
00:00:18,910 --> 00:00:20,529
a little bit of background myself so i'm

6
00:00:20,529 --> 00:00:22,660
chief software architect at the demand

7
00:00:22,660 --> 00:00:25,360
for it was a while ago a little startup

8
00:00:25,360 --> 00:00:28,420
now we're 150 people and what we're

9
00:00:28,420 --> 00:00:30,970
doing it be offering online e-commerce

10
00:00:30,970 --> 00:00:33,580
in a software service way so our

11
00:00:33,580 --> 00:00:35,860
customers don't don't have to buy

12
00:00:35,860 --> 00:00:37,809
servers run servers host server

13
00:00:37,809 --> 00:00:40,150
somewhere that just have a login they

14
00:00:40,150 --> 00:00:42,700
login that can put up their products put

15
00:00:42,700 --> 00:00:45,820
up the prices run promotions and an

16
00:00:45,820 --> 00:00:48,370
important thing is they can customize

17
00:00:48,370 --> 00:00:51,160
the website and it's not that they only

18
00:00:51,160 --> 00:00:53,440
can change the color and the icons they

19
00:00:53,440 --> 00:00:55,600
can do full fledge customization to

20
00:00:55,600 --> 00:00:58,540
really implement their brand identity

21
00:00:58,540 --> 00:01:01,149
here for example some examples for

22
00:01:01,149 --> 00:01:05,020
example the deal on london olympics 2012

23
00:01:05,020 --> 00:01:08,619
they use our system and for example this

24
00:01:08,619 --> 00:01:11,170
side is done with server-side javascript

25
00:01:11,170 --> 00:01:12,970
pulling in running the search and

26
00:01:12,970 --> 00:01:16,030
everything another example is here crops

27
00:01:16,030 --> 00:01:18,250
so maybe some of you is wearing these

28
00:01:18,250 --> 00:01:19,720
plastic shoes currently there are

29
00:01:19,720 --> 00:01:22,090
customers of us totally different

30
00:01:22,090 --> 00:01:25,360
experience then here is its Burton

31
00:01:25,360 --> 00:01:27,460
snowboard so if your snow bunny fan you

32
00:01:27,460 --> 00:01:29,229
can go to the website you can buy

33
00:01:29,229 --> 00:01:32,380
snowboards there or here one of the good

34
00:01:32,380 --> 00:01:34,119
cheap brands I have to bring it up

35
00:01:34,119 --> 00:01:35,530
because actually say and try to

36
00:01:35,530 --> 00:01:39,310
implement at that store then for I one

37
00:01:39,310 --> 00:01:41,350
here in Germany and nekem on my command

38
00:01:41,350 --> 00:01:43,659
runs on our platform the whole online

39
00:01:43,659 --> 00:01:45,159
traffic what they're doing is running

40
00:01:45,159 --> 00:01:46,450
through the platform what about should

41
00:01:46,450 --> 00:01:50,020
describe over the next minutes and last

42
00:01:50,020 --> 00:01:52,540
example as Oliver they have also known

43
00:01:52,540 --> 00:01:54,700
here in Germany and they also for

44
00:01:54,700 --> 00:01:57,130
example to have a mobile site so all you

45
00:01:57,130 --> 00:01:59,070
see it's it's not a cookie cutter

46
00:01:59,070 --> 00:02:01,329
customization and that's the question

47
00:02:01,329 --> 00:02:03,189
will come later is where we where we

48
00:02:03,189 --> 00:02:06,009
then use the server side JavaScript just

49
00:02:06,009 --> 00:02:07,869
to give you one number is overall we

50
00:02:07,869 --> 00:02:09,429
currently deliver roughly in an average

51
00:02:09,429 --> 00:02:13,030
day 40 million pages and all these pages

52
00:02:13,030 --> 00:02:14,470
are basically rear ended with a

53
00:02:14,470 --> 00:02:17,590
server-side JavaScript ok some of them

54
00:02:17,590 --> 00:02:18,420
are rendered but

55
00:02:18,420 --> 00:02:20,880
one of them are cached but a lot of them

56
00:02:20,880 --> 00:02:23,300
are really rendered that's also why I

57
00:02:23,300 --> 00:02:26,670
called this the untold story because

58
00:02:26,670 --> 00:02:28,140
we're doing this basically a little bit

59
00:02:28,140 --> 00:02:30,510
in a secret so even so now server-side

60
00:02:30,510 --> 00:02:32,550
JavaScript gets a little bit popularity

61
00:02:32,550 --> 00:02:35,100
actually be doing is quite quite for a

62
00:02:35,100 --> 00:02:37,230
lot while and we're doing is in the

63
00:02:37,230 --> 00:02:39,120
software service environment also what I

64
00:02:39,120 --> 00:02:41,069
want to like to talk about what it

65
00:02:41,069 --> 00:02:43,050
really means the constraint in a service

66
00:02:43,050 --> 00:02:45,900
night in a in a software service

67
00:02:45,900 --> 00:02:48,300
environment our constraints are there

68
00:02:48,300 --> 00:02:50,400
and what we have to what we should have

69
00:02:50,400 --> 00:02:53,580
to acknowledge it's a little bit about

70
00:02:53,580 --> 00:02:59,400
the history so everything started back

71
00:02:59,400 --> 00:03:02,250
actually in 2004 that's where we

72
00:03:02,250 --> 00:03:05,060
actually were founded as a company and

73
00:03:05,060 --> 00:03:07,590
what we did we started with an existing

74
00:03:07,590 --> 00:03:09,950
ecommerce system which was a classical

75
00:03:09,950 --> 00:03:12,870
on-premise software and we said you want

76
00:03:12,870 --> 00:03:14,489
to bring this into a software service

77
00:03:14,489 --> 00:03:16,680
environment so before customization was

78
00:03:16,680 --> 00:03:18,510
stunning done with full fledged java

79
00:03:18,510 --> 00:03:21,120
programming and we wanted to find a way

80
00:03:21,120 --> 00:03:24,150
how can we bring a customization concept

81
00:03:24,150 --> 00:03:26,070
on top of it so that people can

82
00:03:26,070 --> 00:03:28,560
configure the business logic and

83
00:03:28,560 --> 00:03:31,290
implement it on their own storefronts

84
00:03:31,290 --> 00:03:34,320
and also wanted to do things like how

85
00:03:34,320 --> 00:03:37,590
can we do background processing of jobs

86
00:03:37,590 --> 00:03:39,660
how we can do integration into back-end

87
00:03:39,660 --> 00:03:42,030
system so transferring data how can

88
00:03:42,030 --> 00:03:43,350
reduce the web service calls so

89
00:03:43,350 --> 00:03:44,640
basically everything what you typically

90
00:03:44,640 --> 00:03:46,500
have when you want to customize on the

91
00:03:46,500 --> 00:03:49,829
server so at that time it was clear we

92
00:03:49,829 --> 00:03:52,380
want to have a separate programming

93
00:03:52,380 --> 00:03:54,239
language we don't want to open up java

94
00:03:54,239 --> 00:03:56,459
java you can do just too much much

95
00:03:56,459 --> 00:03:58,739
things in the wrong way we have to run

96
00:03:58,739 --> 00:04:00,570
that thing we have to guarantee service

97
00:04:00,570 --> 00:04:03,000
level agreements so there it was clear

98
00:04:03,000 --> 00:04:04,680
that you want to put a specific

99
00:04:04,680 --> 00:04:07,620
customization language on top so

100
00:04:07,620 --> 00:04:09,150
requirements what we had this verse

101
00:04:09,150 --> 00:04:11,579
first of all they were a small team and

102
00:04:11,579 --> 00:04:13,859
wanted use something out of the box you

103
00:04:13,859 --> 00:04:15,680
wanted to use an own language

104
00:04:15,680 --> 00:04:17,850
want to use definitely something open

105
00:04:17,850 --> 00:04:19,709
source so that we can debug it that we

106
00:04:19,709 --> 00:04:22,500
can fix it it was also that we wanted to

107
00:04:22,500 --> 00:04:24,480
have a good control of the execution

108
00:04:24,480 --> 00:04:27,000
that's also one reason why we said it

109
00:04:27,000 --> 00:04:28,620
should be an interpreted language so

110
00:04:28,620 --> 00:04:30,930
that we can interfere and better

111
00:04:30,930 --> 00:04:33,480
integrate and intercept the execution

112
00:04:33,480 --> 00:04:35,910
and also because we had an existing

113
00:04:35,910 --> 00:04:37,470
large java system we wanted to have

114
00:04:37,470 --> 00:04:39,330
something which fits very well in the

115
00:04:39,330 --> 00:04:42,390
child environment absence had time clay

116
00:04:42,390 --> 00:04:45,300
JavaScript with lino had a good stable

117
00:04:45,300 --> 00:04:47,100
codebase how it's used in a lot of

118
00:04:47,100 --> 00:04:48,210
approach that we had fairly good

119
00:04:48,210 --> 00:04:51,350
confident in used to going that approach

120
00:04:51,350 --> 00:04:53,670
options would have been cheap hyphen

121
00:04:53,670 --> 00:04:55,530
project was not very active at that time

122
00:04:55,530 --> 00:04:58,050
crocus I was actually not aware it's a

123
00:04:58,050 --> 00:05:00,600
PHP interpreter in Java was not aware of

124
00:05:00,600 --> 00:05:03,540
that project at a time groovy was pretty

125
00:05:03,540 --> 00:05:05,790
coming up at that time but it was not

126
00:05:05,790 --> 00:05:07,470
finished yet so it was unclear how

127
00:05:07,470 --> 00:05:09,030
popular it would be that would have been

128
00:05:09,030 --> 00:05:10,860
another option and actually at that time

129
00:05:10,860 --> 00:05:13,380
they existed even a Java interpreter but

130
00:05:13,380 --> 00:05:15,180
that was a little bit of a skeptical

131
00:05:15,180 --> 00:05:17,610
about it so that's why we choose and

132
00:05:17,610 --> 00:05:19,620
JavaScript and as a coincident when you

133
00:05:19,620 --> 00:05:22,080
think about 2005 that's also very basic

134
00:05:22,080 --> 00:05:25,290
the whole HX started and ver basically

135
00:05:25,290 --> 00:05:27,120
JavaScript moved actually from this low

136
00:05:27,120 --> 00:05:30,030
dirty language to really a fully accept

137
00:05:30,030 --> 00:05:31,590
the length which again into a check so

138
00:05:31,590 --> 00:05:33,330
it was a good timing that you also said

139
00:05:33,330 --> 00:05:35,100
okay let's pick up JavaScript at that

140
00:05:35,100 --> 00:05:39,810
time so with that one we did one that

141
00:05:39,810 --> 00:05:42,120
overlies and we try to be not a full

142
00:05:42,120 --> 00:05:44,040
book cramming environment and just a

143
00:05:44,040 --> 00:05:45,960
little bit of customization everything

144
00:05:45,960 --> 00:05:49,080
so my only comment is was on this flush

145
00:05:49,080 --> 00:05:51,510
it away are not worth to talk about it

146
00:05:51,510 --> 00:05:54,270
and then we came up to the tutor or

147
00:05:54,270 --> 00:05:56,430
release and that's what we basically

148
00:05:56,430 --> 00:05:58,890
using since 2006 what we have basically

149
00:05:58,890 --> 00:06:02,070
in our product what you hear is just a

150
00:06:02,070 --> 00:06:04,560
little snippet out of our reference

151
00:06:04,560 --> 00:06:06,480
applications or reference application is

152
00:06:06,480 --> 00:06:09,030
very showcase a store on here's a little

153
00:06:09,030 --> 00:06:11,580
bit thing but you can see how we have a

154
00:06:11,580 --> 00:06:13,830
customer we get to the customers profile

155
00:06:13,830 --> 00:06:16,470
to the address book then we can get out

156
00:06:16,470 --> 00:06:18,120
of the address book we can get an

157
00:06:18,120 --> 00:06:21,240
address or a product list is here use

158
00:06:21,240 --> 00:06:23,430
for example as a gift registry we can

159
00:06:23,430 --> 00:06:24,070
here

160
00:06:24,070 --> 00:06:26,740
taken an address out of the address book

161
00:06:26,740 --> 00:06:28,780
inserted as the default shipping address

162
00:06:28,780 --> 00:06:30,840
so that's something very how you do then

163
00:06:30,840 --> 00:06:33,670
customization off the business logic on

164
00:06:33,670 --> 00:06:38,170
this on the server so now I want to go a

165
00:06:38,170 --> 00:06:40,300
little bit more indeed in interesting

166
00:06:40,300 --> 00:06:42,940
part is or let's start with the API

167
00:06:42,940 --> 00:06:45,370
capability so first of all it's clay you

168
00:06:45,370 --> 00:06:47,500
have took all the business objects

169
00:06:47,500 --> 00:06:49,330
available you have products you have a

170
00:06:49,330 --> 00:06:51,940
catalog you have a basket order profile

171
00:06:51,940 --> 00:06:54,550
you can have called methods on on these

172
00:06:54,550 --> 00:06:57,160
things you can run for example but your

173
00:06:57,160 --> 00:06:59,730
product searches you have there's a

174
00:06:59,730 --> 00:07:03,040
search model you just specify your your

175
00:07:03,040 --> 00:07:05,470
parameters and then you do a search you

176
00:07:05,470 --> 00:07:08,440
also need for integration we need data

177
00:07:08,440 --> 00:07:10,960
processing capabilities so what we using

178
00:07:10,960 --> 00:07:13,630
the ephah extender which Rhino supports

179
00:07:13,630 --> 00:07:15,130
were using that heavily so that

180
00:07:15,130 --> 00:07:17,590
customers can import data with it an

181
00:07:17,590 --> 00:07:21,190
export data and process the XML data for

182
00:07:21,190 --> 00:07:23,050
communication we have web servers to

183
00:07:23,050 --> 00:07:24,640
have a little bit more details about it

184
00:07:24,640 --> 00:07:27,850
you can make HTTP calls ftp calls SFTP

185
00:07:27,850 --> 00:07:30,610
calls so that people can integrate their

186
00:07:30,610 --> 00:07:33,370
back-end systems what Pierre we have

187
00:07:33,370 --> 00:07:36,550
form framework your generation we do

188
00:07:36,550 --> 00:07:38,740
click stream tracking that's all in a

189
00:07:38,740 --> 00:07:41,110
web tier and then also custom business

190
00:07:41,110 --> 00:07:42,910
objects and that's maybe something will

191
00:07:42,910 --> 00:07:44,680
quickly go a little bit more details is

192
00:07:44,680 --> 00:07:46,510
so one thing what you may be and don't

193
00:07:46,510 --> 00:07:49,630
see here you don't see sickle so there's

194
00:07:49,630 --> 00:07:51,550
a good reason why we don't provide cycle

195
00:07:51,550 --> 00:07:53,140
access because we are again we're in the

196
00:07:53,140 --> 00:07:55,300
software service environment we want to

197
00:07:55,300 --> 00:07:56,950
change the infrastructure when we want

198
00:07:56,950 --> 00:07:58,480
to decide that we go to a different

199
00:07:58,480 --> 00:08:01,090
database technology we want to do it

200
00:08:01,090 --> 00:08:02,590
without interfering to give our

201
00:08:02,590 --> 00:08:03,880
customers so we are completely

202
00:08:03,880 --> 00:08:05,920
abstracting this one so that's why there

203
00:08:05,920 --> 00:08:07,570
is no sickle here on the list instead

204
00:08:07,570 --> 00:08:10,120
what we provide a mechanism then that

205
00:08:10,120 --> 00:08:11,590
customers can model their little

206
00:08:11,590 --> 00:08:13,480
business objects and say this should be

207
00:08:13,480 --> 00:08:15,160
go into the database and we manage

208
00:08:15,160 --> 00:08:17,560
everything other things you won't find

209
00:08:17,560 --> 00:08:20,200
here is my system access we have a

210
00:08:20,200 --> 00:08:21,610
little bit something in that direction

211
00:08:21,610 --> 00:08:23,290
but it's also something which can be

212
00:08:23,290 --> 00:08:25,810
problematic you don't find that you can

213
00:08:25,810 --> 00:08:28,270
start processes or sub do something in

214
00:08:28,270 --> 00:08:30,139
fretting it's really mad

215
00:08:30,139 --> 00:08:32,300
that you yet we provide the big building

216
00:08:32,300 --> 00:08:34,190
blocks and what the customer should do

217
00:08:34,190 --> 00:08:37,190
is really just arrange these things and

218
00:08:37,190 --> 00:08:38,930
it's also when we look a little bit at

219
00:08:38,930 --> 00:08:41,360
the audience we don't want to force all

220
00:08:41,360 --> 00:08:43,729
because usually because our customers

221
00:08:43,729 --> 00:08:45,620
are implementing these storefronts or

222
00:08:45,620 --> 00:08:47,630
external partners implementing this one

223
00:08:47,630 --> 00:08:50,480
and not we are implementing this drawer

224
00:08:50,480 --> 00:08:53,300
fronts we want to have that let's call

225
00:08:53,300 --> 00:08:55,339
it average developer can use it and

226
00:08:55,339 --> 00:08:56,420
there is not the deep knowledge

227
00:08:56,420 --> 00:08:59,630
necessary on how to how to run a well

228
00:08:59,630 --> 00:09:02,630
behaving and Val performing server-side

229
00:09:02,630 --> 00:09:08,269
application so what we're using were few

230
00:09:08,269 --> 00:09:11,870
words for her towards Rhino sir rhino is

231
00:09:11,870 --> 00:09:13,760
it's actually the core java script it's

232
00:09:13,760 --> 00:09:16,100
very very stable so really in the core

233
00:09:16,100 --> 00:09:18,769
we found one buck ones in the indie

234
00:09:18,769 --> 00:09:20,899
optimizer but beside that one actually

235
00:09:20,899 --> 00:09:23,089
it really the Rhino core is very very

236
00:09:23,089 --> 00:09:25,790
stable who has ever looked into the

237
00:09:25,790 --> 00:09:29,810
Rhino chorus dealt with rhino ever has

238
00:09:29,810 --> 00:09:31,820
looked into the code who would say that

239
00:09:31,820 --> 00:09:35,600
is a clean code yeah that's also what

240
00:09:35,600 --> 00:09:36,800
you found out this makes a little bit

241
00:09:36,800 --> 00:09:39,589
tougher to debug it but it's it's really

242
00:09:39,589 --> 00:09:42,110
it's really working very very stable you

243
00:09:42,110 --> 00:09:45,920
have sometimes a little bit hiccups for

244
00:09:45,920 --> 00:09:47,630
exam with the latest upgrade they

245
00:09:47,630 --> 00:09:49,720
changed the parts of the change so

246
00:09:49,720 --> 00:09:53,420
because we have so many many customers

247
00:09:53,420 --> 00:09:55,640
using it outside we can basically say

248
00:09:55,640 --> 00:09:57,949
that one of our customers is actually

249
00:09:57,949 --> 00:10:01,490
using one of the all the parts of the

250
00:10:01,490 --> 00:10:03,500
code patterns and so they run into

251
00:10:03,500 --> 00:10:05,870
something but a little change in the

252
00:10:05,870 --> 00:10:07,579
parser costs a little bit a hiccup and

253
00:10:07,579 --> 00:10:10,100
also something when you call into chava

254
00:10:10,100 --> 00:10:11,959
methods because that's basically what

255
00:10:11,959 --> 00:10:13,610
we're doing all the time calling into

256
00:10:13,610 --> 00:10:15,800
into our java system when your verbal

257
00:10:15,800 --> 00:10:17,300
arguments they change something they

258
00:10:17,300 --> 00:10:19,459
look up agar rhythms so this is details

259
00:10:19,459 --> 00:10:21,620
when you're really having basically so

260
00:10:21,620 --> 00:10:23,630
many customers outside and using your

261
00:10:23,630 --> 00:10:25,010
system and you want to keep the

262
00:10:25,010 --> 00:10:26,899
compatibility that's a little issues

263
00:10:26,899 --> 00:10:29,750
which you can also run into so talk

264
00:10:29,750 --> 00:10:30,960
about the

265
00:10:30,960 --> 00:10:33,810
ability xml support i'll be using it it

266
00:10:33,810 --> 00:10:35,940
works actually it's a little bit in the

267
00:10:35,940 --> 00:10:37,860
in the edge cases they're a little bit

268
00:10:37,860 --> 00:10:40,620
ish issues so that's that's something

269
00:10:40,620 --> 00:10:45,060
just to know the eyes actually we made a

270
00:10:45,060 --> 00:10:48,510
few little extensions or little tricks

271
00:10:48,510 --> 00:10:50,760
and I want to talk about pick two out of

272
00:10:50,760 --> 00:10:53,910
them the first thing is we allow people

273
00:10:53,910 --> 00:10:57,630
to add a little type annotation and the

274
00:10:57,630 --> 00:11:00,390
the only reason we did this actually is

275
00:11:00,390 --> 00:11:02,900
so that we can provide in an editor of

276
00:11:02,900 --> 00:11:07,200
good completion support so we were back

277
00:11:07,200 --> 00:11:08,880
and forth and then we gave it the first

278
00:11:08,880 --> 00:11:11,490
customers and our own developers to said

279
00:11:11,490 --> 00:11:12,990
oh no no I need completion i need

280
00:11:12,990 --> 00:11:15,780
completion i cannot work with this type

281
00:11:15,780 --> 00:11:19,320
last language and so we decided at this

282
00:11:19,320 --> 00:11:21,840
one this is actually not not checked at

283
00:11:21,840 --> 00:11:23,520
runtime so you don't have to do it your

284
00:11:23,520 --> 00:11:25,470
program works line your program works as

285
00:11:25,470 --> 00:11:27,600
it would be at i plus and it's just a

286
00:11:27,600 --> 00:11:30,870
hint for the editor to to provide to

287
00:11:30,870 --> 00:11:33,360
completion again this was back in two

288
00:11:33,360 --> 00:11:35,460
thousand six nowadays we have way better

289
00:11:35,460 --> 00:11:37,560
javascript it viewers who do path

290
00:11:37,560 --> 00:11:39,840
analysis and that's currently also what

291
00:11:39,840 --> 00:11:41,010
we are looking a little bit whether we

292
00:11:41,010 --> 00:11:44,250
can switch over to this one based on the

293
00:11:44,250 --> 00:11:45,960
notation you can see it's also a little

294
00:11:45,960 --> 00:11:48,510
trap we run into it's actually the

295
00:11:48,510 --> 00:11:51,090
notation which was initially proposed

296
00:11:51,090 --> 00:11:53,700
with the ACMA for proposal so at that

297
00:11:53,700 --> 00:11:56,880
time 2006 we were enthusiastic that's

298
00:11:56,880 --> 00:11:58,470
what that will be coming and

299
00:11:58,470 --> 00:12:01,440
ActionScript already is doing it so we

300
00:12:01,440 --> 00:12:04,980
put it in and ya later showed it was a

301
00:12:04,980 --> 00:12:08,160
mistake to do it in that way but it's

302
00:12:08,160 --> 00:12:10,830
basically helps a little bit to write

303
00:12:10,830 --> 00:12:15,030
these fairly complex aprs to to write a

304
00:12:15,030 --> 00:12:18,420
quick at this table code so the other

305
00:12:18,420 --> 00:12:20,130
extension are talked already a little

306
00:12:20,130 --> 00:12:24,780
bit about web services and get when you

307
00:12:24,780 --> 00:12:26,670
know web services may be on the Chavez

308
00:12:26,670 --> 00:12:29,010
ahead you you check your Vista file you

309
00:12:29,010 --> 00:12:30,680
have to put it in your

310
00:12:30,680 --> 00:12:33,050
or for example that the Vista file is

311
00:12:33,050 --> 00:12:35,270
compiled down for example access down

312
00:12:35,270 --> 00:12:37,520
into Java and you didn't want you to go

313
00:12:37,520 --> 00:12:39,560
that way and we were to really wanted to

314
00:12:39,560 --> 00:12:41,110
fully leverage that we have really a

315
00:12:41,110 --> 00:12:43,790
dynamic environment and what we actually

316
00:12:43,790 --> 00:12:46,130
doing is basically the only thing what

317
00:12:46,130 --> 00:12:47,750
you have to do in within our environment

318
00:12:47,750 --> 00:12:49,670
you take the Vista file upload it to our

319
00:12:49,670 --> 00:12:50,959
service and then we figure out

320
00:12:50,959 --> 00:12:53,630
everything by ourselves and then checked

321
00:12:53,630 --> 00:12:56,390
it basically in the API so what you see

322
00:12:56,390 --> 00:13:00,980
up here summer is a global global SMS

323
00:13:00,980 --> 00:13:04,430
and that's that's a name of a Vista file

324
00:13:04,430 --> 00:13:07,310
so whenever I say rep references global

325
00:13:07,310 --> 00:13:10,130
SMS or the name of the Vista fire the

326
00:13:10,130 --> 00:13:12,260
system knows that now want to talk to a

327
00:13:12,260 --> 00:13:14,899
web service and SH ask a default service

328
00:13:14,899 --> 00:13:18,440
and have my service when there are XML

329
00:13:18,440 --> 00:13:21,800
structures in in that this like NHS new

330
00:13:21,800 --> 00:13:24,649
vet reference global SMS registered user

331
00:13:24,649 --> 00:13:27,740
that create my user information but my

332
00:13:27,740 --> 00:13:30,649
license information then I get here get

333
00:13:30,649 --> 00:13:33,020
the sent message object fill it out with

334
00:13:33,020 --> 00:13:34,640
phone number for example here for

335
00:13:34,640 --> 00:13:37,459
sending an SMS and then here here at the

336
00:13:37,459 --> 00:13:40,130
bottom you can see that i'm calling on

337
00:13:40,130 --> 00:13:42,410
this service actually a sent message and

338
00:13:42,410 --> 00:13:44,270
that's where I call my operation in the

339
00:13:44,270 --> 00:13:46,640
web service wherever I need I don't have

340
00:13:46,640 --> 00:13:48,410
to deal with the details of a

341
00:13:48,410 --> 00:13:52,550
substandard of the octave is defiled how

342
00:13:52,550 --> 00:13:54,410
are we doing this internally here's an

343
00:13:54,410 --> 00:13:56,779
SMS example is basically the first you

344
00:13:56,779 --> 00:13:59,779
take these vista 5 and it's called with

345
00:13:59,779 --> 00:14:02,150
web reference that the Vista filename we

346
00:14:02,150 --> 00:14:03,650
check whether if you have already cached

347
00:14:03,650 --> 00:14:06,110
if not which has compiled a whistle into

348
00:14:06,110 --> 00:14:10,010
Java dynamically loaded java code find

349
00:14:10,010 --> 00:14:12,470
this service through introspection then

350
00:14:12,470 --> 00:14:14,600
create a service instance cash it and

351
00:14:14,600 --> 00:14:16,520
then we basically give de chava script

352
00:14:16,520 --> 00:14:19,279
and war runtime environment and handle

353
00:14:19,279 --> 00:14:21,529
on this java on these java classes and

354
00:14:21,529 --> 00:14:23,390
from vero neck and chest are just call

355
00:14:23,390 --> 00:14:27,770
them okay that's if you have a few other

356
00:14:27,770 --> 00:14:30,230
extensions one is for example it's

357
00:14:30,230 --> 00:14:32,270
cautious import script so it's basically

358
00:14:32,270 --> 00:14:35,270
the little predecessor version but you

359
00:14:35,270 --> 00:14:38,120
have income comments j a common shares

360
00:14:38,120 --> 00:14:40,970
the requires function we do a little bit

361
00:14:40,970 --> 00:14:42,780
more more simple that's what we

362
00:14:42,780 --> 00:14:44,670
example edit so that you can what you

363
00:14:44,670 --> 00:14:46,350
what you could to recall can you can do

364
00:14:46,350 --> 00:14:48,180
programming in the large and structure

365
00:14:48,180 --> 00:14:53,910
your eurocode okay now a little bit the

366
00:14:53,910 --> 00:14:56,040
specific things what it means to be in a

367
00:14:56,040 --> 00:15:00,540
software service environment so the

368
00:15:00,540 --> 00:15:02,580
software service means we have to

369
00:15:02,580 --> 00:15:05,070
operate a software so we have service

370
00:15:05,070 --> 00:15:08,250
level agreements about how much downtime

371
00:15:08,250 --> 00:15:12,180
is is allowed about response times and

372
00:15:12,180 --> 00:15:14,250
everything and they have to Conti this

373
00:15:14,250 --> 00:15:16,530
and we have to guarantee this even so

374
00:15:16,530 --> 00:15:18,240
the actually the softest that we are

375
00:15:18,240 --> 00:15:20,640
operating includes custom code and

376
00:15:20,640 --> 00:15:23,220
that's that's a really SD stretch so how

377
00:15:23,220 --> 00:15:26,730
much customization can I allow so that

378
00:15:26,730 --> 00:15:28,890
hopefully the customer cannot interfere

379
00:15:28,890 --> 00:15:32,100
with my service level agreements and

380
00:15:32,100 --> 00:15:35,190
when I look back I think over the last

381
00:15:35,190 --> 00:15:37,410
since we start with this one s was

382
00:15:37,410 --> 00:15:39,480
always a struggle how to get this right

383
00:15:39,480 --> 00:15:43,290
and it basically means at the end if

384
00:15:43,290 --> 00:15:45,090
there is malicious code it can hurt us

385
00:15:45,090 --> 00:15:47,220
so initially the obvious thing we got

386
00:15:47,220 --> 00:15:49,020
right from the beginning we didn't open

387
00:15:49,020 --> 00:15:51,180
sick of it or didn't open the studying

388
00:15:51,180 --> 00:15:53,250
and everything but you still had some

389
00:15:53,250 --> 00:15:56,250
things wrong so for example we couldn't

390
00:15:56,250 --> 00:15:58,320
believe it that we saw once when service

391
00:15:58,320 --> 00:16:00,150
were crashing with out of memory that a

392
00:16:00,150 --> 00:16:02,070
customer have really had generated a

393
00:16:02,070 --> 00:16:04,620
single single string with 200 megabytes

394
00:16:04,620 --> 00:16:09,180
in the main memory or we found that

395
00:16:09,180 --> 00:16:11,880
executing one storefront script that the

396
00:16:11,880 --> 00:16:14,850
custom created over 100,000 Java

397
00:16:14,850 --> 00:16:16,860
JavaScript objects just hanging around

398
00:16:16,860 --> 00:16:20,880
in memory or another thing like how do i

399
00:16:20,880 --> 00:16:23,550
parse XML oh I read it everything whole

400
00:16:23,550 --> 00:16:26,310
file into into memory even it's 50

401
00:16:26,310 --> 00:16:28,500
megabyte and just positive memory even

402
00:16:28,500 --> 00:16:30,270
so they give the customer a streaming

403
00:16:30,270 --> 00:16:32,720
API that they can do it sequentially

404
00:16:32,720 --> 00:16:35,010
they found out of the way o read that

405
00:16:35,010 --> 00:16:37,800
whole file in and so from this one

406
00:16:37,800 --> 00:16:40,140
that's something which regulate causes

407
00:16:40,140 --> 00:16:43,050
some crashing service luckily the

408
00:16:43,050 --> 00:16:44,670
customers very often don't see it

409
00:16:44,670 --> 00:16:46,410
because we have multiple servers so

410
00:16:46,410 --> 00:16:49,080
someone else can pick up the traffic but

411
00:16:49,080 --> 00:16:50,520
it's always bad for operation

412
00:16:50,520 --> 00:16:51,810
people when the phone rings in the

413
00:16:51,810 --> 00:16:53,220
middle of the night they have to

414
00:16:53,220 --> 00:16:56,460
intervene so what we now implement it

415
00:16:56,460 --> 00:16:59,270
actually is it's now it's a quota system

416
00:16:59,270 --> 00:17:02,700
so that we can control this so that is a

417
00:17:02,700 --> 00:17:05,160
little bit to tube how we did it we did

418
00:17:05,160 --> 00:17:07,170
it a try no modifications so that we can

419
00:17:07,170 --> 00:17:09,390
now control the length of a string we

420
00:17:09,390 --> 00:17:11,490
say if someone has a string with more

421
00:17:11,490 --> 00:17:14,040
than one megabyte some something must be

422
00:17:14,040 --> 00:17:17,130
wrong same way if we if the length of an

423
00:17:17,130 --> 00:17:20,550
often often array or the number of

424
00:17:20,550 --> 00:17:23,580
properties in an object or the number of

425
00:17:23,580 --> 00:17:25,860
objects actually act within an execution

426
00:17:25,860 --> 00:17:28,260
context also we are estimating the size

427
00:17:28,260 --> 00:17:30,630
of the XML ettore if that's too big then

428
00:17:30,630 --> 00:17:33,600
something is wrong and the vet 1b can we

429
00:17:33,600 --> 00:17:36,210
can control a little bit like really bad

430
00:17:36,210 --> 00:17:38,760
behaviors again what I said behind

431
00:17:38,760 --> 00:17:41,040
learning all kinds of developers we have

432
00:17:41,040 --> 00:17:43,530
very sophisticated developers and we've

433
00:17:43,530 --> 00:17:45,630
not so sophisticated developer who

434
00:17:45,630 --> 00:17:47,640
basically just look cold something is it

435
00:17:47,640 --> 00:17:49,760
working and don't think by on this and

436
00:17:49,760 --> 00:17:53,490
we cannot control these curses of these

437
00:17:53,490 --> 00:17:55,170
developers and that's why we have to put

438
00:17:55,170 --> 00:17:58,110
in these mechanisms it's also

439
00:17:58,110 --> 00:18:00,420
interesting be in you know when I would

440
00:18:00,420 --> 00:18:01,850
have other entries for example in

441
00:18:01,850 --> 00:18:05,370
written in C++ I would have access to

442
00:18:05,370 --> 00:18:07,560
memory allocation can change that VNA

443
00:18:07,560 --> 00:18:09,660
chava environment that's why we have to

444
00:18:09,660 --> 00:18:10,950
do that a little bit more on the

445
00:18:10,950 --> 00:18:14,100
semantic level of the of the JavaScript

446
00:18:14,100 --> 00:18:18,900
language another thing is also bad thing

447
00:18:18,900 --> 00:18:21,360
is the eval function it was already

448
00:18:21,360 --> 00:18:24,360
named today once evil and for us it's

449
00:18:24,360 --> 00:18:26,730
even more risky because you could write

450
00:18:26,730 --> 00:18:29,160
something like evil search program and

451
00:18:29,160 --> 00:18:31,440
you put in directly a form value and

452
00:18:31,440 --> 00:18:33,810
basically that's the same equivalent as

453
00:18:33,810 --> 00:18:36,120
you would do a sickle injection it would

454
00:18:36,120 --> 00:18:38,670
now be called service on JavaScript

455
00:18:38,670 --> 00:18:42,210
injection and I know some you can do

456
00:18:42,210 --> 00:18:43,920
create great things with it and if

457
00:18:43,920 --> 00:18:45,780
you're sophisticated available you know

458
00:18:45,780 --> 00:18:48,060
about sickle injection but what are they

459
00:18:48,060 --> 00:18:50,280
about the other developers and what you

460
00:18:50,280 --> 00:18:51,930
keep in mind we are dealing with credit

461
00:18:51,930 --> 00:18:54,630
card data and then we would have an

462
00:18:54,630 --> 00:18:56,760
incident where credit card data is is

463
00:18:56,760 --> 00:18:58,980
exposed it will fall back on us so

464
00:18:58,980 --> 00:19:01,630
that's why the at the end decided okay

465
00:19:01,630 --> 00:19:04,030
we must must turn it off just to prevent

466
00:19:04,030 --> 00:19:06,640
this kind of server-side script

467
00:19:06,640 --> 00:19:12,280
injection okay now a little bit more

468
00:19:12,280 --> 00:19:17,740
lessons learned actually that's one

469
00:19:17,740 --> 00:19:19,180
thing lesson learned was when we started

470
00:19:19,180 --> 00:19:22,120
that I said that we were basic coming

471
00:19:22,120 --> 00:19:24,700
out of the Java world and also our first

472
00:19:24,700 --> 00:19:26,590
customers were coming out of the Cholla

473
00:19:26,590 --> 00:19:28,900
world we knew it basically at that time

474
00:19:28,900 --> 00:19:31,330
still as the little let's say dirty

475
00:19:31,330 --> 00:19:34,750
language on the websites and this had

476
00:19:34,750 --> 00:19:36,910
also a little bit consequence on the API

477
00:19:36,910 --> 00:19:39,400
that the API fears a little bit more to

478
00:19:39,400 --> 00:19:41,530
java centric how the thinking model is

479
00:19:41,530 --> 00:19:44,110
so when I would do design something now

480
00:19:44,110 --> 00:19:46,300
nowadays I would more often for example

481
00:19:46,300 --> 00:19:48,790
use closures so what I can write where

482
00:19:48,790 --> 00:19:50,830
more compact more efficient code and

483
00:19:50,830 --> 00:19:52,990
also another thing was that it would

484
00:19:52,990 --> 00:19:57,270
more use these native objects and and

485
00:19:57,270 --> 00:19:59,920
erase more often when we first came to

486
00:19:59,920 --> 00:20:01,660
this looked at this JavaScript review

487
00:20:01,660 --> 00:20:04,120
used to all these great collection

488
00:20:04,120 --> 00:20:07,270
classes in the Java API you want be

489
00:20:07,270 --> 00:20:08,320
thought we want to have something

490
00:20:08,320 --> 00:20:11,020
similar and so we're focusing on this

491
00:20:11,020 --> 00:20:13,180
one and nowadays I were to go a

492
00:20:13,180 --> 00:20:15,640
different approach and really really use

493
00:20:15,640 --> 00:20:18,040
much more often these arrays copy stuff

494
00:20:18,040 --> 00:20:20,200
into the chair into JavaScript arrays

495
00:20:20,200 --> 00:20:23,260
and expose it in that way that's one of

496
00:20:23,260 --> 00:20:24,850
the miss really it learns what I would

497
00:20:24,850 --> 00:20:28,270
do different today the the other thing

498
00:20:28,270 --> 00:20:30,850
is a little bit how we implemented that

499
00:20:30,850 --> 00:20:34,240
API so basic we had our e-commerce logic

500
00:20:34,240 --> 00:20:36,760
and we decided not to block the

501
00:20:36,760 --> 00:20:38,890
JavaScript code directly on this on this

502
00:20:38,890 --> 00:20:42,730
logic what we said you put in a thin API

503
00:20:42,730 --> 00:20:44,620
layer so when you look at when you would

504
00:20:44,620 --> 00:20:46,540
look at download Java classes you could

505
00:20:46,540 --> 00:20:48,070
see the e-commerce logic it would see on

506
00:20:48,070 --> 00:20:50,800
top of it alone each other API classes

507
00:20:50,800 --> 00:20:52,390
and basically the rider who can directly

508
00:20:52,390 --> 00:20:54,550
talk to the Java classes we talk to

509
00:20:54,550 --> 00:20:57,400
these api classes at that time we were

510
00:20:57,400 --> 00:20:59,730
also a little bit concerned about

511
00:20:59,730 --> 00:21:02,050
performance and when you do this style

512
00:21:02,050 --> 00:21:03,760
you always have the

513
00:21:03,760 --> 00:21:06,430
way am i doing it in a rapping style so

514
00:21:06,430 --> 00:21:08,130
I take a business object put it around

515
00:21:08,130 --> 00:21:12,490
decorated and share certain things or am

516
00:21:12,490 --> 00:21:14,890
I saying I'm really doing a full copy so

517
00:21:14,890 --> 00:21:16,990
if i have my product a copy the value

518
00:21:16,990 --> 00:21:19,240
give it over to the to the javascript

519
00:21:19,240 --> 00:21:22,450
code so we went small very often in the

520
00:21:22,450 --> 00:21:25,150
rapping style and this cost issue so

521
00:21:25,150 --> 00:21:27,910
side effects so we have to upgrade for

522
00:21:27,910 --> 00:21:29,710
example our software then we have new

523
00:21:29,710 --> 00:21:31,780
features we have to upgrade this and it

524
00:21:31,780 --> 00:21:34,060
happens several times that we basically

525
00:21:34,060 --> 00:21:38,380
didn't touch the API and you have fairly

526
00:21:38,380 --> 00:21:40,930
good test coverage on test a PRS but

527
00:21:40,930 --> 00:21:42,610
there was some really strange side

528
00:21:42,610 --> 00:21:44,800
effects and whenever there is something

529
00:21:44,800 --> 00:21:46,690
changes in the business logic with a

530
00:21:46,690 --> 00:21:49,000
rapping style the risk that it basically

531
00:21:49,000 --> 00:21:51,220
take it through and is visible in in the

532
00:21:51,220 --> 00:21:54,040
JavaScript code you can also think about

533
00:21:54,040 --> 00:21:56,320
that basically a problems with via phase

534
00:21:56,320 --> 00:21:58,780
is very similar to on to a browser

535
00:21:58,780 --> 00:22:00,700
vendor we have other people's writing

536
00:22:00,700 --> 00:22:03,010
the code running in our system we have

537
00:22:03,010 --> 00:22:04,690
to keep it comfortable we have toward

538
00:22:04,690 --> 00:22:07,600
side effects so we're basically in a

539
00:22:07,600 --> 00:22:10,390
fairly similar business and that was one

540
00:22:10,390 --> 00:22:14,160
lesson what I took from this one don't

541
00:22:14,160 --> 00:22:17,740
copying is not so in intensive copy of

542
00:22:17,740 --> 00:22:19,600
stuff and make sure you're basically

543
00:22:19,600 --> 00:22:21,850
separating and really isolating from

544
00:22:21,850 --> 00:22:28,690
your actual business logic ok so now I

545
00:22:28,690 --> 00:22:30,190
want to also talk a little bit about the

546
00:22:30,190 --> 00:22:32,460
future so what is what is in our plans

547
00:22:32,460 --> 00:22:36,070
so one thing what was mentioned today

548
00:22:36,070 --> 00:22:38,410
already are a few times is common shares

549
00:22:38,410 --> 00:22:39,970
so that's what we are currently looking

550
00:22:39,970 --> 00:22:43,780
into it what what thoughts are coming up

551
00:22:43,780 --> 00:22:45,730
there so we will adopt the module

552
00:22:45,730 --> 00:22:47,830
concept so to replace or what I

553
00:22:47,830 --> 00:22:49,600
mentioned before what we have an import

554
00:22:49,600 --> 00:22:51,370
script which is a tiny little bit

555
00:22:51,370 --> 00:22:52,930
awkward to real place that we're looking

556
00:22:52,930 --> 00:22:55,510
into the package concept you're looking

557
00:22:55,510 --> 00:22:57,190
us in the unit testing so we currently

558
00:22:57,190 --> 00:22:59,530
have you a basic unit testing in there

559
00:22:59,530 --> 00:23:01,660
that you can run assertions and check

560
00:23:01,660 --> 00:23:04,660
assertions and everything but maybe if

561
00:23:04,660 --> 00:23:07,060
this baby want to take this one what is

562
00:23:07,060 --> 00:23:09,550
currently in discussion other things

563
00:23:09,550 --> 00:23:11,030
what is currently in

564
00:23:11,030 --> 00:23:13,280
proposed in the common shares it's not

565
00:23:13,280 --> 00:23:15,380
applicable for us it's the gay as again

566
00:23:15,380 --> 00:23:16,880
because we are soft as a service

567
00:23:16,880 --> 00:23:20,660
environment we cannot have streams we

568
00:23:20,660 --> 00:23:24,380
can all sockets we will not have a real

569
00:23:24,380 --> 00:23:26,600
full-fledged file system access we will

570
00:23:26,600 --> 00:23:28,070
always have the abstraction of just

571
00:23:28,070 --> 00:23:30,170
storing plops you also have no real

572
00:23:30,170 --> 00:23:32,810
notion of a standard in standard out so

573
00:23:32,810 --> 00:23:34,820
so they come and share so we will

574
00:23:34,820 --> 00:23:36,680
constantly look at is whether we can

575
00:23:36,680 --> 00:23:40,130
adopt some things but we will not go the

576
00:23:40,130 --> 00:23:41,600
way that we say okay we will and

577
00:23:41,600 --> 00:23:44,930
implement everything another thing what

578
00:23:44,930 --> 00:23:46,760
it will change it's also something when

579
00:23:46,760 --> 00:23:49,220
we really go server side is really think

580
00:23:49,220 --> 00:23:51,890
about the template language so we

581
00:23:51,890 --> 00:23:53,750
currently have a tank template language

582
00:23:53,750 --> 00:23:56,840
in the system which is but mostly

583
00:23:56,840 --> 00:23:59,690
inherited from the existing old system

584
00:23:59,690 --> 00:24:03,500
and yeah it's a little bit ugly and so

585
00:24:03,500 --> 00:24:05,120
we are currently looking to replace the

586
00:24:05,120 --> 00:24:08,030
Swiss was something which is very fairly

587
00:24:08,030 --> 00:24:10,970
simple and so assembly it took some

588
00:24:10,970 --> 00:24:13,580
ideas maybe how the other Ruby works and

589
00:24:13,580 --> 00:24:16,850
so just these little smaller and percent

590
00:24:16,850 --> 00:24:18,770
simple then you can insert JavaScript

591
00:24:18,770 --> 00:24:22,220
code and in between it's all HTML having

592
00:24:22,220 --> 00:24:24,590
some libraries that I can to trustee for

593
00:24:24,590 --> 00:24:26,960
template utilities link and can generate

594
00:24:26,960 --> 00:24:30,440
a link for example to another page so

595
00:24:30,440 --> 00:24:31,760
that's what we're currently a think

596
00:24:31,760 --> 00:24:34,040
about doing if someone knows about the

597
00:24:34,040 --> 00:24:37,520
approach edge where someone is doing we

598
00:24:37,520 --> 00:24:40,730
should talk yeah yeah we should talk on

599
00:24:40,730 --> 00:24:42,440
them and so that's also a look really

600
00:24:42,440 --> 00:24:44,150
looking around if there's a cool project

601
00:24:44,150 --> 00:24:46,850
group someone around it so also we are

602
00:24:46,850 --> 00:24:49,130
happy to help there and also use it then

603
00:24:49,130 --> 00:24:53,960
on ours our side okay that's that's

604
00:24:53,960 --> 00:24:55,670
actually all material but I had prepared

605
00:24:55,670 --> 00:25:03,530
and any questions or is everyone hungry

606
00:25:03,530 --> 00:25:08,360
who's hungry I don't know whether this

607
00:25:08,360 --> 00:25:11,990
is the maturity okay

