1
00:00:01,640 --> 00:00:27,130
Okay. So, suppose that you are reading hackernews.

2
00:00:27,130 --> 00:00:35,380
On monday you see someone post D3 based reusable
chart library.

3
00:00:35,380 --> 00:00:40,980
And on Wednesday, Chartist.

4
00:00:40,980 --> 00:00:51,390
That is strange. On Sunday, somebody posts
Dimple.Js. Easy and flexible D3 charter.

5
00:00:51,390 --> 00:00:53,300
What?!

6
00:00:53,300 --> 00:01:00,129
You google it. Okay. There is a Wikipedia
comparing 30 javascript charters.

7
00:01:00,129 --> 00:01:05,100
And a blog post comparing 50.

8
00:01:05,100 --> 00:01:11,030
The blogpost is 2 years old. What?!

9
00:01:11,030 --> 00:01:16,750
There might be one explanation for it. Maybe
all of these libraries are doing different

10
00:01:16,750 --> 00:01:17,750
things.

11
00:01:17,750 --> 00:01:21,200
We are not making the same charts over and
over again.

12
00:01:21,200 --> 00:01:28,740
Look at the websites. And thinking feeling
sets in. When you think, you are all doing

13
00:01:28,740 --> 00:01:31,020
the same thing. What?!

14
00:01:31,020 --> 00:01:36,009
Do we really like reinventing the piechart?

15
00:01:36,009 --> 00:01:45,369
So, if we are going to get to the bottom,
we need to look at o a library D3. Most are

16
00:01:45,369 --> 00:01:50,009
based on D3. Most of the visualisations.

17
00:01:50,009 --> 00:01:52,860
Interestingly enough there is only 1 D3.

18
00:01:52,860 --> 00:02:00,210
Not 100 different versions. Something different
is happening here.

19
00:02:00,210 --> 00:02:05,070
This timer is not working. Wave when I have
3 minutes.

20
00:02:05,070 --> 00:02:12,560
It turns D3 has a lot of examples. Here is
a scatterplot. A line chart. Bar chart. Area

21
00:02:12,560 --> 00:02:13,560
chart.

22
00:02:13,560 --> 00:02:19,459
You might say, putting this together, D3 is
a charting library.

23
00:02:19,459 --> 00:02:25,140
Which is weird. Why would you be building
charting libraries out of charting libraries.

24
00:02:25,140 --> 00:02:34,610
There is cluster layout. Congressional influences.
Who is killing whom in Game of Thrones.

25
00:02:34,610 --> 00:02:40,620
And is that Obama's budget dressed up as Jupiter?

26
00:02:40,620 --> 00:02:45,489
Something else is happening here. D3 is not
just Charter library.

27
00:02:45,489 --> 00:02:48,080
Data visualisation.

28
00:02:48,080 --> 00:02:51,630
What does it mean in practice? What is it
actually?

29
00:02:51,630 --> 00:02:55,930
It is a Dom manipulation library.

30
00:02:55,930 --> 00:03:02,060
It might seem random. When you think about
it, it makes sense.

31
00:03:02,060 --> 00:03:06,680
What is unique is the data.

32
00:03:06,680 --> 00:03:13,830
And then you want to render the data in some
way. You could start blank and invent internet

33
00:03:13,830 --> 00:03:15,410
technolnogy.

34
00:03:15,410 --> 00:03:22,330
You have these guys Html, Css and Svg. You
know how to use them.

35
00:03:22,330 --> 00:03:29,450
Why reinvent the wheel. Let's get the data
and have it come hang with the rest. That's

36
00:03:29,450 --> 00:03:31,120
what D3 does.

37
00:03:31,120 --> 00:03:36,040
Lets you take some data. You are going to
create a correspondence between the data and

38
00:03:36,040 --> 00:03:40,700
Dom nodes. Maybe Svg circles.

39
00:03:40,700 --> 00:03:46,450
Since you have this mapping, you are going
to use functions from the data into visual

40
00:03:46,450 --> 00:03:48,010
attributes.

41
00:03:48,010 --> 00:03:50,879
So, let's see it in action.

42
00:03:50,879 --> 00:03:59,900
We have this. Woops. This is very low level.

43
00:03:59,900 --> 00:04:03,519
You can do anything you imagine.

44
00:04:03,519 --> 00:04:09,360
But there is a trade off. That is that the
D3 makes simple things hard.

45
00:04:09,360 --> 00:04:18,190
And to see this in action. You can see a scatterplot.
It has some pieces, data, Svg, some scales.

46
00:04:18,190 --> 00:04:26,400
If you are not familiar with a scale. A correspendence
between the data and the property.

47
00:04:26,400 --> 00:04:34,350
Some axes. We are going to have labels, the
plot itself.

48
00:04:34,350 --> 00:04:36,480
A legend. All seems reasonable.

49
00:04:36,480 --> 00:04:39,030
Let's look at the code.

50
00:04:39,030 --> 00:04:41,310
For the data we are going to do some basic
cleanup.

51
00:04:41,310 --> 00:04:51,200
For the Svg pixel math. The margins, we have
to setup the Svg.

52
00:04:51,200 --> 00:04:58,350
Scales, we are going to get the scales D3
provides and configure them.

53
00:04:58,350 --> 00:05:04,720
Axes. The axis generating function

54
00:05:04,720 --> 00:05:10,900
We setup some part of the dom.

55
00:05:10,900 --> 00:05:18,200
Then labels. We have to do a lot more work.
Pixel shifts. Svg properties.

56
00:05:18,200 --> 00:05:21,790
The plot is where things get interesting.

57
00:05:21,790 --> 00:05:26,850
You might imagine, since the plot is the biggest
part of the chart and the part where all the

58
00:05:26,850 --> 00:05:32,900
action happens, there is a lot of code correspondingly.

59
00:05:32,900 --> 00:05:35,610
This code is neat. We will dig into it.

60
00:05:35,610 --> 00:05:41,310
We select a part of the Svg. We put our data
into it.

61
00:05:41,310 --> 00:05:48,051
We are going to create a circle for every
piece of data. A class, a radius, and for

62
00:05:48,051 --> 00:05:54,780
the exposition, we are going to use a property
of the data and the X-scale. To determine

63
00:05:54,780 --> 00:05:58,870
where it goes.

64
00:05:58,870 --> 00:06:01,040
What you might notice is a few things.

65
00:06:01,040 --> 00:06:06,210
First every line of this code is purposeful
and interesting.

66
00:06:06,210 --> 00:06:10,950
We correspond to what we want to do.

67
00:06:10,950 --> 00:06:15,700
And second, it is really fleysible. We made
a scatterplot.

68
00:06:15,700 --> 00:06:18,340
We could have done anything with an approach
this level.

69
00:06:18,340 --> 00:06:26,040
Unfortunately the 
legend is different story.

70
00:06:26,040 --> 00:06:30,620
It is 3 pieces of text, rectangles, it is
straightforward.

71
00:06:30,620 --> 00:06:34,680
And it is not.

72
00:06:34,680 --> 00:06:35,990
Really what we have here is a mess.

73
00:06:35,990 --> 00:06:47,450
We put in the data. Create a bunch of G's.
We are going to create rectangles. Text. Hard

74
00:06:47,450 --> 00:06:51,340
coded pixels. Text specification.

75
00:06:51,340 --> 00:06:54,580
And we are going to put in the actual text.

76
00:06:54,580 --> 00:06:59,600
This shows cases, the strength and weaknesses
of D3.

77
00:06:59,600 --> 00:07:06,600
The strength being, when we want to just make
something in our data it was incredible.

78
00:07:06,600 --> 00:07:14,210
When we want to make a legend or layout, it
is a little bit like writing a website with

79
00:07:14,210 --> 00:07:15,591
the raw Dom api.

80
00:07:15,591 --> 00:07:22,690
It is not impossible, but a huge pain.

81
00:07:22,690 --> 00:07:27,310
We have understood the scatterplot. We can
go through the other examples quickly.

82
00:07:27,310 --> 00:07:29,020
To understand what is going on.

83
00:07:29,020 --> 00:07:32,840
That is not a line chart!

84
00:07:32,840 --> 00:07:35,750
What are these otters doing in my presentation?

85
00:07:35,750 --> 00:07:41,360
You have your keynote attended for 3 minutes,
and this happens.

86
00:07:41,360 --> 00:07:47,320
But Making 3D charts would be more like that.

87
00:07:47,320 --> 00:07:55,620
I'd use the time to hang out with my friends.

88
00:07:55,620 --> 00:08:05,360
So, Since those 30 seconds are not going back,
let's not go through the charts.

89
00:08:05,360 --> 00:08:09,600
Here is a chart that C3.Js makes. It looks
the same.

90
00:08:09,600 --> 00:08:16,050
When we look at the code, it fits all in 1
slide.

91
00:08:16,050 --> 00:08:17,830
And it is pretty straightforward.

92
00:08:17,830 --> 00:08:23,110
We create this json bag. And we pass it in.

93
00:08:23,110 --> 00:08:34,970
Properties like what are the x's. The data.
It is a scattered chart.

94
00:08:34,970 --> 00:08:37,560
And you see this is readable, straightforward.

95
00:08:37,560 --> 00:08:42,990
There is Nvd3. A similar approach. The scatterchart
model.

96
00:08:42,990 --> 00:08:51,180
So, okay. We found 2 good solutions. In both
cases we didn't have to do weird text mocking.

97
00:08:51,180 --> 00:08:57,090
We got the chart we wanted. This is great.
Maybe we can just go home.

98
00:08:57,090 --> 00:09:02,630
But, we haven't figured out this mystery.
Why are we doing this over and over if it

99
00:09:02,630 --> 00:09:04,660
is so easy.

100
00:09:04,660 --> 00:09:10,270
Those libraries are good enough. Let's move
on with our lives.

101
00:09:10,270 --> 00:09:18,390
What would be great if another library would
go ahead and inaddition to making a new library,

102
00:09:18,390 --> 00:09:24,880
we know there are hundreds of libraries. Here
is why we felt we had to make another.

103
00:09:24,880 --> 00:09:33,090
Chartist, does just that. You may think this
is another java script charting library.

104
00:09:33,090 --> 00:09:39,240
It is made by a community that was disappointed
with other charting libraries.

105
00:09:39,240 --> 00:09:43,940
There was always a tweak you wished for.

106
00:09:43,940 --> 00:09:53,510
This 
is really great if the chart you want to make

107
00:09:53,510 --> 00:09:56,590
happens to look like this one.

108
00:09:56,590 --> 00:09:58,900
Let's say we want to do something weird.

109
00:09:58,900 --> 00:10:10,130
Two subplots. And axes. One is a scatterplotn
and an area plot.

110
00:10:10,130 --> 00:10:16,190
I looked in the Api. And there is no flag
for turn on special chart.

111
00:10:16,190 --> 00:10:19,300
So, we are basically screwed.

112
00:10:19,300 --> 00:10:24,830
Unfortunately, what Chartist has done a good
job of identifying the problem, they produced

113
00:10:24,830 --> 00:10:26,530
a api spec.

114
00:10:26,530 --> 00:10:29,240
They are going to run into the same issues.

115
00:10:29,240 --> 00:10:34,930
What we are seeing is not that they are idiots.

116
00:10:34,930 --> 00:10:38,390
They are smart developers.

117
00:10:38,390 --> 00:10:45,150
What is happening, every library offers a
different mix of 12 features, nice to have.

118
00:10:45,150 --> 00:10:49,070
Every consumer has a different mix.

119
00:10:49,070 --> 00:10:52,900
For every person, no charting library is quite
there.

120
00:10:52,900 --> 00:10:59,371
They see this. I know what to do. I'll make
a new charting library and this will solve

121
00:10:59,371 --> 00:11:00,400
the problem.

122
00:11:00,400 --> 00:11:04,730
They have made the 102nd charting library.

123
00:11:04,730 --> 00:11:09,880
J basically, it is a trap.

124
00:11:09,880 --> 00:11:14,010
This seems a good point as any to introduce
myself.

125
00:11:14,010 --> 00:11:27,920
I'm Dan Mane. Here is a picture. That's me,
Justin. There is a flying rose. And a giant

126
00:11:27,920 --> 00:11:33,510
cupcake. And inflatable dinosaur.

127
00:11:33,510 --> 00:11:38,100
We are not taking goofy pictures, we solve
problems.

128
00:11:38,100 --> 00:11:46,880
Sometimes help areas recover. Drug discovery
processes.

129
00:11:46,880 --> 00:11:52,160
Sometimes making sure supermarkets in Japan
have their shelves packed.

130
00:11:52,160 --> 00:11:58,720
You have data. You want them to work with
data.

131
00:11:58,720 --> 00:12:01,480
You want to make visualisations.

132
00:12:01,480 --> 00:12:07,730
In today's world that means Javascript charting
libraries.

133
00:12:07,730 --> 00:12:15,940
When we were asked, how to make these visualisations
across the company, we looked at the charting

134
00:12:15,940 --> 00:12:16,940
libraries.

135
00:12:16,940 --> 00:12:22,590
It was clear we had one feature that we wanted.
Interactive zoom.

136
00:12:22,590 --> 00:12:26,460
We need a library.

137
00:12:26,460 --> 00:12:32,480
Second, we have a whole laboratory with designers.
With ideas.

138
00:12:32,480 --> 00:12:38,900
If we go to them. Here are the 12 charts we
are going to make for you. They will not be

139
00:12:38,900 --> 00:12:40,170
happy for you.

140
00:12:40,170 --> 00:12:49,320
We could use D3. It works. But we know from
experience it means for ages to come, we will

141
00:12:49,320 --> 00:12:57,810
be forced to spend time, why is the axis off
by 1 pixel.

142
00:12:57,810 --> 00:13:02,280
And they are not solving the problems we like
to solve.

143
00:13:02,280 --> 00:13:08,721
The question was, can we find a sweet spot.
That exposes the power of D3. Also some of

144
00:13:08,721 --> 00:13:12,210
the convenience of a charting library.

145
00:13:12,210 --> 00:13:19,100
Spoiler alert, I think we did it. Plottable.
Built on D3.

146
00:13:19,100 --> 00:13:26,280
It is written in TypeScript. Which is awesome.

147
00:13:26,280 --> 00:13:34,740
And hosted on Github. I can talk about the
philosophy. Like Socrates. While you look

148
00:13:34,740 --> 00:13:41,190
away, fall asleep or bang your head in disgust.

149
00:13:41,190 --> 00:13:43,330
But instead, we'll show examples.

150
00:13:43,330 --> 00:13:48,210
Here is a D3. And the plottable.

151
00:13:48,210 --> 00:13:49,950
We compare.

152
00:13:49,950 --> 00:13:58,120
D3 we had to do data. We had to do a lot of
Svg.

153
00:13:58,120 --> 00:14:00,339
Plottable is going to handle it for you.

154
00:14:00,339 --> 00:14:06,820
D3 we made the scales. Plottable, just makes
the scale. Auto configure. You have all the

155
00:14:06,820 --> 00:14:13,360
same Api points if you want something themselves.

156
00:14:13,360 --> 00:14:16,790
The labels were weird.

157
00:14:16,790 --> 00:14:19,120
When we come to the plot. This is interesting.

158
00:14:19,120 --> 00:14:22,570
We loved what D3 was doing here.

159
00:14:22,570 --> 00:14:29,450
Plottable is just 1 line. We have fallen into
the trap of no flexibility.

160
00:14:29,450 --> 00:14:33,279
It is almost exactly the same.

161
00:14:33,279 --> 00:14:36,330
All the api points are being revealed directly.

162
00:14:36,330 --> 00:14:39,860
The only hidden is setting up circles.

163
00:14:39,860 --> 00:14:48,630
And then of course the legend which was a
mess. Becomes just 1 line.

164
00:14:48,630 --> 00:14:52,560
You may be asking oykay, well, I have been
paying close attention.

165
00:14:52,560 --> 00:14:55,250
You never setup the layout of the chart.

166
00:14:55,250 --> 00:15:01,380
What's the deal? Is it magic? Do I have to
ask it?

167
00:15:01,380 --> 00:15:04,370
No, it is just a layout engine.

168
00:15:04,370 --> 00:15:10,130
1 is that you can merge different pieces together.

169
00:15:10,130 --> 00:15:11,301
You can align them in a table.

170
00:15:11,301 --> 00:15:17,120
The table turns out to be convenient for representing
charts.

171
00:15:17,120 --> 00:15:21,550
It represents the constraint, different pieces
need to align.

172
00:15:21,550 --> 00:15:24,160
The axes need to be aligned.

173
00:15:24,160 --> 00:15:29,220
And easy to represent in code.

174
00:15:29,220 --> 00:15:39,120
So, we can see that we kept the strength of
D3 that we liked. The power of the plot.

175
00:15:39,120 --> 00:15:43,270
And all these weaknesses are gone.

176
00:15:43,270 --> 00:15:49,060
You may say, it is great. We have seen that
other libraries can make the exact same scatterplot.

177
00:15:49,060 --> 00:15:50,800
This is not showing flexibility.

178
00:15:50,800 --> 00:15:53,630
We'll have another example.

179
00:15:53,630 --> 00:15:59,510
Suppose you have a kind of annoying customer.
Not that those exist. Whatever.

180
00:15:59,510 --> 00:16:05,660
You want a barchart that is going to show
the amount of rain in 3 cities in California.

181
00:16:05,660 --> 00:16:06,660
That's straightforward.

182
00:16:06,660 --> 00:16:12,380
This barplot. I'll set it up.

183
00:16:12,380 --> 00:16:16,000
And you go and they say, you have misunderstood.

184
00:16:16,000 --> 00:16:23,490
We wanted 3 barplots vertically on top of
eachother. We can see the difference from

185
00:16:23,490 --> 00:16:25,470
each.

186
00:16:25,470 --> 00:16:28,510
Luckily, that's just a table.

187
00:16:28,510 --> 00:16:30,480
We layout another table.

188
00:16:30,480 --> 00:16:32,510
And we have this crazy chart.

189
00:16:32,510 --> 00:16:35,580
Maybe they say, it is good.

190
00:16:35,580 --> 00:16:42,830
We want the Svg to be bigger, all the font
sizes to be bigger. And all needs to be in

191
00:16:42,830 --> 00:16:45,089
comic sense.

192
00:16:45,089 --> 00:16:49,290
This is going to look terrible.

193
00:16:49,290 --> 00:16:55,450
You change the Css. And you get this ugly
chart.

194
00:16:55,450 --> 00:17:00,260
But, let's not do that.

195
00:17:00,260 --> 00:17:05,800
And maybe you want gridlines.

196
00:17:05,800 --> 00:17:14,670
Maybe they want to add animations. You can
set animation. And you get the animations.

197
00:17:14,670 --> 00:17:21,000
It has default animator. For custom animations.

198
00:17:21,000 --> 00:17:24,910
Maybe you know they want to change to line
plots. You can do that.

199
00:17:24,910 --> 00:17:32,570
Maybe they want time axis. Maybe they want
to merge it together in 1 plot.

200
00:17:32,570 --> 00:17:34,180
You can do it.

201
00:17:34,180 --> 00:17:36,600
Change the grid lines. Sure.

202
00:17:36,600 --> 00:17:39,230
Add interactive pan and zoom.

203
00:17:39,230 --> 00:17:43,140
S why not.

204
00:17:43,140 --> 00:17:49,360
So, the result is. We were able to create
this chart.

205
00:17:49,360 --> 00:17:54,400
And we weren't able to create it, but iterate
quickly on different ideas.

206
00:17:54,400 --> 00:18:00,830
It's an order of magnitude faster than pure
D3.

207
00:18:00,830 --> 00:18:09,980
If I would be given this a week ago, this
would be the end.

208
00:18:09,980 --> 00:18:12,750
Why don't you build a charting abrary out
of it.

209
00:18:12,750 --> 00:18:18,550
And a path back into plottable.

210
00:18:18,550 --> 00:18:22,270
I had this long plane ride to Berlin.

211
00:18:22,270 --> 00:18:23,530
And built chartographer.

212
00:18:23,530 --> 00:18:32,460
It is plottable and easy mode zozer Couple
indications follow. Setting up the chart is

213
00:18:32,460 --> 00:18:34,040
1 line.

214
00:18:34,040 --> 00:18:38,050
And then we configure some labels and render
it in the other lines.

215
00:18:38,050 --> 00:18:41,810
It is supersimple to use.

216
00:18:41,810 --> 00:18:44,860
What is interesting to this.

217
00:18:44,860 --> 00:18:47,240
It only gives you these charts.

218
00:18:47,240 --> 00:18:55,950
And it has a path flexibility. Rather to be
a charting library that does it all. You get

219
00:18:55,950 --> 00:18:56,950
Getcomponents.

220
00:18:56,950 --> 00:19:02,270
You can arap them, twittle with them.

221
00:19:02,270 --> 00:19:07,000
So, this enables a new workflow for developing
charts.

222
00:19:07,000 --> 00:19:12,130
You can start with chartographer. 30 seconds
and you have your chart.

223
00:19:12,130 --> 00:19:14,590
You want to change it.

224
00:19:14,590 --> 00:19:20,600
You can drop down into plottable. Every 5
minutes you can try out a new layout.

225
00:19:20,600 --> 00:19:26,150
You discover you want fancy data visualisation
that we don't have.

226
00:19:26,150 --> 00:19:30,780
You can drop down to D3. Write a plugin and
you have your chart.

227
00:19:30,780 --> 00:19:34,440
And hopefully you submit it back to us.

228
00:19:34,440 --> 00:19:48,500
So, now comes the moment in the presentation
you didn't know you were waiting for.

229
00:19:48,500 --> 00:19:52,370
Which is internet spaceships.

230
00:19:52,370 --> 00:19:57,510
So, that was a clip from a videogame.

231
00:19:57,510 --> 00:19:58,990
Eve online.

232
00:19:58,990 --> 00:20:04,590
A mix of spaceships and spreadsheets.

233
00:20:04,590 --> 00:20:09,620
A spreadsheet means someone is crying out
for data visualisation.

234
00:20:09,620 --> 00:20:16,500
It is kind of neat.

235
00:20:16,500 --> 00:20:21,750
We have here a chart that is showing a couple
of things about plottable. That my design

236
00:20:21,750 --> 00:20:24,630
skills are not good to begin with.

237
00:20:24,630 --> 00:20:33,190
We are seeing that we can hide data. Each
is a spaceship.

238
00:20:33,190 --> 00:20:34,790
Its color is what race.

239
00:20:34,790 --> 00:20:39,230
How many have played Eve?

240
00:20:39,230 --> 00:20:41,740
Okay.

241
00:20:41,740 --> 00:20:48,990
Every circle is a spaceship. The color is
representing the fraction.

242
00:20:48,990 --> 00:20:57,470
It is stroke is showing what class identity
it is.

243
00:20:57,470 --> 00:21:03,180
Its X and Y position how much shield and armor.

244
00:21:03,180 --> 00:21:11,809
So, the fact that all these are faction ships.

245
00:21:11,809 --> 00:21:14,980
More shields.

246
00:21:14,980 --> 00:21:20,910
And I got this data source from someone who
did it by hand.

247
00:21:20,910 --> 00:21:25,549
I sall of these typo's. We are not fitting
the pattern.

248
00:21:25,549 --> 00:21:34,650
It also has tool tips. This is not a feature
in Plottable yet. It is just D3. You can use

249
00:21:34,650 --> 00:21:35,650
other libraries.

250
00:21:35,650 --> 00:21:39,390
It has this pan and zoom.

251
00:21:39,390 --> 00:21:41,809
The interesting thing about this chart.

252
00:21:41,809 --> 00:21:44,350
It is incomplete.

253
00:21:44,350 --> 00:21:51,090
I think we should have a legend that shows
stroke, rather filling the bubble.

254
00:21:51,090 --> 00:21:58,760
And I think that we should have another legend
that is showing different radius. This is

255
00:21:58,760 --> 00:22:00,090
where you come up.

256
00:22:00,090 --> 00:22:06,480
The idea is that it is very modular and easy
to work with.

257
00:22:06,480 --> 00:22:12,280
Maybe one of you guys will head over to our
github.

258
00:22:12,280 --> 00:22:13,800
And take a look at the code.

259
00:22:13,800 --> 00:22:15,680
You can write these legend pieces.

260
00:22:15,680 --> 00:22:18,740
Everybody will be able to use it.

261
00:22:18,740 --> 00:22:24,160
That is the path forward. Out of this mess
of 105 charting libraries.

262
00:22:24,160 --> 00:22:29,040
We need to stop independently building separate
things.

263
00:22:29,040 --> 00:22:34,140
We need to find 1 Api, that is expressive.

264
00:22:34,140 --> 00:22:41,860
And work together to build all the pieces.
So, somebody can have a chart they want and

265
00:22:41,860 --> 00:22:47,240
get back to saving the world or hanging at
the aquarium with otters.

266
00:22:47,240 --> 00:22:51,670
So, this is the end of my talk.

267
00:22:51,670 --> 00:22:55,620
Let's see if I have more slides.

268
00:22:55,620 --> 00:22:56,750
No.

269
00:22:56,750 --> 00:22:58,670
My name is Dan Mané.

270
00:22:58,670 --> 00:23:03,750
You can find me at@Danmane.

271
00:23:03,750 --> 00:23:10,600
You can find us at this website.

272
00:23:10,600 --> 00:23:12,970
Since I have 1.20minute. I take at least one
question.

273
00:23:12,970 --> 00:23:17,040
If anyone wants to ask.

274
00:23:17,040 --> 00:23:25,610
I'll take that as a sign it was so conclusive.
And you download it right away.

275
00:23:25,610 --> 00:23:29,340
All right. Thank you guys.

