1
00:00:01,640 --> 00:00:12,620
Can you hear me?

2
00:00:12,620 --> 00:00:15,360
Good?

3
00:00:15,360 --> 00:00:18,110
Okay.

4
00:00:18,110 --> 00:00:30,710
In a world with 1 man, versus his own mind,
and 24 hours, this is a game jam, there is

5
00:00:30,710 --> 00:00:32,259
just one problem...

6
00:00:32,259 --> 00:00:41,460
His game, Astroids, totally different this
time is actually not different.

7
00:00:41,460 --> 00:00:44,129
Oh man...

8
00:00:44,129 --> 00:00:49,829
It is just Astroids.

9
00:00:49,829 --> 00:00:52,440
That's kind of a problem!

10
00:00:52,440 --> 00:00:53,739
I can't even shoot!

11
00:00:53,739 --> 00:00:54,980
That's even worse.

12
00:00:54,980 --> 00:00:57,170
Oh my gosh.

13
00:00:57,170 --> 00:00:58,170
Okay...

14
00:00:58,170 --> 00:01:02,280
It is not different at all.

15
00:01:02,280 --> 00:01:07,090
It uses all this typed arrays and physics.

16
00:01:07,090 --> 00:01:11,640
Fun making it, but the players don't care.

17
00:01:11,640 --> 00:01:15,220
There are only a few hours left before the
deadline.

18
00:01:15,220 --> 00:01:18,600
Maybe I can quickly change it?

19
00:01:18,600 --> 00:01:19,600
Maybe?

20
00:01:19,600 --> 00:01:22,360
All right, what can I do here?

21
00:01:22,360 --> 00:01:23,360
All right.

22
00:01:23,360 --> 00:01:26,180
I can try, making a ship huge.

23
00:01:26,180 --> 00:01:28,310
All right!

24
00:01:28,310 --> 00:01:33,850
I got a big ship.

25
00:01:33,850 --> 00:01:35,560
Cool!

26
00:01:35,560 --> 00:01:37,930
That's the same game...

27
00:01:37,930 --> 00:01:39,700
That's really a problem.

28
00:01:39,700 --> 00:01:40,700
Astroids tiny.

29
00:01:40,700 --> 00:01:41,969
hard to hit.

30
00:01:41,969 --> 00:01:46,080
People like hard games, right?

31
00:01:46,080 --> 00:01:47,499
Right?

32
00:01:47,499 --> 00:01:48,910
- Right!

33
00:01:48,910 --> 00:01:51,740
- Thank you.

34
00:01:51,740 --> 00:01:53,150
- Okay...

35
00:01:53,150 --> 00:01:56,219
Well, now it is just...

36
00:01:56,219 --> 00:01:58,460
Just bad.

37
00:01:58,460 --> 00:02:00,869
So, that's no good.

38
00:02:00,869 --> 00:02:03,570
No good at all.

39
00:02:03,570 --> 00:02:04,750
Okay.

40
00:02:04,750 --> 00:02:07,329
What the heck I'm going to do?

41
00:02:07,329 --> 00:02:09,200
Like...

42
00:02:09,200 --> 00:02:11,069
Uh...

43
00:02:11,069 --> 00:02:12,950
Oh!

44
00:02:12,950 --> 00:02:15,690
What if...

45
00:02:15,690 --> 00:02:18,440
You...

46
00:02:18,440 --> 00:02:21,170
Control the astroids?!

47
00:02:21,170 --> 00:02:23,160
Yes!

48
00:02:23,160 --> 00:02:24,160
I can do this!

49
00:02:24,160 --> 00:02:25,230
This is something I can do.

50
00:02:25,230 --> 00:02:28,000
This is awesome!

51
00:02:28,000 --> 00:02:31,980
Yes, yes, yes, totally cool, let's do this.

52
00:02:31,980 --> 00:02:35,480
Wait, wait, how I have the time?

53
00:02:35,480 --> 00:02:37,170
It is not easy.

54
00:02:37,170 --> 00:02:38,819
I'm going to change the game.

55
00:02:38,819 --> 00:02:40,540
How is this going to be possible?

56
00:02:40,540 --> 00:02:42,500
All right.

57
00:02:42,500 --> 00:02:47,240
I modeled everything as data.

58
00:02:47,240 --> 00:02:48,240
That's awesome.

59
00:02:48,240 --> 00:02:49,240
Right?

60
00:02:49,240 --> 00:02:50,240


61
00:02:50,240 --> 00:02:51,240
Okay, cool.

62
00:02:51,240 --> 00:02:52,240
All right.

63
00:02:52,240 --> 00:02:53,980
What does it mean?

64
00:02:53,980 --> 00:02:56,220
Crap, I forgot.

65
00:02:56,220 --> 00:03:00,319
Is there like a database?

66
00:03:00,319 --> 00:03:01,319
Databases are fun?

67
00:03:01,319 --> 00:03:03,510
No, they are boring.

68
00:03:03,510 --> 00:03:04,599
Really quite boring.

69
00:03:04,599 --> 00:03:06,209
They are not a game.

70
00:03:06,209 --> 00:03:14,120
Like, in fact, if you like go up to one and
hit the action button, you can capture one.

71
00:03:14,120 --> 00:03:16,410
Then it corrupts your save game.

72
00:03:16,410 --> 00:03:19,540
Then your game is gone.

73
00:03:19,540 --> 00:03:21,030
Oh!!

74
00:03:21,030 --> 00:03:22,530
Sorry.

75
00:03:22,530 --> 00:03:24,020


76
00:03:24,020 --> 00:03:29,890
I'm back, I'm back.

77
00:03:29,890 --> 00:03:30,890
Totally back.

78
00:03:30,890 --> 00:03:33,340
All right, all right.

79
00:03:33,340 --> 00:03:36,280
So, what are we talking about here?

80
00:03:36,280 --> 00:03:37,360
Okay.

81
00:03:37,360 --> 00:03:44,120
Well, before we discover what we talk about,
let's talk about how another version of Astroids

82
00:03:44,120 --> 00:03:46,870
might have been created.

83
00:03:46,870 --> 00:03:54,830
An object oriented, approach.

84
00:03:54,830 --> 00:04:00,360
You have your Astroid, your ship, bullet,
you have other things.

85
00:04:00,360 --> 00:04:01,680
They would inherit from eachother.

86
00:04:01,680 --> 00:04:03,620
It might look like this.

87
00:04:03,620 --> 00:04:06,200
On the left Astroid, on the right bullet.

88
00:04:06,200 --> 00:04:07,790
They are similar.

89
00:04:07,790 --> 00:04:20,670
They inherit from a renderable thing, collidablec
thing, inherits from a global world thing.

90
00:04:20,670 --> 00:04:21,890
Great.

91
00:04:21,890 --> 00:04:23,330
The ship is a bit more interesting.

92
00:04:23,330 --> 00:04:27,880
It might inherit from keyboard control.

93
00:04:27,880 --> 00:04:29,550
We need to move it around.

94
00:04:29,550 --> 00:04:37,320
And, there is going to be a lot of implementations
done in each of the areas of the hierarchy.

95
00:04:37,320 --> 00:04:39,800
Especially the ship itself.

96
00:04:39,800 --> 00:04:40,800
An update.

97
00:04:40,800 --> 00:04:42,450
If you saw Hunter's talk.

98
00:04:42,450 --> 00:04:43,450
Update functions.

99
00:04:43,450 --> 00:04:44,640
Throughout the hierarchy.

100
00:04:44,640 --> 00:04:50,680
You are going to have concrete implementations
of things.

101
00:04:50,680 --> 00:04:51,680
Draw.

102
00:04:51,680 --> 00:04:53,160
It is going to be in the ship.

103
00:04:53,160 --> 00:04:54,460
If it is renderable.

104
00:04:54,460 --> 00:04:56,510
It needs to know how it renders itself.

105
00:04:56,510 --> 00:04:58,540
And shoot.

106
00:04:58,540 --> 00:05:02,600
The ship shoots.

107
00:05:02,600 --> 00:05:06,130
If we want to refactor our code.

108
00:05:06,130 --> 00:05:07,980
You can tell what is going on here.

109
00:05:07,980 --> 00:05:14,300
If we want to refactor the fake code to enable
controllable astroids.

110
00:05:14,300 --> 00:05:15,300
What will it look like?

111
00:05:15,300 --> 00:05:17,390
Like this.

112
00:05:17,390 --> 00:05:20,610
The inheretence tree.

113
00:05:20,610 --> 00:05:28,290
The keyboard control, rip it out and put it
into the astroid entity.

114
00:05:28,290 --> 00:05:31,600
And physically copy code.

115
00:05:31,600 --> 00:05:34,430
Handle input.

116
00:05:34,430 --> 00:05:35,590
And the shoot function.

117
00:05:35,590 --> 00:05:38,770
A lot of other things too.

118
00:05:38,770 --> 00:05:40,110
Copy data properties.

119
00:05:40,110 --> 00:05:42,990
It is hard to know what those are.

120
00:05:42,990 --> 00:05:46,450
Paste it in the Astroid.

121
00:05:46,450 --> 00:05:48,030
Tricky.

122
00:05:48,030 --> 00:05:53,060
The real world is definitely a bit worse.

123
00:05:53,060 --> 00:05:54,330
This is a game jam.

124
00:05:54,330 --> 00:05:56,630
You write code and get it done.

125
00:05:56,630 --> 00:05:59,380
That is really messy code.

126
00:05:59,380 --> 00:06:00,880
It would be worse.

127
00:06:00,880 --> 00:06:04,570
So, pro's and con's quick.

128
00:06:04,570 --> 00:06:05,970
You faked out.

129
00:06:05,970 --> 00:06:08,280
All the logic is local.

130
00:06:08,280 --> 00:06:09,280
In the ship.

131
00:06:09,280 --> 00:06:12,720
Or in the render or in the collidable.

132
00:06:12,720 --> 00:06:15,400
It is spread out through the hierarchy.

133
00:06:15,400 --> 00:06:16,750
As well as the state.

134
00:06:16,750 --> 00:06:21,290
Your position, rotation, shapes, images.

135
00:06:21,290 --> 00:06:24,190
All spread thoughout the hierarchy.

136
00:06:24,190 --> 00:06:25,980
Also hard to optimize.

137
00:06:25,980 --> 00:06:29,380
You have to deal with these objects.

138
00:06:29,380 --> 00:06:31,250
They may have different interfaces.

139
00:06:31,250 --> 00:06:36,370
It is hard to do it.

140
00:06:36,370 --> 00:06:41,990
You are restricted for certain types of optimisations.

141
00:06:41,990 --> 00:06:44,500
That's the object oriented approach.

142
00:06:44,500 --> 00:06:53,490
The data oriented approach, what the Astroid
game is made out of, has 3 main tenants.

143
00:06:53,490 --> 00:06:58,590
Functions operate on data, not Objects.

144
00:06:58,590 --> 00:07:02,910
Obviously new object is capital O.

145
00:07:02,910 --> 00:07:11,590
What I mean by this, is an object meaning
an object that inherits.

146
00:07:11,590 --> 00:07:15,060
Or has methods attached to it.

147
00:07:15,060 --> 00:07:17,580
Anything more than simple data.

148
00:07:17,580 --> 00:07:19,190
We want functions that are relatively pure.

149
00:07:19,190 --> 00:07:24,970
There are going to be more than 1.

150
00:07:24,970 --> 00:07:27,500
Even though if it is a game in the browser.

151
00:07:27,500 --> 00:07:30,940
For double buffering.

152
00:07:30,940 --> 00:07:36,530
There can be more than 1 ship or more astroids.

153
00:07:36,530 --> 00:07:43,740
The final tenant is not inhibit optimisation
if the developer choses to do that.

154
00:07:43,740 --> 00:07:45,880
We'll see how in a little bit.

155
00:07:45,880 --> 00:07:48,560
Bashing things up mostly.

156
00:07:48,560 --> 00:07:50,010
This is not perfect.

157
00:07:50,010 --> 00:07:54,440
I barely know what I'm talking about.

158
00:07:54,440 --> 00:07:55,910
Let's move on.

159
00:07:55,910 --> 00:07:57,310
It all starts with a pocket.

160
00:07:57,310 --> 00:08:02,300
This system, this thing I wrote, I wrote it
obviously.

161
00:08:02,300 --> 00:08:03,300
But not a library.

162
00:08:03,300 --> 00:08:07,150
To demonstrate the ideas.

163
00:08:07,150 --> 00:08:08,750
So, just keep that in mind.

164
00:08:08,750 --> 00:08:10,360
It starts with a pocket.

165
00:08:10,360 --> 00:08:16,690
It is a container, just like your pocket.

166
00:08:16,690 --> 00:08:22,310
And, it also has a tick method.

167
00:08:22,310 --> 00:08:27,750
It is not really important.

168
00:08:27,750 --> 00:08:32,380
It is something constantly running.

169
00:08:32,380 --> 00:08:38,510
Once we have a pocket, then we can add component
types to the pocket.

170
00:08:38,510 --> 00:08:40,050
Like in react.

171
00:08:40,050 --> 00:08:41,159
Maybe?

172
00:08:41,159 --> 00:08:43,390
Well, no...

173
00:08:43,390 --> 00:08:46,580
Not at all actually.

174
00:08:46,580 --> 00:08:50,550
Components in React, they don't have a ton
of state.

175
00:08:50,550 --> 00:08:51,550
They can have state.

176
00:08:51,550 --> 00:08:53,360
They have methods or functions.

177
00:08:53,360 --> 00:08:55,610
It is a little bit different.

178
00:08:55,610 --> 00:08:56,610
An example.

179
00:08:56,610 --> 00:08:59,960
A rotation component type.

180
00:08:59,960 --> 00:09:08,010
Of what rotation means in terms of data, properties.

181
00:09:08,010 --> 00:09:10,620
It has an angle property and a rate property.

182
00:09:10,620 --> 00:09:13,210
They default to 0.

183
00:09:13,210 --> 00:09:20,080
If we look, the pocket, when it is told to
create, passes an object.

184
00:09:20,080 --> 00:09:24,030
That we then use to attach the properties
to.

185
00:09:24,030 --> 00:09:30,930
A pattern implying you pass options and you
get back data.

186
00:09:30,930 --> 00:09:34,030
On the further slides a shortcut.

187
00:09:34,030 --> 00:09:38,330
To saves typing.

188
00:09:38,330 --> 00:09:40,710
In further slides you'll see it instead.

189
00:09:40,710 --> 00:09:43,470
Another example, a drag component.

190
00:09:43,470 --> 00:09:46,360
That slows down over time.

191
00:09:46,360 --> 00:09:48,600
Dragged upton.

192
00:09:48,600 --> 00:09:50,080
No functionality.

193
00:09:50,080 --> 00:09:52,590
The data require.

194
00:09:52,590 --> 00:09:57,120
A percentage of velocity kept each frame.

195
00:09:57,120 --> 00:09:59,680
We'll see how it works in a minute.

196
00:09:59,680 --> 00:10:01,430
It is just data.

197
00:10:01,430 --> 00:10:04,560
Just plain objects.

198
00:10:04,560 --> 00:10:12,550
Once we have our component types, definitions,
once we have that, we can request a key from

199
00:10:12,550 --> 00:10:13,550
our pocket.

200
00:10:13,550 --> 00:10:15,420
Your pocket always has keys.

201
00:10:15,420 --> 00:10:16,420
Right?

202
00:10:16,420 --> 00:10:22,200
A key is simply a collection of component
types.

203
00:10:22,200 --> 00:10:24,770
Turned into instances of that component.

204
00:10:24,770 --> 00:10:28,460
In this case we are requesting a key to be
made.

205
00:10:28,460 --> 00:10:30,210
Rotation and drag.

206
00:10:30,210 --> 00:10:34,490
A default value of rate 0.9.

207
00:10:34,490 --> 00:10:35,510
This is important.

208
00:10:35,510 --> 00:10:36,790
It defaults to 0.

209
00:10:36,790 --> 00:10:39,420
We are overwriting the value.

210
00:10:39,420 --> 00:10:44,440
The key back is an ID, a number.

211
00:10:44,440 --> 00:10:47,800
Uses index into something else.

212
00:10:47,800 --> 00:10:49,810
This is important later, I swear.

213
00:10:49,810 --> 00:10:51,400
It is just an ID.

214
00:10:51,400 --> 00:10:53,490
Here is a bigger example.

215
00:10:53,490 --> 00:10:55,040
A lot of code.

216
00:10:55,040 --> 00:10:57,980
Not important to notice the details.

217
00:10:57,980 --> 00:11:01,740
Also that there are several things in quotes.

218
00:11:01,740 --> 00:11:03,100
The component types.

219
00:11:03,100 --> 00:11:05,840
And the options.

220
00:11:05,840 --> 00:11:14,750
In this case, there is no options passed on
the thrust or drag, but rotation has a default

221
00:11:14,750 --> 00:11:15,750
rate.

222
00:11:15,750 --> 00:11:16,750
This is actually the ship.

223
00:11:16,750 --> 00:11:22,000
How the ship is defined in the Astroids game.

224
00:11:22,000 --> 00:11:23,390
We define the points.

225
00:11:23,390 --> 00:11:27,610
And some other things, I'll get into more.

226
00:11:27,610 --> 00:11:32,530
Once we have our component data and keys,
then we can write systems.

227
00:11:32,530 --> 00:11:37,690
These are going to modify the component data.

228
00:11:37,690 --> 00:11:47,770
This is the system or the functionality, required
to apply thrust to something in the game.

229
00:11:47,770 --> 00:11:51,870
So, first of all, has a name.

230
00:11:51,870 --> 00:11:53,590
It has requirements.

231
00:11:53,590 --> 00:11:56,010
These are the types of data that it operates
on.

232
00:11:56,010 --> 00:12:01,820
This system will only be invoked if the types
of data exist.

233
00:12:01,820 --> 00:12:08,060
Finally, what the system does, the action.

234
00:12:08,060 --> 00:12:13,190
It is invoked, given a list of keys that have
all these different components.

235
00:12:13,190 --> 00:12:18,610
And then finally giving collections of the
component that you can index into.

236
00:12:18,610 --> 00:12:20,400
This is what that looks like.

237
00:12:20,400 --> 00:12:25,060
You can see, Var(k) = keys.

238
00:12:25,060 --> 00:12:29,110
Shapes, positions shapes, rotations.

239
00:12:29,110 --> 00:12:36,570
The actual code that does render point shape,
in the previous apply thrust, it is not on

240
00:12:36,570 --> 00:12:38,290
the slide.

241
00:12:38,290 --> 00:12:42,481
It is not magical, suddenly it moves.

242
00:12:42,481 --> 00:12:44,061
It is to show the structure around it.

243
00:12:44,061 --> 00:12:48,640
It is the same in the games.

244
00:12:48,640 --> 00:12:49,990
Okay.

245
00:12:49,990 --> 00:12:57,100
Here is another example of a system, sorry,
here is the input thrust system.

246
00:12:57,100 --> 00:13:00,390
One more little shortcut.

247
00:13:00,390 --> 00:13:07,700
Rather than in this previous slide, the system
is invoked once and loop through each key

248
00:13:07,700 --> 00:13:08,900
manually.

249
00:13:08,900 --> 00:13:14,550
In this case, the system is invoked once for
each key and gives you the data that you want,

250
00:13:14,550 --> 00:13:15,830
the position, rotation, thrust.

251
00:13:15,830 --> 00:13:18,220
It is just a shortcut.

252
00:13:18,220 --> 00:13:19,370
Don't worry about it.

253
00:13:19,370 --> 00:13:22,960
I wanted to point it out.

254
00:13:22,960 --> 00:13:24,190
Okay.

255
00:13:24,190 --> 00:13:30,310
Now, at the beginning of this we talked about
player controlled Astroids.

256
00:13:30,310 --> 00:13:31,790
Are we going to come back to it?

257
00:13:31,790 --> 00:13:35,070
I have been talkig for a while now.

258
00:13:35,070 --> 00:13:39,270
All right, yes, the first step is rotation.

259
00:13:39,270 --> 00:13:47,500
We want to take our Astroids and make them
rotatable.

260
00:13:47,500 --> 00:13:49,240
Here is the rotation code.

261
00:13:49,240 --> 00:13:50,300
This is it.

262
00:13:50,300 --> 00:13:56,020
All the code responsible for rotating something.

263
00:13:56,020 --> 00:14:01,910
It has a rotation component and a human controlled
zero 1 component.

264
00:14:01,910 --> 00:14:03,170
Scientific!

265
00:14:03,170 --> 00:14:05,480
You might be wondering, what is up with that?

266
00:14:05,480 --> 00:14:12,250
Why is there no data passed in, human control
zero 1?

267
00:14:12,250 --> 00:14:13,250
There isn't one.

268
00:14:13,250 --> 00:14:19,100
This is the last part of our pocket system.

269
00:14:19,100 --> 00:14:23,140
We use labels as anonimous components.

270
00:14:23,140 --> 00:14:27,250
To label a key as something.

271
00:14:27,250 --> 00:14:28,670
This is the definition of an Astroid.

272
00:14:28,670 --> 00:14:32,940
It has a position, shape, bounding box and
rotation.

273
00:14:32,940 --> 00:14:38,220
It also has an Astroid.

274
00:14:38,220 --> 00:14:40,160
It has a name of Astroid.

275
00:14:40,160 --> 00:14:46,250
This is useful, because for example in the
Astroid ship collider code, we only want to

276
00:14:46,250 --> 00:14:49,770
talk to Astroids.

277
00:14:49,770 --> 00:14:52,520
And a ship is similar to an Astroid.

278
00:14:52,520 --> 00:14:56,000
The ship also has shape, position and rotation.

279
00:14:56,000 --> 00:15:01,840
The astroid tag or label is the only thing
that makes this simple only being invoked

280
00:15:01,840 --> 00:15:02,840
for astroids.

281
00:15:02,840 --> 00:15:06,730
Instead of all of these things.

282
00:15:06,730 --> 00:15:08,450
The pocket gives you a little warning.

283
00:15:08,450 --> 00:15:11,770
Don't know if you can see it.

284
00:15:11,770 --> 00:15:15,350
If it doesn't find a component it says, I
didn't find it.

285
00:15:15,350 --> 00:15:21,610
I hope it is a label.

286
00:15:21,610 --> 00:15:26,730
This is the first step in making the astroids
controllable.

287
00:15:26,730 --> 00:15:29,790
We have the tag human-controlled-01.

288
00:15:29,790 --> 00:15:33,500
This label.

289
00:15:33,500 --> 00:15:35,980
What happens if we add it to the astroids?

290
00:15:35,980 --> 00:15:37,540
Maybe something awesome?

291
00:15:37,540 --> 00:15:39,210
Let's find out.

292
00:15:39,210 --> 00:15:42,450
Is there astroid?

293
00:15:42,450 --> 00:15:44,080
Perfect.

294
00:15:44,080 --> 00:15:50,410
I'll add this in.

295
00:15:50,410 --> 00:15:51,820
Save it.

296
00:15:51,820 --> 00:15:53,080
Refresh.

297
00:15:53,080 --> 00:15:54,340
Hey!

298
00:15:54,340 --> 00:15:56,460
That's not working at all!

299
00:15:56,460 --> 00:15:58,620
What happened?!

300
00:15:58,620 --> 00:15:59,620
What happened?

301
00:15:59,620 --> 00:16:05,960
Well, what happened is that we have our human-controlled-01.

302
00:16:05,960 --> 00:16:06,960
What didn't happen.

303
00:16:06,960 --> 00:16:12,600
If we look at the system itself, it accept
rotation.

304
00:16:12,600 --> 00:16:17,250
And it uses the rate to increase the angle
of rotation.

305
00:16:17,250 --> 00:16:18,900
The logic is not that important.

306
00:16:18,900 --> 00:16:23,790
What is important, the component, rotation
has a default value zero.

307
00:16:23,790 --> 00:16:35,050
On the astroid we have to make sure, we use
an actual value instead of default.

308
00:16:35,050 --> 00:16:38,770
These are rotation.

309
00:16:38,770 --> 00:16:40,010
Save.

310
00:16:40,010 --> 00:16:41,250
Refresh.

311
00:16:41,250 --> 00:16:42,779
We have astroids moving around.

312
00:16:42,779 --> 00:16:45,310
I swear they are moving around.

313
00:16:45,310 --> 00:16:53,110
Let me undo my changes of before.

314
00:16:53,110 --> 00:16:54,200
Astroids are moving!

315
00:16:54,200 --> 00:16:56,200
All right!

316
00:16:56,200 --> 00:16:57,200
(applause)

317
00:16:57,200 --> 00:16:58,200
Cool!

318
00:16:58,200 --> 00:17:02,200
There is step 1.

319
00:17:02,200 --> 00:17:03,200
Okay.

320
00:17:03,200 --> 00:17:04,209
Yes!

321
00:17:04,209 --> 00:17:05,829
Now let's make them thrust!

322
00:17:05,829 --> 00:17:10,550
So, to make them thrust here is the thrusting
code.

323
00:17:10,550 --> 00:17:12,110
We look at the requirements.

324
00:17:12,110 --> 00:17:13,959
Position, rotation, thrust.

325
00:17:13,959 --> 00:17:20,360
Human controlled-01.

326
00:17:20,360 --> 00:17:23,560
Here is what thrust looks like in the ship.

327
00:17:23,560 --> 00:17:26,569
Let's add it to the astroid.

328
00:17:26,569 --> 00:17:31,430
Here is our astroid over here.

329
00:17:31,430 --> 00:17:33,620
Refresh.

330
00:17:33,620 --> 00:17:40,050
We are spinning and moving.

331
00:17:40,050 --> 00:17:41,050
Okay!

332
00:17:41,050 --> 00:17:42,050
Yes!

333
00:17:42,050 --> 00:17:43,980
We have a cloud of astroids.

334
00:17:43,980 --> 00:17:44,980
(applause)

335
00:17:44,980 --> 00:17:45,980
okay.

336
00:17:45,980 --> 00:17:48,990
We are really getting somewhere now!

337
00:17:48,990 --> 00:17:51,860
Let's make them shoot.

338
00:17:51,860 --> 00:17:52,860
If we look at the astroid.

339
00:17:52,860 --> 00:17:58,290
The projectile launcher thing is already on
the ship.

340
00:17:58,290 --> 00:18:00,000
Let's add it to the astroid.

341
00:18:00,000 --> 00:18:03,520
It should be good.

342
00:18:03,520 --> 00:18:07,120
Projectile launcher.

343
00:18:07,120 --> 00:18:11,160
And the value was launchforce.

344
00:18:11,160 --> 00:18:14,559
That's how much power, how fast it goes.

345
00:18:14,559 --> 00:18:15,559
Refresh.

346
00:18:15,559 --> 00:18:16,559
Yeah!

347
00:18:16,559 --> 00:18:19,230
Look at that.

348
00:18:19,230 --> 00:18:22,080
I've got so many astroids.

349
00:18:22,080 --> 00:18:23,890
They even kill themselves, look!

350
00:18:23,890 --> 00:18:24,990
There we go.

351
00:18:24,990 --> 00:18:25,990
Killing themselves.

352
00:18:25,990 --> 00:18:34,540
Not even a challenge anymore for the ship.

353
00:18:34,540 --> 00:18:35,950
Yeah!

354
00:18:35,950 --> 00:18:36,950
That's cool.

355
00:18:36,950 --> 00:18:39,070
Let's make the ship get hit.

356
00:18:39,070 --> 00:18:41,730
Let's reverse things.

357
00:18:41,730 --> 00:18:51,500
This is the code that is responsible for colliding
astroids and the projectiles.

358
00:18:51,500 --> 00:18:59,600
The only thing that is specific to astroids
about this, besides the name, some string,

359
00:18:59,600 --> 00:19:01,990
is the astroid label.

360
00:19:01,990 --> 00:19:07,880
We added that astroid label for the heck of
it.

361
00:19:07,880 --> 00:19:12,900
What happens if we take the system, and instead
of operating astroids, we tell it to operate

362
00:19:12,900 --> 00:19:14,240
on ships.

363
00:19:14,240 --> 00:19:17,570
Let's try that.

364
00:19:17,570 --> 00:19:19,450
Here is our projectile collidor.

365
00:19:19,450 --> 00:19:21,340
Change it to ship.

366
00:19:21,340 --> 00:19:26,450
If we go back to ship, it has a ship tag.

367
00:19:26,450 --> 00:19:27,870
Label.

368
00:19:27,870 --> 00:19:30,730
Hit refresh.

369
00:19:30,730 --> 00:19:32,160
And...

370
00:19:32,160 --> 00:19:33,600
Now...

371
00:19:33,600 --> 00:19:34,600
If we...

372
00:19:34,600 --> 00:19:37,220
There we go, it killed itself.

373
00:19:37,220 --> 00:19:44,080
If we chase the ship, eventually, where did
it go?

374
00:19:44,080 --> 00:19:45,080
If it hits...

375
00:19:45,080 --> 00:19:54,210
I should make the ship bigger.

376
00:19:54,210 --> 00:20:01,530
The ship.

377
00:20:01,530 --> 00:20:04,380
Trust me, it dies!

378
00:20:04,380 --> 00:20:05,540
Okay.

379
00:20:05,540 --> 00:20:07,850
All right.

380
00:20:07,850 --> 00:20:09,210
I'm going to do it for real.

381
00:20:09,210 --> 00:20:11,000
Here we go.

382
00:20:11,000 --> 00:20:12,790
Wait, wait.

383
00:20:12,790 --> 00:20:13,790
For real.

384
00:20:13,790 --> 00:20:14,790
Okay.

385
00:20:14,790 --> 00:20:17,670
It will be impossible to miss.

386
00:20:17,670 --> 00:20:19,929
Got it!

387
00:20:19,929 --> 00:20:21,059
(applause)

388
00:20:21,059 --> 00:20:22,200
okay.

389
00:20:22,200 --> 00:20:26,380
The hunter has become the hunted.

390
00:20:26,380 --> 00:20:28,590
The astroids have their revenge.

391
00:20:28,590 --> 00:20:33,450
There is still tons more work to do.

392
00:20:33,450 --> 00:20:37,630
But not today.

393
00:20:37,630 --> 00:20:40,850
We could finish this thing.

394
00:20:40,850 --> 00:20:46,130
So, talking about the data oriented approach
and pro's and cons.

395
00:20:46,130 --> 00:20:47,371
These are the same thing.

396
00:20:47,371 --> 00:20:49,880
I call them pro, con.

397
00:20:49,880 --> 00:20:53,030
Sometimes beneficial.

398
00:20:53,030 --> 00:20:54,330
Logic is spread out.

399
00:20:54,330 --> 00:20:55,790
Many systems.

400
00:20:55,790 --> 00:20:57,700
Logic is in each system.

401
00:20:57,700 --> 00:21:06,080
It can be tricky, but it is nice, because
they are separated.

402
00:21:06,080 --> 00:21:08,380
The state is consolidated.

403
00:21:08,380 --> 00:21:14,049
The only thing that changes are those components.

404
00:21:14,049 --> 00:21:18,530
Because we can create a system that operates
on a whole range of components.

405
00:21:18,530 --> 00:21:20,100
It is easier to optimize.

406
00:21:20,100 --> 00:21:26,400
If we want to want it for typed array, we
can do that.

407
00:21:26,400 --> 00:21:31,549
All of the positions are stored in the same
kind of area.

408
00:21:31,549 --> 00:21:32,549
Same data.

409
00:21:32,549 --> 00:21:34,679
As you saw, it is modular.

410
00:21:34,679 --> 00:21:38,420
We can take labels, code and move them around.

411
00:21:38,420 --> 00:21:40,590
And get different functionality.

412
00:21:40,590 --> 00:21:44,090
Well, pretty different functionality.

413
00:21:44,090 --> 00:21:50,110
I did mention databases a long time ago.

414
00:21:50,110 --> 00:21:51,570
What does that mean?

415
00:21:51,570 --> 00:21:58,640
There is a pretty good 1 to 1 analog between
what I have done here and concepts of a database.

416
00:21:58,640 --> 00:22:01,940
At a fuzzy level.

417
00:22:01,940 --> 00:22:08,510
The component tipes.

418
00:22:08,510 --> 00:22:09,510
It is like a schema.

419
00:22:09,510 --> 00:22:13,640
Each is a column.

420
00:22:13,640 --> 00:22:17,090
The rotation has a rate and angle.

421
00:22:17,090 --> 00:22:19,490
Columns in a table.

422
00:22:19,490 --> 00:22:24,940
Our components are like the individual entries
in the table.

423
00:22:24,940 --> 00:22:26,480
They are the rows.

424
00:22:26,480 --> 00:22:31,690
Each individual instance of rotation is a
row in the rotation table.

425
00:22:31,690 --> 00:22:32,820
Our primary keys.

426
00:22:32,820 --> 00:22:35,360
They's why they are keys.

427
00:22:35,360 --> 00:22:37,750
Also the pocket.

428
00:22:37,750 --> 00:22:39,230
It looks pretty good.

429
00:22:39,230 --> 00:22:44,100
And finally, our systems are not stored procedures.

430
00:22:44,100 --> 00:22:47,580
More like queries and business locic mixed
together.

431
00:22:47,580 --> 00:22:48,580
Php-land.

432
00:22:48,580 --> 00:22:50,660
It is okay.

433
00:22:50,660 --> 00:22:52,230
It is game development.

434
00:22:52,230 --> 00:22:54,490
It is fine.

435
00:22:54,490 --> 00:22:58,390
All right.

436
00:22:58,390 --> 00:23:01,870
And just to show you how much like a database
this is.

437
00:23:01,870 --> 00:23:04,480
Here is the pocket.

438
00:23:04,480 --> 00:23:06,240
The container of things.

439
00:23:06,240 --> 00:23:11,640
If we look at the different components and
log that out.

440
00:23:11,640 --> 00:23:13,820
We get this.

441
00:23:13,820 --> 00:23:18,400
It gets interesting if we scroll down to the
positions.

442
00:23:18,400 --> 00:23:21,910
This is the position for key number 4.

443
00:23:21,910 --> 00:23:23,470
This is like entity number 4.

444
00:23:23,470 --> 00:23:24,679
Thing number 4.

445
00:23:24,679 --> 00:23:26,230
The values are right there.

446
00:23:26,230 --> 00:23:28,510
This was a snapshot in time.

447
00:23:28,510 --> 00:23:32,730
When this was taken.

448
00:23:32,730 --> 00:23:33,870
The X-Y values.

449
00:23:33,870 --> 00:23:37,390
It is an instant safe state.

450
00:23:37,390 --> 00:23:42,100
You can have save states.

451
00:23:42,100 --> 00:23:47,169
Here is the rotation for key number 4.

452
00:23:47,169 --> 00:23:51,799
It didn't have an angle set, but a rate.

453
00:23:51,799 --> 00:23:54,640
Cool!

454
00:23:54,640 --> 00:23:57,500
(sigh)

455
00:23:57,500 --> 00:24:02,000
I'm sure you are all wondering, did I finish
the game jam?

456
00:24:02,000 --> 00:24:06,200
That was the number 1 question on your minds
right now.

457
00:24:06,200 --> 00:24:08,780
And, get ready...

458
00:24:08,780 --> 00:24:11,559
I hope you are prepared!

459
00:24:11,559 --> 00:24:13,070
I didn't!

460
00:24:13,070 --> 00:24:16,131
Ehm, there wasn't even a jam.

461
00:24:16,131 --> 00:24:17,880
It was just for this talk.

462
00:24:17,880 --> 00:24:21,910
I'm sorry if I confused anyone.

463
00:24:21,910 --> 00:24:23,890
But that's all it was.

464
00:24:23,890 --> 00:24:25,540
There was no game jam.

465
00:24:25,540 --> 00:24:28,650
And, you know, hope that's okay.

466
00:24:28,650 --> 00:24:30,049
Thank you very much!

