1
00:00:12,769 --> 00:00:20,279

so let's talk scalable CSS I am a UI guy

2
00:00:20,279 --> 00:00:23,010
full time it's what I do so I am

3
00:00:23,010 --> 00:00:25,050
thrilled that you I Devon JavaScript

4
00:00:25,050 --> 00:00:28,830
seem to have suddenly become cool senior

5
00:00:28,830 --> 00:00:32,030
back-end guys back end only guys are

6
00:00:32,030 --> 00:00:34,230
suddenly behaving very differently these

7
00:00:34,230 --> 00:00:36,780
days they're becoming back-end guys who

8
00:00:36,780 --> 00:00:40,590
are also willing to do front end their

9
00:00:40,590 --> 00:00:43,230
their ears are perking up when i

10
00:00:43,230 --> 00:00:44,460
mentioned that i'm doing angular

11
00:00:44,460 --> 00:00:47,700
training they do a sheepish it'll will

12
00:00:47,700 --> 00:00:53,190
can I come too and hard core java

13
00:00:53,190 --> 00:00:56,430
architects I'm seeing they've got a new

14
00:00:56,430 --> 00:00:58,109
tool to write they want to do

15
00:00:58,109 --> 00:01:01,230
authentication or they want to do a napi

16
00:01:01,230 --> 00:01:03,239
for storage or something and they'll

17
00:01:03,239 --> 00:01:06,270
write it in note not just because

18
00:01:06,270 --> 00:01:08,880
they're trying to be hip but because

19
00:01:08,880 --> 00:01:11,310
javascript does useful things really

20
00:01:11,310 --> 00:01:14,310
efficiently and really well so people

21
00:01:14,310 --> 00:01:16,200
now they know note they know about

22
00:01:16,200 --> 00:01:18,150
single page applications they get that

23
00:01:18,150 --> 00:01:21,570
that change they get grunts they get

24
00:01:21,570 --> 00:01:23,340
angular they get em ER they know about

25
00:01:23,340 --> 00:01:26,009
parse calm and OS 10 itself is now

26
00:01:26,009 --> 00:01:28,439
scriptable in JavaScript we have

27
00:01:28,439 --> 00:01:30,750
JavaScript editors written in JavaScript

28
00:01:30,750 --> 00:01:34,770
not 12 and they understand that the

29
00:01:34,770 --> 00:01:36,860
JavaScript ecosystem has suddenly become

30
00:01:36,860 --> 00:01:39,840
familiar to them that it does all the

31
00:01:39,840 --> 00:01:41,640
things they expect it to do that it has

32
00:01:41,640 --> 00:01:43,829
the tooling they expected to have but

33
00:01:43,829 --> 00:01:45,570
it's mature in the way they expect it to

34
00:01:45,570 --> 00:01:52,409
be whoo so truly we have a set of three

35
00:01:52,409 --> 00:01:55,680
powerful you I dev languages at our

36
00:01:55,680 --> 00:01:58,409
disposal that everybody loves and

37
00:01:58,409 --> 00:02:01,350
respects now all three of them are equal

38
00:02:01,350 --> 00:02:05,880
oh wait wait what happened you see

39
00:02:05,880 --> 00:02:07,879
there's this awkward moment in

40
00:02:07,879 --> 00:02:10,720
conversations about you i def

41
00:02:10,720 --> 00:02:13,160
with an old job of great beard or

42
00:02:13,160 --> 00:02:14,840
someone like that where we're talking

43
00:02:14,840 --> 00:02:18,020
about javascript is like yeah yeah yeah

44
00:02:18,020 --> 00:02:24,350
cool and then suddenly CSS comes up why

45
00:02:24,350 --> 00:02:28,910
is that why is it come play yeah there

46
00:02:28,910 --> 00:02:31,160
we go why is it that otherwise

47
00:02:31,160 --> 00:02:33,860
intelligent rational people suddenly

48
00:02:33,860 --> 00:02:36,620
become practically bigoted when we talk

49
00:02:36,620 --> 00:02:38,540
about our lovely little language about

50
00:02:38,540 --> 00:02:43,190
CSS so here's one especially telling

51
00:02:43,190 --> 00:02:46,460
example this particular guy that I work

52
00:02:46,460 --> 00:02:50,030
with is crazy ridiculous smart he's

53
00:02:50,030 --> 00:02:51,560
afraid of absolutely nothing in the

54
00:02:51,560 --> 00:02:54,860
technical world not even CSS in fact he

55
00:02:54,860 --> 00:03:00,050
wrote the the default drop in SAS sheet

56
00:03:00,050 --> 00:03:03,050
that our company uses so that you can

57
00:03:03,050 --> 00:03:04,820
get sort of you know instant Brander

58
00:03:04,820 --> 00:03:06,890
with all of your colors and fonts and

59
00:03:06,890 --> 00:03:08,900
logos and everything else he's the kind

60
00:03:08,900 --> 00:03:11,840
of guy who when he gets some gigantic

61
00:03:11,840 --> 00:03:14,720
Excel spreadsheet full of you know

62
00:03:14,720 --> 00:03:16,640
ridiculous business calculations that a

63
00:03:16,640 --> 00:03:18,890
consultant came up with and he's told to

64
00:03:18,890 --> 00:03:21,290
port all of that code over to a web

65
00:03:21,290 --> 00:03:24,380
interface so that the logic can get some

66
00:03:24,380 --> 00:03:26,840
data visualization tools in JavaScript

67
00:03:26,840 --> 00:03:30,350
he says yeah sure I could do it that way

68
00:03:30,350 --> 00:03:33,110
but that would be boring so how about if

69
00:03:33,110 --> 00:03:35,120
I instead figure out how to embed

70
00:03:35,120 --> 00:03:39,200
chromium inside of Excel and then create

71
00:03:39,200 --> 00:03:41,209
the API for communicating back and forth

72
00:03:41,209 --> 00:03:43,160
across the membrane right some advanced

73
00:03:43,160 --> 00:03:46,370
JavaScript visualization tools inside of

74
00:03:46,370 --> 00:03:48,500
that I think it does it all in like a

75
00:03:48,500 --> 00:03:52,519
week or two why does that guy who can

76
00:03:52,519 --> 00:03:54,590
stand with the best people in this room

77
00:03:54,590 --> 00:03:57,739
or really anywhere say that CSS is an

78
00:03:57,739 --> 00:04:02,480
anti language full of dark magic so

79
00:04:02,480 --> 00:04:04,790
let's savor this expression for a moment

80
00:04:04,790 --> 00:04:07,820
if if CSS were nearly a language full of

81
00:04:07,820 --> 00:04:08,959
dark magic it would be something

82
00:04:08,959 --> 00:04:13,310
powerful but evil like Voldemort but

83
00:04:13,310 --> 00:04:15,290
instead my buddy is trying to say that

84
00:04:15,290 --> 00:04:17,340
CSS doesn't even deserve

85
00:04:17,340 --> 00:04:20,970
bad ass street cred that it's instead an

86
00:04:20,970 --> 00:04:22,889
anti language and so it's inherently

87
00:04:22,889 --> 00:04:25,320
something fake and synthetic and

88
00:04:25,320 --> 00:04:27,860
unreliable and want to be more like

89
00:04:27,860 --> 00:04:31,790
Britney Spears with our head shaved then

90
00:04:31,790 --> 00:04:33,900
he-who-must-not-be-named which is a

91
00:04:33,900 --> 00:04:38,220
pretty awful sort of comparison so

92
00:04:38,220 --> 00:04:40,770
taking it for granted that my friend is

93
00:04:40,770 --> 00:04:44,010
just wrong about CSS it's not an anti

94
00:04:44,010 --> 00:04:46,070
language it's not full of dark magic

95
00:04:46,070 --> 00:04:50,400
where did it get the idea and why do we

96
00:04:50,400 --> 00:04:52,680
care what he thinks in the first place

97
00:04:52,680 --> 00:04:56,460
so I told with a couple theories about

98
00:04:56,460 --> 00:04:59,430
this starting with the idea that maybe

99
00:04:59,430 --> 00:05:03,120
they're all colorblind and you might

100
00:05:03,120 --> 00:05:04,860
think so based on the way that they

101
00:05:04,860 --> 00:05:07,400
dress compared to stylish you I people

102
00:05:07,400 --> 00:05:10,260
but but no they do multiple multiplayer

103
00:05:10,260 --> 00:05:12,840
gaming and they frag the right people so

104
00:05:12,840 --> 00:05:16,770
it's not color so maybe it's fonts maybe

105
00:05:16,770 --> 00:05:18,570
they have an allergy to seraphis or

106
00:05:18,570 --> 00:05:22,380
something maybe could it be could they

107
00:05:22,380 --> 00:05:23,910
be responsible for the greatest

108
00:05:23,910 --> 00:05:27,990
aesthetic plague of our time no the

109
00:05:27,990 --> 00:05:29,850
scientists now tell us that the plague

110
00:05:29,850 --> 00:05:32,160
of comic sons was principally carried

111
00:05:32,160 --> 00:05:33,660
into the world by secretary as an

112
00:05:33,660 --> 00:05:36,120
administrative assistance not by

113
00:05:36,120 --> 00:05:39,240
back-end devs and if you've ever seen a

114
00:05:39,240 --> 00:05:42,389
job guys been half as day tweaking a new

115
00:05:42,389 --> 00:05:44,610
installation of IntelliJ to get his

116
00:05:44,610 --> 00:05:47,639
monospaced fonts just right and his code

117
00:05:47,639 --> 00:05:56,039
coloring just right you'll know CSS nor

118
00:05:56,039 --> 00:05:58,830
is it that CSS doesn't do cool things

119
00:05:58,830 --> 00:06:02,389
and doing jerky screen captures with it

120
00:06:02,389 --> 00:06:06,000
CSS does awesome things increasingly it

121
00:06:06,000 --> 00:06:07,680
does things that we would have had to do

122
00:06:07,680 --> 00:06:10,139
the hard way in other languages with

123
00:06:10,139 --> 00:06:12,720
javascript in ways that weren't hardware

124
00:06:12,720 --> 00:06:14,639
optimized like our friend was just

125
00:06:14,639 --> 00:06:19,229
talking about so what gives then so i

126
00:06:19,229 --> 00:06:21,030
gave up the horizon and i just asked i

127
00:06:21,030 --> 00:06:24,129
said to these guys who made the e

128
00:06:24,129 --> 00:06:28,119
you face about CSS okay so what is it

129
00:06:28,119 --> 00:06:30,479
really tell me give me specifics and

130
00:06:30,479 --> 00:06:33,009
while the results of my survey are

131
00:06:33,009 --> 00:06:36,219
entirely unscientific they give us a

132
00:06:36,219 --> 00:06:44,229
starting place so boiled down to a few

133
00:06:44,229 --> 00:06:46,989
things and a few things that we're kind

134
00:06:46,989 --> 00:06:51,369
of shocking um things that we we all

135
00:06:51,369 --> 00:06:54,429
pretty much take for granted in fact you

136
00:06:54,429 --> 00:06:57,189
can't really train somebody in CSS

137
00:06:57,189 --> 00:07:00,249
without explaining these things or maybe

138
00:07:00,249 --> 00:07:01,330
not the third one that's a little

139
00:07:01,330 --> 00:07:04,719
opinionated but but the other two and

140
00:07:04,719 --> 00:07:07,419
especially this third one are kind of

141
00:07:07,419 --> 00:07:11,979
fundamental all right well so what do

142
00:07:11,979 --> 00:07:14,289
you make of that that that that's what

143
00:07:14,289 --> 00:07:17,079
they complain about like is it it

144
00:07:17,079 --> 00:07:20,429
there's two basic options i think one is

145
00:07:20,429 --> 00:07:22,839
they just need better better training

146
00:07:22,839 --> 00:07:24,999
right or maybe they need some motivation

147
00:07:24,999 --> 00:07:29,349
i tried once saying well you know CSS is

148
00:07:29,349 --> 00:07:31,569
really just or at least positioning CSS

149
00:07:31,569 --> 00:07:33,669
positioning is really just math and

150
00:07:33,669 --> 00:07:35,979
algorithms and so if you're not really

151
00:07:35,979 --> 00:07:37,839
good at math and algorithms i guess i

152
00:07:37,839 --> 00:07:40,740
can understand why you wouldn't like CSS

153
00:07:40,740 --> 00:07:44,740
that went over really well I I don't

154
00:07:44,740 --> 00:07:47,649
recommend it because it's not helpful

155
00:07:47,649 --> 00:07:49,479
it's not that it's not really really fun

156
00:07:49,479 --> 00:07:51,369
I recommend it if you just want to have

157
00:07:51,369 --> 00:07:54,039
fun but if what you're trying to do is

158
00:07:54,039 --> 00:07:56,800
persuade people that's not the way to go

159
00:07:56,800 --> 00:08:02,769
so option two is to think again to think

160
00:08:02,769 --> 00:08:03,879
about those things that we take for

161
00:08:03,879 --> 00:08:06,099
granted those things like the Cascade

162
00:08:06,099 --> 00:08:08,860
and specificity that we just take as as

163
00:08:08,860 --> 00:08:12,699
Givens and I realized that maybe the

164
00:08:12,699 --> 00:08:14,619
signal that I'm getting from these guys

165
00:08:14,619 --> 00:08:17,709
I respect and unfortunately they were

166
00:08:17,709 --> 00:08:19,929
all guys in my sample I apologize for

167
00:08:19,929 --> 00:08:23,829
that maybe we can do better what we're

168
00:08:23,829 --> 00:08:25,689
doing and we don't have to wait for

169
00:08:25,689 --> 00:08:28,589
browsers to change to make it possible

170
00:08:28,589 --> 00:08:31,539
we've been using CSS for so long now

171
00:08:31,539 --> 00:08:33,320
that we've maybe become a bit

172
00:08:33,320 --> 00:08:36,229
lined to the things it does to us to the

173
00:08:36,229 --> 00:08:40,490
hoops it makes us jump through I come to

174
00:08:40,490 --> 00:08:43,070
believe that the Cascade and the

175
00:08:43,070 --> 00:08:46,130
specificity algorithm themselves are

176
00:08:46,130 --> 00:08:50,000
very cool ideas they solve edge and

177
00:08:50,000 --> 00:08:54,040
corner cases in very important ways but

178
00:08:54,040 --> 00:08:57,200
because of them we've been fundamentally

179
00:08:57,200 --> 00:09:00,080
encouraged to do things that we should

180
00:09:00,080 --> 00:09:02,960
not do or at least that we should try

181
00:09:02,960 --> 00:09:05,720
very hard not to do they cause us in

182
00:09:05,720 --> 00:09:08,780
many cases to write CSS that's mushy in

183
00:09:08,780 --> 00:09:12,940
precise overlapping and hard to maintain

184
00:09:12,940 --> 00:09:16,310
code that normal humans let's think

185
00:09:16,310 --> 00:09:18,710
about that the browser understands it

186
00:09:18,710 --> 00:09:22,910
but humans don't an all code ideally the

187
00:09:22,910 --> 00:09:24,440
reason we don't just write it ones and

188
00:09:24,440 --> 00:09:27,290
zeros is so that humans can interpret it

189
00:09:27,290 --> 00:09:30,200
and predict the results without needing

190
00:09:30,200 --> 00:09:31,970
the browser's help without needing an

191
00:09:31,970 --> 00:09:34,220
execution engine in other words to make

192
00:09:34,220 --> 00:09:37,760
sense of what's going on so let's take a

193
00:09:37,760 --> 00:09:39,500
fresh start let's forget about the

194
00:09:39,500 --> 00:09:41,240
browser wars let's forget about the ear

195
00:09:41,240 --> 00:09:44,150
I back when people thought that HTML was

196
00:09:44,150 --> 00:09:46,520
a document format not a tool for

197
00:09:46,520 --> 00:09:49,070
building awesome interfaces what would

198
00:09:49,070 --> 00:09:51,890
we want from code that we built cool

199
00:09:51,890 --> 00:09:53,750
interfaces from if we're starting from

200
00:09:53,750 --> 00:09:56,540
scratch we want it dry we want it

201
00:09:56,540 --> 00:09:59,240
maintainable we want it predictable

202
00:09:59,240 --> 00:10:01,040
which are things that you'll hear every

203
00:10:01,040 --> 00:10:03,140
programmer in every language talking

204
00:10:03,140 --> 00:10:05,390
about constantly and i'm going to add

205
00:10:05,390 --> 00:10:07,130
another one to the list that you don't

206
00:10:07,130 --> 00:10:09,830
hear everybody say but that i think is

207
00:10:09,830 --> 00:10:13,970
is just as important don't optimize

208
00:10:13,970 --> 00:10:17,540
prematurely or premature optimization is

209
00:10:17,540 --> 00:10:21,920
the root of all evil so can we do with

210
00:10:21,920 --> 00:10:24,380
that how do we get there the specifics

211
00:10:24,380 --> 00:10:26,060
particularly around optimization are

212
00:10:26,060 --> 00:10:29,420
very much open to interpretation and my

213
00:10:29,420 --> 00:10:31,580
version of the specifics is pretty

214
00:10:31,580 --> 00:10:34,160
opinionated but these I think are some

215
00:10:34,160 --> 00:10:36,890
general principles that we can probably

216
00:10:36,890 --> 00:10:41,279
all rally around name all the things

217
00:10:41,279 --> 00:10:42,839
I put that TM there not because it's

218
00:10:42,839 --> 00:10:45,360
mine I did I owe it to a good friend of

219
00:10:45,360 --> 00:10:47,610
mine named chris hoffman super smart

220
00:10:47,610 --> 00:10:50,999
young coder and he makes the point that

221
00:10:50,999 --> 00:10:52,649
one of the things that we're just not

222
00:10:52,649 --> 00:10:54,930
taught you can go to the fanciest CS

223
00:10:54,930 --> 00:10:57,540
program ever and nobody will ever tell

224
00:10:57,540 --> 00:11:00,420
you that how you name things may be as

225
00:11:00,420 --> 00:11:02,850
important as everything else that you do

226
00:11:02,850 --> 00:11:04,949
in your application in terms of its

227
00:11:04,949 --> 00:11:07,050
maintainability you can write a program

228
00:11:07,050 --> 00:11:09,959
just for yourself and not care at all

229
00:11:09,959 --> 00:11:12,269
what things are called you can use hex

230
00:11:12,269 --> 00:11:14,220
codes the name everything if you want as

231
00:11:14,220 --> 00:11:17,160
long as you read hex codes fluently

232
00:11:17,160 --> 00:11:19,439
you'll be fine but the second you want

233
00:11:19,439 --> 00:11:21,569
it to be maintained by anybody other

234
00:11:21,569 --> 00:11:23,939
than yourself or even by yourself two

235
00:11:23,939 --> 00:11:25,230
days from now after you've worked on

236
00:11:25,230 --> 00:11:30,920
other things naming things is critical

237
00:11:30,920 --> 00:11:35,399
classes we can disagree about when

238
00:11:35,399 --> 00:11:37,290
exactly we should use a particular class

239
00:11:37,290 --> 00:11:40,649
whether to stack them or not but we can

240
00:11:40,649 --> 00:11:42,180
all agree that for some reason we've

241
00:11:42,180 --> 00:11:44,339
gotten it into our heads that classes

242
00:11:44,339 --> 00:11:47,370
you can have too many of them that you

243
00:11:47,370 --> 00:11:49,050
can have too many letters in the name of

244
00:11:49,050 --> 00:11:51,269
a class and I think we can make the case

245
00:11:51,269 --> 00:11:54,569
pretty clearly that that's not true be a

246
00:11:54,569 --> 00:11:56,399
lover not a fighter everybody can agree

247
00:11:56,399 --> 00:11:59,639
with that right and the last one again a

248
00:11:59,639 --> 00:12:01,350
little bit opinionated but I think

249
00:12:01,350 --> 00:12:03,959
you'll see where I'm going it's time to

250
00:12:03,959 --> 00:12:07,829
automate if you haven't done it yet so

251
00:12:07,829 --> 00:12:10,170
challenge number one and specific layout

252
00:12:10,170 --> 00:12:12,059
is the hardest thing about CSS people

253
00:12:12,059 --> 00:12:13,259
figure out how to change fonts and

254
00:12:13,259 --> 00:12:16,500
colors and CSS with in like an hour but

255
00:12:16,500 --> 00:12:19,379
layout takes much much longer because

256
00:12:19,379 --> 00:12:21,000
there's much more going on there's more

257
00:12:21,000 --> 00:12:25,949
possible points of failure right so this

258
00:12:25,949 --> 00:12:27,809
is the one common pain point that unites

259
00:12:27,809 --> 00:12:31,050
all beginning or part-time CSS devs you

260
00:12:31,050 --> 00:12:33,240
know those back-end dads who also do a

261
00:12:33,240 --> 00:12:37,429
little CSS in confusing them in

262
00:12:37,429 --> 00:12:41,149
aggravating them and I have I think a

263
00:12:41,149 --> 00:12:43,690
solution too much of

264
00:12:43,690 --> 00:12:49,700
what else

265
00:12:49,710 --> 00:12:53,610
if you care about making CSS and CSS

266
00:12:53,610 --> 00:12:55,140
layout in particular comprehensible to

267
00:12:55,140 --> 00:12:58,680
other people I truly think that you

268
00:12:58,680 --> 00:13:01,440
could get 90 yards down the field with

269
00:13:01,440 --> 00:13:04,350
this one little gem not the whole way

270
00:13:04,350 --> 00:13:06,990
but a lot of it the people who created

271
00:13:06,990 --> 00:13:10,620
this wonderful little gem that you've

272
00:13:10,620 --> 00:13:19,810
probably seen out on the interwebs

273
00:13:19,820 --> 00:13:22,340
they're talking about floats I'm

274
00:13:22,340 --> 00:13:27,540
convinced of it every bigoted anti CSS

275
00:13:27,540 --> 00:13:30,150
developer that I talk about talks about

276
00:13:30,150 --> 00:13:33,030
floats they say why the hell when I just

277
00:13:33,030 --> 00:13:34,380
want something to go over there on the

278
00:13:34,380 --> 00:13:37,500
right and stay put on the right and i

279
00:13:37,500 --> 00:13:39,720
use the CSS feature that has the word

280
00:13:39,720 --> 00:13:44,310
right in it does it not do what I want

281
00:13:44,310 --> 00:13:46,890
or anything remotely resembling what I

282
00:13:46,890 --> 00:13:49,410
want sure some things move right but it

283
00:13:49,410 --> 00:13:51,300
turns around and everything inside of it

284
00:13:51,300 --> 00:13:53,220
faces backwards and then it screws up

285
00:13:53,220 --> 00:13:55,500
everything that comes after it instead

286
00:13:55,500 --> 00:13:58,800
of this top one which would be a fairly

287
00:13:58,800 --> 00:14:01,290
normal toolbar and then a header

288
00:14:01,290 --> 00:14:04,080
underneath it or the one below it where

289
00:14:04,080 --> 00:14:06,260
you want your tool bar over on the right

290
00:14:06,260 --> 00:14:11,910
you use floats and you get this either

291
00:14:11,910 --> 00:14:14,520
your headers screwed up in the wrong

292
00:14:14,520 --> 00:14:18,060
place or if you are foolish enough to

293
00:14:18,060 --> 00:14:21,060
use float right everything gets reversed

294
00:14:21,060 --> 00:14:23,160
and your headers in the wrong place and

295
00:14:23,160 --> 00:14:26,160
this is a simple example okay if you've

296
00:14:26,160 --> 00:14:28,080
ever tried to throw a float into the

297
00:14:28,080 --> 00:14:29,640
middle of a complex layout that has a

298
00:14:29,640 --> 00:14:32,220
bunch of other stuff going on it can

299
00:14:32,220 --> 00:14:35,670
just totally explode now the very

300
00:14:35,670 --> 00:14:37,830
logical response of the people in this

301
00:14:37,830 --> 00:14:41,070
audience vast majority is just use a

302
00:14:41,070 --> 00:14:46,590
clear fix duh but let's be honest it's a

303
00:14:46,590 --> 00:14:50,580
hack it's a dirty hack and anybody who's

304
00:14:50,580 --> 00:14:54,630
in denial about a tackiness is in fact I

305
00:14:54,630 --> 00:14:55,980
believe suffering from more than a

306
00:14:55,980 --> 00:14:59,820
little Stockholm Syndrome floats were

307
00:14:59,820 --> 00:15:01,040
invented for one reason

308
00:15:01,040 --> 00:15:03,440
then one reason alone and alone to allow

309
00:15:03,440 --> 00:15:06,529
text to wrap around an image that's why

310
00:15:06,529 --> 00:15:08,329
they exist in because it was the guys at

311
00:15:08,329 --> 00:15:11,329
CERN he practically invented it it was

312
00:15:11,329 --> 00:15:13,250
meant to go around an image of like a

313
00:15:13,250 --> 00:15:16,040
super collider or something they were

314
00:15:16,040 --> 00:15:18,709
not floats were not intended to do what

315
00:15:18,709 --> 00:15:21,850
we do with them so I know this hurts but

316
00:15:21,850 --> 00:15:24,860
floats are the table based layout of our

317
00:15:24,860 --> 00:15:28,639
time stop doing it unless you have to

318
00:15:28,639 --> 00:15:32,029
support IE 6 or except in very specific

319
00:15:32,029 --> 00:15:34,610
very discreet situations like you've got

320
00:15:34,610 --> 00:15:36,380
that one thing at the end of the road

321
00:15:36,380 --> 00:15:38,120
that just needs them move over there and

322
00:15:38,120 --> 00:15:40,459
stay over there okay maybe but otherwise

323
00:15:40,459 --> 00:15:42,680
start making fun of the people who do

324
00:15:42,680 --> 00:15:45,620
basic layout with them don't hire people

325
00:15:45,620 --> 00:15:47,480
who say they've been doing CSS for 10

326
00:15:47,480 --> 00:15:50,740
years and then do it all with floats and

327
00:15:50,740 --> 00:15:55,160
switch to better options so inline-block

328
00:15:55,160 --> 00:15:56,779
even though it has its own

329
00:15:56,779 --> 00:15:58,880
idiosyncrasies with vertical alignment

330
00:15:58,880 --> 00:16:01,579
and white space at least does something

331
00:16:01,579 --> 00:16:03,800
resembling what you expect it to do

332
00:16:03,800 --> 00:16:05,959
based on its name and if you explain to

333
00:16:05,959 --> 00:16:08,779
people what in line is and what block is

334
00:16:08,779 --> 00:16:12,649
you can then explain inline-block and

335
00:16:12,649 --> 00:16:16,160
have them go oh right I get it it's like

336
00:16:16,160 --> 00:16:17,720
a paragraph that behaves like a

337
00:16:17,720 --> 00:16:19,760
character and flows across the page but

338
00:16:19,760 --> 00:16:23,600
takes up space okay cool you can explain

339
00:16:23,600 --> 00:16:25,279
this to a trainee you can explain this

340
00:16:25,279 --> 00:16:27,110
to one of the old job of gray beards who

341
00:16:27,110 --> 00:16:29,440
are dabbling a little you I dev and

342
00:16:29,440 --> 00:16:35,389
they'll be like oh yeah all right it's

343
00:16:35,389 --> 00:16:37,699
not the inline block is is totally

344
00:16:37,699 --> 00:16:40,430
perfect though flexbox on the other hand

345
00:16:40,430 --> 00:16:43,550
is perfect and I want to marry it but

346
00:16:43,550 --> 00:16:45,589
its father says it won't be of age until

347
00:16:45,589 --> 00:16:49,029
ie8 market share falls below ten percent

348
00:16:49,029 --> 00:16:53,180
the reason I love it is that it does

349
00:16:53,180 --> 00:16:54,709
what it should the way your fellow

350
00:16:54,709 --> 00:16:57,740
coders expect and if things do what they

351
00:16:57,740 --> 00:17:00,199
should and you can explain it to the

352
00:17:00,199 --> 00:17:02,660
other people on your team you win you

353
00:17:02,660 --> 00:17:04,189
have a colleague who supports you and

354
00:17:04,189 --> 00:17:06,780
doesn't call you a witch of practices

355
00:17:06,780 --> 00:17:09,540
magic and you get to stop fighting you

356
00:17:09,540 --> 00:17:11,880
get to be a lover not a fighter right

357
00:17:11,880 --> 00:17:14,160
stop working around things stop hacking

358
00:17:14,160 --> 00:17:17,010
and you can build stuff that behaves

359
00:17:17,010 --> 00:17:18,450
rationally and provides a good

360
00:17:18,450 --> 00:17:20,400
foundation for that flexbox future

361
00:17:20,400 --> 00:17:24,630
whenever it does eventually come and

362
00:17:24,630 --> 00:17:27,570
then my final note is just that if if

363
00:17:27,570 --> 00:17:29,340
for anybody in the audience is like well

364
00:17:29,340 --> 00:17:30,990
it's not that bad a hack I don't even

365
00:17:30,990 --> 00:17:33,600
have to use extra HTML anymore to apply

366
00:17:33,600 --> 00:17:37,890
a clear fix in order to do that you have

367
00:17:37,890 --> 00:17:40,740
to have a browser that already supports

368
00:17:40,740 --> 00:17:45,090
not using floats anymore okay so so just

369
00:17:45,090 --> 00:17:47,820
just move on and then here's where I get

370
00:17:47,820 --> 00:17:49,470
really opinionated and I'm going to poke

371
00:17:49,470 --> 00:17:51,150
some people in a way that they don't

372
00:17:51,150 --> 00:17:54,330
like I love accessibility but I think

373
00:17:54,330 --> 00:17:57,630
that m's most of the time in most cases

374
00:17:57,630 --> 00:18:00,120
until you prove in a use case for them

375
00:18:00,120 --> 00:18:01,980
are probably more trouble than they're

376
00:18:01,980 --> 00:18:04,440
worth but I'm gonna let that go because

377
00:18:04,440 --> 00:18:07,140
it's it's there for you to just chew on

378
00:18:07,140 --> 00:18:09,780
and meditate on so what's

379
00:18:09,780 --> 00:18:12,570
maintainability ok we've addressed the

380
00:18:12,570 --> 00:18:16,110
the one crazy pain point about floats in

381
00:18:16,110 --> 00:18:18,080
a nutshell its readability and

382
00:18:18,080 --> 00:18:21,150
reusability now very few people are

383
00:18:21,150 --> 00:18:23,130
going to oppose readability and

384
00:18:23,130 --> 00:18:24,840
reusability on principle right nobody

385
00:18:24,840 --> 00:18:26,970
says I want my code to not be

386
00:18:26,970 --> 00:18:29,760
maintainable to not be readable to not

387
00:18:29,760 --> 00:18:32,070
be reusable what happens instead is that

388
00:18:32,070 --> 00:18:34,820
some junior dev commits some stuff and

389
00:18:34,820 --> 00:18:37,740
unless you spend a half hour staring at

390
00:18:37,740 --> 00:18:40,380
it it's never going to make sense and so

391
00:18:40,380 --> 00:18:43,080
you go to them and you ask and they say

392
00:18:43,080 --> 00:18:45,390
well yeah this codes a little hard to

393
00:18:45,390 --> 00:18:51,120
maintain but dude it's optimized like

394
00:18:51,120 --> 00:18:54,780
it's a magic wand that excuses all sins

395
00:18:54,780 --> 00:18:59,310
that you wave it over it does not and

396
00:18:59,310 --> 00:19:03,600
the truth is that what we think we spend

397
00:19:03,600 --> 00:19:07,680
all of our time doing is not where we

398
00:19:07,680 --> 00:19:11,160
actually spend all of our time we spend

399
00:19:11,160 --> 00:19:13,130
all of our time

400
00:19:13,130 --> 00:19:22,950
doing this stuff so any habit that we

401
00:19:22,950 --> 00:19:26,220
have that's about typing less or making

402
00:19:26,220 --> 00:19:28,320
things be shorter we're having there be

403
00:19:28,320 --> 00:19:32,700
less text on the page is probably anti

404
00:19:32,700 --> 00:19:35,690
maintainability so what is

405
00:19:35,690 --> 00:19:39,890
maintainability so dr. one of my idols

406
00:19:39,890 --> 00:19:43,880
Venkat Subramanyam and others they say

407
00:19:43,880 --> 00:19:46,500
premature optimization is the root of

408
00:19:46,500 --> 00:19:49,440
all evil which I agree with but I think

409
00:19:49,440 --> 00:19:51,930
that mrs. an important point or another

410
00:19:51,930 --> 00:19:55,160
way of thinking about it it's premature

411
00:19:55,160 --> 00:19:59,000
execution optimization premature runtime

412
00:19:59,000 --> 00:20:01,440
optimization that is the root of all

413
00:20:01,440 --> 00:20:03,660
evil we're always going to make a choice

414
00:20:03,660 --> 00:20:06,510
about what to optimize for the second

415
00:20:06,510 --> 00:20:07,440
you sit down and start writing code

416
00:20:07,440 --> 00:20:10,380
you're optimizing writing code that is

417
00:20:10,380 --> 00:20:13,310
optimized for developer productivity and

418
00:20:13,310 --> 00:20:17,430
maintainability is never premature it's

419
00:20:17,430 --> 00:20:20,520
never wrong you may go back and refactor

420
00:20:20,520 --> 00:20:25,650
it later but you're going to do that

421
00:20:25,650 --> 00:20:27,570
because you hit that sucker with a

422
00:20:27,570 --> 00:20:30,630
profiler and you proved that in some

423
00:20:30,630 --> 00:20:34,050
meaningful way your maintainable code is

424
00:20:34,050 --> 00:20:36,900
producing sub optimal results some user

425
00:20:36,900 --> 00:20:38,820
observable latency more than 100

426
00:20:38,820 --> 00:20:42,720
milliseconds let's say if so only then

427
00:20:42,720 --> 00:20:45,890
should you make non-trivial set

428
00:20:45,890 --> 00:20:49,050
non-trivial sacrifices of the

429
00:20:49,050 --> 00:20:50,640
maintainability that you've worked so

430
00:20:50,640 --> 00:20:53,400
hard for in return for execution

431
00:20:53,400 --> 00:20:55,650
optimization so let me be explicit let

432
00:20:55,650 --> 00:20:57,420
me say it again straight up I'm not

433
00:20:57,420 --> 00:21:01,260
against execution optimization I'm not

434
00:21:01,260 --> 00:21:04,050
against giving our users fantastic quick

435
00:21:04,050 --> 00:21:07,320
snappy near-native experiences or

436
00:21:07,320 --> 00:21:08,970
against any particular optimizing

437
00:21:08,970 --> 00:21:11,220
technique again if you're writing code

438
00:21:11,220 --> 00:21:13,470
you're always optimizing for something

439
00:21:13,470 --> 00:21:16,290
just at the outset know that it's your

440
00:21:16,290 --> 00:21:18,480
developers that arm the most expensive

441
00:21:18,480 --> 00:21:20,940
most precious resource that you probably

442
00:21:20,940 --> 00:21:21,770
have

443
00:21:21,770 --> 00:21:23,720
okay if you're working for amazon if

444
00:21:23,720 --> 00:21:26,420
you're working for new york times you

445
00:21:26,420 --> 00:21:28,160
already have hundreds of millions of

446
00:21:28,160 --> 00:21:30,680
users you have customers and those

447
00:21:30,680 --> 00:21:33,500
customers make you a lot of money they

448
00:21:33,500 --> 00:21:36,110
are extremely precious your developers

449
00:21:36,110 --> 00:21:38,300
will have to adapt okay but if you're

450
00:21:38,300 --> 00:21:40,850
not in that position chances are you

451
00:21:40,850 --> 00:21:43,490
need to optimize for what's rarest in

452
00:21:43,490 --> 00:21:48,980
your shop when you decide to do

453
00:21:48,980 --> 00:21:51,380
something else do it with proof not your

454
00:21:51,380 --> 00:21:52,940
hunch not your assumption that you're

455
00:21:52,940 --> 00:21:55,280
prejudiced the the evolution of the

456
00:21:55,280 --> 00:21:57,170
browser engines has made a lot of our

457
00:21:57,170 --> 00:21:59,810
old prejudices about performance

458
00:21:59,810 --> 00:22:03,050
outdated we could someone far better

459
00:22:03,050 --> 00:22:04,580
than me could spend an entire session

460
00:22:04,580 --> 00:22:07,370
just talking about those things so I'm

461
00:22:07,370 --> 00:22:11,960
just going to float it out there and and

462
00:22:11,960 --> 00:22:14,750
let it go all right so we're all on

463
00:22:14,750 --> 00:22:16,610
board with the main idea how do we get

464
00:22:16,610 --> 00:22:19,100
maintainability how does it apply to CSS

465
00:22:19,100 --> 00:22:22,670
here's my very opinionated perspective

466
00:22:22,670 --> 00:22:29,800
on this

467
00:22:29,810 --> 00:22:34,730
so let's look at details this first one

468
00:22:34,730 --> 00:22:41,970
automate or die whoops oh I hate these

469
00:22:41,970 --> 00:22:45,060
when you copy the transitions you didn't

470
00:22:45,060 --> 00:22:50,940
expect automation automation is easier

471
00:22:50,940 --> 00:22:52,770
than you think quick survey how many

472
00:22:52,770 --> 00:22:55,440
people use a pre compiler for almost

473
00:22:55,440 --> 00:23:02,790
everything they write yeah okay how many

474
00:23:02,790 --> 00:23:03,870
people should have raised their hands

475
00:23:03,870 --> 00:23:07,350
just now but didn't okay good thank you

476
00:23:07,350 --> 00:23:10,290
honesty all right there's a lot of fear

477
00:23:10,290 --> 00:23:12,180
uncertainty and doubt for people who

478
00:23:12,180 --> 00:23:15,030
come out of HTML and CSS and design

479
00:23:15,030 --> 00:23:18,000
about pre compilers they're like ooh no

480
00:23:18,000 --> 00:23:21,060
scary difficult hard and really it's

481
00:23:21,060 --> 00:23:26,460
optional it's not optional anymore it's

482
00:23:26,460 --> 00:23:31,680
easier than you think and I strongly

483
00:23:31,680 --> 00:23:33,720
strongly recommend if you're just

484
00:23:33,720 --> 00:23:35,550
getting started with it try yeoman

485
00:23:35,550 --> 00:23:37,320
yeoman provides you with an entire

486
00:23:37,320 --> 00:23:40,950
workflow that includes a compiler it's

487
00:23:40,950 --> 00:23:42,690
tightly integrated with compass so you

488
00:23:42,690 --> 00:23:44,100
can give that a try but try anything

489
00:23:44,100 --> 00:23:47,040
else but give it a try don't be afraid

490
00:23:47,040 --> 00:23:51,210
of it you will figure it out point

491
00:23:51,210 --> 00:23:54,930
number two and new age is upon us I'm

492
00:23:54,930 --> 00:23:57,300
not going to belabor this point but what

493
00:23:57,300 --> 00:24:00,030
I'm seeing all over the world it started

494
00:24:00,030 --> 00:24:02,820
in New York and San Francisco and is

495
00:24:02,820 --> 00:24:06,150
making its way everywhere is that the

496
00:24:06,150 --> 00:24:08,190
time is coming when it's going to be

497
00:24:08,190 --> 00:24:11,340
hard for us to have the jobs that we

498
00:24:11,340 --> 00:24:15,090
want to have if we say nope I'm just a

499
00:24:15,090 --> 00:24:18,800
in HTML and CSS and light JavaScript guy

500
00:24:18,800 --> 00:24:22,920
this new age I think requires that

501
00:24:22,920 --> 00:24:25,590
almost everybody get on board with

502
00:24:25,590 --> 00:24:28,680
automation get on board with tooling get

503
00:24:28,680 --> 00:24:30,530
on board with making your code more

504
00:24:30,530 --> 00:24:33,460
amiable and even just with the idea that

505
00:24:33,460 --> 00:24:36,110
CSS isn't just presentation it's not

506
00:24:36,110 --> 00:24:39,380
just style it's code and it needs to be

507
00:24:39,380 --> 00:24:41,510
maintained with the same tools that we

508
00:24:41,510 --> 00:24:45,410
use for other code again we could spend

509
00:24:45,410 --> 00:24:47,720
an entire session on millions of

510
00:24:47,720 --> 00:24:50,090
examples about why that is about what a

511
00:24:50,090 --> 00:24:55,220
compiler gets you but here's a few oh

512
00:24:55,220 --> 00:24:59,000
and yeah a comparison I'm sure that

513
00:24:59,000 --> 00:25:01,040
everybody in this room everybody

514
00:25:01,040 --> 00:25:03,710
everybody everybody uses a reset or a

515
00:25:03,710 --> 00:25:06,650
normal answer right if you if you aren't

516
00:25:06,650 --> 00:25:08,810
you should the browser doesn't make you

517
00:25:08,810 --> 00:25:11,240
do that the technology doesn't require

518
00:25:11,240 --> 00:25:12,800
you when you first start writing your

519
00:25:12,800 --> 00:25:15,020
code to specify your normalizer file

520
00:25:15,020 --> 00:25:18,200
right just like it doesn't force you to

521
00:25:18,200 --> 00:25:21,290
use compass or SAS or less or it's

522
00:25:21,290 --> 00:25:23,450
stylist or whatever tool it is whatever

523
00:25:23,450 --> 00:25:27,020
syntax it is that you like but we accept

524
00:25:27,020 --> 00:25:28,910
now that it makes our code better it

525
00:25:28,910 --> 00:25:30,890
makes our jobs easier and I think it's

526
00:25:30,890 --> 00:25:34,640
time that it became a universal that we

527
00:25:34,640 --> 00:25:36,200
also understood the same thing about pre

528
00:25:36,200 --> 00:25:41,330
compilers all right so everybody's heard

529
00:25:41,330 --> 00:25:43,310
okay anybody who's heard of a pre

530
00:25:43,310 --> 00:25:44,570
compiler has heard that there are these

531
00:25:44,570 --> 00:25:46,010
things called variables that there are

532
00:25:46,010 --> 00:25:47,750
these things called mix-ins and the

533
00:25:47,750 --> 00:25:49,850
question is what do they really get me

534
00:25:49,850 --> 00:25:52,880
ok here's the first obviously we talked

535
00:25:52,880 --> 00:25:54,290
about maintainability and how

536
00:25:54,290 --> 00:25:56,510
maintainability is about readability how

537
00:25:56,510 --> 00:25:58,820
many people really like reading hex

538
00:25:58,820 --> 00:26:01,130
codes raise your hand who likes reading

539
00:26:01,130 --> 00:26:04,580
hex codes oh and and who prefers rgba

540
00:26:04,580 --> 00:26:06,080
that's a little easier right because you

541
00:26:06,080 --> 00:26:07,820
can tell whether you added some opacity

542
00:26:07,820 --> 00:26:09,440
to it at the end and if the numbers

543
00:26:09,440 --> 00:26:10,730
really high you know that it's really

544
00:26:10,730 --> 00:26:12,500
dark and rich and if it's really low you

545
00:26:12,500 --> 00:26:14,090
know that it's really light that makes

546
00:26:14,090 --> 00:26:18,110
it easy right to know which color which

547
00:26:18,110 --> 00:26:20,060
hex code or which rgba that you're

548
00:26:20,060 --> 00:26:23,270
looking at is ugly greenish blue right

549
00:26:23,270 --> 00:26:26,960
so why not just start naming things ugly

550
00:26:26,960 --> 00:26:30,620
greenish blue put that hex code in there

551
00:26:30,620 --> 00:26:32,300
once when you define your variable and

552
00:26:32,300 --> 00:26:34,970
now every other time you look at it it's

553
00:26:34,970 --> 00:26:37,160
written for your brain it's written for

554
00:26:37,160 --> 00:26:37,700
you

555
00:26:37,700 --> 00:26:40,429
understand and now you're like okay I

556
00:26:40,429 --> 00:26:43,669
can get behind that but where does the

557
00:26:43,669 --> 00:26:45,409
program income in the programming comes

558
00:26:45,409 --> 00:26:47,779
in when you realize that once you're

559
00:26:47,779 --> 00:26:50,389
dealing with ugly greenish-blue you can

560
00:26:50,389 --> 00:26:53,450
now do things like say well okay yeah I

561
00:26:53,450 --> 00:26:56,059
was going to go to my color picker and

562
00:26:56,059 --> 00:26:57,919
mess around with the sliders until I

563
00:26:57,919 --> 00:27:00,350
figured out how to make five different

564
00:27:00,350 --> 00:27:02,960
darker and lighter versions of ugly

565
00:27:02,960 --> 00:27:06,399
greenish blue or my red in this case or

566
00:27:06,399 --> 00:27:09,710
you can just use a compiler and let that

567
00:27:09,710 --> 00:27:11,990
compiler do it for you and boom

568
00:27:11,990 --> 00:27:14,240
instantly you've got all five of them

569
00:27:14,240 --> 00:27:16,669
and you're still using names that you

570
00:27:16,669 --> 00:27:19,549
understand you're using ugly greenish

571
00:27:19,549 --> 00:27:22,190
blue minus ten percent now right and

572
00:27:22,190 --> 00:27:24,049
everywhere in your application that you

573
00:27:24,049 --> 00:27:26,240
need it you write ugly greenish blue

574
00:27:26,240 --> 00:27:29,659
minus ten percent and you get it and

575
00:27:29,659 --> 00:27:31,340
when the day comes that you're like you

576
00:27:31,340 --> 00:27:33,019
know what this version isn't dark enough

577
00:27:33,019 --> 00:27:35,029
what I really need here is ugly greenish

578
00:27:35,029 --> 00:27:37,669
blue minus twenty percent a couple

579
00:27:37,669 --> 00:27:40,010
characters you're done you just saved

580
00:27:40,010 --> 00:27:42,380
yourself a lot of work you save the

581
00:27:42,380 --> 00:27:43,730
people who are coming after you trying

582
00:27:43,730 --> 00:27:45,919
to understand what you do a lot of work

583
00:27:45,919 --> 00:27:47,899
and it's about a seemingly doping little

584
00:27:47,899 --> 00:27:53,720
thing colors oh and themes anybody ever

585
00:27:53,720 --> 00:27:56,320
do theming or want to do theming a

586
00:27:56,320 --> 00:27:58,399
precompiler lets you define a few

587
00:27:58,399 --> 00:28:00,470
variables for one theme and then all of

588
00:28:00,470 --> 00:28:03,049
your base rules then define some other

589
00:28:03,049 --> 00:28:05,510
variables for your other theme same base

590
00:28:05,510 --> 00:28:08,240
rules mix and match boom you've got two

591
00:28:08,240 --> 00:28:10,669
different themed style sheets you only

592
00:28:10,669 --> 00:28:13,460
wrote one style sheet it gives you stuff

593
00:28:13,460 --> 00:28:15,620
like that that's awesome and who's done

594
00:28:15,620 --> 00:28:17,299
responsive everybody wants responsive

595
00:28:17,299 --> 00:28:19,850
these days right have you ever seen

596
00:28:19,850 --> 00:28:21,620
those monsters where there's an entire

597
00:28:21,620 --> 00:28:23,899
style sheet at one size and then an

598
00:28:23,899 --> 00:28:26,240
entire style sheet at another size and

599
00:28:26,240 --> 00:28:28,820
maybe two more after that or if it's not

600
00:28:28,820 --> 00:28:31,159
a whole separate style sheet it's just

601
00:28:31,159 --> 00:28:33,350
one gigantic monster style sheet and

602
00:28:33,350 --> 00:28:34,850
first you have to wade through all the

603
00:28:34,850 --> 00:28:36,799
ones at the small size before you then

604
00:28:36,799 --> 00:28:38,179
finally get down to the ones that are

605
00:28:38,179 --> 00:28:40,250
the big size and the medium size and the

606
00:28:40,250 --> 00:28:42,919
ones in between what if instead you

607
00:28:42,919 --> 00:28:45,440
could say I've got this component and I

608
00:28:45,440 --> 00:28:48,530
want that at one size it's going to

609
00:28:48,530 --> 00:28:50,870
with the seventy eight percent and at

610
00:28:50,870 --> 00:28:52,610
another break point I want it to have a

611
00:28:52,610 --> 00:28:56,510
width of fifty percent or even actually

612
00:28:56,510 --> 00:28:58,100
at another breakpoint I just wanted to

613
00:28:58,100 --> 00:29:00,530
disappear altogether and I wanted to do

614
00:29:00,530 --> 00:29:02,420
that in a way that's semantics readable

615
00:29:02,420 --> 00:29:05,630
easy to maintain you can use mix-ins

616
00:29:05,630 --> 00:29:09,260
like this please steal this that allow

617
00:29:09,260 --> 00:29:11,840
you to do exactly that instead of three

618
00:29:11,840 --> 00:29:15,560
different style sheets instead of making

619
00:29:15,560 --> 00:29:17,600
your life really difficult you can use

620
00:29:17,600 --> 00:29:20,570
mix-ins and all of a sudden you're

621
00:29:20,570 --> 00:29:21,950
looking at something and you're saying

622
00:29:21,950 --> 00:29:25,520
up when the screen is big make it big

623
00:29:25,520 --> 00:29:28,190
when the screen is medium make it medium

624
00:29:28,190 --> 00:29:30,320
what it's really tiny make it disappear

625
00:29:30,320 --> 00:29:34,130
all in one space altogether all where

626
00:29:34,130 --> 00:29:36,590
you can get your brain around it after

627
00:29:36,590 --> 00:29:38,780
you've done ten other things and come

628
00:29:38,780 --> 00:29:41,290
back and are like what was I thinking

629
00:29:41,290 --> 00:29:45,230
that's what programmability that's what

630
00:29:45,230 --> 00:29:50,000
automation gets you and all of that just

631
00:29:50,000 --> 00:29:51,770
these few variables to define your

632
00:29:51,770 --> 00:29:53,360
screen sizes these are actually based on

633
00:29:53,360 --> 00:29:57,440
the boots crap boot strap screen sizes

634
00:29:57,440 --> 00:29:59,600
should you find yourself trying to hack

635
00:29:59,600 --> 00:30:03,740
bootstrap to use their responsive

636
00:30:03,740 --> 00:30:05,990
patterns it's actually fairly easy to

637
00:30:05,990 --> 00:30:08,690
just modify their their sizes by just

638
00:30:08,690 --> 00:30:11,420
changing these variables all right so

639
00:30:11,420 --> 00:30:12,610
what else can you do with automation

640
00:30:12,610 --> 00:30:17,720
browser prefixes suck so you can use

641
00:30:17,720 --> 00:30:20,750
mix-ins okay just define once that you

642
00:30:20,750 --> 00:30:21,590
need all these different browser

643
00:30:21,590 --> 00:30:24,050
prefixes for a particular feature slap

644
00:30:24,050 --> 00:30:25,730
in the mix in wherever you're using that

645
00:30:25,730 --> 00:30:29,390
feature and you're done or bonus points

646
00:30:29,390 --> 00:30:31,760
if you use yeoman you'll see that yeoman

647
00:30:31,760 --> 00:30:35,630
has a tool called Auto pre fixer okay so

648
00:30:35,630 --> 00:30:37,520
yeoman is the next level out that's when

649
00:30:37,520 --> 00:30:39,710
you have your CSS your programming your

650
00:30:39,710 --> 00:30:42,110
CSS with compass then you're programming

651
00:30:42,110 --> 00:30:44,900
your entire application in an

652
00:30:44,900 --> 00:30:49,670
environment based on node it'll change

653
00:30:49,670 --> 00:30:52,220
your life truly if you mess around with

654
00:30:52,220 --> 00:30:54,440
browser prefixes this stuff will change

655
00:30:54,440 --> 00:30:57,450
your life alright

656
00:30:57,450 --> 00:31:05,580
next point Oh name all the things i love

657
00:31:05,580 --> 00:31:07,470
this i think it picks up on some memes

658
00:31:07,470 --> 00:31:09,059
although actually i don't even have the

659
00:31:09,059 --> 00:31:11,460
pictures of the the cool means that it

660
00:31:11,460 --> 00:31:13,710
references so it just sounds cute but

661
00:31:13,710 --> 00:31:15,240
name all the things and name them

662
00:31:15,240 --> 00:31:20,460
clearly so who was it that told us that

663
00:31:20,460 --> 00:31:24,899
this thing at the top okay where you

664
00:31:24,899 --> 00:31:26,880
aren't naming things were you just using

665
00:31:26,880 --> 00:31:30,149
element selectors li a what's a good

666
00:31:30,149 --> 00:31:34,519
idea why not just named those a's

667
00:31:34,519 --> 00:31:39,659
clearly right why are we treating them

668
00:31:39,659 --> 00:31:43,500
like classes or something need to be

669
00:31:43,500 --> 00:31:47,370
rationed it's okay um and and i

670
00:31:47,370 --> 00:31:54,179
recommend stop doing this using element

671
00:31:54,179 --> 00:31:56,309
selectors even when you're first

672
00:31:56,309 --> 00:31:59,309
roughing things out it's okay to use a

673
00:31:59,309 --> 00:32:00,630
class name that you're going to change

674
00:32:00,630 --> 00:32:02,610
later it's okay to use a class name that

675
00:32:02,610 --> 00:32:03,690
you're going to change two or three

676
00:32:03,690 --> 00:32:05,970
times that's a simple find and replace

677
00:32:05,970 --> 00:32:09,000
what's not okay is when the new junior

678
00:32:09,000 --> 00:32:11,279
dev that you hire spends three months

679
00:32:11,279 --> 00:32:13,950
working around your redefinitions of UL

680
00:32:13,950 --> 00:32:16,529
and table before they finally get up the

681
00:32:16,529 --> 00:32:19,049
courage to ask did you really mean to do

682
00:32:19,049 --> 00:32:22,500
that and can i change it please what's

683
00:32:22,500 --> 00:32:24,240
even worse is when you come back to a

684
00:32:24,240 --> 00:32:26,070
project six months later and you can't

685
00:32:26,070 --> 00:32:27,899
figure out who on earth was responsible

686
00:32:27,899 --> 00:32:30,320
for doing something so foolish as to

687
00:32:30,320 --> 00:32:32,970
redefine course tiles instead of naming

688
00:32:32,970 --> 00:32:35,580
them and you realize you're the only one

689
00:32:35,580 --> 00:32:39,029
who's ever written any of the CSS that's

690
00:32:39,029 --> 00:32:43,769
bad so stop rationing your classes okay

691
00:32:43,769 --> 00:32:47,190
we act a lot of stuff that we see on the

692
00:32:47,190 --> 00:32:49,559
web that tells us how to write our

693
00:32:49,559 --> 00:32:52,889
selectors and to do things like specific

694
00:32:52,889 --> 00:32:57,179
selector li a it acts like classes a

695
00:32:57,179 --> 00:33:00,779
radioactive to use too many of them in

696
00:33:00,779 --> 00:33:02,850
too much proximity to each other things

697
00:33:02,850 --> 00:33:05,490
will blow up that for some reason

698
00:33:05,490 --> 00:33:08,010
selectors without classes

699
00:33:08,010 --> 00:33:11,490
are cooler like classes are messing up

700
00:33:11,490 --> 00:33:14,910
our HTML they're not they also like to

701
00:33:14,910 --> 00:33:17,190
make us feel clever think about the

702
00:33:17,190 --> 00:33:19,440
first time that you ever used a pseudo

703
00:33:19,440 --> 00:33:23,070
selector like first child or perhaps n

704
00:33:23,070 --> 00:33:27,480
child 3 um you're like yeah look what i

705
00:33:27,480 --> 00:33:29,490
just did huh you can't even see it there

706
00:33:29,490 --> 00:33:33,780
all right yeah no i I've done that

707
00:33:33,780 --> 00:33:37,320
everybody does that try it once figure

708
00:33:37,320 --> 00:33:39,480
out how it works and then rip it back

709
00:33:39,480 --> 00:33:42,750
out be afraid of that instinct to be

710
00:33:42,750 --> 00:33:45,090
clever to to do things that you want to

711
00:33:45,090 --> 00:33:46,410
reach over and pointed somebody and say

712
00:33:46,410 --> 00:33:49,410
look what I just did because it'll end

713
00:33:49,410 --> 00:33:52,950
in pain and speed wise classes are

714
00:33:52,950 --> 00:33:55,440
efficient as it gets okay there is no

715
00:33:55,440 --> 00:33:58,380
selector literally that is faster not

716
00:33:58,380 --> 00:34:00,420
even an IDs far as I know IDs and

717
00:34:00,420 --> 00:34:03,990
selectors are nearly always identical in

718
00:34:03,990 --> 00:34:07,159
speed or very nearly so right but

719
00:34:07,159 --> 00:34:10,649
specific selector space li space a is

720
00:34:10,649 --> 00:34:15,300
not or is not the same so use clear

721
00:34:15,300 --> 00:34:16,530
descriptive classes so that you don't

722
00:34:16,530 --> 00:34:17,850
have to hunt for things so you don't

723
00:34:17,850 --> 00:34:20,370
have to guess where things are class

724
00:34:20,370 --> 00:34:22,560
names should tell us where to expect to

725
00:34:22,560 --> 00:34:24,000
find something when we're looking at our

726
00:34:24,000 --> 00:34:26,310
CSS when we're looking at our HTML there

727
00:34:26,310 --> 00:34:29,070
should be a clear link between them now

728
00:34:29,070 --> 00:34:30,840
sometimes the hardest thing about using

729
00:34:30,840 --> 00:34:33,240
good descriptive names is just inventing

730
00:34:33,240 --> 00:34:35,669
ones that make sense that's why there

731
00:34:35,669 --> 00:34:38,970
are some great systems out there vem OCS

732
00:34:38,970 --> 00:34:47,210
suit they will help you do that and a

733
00:34:47,210 --> 00:34:49,470
lot of the time when i recommend this to

734
00:34:49,470 --> 00:34:52,470
people people say i don't need to use BM

735
00:34:52,470 --> 00:34:54,450
them however you like to pronounce it I

736
00:34:54,450 --> 00:34:57,560
don't need to do that I namespace I

737
00:34:57,560 --> 00:35:02,970
names based me some stuff and now name

738
00:35:02,970 --> 00:35:07,680
spacing is not bad but if what you're

739
00:35:07,680 --> 00:35:09,800
saying is that you want to use

740
00:35:09,800 --> 00:35:11,440
unforgivably general

741
00:35:11,440 --> 00:35:13,480
helpful names for things and that's okay

742
00:35:13,480 --> 00:35:16,359
because you namespace you're saying well

743
00:35:16,359 --> 00:35:18,510
I've made it statistically improbable

744
00:35:18,510 --> 00:35:21,970
that I'll actually have a collision at

745
00:35:21,970 --> 00:35:25,480
runtime you're saying I'm having it I'm

746
00:35:25,480 --> 00:35:28,720
terrified of repeating that really

747
00:35:28,720 --> 00:35:30,910
embarrassing bug that we spent a week

748
00:35:30,910 --> 00:35:32,950
solvent that was actually caused by

749
00:35:32,950 --> 00:35:34,900
giving two things the same name and

750
00:35:34,900 --> 00:35:36,760
you're saying I really don't give a

751
00:35:36,760 --> 00:35:39,130
rat's ass about making me and my fellow

752
00:35:39,130 --> 00:35:42,160
developers more efficient I just care

753
00:35:42,160 --> 00:35:44,770
about avoiding embarrassment okay name

754
00:35:44,770 --> 00:35:47,829
spacing is not a bad thing but don't let

755
00:35:47,829 --> 00:35:50,650
it be a substitute for doing other

756
00:35:50,650 --> 00:35:53,349
things and don't over do it we're going

757
00:35:53,349 --> 00:35:55,150
to see an example of overdoing it just a

758
00:35:55,150 --> 00:36:01,390
second

759
00:36:01,400 --> 00:36:03,200
so we've talked about naming things

760
00:36:03,200 --> 00:36:07,220
clearly and that gets us to element

761
00:36:07,220 --> 00:36:09,770
selectors and why I think that they're

762
00:36:09,770 --> 00:36:13,340
bad and why I think relying on the

763
00:36:13,340 --> 00:36:15,140
specificity algorithm to figure out

764
00:36:15,140 --> 00:36:17,780
which one we were talking about or

765
00:36:17,780 --> 00:36:19,880
thought we were talking about is bad the

766
00:36:19,880 --> 00:36:22,520
specificity algorithm okay everybody

767
00:36:22,520 --> 00:36:24,650
who's heard of the specificity algorithm

768
00:36:24,650 --> 00:36:27,590
right it's that thing that makes those

769
00:36:27,590 --> 00:36:29,810
five different competing rules decide

770
00:36:29,810 --> 00:36:32,270
which one applies and which one doesn't

771
00:36:32,270 --> 00:36:34,400
which rule shows up at the top and the

772
00:36:34,400 --> 00:36:36,110
chrome dev tools and which ones show up

773
00:36:36,110 --> 00:36:38,330
further down in the bottom yeah it's an

774
00:36:38,330 --> 00:36:40,490
algorithm yeah it's math and I made fun

775
00:36:40,490 --> 00:36:43,070
of the math guys earlier but basically

776
00:36:43,070 --> 00:36:44,840
it's long division by four hundred and

777
00:36:44,840 --> 00:36:48,290
seventeen point 23 carry the two round

778
00:36:48,290 --> 00:36:49,730
to the nearest thousand and spin around

779
00:36:49,730 --> 00:36:52,700
the mulberry bush right it's it's not

780
00:36:52,700 --> 00:36:55,160
something that you can use meaningfully

781
00:36:55,160 --> 00:36:58,480
on a daily basis and your back-end guy

782
00:36:58,480 --> 00:37:02,300
that that dabbler in CSS is quite right

783
00:37:02,300 --> 00:37:04,880
to be suspicious of it when they look at

784
00:37:04,880 --> 00:37:06,170
your code and they see that you're

785
00:37:06,170 --> 00:37:08,360
relying on it that you're using that is

786
00:37:08,360 --> 00:37:10,580
the way to distinguish between a whole

787
00:37:10,580 --> 00:37:12,470
bunch of element selectors and sub

788
00:37:12,470 --> 00:37:14,660
selectors and descendant selectors that

789
00:37:14,660 --> 00:37:16,640
incorporate things with really vague

790
00:37:16,640 --> 00:37:22,250
hard to maintain names so I strongly

791
00:37:22,250 --> 00:37:28,130
recommend avoiding element selectors

792
00:37:28,130 --> 00:37:29,720
which are the number one reason that we

793
00:37:29,720 --> 00:37:33,200
wind up fighting the Cascade and hoping

794
00:37:33,200 --> 00:37:35,390
that specificity algorithm is on our

795
00:37:35,390 --> 00:37:38,360
side today on the one good use for them

796
00:37:38,360 --> 00:37:41,000
is resets and normalizes okay we're

797
00:37:41,000 --> 00:37:43,070
truly Universal styles like declaring

798
00:37:43,070 --> 00:37:48,400
this font everywhere all the time done

799
00:37:48,400 --> 00:37:51,290
or links thanks sir could use them

800
00:37:51,290 --> 00:37:53,030
because it's something that you'll use

801
00:37:53,030 --> 00:37:55,670
almost everywhere or everywhere

802
00:37:55,670 --> 00:37:58,250
everywhere and never need to redefine it

803
00:37:58,250 --> 00:37:59,960
never need to customize it never need to

804
00:37:59,960 --> 00:38:01,700
style in some sites not every but it

805
00:38:01,700 --> 00:38:06,380
does it that way so what do we do to get

806
00:38:06,380 --> 00:38:09,230
around our our vague element selectors

807
00:38:09,230 --> 00:38:11,030
right when we can't figure out how to

808
00:38:11,030 --> 00:38:11,460
get

809
00:38:11,460 --> 00:38:13,710
rule that we want to apply up to the top

810
00:38:13,710 --> 00:38:15,330
of the list and the chrome dev tools

811
00:38:15,330 --> 00:38:18,060
instead of being somewhere further down

812
00:38:18,060 --> 00:38:22,560
we use important using important is

813
00:38:22,560 --> 00:38:25,800
pretty much always a code smell code

814
00:38:25,800 --> 00:38:27,870
smell is a term that people throw around

815
00:38:27,870 --> 00:38:31,170
a lot in other languages it means in a

816
00:38:31,170 --> 00:38:35,640
nutshell it just I can't explain quite

817
00:38:35,640 --> 00:38:38,190
why this is wrong in 10 seconds or less

818
00:38:38,190 --> 00:38:41,820
it's just not it smells funny it just

819
00:38:41,820 --> 00:38:45,210
throws off that odor of not being

820
00:38:45,210 --> 00:38:46,800
something that I'm going to be able to

821
00:38:46,800 --> 00:38:50,070
maintain important is pretty much always

822
00:38:50,070 --> 00:38:55,080
a code smell so consider again we can't

823
00:38:55,080 --> 00:38:57,330
go into the details here consider using

824
00:38:57,330 --> 00:38:59,670
something like extend or include in your

825
00:38:59,670 --> 00:39:02,370
precompiler to create a narrower class

826
00:39:02,370 --> 00:39:04,560
to be able to redefine your classes

827
00:39:04,560 --> 00:39:07,170
easily rather than fight the existing

828
00:39:07,170 --> 00:39:14,190
one and where is so we're finally going

829
00:39:14,190 --> 00:39:15,450
to get we're going to stop talk we're

830
00:39:15,450 --> 00:39:17,520
going to talk about nesting okay this is

831
00:39:17,520 --> 00:39:20,370
this is the final nesting and nesting

832
00:39:20,370 --> 00:39:23,790
can mean descendant selectors it can be

833
00:39:23,790 --> 00:39:27,090
over nesting in our CSS I'm fusing a

834
00:39:27,090 --> 00:39:29,460
couple things together here we're going

835
00:39:29,460 --> 00:39:31,380
to get to a description very shortly I

836
00:39:31,380 --> 00:39:37,310
think of vem so the general use of

837
00:39:37,310 --> 00:39:39,840
descendant selectors where you've got

838
00:39:39,840 --> 00:39:41,580
these three different rules somewhere in

839
00:39:41,580 --> 00:39:44,280
your website fighting with each other

840
00:39:44,280 --> 00:39:46,970
competing with each other overlapping

841
00:39:46,970 --> 00:39:50,850
this is anathema to knowing what's going

842
00:39:50,850 --> 00:39:53,580
to happen okay to being predictable to

843
00:39:53,580 --> 00:39:55,890
being readable and yet we've been taught

844
00:39:55,890 --> 00:39:58,560
to do it since day one right doing

845
00:39:58,560 --> 00:40:01,740
specific thing space Li space a it's in

846
00:40:01,740 --> 00:40:03,840
like all the manuals all the tutorials

847
00:40:03,840 --> 00:40:06,540
all the guidebooks about how selectors

848
00:40:06,540 --> 00:40:10,770
work right but they lock your content

849
00:40:10,770 --> 00:40:12,990
into a single context making it really

850
00:40:12,990 --> 00:40:15,690
hard to reuse it someplace else or move

851
00:40:15,690 --> 00:40:16,240
it

852
00:40:16,240 --> 00:40:18,010
to someplace else it also makes it

853
00:40:18,010 --> 00:40:20,590
really hard to move anything else into a

854
00:40:20,590 --> 00:40:22,750
given context right so you use a

855
00:40:22,750 --> 00:40:27,610
descendant selector on on on some stuff

856
00:40:27,610 --> 00:40:29,200
and then you try to drop in a jQuery

857
00:40:29,200 --> 00:40:31,270
date picker or something well guess what

858
00:40:31,270 --> 00:40:33,730
it has tons more of those same elements

859
00:40:33,730 --> 00:40:35,890
that you just redefined using a

860
00:40:35,890 --> 00:40:38,440
descendant selector and now those are

861
00:40:38,440 --> 00:40:42,920
all descendants of what you created

862
00:40:42,930 --> 00:40:45,850
another kind of nesting a lot of folks

863
00:40:45,850 --> 00:40:47,320
when they start using pre compilers

864
00:40:47,320 --> 00:40:48,460
particularly if they come from a world

865
00:40:48,460 --> 00:40:52,210
view that is all about name spacing is

866
00:40:52,210 --> 00:40:55,540
they'll say oh great fantastic compass

867
00:40:55,540 --> 00:40:58,030
will let me name space that crap out of

868
00:40:58,030 --> 00:41:00,430
every single CSS rule that I have a

869
00:41:00,430 --> 00:41:02,380
right and then I'll get this visual

870
00:41:02,380 --> 00:41:04,960
indication that this second rule in

871
00:41:04,960 --> 00:41:07,300
purple is inside of that other rule in

872
00:41:07,300 --> 00:41:08,800
purple and then that other one is inside

873
00:41:08,800 --> 00:41:12,090
of that and what you wind up with is

874
00:41:12,090 --> 00:41:15,730
this example over here at the top where

875
00:41:15,730 --> 00:41:18,160
you your five deep and we've only gotten

876
00:41:18,160 --> 00:41:21,640
like 20 lines down this CSS file i have

877
00:41:21,640 --> 00:41:26,290
seen examples of this where to address a

878
00:41:26,290 --> 00:41:29,740
single element on a single page people

879
00:41:29,740 --> 00:41:32,110
are using descendant selectors with 20

880
00:41:32,110 --> 00:41:38,940
or 30 or 40 components that's really

881
00:41:38,940 --> 00:41:43,780
really inefficient I'm not here to make

882
00:41:43,780 --> 00:41:45,820
specific points about inefficiency I can

883
00:41:45,820 --> 00:41:48,340
tell you with a for a fact absolutely

884
00:41:48,340 --> 00:41:51,660
uncertain with with no uncertainty that

885
00:41:51,660 --> 00:41:55,000
nesting your selectors 40 deep is always

886
00:41:55,000 --> 00:42:01,060
bad a hallways whereas there is ZERO

887
00:42:01,060 --> 00:42:03,010
difference performance-wise at runtime

888
00:42:03,010 --> 00:42:05,950
between a class that has two letters in

889
00:42:05,950 --> 00:42:08,350
its name in a class that has 50 letters

890
00:42:08,350 --> 00:42:10,990
in its name okay think about that think

891
00:42:10,990 --> 00:42:12,730
about that difference think about the

892
00:42:12,730 --> 00:42:14,590
typing issue oh I don't want to type all

893
00:42:14,590 --> 00:42:17,260
those extra characters well you'll be

894
00:42:17,260 --> 00:42:19,270
able to read it you'll understand what

895
00:42:19,270 --> 00:42:22,030
it does and it runs as fast or faster

896
00:42:22,030 --> 00:42:24,650
than anything else that you've ever

897
00:42:24,650 --> 00:42:28,970
ought to do the most important thing

898
00:42:28,970 --> 00:42:30,260
that you can understand performance wise

899
00:42:30,260 --> 00:42:33,230
is that selectors work from right to

900
00:42:33,230 --> 00:42:35,329
left okay so that thing we do where

901
00:42:35,329 --> 00:42:38,839
there's the ID space Li space a we think

902
00:42:38,839 --> 00:42:40,369
oh well I'm starting with the most

903
00:42:40,369 --> 00:42:42,049
specific piece over there on the left

904
00:42:42,049 --> 00:42:43,609
which means that I've narrowed it down

905
00:42:43,609 --> 00:42:46,400
man I found the one tiny little piece

906
00:42:46,400 --> 00:42:48,890
and then it's okay if I just say well

907
00:42:48,890 --> 00:42:50,539
give me all the lis inside of that

908
00:42:50,539 --> 00:42:53,180
that's not how it works it's actually

909
00:42:53,180 --> 00:42:56,240
the opposite of that when the CSS

910
00:42:56,240 --> 00:42:58,700
matcher implements your rules it's going

911
00:42:58,700 --> 00:43:00,710
to go through the entire page and find

912
00:43:00,710 --> 00:43:03,380
all of whatever's on the right so if

913
00:43:03,380 --> 00:43:06,589
you're doing specific selector that sent

914
00:43:06,589 --> 00:43:08,960
my specific selector then Li than a it

915
00:43:08,960 --> 00:43:13,190
starts with all the A's every single one

916
00:43:13,190 --> 00:43:15,980
and then goes actually call them anchors

917
00:43:15,980 --> 00:43:18,049
and starts with all the anchors and goes

918
00:43:18,049 --> 00:43:20,990
up from there it has to reparse the

919
00:43:20,990 --> 00:43:24,710
entire tree of elements above every

920
00:43:24,710 --> 00:43:27,650
single a on the entire page to find out

921
00:43:27,650 --> 00:43:30,770
which of them contains all of these

922
00:43:30,770 --> 00:43:34,279
additional elements or you can use a

923
00:43:34,279 --> 00:43:38,119
single class so the fact that we can do

924
00:43:38,119 --> 00:43:40,220
stuff the fact that the specificity

925
00:43:40,220 --> 00:43:42,859
algorithm in the Cascade let us do this

926
00:43:42,859 --> 00:43:45,619
doesn't mean that we should in fact I

927
00:43:45,619 --> 00:43:49,910
would argue that we should try start

928
00:43:49,910 --> 00:43:53,990
getting away from it you can nest things

929
00:43:53,990 --> 00:43:55,760
without stacking this is a general

930
00:43:55,760 --> 00:44:00,079
example of one variant one syntax of BBM

931
00:44:00,079 --> 00:44:02,569
where you can use the ampersand over

932
00:44:02,569 --> 00:44:06,049
here to nest one style within another

933
00:44:06,049 --> 00:44:07,880
style to indicate that they're related

934
00:44:07,880 --> 00:44:09,740
that you're always going to find one

935
00:44:09,740 --> 00:44:12,529
within the other but then the actual

936
00:44:12,529 --> 00:44:15,500
compiled CSS down at the bottom does not

937
00:44:15,500 --> 00:44:17,339
actually you make turn them into

938
00:44:17,339 --> 00:44:20,130
selectors this gives you all the same

939
00:44:20,130 --> 00:44:21,930
readability all the same ability to

940
00:44:21,930 --> 00:44:23,369
express where you expect to find

941
00:44:23,369 --> 00:44:25,589
something without all of the overhead

942
00:44:25,589 --> 00:44:28,079
without all of the inefficiency all the

943
00:44:28,079 --> 00:44:30,349
same benefits none of the disadvantages

944
00:44:30,349 --> 00:44:33,089
and if you don't like those systems that

945
00:44:33,089 --> 00:44:34,799
at least just you start using

946
00:44:34,799 --> 00:44:37,319
indentation for your name spacing

947
00:44:37,319 --> 00:44:39,119
instead of putting everything inside of

948
00:44:39,119 --> 00:44:41,759
everything else it's a rule of thumb

949
00:44:41,759 --> 00:44:44,460
nest selectors and stack classes when

950
00:44:44,460 --> 00:44:46,529
you have to not just when the browser

951
00:44:46,529 --> 00:44:50,400
will let you and neston stack whenever

952
00:44:50,400 --> 00:44:53,789
possible mix-ins and extends rather than

953
00:44:53,789 --> 00:44:58,170
your selectors themselves if you do that

954
00:44:58,170 --> 00:45:00,059
if you use descriptive classes rather

955
00:45:00,059 --> 00:45:02,190
than ones that you've stacked a mile

956
00:45:02,190 --> 00:45:05,150
deep it means that refactoring is easy

957
00:45:05,150 --> 00:45:08,700
overrides if they're necessary happen

958
00:45:08,700 --> 00:45:11,549
exactly where you can see them in your

959
00:45:11,549 --> 00:45:13,859
code instead of it being something that

960
00:45:13,859 --> 00:45:15,329
you have to puzzle out in the browser

961
00:45:15,329 --> 00:45:17,880
and the dev tools and if it comes time

962
00:45:17,880 --> 00:45:19,589
to refactor for performance a lot of the

963
00:45:19,589 --> 00:45:22,319
performance of folks are like no no man

964
00:45:22,319 --> 00:45:23,849
and I have to use stacked classes

965
00:45:23,849 --> 00:45:25,710
because I have to be able to reuse these

966
00:45:25,710 --> 00:45:30,029
most commonly accessed chunks of style

967
00:45:30,029 --> 00:45:32,999
if you it so if you take those most

968
00:45:32,999 --> 00:45:34,829
commonly accessed chunks of style and

969
00:45:34,829 --> 00:45:38,579
make them into a mix in it's easy to

970
00:45:38,579 --> 00:45:40,589
refactor them into a separate class but

971
00:45:40,589 --> 00:45:43,589
it's really hard to go the other way so

972
00:45:43,589 --> 00:45:47,309
pros and cons there's quite a few but

973
00:45:47,309 --> 00:45:48,900
we're going to blow through them in

974
00:45:48,900 --> 00:45:52,859
general try not to and think about how

975
00:45:52,859 --> 00:45:54,539
many of the reasons that we stack our

976
00:45:54,539 --> 00:45:56,729
classes are because they're waving the

977
00:45:56,729 --> 00:45:59,759
you gotta go sign and me in the back how

978
00:45:59,759 --> 00:46:01,319
many of the reasons that we stack our

979
00:46:01,319 --> 00:46:04,979
classes are because we don't those of

980
00:46:04,979 --> 00:46:06,299
you who don't use pre compilers you

981
00:46:06,299 --> 00:46:08,339
can't see this but once you do use them

982
00:46:08,339 --> 00:46:10,469
you'll be like oh I was doing that

983
00:46:10,469 --> 00:46:16,200
because I didn't have this ok and so our

984
00:46:16,200 --> 00:46:18,150
very last point that I have like 10

985
00:46:18,150 --> 00:46:21,040
seconds avoid unnecessarily complex

986
00:46:21,040 --> 00:46:23,050
that means don't use elements because

987
00:46:23,050 --> 00:46:25,270
somebody told you you should don't use

988
00:46:25,270 --> 00:46:26,890
things because somebody told you they're

989
00:46:26,890 --> 00:46:29,320
semantics and don't feel guilty not

990
00:46:29,320 --> 00:46:32,650
doing it use the most flexible elements

991
00:46:32,650 --> 00:46:35,980
you can get and not the ones that you

992
00:46:35,980 --> 00:46:38,050
think you're supposed to use use the

993
00:46:38,050 --> 00:46:39,400
ones that let you read maintainable code

994
00:46:39,400 --> 00:46:44,530
and avoid the pseudo selectors it's not

995
00:46:44,530 --> 00:46:47,860
that they're never ever okay but you

996
00:46:47,860 --> 00:46:49,780
should use them as a last resort when

997
00:46:49,780 --> 00:46:54,670
you have to not because it'll make you

998
00:46:54,670 --> 00:46:57,760
feel clever to to find a way to squeeze

999
00:46:57,760 --> 00:47:00,400
it in to get that number two item to

1000
00:47:00,400 --> 00:47:01,570
have a different style than that number

1001
00:47:01,570 --> 00:47:03,870
one item there's probably another way

1002
00:47:03,870 --> 00:47:13,980
thank

1003
00:47:13,990 --> 00:47:16,340
yeah so you've kind of like gone against

1004
00:47:16,340 --> 00:47:18,980
the grain you know the kind of practice

1005
00:47:18,980 --> 00:47:21,230
do you have any suggestions for like

1006
00:47:21,230 --> 00:47:23,480
further readings by that like where

1007
00:47:23,480 --> 00:47:27,369
would you start in this approach the

1008
00:47:27,369 --> 00:47:29,540
yeah the one thing I don't have in this

1009
00:47:29,540 --> 00:47:32,119
presentation is like a see also my

1010
00:47:32,119 --> 00:47:37,670
reference right um the I think you can

1011
00:47:37,670 --> 00:47:39,500
get a lot of what I'm going for by

1012
00:47:39,500 --> 00:47:44,750
reading the documentation around BM BM

1013
00:47:44,750 --> 00:47:46,609
is not the only one it's not my favorite

1014
00:47:46,609 --> 00:47:47,810
one but it seems to be the one that's

1015
00:47:47,810 --> 00:47:49,340
getting a lot of action right now and

1016
00:47:49,340 --> 00:47:51,890
it's the one that's focused on naming

1017
00:47:51,890 --> 00:47:55,670
things well on declarative clear named

1018
00:47:55,670 --> 00:47:58,730
on being able to whenever possible have

1019
00:47:58,730 --> 00:48:01,850
be able to look at your code see what it

1020
00:48:01,850 --> 00:48:04,940
means and have their be preferably when

1021
00:48:04,940 --> 00:48:08,450
possible one class on it that

1022
00:48:08,450 --> 00:48:10,940
documentation and then read the articles

1023
00:48:10,940 --> 00:48:12,500
about people arguing back and forth

1024
00:48:12,500 --> 00:48:14,180
about which parts of that are good and

1025
00:48:14,180 --> 00:48:15,920
which parts of that are bad which parts

1026
00:48:15,920 --> 00:48:17,450
mess with performance which parts don't

1027
00:48:17,450 --> 00:48:19,970
that is probably the best available

1028
00:48:19,970 --> 00:48:21,380
right now I don't think anybody has

1029
00:48:21,380 --> 00:48:25,100
written a book about this approach that

1030
00:48:25,100 --> 00:48:29,000
and compilers you know the document the

1031
00:48:29,000 --> 00:48:32,320
the compiler documentation and API

1032
00:48:32,320 --> 00:48:35,210
tutorials about how to do that and why

1033
00:48:35,210 --> 00:48:39,290
to do that these are to me the best

1034
00:48:39,290 --> 00:48:41,720
sources right now of how to start

