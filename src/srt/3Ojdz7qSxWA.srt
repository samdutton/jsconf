1
00:00:17,160 --> 00:00:20,700

hey there hi I'm Sean I'm gonna get

2
00:00:20,700 --> 00:00:22,830
started a lot of you may not know me I

3
00:00:22,830 --> 00:00:25,920
mostly been in the Ruby world and doing

4
00:00:25,920 --> 00:00:29,610
some Erlang lately but that's me a newer

5
00:00:29,610 --> 00:00:31,349
picture on the left side you might

6
00:00:31,349 --> 00:00:33,210
recognize my avatar on the right side

7
00:00:33,210 --> 00:00:34,980
that shows up on my Twitter account so

8
00:00:34,980 --> 00:00:38,370
you can get a hold of me so I work for

9
00:00:38,370 --> 00:00:40,980
batch o technologies you may have seen

10
00:00:40,980 --> 00:00:45,180
in your goody bag a manila envelope it's

11
00:00:45,180 --> 00:00:48,540
got jazz comp boccio calm stamp on it

12
00:00:48,540 --> 00:00:50,820
somewhere so make sure you get inside

13
00:00:50,820 --> 00:00:56,460
and get get get stickers and so I work

14
00:00:56,460 --> 00:00:57,660
for batch o as a developer advocate

15
00:00:57,660 --> 00:00:59,489
we're basically like jack-of-all-trades

16
00:00:59,489 --> 00:01:03,960
type type people we handle support for

17
00:01:03,960 --> 00:01:05,759
customers but also do things like this

18
00:01:05,759 --> 00:01:09,090
come out and talked and work on all

19
00:01:09,090 --> 00:01:12,149
kinds of random internal code projects

20
00:01:12,149 --> 00:01:16,410
and documentation whatnot so I'm here

21
00:01:16,410 --> 00:01:17,850
today to talk to you about JavaScript

22
00:01:17,850 --> 00:01:20,970
apps on react so what are we what do we

23
00:01:20,970 --> 00:01:23,009
mean by that first of all what is react

24
00:01:23,009 --> 00:01:26,130
you may not have heard of it but rioc we

25
00:01:26,130 --> 00:01:28,200
usually use these three things so react

26
00:01:28,200 --> 00:01:30,030
is distributed its fault-tolerant

27
00:01:30,030 --> 00:01:32,729
replicated key value document database

28
00:01:32,729 --> 00:01:35,550
thing and the best way to explain it is

29
00:01:35,550 --> 00:01:37,560
actually through this animated gift that

30
00:01:37,560 --> 00:01:39,679
was made by the wonderful matthias meyer

31
00:01:39,679 --> 00:01:43,470
this is a play on the react logo and it

32
00:01:43,470 --> 00:01:47,209
basically shows that when you write to

33
00:01:47,209 --> 00:01:49,709
rioc it's going to send out three copies

34
00:01:49,709 --> 00:01:51,690
of everything two nodes around the

35
00:01:51,690 --> 00:01:54,270
cluster and then when a node goes away

36
00:01:54,270 --> 00:01:56,399
you're going to write to fall backs and

37
00:01:56,399 --> 00:01:58,229
when the note comes back it's going to

38
00:01:58,229 --> 00:02:01,800
transfer data back to the node that was

39
00:02:01,800 --> 00:02:04,349
lost so I think that's the best

40
00:02:04,349 --> 00:02:06,300
excellent visual explanation of what

41
00:02:06,300 --> 00:02:08,220
rioc is that I've ever seen thanking the

42
00:02:08,220 --> 00:02:12,239
Tina so is awesome so rioc loves

43
00:02:12,239 --> 00:02:14,790
javascript that's why we're here is why

44
00:02:14,790 --> 00:02:17,420
i'm talking today so what does that mean

45
00:02:17,420 --> 00:02:20,400
well it means that key value operations

46
00:02:20,400 --> 00:02:23,099
are HTTP so you want to store your stuff

47
00:02:23,099 --> 00:02:27,360
in rioc you use use put or post you want

48
00:02:27,360 --> 00:02:29,370
to fetch something out of rioc use get

49
00:02:29,370 --> 00:02:31,110
you want to get rid of it

50
00:02:31,110 --> 00:02:34,050
use delete but the key thing about this

51
00:02:34,050 --> 00:02:36,750
even beyond just using those for HTTP

52
00:02:36,750 --> 00:02:39,600
verbs we know is that the content type

53
00:02:39,600 --> 00:02:44,310
matters so you basically tell rioc what

54
00:02:44,310 --> 00:02:47,090
you're storing in it and it'll

55
00:02:47,090 --> 00:02:50,330
willy-nilly very happily store whatever

56
00:02:50,330 --> 00:02:53,730
but also beyond just playing well with

57
00:02:53,730 --> 00:02:57,209
HTTP and web apps you've got MapReduce

58
00:02:57,209 --> 00:02:59,340
so you know I'm a produces a big

59
00:02:59,340 --> 00:03:02,570
buzzword right now couchdb Mongo Hadoop

60
00:03:02,570 --> 00:03:06,240
rioc all have MapReduce we embed a

61
00:03:06,240 --> 00:03:09,750
spider monkey engine in each rioc node

62
00:03:09,750 --> 00:03:13,170
that you build into a cluster includes

63
00:03:13,170 --> 00:03:15,209
you know by default aight spider monkey

64
00:03:15,209 --> 00:03:16,830
instances that you can run your

65
00:03:16,830 --> 00:03:19,770
JavaScript functions on so this makes us

66
00:03:19,770 --> 00:03:22,920
very happy right but you're saying now

67
00:03:22,920 --> 00:03:26,100
why should I give a care couchdb has

68
00:03:26,100 --> 00:03:29,790
that couch me has HTTP it has javascript

69
00:03:29,790 --> 00:03:33,840
it has MapReduce well we accept that

70
00:03:33,840 --> 00:03:35,700
challenge and I'm going to throw down a

71
00:03:35,700 --> 00:03:37,890
little gauntlet I love couch TV and I

72
00:03:37,890 --> 00:03:39,930
see I saw Jay Chris here a minute ago

73
00:03:39,930 --> 00:03:45,510
hey hey Chris but I'm going to say that

74
00:03:45,510 --> 00:03:48,150
you know CouchDB has this this statement

75
00:03:48,150 --> 00:03:50,190
where they say how should be is made of

76
00:03:50,190 --> 00:03:55,799
the web and I'm going to say that rioc

77
00:03:55,799 --> 00:03:57,420
doesn't need it well what happened with

78
00:03:57,420 --> 00:04:00,630
my text there rioc doesn't need a couch

79
00:04:00,630 --> 00:04:05,610
app so since rioc uses pure HTTP you

80
00:04:05,610 --> 00:04:06,900
don't have to have a separate

81
00:04:06,900 --> 00:04:08,820
abstraction to build your application

82
00:04:08,820 --> 00:04:12,709
okay if you like the troll face so

83
00:04:12,709 --> 00:04:15,750
beyond that you've basically the reason

84
00:04:15,750 --> 00:04:17,340
why you should care about rioc apps is

85
00:04:17,340 --> 00:04:19,410
you can build a completely browser in

86
00:04:19,410 --> 00:04:22,260
totally in browser apps you use the

87
00:04:22,260 --> 00:04:24,630
three things you know well HTML CSS and

88
00:04:24,630 --> 00:04:27,690
JavaScript you deploy your application

89
00:04:27,690 --> 00:04:31,140
with curl or whatever HTTP client you

90
00:04:31,140 --> 00:04:34,169
you uh you are happy with and you do

91
00:04:34,169 --> 00:04:37,140
scale so like this is a graph and I got

92
00:04:37,140 --> 00:04:38,520
to give a shout out I don't know if any

93
00:04:38,520 --> 00:04:40,740
of them are in the room but two giant

94
00:04:40,740 --> 00:04:42,900
this is a graph of some benchmarks we

95
00:04:42,900 --> 00:04:44,280
don't on joint and it's

96
00:04:44,280 --> 00:04:47,100
sorry the text is a little bit small at

97
00:04:47,100 --> 00:04:49,650
the bottom of the graph but as you

98
00:04:49,650 --> 00:04:51,570
increase from five nodes on the left to

99
00:04:51,570 --> 00:04:54,240
14 nodes on the right you get a linear

100
00:04:54,240 --> 00:04:58,260
increase mostly linear of of throughput

101
00:04:58,260 --> 00:05:00,720
and the green one down at the bottom

102
00:05:00,720 --> 00:05:02,600
sorry it's not labeled is the

103
00:05:02,600 --> 00:05:04,980
performance per machine so you see it's

104
00:05:04,980 --> 00:05:07,410
that stain kind of constant but as you

105
00:05:07,410 --> 00:05:09,150
add notes to your cluster you're getting

106
00:05:09,150 --> 00:05:11,820
more throughput so if you're interested

107
00:05:11,820 --> 00:05:14,160
in using react go try it on joint it's

108
00:05:14,160 --> 00:05:16,380
pretty awesome so what are the kinds of

109
00:05:16,380 --> 00:05:18,480
things you might be able to do with rioc

110
00:05:18,480 --> 00:05:21,060
JavaScript apps you could build a little

111
00:05:21,060 --> 00:05:24,240
intranet a portal completely in your

112
00:05:24,240 --> 00:05:28,500
browser completely easy to deploy we had

113
00:05:28,500 --> 00:05:30,480
a customer who is working on some kind

114
00:05:30,480 --> 00:05:32,130
of web-based mobile app that they served

115
00:05:32,130 --> 00:05:34,470
directly out of react and a popular

116
00:05:34,470 --> 00:05:37,050
thing that that I've trying to push for

117
00:05:37,050 --> 00:05:39,600
is using it for asset storage so you

118
00:05:39,600 --> 00:05:44,040
could put your your scripts your your

119
00:05:44,040 --> 00:05:47,370
images I to limited extent your videos

120
00:05:47,370 --> 00:05:50,310
in rioc and then if you have some kind

121
00:05:50,310 --> 00:05:52,340
of server-side app like rails or Django

122
00:05:52,340 --> 00:05:57,180
or you know a Java framework which none

123
00:05:57,180 --> 00:06:00,630
of us use right you could put like you

124
00:06:00,630 --> 00:06:03,210
can send back an XSL redirect header to

125
00:06:03,210 --> 00:06:05,460
engine X and have that file serve

126
00:06:05,460 --> 00:06:10,430
directly out of rioc to your client so

127
00:06:10,430 --> 00:06:14,220
I'm moving really quickly I intended to

128
00:06:14,220 --> 00:06:15,750
so we can have questions but i'm going

129
00:06:15,750 --> 00:06:17,250
to show you to sample apps that we've

130
00:06:17,250 --> 00:06:19,320
built that are basically served out of

131
00:06:19,320 --> 00:06:20,940
react they're all HTML CSS and

132
00:06:20,940 --> 00:06:23,580
JavaScript one is called recon and one

133
00:06:23,580 --> 00:06:27,720
is called yak react so recon is a kind

134
00:06:27,720 --> 00:06:30,300
of sort of like futon or PHP my sequel

135
00:06:30,300 --> 00:06:32,789
for react unless you show all the stuff

136
00:06:32,789 --> 00:06:35,430
that's in your cluster and it lets you

137
00:06:35,430 --> 00:06:37,680
interact with it with simple key value

138
00:06:37,680 --> 00:06:40,890
operations and that's built using mostly

139
00:06:40,890 --> 00:06:44,039
Sammy GS for the state management and

140
00:06:44,039 --> 00:06:47,510
various flipping through various pages

141
00:06:47,510 --> 00:06:49,890
yak react is something I wrote last year

142
00:06:49,890 --> 00:06:53,310
it's an ajax pulling chat room and it

143
00:06:53,310 --> 00:06:55,650
uses reacts MapReduce to get all the

144
00:06:55,650 --> 00:06:58,020
newest messages and display them

145
00:06:58,020 --> 00:07:00,000
in your browser and it just uses plain

146
00:07:00,000 --> 00:07:02,220
jquery with you know regular JavaScript

147
00:07:02,220 --> 00:07:08,460
code so it's time for demo and this is

148
00:07:08,460 --> 00:07:12,479
nice even get a little bigger now that

149
00:07:12,479 --> 00:07:16,409
doesn't work so this is recon and this

150
00:07:16,409 --> 00:07:19,020
lists all the buckets that we have

151
00:07:19,020 --> 00:07:21,030
stored in react and actually if you can

152
00:07:21,030 --> 00:07:23,039
I'm sorry it's a little tiny but if you

153
00:07:23,039 --> 00:07:24,569
can see it at the back of the room this

154
00:07:24,569 --> 00:07:27,150
is actually my presentation and this

155
00:07:27,150 --> 00:07:29,849
recon app and the Yak react which i'm

156
00:07:29,849 --> 00:07:32,250
going to show you in a minute is being

157
00:07:32,250 --> 00:07:35,370
served out of react so you can flip

158
00:07:35,370 --> 00:07:36,960
through you take a look at my

159
00:07:36,960 --> 00:07:39,780
presentation here these are all the keys

160
00:07:39,780 --> 00:07:44,849
that are in that the the bucket that I

161
00:07:44,849 --> 00:07:48,300
stored my presentation in you know you

162
00:07:48,300 --> 00:07:50,039
want to see the the HTML that my

163
00:07:50,039 --> 00:07:52,800
presentation is it uses pal which is

164
00:07:52,800 --> 00:07:56,750
pretty cool so there's all the HTML and

165
00:07:56,750 --> 00:07:59,219
there's a ubiquitous content type at the

166
00:07:59,219 --> 00:08:05,310
top let's see so you can you know get

167
00:08:05,310 --> 00:08:10,979
images etc so recon is pretty cool you

168
00:08:10,979 --> 00:08:16,529
so you can flip through all of the stuff

169
00:08:16,529 --> 00:08:19,289
you have in your your cluster just to

170
00:08:19,289 --> 00:08:22,139
kind of see what it's wet its storing

171
00:08:22,139 --> 00:08:24,900
and I could click Edit down here like

172
00:08:24,900 --> 00:08:27,090
and actually go and edit the HTML of my

173
00:08:27,090 --> 00:08:28,830
presentation save the back and react so

174
00:08:28,830 --> 00:08:30,389
this is actually pretty similar to what

175
00:08:30,389 --> 00:08:34,770
futon gives you in couchdb so the next

176
00:08:34,770 --> 00:08:36,690
one I think is is the more fun one and

177
00:08:36,690 --> 00:08:42,919
in its called yak react and in previous

178
00:08:42,919 --> 00:08:47,910
conferences we've tried to set up people

179
00:08:47,910 --> 00:08:50,279
with laptops all connected on the

180
00:08:50,279 --> 00:08:51,750
conference Wi-Fi which you know is

181
00:08:51,750 --> 00:08:55,170
always a problem at conferences and they

182
00:08:55,170 --> 00:08:57,930
connect their laptops together and then

183
00:08:57,930 --> 00:08:59,670
jump on the chat room from their local

184
00:08:59,670 --> 00:09:01,620
machine so they connect their laptops

185
00:09:01,620 --> 00:09:04,529
together in a cluster but i'm going to

186
00:09:04,529 --> 00:09:06,209
show you basically what yak react does

187
00:09:06,209 --> 00:09:07,550
so i'm going to put in

188
00:09:07,550 --> 00:09:12,990
my name and Shawn at basho calm and it

189
00:09:12,990 --> 00:09:17,410
just gives me kind of a blank screen but

190
00:09:17,420 --> 00:09:22,829
and so that was a full round trip posted

191
00:09:22,829 --> 00:09:26,509
the the message in to rioc and then and

192
00:09:26,509 --> 00:09:29,190
then displayed it back on the machine so

193
00:09:29,190 --> 00:09:31,980
are on your browser so if you want to go

194
00:09:31,980 --> 00:09:33,779
to that I want to jump on there and

195
00:09:33,779 --> 00:09:36,389
start you know trying it out you can go

196
00:09:36,389 --> 00:09:38,850
rioc apps basher calm and then port 80

197
00:09:38,850 --> 00:09:43,680
98 / react / yak / index.html and I'll

198
00:09:43,680 --> 00:09:47,449
have that link later in the presentation

199
00:09:47,449 --> 00:09:50,399
so we'll check back and see who's who's

200
00:09:50,399 --> 00:09:52,399
jumped on there and started chatting

201
00:09:52,399 --> 00:09:55,519
okay so we had the happy fun demo time

202
00:09:55,519 --> 00:09:57,779
but that's these are just you know

203
00:09:57,779 --> 00:10:00,149
simple apps there derp scale they're not

204
00:10:00,149 --> 00:10:05,459
serious but it's easy so the key things

205
00:10:05,459 --> 00:10:08,610
to take away from here is that rioc is

206
00:10:08,610 --> 00:10:11,910
like what HTTP should be for put and

207
00:10:11,910 --> 00:10:14,910
post and delete it's really easy to

208
00:10:14,910 --> 00:10:18,600
build a browser side app that you store

209
00:10:18,600 --> 00:10:20,069
in react and you can deploy really

210
00:10:20,069 --> 00:10:23,760
easily so what will you build so if you

211
00:10:23,760 --> 00:10:25,079
want to go play with this stuff I've

212
00:10:25,079 --> 00:10:28,290
just showed you again I said a rioc apps

213
00:10:28,290 --> 00:10:30,779
basho calm colon eighty ninety eight

214
00:10:30,779 --> 00:10:33,300
sorry about the port but I couldn't get

215
00:10:33,300 --> 00:10:36,810
my load balancer to work yet and so you

216
00:10:36,810 --> 00:10:40,680
can go see the slides there j/s comp /

217
00:10:40,680 --> 00:10:43,920
slides recon is a separate project you

218
00:10:43,920 --> 00:10:46,019
can also get from recon basher calm and

219
00:10:46,019 --> 00:10:49,079
I'll show that in a second / go and then

220
00:10:49,079 --> 00:10:51,029
there's yak react so if you play with

221
00:10:51,029 --> 00:10:52,380
this please be nice and don't hos my

222
00:10:52,380 --> 00:10:56,220
cluster it's running on giant but you

223
00:10:56,220 --> 00:10:57,269
know if you delete something these

224
00:10:57,269 --> 00:11:02,100
things might not work anymore so a low

225
00:11:02,100 --> 00:11:03,959
plug here bash is hiring we're looking

226
00:11:03,959 --> 00:11:05,370
for developer advocates and other type

227
00:11:05,370 --> 00:11:07,740
of people so send an email to react at

228
00:11:07,740 --> 00:11:10,439
basho calm if you're interested enjoy

229
00:11:10,439 --> 00:11:11,730
the stickers in your little manila

230
00:11:11,730 --> 00:11:15,160
envelope and that's

231
00:11:15,160 --> 00:11:18,069
that's it thank you and I'd love to take

232
00:11:18,069 --> 00:11:20,620
questions yeah we'll start here and then

233
00:11:20,620 --> 00:11:23,230
go back since you were trying Ronnie

234
00:11:23,230 --> 00:11:25,180
basically full app straight up Rihanna

235
00:11:25,180 --> 00:11:27,940
would you put all the notes behind a

236
00:11:27,940 --> 00:11:30,790
boat balancer and then how do you deal

237
00:11:30,790 --> 00:11:32,570
or do you deal

238
00:11:32,570 --> 00:11:36,870
yeah so rioc is is doesn't have any

239
00:11:36,870 --> 00:11:38,220
built-in authentication yet so the

240
00:11:38,220 --> 00:11:40,290
question was would you put rioc nodes

241
00:11:40,290 --> 00:11:42,150
behind a load balancer and then how do

242
00:11:42,150 --> 00:11:45,210
you deal with ACL so rioc is designed be

243
00:11:45,210 --> 00:11:46,800
used behind a firewall right now there's

244
00:11:46,800 --> 00:11:48,930
no built-in authentication but plenty of

245
00:11:48,930 --> 00:11:51,810
people have put like apache or nginx or

246
00:11:51,810 --> 00:11:54,680
some other reverse proxy server in front

247
00:11:54,680 --> 00:11:58,410
to do authentication and you know

248
00:11:58,410 --> 00:12:00,480
they'll Pratip we do like basic over ssl

249
00:12:00,480 --> 00:12:02,970
or something but once you have

250
00:12:02,970 --> 00:12:05,070
connection you can basically look at any

251
00:12:05,070 --> 00:12:10,290
of the key space that's in react and did

252
00:12:10,290 --> 00:12:14,010
get your your whole question I guess so

253
00:12:14,010 --> 00:12:16,530
when you do is apparently the next

254
00:12:16,530 --> 00:12:19,650
redirection you with some type of woman

255
00:12:19,650 --> 00:12:21,230
yes

256
00:12:21,230 --> 00:12:24,389
right so actually what that when I when

257
00:12:24,389 --> 00:12:26,879
I showed the X Excel to redirect let me

258
00:12:26,879 --> 00:12:29,069
put back here what that actually means

259
00:12:29,069 --> 00:12:30,779
is that your application receives a

260
00:12:30,779 --> 00:12:33,089
request first and you send a header back

261
00:12:33,089 --> 00:12:35,160
and you've got an internal location and

262
00:12:35,160 --> 00:12:37,829
engine X and so it will only serve gets

263
00:12:37,829 --> 00:12:51,090
yeah your question back there yeah

264
00:12:51,100 --> 00:12:55,190
sure um so here's my other gauntlet to

265
00:12:55,190 --> 00:12:57,710
throw down Mongo loses data rioc

266
00:12:57,710 --> 00:13:01,520
replicates and so you should use react

267
00:13:01,520 --> 00:13:05,750
concerned a Mongo see see see the

268
00:13:05,750 --> 00:13:07,550
victory baby here he killed a note in

269
00:13:07,550 --> 00:13:09,980
his react app still works so actually

270
00:13:09,980 --> 00:13:11,900
I'm talking on Thursday if you're coming

271
00:13:11,900 --> 00:13:13,850
too no comp i'll talk about rioc jas

272
00:13:13,850 --> 00:13:15,980
which is the the driver react driver for

273
00:13:15,980 --> 00:13:18,350
node i just wanted to focus on browser

274
00:13:18,350 --> 00:13:22,190
only apps question way in the back how

275
00:13:22,190 --> 00:13:23,390
do you create data that's a very good

276
00:13:23,390 --> 00:13:24,650
question i kind of glossed over that

277
00:13:24,650 --> 00:13:27,589
it's MapReduce so we can actually look

278
00:13:27,589 --> 00:13:29,750
at the code oh wait we're still in

279
00:13:29,750 --> 00:13:33,050
chrome here so we'll just flip that's

280
00:13:33,050 --> 00:13:37,640
going to be too tiny isn't it here we go

281
00:13:37,640 --> 00:13:39,770
okay so this is some of the MapReduce

282
00:13:39,770 --> 00:13:44,870
that's in in yak react and basically

283
00:13:44,870 --> 00:13:48,440
you're building up a job and that's too

284
00:13:48,440 --> 00:13:51,290
wide I need to learn to do 80 line you

285
00:13:51,290 --> 00:13:55,550
know 80-column code here so in this case

286
00:13:55,550 --> 00:13:57,709
we're running a map function this is to

287
00:13:57,709 --> 00:14:00,170
pull and get all the new messages you're

288
00:14:00,170 --> 00:14:01,640
running a map function that's stored in

289
00:14:01,640 --> 00:14:03,950
this bucket and key and you're passing

290
00:14:03,950 --> 00:14:05,510
an argument and the relative reduce

291
00:14:05,510 --> 00:14:07,250
function is stored in this bucket and

292
00:14:07,250 --> 00:14:08,540
key and you tell it to return the

293
00:14:08,540 --> 00:14:11,300
results keep true and then you give it a

294
00:14:11,300 --> 00:14:16,130
call back so in this case it's it calls

295
00:14:16,130 --> 00:14:18,800
back to this poll function and I did

296
00:14:18,800 --> 00:14:20,450
some function prototype buying stuff

297
00:14:20,450 --> 00:14:21,890
since I didn't want to include conclude

298
00:14:21,890 --> 00:14:25,760
prototype and so the initial poll is

299
00:14:25,760 --> 00:14:29,839
pretty similar except that you limit it

300
00:14:29,839 --> 00:14:31,760
to 25 since you don't want to get you

301
00:14:31,760 --> 00:14:33,440
know hundreds of messages back and crash

302
00:14:33,440 --> 00:14:37,550
your browser okay and so then then once

303
00:14:37,550 --> 00:14:39,830
it gets the the data back and I'll show

304
00:14:39,830 --> 00:14:41,300
those map and reduce functions in a

305
00:14:41,300 --> 00:14:43,550
second when it gets the data back it

306
00:14:43,550 --> 00:14:45,950
runs this little thing that adds them to

307
00:14:45,950 --> 00:14:51,080
the Dom so and actually we can whoops we

308
00:14:51,080 --> 00:14:53,980
can look those functions in recon right

309
00:14:53,980 --> 00:14:59,490
so

310
00:14:59,500 --> 00:15:02,480
ok let's look the buckets and you see my

311
00:15:02,480 --> 00:15:07,190
mug so i made this bucket called yak mr

312
00:15:07,190 --> 00:15:10,570
which is just the MapReduce functions

313
00:15:10,570 --> 00:15:13,610
and so there's this the very first

314
00:15:13,610 --> 00:15:15,380
function that gets run in any of those

315
00:15:15,380 --> 00:15:19,430
jobs is this and it just takes when I

316
00:15:19,430 --> 00:15:21,320
say object it just takes a rioc object

317
00:15:21,320 --> 00:15:23,750
so that's the the value the key and

318
00:15:23,750 --> 00:15:27,500
value and it parses it it interpreted as

319
00:15:27,500 --> 00:15:29,390
JSON and then it determines if the

320
00:15:29,390 --> 00:15:31,250
timestamp is later than the thing you

321
00:15:31,250 --> 00:15:33,380
pass to the phase if so it returns the

322
00:15:33,380 --> 00:15:36,220
value otherwise it returns an empty list

323
00:15:36,220 --> 00:15:40,370
and so instead of like doing a

324
00:15:40,370 --> 00:15:41,930
declarative you know query language

325
00:15:41,930 --> 00:15:43,790
you're doing like I'm going to start

326
00:15:43,790 --> 00:15:46,280
with these keys and I'm are running

327
00:15:46,280 --> 00:15:47,600
through a bunch of functions that are

328
00:15:47,600 --> 00:15:49,700
kind of like a pipeline and that's going

329
00:15:49,700 --> 00:15:52,610
to return result to my browser they

330
00:15:52,610 --> 00:15:55,460
answer your question ok cool any more

