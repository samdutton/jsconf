1
00:00:03,710 --> 00:00:08,870

you

2
00:00:08,880 --> 00:00:13,920
okay thanks Jake for your awesome jokes

3
00:00:13,920 --> 00:00:21,010
yeah yeah it's pretty amazing so I'm

4
00:00:21,010 --> 00:00:23,109
going to talk about high performance in

5
00:00:23,109 --> 00:00:26,970
the critical path this is something that

6
00:00:26,970 --> 00:00:29,590
I'm interested in and I became

7
00:00:29,590 --> 00:00:32,169
interested in mostly because bug when I

8
00:00:32,169 --> 00:00:35,829
started my blog I was just loving now

9
00:00:35,829 --> 00:00:39,039
then as most people who take on a

10
00:00:39,039 --> 00:00:41,350
personal project at some point in the

11
00:00:41,350 --> 00:00:44,050
lives I had to have a client side

12
00:00:44,050 --> 00:00:46,239
rendering framework because back then it

13
00:00:46,239 --> 00:00:50,140
was like the thing to do right so this

14
00:00:50,140 --> 00:00:52,179
turned out to be really really slow so

15
00:00:52,179 --> 00:00:55,059
mostly all you saw my blog where these

16
00:00:55,059 --> 00:00:59,850
spinning balls so eventually I was

17
00:00:59,850 --> 00:01:02,440
interesting performance and making my

18
00:01:02,440 --> 00:01:05,920
side load faster on the first load so

19
00:01:05,920 --> 00:01:08,770
today I'm going to be trying to speak

20
00:01:08,770 --> 00:01:11,049
how you can achieve that kind of thing

21
00:01:11,049 --> 00:01:14,530
and how to make sure that it doesn't

22
00:01:14,530 --> 00:01:18,789
happen to you that you have like five

23
00:01:18,789 --> 00:01:22,390
second page loads so the first thing

24
00:01:22,390 --> 00:01:25,630
that you need to do in order to improve

25
00:01:25,630 --> 00:01:27,430
your performance is actually measure

26
00:01:27,430 --> 00:01:30,369
what's going on and know where your site

27
00:01:30,369 --> 00:01:34,659
is sitting on so there are a ton of

28
00:01:34,659 --> 00:01:36,130
different ways that you can measure

29
00:01:36,130 --> 00:01:38,500
performance the first one it's probably

30
00:01:38,500 --> 00:01:41,049
the most abuse you Shaz open dev tools

31
00:01:41,049 --> 00:01:45,039
and run an audit of your sign this is

32
00:01:45,039 --> 00:01:47,140
not very interesting but it's probably

33
00:01:47,140 --> 00:01:50,799
the easiest way of running these kind of

34
00:01:50,799 --> 00:01:54,189
performance analysis and it gives you

35
00:01:54,189 --> 00:01:56,170
some tips on how to improve performance

36
00:01:56,170 --> 00:01:59,259
like caching gzip in and stuff like that

37
00:01:59,259 --> 00:02:03,009
so you get per resource advice and you

38
00:02:03,009 --> 00:02:04,859
also get some cash in best practices

39
00:02:04,859 --> 00:02:08,170
along with some other general tips like

40
00:02:08,170 --> 00:02:12,610
minify your stuff and so on but that's

41
00:02:12,610 --> 00:02:15,430
the this simple option right then you

42
00:02:15,430 --> 00:02:17,860
have PageSpeed insights which is an

43
00:02:17,860 --> 00:02:18,210
online

44
00:02:18,210 --> 00:02:20,340
in service where you can just paste on

45
00:02:20,340 --> 00:02:23,370
in oral to your side and it will tell

46
00:02:23,370 --> 00:02:27,660
you a few different metrics on how your

47
00:02:27,660 --> 00:02:31,410
site rates like how is it performing in

48
00:02:31,410 --> 00:02:33,480
the case of moil connections and how is

49
00:02:33,480 --> 00:02:35,910
it performing in desktop connections

50
00:02:35,910 --> 00:02:37,770
which are supposed to be better and so

51
00:02:37,770 --> 00:02:41,070
on um it gives you some tips and the

52
00:02:41,070 --> 00:02:42,480
kind of things that you should consider

53
00:02:42,480 --> 00:02:46,740
fixing and it even gives you some your

54
00:02:46,740 --> 00:02:49,710
ex advice like maybe your buttons are

55
00:02:49,710 --> 00:02:52,230
too small for a moral device and things

56
00:02:52,230 --> 00:02:55,650
like that so it's a nice tool to try out

57
00:02:55,650 --> 00:02:59,640
too it gives you both desktop and mobile

58
00:02:59,640 --> 00:03:05,550
wrap scores from 1 to 100 and some

59
00:03:05,550 --> 00:03:07,920
practical advice as well in in the in

60
00:03:07,920 --> 00:03:10,560
each of those scenarios that you should

61
00:03:10,560 --> 00:03:13,920
fix or consider fixin you can always

62
00:03:13,920 --> 00:03:16,920
learn more going through the resources

63
00:03:16,920 --> 00:03:21,270
that they give you and they also give

64
00:03:21,270 --> 00:03:25,580
you some of some best practices like

65
00:03:25,580 --> 00:03:28,890
differing non-critical content and so on

66
00:03:28,890 --> 00:03:30,360
which is something that we'll talk more

67
00:03:30,360 --> 00:03:34,560
about later on during this talk and then

68
00:03:34,560 --> 00:03:36,720
another tool that really really like is

69
00:03:36,720 --> 00:03:39,150
webpagetest in web page this is

70
00:03:39,150 --> 00:03:42,900
basically something you just put the

71
00:03:42,900 --> 00:03:45,510
link to your site and waiting in a queue

72
00:03:45,510 --> 00:03:48,150
for for a machine to be assigned to you

73
00:03:48,150 --> 00:03:51,450
and the way this works is it will fire

74
00:03:51,450 --> 00:03:55,320
up your side and it'll shoot the video

75
00:03:55,320 --> 00:03:58,800
have the site is loaded and then it will

76
00:03:58,800 --> 00:04:01,320
give you a bunch of different analytics

77
00:04:01,320 --> 00:04:04,980
and metrics that you can act on for

78
00:04:04,980 --> 00:04:08,160
example it gives you the load time in

79
00:04:08,160 --> 00:04:11,690
seconds the time to first by the time to

80
00:04:11,690 --> 00:04:14,640
pagelet page complete and all these

81
00:04:14,640 --> 00:04:19,560
different points in the life cycle of

82
00:04:19,560 --> 00:04:22,049
your page and also gives you rough

83
00:04:22,049 --> 00:04:26,240
scores like in page speed using grades

84
00:04:26,240 --> 00:04:29,969
for time to first byte keep alive

85
00:04:29,969 --> 00:04:33,599
compressed transfer caching where you're

86
00:04:33,599 --> 00:04:35,429
using a CDN or not where you're

87
00:04:35,429 --> 00:04:40,069
compressing images um things like that

88
00:04:40,069 --> 00:04:45,389
besides this brace you also get the

89
00:04:45,389 --> 00:04:49,889
waterfall view which is a very easy way

90
00:04:49,889 --> 00:04:53,249
to look at how your page is loaded and

91
00:04:53,249 --> 00:04:56,519
what resources plug the next few so for

92
00:04:56,519 --> 00:04:59,689
example in this example you can see that

93
00:04:59,689 --> 00:05:03,719
fonts are blocking everything else and

94
00:05:03,719 --> 00:05:05,669
maybe if you were able to love those

95
00:05:05,669 --> 00:05:08,789
fonts asynchronously or not all of them

96
00:05:08,789 --> 00:05:10,919
at all maybe because they are cached

97
00:05:10,919 --> 00:05:13,979
you'll save like 600 milliseconds or

98
00:05:13,979 --> 00:05:17,069
even more so it's really easy looking at

99
00:05:17,069 --> 00:05:21,059
this to figure out how to parallel eyes

100
00:05:21,059 --> 00:05:23,969
your downloads so that even takes a

101
00:05:23,969 --> 00:05:28,019
shorter amount of time and just as you

102
00:05:28,019 --> 00:05:31,019
had the grades in general you can also

103
00:05:31,019 --> 00:05:33,599
look at these grades on a per resource

104
00:05:33,599 --> 00:05:38,059
basis so if you for instance have bad

105
00:05:38,059 --> 00:05:42,749
static caching you may want to look at

106
00:05:42,749 --> 00:05:47,759
this because most of those failed grades

107
00:05:47,759 --> 00:05:50,909
may be due to third-party ads and stuff

108
00:05:50,909 --> 00:05:53,610
like that that you probably have on your

109
00:05:53,610 --> 00:05:59,809
side so it's one other thing to consider

110
00:05:59,809 --> 00:06:02,759
um and like I said they take a video of

111
00:06:02,759 --> 00:06:04,829
your side loading and this makes it very

112
00:06:04,829 --> 00:06:07,469
easy to spot things like flashes of

113
00:06:07,469 --> 00:06:10,079
invisible text and it helps you

114
00:06:10,079 --> 00:06:14,610
calculate the how fast your site is

115
00:06:14,610 --> 00:06:16,739
loading using a metric called the speed

116
00:06:16,739 --> 00:06:22,489
index which is I'll just read this

117
00:06:22,489 --> 00:06:25,169
spandex takes the visual progress of the

118
00:06:25,169 --> 00:06:27,360
visual page loading and computes an

119
00:06:27,360 --> 00:06:30,059
overall score for how quickly the

120
00:06:30,059 --> 00:06:32,729
content was painting so this basically

121
00:06:32,729 --> 00:06:36,839
means spandex tells you how fast content

122
00:06:36,839 --> 00:06:41,220
is viewable to your users

123
00:06:41,220 --> 00:06:44,100
and generally speaking and speed index

124
00:06:44,100 --> 00:06:47,820
of 1000 or less is a good value to be in

125
00:06:47,820 --> 00:06:51,090
the lower is the faster your patients

126
00:06:51,090 --> 00:06:55,410
showing content to you your users so in

127
00:06:55,410 --> 00:06:59,820
short web page that gives you a very

128
00:06:59,820 --> 00:07:02,010
detailed inspection of februari single

129
00:07:02,010 --> 00:07:05,490
request it analyzed is TCP traffic and

130
00:07:05,490 --> 00:07:09,840
shows you all of these low-level things

131
00:07:09,840 --> 00:07:12,660
like handshakes honor than what's going

132
00:07:12,660 --> 00:07:15,060
on in every single step of the

133
00:07:15,060 --> 00:07:17,910
connection it helps you identify

134
00:07:17,910 --> 00:07:20,820
bottlenecks and visualize progress and

135
00:07:20,820 --> 00:07:23,010
this makes it very very easy to figure

136
00:07:23,010 --> 00:07:26,570
out wearing in your in your page load

137
00:07:26,570 --> 00:07:30,390
you are taking too much up taking up too

138
00:07:30,390 --> 00:07:34,680
much time the problem with every single

139
00:07:34,680 --> 00:07:37,770
one of these tools is that you have to

140
00:07:37,770 --> 00:07:40,320
proactively go to these sites or open up

141
00:07:40,320 --> 00:07:45,330
devtools and run the audit and it's just

142
00:07:45,330 --> 00:07:47,310
something that you may just do once

143
00:07:47,310 --> 00:07:51,480
after my talk and then never do again so

144
00:07:51,480 --> 00:07:54,540
this is not what i recommend are all i

145
00:07:54,540 --> 00:07:57,120
recommend that you automate this stuff

146
00:07:57,120 --> 00:08:00,450
and you measure often not just once

147
00:08:00,450 --> 00:08:06,960
after check on BP so there are a few

148
00:08:06,960 --> 00:08:08,400
different tools we can use to automate

149
00:08:08,400 --> 00:08:11,280
all of this one of them is called PSI

150
00:08:11,280 --> 00:08:15,830
it's an admiral that comes with a CLI

151
00:08:15,830 --> 00:08:21,090
grunt and gulp plugins someone that when

152
00:08:21,090 --> 00:08:23,130
use it on the comment line you shall see

153
00:08:23,130 --> 00:08:25,890
the the same stats that you should use

154
00:08:25,890 --> 00:08:30,419
on PageSpeed insights which is what PSI

155
00:08:30,419 --> 00:08:35,610
is short for um and then on grant amanha

156
00:08:35,610 --> 00:08:38,969
you just get json objects this is pretty

157
00:08:38,969 --> 00:08:44,670
useful to to automate the these

158
00:08:44,670 --> 00:08:46,920
measurements and maybe make some sort of

159
00:08:46,920 --> 00:08:49,020
graph over time and five your site is

160
00:08:49,020 --> 00:08:52,260
evolving I one not so it's one thing to

161
00:08:52,260 --> 00:08:54,720
consider there's a similar to

162
00:08:54,720 --> 00:08:57,980
for a web page since it's a little bit

163
00:08:57,980 --> 00:09:02,129
slower because again you need to be put

164
00:09:02,129 --> 00:09:04,110
in a queue for so that you are assigned

165
00:09:04,110 --> 00:09:07,980
a computer where your test will run and

166
00:09:07,980 --> 00:09:09,839
then you need to make another request

167
00:09:09,839 --> 00:09:14,009
and and then eventually like two minutes

168
00:09:14,009 --> 00:09:16,589
later you'll get all of these data but

169
00:09:16,589 --> 00:09:20,279
it's so much data that you you'll want

170
00:09:20,279 --> 00:09:25,079
to use it probably so take it take that

171
00:09:25,079 --> 00:09:28,500
into account and then there's why slow

172
00:09:28,500 --> 00:09:32,160
which is kind of outdated ish so I think

173
00:09:32,160 --> 00:09:34,889
I'm really included earlier but you can

174
00:09:34,889 --> 00:09:37,019
still out i made this using run twice

175
00:09:37,019 --> 00:09:40,649
low so it's an hour or two that similar

176
00:09:40,649 --> 00:09:43,620
to the dev tool audits that we saw

177
00:09:43,620 --> 00:09:47,490
earlier so what do we do with all these

178
00:09:47,490 --> 00:09:49,230
measurements right we know our site is

179
00:09:49,230 --> 00:09:52,620
slow now so what what what can we do

180
00:09:52,620 --> 00:09:54,930
about that well the first thing that I

181
00:09:54,930 --> 00:09:56,879
recommend is setting up a performance

182
00:09:56,879 --> 00:10:00,420
budget and these basically helps you

183
00:10:00,420 --> 00:10:02,639
track the impact of every comment

184
00:10:02,639 --> 00:10:05,550
because if you're enforcing a

185
00:10:05,550 --> 00:10:07,620
performance budget that basically says

186
00:10:07,620 --> 00:10:10,980
okay if my page isn't loading in a

187
00:10:10,980 --> 00:10:15,509
second or our second I have or or if my

188
00:10:15,509 --> 00:10:17,550
page weighs more than three megabytes

189
00:10:17,550 --> 00:10:22,230
then these build is going to fail and if

190
00:10:22,230 --> 00:10:24,689
you do this you will ensure a certain

191
00:10:24,689 --> 00:10:27,990
level of performance throughout your

192
00:10:27,990 --> 00:10:31,620
site which is a great thing there are a

193
00:10:31,620 --> 00:10:32,970
lot of different things that you can

194
00:10:32,970 --> 00:10:35,910
track its much as page load so for

195
00:10:35,910 --> 00:10:38,699
example you can track milestone timings

196
00:10:38,699 --> 00:10:41,670
like the load time or the time to the

197
00:10:41,670 --> 00:10:45,269
first piece of content like a tweet for

198
00:10:45,269 --> 00:10:46,829
instance this is something that we are

199
00:10:46,829 --> 00:10:49,860
popularized and then it became thing

200
00:10:49,860 --> 00:10:52,470
there's also speed index which is the

201
00:10:52,470 --> 00:10:55,949
index I defined earlier this thing comes

202
00:10:55,949 --> 00:10:59,209
from google and it has like math in it

203
00:10:59,209 --> 00:11:02,880
but it's pretty accurate way of

204
00:11:02,880 --> 00:11:05,970
measuring your performance um

205
00:11:05,970 --> 00:11:07,680
then there are simpler metrics that you

206
00:11:07,680 --> 00:11:09,660
can use like quantity based metrics like

207
00:11:09,660 --> 00:11:13,680
Rico scanned page weight image weight

208
00:11:13,680 --> 00:11:16,740
and so on and there are even simpler

209
00:11:16,740 --> 00:11:19,949
rules like just using whatever why slow

210
00:11:19,949 --> 00:11:22,769
gives you or whatever page please score

211
00:11:22,769 --> 00:11:28,680
you have our now you can enforce any of

212
00:11:28,680 --> 00:11:31,079
these using a something called perf

213
00:11:31,079 --> 00:11:33,720
budget it's again a package that you can

214
00:11:33,720 --> 00:11:36,750
use to enforce all of these different

215
00:11:36,750 --> 00:11:38,670
metrics and it comes with a bunch of

216
00:11:38,670 --> 00:11:40,920
options that you can use and basically

217
00:11:40,920 --> 00:11:46,439
if if one of your isn't met

218
00:11:46,439 --> 00:11:50,519
then the the build will fail the task

219
00:11:50,519 --> 00:11:51,980
will file on the bill will file

220
00:11:51,980 --> 00:11:54,949
hopefully your site won't be deployed

221
00:11:54,949 --> 00:11:58,079
because it will be let it it would be

222
00:11:58,079 --> 00:12:04,019
less performant towards that but what

223
00:12:04,019 --> 00:12:05,819
can we really do to improve performance

224
00:12:05,819 --> 00:12:09,180
beyond minification right because there

225
00:12:09,180 --> 00:12:12,329
are a ton of different things that we

226
00:12:12,329 --> 00:12:14,430
can look at in the web stack going from

227
00:12:14,430 --> 00:12:18,480
TCP all the way to JavaScript so let's

228
00:12:18,480 --> 00:12:22,350
start with the lower lower levels like

229
00:12:22,350 --> 00:12:25,730
networking if you are interested in this

230
00:12:25,730 --> 00:12:29,730
beyond what I can talk about in 30

231
00:12:29,730 --> 00:12:31,769
minutes I recommend reading

232
00:12:31,769 --> 00:12:33,660
high-performance browser browser

233
00:12:33,660 --> 00:12:36,959
networking by Ilya it's a very good book

234
00:12:36,959 --> 00:12:41,449
it it describes him in a lot of detail

235
00:12:41,449 --> 00:12:44,040
all of the underlying protocols of the

236
00:12:44,040 --> 00:12:50,269
web all the way from TCP HTTP HTTPS

237
00:12:50,269 --> 00:12:55,259
everything websockets where DC or not it

238
00:12:55,259 --> 00:12:57,300
talks a lot about more networks and why

239
00:12:57,300 --> 00:13:02,699
it's important to to understand it helps

240
00:13:02,699 --> 00:13:04,800
you understand why progressive

241
00:13:04,800 --> 00:13:08,399
enhancement is important because on

242
00:13:08,399 --> 00:13:11,699
intermittent connections you you want to

243
00:13:11,699 --> 00:13:14,939
deliver the fastest possible experience

244
00:13:14,939 --> 00:13:17,819
to your users so it talks a lot about

245
00:13:17,819 --> 00:13:18,810
again

246
00:13:18,810 --> 00:13:21,360
the intersection between UX and

247
00:13:21,360 --> 00:13:26,490
performance but beyond that something

248
00:13:26,490 --> 00:13:29,040
that you can extract strike from that

249
00:13:29,040 --> 00:13:32,460
book is how to optimize tcp and there

250
00:13:32,460 --> 00:13:36,330
are two basic ways of doing that first

251
00:13:36,330 --> 00:13:38,670
off you you you should increase the

252
00:13:38,670 --> 00:13:41,370
initial TC being window size and this

253
00:13:41,370 --> 00:13:43,950
basically allows you to have more

254
00:13:43,950 --> 00:13:45,990
throughput on every connection from the

255
00:13:45,990 --> 00:13:49,620
get-go and to do that you basically need

256
00:13:49,620 --> 00:13:53,400
to have the latest version of your OS in

257
00:13:53,400 --> 00:13:56,490
production and that's basically it and

258
00:13:56,490 --> 00:13:57,839
the other thing that you should be doing

259
00:13:57,839 --> 00:14:01,110
is disabling slow sorry start and this

260
00:14:01,110 --> 00:14:02,970
is part of the TCP protocol that's

261
00:14:02,970 --> 00:14:06,210
usually enabled by default but what it

262
00:14:06,210 --> 00:14:08,940
does is on long-lived connections

263
00:14:08,940 --> 00:14:10,410
because you're supposed to be using

264
00:14:10,410 --> 00:14:14,250
keep-alive on HTTP so unlucky live

265
00:14:14,250 --> 00:14:18,140
connections that go idle for for a while

266
00:14:18,140 --> 00:14:21,990
slow sorry sir make sure that the

267
00:14:21,990 --> 00:14:25,260
throughput goes back to an acceptable

268
00:14:25,260 --> 00:14:30,510
level and then that's not very good in

269
00:14:30,510 --> 00:14:32,480
in web connections where you're using

270
00:14:32,480 --> 00:14:36,240
may be reusing a single connection for

271
00:14:36,240 --> 00:14:40,830
many many requests when it comes to http

272
00:14:40,830 --> 00:14:44,400
obviously just make less requests um and

273
00:14:44,400 --> 00:14:47,730
we all can be done turn on keep alive

274
00:14:47,730 --> 00:14:50,310
because that way you have to go through

275
00:14:50,310 --> 00:14:52,530
all of the handshakes involved in

276
00:14:52,530 --> 00:14:55,800
setting up a connection obviously gz

277
00:14:55,800 --> 00:14:57,990
ball detects that expires and it occurs

278
00:14:57,990 --> 00:15:03,480
and use CD ends so there's not a lot of

279
00:15:03,480 --> 00:15:08,040
explaining that's required there and

280
00:15:08,040 --> 00:15:13,040
absolutely look into using HTTP to https

281
00:15:13,040 --> 00:15:17,520
speedy and all these things because they

282
00:15:17,520 --> 00:15:19,589
come with a lot of different benefits

283
00:15:19,589 --> 00:15:23,820
for you some of them are non blocking

284
00:15:23,820 --> 00:15:25,860
multiplexing and this basically means

285
00:15:25,860 --> 00:15:27,450
that you're going to reuse a single

286
00:15:27,450 --> 00:15:29,850
connection for the whole

287
00:15:29,850 --> 00:15:34,290
regine and send all of the requests

288
00:15:34,290 --> 00:15:38,190
through that and it also has higher

289
00:15:38,190 --> 00:15:41,579
compression which basically saves even

290
00:15:41,579 --> 00:15:46,649
more bites by by not sending the cookie

291
00:15:46,649 --> 00:15:48,360
headers for instance when they are the

292
00:15:48,360 --> 00:15:52,350
same as the last request I wanna um and

293
00:15:52,350 --> 00:15:54,120
there's also proactive server push which

294
00:15:54,120 --> 00:15:58,290
allows a server to send along with the

295
00:15:58,290 --> 00:16:02,550
HP's of HTML for instance some CSS and

296
00:16:02,550 --> 00:16:04,589
JavaScript that's also required by that

297
00:16:04,589 --> 00:16:09,779
page in Heller so that the the browser

298
00:16:09,779 --> 00:16:12,060
doesn't need to wait until the page has

299
00:16:12,060 --> 00:16:14,459
loaded to start downloading downloading

300
00:16:14,459 --> 00:16:19,740
those dependencies and others the the

301
00:16:19,740 --> 00:16:23,670
website right and then here we have HTML

302
00:16:23,670 --> 00:16:26,370
and the the single best piece of advice

303
00:16:26,370 --> 00:16:28,560
I have here is just run around the

304
00:16:28,560 --> 00:16:31,139
server side you can always become a

305
00:16:31,139 --> 00:16:34,680
single patient later but important thing

306
00:16:34,680 --> 00:16:38,250
is that you deliver your content first

307
00:16:38,250 --> 00:16:42,750
and last different critical asset

308
00:16:42,750 --> 00:16:44,310
loading and this includes all the

309
00:16:44,310 --> 00:16:47,519
JavaScript that you have all the images

310
00:16:47,519 --> 00:16:53,310
are below default and so on another CSS

311
00:16:53,310 --> 00:16:56,670
ah one thing that you could do is in

312
00:16:56,670 --> 00:16:58,920
line in critical CSS this basically

313
00:16:58,920 --> 00:17:02,420
means if this was your page and the the

314
00:17:02,420 --> 00:17:07,230
D in your web browser all of the content

315
00:17:07,230 --> 00:17:09,390
does below default imagine all of these

316
00:17:09,390 --> 00:17:11,610
slides that are coming up those are

317
00:17:11,610 --> 00:17:13,230
aren't critical because they are not

318
00:17:13,230 --> 00:17:17,400
loaded now so you should be able to

319
00:17:17,400 --> 00:17:21,209
defer all of that CSS from the initial

320
00:17:21,209 --> 00:17:24,179
page load and just in line in a style

321
00:17:24,179 --> 00:17:27,929
tag the DCSS for this page so it looks

322
00:17:27,929 --> 00:17:30,740
very fast and you don't have a blocking

323
00:17:30,740 --> 00:17:35,070
request for CSS we'll look at that later

324
00:17:35,070 --> 00:17:38,730
too um avoid them domain some things

325
00:17:38,730 --> 00:17:41,960
like that is responsive

326
00:17:41,960 --> 00:17:47,480
sign concatenate the unfollow a style

327
00:17:47,480 --> 00:17:51,710
guide that's that doesn't quite sound

328
00:17:51,710 --> 00:17:53,390
like something that would improve

329
00:17:53,390 --> 00:17:55,760
performance but it does because you

330
00:17:55,760 --> 00:17:57,950
don't repeat yourself on things like

331
00:17:57,950 --> 00:18:01,850
this so eventually the code base is much

332
00:18:01,850 --> 00:18:05,929
cleaner than otherwise it'll be when it

333
00:18:05,929 --> 00:18:08,000
comes to phones load them asynchronously

334
00:18:08,000 --> 00:18:12,169
because they are very very expensive you

335
00:18:12,169 --> 00:18:13,909
can use a fallback font while you're

336
00:18:13,909 --> 00:18:16,940
loading and then switch them preventing

337
00:18:16,940 --> 00:18:19,429
a flashes of invisible text while

338
00:18:19,429 --> 00:18:22,909
different slowed use fewer phones this

339
00:18:22,909 --> 00:18:26,450
is something that's probably easier said

340
00:18:26,450 --> 00:18:28,520
than done because it's not like you can

341
00:18:28,520 --> 00:18:30,470
go back to your company and be like oh

342
00:18:30,470 --> 00:18:33,289
hey yeah this guy at the conference said

343
00:18:33,289 --> 00:18:35,870
use P or funds we're cutting all the

344
00:18:35,870 --> 00:18:41,600
phones um designer won't like me but but

345
00:18:41,600 --> 00:18:43,789
the truth is that design works well with

346
00:18:43,789 --> 00:18:48,049
constraints and if you plan on using

347
00:18:48,049 --> 00:18:51,529
less funds from the get-go and try to

348
00:18:51,529 --> 00:18:55,940
work that with your design teams they'll

349
00:18:55,940 --> 00:18:59,120
probably be thrilled about it probably

350
00:18:59,120 --> 00:19:00,740
not in the middle of the project but

351
00:19:00,740 --> 00:19:03,649
definitely when it's just getting

352
00:19:03,649 --> 00:19:06,559
started um and obviously cash funds

353
00:19:06,559 --> 00:19:11,929
aggressively using some some mechanism

354
00:19:11,929 --> 00:19:15,580
like local storage or just HTTP caching

355
00:19:15,580 --> 00:19:18,289
when it comes to images I think the best

356
00:19:18,289 --> 00:19:20,570
thing that you should do is a shrink in

357
00:19:20,570 --> 00:19:22,970
them because usually you have like user

358
00:19:22,970 --> 00:19:26,450
uploaded images are like very big like

359
00:19:26,450 --> 00:19:29,270
screenshots taken on a Mac and there are

360
00:19:29,270 --> 00:19:35,120
like four 4000 pixels wide so you should

361
00:19:35,120 --> 00:19:37,279
bring them and there are tools you can

362
00:19:37,279 --> 00:19:40,580
use that you should be four images below

363
00:19:40,580 --> 00:19:43,190
default create spreadsheets using tools

364
00:19:43,190 --> 00:19:46,820
much as having your designer do that in

365
00:19:46,820 --> 00:19:49,460
line tiny dynamic images may be like

366
00:19:49,460 --> 00:19:53,179
gravitas and so on um and use CSS for

367
00:19:53,179 --> 00:19:55,100
simple icons like that

368
00:19:55,100 --> 00:19:58,340
and one you should be able to live

369
00:19:58,340 --> 00:20:02,450
without JavaScript I said it differ all

370
00:20:02,450 --> 00:20:06,370
of it use small smaller modules acid

371
00:20:06,370 --> 00:20:09,340
hashing and cash bender scraped

372
00:20:09,340 --> 00:20:12,380
separately so they are cached more

373
00:20:12,380 --> 00:20:15,620
aggressively so yeah how the hell do we

374
00:20:15,620 --> 00:20:18,980
do all of this right well that's soon

375
00:20:18,980 --> 00:20:29,179
you guys um but in all seriousness one

376
00:20:29,179 --> 00:20:30,710
of the things that you should be using

377
00:20:30,710 --> 00:20:33,850
his engine eggs which allows you to

378
00:20:33,850 --> 00:20:38,510
serve static content and cash it very

379
00:20:38,510 --> 00:20:42,549
aggressively it supports HTTP to now

380
00:20:42,549 --> 00:20:45,260
gzip compression all this good stuff by

381
00:20:45,260 --> 00:20:49,520
default um and it allows you to lay some

382
00:20:49,520 --> 00:20:53,470
pressure off of your front end servers

383
00:20:53,470 --> 00:20:57,620
set up a CDN first look into this maybe

384
00:20:57,620 --> 00:20:59,600
you don't actually need a CM for like

385
00:20:59,600 --> 00:21:03,350
your personal blog but I still set set

386
00:21:03,350 --> 00:21:07,970
one up for mine because why not um you

387
00:21:07,970 --> 00:21:09,950
can use cloud flour if you're just

388
00:21:09,950 --> 00:21:11,690
setting up your first in the end it's

389
00:21:11,690 --> 00:21:14,539
pretty easy to set up but there are

390
00:21:14,539 --> 00:21:16,990
other enterprise the options as well

391
00:21:16,990 --> 00:21:19,909
when it comes to rendering them both the

392
00:21:19,909 --> 00:21:21,890
server side on the client side there are

393
00:21:21,890 --> 00:21:24,230
a bunch of different options that you

394
00:21:24,230 --> 00:21:26,659
can use there's a backbone with some

395
00:21:26,659 --> 00:21:29,780
hacky thing called render there's

396
00:21:29,780 --> 00:21:34,340
angular 2 maybe I think there's tunnels

397
00:21:34,340 --> 00:21:36,679
which is this thing i did that nobody

398
00:21:36,679 --> 00:21:40,700
knows about so don't use that there's

399
00:21:40,700 --> 00:21:43,400
free act which people do now so maybe

400
00:21:43,400 --> 00:21:48,320
use that but just try to run the server

401
00:21:48,320 --> 00:21:50,299
side and then figure out how to run

402
00:21:50,299 --> 00:21:53,570
their own decline hmm when it comes to

403
00:21:53,570 --> 00:21:56,799
the foreign assets shaz you say sing for

404
00:21:56,799 --> 00:22:00,320
for javascript and then when it comes to

405
00:22:00,320 --> 00:22:03,140
style times justa you can set the media

406
00:22:03,140 --> 00:22:05,450
type to something invalid like only ex

407
00:22:05,450 --> 00:22:07,160
or something

408
00:22:07,160 --> 00:22:09,110
and then after a timeout said the

409
00:22:09,110 --> 00:22:11,090
immediate I to all and that allowed the

410
00:22:11,090 --> 00:22:13,880
Stiles asynchronously and not blogging

411
00:22:13,880 --> 00:22:18,730
your page don't ask me why but it works

412
00:22:18,730 --> 00:22:22,160
when it comes to I new CSS you can

413
00:22:22,160 --> 00:22:26,510
remove things like bootstraps code that

414
00:22:26,510 --> 00:22:30,530
nobody uses just there's this package

415
00:22:30,530 --> 00:22:34,760
called an CSS and you can it's a like a

416
00:22:34,760 --> 00:22:36,910
common line a gold package and whatnot

417
00:22:36,910 --> 00:22:39,880
and it allows you to get rid of all the

418
00:22:39,880 --> 00:22:42,230
bootstrap code that you use and just

419
00:22:42,230 --> 00:22:47,210
have like the button class maybe don't

420
00:22:47,210 --> 00:22:51,950
use bootstrap but you can my point in

421
00:22:51,950 --> 00:22:54,470
line critical CSS and there are plenty

422
00:22:54,470 --> 00:22:56,390
of tools you can use to do this it's

423
00:22:56,390 --> 00:22:59,630
kind of convoluted because the dimension

424
00:22:59,630 --> 00:23:02,150
to do this is something called penthouse

425
00:23:02,150 --> 00:23:07,100
it allows you to it's a script for

426
00:23:07,100 --> 00:23:10,910
phantom shares and it allows you to look

427
00:23:10,910 --> 00:23:13,280
at the page and extract from a

428
00:23:13,280 --> 00:23:15,410
stylesheet all of the CSS that's

429
00:23:15,410 --> 00:23:17,810
actually being used at the top of the

430
00:23:17,810 --> 00:23:21,500
page and it prints that out so then you

431
00:23:21,500 --> 00:23:23,690
need to take that put it in style Tai

432
00:23:23,690 --> 00:23:26,150
and for the rest of the styles as we saw

433
00:23:26,150 --> 00:23:28,880
earlier there's also a package called

434
00:23:28,880 --> 00:23:31,010
critical that allows you to automate all

435
00:23:31,010 --> 00:23:34,970
of these things in a bit of an easier

436
00:23:34,970 --> 00:23:39,340
way but it's well worth the trouble so

437
00:23:39,340 --> 00:23:45,320
consider doing that use of unloader this

438
00:23:45,320 --> 00:23:48,710
is pretty obvious you just have to to

439
00:23:48,710 --> 00:23:51,110
give it your font name and then when

440
00:23:51,110 --> 00:23:54,320
it's loaded it that's a document a class

441
00:23:54,320 --> 00:23:56,450
on the document and then you can swap

442
00:23:56,450 --> 00:23:58,820
the funds so that you have flashes of

443
00:23:58,820 --> 00:24:02,440
imbecile texts and you maybe have some

444
00:24:02,440 --> 00:24:05,390
some flash when you're swapping the

445
00:24:05,390 --> 00:24:08,780
fonts but it's very small and it also

446
00:24:08,780 --> 00:24:10,640
helps you speed up page loads

447
00:24:10,640 --> 00:24:14,540
significantly optimized images you can

448
00:24:14,540 --> 00:24:17,540
use image mean to optimize them to

449
00:24:17,540 --> 00:24:20,180
remove metadata that you don't need and

450
00:24:20,180 --> 00:24:20,419
stop

451
00:24:20,419 --> 00:24:24,230
like that when it comes to shrinking

452
00:24:24,230 --> 00:24:27,200
them you're gonna use graphics magic it

453
00:24:27,200 --> 00:24:29,149
also has like an animal that you can

454
00:24:29,149 --> 00:24:33,379
easily use in in galt tasks with like

455
00:24:33,379 --> 00:24:37,700
five lines of code so do that image mean

456
00:24:37,700 --> 00:24:41,629
has like planes for SVG and JPEG and all

457
00:24:41,629 --> 00:24:44,899
the things I comes with the CLI and gulp

458
00:24:44,899 --> 00:24:49,299
and grunt plugins so it's pretty useful

459
00:24:49,299 --> 00:24:51,739
then when it comes to spreadsheets you

460
00:24:51,739 --> 00:24:54,289
can use bright smith this thing

461
00:24:54,289 --> 00:24:57,619
basically you give it a equal a beam

462
00:24:57,619 --> 00:25:01,279
pattern of where your PNG icons are and

463
00:25:01,279 --> 00:25:03,909
it'll give you back a CSS style sheet

464
00:25:03,909 --> 00:25:07,190
with all the classes that you need for

465
00:25:07,190 --> 00:25:09,919
your icons and a single spreadsheet so

466
00:25:09,919 --> 00:25:12,409
it's pretty handy and it also has a CLI

467
00:25:12,409 --> 00:25:17,119
and a grunt task um when it comes to

468
00:25:17,119 --> 00:25:19,879
inline in images you can use the data

469
00:25:19,879 --> 00:25:22,850
URI manual and it's basically either a

470
00:25:22,850 --> 00:25:25,850
common line tool or or an API you give

471
00:25:25,850 --> 00:25:28,639
it the the path to your file and it

472
00:25:28,639 --> 00:25:31,669
gives you back the decompressed data URI

473
00:25:31,669 --> 00:25:34,429
for that that you can just embed in your

474
00:25:34,429 --> 00:25:39,019
side so that's awesome you can also use

475
00:25:39,019 --> 00:25:42,340
a module system again kind of like

476
00:25:42,340 --> 00:25:44,690
following a style guide this allows you

477
00:25:44,690 --> 00:25:52,249
to not have 20 persons of jQuery common

478
00:25:52,249 --> 00:25:55,419
shares or I es6 modules either way

479
00:25:55,419 --> 00:25:59,749
they're both pretty awesome so that's

480
00:25:59,749 --> 00:26:03,559
pretty much really need if you want to

481
00:26:03,559 --> 00:26:05,840
learn more about all of these things and

482
00:26:05,840 --> 00:26:08,749
maybe gets your hands a little bit dirty

483
00:26:08,749 --> 00:26:13,489
you can use perf school it's a con line

484
00:26:13,489 --> 00:26:16,909
tutorial thing that I did it has

485
00:26:16,909 --> 00:26:19,309
exercises that you can follow they're

486
00:26:19,309 --> 00:26:22,759
basically what I discuss today in the

487
00:26:22,759 --> 00:26:26,840
endurance doc um is pretty fun to do so

488
00:26:26,840 --> 00:26:28,860
it has guts and it

489
00:26:28,860 --> 00:26:36,070
to people like that and yeah and I wrote

490
00:26:36,070 --> 00:26:38,410
the book called the JavaScript

491
00:26:38,410 --> 00:26:41,140
application design it has like a bunch

492
00:26:41,140 --> 00:26:44,110
of stuff that's it's not quite on

493
00:26:44,110 --> 00:26:46,210
performance but its own code quality and

494
00:26:46,210 --> 00:26:48,280
processes and automation all these

495
00:26:48,280 --> 00:26:50,740
things so if you care about any of that

496
00:26:50,740 --> 00:26:55,180
then just follow that link or maybe send

497
00:26:55,180 --> 00:26:56,500
me an email or something i will give you

498
00:26:56,500 --> 00:26:58,180
a discount code if you're too cheap to

499
00:26:58,180 --> 00:27:01,990
buy the full price um and that's it

