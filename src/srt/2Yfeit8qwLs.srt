1
00:00:09,650 --> 00:00:11,519

awesome thanks a lot guys

2
00:00:11,519 --> 00:00:14,099
um so money my name is Pete LePage and I

3
00:00:14,099 --> 00:00:15,269
gotta say I'm a little bit intimidated

4
00:00:15,269 --> 00:00:18,300
to have go on after the last session and

5
00:00:18,300 --> 00:00:20,430
and this next session that's coming up

6
00:00:20,430 --> 00:00:24,090
sounds pretty intense so I'm gonna try

7
00:00:24,090 --> 00:00:25,410
and just sort of give you guys a good

8
00:00:25,410 --> 00:00:27,150
overview of what we've done with

9
00:00:27,150 --> 00:00:28,710
Internet Explorer 9 with the new

10
00:00:28,710 --> 00:00:30,510
JavaScript engine and some of the ways

11
00:00:30,510 --> 00:00:33,570
that we're making the browser run a lot

12
00:00:33,570 --> 00:00:35,880
faster be a lot more efficient much more

13
00:00:35,880 --> 00:00:39,030
standards compliant um I'm gonna say

14
00:00:39,030 --> 00:00:50,129
this now I'm sorry for i6 at this point

15
00:00:50,129 --> 00:00:52,320
like ie6 is a 10 year old browser we

16
00:00:52,320 --> 00:00:53,250
need your help

17
00:00:53,250 --> 00:00:56,010
getting everybody off of it getting them

18
00:00:56,010 --> 00:00:59,039
onto IE 7 getting them on to IE 8 and as

19
00:00:59,039 --> 00:01:01,559
I nine ships getting them onto IE 9

20
00:01:01,559 --> 00:01:04,170
right we're working as hard as we can

21
00:01:04,170 --> 00:01:06,330
but we need your help anytime you go in

22
00:01:06,330 --> 00:01:08,909
and have cases where folks are using

23
00:01:08,909 --> 00:01:11,670
Isaac's encourage them talk to them get

24
00:01:11,670 --> 00:01:18,719
them off of ie6 onto i7 or IE 8

25
00:01:18,729 --> 00:01:22,240
so this morning I was sitting in the the

26
00:01:22,240 --> 00:01:24,310
opening session with Ben and Dion and I

27
00:01:24,310 --> 00:01:27,100
gotta say those guys stole my two

28
00:01:27,100 --> 00:01:29,799
opening slides now the slides look a

29
00:01:29,799 --> 00:01:31,570
little bit different but the concepts

30
00:01:31,570 --> 00:01:33,759
are the same when I kind of looked back

31
00:01:33,759 --> 00:01:36,579
at how the web was and in the early 2000

32
00:01:36,579 --> 00:01:39,280
timeframe and many many years ago it was

33
00:01:39,280 --> 00:01:42,520
all about going and consuming content

34
00:01:42,520 --> 00:01:45,009
there wasn't any interactivity to it and

35
00:01:45,009 --> 00:01:47,259
as the web has progressed and has gotten

36
00:01:47,259 --> 00:01:50,079
better and more interactive we've gotten

37
00:01:50,079 --> 00:01:52,420
to a place where today things like

38
00:01:52,420 --> 00:01:55,799
Netflix or Facebook give us really great

39
00:01:55,799 --> 00:01:58,780
interactive experiences that allow us to

40
00:01:58,780 --> 00:02:01,959
share information to be able to be able

41
00:02:01,959 --> 00:02:03,819
to get stuff share things with our

42
00:02:03,819 --> 00:02:07,149
friends and not have to just consume and

43
00:02:07,149 --> 00:02:09,910
you know I think as the web progresses

44
00:02:09,910 --> 00:02:11,739
and gets further we're gonna see a lot

45
00:02:11,739 --> 00:02:15,130
more interesting applications people are

46
00:02:15,130 --> 00:02:16,060
going to be able to start building

47
00:02:16,060 --> 00:02:19,360
applications that sort of feel native on

48
00:02:19,360 --> 00:02:21,069
their desktop they feel just like

49
00:02:21,069 --> 00:02:22,980
they're running a desktop application

50
00:02:22,980 --> 00:02:25,900
but without feeling it it's in their

51
00:02:25,900 --> 00:02:32,109
browser this is the screenshot of the

52
00:02:32,109 --> 00:02:35,109
IMDB panorama that we did as part of the

53
00:02:35,109 --> 00:02:37,600
IE test drive site right it gives you

54
00:02:37,600 --> 00:02:40,329
full video support panning and zooming

55
00:02:40,329 --> 00:02:46,150
all sorts of really cool stuff and where

56
00:02:46,150 --> 00:02:47,739
it comes down to as we started working

57
00:02:47,739 --> 00:02:51,190
on i9 we sort of came up with three main

58
00:02:51,190 --> 00:02:53,350
pillars that were work we worked on and

59
00:02:53,350 --> 00:02:54,730
I'm going to talk about two of those

60
00:02:54,730 --> 00:02:58,540
pillars today we took we started excuse

61
00:02:58,540 --> 00:03:00,730
me we started around the all-around fast

62
00:03:00,730 --> 00:03:03,519
the browser just has to be fast

63
00:03:03,519 --> 00:03:05,590
whether that's JavaScript whether that's

64
00:03:05,590 --> 00:03:07,750
rendering whether that's opening a new

65
00:03:07,750 --> 00:03:10,810
tab whatever that is the entire browsing

66
00:03:10,810 --> 00:03:13,030
experience has to feel fast we need to

67
00:03:13,030 --> 00:03:15,880
take away the the feeling that some

68
00:03:15,880 --> 00:03:18,459
folks have that things aren't as fast as

69
00:03:18,459 --> 00:03:19,329
they should be

70
00:03:19,329 --> 00:03:22,000
we need the browser to be clean with a

71
00:03:22,000 --> 00:03:23,139
focus on your sites

72
00:03:23,139 --> 00:03:25,510
get rid of all of that great amount of

73
00:03:25,510 --> 00:03:28,120
space that takes up and try and get the

74
00:03:28,120 --> 00:03:29,590
browser so that it gets out of your way

75
00:03:29,590 --> 00:03:31,780
you can do what you want quickly

76
00:03:31,780 --> 00:03:36,819
easily and interoperable right html5

77
00:03:36,819 --> 00:03:41,530
css3 HTML for JavaScript just has to

78
00:03:41,530 --> 00:03:43,630
work you don't want to write your code I

79
00:03:43,630 --> 00:03:45,130
don't want to write my code I spend a

80
00:03:45,130 --> 00:03:47,680
reasonable bit of time writing websites

81
00:03:47,680 --> 00:03:49,690
and that I don't want to have to write

82
00:03:49,690 --> 00:03:53,380
my website multiple times for multiple

83
00:03:53,380 --> 00:04:01,480
browsers so let's take a look at what we

84
00:04:01,480 --> 00:04:03,520
mean by all-around fast as we started to

85
00:04:03,520 --> 00:04:05,890
build that out one of the things that we

86
00:04:05,890 --> 00:04:07,510
looked at and the way we try and build

87
00:04:07,510 --> 00:04:10,120
the browser is really based on data so

88
00:04:10,120 --> 00:04:12,040
what are people doing how are they using

89
00:04:12,040 --> 00:04:13,959
it and so one of the things we did is we

90
00:04:13,959 --> 00:04:15,940
went and we took a whole bunch of news

91
00:04:15,940 --> 00:04:19,810
sites and we sort of I mean autumn eyes

92
00:04:19,810 --> 00:04:21,850
these down to news site one through five

93
00:04:21,850 --> 00:04:24,190
because I don't want to pick on certain

94
00:04:24,190 --> 00:04:25,990
web sites because you'll see why in a

95
00:04:25,990 --> 00:04:26,500
moment

96
00:04:26,500 --> 00:04:29,410
but we anonymize these pop popular five

97
00:04:29,410 --> 00:04:31,240
news sites down and we looked at where

98
00:04:31,240 --> 00:04:33,580
they spent different time in the

99
00:04:33,580 --> 00:04:36,100
different components of the rent of the

100
00:04:36,100 --> 00:04:38,830
browser so we came up with sites one

101
00:04:38,830 --> 00:04:40,780
through five you can see you know the

102
00:04:40,780 --> 00:04:44,440
total file size new site one three Meg's

103
00:04:44,440 --> 00:04:46,419
to download and look at that web page

104
00:04:46,419 --> 00:04:48,910
right like that home page is three Meg's

105
00:04:48,910 --> 00:04:51,520
to download that whereas new site number

106
00:04:51,520 --> 00:04:54,910
three 300k it's nothing like it's

107
00:04:54,910 --> 00:04:57,640
completely significantly smaller than

108
00:04:57,640 --> 00:05:01,090
the other one so we looked at what

109
00:05:01,090 --> 00:05:02,470
they're using how they're going about

110
00:05:02,470 --> 00:05:04,240
using the different rendering engine

111
00:05:04,240 --> 00:05:06,280
components and the different components

112
00:05:06,280 --> 00:05:09,280
of the browser and you know I talked

113
00:05:09,280 --> 00:05:11,440
about the size difference right

114
00:05:11,440 --> 00:05:16,780
huge huge differences in size lines of

115
00:05:16,780 --> 00:05:20,380
JavaScript code right 3,000 lines of

116
00:05:20,380 --> 00:05:23,919
JavaScript code versus 20,000 lines of

117
00:05:23,919 --> 00:05:25,960
JavaScript code for a new site right

118
00:05:25,960 --> 00:05:28,630
think about in any news site you go to

119
00:05:28,630 --> 00:05:31,060
today they're all doing about the same

120
00:05:31,060 --> 00:05:33,760
thing they're showing you the news but

121
00:05:33,760 --> 00:05:35,380
one's got twenty thousand lines of code

122
00:05:35,380 --> 00:05:37,650
one's got three thousand lines of code

123
00:05:37,650 --> 00:05:39,430
then you look at the number of

124
00:05:39,430 --> 00:05:41,650
JavaScript libraries that they're using

125
00:05:41,650 --> 00:05:43,330
how many of you guys when you're

126
00:05:43,330 --> 00:05:45,260
building out your sites are you

127
00:05:45,260 --> 00:05:48,620
more than one javascript library yeah

128
00:05:48,620 --> 00:05:50,870
okay I'm seeing a couple of hands go up

129
00:05:50,870 --> 00:05:53,150
all of those things are going to affect

130
00:05:53,150 --> 00:05:55,460
the performance of your website so we

131
00:05:55,460 --> 00:05:57,050
looked at how all this stuff goes

132
00:05:57,050 --> 00:05:59,450
together and I'm kind of curious which

133
00:05:59,450 --> 00:06:02,150
one do you think loads the fastest now

134
00:06:02,150 --> 00:06:03,440
if you think it's number one put your

135
00:06:03,440 --> 00:06:07,190
hand up number two okay a couple people

136
00:06:07,190 --> 00:06:10,100
for number two number three okay a lot

137
00:06:10,100 --> 00:06:12,250
of people for number three number four

138
00:06:12,250 --> 00:06:18,200
all right anybody for number five number

139
00:06:18,200 --> 00:06:21,230
three smallest site fastest to load most

140
00:06:21,230 --> 00:06:22,940
of you because it's not pulling down a

141
00:06:22,940 --> 00:06:24,740
lot of stuff you're not executing a lot

142
00:06:24,740 --> 00:06:28,160
of JavaScript all right which one's the

143
00:06:28,160 --> 00:06:32,720
fats are sorry slowest to load all right

144
00:06:32,720 --> 00:06:34,160
number one who thinks number one is

145
00:06:34,160 --> 00:06:35,690
slowest to load okay

146
00:06:35,690 --> 00:06:38,810
good chunk of people number two number

147
00:06:38,810 --> 00:06:41,780
three well I guess we kind of limited it

148
00:06:41,780 --> 00:06:43,400
eliminated and number three didn't we

149
00:06:43,400 --> 00:06:50,120
number four number five number four not

150
00:06:50,120 --> 00:06:52,430
that much bigger but because of all the

151
00:06:52,430 --> 00:06:53,930
JavaScript that it's going through and

152
00:06:53,930 --> 00:06:56,920
executing it's running a lot more slowly

153
00:06:56,920 --> 00:06:59,720
so as we built out all of this

154
00:06:59,720 --> 00:07:01,460
infrastructure to really understand

155
00:07:01,460 --> 00:07:03,320
what's going on how these sites are

156
00:07:03,320 --> 00:07:05,540
using this stuff we came to a really

157
00:07:05,540 --> 00:07:08,540
interesting conclusion because of all

158
00:07:08,540 --> 00:07:10,700
these sites using different components

159
00:07:10,700 --> 00:07:12,620
at different times in different amounts

160
00:07:12,620 --> 00:07:15,530
that it's not just about the JavaScript

161
00:07:15,530 --> 00:07:18,530
so as we built out i9 we needed to make

162
00:07:18,530 --> 00:07:20,810
sure that we built i9 to be faster

163
00:07:20,810 --> 00:07:23,600
across all of the subsystems if we made

164
00:07:23,600 --> 00:07:26,060
the JavaScript engine faster but nothing

165
00:07:26,060 --> 00:07:28,370
else well okay we've we've made it

166
00:07:28,370 --> 00:07:31,220
significant improvement but we didn't

167
00:07:31,220 --> 00:07:33,110
fix all of the things that we could fix

168
00:07:33,110 --> 00:07:35,480
so for us it was important to fix all of

169
00:07:35,480 --> 00:07:38,210
the things that we could fix to try and

170
00:07:38,210 --> 00:07:40,550
make the browser as fast as possible all

171
00:07:40,550 --> 00:07:44,780
up in fact when you when you average

172
00:07:44,780 --> 00:07:46,790
these out here's the average for the new

173
00:07:46,790 --> 00:07:49,520
sites right so just over a quarter of

174
00:07:49,520 --> 00:07:53,000
the time on the average new site is

175
00:07:53,000 --> 00:07:56,600
spent in JavaScript how do you think

176
00:07:56,600 --> 00:07:58,729
that changes for an Ajax

177
00:07:58,729 --> 00:08:01,430
Hevy website so something like facebook

178
00:08:01,430 --> 00:08:03,680
or any application that does a lot of

179
00:08:03,680 --> 00:08:05,389
JavaScript does it go up or does it go

180
00:08:05,389 --> 00:08:07,249
down if you think it goes up put your

181
00:08:07,249 --> 00:08:09,680
hand up okay if you think it goes down

182
00:08:09,680 --> 00:08:12,409
put your hand up alright if you think it

183
00:08:12,409 --> 00:08:14,659
does nothing keep your hands down right

184
00:08:14,659 --> 00:08:17,300
alright I have a have a highly active

185
00:08:17,300 --> 00:08:20,839
audience okay in fact it goes down but

186
00:08:20,839 --> 00:08:22,249
the amount of time you spend in

187
00:08:22,249 --> 00:08:23,870
rendering because you keep changing

188
00:08:23,870 --> 00:08:25,849
things with JavaScript your going and

189
00:08:25,849 --> 00:08:28,069
manipulating the Dom you're manipulating

190
00:08:28,069 --> 00:08:31,279
the content that's on the page you spend

191
00:08:31,279 --> 00:08:34,449
more time so that was an important a

192
00:08:34,449 --> 00:08:37,430
sort of piece of data for us to realize

193
00:08:37,430 --> 00:08:41,089
and start building on so let's actually

194
00:08:41,089 --> 00:08:43,699
jump into the JavaScript engine so in

195
00:08:43,699 --> 00:08:46,160
ie8 we have this javascript engine and

196
00:08:46,160 --> 00:08:48,410
the JavaScript engine will go it would

197
00:08:48,410 --> 00:08:50,329
start downloading your file and it will

198
00:08:50,329 --> 00:08:51,949
go and it would start interpreting right

199
00:08:51,949 --> 00:08:54,139
off the bat right and that works not

200
00:08:54,139 --> 00:08:59,690
terribly fast but it works in IE 9 we

201
00:08:59,690 --> 00:09:01,730
built a brand new javascript engine

202
00:09:01,730 --> 00:09:04,610
called chakra alright basically we wrote

203
00:09:04,610 --> 00:09:08,870
it from scratch to be mount standards

204
00:09:08,870 --> 00:09:11,300
compliant with expert 5 to run a lot

205
00:09:11,300 --> 00:09:14,480
faster in fact I'll pull these our

206
00:09:14,480 --> 00:09:16,790
principles up so principle number one

207
00:09:16,790 --> 00:09:19,930
needs to be fast for real-world websites

208
00:09:19,930 --> 00:09:35,190
today and tomorrow all right

209
00:09:35,200 --> 00:09:39,050
yes I'll skip to the third one I checked

210
00:09:39,050 --> 00:09:42,670
today it has full support for vapor Jas

211
00:09:42,670 --> 00:09:46,730
awesome all right but the second one is

212
00:09:46,730 --> 00:09:49,430
modern JavaScript language support we

213
00:09:49,430 --> 00:09:52,100
have full support for the atma script

214
00:09:52,100 --> 00:09:55,010
five language specification with one

215
00:09:55,010 --> 00:09:57,770
exception all right so we've gone and

216
00:09:57,770 --> 00:10:00,110
done a ton of stuff to make sure that

217
00:10:00,110 --> 00:10:03,110
javascript is standards-compliant

218
00:10:03,110 --> 00:10:06,260
works with the same markup does the same

219
00:10:06,260 --> 00:10:08,990
thing across all the browsers and is a

220
00:10:08,990 --> 00:10:11,960
lot faster so how did we do that

221
00:10:11,960 --> 00:10:13,640
this is where I think we get some into

222
00:10:13,640 --> 00:10:16,910
some cool stuff so by default as we

223
00:10:16,910 --> 00:10:20,210
start pulling down our code all right we

224
00:10:20,210 --> 00:10:22,040
start interpreting it right off the bat

225
00:10:22,040 --> 00:10:23,780
because if we start to try and compile

226
00:10:23,780 --> 00:10:25,250
it as soon as we pull it down while we

227
00:10:25,250 --> 00:10:27,890
have to wait for it to compile but as we

228
00:10:27,890 --> 00:10:29,690
start pulling it down and waiting for it

229
00:10:29,690 --> 00:10:32,570
and start interpreting it as soon as we

230
00:10:32,570 --> 00:10:35,690
have it all on our system we go and we

231
00:10:35,690 --> 00:10:38,960
compile it all right and that means that

232
00:10:38,960 --> 00:10:41,030
it's running compiled code runs that

233
00:10:41,030 --> 00:10:43,970
much faster once it's done now the cool

234
00:10:43,970 --> 00:10:46,130
thing I think at least to me is we're

235
00:10:46,130 --> 00:10:48,050
compiling this in the background we're

236
00:10:48,050 --> 00:10:51,380
optimizing for your whole PC for people

237
00:10:51,380 --> 00:10:53,780
who are coming in on a Windows PC one of

238
00:10:53,780 --> 00:10:55,400
the things that we know again through

239
00:10:55,400 --> 00:10:56,960
some of the data that we've been able to

240
00:10:56,960 --> 00:10:59,900
collect is that most pcs today have more

241
00:10:59,900 --> 00:11:02,600
than one core so if you're got one more

242
00:11:02,600 --> 00:11:05,180
if you have more than one core might as

243
00:11:05,180 --> 00:11:06,860
well go and use that core for other

244
00:11:06,860 --> 00:11:08,750
things like compiling in the background

245
00:11:08,750 --> 00:11:10,940
as soon as we've got the native code we

246
00:11:10,940 --> 00:11:13,250
switch over to that and we run through

247
00:11:13,250 --> 00:11:16,130
that it means that your code runs

248
00:11:16,130 --> 00:11:18,530
compiled and that much faster than

249
00:11:18,530 --> 00:11:21,760
having to interpret every single line

250
00:11:21,760 --> 00:11:25,850
all right so I meant I talked about

251
00:11:25,850 --> 00:11:28,150
doing that the compilation and

252
00:11:28,150 --> 00:11:31,550
interpreting we do that via some

253
00:11:31,550 --> 00:11:33,830
heuristics so we're not going to go and

254
00:11:33,830 --> 00:11:35,960
compile every single bit of code on your

255
00:11:35,960 --> 00:11:37,940
page we're not going to interpret every

256
00:11:37,940 --> 00:11:39,830
single bit we look at what

257
00:11:39,830 --> 00:11:43,250
best way to have a very fast experience

258
00:11:43,250 --> 00:11:46,750
on this is and in fact we tried this

259
00:11:46,750 --> 00:11:50,450
using amazon.com website to find out how

260
00:11:50,450 --> 00:11:53,360
they want run and when you run Amazon in

261
00:11:53,360 --> 00:11:58,280
a completely interpreted mode we're four

262
00:11:58,280 --> 00:12:00,350
percent faster with the new JavaScript

263
00:12:00,350 --> 00:12:05,900
engine if you go and I guess I'm missing

264
00:12:05,900 --> 00:12:09,770
a word that know so if it's compiled you

265
00:12:09,770 --> 00:12:12,410
have to go and compile that code means

266
00:12:12,410 --> 00:12:14,450
you're gonna end up being about 20%

267
00:12:14,450 --> 00:12:16,910
slower so using the heuristics to go

268
00:12:16,910 --> 00:12:19,730
through and understand how much faster

269
00:12:19,730 --> 00:12:21,920
your code is running gives you a really

270
00:12:21,920 --> 00:12:23,930
great opportunity to be able to make

271
00:12:23,930 --> 00:12:26,780
sure that everything runs faster much

272
00:12:26,780 --> 00:12:31,310
more efficient so I'm gonna pop over and

273
00:12:31,310 --> 00:12:33,940
I'm gonna bring up a little demo here

274
00:12:33,940 --> 00:12:39,260
and bring this guy over here how many

275
00:12:39,260 --> 00:12:40,670
people have actually checked out the

276
00:12:40,670 --> 00:12:44,060
platform preview or ie 9 beta all right

277
00:12:44,060 --> 00:12:46,130
a bunch of folks that's awesome you can

278
00:12:46,130 --> 00:12:47,930
download it um there's there's two

279
00:12:47,930 --> 00:12:50,300
things that are available there's AI 9

280
00:12:50,300 --> 00:12:53,930
beta which is what I've got up here all

281
00:12:53,930 --> 00:12:54,290
right

282
00:12:54,290 --> 00:12:57,710
the ie9 beta allows you to update your

283
00:12:57,710 --> 00:12:59,810
ie installation gives you the full ie

284
00:12:59,810 --> 00:13:02,060
experience the other option is to

285
00:13:02,060 --> 00:13:04,040
install the platform preview the

286
00:13:04,040 --> 00:13:05,600
platform previews are the things that

287
00:13:05,600 --> 00:13:07,370
we've been releasing every eight weeks

288
00:13:07,370 --> 00:13:09,860
through the IE test drive site and if

289
00:13:09,860 --> 00:13:11,750
they install side by side with your

290
00:13:11,750 --> 00:13:15,290
current ie installation the platform

291
00:13:15,290 --> 00:13:17,360
previews give you an ability to see what

292
00:13:17,360 --> 00:13:19,310
we're doing with the web platform

293
00:13:19,310 --> 00:13:22,220
alright so you don't get all the sort of

294
00:13:22,220 --> 00:13:24,890
look and feel the the browser frame or

295
00:13:24,890 --> 00:13:27,640
anything like that but you get the still

296
00:13:27,640 --> 00:13:30,500
html5 you get the css3 you can see

297
00:13:30,500 --> 00:13:31,310
what's going on

298
00:13:31,310 --> 00:13:33,950
we're gonna keep releasing these as we

299
00:13:33,950 --> 00:13:36,320
move forward so if you go and file a bug

300
00:13:36,320 --> 00:13:38,180
on connect and say hey this doesn't work

301
00:13:38,180 --> 00:13:40,850
or you have have find an issue you'll be

302
00:13:40,850 --> 00:13:43,100
able to see those get updated as we move

303
00:13:43,100 --> 00:13:45,440
along so I'm gonna bring up this flying

304
00:13:45,440 --> 00:13:49,920
images guy

305
00:13:49,930 --> 00:13:55,390
and as this comes up hopefully we'll get

306
00:13:55,390 --> 00:13:56,800
a little bit more Network so we get all

307
00:13:56,800 --> 00:13:58,839
our pictures here so this is Internet

308
00:13:58,839 --> 00:14:00,750
Explorer 9 this is just some simple

309
00:14:00,750 --> 00:14:05,170
JavaScript HTML 4 and CSS 2 there's

310
00:14:05,170 --> 00:14:07,690
nothing magic about this this is not and

311
00:14:07,690 --> 00:14:09,610
a canvas demo this is not a Silverlight

312
00:14:09,610 --> 00:14:14,380
demo but you get a fast rendering like

313
00:14:14,380 --> 00:14:17,320
you've not gotten before all right you

314
00:14:17,320 --> 00:14:19,000
can try this in other browsers and I

315
00:14:19,000 --> 00:14:20,470
encourage you to go try it and other

316
00:14:20,470 --> 00:14:22,450
browsers I'm actually gonna go back and

317
00:14:22,450 --> 00:14:26,589
I want to print out the fishtank demo

318
00:14:26,589 --> 00:14:28,270
because I really like actually you know

319
00:14:28,270 --> 00:14:29,980
what I'm gonna bring up fishtank over

320
00:14:29,980 --> 00:14:37,660
here first so I'm gonna bring up Chrome

321
00:14:37,660 --> 00:14:39,430
and we'll have a quick look at the

322
00:14:39,430 --> 00:14:45,160
fishtank demo in chrome so again this

323
00:14:45,160 --> 00:14:51,330
particular demo is some canvas SVG html5

324
00:14:51,330 --> 00:14:54,880
running on the page so in I airing

325
00:14:54,880 --> 00:14:57,430
Chrome I'm getting what about 20 frames

326
00:14:57,430 --> 00:15:00,010
or 20 fish with 11 frames per second I

327
00:15:00,010 --> 00:15:01,839
can go and I can increase that if I want

328
00:15:01,839 --> 00:15:05,910
to have 50 fish oh

329
00:15:05,910 --> 00:15:09,550
my frame rate goes down alright

330
00:15:09,550 --> 00:15:12,070
so because Internet Explorer 9 is using

331
00:15:12,070 --> 00:15:15,010
the faster JavaScript engine and using

332
00:15:15,010 --> 00:15:17,380
GPU acceleration to get those guys

333
00:15:17,380 --> 00:15:19,360
rendered on the screen you get a much

334
00:15:19,360 --> 00:15:22,510
faster you get a fairly slow experience

335
00:15:22,510 --> 00:15:28,250
in Chrome because they're not using the

336
00:15:28,260 --> 00:15:31,089
GPU acceleration I'm going to get out of

337
00:15:31,089 --> 00:15:32,709
this so that we have a similar

338
00:15:32,709 --> 00:15:36,970
experience let's try this the fish tank

339
00:15:36,970 --> 00:15:42,779
over here and we'll let this guy load

340
00:15:42,779 --> 00:15:44,770
because you get the faster experience

341
00:15:44,770 --> 00:15:47,740
we're gonna get a much higher frames per

342
00:15:47,740 --> 00:15:51,160
second rate in Internet Explorer 9 as

343
00:15:51,160 --> 00:15:56,950
long as we get in that connection all

344
00:15:56,950 --> 00:16:02,629
right come on fish

345
00:16:02,639 --> 00:16:06,040
all right there we go so 20 fish I'm

346
00:16:06,040 --> 00:16:08,529
running at 50 frames per second all

347
00:16:08,529 --> 00:16:08,920
right

348
00:16:08,920 --> 00:16:12,540
so between the JavaScript and the new

349
00:16:12,540 --> 00:16:15,519
the hardware acceleration we're able to

350
00:16:15,519 --> 00:16:18,279
run much faster so I'm gonna get rid of

351
00:16:18,279 --> 00:16:26,529
these guys all right so if you think

352
00:16:26,529 --> 00:16:28,750
back to the spinning images what's going

353
00:16:28,750 --> 00:16:33,850
on there and in Internet Explorer 8 for

354
00:16:33,850 --> 00:16:36,910
that for one sort of animation to run so

355
00:16:36,910 --> 00:16:39,190
that's just moving the images one little

356
00:16:39,190 --> 00:16:44,319
bit we spent over a tenth of a second in

357
00:16:44,319 --> 00:16:46,870
the JavaScript engine so going through

358
00:16:46,870 --> 00:16:49,449
and running through the JavaScript this

359
00:16:49,449 --> 00:16:52,839
purple part here this is doing the Dom

360
00:16:52,839 --> 00:16:54,790
manipulation this is saying hey go grab

361
00:16:54,790 --> 00:16:56,680
this element move this from here to here

362
00:16:56,680 --> 00:16:59,139
and then the yellow part is the actual

363
00:16:59,139 --> 00:17:01,360
rendering so it took us about half a

364
00:17:01,360 --> 00:17:04,030
second to do one iteration that's why ie

365
00:17:04,030 --> 00:17:06,370
eight if you try this today and I ate

366
00:17:06,370 --> 00:17:12,490
you get such a low speed in IE 9 because

367
00:17:12,490 --> 00:17:15,280
we're compiling the JavaScript and the

368
00:17:15,280 --> 00:17:17,559
hardware acceleration you get an entire

369
00:17:17,559 --> 00:17:22,299
revolution an entire animation in less

370
00:17:22,299 --> 00:17:24,699
than a tenth of a second all right so

371
00:17:24,699 --> 00:17:29,320
you get a much faster experience now I

372
00:17:29,320 --> 00:17:31,270
think it's really also important to have

373
00:17:31,270 --> 00:17:33,070
a look at you know I we talked about

374
00:17:33,070 --> 00:17:35,230
some of the the pillars that we had for

375
00:17:35,230 --> 00:17:40,210
i-9 and for the all up fast we do look

376
00:17:40,210 --> 00:17:42,010
at some of the benchmark scores all

377
00:17:42,010 --> 00:17:46,590
right and ie8 we were up at around 3500

378
00:17:46,590 --> 00:17:47,770
milliseconds

379
00:17:47,770 --> 00:17:51,370
all right so we were slow to put it

380
00:17:51,370 --> 00:17:53,799
mildly and I ate for the SunSpider

381
00:17:53,799 --> 00:17:57,940
benchmark we've been working to bring

382
00:17:57,940 --> 00:18:02,080
that number down at PDC back it was

383
00:18:02,080 --> 00:18:03,669
pretty much this time last year we were

384
00:18:03,669 --> 00:18:06,940
up at over at about 750 milliseconds

385
00:18:06,940 --> 00:18:12,159
today in ie9 were the difference between

386
00:18:12,159 --> 00:18:13,059
us and

387
00:18:13,059 --> 00:18:14,860
Chrome nightly is seventy-seven

388
00:18:14,860 --> 00:18:18,309
milliseconds all right now for the most

389
00:18:18,309 --> 00:18:21,190
part if you can see 77 milliseconds and

390
00:18:21,190 --> 00:18:23,799
a test that takes as long as this does

391
00:18:23,799 --> 00:18:26,799
to run that's pretty impressive

392
00:18:26,799 --> 00:18:30,970
all right so it's there's a lot of work

393
00:18:30,970 --> 00:18:32,980
that we're doing to make sure that our

394
00:18:32,980 --> 00:18:35,710
JavaScript engine runs much faster and

395
00:18:35,710 --> 00:18:37,929
much more efficiently and we're still

396
00:18:37,929 --> 00:18:39,460
not done there's still lots of work to

397
00:18:39,460 --> 00:18:42,100
go here and we're working to get that

398
00:18:42,100 --> 00:18:52,539
number down so that one of the things

399
00:18:52,539 --> 00:18:54,129
that's interesting and looking at the

400
00:18:54,129 --> 00:18:57,009
the SunSpider numbers is when you look

401
00:18:57,009 --> 00:18:58,960
at any of the the performance tests and

402
00:18:58,960 --> 00:19:00,519
I encourage all of you guys to go have a

403
00:19:00,519 --> 00:19:02,529
look at the IE blog there's a couple of

404
00:19:02,529 --> 00:19:03,970
blog posts up there but there's one

405
00:19:03,970 --> 00:19:06,070
that's really interesting that goes in

406
00:19:06,070 --> 00:19:07,990
and does a really good analysis of some

407
00:19:07,990 --> 00:19:09,879
of the different JavaScript performance

408
00:19:09,879 --> 00:19:13,149
tests out there and the SunSpider test

409
00:19:13,149 --> 00:19:16,419
is just one of them on there but the

410
00:19:16,419 --> 00:19:18,549
SunSpider tests because it runs things

411
00:19:18,549 --> 00:19:21,730
so often in so many times it runs the

412
00:19:21,730 --> 00:19:24,249
same test multiple times combined doing

413
00:19:24,249 --> 00:19:26,159
JIT compiling makes a huge difference

414
00:19:26,159 --> 00:19:29,409
all right but it doesn't count the

415
00:19:29,409 --> 00:19:31,299
compile time in there so it's really

416
00:19:31,299 --> 00:19:33,460
important to look at how those tests are

417
00:19:33,460 --> 00:19:35,740
being used and what they're doing so

418
00:19:35,740 --> 00:19:37,960
when you're looking to compare browsers

419
00:19:37,960 --> 00:19:40,409
look at how they're doing not just

420
00:19:40,409 --> 00:19:42,879
particular benchmarks but how they're

421
00:19:42,879 --> 00:19:49,059
doing for your site all up so let's talk

422
00:19:49,059 --> 00:19:50,470
about some of the new things we've added

423
00:19:50,470 --> 00:19:51,759
some of the things we've done and

424
00:19:51,759 --> 00:19:54,190
changed this is not an exhaustive list

425
00:19:54,190 --> 00:19:55,749
and I'm not gonna bother reading them

426
00:19:55,749 --> 00:19:56,980
all out because I think you guys can

427
00:19:56,980 --> 00:19:59,559
read them all yourself but we kind of

428
00:19:59,559 --> 00:20:01,799
fixed a couple of big ones like oh say

429
00:20:01,799 --> 00:20:05,080
get element by ID yep that one actually

430
00:20:05,080 --> 00:20:08,080
probably works full Ekman script five

431
00:20:08,080 --> 00:20:09,730
support I put almost in there I

432
00:20:09,730 --> 00:20:11,110
mentioned that there was one thing that

433
00:20:11,110 --> 00:20:13,090
we don't have and that strictmode

434
00:20:13,090 --> 00:20:16,360
but we've got everything else in there

435
00:20:16,360 --> 00:20:18,879
still opportunities to go through and

436
00:20:18,879 --> 00:20:20,200
try them and play with them so I really

437
00:20:20,200 --> 00:20:21,429
encourage you to do that

438
00:20:21,429 --> 00:20:24,159
we have full Dom level 2 and level 3

439
00:20:24,159 --> 00:20:26,620
event support which means

440
00:20:26,620 --> 00:20:28,990
add eventlistener finally works you

441
00:20:28,990 --> 00:20:30,789
don't need to go back and write multiple

442
00:20:30,789 --> 00:20:32,889
lines of code to make things work and

443
00:20:32,889 --> 00:20:37,389
ie9 actually that's a sort of I'll

444
00:20:37,389 --> 00:20:40,450
sidestep a sec and just mention as you

445
00:20:40,450 --> 00:20:42,999
start playing with testing your browsers

446
00:20:42,999 --> 00:20:44,889
or testing your applications and other

447
00:20:44,889 --> 00:20:47,590
browsers just give me nine the same code

448
00:20:47,590 --> 00:20:49,690
that you give Chrome Firefox Safari or

449
00:20:49,690 --> 00:20:52,210
opera and I will be willing to bet that

450
00:20:52,210 --> 00:20:55,149
you will find that it works without any

451
00:20:55,149 --> 00:20:58,120
problems compared to other things are

452
00:20:58,120 --> 00:21:01,509
compared to other versions of ie now we

453
00:21:01,509 --> 00:21:04,570
are still in beta right so there are

454
00:21:04,570 --> 00:21:06,999
still bugs in our stuff but we're

455
00:21:06,999 --> 00:21:09,009
getting there and we're going out and

456
00:21:09,009 --> 00:21:15,070
we're fixing those things um there's

457
00:21:15,070 --> 00:21:17,259
also a bunch of other technical things

458
00:21:17,259 --> 00:21:19,269
that we we sort of did a little bit

459
00:21:19,269 --> 00:21:22,029
deeper there's a new object type system

460
00:21:22,029 --> 00:21:23,590
for those of you who are looking at some

461
00:21:23,590 --> 00:21:25,269
of the type stuff because the new

462
00:21:25,269 --> 00:21:27,249
JavaScript engine is written from

463
00:21:27,249 --> 00:21:28,779
scratch and is actually written in

464
00:21:28,779 --> 00:21:32,679
native code and lives inside ie now I'll

465
00:21:32,679 --> 00:21:34,929
talk about what that means in a sec but

466
00:21:34,929 --> 00:21:37,059
we now have to deal with numbers in a

467
00:21:37,059 --> 00:21:38,320
little bit of a different way or

468
00:21:38,320 --> 00:21:40,960
different parent variables in a

469
00:21:40,960 --> 00:21:43,299
different way so it means we've got a

470
00:21:43,299 --> 00:21:46,119
much faster way of dealing with that

471
00:21:46,119 --> 00:21:50,470
we've got new regular expression engines

472
00:21:50,470 --> 00:21:53,499
which go and heuristic aliy decide which

473
00:21:53,499 --> 00:21:55,570
one you want to use so that you've got a

474
00:21:55,570 --> 00:21:58,330
faster experience and then the other

475
00:21:58,330 --> 00:22:01,090
thing is we're being super conscientious

476
00:22:01,090 --> 00:22:03,970
about hey backwards compatibility is

477
00:22:03,970 --> 00:22:05,889
important right you want your sites to

478
00:22:05,889 --> 00:22:08,679
work that you wrote today and whatever

479
00:22:08,679 --> 00:22:11,049
browser comes out so if you're using any

480
00:22:11,049 --> 00:22:13,330
of the X you a compatible switches or if

481
00:22:13,330 --> 00:22:15,279
you're using anything that throws IE

482
00:22:15,279 --> 00:22:16,960
into one of the previous rendering

483
00:22:16,960 --> 00:22:19,330
engines that's gonna still work and in

484
00:22:19,330 --> 00:22:23,440
fact we've versioned the JavaScript

485
00:22:23,440 --> 00:22:26,740
engine you get the speed performance but

486
00:22:26,740 --> 00:22:32,409
get the IE 8 or IE 7 or quirks mode

487
00:22:32,409 --> 00:22:37,419
behavior so I mentioned that we're doing

488
00:22:37,419 --> 00:22:39,369
a bit of work around moving the

489
00:22:39,369 --> 00:22:40,390
JavaScript engine

490
00:22:40,390 --> 00:22:43,660
into the browser in the past if you

491
00:22:43,660 --> 00:22:46,660
wanted to go and make a call from the

492
00:22:46,660 --> 00:22:49,299
Dom or through JavaScript to the Dom to

493
00:22:49,299 --> 00:22:51,100
move an element you had to go through

494
00:22:51,100 --> 00:22:53,770
this rather complex comm chain and it

495
00:22:53,770 --> 00:22:56,980
was a real you didn't see it as web

496
00:22:56,980 --> 00:22:58,750
developers thankfully but the browser

497
00:22:58,750 --> 00:23:00,309
dealt with it and it was a fairly

498
00:23:00,309 --> 00:23:04,480
expensive process that's over there on

499
00:23:04,480 --> 00:23:07,980
the right you had to go through the comm

500
00:23:07,980 --> 00:23:11,230
elements well now in IE 9 you don't have

501
00:23:11,230 --> 00:23:13,929
to do that anymore javascript the chakra

502
00:23:13,929 --> 00:23:16,690
engine is built into the Internet

503
00:23:16,690 --> 00:23:21,040
Explorer 9 in engine making things run a

504
00:23:21,040 --> 00:23:25,900
lot faster and a lot more smoothly how

505
00:23:25,900 --> 00:23:27,970
many folks are familiar with the the NS

506
00:23:27,970 --> 00:23:33,220
performance stuff okay one pant so one

507
00:23:33,220 --> 00:23:36,940
of the things that I find fascinating is

508
00:23:36,940 --> 00:23:38,650
that we've been working with the

509
00:23:38,650 --> 00:23:41,410
standards bodies the w3c in order to

510
00:23:41,410 --> 00:23:44,160
find ways to make it easier for you to

511
00:23:44,160 --> 00:23:46,750
profile and look at the code that you're

512
00:23:46,750 --> 00:23:49,110
running to understand what's going on to

513
00:23:49,110 --> 00:23:51,549
understand how things are working so

514
00:23:51,549 --> 00:23:53,919
that you can go okay well I'm running

515
00:23:53,919 --> 00:23:56,350
into problems here here this is what's

516
00:23:56,350 --> 00:23:59,650
going this is what's going on so there's

517
00:23:59,650 --> 00:24:02,530
a new window object called MS

518
00:24:02,530 --> 00:24:04,150
performance now it's called MS

519
00:24:04,150 --> 00:24:06,460
performance right now because the spec

520
00:24:06,460 --> 00:24:09,429
for it in the w3c is still under

521
00:24:09,429 --> 00:24:11,020
development we haven't locked it yet

522
00:24:11,020 --> 00:24:14,860
with the w3c chrome has gone and

523
00:24:14,860 --> 00:24:16,419
implemented it and I believe they've got

524
00:24:16,419 --> 00:24:19,000
chromium dot performance so you can get

525
00:24:19,000 --> 00:24:20,260
an idea that this is something that

526
00:24:20,260 --> 00:24:22,150
we're all building together within the

527
00:24:22,150 --> 00:24:24,520
w3c to actually build a set of

528
00:24:24,520 --> 00:24:27,850
performance api's to go and be able to

529
00:24:27,850 --> 00:24:29,860
measure those things I've just got some

530
00:24:29,860 --> 00:24:31,630
some real simple code there but you can

531
00:24:31,630 --> 00:24:35,710
say hey var nav start WMS performance

532
00:24:35,710 --> 00:24:38,140
timing that navigation start which will

533
00:24:38,140 --> 00:24:40,480
go and give you the number of sec Dix

534
00:24:40,480 --> 00:24:43,360
after a particular time and then you can

535
00:24:43,360 --> 00:24:45,669
go and convert that so you can actually

536
00:24:45,669 --> 00:24:49,330
see hey this is when my page starts

537
00:24:49,330 --> 00:24:51,220
rendering this is when it stops

538
00:24:51,220 --> 00:24:53,510
rendering you can understand how we're

539
00:24:53,510 --> 00:24:55,190
weskit made what are happening within

540
00:24:55,190 --> 00:25:04,490
your requests so in addition to the new

541
00:25:04,490 --> 00:25:06,080
JavaScript stuff some of the other

542
00:25:06,080 --> 00:25:07,370
things that are happening are the

543
00:25:07,370 --> 00:25:10,430
hardware acceleration and Ben and Deon

544
00:25:10,430 --> 00:25:12,530
sort of talked a little bit about this

545
00:25:12,530 --> 00:25:15,170
this morning but by using the power of

546
00:25:15,170 --> 00:25:17,810
your whole PC using the GPU that's in

547
00:25:17,810 --> 00:25:23,360
there to accelerate your your markup

548
00:25:23,360 --> 00:25:26,510
you're not just accelerating canvas

549
00:25:26,510 --> 00:25:29,420
you're accelerating your entire markup

550
00:25:29,420 --> 00:25:32,960
so whether that's HTML 4 and CSS 2 or

551
00:25:32,960 --> 00:25:36,800
whether that's canvas and and SVG html5

552
00:25:36,800 --> 00:25:40,370
video with GPU powered HTML you're

553
00:25:40,370 --> 00:25:42,560
actually accelerating the entire

554
00:25:42,560 --> 00:25:44,570
experience it's gonna mean that things

555
00:25:44,570 --> 00:25:46,790
get rendered on to the screen much more

556
00:25:46,790 --> 00:25:50,030
quickly and in a much better experience

557
00:25:50,030 --> 00:25:55,340
than ever before so at the same time

558
00:25:55,340 --> 00:25:58,460
that sort of leads into making sure that

559
00:25:58,460 --> 00:26:01,310
we do great ja a great job implementing

560
00:26:01,310 --> 00:26:06,050
the html5 and css3 stuff so that sort of

561
00:26:06,050 --> 00:26:09,100
leads me right to interoperability and

562
00:26:09,100 --> 00:26:11,330
interoperability that's defining the

563
00:26:11,330 --> 00:26:13,690
same markup is a really important thing

564
00:26:13,690 --> 00:26:16,970
right we want to make sure that the code

565
00:26:16,970 --> 00:26:19,460
you write works the same across all the

566
00:26:19,460 --> 00:26:21,590
browsers we want to make sure that the

567
00:26:21,590 --> 00:26:23,180
JavaScript is fast that it's

568
00:26:23,180 --> 00:26:26,000
interoperable and when you go and write

569
00:26:26,000 --> 00:26:27,620
code that you're not having to write

570
00:26:27,620 --> 00:26:29,240
things for different browsers and

571
00:26:29,240 --> 00:26:31,700
different experiences so with Internet

572
00:26:31,700 --> 00:26:33,350
Explorer 9 we're spending a lot of time

573
00:26:33,350 --> 00:26:35,420
we're really going through to understand

574
00:26:35,420 --> 00:26:37,850
what's going on and make sure that we

575
00:26:37,850 --> 00:26:39,800
have that documented and we've got a

576
00:26:39,800 --> 00:26:43,120
good set of tests right this is a

577
00:26:43,120 --> 00:26:46,550
rendering this was grabbed probably

578
00:26:46,550 --> 00:26:48,830
about a month ago so there may be a few

579
00:26:48,830 --> 00:26:51,260
minor changes on this but I last I

580
00:26:51,260 --> 00:26:53,120
checked there aren't you know this is

581
00:26:53,120 --> 00:26:55,790
using the border-radius css3 property I

582
00:26:55,790 --> 00:27:00,350
9s got rounded corners the borders look

583
00:27:00,350 --> 00:27:02,750
about right but as you try and look at

584
00:27:02,750 --> 00:27:04,040
all the other browsers what you're

585
00:27:04,040 --> 00:27:05,690
getting is you're not always getting the

586
00:27:05,690 --> 00:27:06,140
same

587
00:27:06,140 --> 00:27:09,470
thing so as we build this out and

588
00:27:09,470 --> 00:27:12,050
understand what's going on we want to

589
00:27:12,050 --> 00:27:15,350
make sure that we're building out html5

590
00:27:15,350 --> 00:27:17,540
and css3 and the way that you're using

591
00:27:17,540 --> 00:27:21,680
it and so to do that we actually went

592
00:27:21,680 --> 00:27:24,440
through and and we looked at the top

593
00:27:24,440 --> 00:27:27,280
seven thousand websites and we said hey

594
00:27:27,280 --> 00:27:30,350
what are the API is the JavaScript API

595
00:27:30,350 --> 00:27:32,750
so you guys are using all right and so

596
00:27:32,750 --> 00:27:35,480
this is just some of the data and you

597
00:27:35,480 --> 00:27:38,720
can see how quickly that graph drops off

598
00:27:38,720 --> 00:27:40,790
for the number of for wit API is are

599
00:27:40,790 --> 00:27:45,380
using index of dot index of used as sort

600
00:27:45,380 --> 00:27:47,990
of as the number one API across all of

601
00:27:47,990 --> 00:27:51,860
those top 7,000 sites used a 94% of of

602
00:27:51,860 --> 00:27:55,220
sites the first one that we didn't

603
00:27:55,220 --> 00:28:00,410
support we had to get to number 27 add

604
00:28:00,410 --> 00:28:02,810
eventlistener we've gone and added that

605
00:28:02,810 --> 00:28:04,970
so we want to make sure that as we build

606
00:28:04,970 --> 00:28:06,830
out our standards we build them out in a

607
00:28:06,830 --> 00:28:09,320
way that's interoperable that works so

608
00:28:09,320 --> 00:28:12,560
that we can test them and that they're

609
00:28:12,560 --> 00:28:14,120
things that you're using to build the

610
00:28:14,120 --> 00:28:16,070
sites you need today and the stuff that

611
00:28:16,070 --> 00:28:19,640
you'll need tomorrow and we're doing

612
00:28:19,640 --> 00:28:22,430
this with working through the w3c with

613
00:28:22,430 --> 00:28:24,770
ACMA who's the standards body that

614
00:28:24,770 --> 00:28:27,950
creates the javascript spec the

615
00:28:27,950 --> 00:28:30,230
javascript spec for Ekman script 5 was

616
00:28:30,230 --> 00:28:34,760
just ratified this past December and was

617
00:28:34,760 --> 00:28:37,490
a really great opportunity of all of the

618
00:28:37,490 --> 00:28:39,290
browser vendors working together to

619
00:28:39,290 --> 00:28:42,230
create a spec and a standard that works

620
00:28:42,230 --> 00:28:44,960
for all of us and part of that is

621
00:28:44,960 --> 00:28:49,340
creating a test suite that we all agree

622
00:28:49,340 --> 00:28:53,420
to and sets the standard for the web and

623
00:28:53,420 --> 00:28:55,190
sets the standard so that when you write

624
00:28:55,190 --> 00:29:02,019
your code things just work

625
00:29:02,029 --> 00:29:05,100
in the iaea timeframe one of the things

626
00:29:05,100 --> 00:29:09,450
that we did for CSS 2.1 was we actually

627
00:29:09,450 --> 00:29:11,909
went and took our CSS 2.1 test suite and

628
00:29:11,909 --> 00:29:14,340
we donated it back to the w3c because we

629
00:29:14,340 --> 00:29:16,620
kind of looked and realized that the CSS

630
00:29:16,620 --> 00:29:19,559
2.1 test suite that the w3c had had

631
00:29:19,559 --> 00:29:22,380
about a hundred tests all right now you

632
00:29:22,380 --> 00:29:25,169
guys know what CSS 2.1 looks like it's

633
00:29:25,169 --> 00:29:28,620
not exactly a small spec so we're doing

634
00:29:28,620 --> 00:29:31,950
that same thing with HTML 5 with css3

635
00:29:31,950 --> 00:29:34,490
and in fact we're doing it with

636
00:29:34,490 --> 00:29:38,720
JavaScript so we have just donated over

637
00:29:38,720 --> 00:29:42,659
2,200 tests back to a test conformance

638
00:29:42,659 --> 00:29:45,659
suite with the ECMO task or with the

639
00:29:45,659 --> 00:29:47,789
ECMO standards body to go and create a

640
00:29:47,789 --> 00:29:50,340
test suite that actually tests a chart

641
00:29:50,340 --> 00:29:51,270
sorry

642
00:29:51,270 --> 00:29:54,690
tests the JavaScript spec in a way that

643
00:29:54,690 --> 00:29:57,090
is interoperable so that we can go and

644
00:29:57,090 --> 00:29:59,490
all agree that hey when you call this

645
00:29:59,490 --> 00:30:02,760
API with this parameter you get this if

646
00:30:02,760 --> 00:30:05,070
you call it with a with an invalid

647
00:30:05,070 --> 00:30:07,440
parameter you get the same behavior

648
00:30:07,440 --> 00:30:10,730
across all of the different browsers

649
00:30:10,730 --> 00:30:13,919
because if you don't do that you end up

650
00:30:13,919 --> 00:30:16,710
with the experience that we kind of have

651
00:30:16,710 --> 00:30:20,730
today where things don't exactly work so

652
00:30:20,730 --> 00:30:22,230
this is something to me that's really

653
00:30:22,230 --> 00:30:24,779
great and is going to help make our

654
00:30:24,779 --> 00:30:28,770
lives as developers much easier and work

655
00:30:28,770 --> 00:30:31,260
much better because we're going to be

656
00:30:31,260 --> 00:30:33,240
able to write the same markup and have

657
00:30:33,240 --> 00:30:40,049
it work across all our browsers one of

658
00:30:40,049 --> 00:30:41,250
the other things that we've gone and

659
00:30:41,250 --> 00:30:44,309
done some new developer tools the f12

660
00:30:44,309 --> 00:30:46,110
developer tools they're built into the

661
00:30:46,110 --> 00:30:49,169
browser they're there by default just

662
00:30:49,169 --> 00:30:52,710
hit f12 brings them up those f12

663
00:30:52,710 --> 00:30:55,500
developer tools we now have a network

664
00:30:55,500 --> 00:30:56,940
inspection tool if you've ever tried

665
00:30:56,940 --> 00:30:59,880
using Fidler before well that's built

666
00:30:59,880 --> 00:31:01,919
into the browser doesn't sit there as a

667
00:31:01,919 --> 00:31:05,250
proxy we've got I we've taken the

668
00:31:05,250 --> 00:31:07,649
console tab and made it into its own tab

669
00:31:07,649 --> 00:31:10,770
so you've got access to that can change

670
00:31:10,770 --> 00:31:12,899
the UA string just by going and doing uh

671
00:31:12,899 --> 00:31:14,690
basically tool

672
00:31:14,690 --> 00:31:17,120
change you a string tried to make this

673
00:31:17,120 --> 00:31:21,470
stuff easier for you for me to go and

674
00:31:21,470 --> 00:31:27,500
write the site's that we want so I kind

675
00:31:27,500 --> 00:31:28,970
of moved through things quickly because

676
00:31:28,970 --> 00:31:30,050
I wanted to leave some time for

677
00:31:30,050 --> 00:31:34,580
questions but you can see where I was

678
00:31:34,580 --> 00:31:36,620
where we sort of started with Internet

679
00:31:36,620 --> 00:31:39,470
Explorer 9 JavaScript engine new

680
00:31:39,470 --> 00:31:41,090
hardware acceleration is gonna make

681
00:31:41,090 --> 00:31:43,310
things run a lot faster all right

682
00:31:43,310 --> 00:31:46,520
getting the browser to be cleaner and

683
00:31:46,520 --> 00:31:49,310
more streamlined so that folks can get

684
00:31:49,310 --> 00:31:51,260
to your sites easier that your site's

685
00:31:51,260 --> 00:31:54,140
stand out instead of the browser being

686
00:31:54,140 --> 00:31:56,600
the center of everything and that things

687
00:31:56,600 --> 00:31:58,880
that are interoperable the mark-up that

688
00:31:58,880 --> 00:32:01,490
you write just works whether you're an

689
00:32:01,490 --> 00:32:05,750
i-9 or in any other browser so the beta

690
00:32:05,750 --> 00:32:07,850
is available today you can download it

691
00:32:07,850 --> 00:32:10,280
at IE test drive or a beauty of the web

692
00:32:10,280 --> 00:32:13,430
com you can get the platform preview at

693
00:32:13,430 --> 00:32:15,980
IE test drive and that installs side by

694
00:32:15,980 --> 00:32:17,420
side so you're not gonna go and nuke

695
00:32:17,420 --> 00:32:19,670
your IE installation it does need

696
00:32:19,670 --> 00:32:22,220
Windows 7 or Vista to install because of

697
00:32:22,220 --> 00:32:25,400
the hardware acceleration stuff but it's

698
00:32:25,400 --> 00:32:28,340
super easy to install I'm and I noticed

699
00:32:28,340 --> 00:32:31,280
that there are a lot of silver colored

700
00:32:31,280 --> 00:32:33,980
laptops instead of my black colored

701
00:32:33,980 --> 00:32:39,680
laptop up today just install a VM you

702
00:32:39,680 --> 00:32:42,170
can get the same experience you don't

703
00:32:42,170 --> 00:32:44,360
get the hardware acceleration but you

704
00:32:44,360 --> 00:32:47,840
still get the ie9 experience and you can

705
00:32:47,840 --> 00:32:49,670
test your website play with your website

706
00:32:49,670 --> 00:32:52,400
see how the browser works see some of

707
00:32:52,400 --> 00:32:54,440
the new things like hardware accelerated

708
00:32:54,440 --> 00:32:59,810
canvas and video so with that I'll open

709
00:32:59,810 --> 00:33:03,500
it up to questions and oh yes so if you

710
00:33:03,500 --> 00:33:06,320
didn't get one of these lanyards I think

711
00:33:06,320 --> 00:33:07,610
they're kind of cool I was only showing

712
00:33:07,610 --> 00:33:09,710
these today because you pull this off

713
00:33:09,710 --> 00:33:11,960
and there's a nice two gig USB stick

714
00:33:11,960 --> 00:33:14,360
here so quick easy way to be able to

715
00:33:14,360 --> 00:33:17,000
share stuff and I'm not using it as

716
00:33:17,000 --> 00:33:19,040
bribery to go download the bits but the

717
00:33:19,040 --> 00:33:21,230
bits are on here too so if you want to

718
00:33:21,230 --> 00:33:23,090
go try the bits you don't even have to

719
00:33:23,090 --> 00:33:27,080
download it so with that all Papa

720
00:33:27,080 --> 00:33:39,720
any questions you guys have yes Oh Doug

721
00:33:39,730 --> 00:33:42,350
so we haven't at this point figured out

722
00:33:42,350 --> 00:33:44,389
whether we're going to get we haven't

723
00:33:44,389 --> 00:33:47,720
said much about strict mode so we're

724
00:33:47,720 --> 00:33:49,039
gonna you're just gonna have to sort of

725
00:33:49,039 --> 00:33:50,450
keep an eye out there to see what

726
00:33:50,450 --> 00:33:52,309
happens I'm not sure what what the

727
00:33:52,309 --> 00:34:00,570
decision has been made yet

728
00:34:00,580 --> 00:34:09,589
okay so I'll make sure that I update

729
00:34:09,589 --> 00:34:11,869
those slides to make sure they they

730
00:34:11,869 --> 00:34:15,470
include that fair fair point and the

731
00:34:15,470 --> 00:34:17,480
goal is to get there so that we have

732
00:34:17,480 --> 00:34:20,349
worked with the same markup work well

733
00:34:20,349 --> 00:34:43,870
standards compliant so yeah yep

734
00:34:43,880 --> 00:34:47,700
so I'll repeat the question and please

735
00:34:47,700 --> 00:34:49,080
just make sure that I got it correct

736
00:34:49,080 --> 00:34:51,540
just so that everybody can hear but what

737
00:34:51,540 --> 00:34:53,220
are the options to contribute back to

738
00:34:53,220 --> 00:34:55,140
the test suite because if it's just one

739
00:34:55,140 --> 00:34:57,540
vendor doing a test suite you end up

740
00:34:57,540 --> 00:35:00,120
with you know a slightly biased test

741
00:35:00,120 --> 00:35:02,760
suite and there anybody can participate

742
00:35:02,760 --> 00:35:05,430
in the test suite creation for ACMA

743
00:35:05,430 --> 00:35:08,220
script right now the stuff is sitting on

744
00:35:08,220 --> 00:35:10,650
our site because we're moving those over

745
00:35:10,650 --> 00:35:13,530
and we're giving them to for the html5

746
00:35:13,530 --> 00:35:16,110
and CSS stuff those have to go through

747
00:35:16,110 --> 00:35:18,810
the w3c they have a process in place I

748
00:35:18,810 --> 00:35:21,630
believe that there is this a similar

749
00:35:21,630 --> 00:35:24,570
process in place for the Ekman script

750
00:35:24,570 --> 00:35:26,580
Task Force in order for those guys to

751
00:35:26,580 --> 00:35:31,860
get the tests in there all right there's

752
00:35:31,860 --> 00:35:37,750
one at the way of the back

753
00:35:37,760 --> 00:35:40,440
so the question was what's the release

754
00:35:40,440 --> 00:35:42,330
date we haven't announced a release date

755
00:35:42,330 --> 00:35:43,980
we want to make sure that we'd get the

756
00:35:43,980 --> 00:35:47,340
browser built really well so that the

757
00:35:47,340 --> 00:35:50,040
same markup just works so that we're not

758
00:35:50,040 --> 00:35:52,230
going and shipping you know a browser

759
00:35:52,230 --> 00:35:54,210
with a broken implementation of any

760
00:35:54,210 --> 00:35:56,190
particular thing we want to make sure we

761
00:35:56,190 --> 00:35:56,640
get it right

762
00:35:56,640 --> 00:36:01,920
so roughly don't have a rough date for

763
00:36:01,920 --> 00:36:05,730
you I wish I did but I don't have one

764
00:36:05,730 --> 00:36:07,980
for you and then we're going to go

765
00:36:07,980 --> 00:36:10,560
through and we'll look at how we we sort

766
00:36:10,560 --> 00:36:13,830
of encourage users to upgrade we will be

767
00:36:13,830 --> 00:36:16,170
working as hard as we can to get users

768
00:36:16,170 --> 00:36:18,090
upgraded as quickly as we can

769
00:36:18,090 --> 00:36:20,040
so take one last question up here and

770
00:36:20,040 --> 00:36:32,400
then I'll call it good if that works

771
00:36:32,410 --> 00:36:35,119
so the question was what's my personal

772
00:36:35,119 --> 00:36:37,489
take on what is the browser is it just

773
00:36:37,489 --> 00:36:40,489
sort of another GUI IO with a network

774
00:36:40,489 --> 00:36:43,210
stack built-in that set a fair

775
00:36:43,210 --> 00:36:45,589
representation you know I think the

776
00:36:45,589 --> 00:36:48,229
browser is a really awesome platform for

777
00:36:48,229 --> 00:36:50,420
us as developers to build applications

778
00:36:50,420 --> 00:36:54,170
that enable our customers and our

779
00:36:54,170 --> 00:36:56,420
friends and our family to do really cool

780
00:36:56,420 --> 00:36:58,789
stuff and for us to show off the stuff

781
00:36:58,789 --> 00:37:04,069
that we like to do so as it is but it's

782
00:37:04,069 --> 00:37:07,670
not such a platform and that to me the

783
00:37:07,670 --> 00:37:09,710
web is about the platform it allows you

784
00:37:09,710 --> 00:37:12,710
to go for us to go and build stuff that

785
00:37:12,710 --> 00:37:13,940
we haven't been able to before

786
00:37:13,940 --> 00:37:15,349
especially now with the Internet

787
00:37:15,349 --> 00:37:19,099
Explorer 9 with with and with html5 and

