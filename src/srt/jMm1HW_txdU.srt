1
00:00:17,230 --> 00:00:20,020

everybody my name is Brian Michelle and

2
00:00:20,020 --> 00:00:21,700
I'm gonna talk today about funk unit

3
00:00:21,700 --> 00:00:23,320
which is can everybody hear me in the

4
00:00:23,320 --> 00:00:27,250
back cool so I'm gonna be talking today

5
00:00:27,250 --> 00:00:29,230
about funk unit which is a JavaScript

6
00:00:29,230 --> 00:00:31,750
functional testing tool and also there's

7
00:00:31,750 --> 00:00:33,700
an IDE that we've released that's in

8
00:00:33,700 --> 00:00:35,950
it's very infant alpha stages and I'll

9
00:00:35,950 --> 00:00:39,489
show that off as well so funk unit is

10
00:00:39,489 --> 00:00:41,020
actually a piece of JavaScript MVC

11
00:00:41,020 --> 00:00:44,140
that's stand on it stands on its own and

12
00:00:44,140 --> 00:00:46,720
testing for who in the audience actually

13
00:00:46,720 --> 00:00:48,070
writes tests for their JavaScript

14
00:00:48,070 --> 00:00:50,890
applications quick show hands that's

15
00:00:50,890 --> 00:00:52,660
that's good that's more than half that's

16
00:00:52,660 --> 00:00:54,550
more than I expected but you know this

17
00:00:54,550 --> 00:00:56,140
is probably the Deathstar is probably a

18
00:00:56,140 --> 00:00:58,600
good example of why testing is important

19
00:00:58,600 --> 00:00:59,890
because we don't do it it can be pretty

20
00:00:59,890 --> 00:01:03,790
costly can bring your systems down so

21
00:01:03,790 --> 00:01:06,040
we're gonna write some tests at the end

22
00:01:06,040 --> 00:01:07,119
of this I'm going to run through these

23
00:01:07,119 --> 00:01:08,229
slides really quick and then we're going

24
00:01:08,229 --> 00:01:10,869
to test the this contacts management

25
00:01:10,869 --> 00:01:12,340
application and write some JavaScript

26
00:01:12,340 --> 00:01:14,910
tests for it

27
00:01:14,910 --> 00:01:17,740
so the reasons why you should test it's

28
00:01:17,740 --> 00:01:19,540
pretty obvious I'm sure is that in in

29
00:01:19,540 --> 00:01:21,000
crude and improves your code quality

30
00:01:21,000 --> 00:01:23,319
developer confidence people will

31
00:01:23,319 --> 00:01:24,819
refactor their code without worrying

32
00:01:24,819 --> 00:01:26,399
about breaking other people's code and

33
00:01:26,399 --> 00:01:28,899
efficiency because if you don't know

34
00:01:28,899 --> 00:01:30,399
that there's a problem two weeks down

35
00:01:30,399 --> 00:01:32,470
the line you have to rehearse engineer

36
00:01:32,470 --> 00:01:33,789
all the changes that have happened since

37
00:01:33,789 --> 00:01:35,979
that problem was introduced so this so

38
00:01:35,979 --> 00:01:38,020
testing lets you you know realize that

39
00:01:38,020 --> 00:01:40,390
there's an issue before it's too late so

40
00:01:40,390 --> 00:01:41,740
the testing landscape right now there's

41
00:01:41,740 --> 00:01:43,000
there's a lot of functional testing

42
00:01:43,000 --> 00:01:44,709
tools out there not too many of them are

43
00:01:44,709 --> 00:01:48,039
for JavaScript and that's where funk

44
00:01:48,039 --> 00:01:52,179
unit kind of comes in so there's there's

45
00:01:52,179 --> 00:01:53,890
a lot of functional testing tools for

46
00:01:53,890 --> 00:01:55,780
written for other languages and unit

47
00:01:55,780 --> 00:01:57,700
testing tools written for JavaScript but

48
00:01:57,700 --> 00:01:58,810
funky and it kind of hits that sweet

49
00:01:58,810 --> 00:02:00,340
spot between functional testing and

50
00:02:00,340 --> 00:02:03,640
JavaScript based tools so the reasons

51
00:02:03,640 --> 00:02:06,130
that people don't test traditionally you

52
00:02:06,130 --> 00:02:08,110
guys most of you do test so this will be

53
00:02:08,110 --> 00:02:10,660
review or not necessary really so I'll

54
00:02:10,660 --> 00:02:13,120
go quick there's a lot of testing tools

55
00:02:13,120 --> 00:02:15,970
have high cost and setup which is a

56
00:02:15,970 --> 00:02:17,910
barrier to entry for new developers

57
00:02:17,910 --> 00:02:20,020
foreign API is if you're writing your

58
00:02:20,020 --> 00:02:22,030
application in JavaScript you don't want

59
00:02:22,030 --> 00:02:24,310
to write your tests in Python and Java

60
00:02:24,310 --> 00:02:26,170
or.net you want to write your your tests

61
00:02:26,170 --> 00:02:28,810
and JavaScript as well as an example

62
00:02:28,810 --> 00:02:30,730
here's what a qtp test looks like and

63
00:02:30,730 --> 00:02:31,180
it's kind of

64
00:02:31,180 --> 00:02:32,769
obtuse if you're you know jQuery

65
00:02:32,769 --> 00:02:34,629
developer JavaScript developer it's kind

66
00:02:34,629 --> 00:02:36,430
of hard to see what's going on there as

67
00:02:36,430 --> 00:02:37,870
opposed to something written in

68
00:02:37,870 --> 00:02:39,849
JavaScript based on Q unit that it's

69
00:02:39,849 --> 00:02:41,590
pretty pretty obvious what's going on

70
00:02:41,590 --> 00:02:44,980
for a Java developer it's difficult to

71
00:02:44,980 --> 00:02:46,659
debug across platforms so if you're

72
00:02:46,659 --> 00:02:48,909
writing a selenium test in PHP that runs

73
00:02:48,909 --> 00:02:50,680
across the selenium bridge into Firefox

74
00:02:50,680 --> 00:02:52,239
there's a lot of places where you have

75
00:02:52,239 --> 00:02:53,590
to check to see where something is going

76
00:02:53,590 --> 00:02:56,439
wrong what you'd really want to do is

77
00:02:56,439 --> 00:02:59,200
just open up a Firebug console and set

78
00:02:59,200 --> 00:03:00,730
breakpoints and debug your tests that

79
00:03:00,730 --> 00:03:03,579
way because we're all used to that so

80
00:03:03,579 --> 00:03:05,290
another issue is inaccurate event

81
00:03:05,290 --> 00:03:07,060
simulation if you the traditional

82
00:03:07,060 --> 00:03:08,489
example here is if your testing suite

83
00:03:08,489 --> 00:03:10,480
doesn't have very accurate event

84
00:03:10,480 --> 00:03:12,970
simulation in this example you know if

85
00:03:12,970 --> 00:03:14,439
you're writing a test that clicks this

86
00:03:14,439 --> 00:03:17,769
this input up here your testing suite

87
00:03:17,769 --> 00:03:19,870
has to not only publish a click event

88
00:03:19,870 --> 00:03:21,730
but the browser also publishes a focus

89
00:03:21,730 --> 00:03:25,030
event so you know that could break your

90
00:03:25,030 --> 00:03:26,919
your test or your test could not work

91
00:03:26,919 --> 00:03:29,500
because the simulation wasn't accurate

92
00:03:29,500 --> 00:03:32,319
enough and that's not what you want and

93
00:03:32,319 --> 00:03:33,849
then kind of related to the first point

94
00:03:33,849 --> 00:03:35,799
where if you if you can't set up your

95
00:03:35,799 --> 00:03:37,870
testing tools if your developers aren't

96
00:03:37,870 --> 00:03:39,099
setting up testing tools because they're

97
00:03:39,099 --> 00:03:40,959
costly or difficult to set up

98
00:03:40,959 --> 00:03:43,959
then QA can't really communicate with

99
00:03:43,959 --> 00:03:46,150
testers very easily so I'm sure any of

100
00:03:46,150 --> 00:03:47,409
you who work in a big company I've seen

101
00:03:47,409 --> 00:03:49,810
something like this before this is you

102
00:03:49,810 --> 00:03:51,489
know a bug report that's been filed and

103
00:03:51,489 --> 00:03:53,590
in which you'd rather see is just a URL

104
00:03:53,590 --> 00:03:55,150
to a breaking test case or as a

105
00:03:55,150 --> 00:03:56,769
developer you don't have to spend an

106
00:03:56,769 --> 00:03:58,329
hour just getting up to speed with what

107
00:03:58,329 --> 00:04:01,689
the actual problem was so func unit

108
00:04:01,689 --> 00:04:03,909
features in browser or selenium based

109
00:04:03,909 --> 00:04:05,889
testing you write the test once and it

110
00:04:05,889 --> 00:04:07,750
runs in both places and it's a jquery

111
00:04:07,750 --> 00:04:09,729
like syntax there's no setup involved it

112
00:04:09,729 --> 00:04:12,879
just use this java in the browser it

113
00:04:12,879 --> 00:04:14,889
provides accurate event simulation in

114
00:04:14,889 --> 00:04:17,620
this new shiny ide so it's built on top

115
00:04:17,620 --> 00:04:20,199
of selenium q unit jquery this since

116
00:04:20,199 --> 00:04:22,630
synthetic library that simulates events

117
00:04:22,630 --> 00:04:25,509
accurately and finally were to the demo

118
00:04:25,509 --> 00:04:29,490
so let's jump out and look at some code

119
00:04:29,490 --> 00:04:33,639
we just pushed out a new version of the

120
00:04:33,639 --> 00:04:36,009
func unit website so if you go there

121
00:04:36,009 --> 00:04:43,260
there's a download

122
00:04:43,270 --> 00:04:50,640
there's no mouse

123
00:04:50,650 --> 00:04:52,300
so there's there's a download there and

124
00:04:52,300 --> 00:04:54,280
you know I'm gonna set up mirroring real

125
00:04:54,280 --> 00:04:55,449
quick so I can actually see what I'm

126
00:04:55,449 --> 00:05:11,869
doing

127
00:05:11,879 --> 00:05:17,020
okay

128
00:05:17,030 --> 00:05:19,520
so if you go ahead and download the

129
00:05:19,520 --> 00:05:20,990
framework I've already done that so we

130
00:05:20,990 --> 00:05:23,090
can save some time it comes with a

131
00:05:23,090 --> 00:05:26,210
couple folders I've got an app running

132
00:05:26,210 --> 00:05:27,830
locally here that we're gonna write a

133
00:05:27,830 --> 00:05:29,360
test for it's just a simple contact

134
00:05:29,360 --> 00:05:31,550
management app and all you know there's

135
00:05:31,550 --> 00:05:32,690
some functionality or if you click

136
00:05:32,690 --> 00:05:34,390
really see that well but if you click a

137
00:05:34,390 --> 00:05:36,620
category at the top it filters the

138
00:05:36,620 --> 00:05:38,690
results and you can add new categories

139
00:05:38,690 --> 00:05:42,200
through this little form here so we're

140
00:05:42,200 --> 00:05:43,640
gonna just write a quick test at that

141
00:05:43,640 --> 00:05:47,180
that form creation actually works so the

142
00:05:47,180 --> 00:05:48,230
first thing you do when you download

143
00:05:48,230 --> 00:05:49,820
funk unit is you can copy all these

144
00:05:49,820 --> 00:05:51,710
files into a funk unit directory in your

145
00:05:51,710 --> 00:05:54,530
application so I've got this funk unit

146
00:05:54,530 --> 00:05:55,610
folder right here and I copied

147
00:05:55,610 --> 00:05:57,140
everything in there comes with this

148
00:05:57,140 --> 00:05:59,240
little demo app so if we open that up

149
00:05:59,240 --> 00:06:01,550
and you're there it comes with in the

150
00:06:01,550 --> 00:06:03,200
demo app there's your application page

151
00:06:03,200 --> 00:06:05,510
right here and then a funk unit page so

152
00:06:05,510 --> 00:06:06,800
if you open the funk unit page in your

153
00:06:06,800 --> 00:06:11,780
browser so it's gonna do some typing and

154
00:06:11,780 --> 00:06:13,640
some dragging and dropping and then what

155
00:06:13,640 --> 00:06:15,440
actually happened was this page opened a

156
00:06:15,440 --> 00:06:16,910
you know separate window it's your

157
00:06:16,910 --> 00:06:18,620
application and then ran the test so

158
00:06:18,620 --> 00:06:20,510
this is just cute it's just a it

159
00:06:20,510 --> 00:06:22,430
is an API on top of cue unit so if you

160
00:06:22,430 --> 00:06:24,169
seem qunit test before it works in a

161
00:06:24,169 --> 00:06:27,710
similar way so we're gonna go ahead and

162
00:06:27,710 --> 00:06:31,610
write a test for the for that

163
00:06:31,610 --> 00:06:36,620
application that context application so

164
00:06:36,620 --> 00:06:38,540
all we want to do in this application

165
00:06:38,540 --> 00:06:40,940
it's for this test actually is click the

166
00:06:40,940 --> 00:06:50,510
lips where'd that go

167
00:06:50,520 --> 00:06:52,710
so we're gonna we're gonna write some

168
00:06:52,710 --> 00:06:54,060
code that's going to click this cut this

169
00:06:54,060 --> 00:06:55,919
create button here and then it's gonna

170
00:06:55,919 --> 00:06:58,319
click inside of the the form that pops

171
00:06:58,319 --> 00:07:00,449
up it's gonna hit backspace a few times

172
00:07:00,449 --> 00:07:02,460
to clear out the what's what's showing

173
00:07:02,460 --> 00:07:03,840
and then it's going to type something

174
00:07:03,840 --> 00:07:07,470
like animal and then hit enter and then

175
00:07:07,470 --> 00:07:09,800
verify that something actually showed up

176
00:07:09,800 --> 00:07:13,560
so I've got a cheat sheet here but

177
00:07:13,560 --> 00:07:14,550
basically well we'll write the

178
00:07:14,550 --> 00:07:16,770
pseudocode first so all it's going to do

179
00:07:16,770 --> 00:07:18,539
is we're gonna first open the right page

180
00:07:18,539 --> 00:07:21,449
so s not open is the command that opens

181
00:07:21,449 --> 00:07:23,250
the page we're two directories office so

182
00:07:23,250 --> 00:07:26,690
it's going to go to contacts that HTML

183
00:07:26,690 --> 00:07:30,030
and then we're going to grab that

184
00:07:30,030 --> 00:07:35,340
contact that plus button there and we're

185
00:07:35,340 --> 00:07:38,759
gonna click it we're gonna wait for the

186
00:07:38,759 --> 00:07:40,919
form to appear so there's a concept of

187
00:07:40,919 --> 00:07:43,949
Waits and basically that means just keep

188
00:07:43,949 --> 00:07:45,240
waiting keep checking to see if a

189
00:07:45,240 --> 00:07:46,889
condition is true and don't continue the

190
00:07:46,889 --> 00:07:48,780
test until that is the case so we're

191
00:07:48,780 --> 00:07:51,500
going to wait for this input to appear

192
00:07:51,500 --> 00:07:53,490
so we're gonna we're gonna say that

193
00:07:53,490 --> 00:07:56,810
exists actually will say that visible

194
00:07:56,810 --> 00:07:58,620
it's going to wait for that to be

195
00:07:58,620 --> 00:08:01,400
visible and then it's going to click it

196
00:08:01,400 --> 00:08:05,460
then we're gonna type backspace four

197
00:08:05,460 --> 00:08:07,800
times then we're gonna type animal and

198
00:08:07,800 --> 00:08:10,020
then we're gonna hit return character

199
00:08:10,020 --> 00:08:12,300
it's the Enter key oh wow

200
00:08:12,300 --> 00:08:14,580
I need to hurry up here okay so I'm

201
00:08:14,580 --> 00:08:16,860
gonna skip ahead and show you so if you

202
00:08:16,860 --> 00:08:18,449
if you're interested more and checking

203
00:08:18,449 --> 00:08:25,909
out the if you want to check out the API

204
00:08:25,909 --> 00:08:28,860
there's a link got too many tabs open

205
00:08:28,860 --> 00:08:30,840
here to the documentation right here and

206
00:08:30,840 --> 00:08:32,969
that should show you the API for a funk

207
00:08:32,969 --> 00:08:35,310
unit I'm gonna just go ahead and copy

208
00:08:35,310 --> 00:08:44,130
the test into there so we're we're using

209
00:08:44,130 --> 00:08:46,680
jQuery selectors to to grab elements

210
00:08:46,680 --> 00:08:48,060
here so we're gonna grab the create

211
00:08:48,060 --> 00:08:50,490
button click it grab the input make sure

212
00:08:50,490 --> 00:08:52,230
it's visible click it type and then

213
00:08:52,230 --> 00:08:53,550
we're gonna verify that there's eight

214
00:08:53,550 --> 00:08:55,980
items instead of seven and in running

215
00:08:55,980 --> 00:08:58,380
the assertion so if I run this this test

216
00:08:58,380 --> 00:09:01,390
again

217
00:09:01,400 --> 00:09:03,290
it's gonna open up the page you see it's

218
00:09:03,290 --> 00:09:07,760
typing really quickly and then they'd

219
00:09:07,760 --> 00:09:09,680
verify that that actually worked so we

220
00:09:09,680 --> 00:09:11,660
can run the same tests from selenium

221
00:09:11,660 --> 00:09:14,480
using a command-line so we type func

222
00:09:14,480 --> 00:09:17,000
unit MGS and then the path to the page

223
00:09:17,000 --> 00:09:18,830
I'm just going to open up a selenium

224
00:09:18,830 --> 00:09:27,030
server and that's gonna open up Firefox

225
00:09:27,040 --> 00:09:29,390
so this can be automated for your QA

226
00:09:29,390 --> 00:09:32,840
team and it was quick but it did the

227
00:09:32,840 --> 00:09:36,140
same test and then okay I wanted to show

228
00:09:36,140 --> 00:09:40,400
the very alpha funky IDE so there's an

229
00:09:40,400 --> 00:09:42,410
IDE that we just were working on still

230
00:09:42,410 --> 00:09:44,750
but it's it can be useful because really

231
00:09:44,750 --> 00:09:46,160
the hardest part of writing these tests

232
00:09:46,160 --> 00:09:47,720
sometimes is getting the selectors right

233
00:09:47,720 --> 00:09:50,930
so this if you I should show you where

234
00:09:50,930 --> 00:09:52,790
this comes from so if you go to the

235
00:09:52,790 --> 00:09:55,100
funky unit page there's a funky it IDE

236
00:09:55,100 --> 00:09:58,310
that you can click on and that's there's

237
00:09:58,310 --> 00:09:59,870
a bookmarklet in here that you drag this

238
00:09:59,870 --> 00:10:02,420
to your bookmark bar and open up any

239
00:10:02,420 --> 00:10:04,040
application actually since there's a

240
00:10:04,040 --> 00:10:06,070
bookmarklet you can do this from any

241
00:10:06,070 --> 00:10:09,320
non-local application as well you click

242
00:10:09,320 --> 00:10:11,360
funk it and then it opens up a little

243
00:10:11,360 --> 00:10:13,340
IDE on the bottom here where you can

244
00:10:13,340 --> 00:10:15,230
record records your your actions in the

245
00:10:15,230 --> 00:10:18,940
page so I'm gonna go ahead and click

246
00:10:18,940 --> 00:10:21,380
click that plus button I'm going to

247
00:10:21,380 --> 00:10:24,550
click the input hit backspace 4 times

248
00:10:24,550 --> 00:10:30,170
type animal hit enter very delicately

249
00:10:30,170 --> 00:10:33,620
hopefully this is uh and there's there's

250
00:10:33,620 --> 00:10:35,000
weight conditions that you can use as

251
00:10:35,000 --> 00:10:37,810
well so we're going to wait for that

252
00:10:37,810 --> 00:10:43,580
last thing to be visible so and then you

253
00:10:43,580 --> 00:10:44,870
can click the Run button it should

254
00:10:44,870 --> 00:10:52,680
replay your test in the browser so

255
00:10:52,680 --> 00:10:55,510
that's that's it and just to show

256
00:10:55,510 --> 00:10:58,899
off a kind of a cooler demo Grooveshark

257
00:10:58,899 --> 00:11:00,810
which is a JavaScript MVC application

258
00:11:00,810 --> 00:11:04,560
quick plug there you can test

259
00:11:04,560 --> 00:11:06,990
Grooveshark by clicking the funky

260
00:11:06,990 --> 00:11:09,370
bookmarklet and it's gonna it's gonna

261
00:11:09,370 --> 00:11:12,190
open up Grooveshark with funky it on the

262
00:11:12,190 --> 00:11:13,680
on the bottom of the page there

263
00:11:13,680 --> 00:11:15,610
depending on how fast the Internet is

264
00:11:15,610 --> 00:11:18,730
I'm not sure this will be there we go

265
00:11:18,730 --> 00:11:21,850
okay so if we click in the search for

266
00:11:21,850 --> 00:11:26,350
music here type in Taylor Swift she's my

267
00:11:26,350 --> 00:11:30,220
favorite and then we can do a wait for

268
00:11:30,220 --> 00:11:32,769
the text Taylor Swift to be the first

269
00:11:32,769 --> 00:11:37,329
the first mash-up here so if I click the

270
00:11:37,329 --> 00:11:39,220
play button again it should should

271
00:11:39,220 --> 00:11:41,649
reload that frame wait for the page to

272
00:11:41,649 --> 00:11:49,000
be open and type it and then verify so

273
00:11:49,000 --> 00:11:50,680
you can you can go ahead and copy this

274
00:11:50,680 --> 00:11:52,899
into your your test file we actually

275
00:11:52,899 --> 00:11:54,370
have a Save button that's just not not

276
00:11:54,370 --> 00:11:56,230
deployed right now but that's a feature

277
00:11:56,230 --> 00:11:59,709
that that's also out there so just want

278
00:11:59,709 --> 00:12:01,720
to show off the IDE and you know

279
00:12:01,720 --> 00:12:03,220
hopefully this will this will make some

280
00:12:03,220 --> 00:12:04,810
progress in the future if you're

281
00:12:04,810 --> 00:12:06,519
interested in in funk unit as an open

282
00:12:06,519 --> 00:12:10,360
source project it's available at Jupiter

283
00:12:10,360 --> 00:12:19,740
Jas funk unit and some more links here

284
00:12:19,740 --> 00:12:22,810
so Jupiter J s is the company I work for

285
00:12:22,810 --> 00:12:25,180
we're hiring too if anyone's looking for

286
00:12:25,180 --> 00:12:27,190
a job out there and these are the

287
00:12:27,190 --> 00:12:29,140
twitter handles so thanks

288
00:12:29,140 --> 00:12:38,070
any questions for ya

289
00:12:38,080 --> 00:12:40,340
yeah and it's only works in Firefox

290
00:12:40,340 --> 00:12:42,440
because it uses Dom content modified

