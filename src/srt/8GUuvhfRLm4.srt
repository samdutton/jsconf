1
00:00:10,500 --> 00:00:13,150

my name is Tobias nada I'm from Munich

2
00:00:13,150 --> 00:00:16,539
and I'm the guy talking about flash at a

3
00:00:16,539 --> 00:00:21,009
JavaScript conference what is this talk

4
00:00:21,009 --> 00:00:23,589
is about is about yeah some flash some

5
00:00:23,589 --> 00:00:26,919
html5 and of course JavaScript because I

6
00:00:26,919 --> 00:00:30,429
created Gordon which is a flash runtime

7
00:00:30,429 --> 00:00:44,339
written in pure JavaScript yeah what

8
00:00:44,339 --> 00:00:47,500
what why did I do this this bro check

9
00:00:47,500 --> 00:00:58,099
them because I'm don't really like okay

10
00:00:58,109 --> 00:01:01,269
so yeah because I don't really like

11
00:01:01,269 --> 00:01:04,660
flash but I love JavaScript and I love

12
00:01:04,660 --> 00:01:12,760
html5 is it ok and yeah but I yeah for

13
00:01:12,760 --> 00:01:15,490
me that this does not just that hearts

14
00:01:15,490 --> 00:01:18,220
on flesh so it is also yeah bunch of

15
00:01:18,220 --> 00:01:24,010
good part and these are I like the file

16
00:01:24,010 --> 00:01:26,290
format they they used to deliver their

17
00:01:26,290 --> 00:01:30,190
content this is the swf or quotes with

18
00:01:30,190 --> 00:01:32,320
and i think is this really well

19
00:01:32,320 --> 00:01:34,570
structured and it's a extendable file

20
00:01:34,570 --> 00:01:39,480
format so it's really cool and yeah and

21
00:01:39,480 --> 00:01:42,400
I think they did a really great job in

22
00:01:42,400 --> 00:01:46,390
creating cool authoring tools to create

23
00:01:46,390 --> 00:01:50,440
this flash content and to give ya people

24
00:01:50,440 --> 00:01:52,120
they are not well if you're familiar

25
00:01:52,120 --> 00:01:56,470
with underlying techniques or with we

26
00:01:56,470 --> 00:02:01,720
are a programming staff or something the

27
00:02:01,720 --> 00:02:03,550
ability to create rich media internet

28
00:02:03,550 --> 00:02:05,140
and they don't have to care about

29
00:02:05,140 --> 00:02:08,560
underlying techniques or how it will be

30
00:02:08,560 --> 00:02:14,420
run in the browser so they felt really

31
00:02:14,430 --> 00:02:18,550
yeah but that doesn't of course a lot of

32
00:02:18,550 --> 00:02:20,440
more things I don't really like about

33
00:02:20,440 --> 00:02:22,750
flash and that's because yeah the

34
00:02:22,750 --> 00:02:25,450
runtime really sucks especially on

35
00:02:25,450 --> 00:02:28,030
non-windows systems but there's no day

36
00:02:28,030 --> 00:02:31,270
that my browser will not crash because

37
00:02:31,270 --> 00:02:33,970
of the browser plugin yeah I'm a Mac

38
00:02:33,970 --> 00:02:38,500
user and yeah i think the Durant I'm

39
00:02:38,500 --> 00:02:41,680
would also suck on iPhone and on the

40
00:02:41,680 --> 00:02:47,890
iPad and third one is there's a big

41
00:02:47,890 --> 00:02:50,890
problem with X ability and semantics in

42
00:02:50,890 --> 00:02:57,160
flash files so according to Douglas

43
00:02:57,160 --> 00:02:58,240
Crockford I have to set another

44
00:02:58,240 --> 00:03:01,240
statement and this is the flash runtime

45
00:03:01,240 --> 00:03:04,690
must die so give me an our way up with

46
00:03:04,690 --> 00:03:11,610
me so I like a backlash I have to of it

47
00:03:11,610 --> 00:03:15,250
but the second is like a fancy one

48
00:03:15,250 --> 00:03:16,930
because it has yeah lasers in the

49
00:03:16,930 --> 00:03:26,860
background yeah and what and what is

50
00:03:26,860 --> 00:03:30,640
going so corn is basically it's a like

51
00:03:30,640 --> 00:03:34,450
it just just in time converting of yeah

52
00:03:34,450 --> 00:03:37,450
flash files or Swift files into SVG or

53
00:03:37,450 --> 00:03:39,970
javascript in your browser with no

54
00:03:39,970 --> 00:03:42,549
blogging so it's pure JavaScript so you

55
00:03:42,549 --> 00:03:44,680
can load in your browser javascript file

56
00:03:44,680 --> 00:03:46,570
and convert it into a sweetie and

57
00:03:46,570 --> 00:03:54,640
JavaScript so yeah and there's another

58
00:03:54,640 --> 00:03:57,400
state one why I did this why i created

59
00:03:57,400 --> 00:04:00,040
this project is to skip the

60
00:04:00,040 --> 00:04:04,000
sorry yeah and flash intro and open the

61
00:04:04,000 --> 00:04:09,670
web so some facts about about go on what

62
00:04:09,670 --> 00:04:11,680
is going on Gordon's flash and France

63
00:04:11,680 --> 00:04:16,150
sitting in the Dom that means you have

64
00:04:16,150 --> 00:04:19,180
fully access of the behavior of your

65
00:04:19,180 --> 00:04:21,789
embedded flash fires no no more black

66
00:04:21,789 --> 00:04:24,790
box embedded files sitting in your dorm

67
00:04:24,790 --> 00:04:29,320
it don't have any clue how it's working

68
00:04:29,320 --> 00:04:31,090
and what is what is going on in there

69
00:04:31,090 --> 00:04:35,260
and of course it's a hundred percent of

70
00:04:35,260 --> 00:04:38,440
JavaScript there's no flash fallbacks in

71
00:04:38,440 --> 00:04:44,860
there so no but so no no web as we do

72
00:04:44,860 --> 00:04:47,830
something to render ddd the output SVG

73
00:04:47,830 --> 00:04:58,080
and flash it's about 3.1 it's about

74
00:04:58,080 --> 00:05:02,370
3,100 lines of code in total and it's 15

75
00:05:02,370 --> 00:05:08,770
kilo byte gzipped in size oh how can I

76
00:05:08,770 --> 00:05:15,190
go back n is n is fully customizable so

77
00:05:15,190 --> 00:05:20,380
it used m/s vici by default at 22 doing

78
00:05:20,380 --> 00:05:22,090
the rendering stuff but you could also

79
00:05:22,090 --> 00:05:25,000
write an in canvas renderer or in WebGL

80
00:05:25,000 --> 00:05:27,580
renderer and use it with gordon i will

81
00:05:27,580 --> 00:05:32,320
show you an example later yeah go on

82
00:05:32,320 --> 00:05:34,960
supports you following browsers supports

83
00:05:34,960 --> 00:05:39,310
a chrome firefox safari also the

84
00:05:39,310 --> 00:05:41,560
Mobile's of files will also run on the

85
00:05:41,560 --> 00:05:44,920
iPhone and on the iPad and it supports

86
00:05:44,920 --> 00:05:50,680
the latest opera yeah what about the

87
00:05:50,680 --> 00:05:53,980
flash compatibility and gorham supports

88
00:05:53,980 --> 00:05:59,500
the full flash one features and supports

89
00:05:59,500 --> 00:06:01,990
all flesh two features except love

90
00:06:01,990 --> 00:06:05,980
embedded sound and I'm currently working

91
00:06:05,980 --> 00:06:10,630
on flash 3 features so there are over 7

92
00:06:10,630 --> 00:06:15,610
there seventy percent done so how do you

93
00:06:15,610 --> 00:06:17,770
how do you use gorn's as really since

94
00:06:17,770 --> 00:06:19,960
it's really easy so after you include

95
00:06:19,960 --> 00:06:22,540
sir after you download to do the main

96
00:06:22,540 --> 00:06:25,690
file and included it in your website you

97
00:06:25,690 --> 00:06:27,760
just have to create an instance of

98
00:06:27,760 --> 00:06:30,730
Gordon movie and pass the path to your

99
00:06:30,730 --> 00:06:31,510
as we have

100
00:06:31,510 --> 00:06:35,980
file and giving some options like yeah

101
00:06:35,980 --> 00:06:37,840
like the width and the high and the

102
00:06:37,840 --> 00:06:42,190
autoplay which calls going to plate if

103
00:06:42,190 --> 00:06:45,580
the file immediately or after wait up to

104
00:06:45,580 --> 00:06:49,060
another statement so then you can use

105
00:06:49,060 --> 00:06:54,760
the the movie file in this training

106
00:06:54,760 --> 00:07:00,280
methods way that you may be no because

107
00:07:00,280 --> 00:07:07,330
of jQuery

108
00:07:07,340 --> 00:07:10,270
and how do how'd it go and do this today

109
00:07:10,270 --> 00:07:13,340
first have to load and as we fi land

110
00:07:13,340 --> 00:07:17,840
yeah this wave file is it's a binary

111
00:07:17,840 --> 00:07:21,229
file so you how do you load it but how

112
00:07:21,229 --> 00:07:24,199
do you load and parson binary file in

113
00:07:24,199 --> 00:07:25,430
java script so that's really easy you

114
00:07:25,430 --> 00:07:29,360
just create a regular xml httprequest

115
00:07:29,360 --> 00:07:33,740
object but you have to write at the team

116
00:07:33,740 --> 00:07:36,020
I'm tab with the override mime type

117
00:07:36,020 --> 00:07:38,690
metal so to white at the browser

118
00:07:38,690 --> 00:07:42,770
interprets it as a UT vesa a utf-8 file

119
00:07:42,770 --> 00:07:46,250
and by setting this method by all

120
00:07:46,250 --> 00:07:48,830
writing the mime type you tell the

121
00:07:48,830 --> 00:07:53,120
browser to to pass the binary data as an

122
00:07:53,120 --> 00:08:02,690
ASCII file you're gonna have to deal a

123
00:08:02,690 --> 00:08:05,210
lot with different file formats wet so

124
00:08:05,210 --> 00:08:08,389
it is not just the problem to two bars

125
00:08:08,389 --> 00:08:13,340
in SF and sorry in Swift file format so

126
00:08:13,340 --> 00:08:15,470
there are also a lot of other embedded

127
00:08:15,470 --> 00:08:18,470
five moments like sound like video or

128
00:08:18,470 --> 00:08:22,240
images so I do that with this data URL

129
00:08:22,240 --> 00:08:28,610
which lets you and encode and binary

130
00:08:28,610 --> 00:08:31,580
data stream and attach it to an image

131
00:08:31,580 --> 00:08:34,099
tag and so you can embed it all your

132
00:08:34,099 --> 00:08:42,330
files in line in your markup

133
00:08:42,340 --> 00:08:47,350
so what techniques are going use to add

134
00:08:47,350 --> 00:08:50,620
to render a flash fire in a browser so

135
00:08:50,620 --> 00:08:55,540
it used them these html5 techniques they

136
00:08:55,540 --> 00:08:59,740
use web workers to lodi as wav files in

137
00:08:59,740 --> 00:09:02,430
the background and to parse the

138
00:09:02,430 --> 00:09:07,180
different information of an SPF and so

139
00:09:07,180 --> 00:09:10,330
you can yes so you so you can so you can

140
00:09:10,330 --> 00:09:12,390
pass the as wav file in the background

141
00:09:12,390 --> 00:09:16,820
without you block the user interface

142
00:09:16,830 --> 00:09:20,860
ended use SVG to do all these rendering

143
00:09:20,860 --> 00:09:31,500
stuff and of course canvas so

144
00:09:31,510 --> 00:09:36,640
so how can Gordon we see how Gordon can

145
00:09:36,640 --> 00:09:39,970
load a binary data and yes where if I

146
00:09:39,970 --> 00:09:42,220
could also be compressed so I'm flashy

147
00:09:42,220 --> 00:09:44,980
user set with a decompressing algorithm

148
00:09:44,980 --> 00:09:47,680
into a compress the flash file so how

149
00:09:47,680 --> 00:09:50,170
could you use that in JavaScript so the

150
00:09:50,170 --> 00:09:52,450
one way is to use this in Fletcher's

151
00:09:52,450 --> 00:09:57,940
library by ms and now is zoom oh yeah

152
00:09:57,940 --> 00:10:00,750
it's a it's a part of the set lip

153
00:10:00,750 --> 00:10:03,190
compression algorithms in JavaScript and

154
00:10:03,190 --> 00:10:05,860
it works very well but it takes too long

155
00:10:05,860 --> 00:10:09,670
time so it tooks for a 32 kilobyte

156
00:10:09,670 --> 00:10:12,280
compressed data about 150 milliseconds

157
00:10:12,280 --> 00:10:15,580
that's tested in the v8 and step that

158
00:10:15,580 --> 00:10:22,240
that is tell me too long and yeah the

159
00:10:22,240 --> 00:10:25,330
aromatic and go on implements its own

160
00:10:25,330 --> 00:10:28,300
set loop implementation and it tooks

161
00:10:28,300 --> 00:10:31,780
just 50 milliseconds that's just it's

162
00:10:31,780 --> 00:10:34,360
about 10 times faster than the other one

163
00:10:34,360 --> 00:10:38,620
how how how yeah how Gordon did it is

164
00:10:38,620 --> 00:10:41,500
could be really interesting because it's

165
00:10:41,500 --> 00:10:46,830
yeah some kind of odd because I'm

166
00:10:46,830 --> 00:10:49,450
imagine you have a set lip compressed

167
00:10:49,450 --> 00:10:52,360
data string and you want to decompress

168
00:10:52,360 --> 00:10:57,370
it in the browser so so what I did is I

169
00:10:57,370 --> 00:11:01,990
remember that the PNG file format also

170
00:11:01,990 --> 00:11:06,340
compress this image data and what I do

171
00:11:06,340 --> 00:11:09,120
is I take the decompressed data string

172
00:11:09,120 --> 00:11:13,660
wrap a PNG head around it and hold it

173
00:11:13,660 --> 00:11:17,020
encoded with base64 attach it to an

174
00:11:17,020 --> 00:11:19,030
image tag draw that image take into a

175
00:11:19,030 --> 00:11:21,700
canvas and then read the color

176
00:11:21,700 --> 00:11:23,260
information of each pixel out of this

177
00:11:23,260 --> 00:11:29,169
canvas

178
00:11:29,179 --> 00:11:31,229
that's how I get the performance of

179
00:11:31,229 --> 00:11:33,569
movement for about 10 times that's

180
00:11:33,569 --> 00:11:38,819
really quick yeah what is already

181
00:11:38,819 --> 00:11:40,679
implemented in Java Script fds we have

182
00:11:40,679 --> 00:11:43,109
file specification and it supports all

183
00:11:43,109 --> 00:11:46,219
kind of shapes yeah so its shape is

184
00:11:46,219 --> 00:11:50,039
defined in Swift file it just just just

185
00:11:50,039 --> 00:11:54,089
a bunch of path points and information

186
00:11:54,089 --> 00:11:55,709
about the field style in the line style

187
00:11:55,709 --> 00:11:58,649
I will give you some cool demos after

188
00:11:58,649 --> 00:12:02,309
that presentation so I know my my

189
00:12:02,309 --> 00:12:05,039
English will be Starks name but excuse

190
00:12:05,039 --> 00:12:09,029
me use all kinds of images so there are

191
00:12:09,029 --> 00:12:10,979
different types of images inside of in

192
00:12:10,979 --> 00:12:13,919
Swift file they could be embedded jpeg

193
00:12:13,919 --> 00:12:16,319
files and Barry PNG files and budget gif

194
00:12:16,319 --> 00:12:18,749
files so that's ready to read them out

195
00:12:18,749 --> 00:12:21,269
to encoding base64 one attachment to me

196
00:12:21,269 --> 00:12:24,469
image tag that's no that's really easy

197
00:12:24,469 --> 00:12:30,389
but it could yeah but em but of them in

198
00:12:30,389 --> 00:12:33,239
the most jpeg pictures inside of these

199
00:12:33,239 --> 00:12:36,269
days we have five you che back tables

200
00:12:36,269 --> 00:12:38,009
and the header information are separated

201
00:12:38,009 --> 00:12:41,129
from the data so if you have more if you

202
00:12:41,129 --> 00:12:45,239
have a more than one images in your sbf

203
00:12:45,239 --> 00:12:54,959
file yet it just saves a lot of memory

204
00:12:54,959 --> 00:13:02,430
to do that they can and they cook yeah

205
00:13:02,440 --> 00:13:04,540
they also support all kinds of of

206
00:13:04,540 --> 00:13:06,340
embedded phones and text in Sullivan's

207
00:13:06,340 --> 00:13:10,630
will file so it it just converts the

208
00:13:10,630 --> 00:13:15,010
fonts cliff path informations into past

209
00:13:15,010 --> 00:13:22,210
informations of SVG so by current is a

210
00:13:22,210 --> 00:13:25,390
chest the WebKit supports embedded as we

211
00:13:25,390 --> 00:13:31,120
have SVG files and you have over should

212
00:13:31,120 --> 00:13:34,450
it should support it but for some reason

213
00:13:34,450 --> 00:13:42,640
it doesn't work for me yeah there's

214
00:13:42,640 --> 00:13:45,610
another way to to to get embedded force

215
00:13:45,610 --> 00:13:49,180
work in firefox or two ways is is to

216
00:13:49,180 --> 00:13:54,520
just set this ddd pass information of

217
00:13:54,520 --> 00:14:00,990
each shape in line or you can or you can

218
00:14:00,990 --> 00:14:07,390
create an ODT file or in an embedded web

219
00:14:07,390 --> 00:14:11,860
form file and based encoded with base64

220
00:14:11,860 --> 00:14:16,420
any tattoo to data grill so it supports

221
00:14:16,420 --> 00:14:25,420
em buttons for interactivity I've not

222
00:14:25,420 --> 00:14:29,860
implemented yet morphing so this is yet

223
00:14:29,860 --> 00:14:37,510
in an intense WAV file the Yeti I'm

224
00:14:37,510 --> 00:14:41,770
sorry it just defined it to start shape

225
00:14:41,770 --> 00:14:44,860
and the end shape and do all this

226
00:14:44,860 --> 00:14:47,050
transition and transformation stuff

227
00:14:47,050 --> 00:14:48,970
between these two shapes I have two down

228
00:14:48,970 --> 00:14:53,830
by the runtime yeah I have not

229
00:14:53,830 --> 00:14:55,839
implemented yet but there's a really

230
00:14:55,839 --> 00:14:57,760
really great solution and Raphael chairs

231
00:14:57,760 --> 00:15:00,820
if you I think Dmitry we will show up

232
00:15:00,820 --> 00:15:04,360
empty

233
00:15:04,370 --> 00:15:10,439
it is bright bright digest yes with

234
00:15:10,439 --> 00:15:12,959
files inside of another Swift file so

235
00:15:12,959 --> 00:15:15,240
they have their own timeline they have

236
00:15:15,240 --> 00:15:19,319
the old set of our frames and yeah I

237
00:15:19,319 --> 00:15:24,660
will show you in a demo later yeah sound

238
00:15:24,660 --> 00:15:28,230
is not implemented yet because there are

239
00:15:28,230 --> 00:15:30,480
two types of sound in a non Swift file

240
00:15:30,480 --> 00:15:36,170
its embedded sound which means added to

241
00:15:36,170 --> 00:15:39,149
the raw data over of a sound file is

242
00:15:39,149 --> 00:15:41,910
embedded into the Swift file and there's

243
00:15:41,910 --> 00:15:43,500
there's another metal and there's

244
00:15:43,500 --> 00:15:54,060
another type of chest define and sound

245
00:15:54,060 --> 00:15:57,689
tech like similar to the html5 sound

246
00:15:57,689 --> 00:16:00,689
tech that gives you an x-axis over an

247
00:16:00,689 --> 00:16:03,420
API so that makes the sound scriptable

248
00:16:03,420 --> 00:16:06,709
so it's not embedded in in Swift file so

249
00:16:06,709 --> 00:16:10,769
so you can ensnare them yeah load an

250
00:16:10,769 --> 00:16:17,129
external sound file into it yeah also

251
00:16:17,129 --> 00:16:19,470
video embedded video is not implemented

252
00:16:19,470 --> 00:16:23,220
yet in Gordon but Thurston our solution

253
00:16:23,220 --> 00:16:26,069
is the video frame just to define just a

254
00:16:26,069 --> 00:16:29,189
video frame which which is scriptable

255
00:16:29,189 --> 00:16:36,720
via JavaScript or actions with ya gon

256
00:16:36,720 --> 00:16:41,519
supports scripting by ActionScript so

257
00:16:41,519 --> 00:16:45,389
there are two action models defined in

258
00:16:45,389 --> 00:16:46,680
the as we have indeed Swift

259
00:16:46,680 --> 00:16:50,639
specification on this D the first action

260
00:16:50,639 --> 00:16:54,899
model was just a bunch of simple simple

261
00:16:54,899 --> 00:16:57,089
instructions like play stop next frame

262
00:16:57,089 --> 00:16:59,759
previous frame go to frame wait for

263
00:16:59,759 --> 00:17:04,189
famous / etc and they introduced

264
00:17:04,189 --> 00:17:07,980
ActionScript one in the swift for

265
00:17:07,980 --> 00:17:13,540
implementation

266
00:17:13,550 --> 00:17:16,200
and and the actionscript is just

267
00:17:16,200 --> 00:17:18,660
compiled into tears in the into this

268
00:17:18,660 --> 00:17:21,660
wave file yeah and it's compiling to

269
00:17:21,660 --> 00:17:25,650
bytecode that is there's a bunch of

270
00:17:25,650 --> 00:17:29,540
instruction which is interpreted by a

271
00:17:29,540 --> 00:17:33,480
stack-based virtual machine so if you

272
00:17:33,480 --> 00:17:39,060
have a statement like this one plus x x

273
00:17:39,060 --> 00:17:43,740
3 and it will be compiled into this by

274
00:17:43,740 --> 00:17:45,180
code or in this by code instructions

275
00:17:45,180 --> 00:17:50,670
that i am pushed it pushes string on top

276
00:17:50,670 --> 00:17:56,040
of a stack and then get the value of the

277
00:17:56,040 --> 00:17:59,160
variable with with the name is on this

278
00:17:59,160 --> 00:18:04,230
on the stack as a string then push

279
00:18:04,230 --> 00:18:06,570
another value on the stack then call the

280
00:18:06,570 --> 00:18:08,850
action multiplier which push the two

281
00:18:08,850 --> 00:18:11,940
values from top of the stack multiplied

282
00:18:11,940 --> 00:18:15,570
it and a pop state to vary from the

283
00:18:15,570 --> 00:18:17,070
stack and multiply it and push the

284
00:18:17,070 --> 00:18:22,880
result back tuesday

285
00:18:22,890 --> 00:18:24,930
yeah and there's a damn then there's the

286
00:18:24,930 --> 00:18:27,570
Swift 9 action model which which is

287
00:18:27,570 --> 00:18:35,400
actually actionscript-3 and using

288
00:18:35,400 --> 00:18:40,230
example how you can erode your own yeah

289
00:18:40,230 --> 00:18:41,790
golden renderer like it watch it I

290
00:18:41,790 --> 00:18:44,010
Randall if you want or a canvas renderer

291
00:18:44,010 --> 00:18:49,340
you just have to define a custom class

292
00:18:49,340 --> 00:18:54,950
which at which have to have to be a half

293
00:18:54,950 --> 00:18:58,230
three merits it's define its place and

294
00:18:58,230 --> 00:19:03,540
remove and yeah you can take the ED as

295
00:19:03,540 --> 00:19:07,350
we have SVG r an aura of born as an

296
00:19:07,350 --> 00:19:12,810
example so ya think it's better show you

297
00:19:12,810 --> 00:19:22,870
some demos because I really up

298
00:19:22,880 --> 00:19:31,890
so

299
00:19:31,900 --> 00:19:34,860
so it start with a simple animation demo

300
00:19:34,860 --> 00:19:43,060
so this is the flash ide and we just

301
00:19:43,060 --> 00:19:45,130
open one of the demo files which is

302
00:19:45,130 --> 00:20:08,630
shipped with the flash ID

303
00:20:08,640 --> 00:20:18,700
but it must be yes

304
00:20:18,710 --> 00:20:21,049
it's a similar animation you can show

305
00:20:21,049 --> 00:20:32,520
you running in flash

306
00:20:32,530 --> 00:20:38,380
so you can see it's not very spectacular

307
00:20:38,390 --> 00:20:42,000
so we'll show you how to run this in

308
00:20:42,000 --> 00:20:56,300
barn so just support it as an Swift file

309
00:20:56,310 --> 00:20:58,350
this

310
00:20:58,350 --> 00:21:02,230
so

311
00:21:02,240 --> 00:21:24,870
just save it as task tops with

312
00:21:24,880 --> 00:21:32,810
ok

313
00:21:32,820 --> 00:21:38,690
go ahead let's create some demo file

314
00:21:38,690 --> 00:21:42,990
create a new instance of Thor movie has

315
00:21:42,990 --> 00:21:50,300
the name of this without you

316
00:21:50,310 --> 00:21:52,850
it

317
00:21:52,850 --> 00:21:59,180
and let it run in the browser

318
00:21:59,190 --> 00:22:06,680
so this service area

319
00:22:06,690 --> 00:22:08,790
yeah and this is yeah this is a flat

320
00:22:08,790 --> 00:22:12,120
file interpreted by JavaScript converted

321
00:22:12,120 --> 00:22:16,950
into SVG so i will show you that I'm not

322
00:22:16,950 --> 00:22:25,900
lying so here is this that's the output

323
00:22:25,910 --> 00:22:31,860
it works really really smooth so let's

324
00:22:31,860 --> 00:22:40,740
create another example yeah I want to

325
00:22:40,740 --> 00:22:43,050
show some scripting stuff so let's

326
00:22:43,050 --> 00:22:48,420
create yeah movie so a swift file that

327
00:22:48,420 --> 00:22:52,160
blast movie over that stream so we can

328
00:22:52,160 --> 00:22:58,140
just go in there create a new file new

329
00:22:58,140 --> 00:23:13,360
flash document so

330
00:23:13,370 --> 00:23:16,240
so we just have to create a video frame

331
00:23:16,240 --> 00:23:21,410
and we choose video which can be

332
00:23:21,410 --> 00:23:27,860
scripted by agents ActionScript so try

333
00:23:27,860 --> 00:23:33,810
drag it into the stage

334
00:23:33,820 --> 00:23:42,870
I get to full screen yes

335
00:23:42,880 --> 00:23:44,380
yep

336
00:23:44,380 --> 00:23:47,800
adding some javascript actionscript

337
00:23:47,800 --> 00:23:55,150
sorry echemus group sorry yeah it's

338
00:23:55,150 --> 00:24:07,070
better you just need a new net

339
00:24:07,080 --> 00:24:18,850
connection object

340
00:24:18,860 --> 00:24:33,299
and good in you met stream object

341
00:24:33,309 --> 00:24:36,639
we have to give this video frame an

342
00:24:36,639 --> 00:24:41,590
instance name so we can exit every week

343
00:24:41,590 --> 00:24:47,700
so we can access access it via script

344
00:24:47,700 --> 00:24:59,180
call it my video

345
00:24:59,190 --> 00:25:01,740
I should even something before start

346
00:25:01,740 --> 00:25:08,120
drinking

347
00:25:08,130 --> 00:25:11,440
ok

348
00:25:11,450 --> 00:25:17,480
then attach 22 touch to that stream to

349
00:25:17,480 --> 00:25:26,300
this video instance touch with you

350
00:25:26,310 --> 00:25:38,409
let's play big buck bunny

351
00:25:38,419 --> 00:25:44,230
start playing it

352
00:25:44,240 --> 00:25:48,950
yeah we're finished chips save it as on

353
00:25:48,950 --> 00:25:56,910
that foot file this and I'll write this

354
00:25:56,920 --> 00:26:03,690
that's okay

355
00:26:03,700 --> 00:26:06,360
all that work

356
00:26:06,360 --> 00:26:15,230
so

357
00:26:15,240 --> 00:26:18,600
Oh

358
00:26:18,610 --> 00:26:29,210
to change this here from task to real

359
00:26:29,220 --> 00:26:35,690
run it

360
00:26:35,700 --> 00:26:45,500
I'm sorry

361
00:26:45,510 --> 00:26:53,170
okay just credit card on it just copy

362
00:26:53,170 --> 00:27:00,290
and paste it

363
00:27:00,300 --> 00:27:03,810
so

364
00:27:03,820 --> 00:27:23,950
yeah this should look

365
00:27:23,960 --> 00:27:32,760
yeah there's there's Oh video

366
00:27:32,770 --> 00:27:34,960
yeah we have necessary for scripting

367
00:27:34,960 --> 00:27:46,360
Nash dreams of working Gordon and

368
00:27:46,370 --> 00:27:50,300
you can see the script Gordon is

369
00:27:50,300 --> 00:27:52,460
decompiling from the bytecode inside of

370
00:27:52,460 --> 00:27:58,510
this web file and runs it as JavaScript

371
00:27:58,510 --> 00:28:09,149
and see here the output

372
00:28:09,159 --> 00:28:12,330
Curtis

373
00:28:12,340 --> 00:28:14,830
it works

374
00:28:14,830 --> 00:28:18,690
so I have another demo which is really

375
00:28:18,690 --> 00:28:32,990
think it's really cool

376
00:28:33,000 --> 00:28:44,830
try it here

377
00:28:44,840 --> 00:28:51,620
it is a crash yeah this is the / f you

378
00:28:51,620 --> 00:29:04,100
are running in borden and it's really

379
00:29:04,100 --> 00:29:12,169
fast and each slide is loaded as a as a

380
00:29:12,169 --> 00:29:15,289
swift file and it's interpreted by

381
00:29:15,289 --> 00:29:19,279
gorham they can use zucchini you can use

382
00:29:19,279 --> 00:29:21,890
any any presentation on SlideShare to

