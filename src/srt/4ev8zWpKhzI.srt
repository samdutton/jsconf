1
00:00:00,000 --> 00:00:02,399

provides JavaScript and the thing is I

2
00:00:02,399 --> 00:00:05,460
think that asset server security is

3
00:00:05,460 --> 00:00:08,040
often a little bit underestimated so as

4
00:00:08,040 --> 00:00:10,590
soon as an attacker has the ability to

5
00:00:10,590 --> 00:00:13,019
alter your JavaScript your JavaScript

6
00:00:13,019 --> 00:00:14,610
content they can basically do anything

7
00:00:14,610 --> 00:00:17,279
there for example stage login pages

8
00:00:17,279 --> 00:00:19,949
under your domain and then wait for the

9
00:00:19,949 --> 00:00:21,480
user to enter the password or they can

10
00:00:21,480 --> 00:00:24,390
also do all the editing cuts that you

11
00:00:24,390 --> 00:00:26,340
can do and then send the information to

12
00:00:26,340 --> 00:00:28,980
their server or yeah stuff like that

13
00:00:28,980 --> 00:00:30,359
and I really hope we'll never see the

14
00:00:30,359 --> 00:00:31,859
day where somebody gets access to the

15
00:00:31,859 --> 00:00:33,899
Google Analytics JavaScript servers or

16
00:00:33,899 --> 00:00:36,210
the Facebook like buttons JavaScript

17
00:00:36,210 --> 00:00:38,129
shows because this stuff ones basically

18
00:00:38,129 --> 00:00:40,230
everywhere on the world from one hundred

19
00:00:40,230 --> 00:00:43,890
and millions of websites there's also a

20
00:00:43,890 --> 00:00:46,020
way to mitigate that at least for stuff

21
00:00:46,020 --> 00:00:48,270
that you feel yourself or for libraries

22
00:00:48,270 --> 00:00:50,460
that don't change to us this is instead

23
00:00:50,460 --> 00:00:53,489
of just embedding scripts on stacks you

24
00:00:53,489 --> 00:00:58,680
also add an integrity attribute which

25
00:00:58,680 --> 00:01:01,649
includes a Content hash of your your

26
00:01:01,649 --> 00:01:04,080
JavaScript file and this way which helps

27
00:01:04,080 --> 00:01:05,519
the browser to okay download download

28
00:01:05,519 --> 00:01:09,390
the JavaScript and if the the content of

29
00:01:09,390 --> 00:01:11,670
the delicate doesn't match this hash or

30
00:01:11,670 --> 00:01:13,200
the hashed content of the Joseph doesn't

31
00:01:13,200 --> 00:01:15,509
national attention please do not execute

32
00:01:15,509 --> 00:01:17,430
it and then you're safe the site will be

33
00:01:17,430 --> 00:01:21,229
broken but at least nobody will get hurt

34
00:01:21,229 --> 00:01:23,970
and the cool thing about this is that

35
00:01:23,970 --> 00:01:26,070
it's 100% backwards compatible so for

36
00:01:26,070 --> 00:01:28,799
browsers that do not support the exactly

37
00:01:28,799 --> 00:01:31,020
integrity attribute they will just

38
00:01:31,020 --> 00:01:33,780
download and execute JavaScript as it

39
00:01:33,780 --> 00:01:38,490
used to be so now that we've made pages

40
00:01:38,490 --> 00:01:41,009
a little bit more secure let's make them

41
00:01:41,009 --> 00:01:45,270
a little bit faster too and this is how

42
00:01:45,270 --> 00:01:47,070
to really really really really catch a

43
00:01:47,070 --> 00:01:50,369
cache effort so you might think that

44
00:01:50,369 --> 00:01:52,470
once you have a Mac a cache control

45
00:01:52,470 --> 00:01:54,689
max-age header which is maybe for a year

46
00:01:54,689 --> 00:01:58,259
that the browser will always serve that

47
00:01:58,259 --> 00:02:01,829
file out of the cache until the cache

48
00:02:01,829 --> 00:02:04,439
expires and I just important that this

49
00:02:04,439 --> 00:02:06,299
is not true by default and what will

50
00:02:06,299 --> 00:02:09,690
also show a way how to actually achieve

51
00:02:09,690 --> 00:02:12,819
this and I want to do this by an example

52
00:02:12,819 --> 00:02:17,049
our little web page with a bunch of the

53
00:02:17,049 --> 00:02:19,620
middle let's pretend it's 40 maybe 50

54
00:02:19,620 --> 00:02:22,239
and those are your measures and you are

55
00:02:22,239 --> 00:02:23,319
pretty sure that they will never change

56
00:02:23,319 --> 00:02:25,389
on the LEDs not in a year and if they

57
00:02:25,389 --> 00:02:27,310
change you can just change ul and then

58
00:02:27,310 --> 00:02:29,139
basketball castle which is more safe

59
00:02:29,139 --> 00:02:34,569
anyway and I would like to to go through

60
00:02:34,569 --> 00:02:36,519
what actually happens if the browser we

61
00:02:36,519 --> 00:02:38,560
pressed in one of those images for the

62
00:02:38,560 --> 00:02:40,000
first time and then for the second time

63
00:02:40,000 --> 00:02:44,319
and then explain the problem so what

64
00:02:44,319 --> 00:02:45,879
happens is the browser requests the

65
00:02:45,879 --> 00:02:47,829
image and your server will basically

66
00:02:47,829 --> 00:02:50,620
answer will to run it okay because the

67
00:02:50,620 --> 00:02:52,090
image is found and fine

68
00:02:52,090 --> 00:02:53,650
then there's the image content of course

69
00:02:53,650 --> 00:02:55,389
but there are headers in between and the

70
00:02:55,389 --> 00:02:57,219
for example cache control header with

71
00:02:57,219 --> 00:02:59,469
the next page those this is one year and

72
00:02:59,469 --> 00:03:03,010
second and an e-check which is the

73
00:03:03,010 --> 00:03:05,829
content hash of the image and then the

74
00:03:05,829 --> 00:03:08,260
browser will will cache this image in

75
00:03:08,260 --> 00:03:11,500
the cache stored in the cache and then

76
00:03:11,500 --> 00:03:13,540
whenever you navigate through the page

77
00:03:13,540 --> 00:03:17,169
will will liberate from a cache but when

78
00:03:17,169 --> 00:03:19,269
you do a reload which actually happens

79
00:03:19,269 --> 00:03:20,769
more often than you might think

80
00:03:20,769 --> 00:03:24,250
then it won't serve it directly from the

81
00:03:24,250 --> 00:03:29,079
cache but will initiate a request in

82
00:03:29,079 --> 00:03:31,750
your server although you specify before

83
00:03:31,750 --> 00:03:34,090
that the image will be fine for you it's

84
00:03:34,090 --> 00:03:37,180
a so called conditional request and the

85
00:03:37,180 --> 00:03:40,109
browser will adder is non-match tag

86
00:03:40,109 --> 00:03:44,109
header in this case with the with the

87
00:03:44,109 --> 00:03:46,509
hash key tag you have provided before

88
00:03:46,509 --> 00:03:47,979
and will basically ask your back-end

89
00:03:47,979 --> 00:03:51,069
server is the image it's still still

90
00:03:51,069 --> 00:03:53,680
matches this hash and this is the case

91
00:03:53,680 --> 00:03:55,509
because you are sure that this will be

92
00:03:55,509 --> 00:03:56,739
the case for the next year and therefore

93
00:03:56,739 --> 00:04:00,040
the browser answers with a we owe for

94
00:04:00,040 --> 00:04:04,840
not modified response omitting the

95
00:04:04,840 --> 00:04:06,669
header omitting the body so there the

96
00:04:06,669 --> 00:04:08,859
body has not to be transferred again but

97
00:04:08,859 --> 00:04:10,780
you still have to make the request with

98
00:04:10,780 --> 00:04:12,699
a lot of agency and if you have 40

99
00:04:12,699 --> 00:04:15,430
images this is done for 40 images and if

100
00:04:15,430 --> 00:04:16,780
you are talking about a scale like

101
00:04:16,780 --> 00:04:19,840
Facebook then this will result into

102
00:04:19,840 --> 00:04:22,660
millions and millions of unnecessary

103
00:04:22,660 --> 00:04:28,120
and Mozilla pioneered something that is

104
00:04:28,120 --> 00:04:30,040
going to fix this which is called

105
00:04:30,040 --> 00:04:32,470
cache-control immutable and with

106
00:04:32,470 --> 00:04:35,620
cache-control immutable which is a HTTP

107
00:04:35,620 --> 00:04:39,550
header you can tell the browser to like

108
00:04:39,550 --> 00:04:41,440
I am really really sure that this image

109
00:04:41,440 --> 00:04:43,390
will not change in the year and this is

110
00:04:43,390 --> 00:04:45,850
how the request then looks like for the

111
00:04:45,850 --> 00:04:48,460
first request to the image again we get

112
00:04:48,460 --> 00:04:50,230
requests and you will receive the image

113
00:04:50,230 --> 00:04:52,060
content again but this time the cache

114
00:04:52,060 --> 00:04:55,120
control in addition to the max H also

115
00:04:55,120 --> 00:04:57,730
has an immutable flag and when the

116
00:04:57,730 --> 00:05:00,070
browser or user refreshes the page the

117
00:05:00,070 --> 00:05:01,030
next time then

118
00:05:01,030 --> 00:05:03,160
the browser will simply observe it from

119
00:05:03,160 --> 00:05:05,680
its cache and not ask you move ever

120
00:05:05,680 --> 00:05:07,870
again at least for this year and I guess

121
00:05:07,870 --> 00:05:10,030
this is pretty cool the issue is now if

122
00:05:10,030 --> 00:05:12,160
you if you if you go to Chrome and want

123
00:05:12,160 --> 00:05:13,990
to try this then you won't have you will

124
00:05:13,990 --> 00:05:15,490
have a bad time because they were asked

125
00:05:15,490 --> 00:05:17,410
to implement this as well and then they

126
00:05:17,410 --> 00:05:20,470
just almost switches the entire

127
00:05:20,470 --> 00:05:22,600
condition to accept and you don't need

128
00:05:22,600 --> 00:05:25,030
be headed there it just works out of the

129
00:05:25,030 --> 00:05:31,120
box map which is cool as well so now we

130
00:05:31,120 --> 00:05:33,010
improve caching a bit but no matter how

131
00:05:33,010 --> 00:05:34,630
good your caching might be there's

132
00:05:34,630 --> 00:05:36,700
always the first unfished

133
00:05:36,700 --> 00:05:38,740
request to be made to a website and this

134
00:05:38,740 --> 00:05:40,410
is why I would like to talk about

135
00:05:40,410 --> 00:05:44,430
results in and especially the preload

136
00:05:44,430 --> 00:05:48,730
resources my example is a such totally

137
00:05:48,730 --> 00:05:51,460
awesome website which is a blog post

138
00:05:51,460 --> 00:05:54,669
about dancing pedestrians and with a

139
00:05:54,669 --> 00:05:56,860
with a large viewer image which which

140
00:05:56,860 --> 00:05:58,330
icons which I would consider pretty

141
00:05:58,330 --> 00:06:02,260
important for this page so yeah this is

142
00:06:02,260 --> 00:06:04,300
how it looks like this is maybe how we

143
00:06:04,300 --> 00:06:06,360
had stuff like so there's a stylesheet

144
00:06:06,360 --> 00:06:09,490
precisely this and a bunch of JavaScript

145
00:06:09,490 --> 00:06:13,960
files nothing too uncommon I'd say this

146
00:06:13,960 --> 00:06:15,970
is Caesar so there's only background

147
00:06:15,970 --> 00:06:17,980
image for yes the dancing finish you

148
00:06:17,980 --> 00:06:21,160
intimate the issue is what when the

149
00:06:21,160 --> 00:06:22,960
users on a slow Network this is how it

150
00:06:22,960 --> 00:06:26,980
probably will look like when they open

151
00:06:26,980 --> 00:06:31,210
the page so going to wait for image it's

152
00:06:31,210 --> 00:06:32,530
going to take a while until it appears

153
00:06:32,530 --> 00:06:34,120
on this tax in this case because the

154
00:06:34,120 --> 00:06:36,100
image is super super important

155
00:06:36,100 --> 00:06:38,080
and you can also see them in this

156
00:06:38,080 --> 00:06:41,080
waterfall graphic options and yes that

157
00:06:41,080 --> 00:06:43,330
the image is the last item and it is

158
00:06:43,330 --> 00:06:45,250
only downloaded after all these scripts

159
00:06:45,250 --> 00:06:48,850
and and the see is that and this is

160
00:06:48,850 --> 00:06:51,970
because in if you specify a background

161
00:06:51,970 --> 00:06:54,790
image and CSS it won't be it will only

162
00:06:54,790 --> 00:06:56,080
be downloaded different selector

163
00:06:56,080 --> 00:06:58,150
measures and the browser can only know

164
00:06:58,150 --> 00:06:59,710
if these selector matches if it has

165
00:06:59,710 --> 00:07:02,470
downloaded and parsed the disease that's

166
00:07:02,470 --> 00:07:03,850
entirely and also there's rip

167
00:07:03,850 --> 00:07:05,980
synchronous quits let's follow it so

168
00:07:05,980 --> 00:07:08,470
this is why the image download starts at

169
00:07:08,470 --> 00:07:13,210
the very very end what you can do is you

170
00:07:13,210 --> 00:07:16,360
can add a link tag to your have in the

171
00:07:16,360 --> 00:07:18,910
state the bucket a sheet with relation

172
00:07:18,910 --> 00:07:22,390
cetera preload and the atria is your

173
00:07:22,390 --> 00:07:24,190
background image and this tells the

174
00:07:24,190 --> 00:07:27,970
browser that you want this this asset to

175
00:07:27,970 --> 00:07:31,240
be downloaded as fast as possibly as

176
00:07:31,240 --> 00:07:34,300
fast as it can and so you don't need to

177
00:07:34,300 --> 00:07:37,230
wait until it finds it into InDesign and

178
00:07:37,230 --> 00:07:40,570
the resulting water shot what a full

179
00:07:40,570 --> 00:07:42,820
chart looks like this so the background

180
00:07:42,820 --> 00:07:45,850
image is now downloaded in parallel with

181
00:07:45,850 --> 00:07:48,190
all the other assets and we will get

182
00:07:48,190 --> 00:07:50,950
much much earlier and before and you can

183
00:07:50,950 --> 00:07:52,570
use it for for other things as well for

184
00:07:52,570 --> 00:07:54,100
JavaScript that you will load as

185
00:07:54,100 --> 00:07:57,820
inclusive or use for I think this keys

186
00:07:57,820 --> 00:08:00,730
as no name - so but if they're still

187
00:08:00,730 --> 00:08:02,590
under they are not enough and you really

188
00:08:02,590 --> 00:08:04,840
want those you there's actually a way to

189
00:08:04,840 --> 00:08:06,880
tell the browser even earlier about

190
00:08:06,880 --> 00:08:09,700
resources that you might need

191
00:08:09,700 --> 00:08:13,020
enter early hint so this one is a

192
00:08:13,020 --> 00:08:15,370
request for comment that isn't

193
00:08:15,370 --> 00:08:17,320
implemented in any browser yet I guess

194
00:08:17,320 --> 00:08:19,420
but I think it's so cool I wanted to

195
00:08:19,420 --> 00:08:23,260
mention it anyway but before I will dive

196
00:08:23,260 --> 00:08:26,110
into that there's one thing I'd like to

197
00:08:26,110 --> 00:08:29,350
emphasize that is that an HTTP one

198
00:08:29,350 --> 00:08:32,229
request doesn't necessarily result in

199
00:08:32,229 --> 00:08:35,380
only one response and the spec states a

200
00:08:35,380 --> 00:08:37,360
client must be Pichette prepare to

201
00:08:37,360 --> 00:08:39,460
accept one or more status responses

202
00:08:39,460 --> 00:08:42,640
prior to a regular response also I'd

203
00:08:42,640 --> 00:08:43,900
like to give an example of something

204
00:08:43,900 --> 00:08:45,930
that has been in place for years already

205
00:08:45,930 --> 00:08:48,560
to give a better understanding

206
00:08:48,560 --> 00:08:52,069
which is the status code 100 continue

207
00:08:52,069 --> 00:08:55,160
and so imagine you you are youtuber and

208
00:08:55,160 --> 00:08:58,220
you want to upload a large 8 gigabyte

209
00:08:58,220 --> 00:09:01,100
video to YouTube but you're not sure if

210
00:09:01,100 --> 00:09:02,389
you're allowed to so if you're still

211
00:09:02,389 --> 00:09:04,370
logged in what you could do is simply

212
00:09:04,370 --> 00:09:06,019
send the 8 gigabyte of video along with

213
00:09:06,019 --> 00:09:07,790
your request and then get injected and

214
00:09:07,790 --> 00:09:09,680
have congested the network but what you

215
00:09:09,680 --> 00:09:13,670
can also do is spend your your your

216
00:09:13,670 --> 00:09:15,110
cookie information and the content

217
00:09:15,110 --> 00:09:17,389
length or that the video will have a but

218
00:09:17,389 --> 00:09:19,279
not sent the body right away and then

219
00:09:19,279 --> 00:09:21,800
also the expect 100 continue header

220
00:09:21,800 --> 00:09:23,629
which basically tells the server that

221
00:09:23,629 --> 00:09:26,059
you will not send the video right away

222
00:09:26,059 --> 00:09:30,800
but expect its response so and if then

223
00:09:30,800 --> 00:09:32,209
the solar check if you'll still log in

224
00:09:32,209 --> 00:09:33,920
and allows you a video and if that's the

225
00:09:33,920 --> 00:09:36,470
case will enter with 100 and only then

226
00:09:36,470 --> 00:09:38,899
you will go on uploading the video which

227
00:09:38,899 --> 00:09:41,449
will then result in an HTTP code of 200

228
00:09:41,449 --> 00:09:44,589
or 201 depending on the implementation

229
00:09:44,589 --> 00:09:50,629
or something 400 if it fails this and

230
00:09:50,629 --> 00:09:53,629
this same mechanism is used in the 103

231
00:09:53,629 --> 00:09:54,230
early hand

232
00:09:54,230 --> 00:09:57,230
so when you make the request to the

233
00:09:57,230 --> 00:09:58,970
server then the backend server can

234
00:09:58,970 --> 00:10:02,860
generate your HTML by talking to API or

235
00:10:02,860 --> 00:10:05,899
make it or contacting the database for

236
00:10:05,899 --> 00:10:08,629
information but while the server is

237
00:10:08,629 --> 00:10:11,209
added the web server can already give

238
00:10:11,209 --> 00:10:12,740
you the response with the resources that

239
00:10:12,740 --> 00:10:14,480
you will need once the pages done

240
00:10:14,480 --> 00:10:16,910
generated a window that you will need

241
00:10:16,910 --> 00:10:19,339
when the page is generated so and once

242
00:10:19,339 --> 00:10:21,980
this when once this happens the image of

243
00:10:21,980 --> 00:10:23,540
the image will already have started

244
00:10:23,540 --> 00:10:25,939
downloading and will even will be there

245
00:10:25,939 --> 00:10:29,240
even even further faster with a really

246
00:10:29,240 --> 00:10:34,160
cool and we are yeah the last thing I'd

247
00:10:34,160 --> 00:10:36,769
like to talk about is addeventlistener

248
00:10:36,769 --> 00:10:41,050
or better yet the third parameter of

249
00:10:41,050 --> 00:10:44,449
activated nerve so who of you has seen

250
00:10:44,449 --> 00:10:46,600
that before

251
00:10:46,600 --> 00:10:51,980
quite a few so what it basically changes

252
00:10:51,980 --> 00:10:54,230
the propagation model or how the hell

253
00:10:54,230 --> 00:10:56,420
did all events you know so if you set it

254
00:10:56,420 --> 00:10:58,639
to false or don't set it at all then

255
00:10:58,639 --> 00:11:01,279
event flow basically like this look at

256
00:11:01,279 --> 00:11:01,710
my offer

257
00:11:01,710 --> 00:11:04,800
we'll be gone when you click on the

258
00:11:04,800 --> 00:11:08,040
target then we click target event

259
00:11:08,040 --> 00:11:10,140
handlers will will be called first and

260
00:11:10,140 --> 00:11:12,240
then the event will basically bubble up

261
00:11:12,240 --> 00:11:14,400
or flow up all through all the interface

262
00:11:14,400 --> 00:11:16,020
and the event handlers there will be

263
00:11:16,020 --> 00:11:20,160
cost blended the default nowadays

264
00:11:20,160 --> 00:11:22,830
then there's the it should set it to

265
00:11:22,830 --> 00:11:27,060
true then it changes to to something

266
00:11:27,060 --> 00:11:28,680
called capturing and this basically

267
00:11:28,680 --> 00:11:32,130
reverses the way events flow so the

268
00:11:32,130 --> 00:11:34,620
ancestors will get the events first and

269
00:11:34,620 --> 00:11:37,050
the inner target the click target itself

270
00:11:37,050 --> 00:11:42,240
will receive the event laughs so that

271
00:11:42,240 --> 00:11:44,760
even allows outer containers to cancel

272
00:11:44,760 --> 00:11:46,800
the event before it even arrives at the

273
00:11:46,800 --> 00:11:49,110
click target and you might now ask

274
00:11:49,110 --> 00:11:52,020
yourself why is why are two in place I

275
00:11:52,020 --> 00:11:54,690
guess is just for circling there were

276
00:11:54,690 --> 00:11:57,810
two teams that came up with different

277
00:11:57,810 --> 00:12:00,570
solutions for the same problem and now

278
00:12:00,570 --> 00:12:04,860
we are we have both vividly but we are

279
00:12:04,860 --> 00:12:08,160
pedal for bubbling as we thought ah so

280
00:12:08,160 --> 00:12:10,830
that this parameter actually has changed

281
00:12:10,830 --> 00:12:13,230
in the last year say so it's not doing

282
00:12:13,230 --> 00:12:18,680
it anymore it is now become an object

283
00:12:18,680 --> 00:12:21,830
which allows us to configure even more

284
00:12:21,830 --> 00:12:25,530
event handler option so the first one

285
00:12:25,530 --> 00:12:26,640
which is still in place of course

286
00:12:26,640 --> 00:12:28,620
capturing because it was most there

287
00:12:28,620 --> 00:12:30,870
before you'll need to be supported but

288
00:12:30,870 --> 00:12:32,430
there though there are also two new ones

289
00:12:32,430 --> 00:12:34,730
which I would like to talk about briefly

290
00:12:34,730 --> 00:12:38,910
the first one being one so if you set

291
00:12:38,910 --> 00:12:42,420
one to two then when your event handler

292
00:12:42,420 --> 00:12:45,750
is being called then it will be removed

293
00:12:45,750 --> 00:12:48,030
automatically for you so it will only be

294
00:12:48,030 --> 00:12:50,940
called once the parameter orbiter and

295
00:12:50,940 --> 00:12:52,470
that saves us from writing a lot of

296
00:12:52,470 --> 00:12:53,010
rollerplate

297
00:12:53,010 --> 00:12:55,110
for all using jquery ladies for that

298
00:12:55,110 --> 00:12:58,110
matter and then the another one it's a

299
00:12:58,110 --> 00:13:00,900
little bit more interesting i say which

300
00:13:00,900 --> 00:13:04,740
is passive and so there's one problem

301
00:13:04,740 --> 00:13:06,630
with mobile phones so have you ever

302
00:13:06,630 --> 00:13:08,910
tried scrolling web page this is awesome

303
00:13:08,910 --> 00:13:11,460
pretty janky and this is because when

304
00:13:11,460 --> 00:13:13,200
you when you scroll and use for example

305
00:13:13,200 --> 00:13:15,420
then you are as a developer

306
00:13:15,420 --> 00:13:18,120
able to prevent this touchmove from from

307
00:13:18,120 --> 00:13:21,150
happening which is good only one time

308
00:13:21,150 --> 00:13:24,030
because it allows to be to be flexible

309
00:13:24,030 --> 00:13:26,190
but is also bad because browsers need to

310
00:13:26,190 --> 00:13:28,410
wait until all touchmove event vendors

311
00:13:28,410 --> 00:13:30,750
are done with their work before they can

312
00:13:30,750 --> 00:13:32,250
actually paint a scroll because you

313
00:13:32,250 --> 00:13:34,920
could cancel it and then they brother

314
00:13:34,920 --> 00:13:37,320
where wouldn't be allowed to scroll and

315
00:13:37,320 --> 00:13:40,830
with passive if you can cast pepper true

316
00:13:40,830 --> 00:13:42,930
and you are promising the browser that

317
00:13:42,930 --> 00:13:45,050
you that you will never ever call

318
00:13:45,050 --> 00:13:47,790
prevent default in your codec in your

319
00:13:47,790 --> 00:13:49,380
event handler and that allows the

320
00:13:49,380 --> 00:13:52,980
browser to adjust painter scrolling and

321
00:13:52,980 --> 00:13:55,290
you still can complement before but it

322
00:13:55,290 --> 00:13:57,420
won't do anything because you promise

323
00:13:57,420 --> 00:14:01,140
that you won't arm one last thing is if

324
00:14:01,140 --> 00:14:04,920
you want to use the new version also the

325
00:14:04,920 --> 00:14:08,250
object version instead of the full

326
00:14:08,250 --> 00:14:09,500
version

327
00:14:09,500 --> 00:14:11,760
now you need to feature detected first

328
00:14:11,760 --> 00:14:14,910
because imagine you are using something

329
00:14:14,910 --> 00:14:16,980
like this in an unsupported browser then

330
00:14:16,980 --> 00:14:19,230
so you're giving the option the option

331
00:14:19,230 --> 00:14:21,360
object will capture false but what

332
00:14:21,360 --> 00:14:22,800
you're what you're actually getting is

333
00:14:22,800 --> 00:14:25,590
kept a true because this is an object in

334
00:14:25,590 --> 00:14:27,300
a JavaScript object so truthfully and

335
00:14:27,300 --> 00:14:30,000
therefore if you capture is true and

336
00:14:30,000 --> 00:14:32,310
then you're in for a surprise

337
00:14:32,310 --> 00:14:35,880
and the the last thing I'd like to show

338
00:14:35,880 --> 00:14:37,590
us how to feature the check so basically

339
00:14:37,590 --> 00:14:39,360
a quick and dirty way how to do it and I

340
00:14:39,360 --> 00:14:41,000
want to show it because it involves

341
00:14:41,000 --> 00:14:43,560
something I've mentioned earlier which

342
00:14:43,560 --> 00:14:46,080
is Gator Gator something so what you

343
00:14:46,080 --> 00:14:48,180
what you can do is just add an event

344
00:14:48,180 --> 00:14:50,550
listener to any event it doesn't ever

345
00:14:50,550 --> 00:14:53,520
have to be called at all and then you

346
00:14:53,520 --> 00:14:56,040
use capture but use the getter Center or

347
00:14:56,040 --> 00:14:58,890
capture and if the browser supports the

348
00:14:58,890 --> 00:15:01,410
object version it will ask you will ask

349
00:15:01,410 --> 00:15:03,540
the object that captures will force you

350
00:15:03,540 --> 00:15:05,280
to read it and use it and if that's the

351
00:15:05,280 --> 00:15:07,800
case then you know it got caught and

352
00:15:07,800 --> 00:15:11,910
know that it's supported or not I hope

353
00:15:11,910 --> 00:15:19,080
that makes sense now that's basically it

354
00:15:19,080 --> 00:15:22,530
already so thank you very much if you

355
00:15:22,530 --> 00:15:24,480
still have some that you have questions

356
00:15:24,480 --> 00:15:26,510
then don't hesitate these are still

357
00:15:26,510 --> 00:15:28,910
eight minutes or so

