1
00:00:00,160 --> 00:00:01,160
Advancing Focus
- Glen Goodwin

2
00:00:01,160 --> 00:00:02,950
folk
>> Hey, everyone, we're starting back up again.

3
00:00:02,950 --> 00:00:06,169
So our next speaker, he's an ultimate frisbee
fan, he plays three to four times a week,

4
00:00:06,169 --> 00:00:07,169
which is insane.

5
00:00:07,169 --> 00:00:08,929
I don't know what that looks like, and he's
also a craft beer fan, who likes craft beer

6
00:00:08,929 --> 00:00:09,929
here?

7
00:00:09,929 --> 00:00:10,929
Cool, all right.

8
00:00:10,929 --> 00:00:11,929
OK.

9
00:00:11,929 --> 00:00:12,929
So advancing focus with, please him a round
of applause, Glen Goodwin!

10
00:00:12,929 --> 00:00:13,929
[applause]

11
00:00:13,929 --> 00:00:14,929
So thank you, Paris, for the introduction.

12
00:00:14,929 --> 00:00:15,929
Greetings, everyone.

13
00:00:15,929 --> 00:00:16,929
Before I start, I just want to say as I look
out into these blinding lights, look out at

14
00:00:16,929 --> 00:00:22,779
everyone, that I, like all speakers who get
up on the stage, am nervous as hell, so thank

15
00:00:22,779 --> 00:00:27,890
you all in advance for bearing with me, for
laughing at my really lame jokes, and for

16
00:00:27,890 --> 00:00:30,830
joining me on this ride.

17
00:00:30,830 --> 00:00:34,160
So --
[applause]

18
00:00:34,160 --> 00:00:36,290
So let's get this ball going.

19
00:00:36,290 --> 00:00:37,730
Ball rolling.

20
00:00:37,730 --> 00:00:43,489
My name is Glen and I am here today to talk
to you about the most exciting part of working

21
00:00:43,489 --> 00:00:49,750
with browsers, a topic that will literally
make you shout with joy and I can tell that

22
00:00:49,750 --> 00:00:57,460
you are all super-eager to hear about the
stupendous, amazing, and totally riveting,

23
00:00:57,460 --> 00:00:58,460
focus subsystem.

24
00:00:58,460 --> 00:00:59,460
Yeah?

25
00:00:59,460 --> 00:01:00,460


26
00:01:00,460 --> 00:01:01,460
[cheers and applause]

27
00:01:01,460 --> 00:01:03,290
Wow, that was pretty good.

28
00:01:03,290 --> 00:01:06,220
I had a whole section, everybody cheer again.

29
00:01:06,220 --> 00:01:07,710
But you do pretty good.

30
00:01:07,710 --> 00:01:15,370
There so I know this isn't the most glamorous
thing we could be discussing today but sometimes

31
00:01:15,370 --> 00:01:20,300
we have to go down into the weeds, we have
to take a long hard look at the tools that

32
00:01:20,300 --> 00:01:25,220
we are given as web developers and we need
to ask, could it be better and that's what

33
00:01:25,220 --> 00:01:31,500
I want to do today, with the Focus subsystem
and specifically how we interact with the

34
00:01:31,500 --> 00:01:40,710
Focus subsystem programmatically within JavaScript,
so we're going to dive deep, and we're going

35
00:01:40,710 --> 00:01:47,060
to ask, does it work well, does it meet the
needs of the developers?

36
00:01:47,060 --> 00:01:51,210
Could it do more to be better?

37
00:01:51,210 --> 00:01:55,920
So in order to answer these questions, we
need to know exactly what we're talking about.

38
00:01:55,920 --> 00:01:58,920
So I want to be very clear on this point.

39
00:01:58,920 --> 00:02:04,490
When I speak about Focus, I am not talking
about this.

40
00:02:04,490 --> 00:02:08,890
As cute as this little guy is, we're not here
to talk about focus in terms of attention.

41
00:02:08,890 --> 00:02:20,610
We're not talking about, you know, blink and
MarqUee elements.

42
00:02:20,610 --> 00:02:25,900
So fields and elements is what we're talking
about, where input is directed.

43
00:02:25,900 --> 00:02:33,890
When we press a key on our keyboard, focus
is the system that directs that our form and

44
00:02:33,890 --> 00:02:40,360
specifically to the field, so when I press
a G here, the focus system ensures that the

45
00:02:40,360 --> 00:02:44,120
G appears in the correct place.

46
00:02:44,120 --> 00:02:49,960
Specifically, Focus as it relates to user
interfaces is the process by which with the

47
00:02:49,960 --> 00:02:55,940
computer decides what part of the user interface
receives any human interaction.

48
00:02:55,940 --> 00:03:02,620
Be it a mouse click, a keystroke or any other
type of user input, including accessibility

49
00:03:02,620 --> 00:03:03,620
devices.

50
00:03:03,620 --> 00:03:07,150
For any given input the computer must decide
where in all of its interfaces that input

51
00:03:07,150 --> 00:03:14,810
is being directed to and once it determines
where the input is being targeted at, it needs

52
00:03:14,810 --> 00:03:16,230
to send it there.

53
00:03:16,230 --> 00:03:24,690
I call this the focus flow and I press a key,
it reports an operating system that a keystroke

54
00:03:24,690 --> 00:03:27,060
occurred.

55
00:03:27,060 --> 00:03:30,600
The operating system determines what key was
pressed.

56
00:03:30,600 --> 00:03:35,840
Next, the operating system then determines
where the user is currently targeting their

57
00:03:35,840 --> 00:03:41,120
input A
More precisely which window is the focus?

58
00:03:41,120 --> 00:03:46,850
If the browser is the current window focus,
it tells the browser about the keyboard press,

59
00:03:46,850 --> 00:03:52,220
browser then does exactly what the operating
system just did, but it does it within itself,

60
00:03:52,220 --> 00:03:53,220
right?

61
00:03:53,220 --> 00:04:00,130
So it determines which window or tab within
the browser is targeted to receive the input.

62
00:04:00,130 --> 00:04:05,240
Once the browser has determined which window
or tab has the focus, it finds the associated

63
00:04:05,240 --> 00:04:08,990
top-level DOM element for that window or tab.

64
00:04:08,990 --> 00:04:15,520
The DOM document tracks which specific element
of the DOM is currently targeted to receive

65
00:04:15,520 --> 00:04:16,520
input.

66
00:04:16,520 --> 00:04:20,530
It does this in a property called activeElement.

67
00:04:20,530 --> 00:04:35,830
Whenever focus is changed in a document, this
is the series of focus decisions at every

68
00:04:35,830 --> 00:04:36,830
level.

69
00:04:36,830 --> 00:04:47,440
The 
active element, along with the focus and blur

70
00:04:47,440 --> 00:04:51,800
methods, and the four events, focus, blur,
focusin and focusout.

71
00:04:51,800 --> 00:05:09,130
These make up the focus systems that we know
and I don't want to say love, but use every

72
00:05:09,130 --> 00:05:10,130
day.

73
00:05:10,130 --> 00:05:12,870
That's what we're going to talk about today
with the focus subsystem.

74
00:05:12,870 --> 00:05:20,770
So I'm going to take a long draw of water.

75
00:05:20,770 --> 00:05:23,630
Bear with me.

76
00:05:23,630 --> 00:05:32,370
So the focus subsis is tem was introduced
in January of 1998, with a few tweaks a few

77
00:05:32,370 --> 00:05:34,050
years later.

78
00:05:34,050 --> 00:05:40,760
And unsurprisingly, the focus subsystem hasn't
changed significantly since then and that's

79
00:05:40,760 --> 00:05:45,480
fine, it's a 20-year-old API, and it does
its job.

80
00:05:45,480 --> 00:05:47,520
Or does it?

81
00:05:47,520 --> 00:05:53,270
So say that you are an incredibly dashing
web developer named Glen, and you need to

82
00:05:53,270 --> 00:05:57,110
write a web component that wraps a single
field for entering a user name, something

83
00:05:57,110 --> 00:05:58,949
like this, right?

84
00:05:58,949 --> 00:06:04,360
And your customer comes to you and say they
want the "Enter" key to advance the focus

85
00:06:04,360 --> 00:06:07,410
to the next field.

86
00:06:07,410 --> 00:06:10,280
So our code might look like this.

87
00:06:10,280 --> 00:06:15,960
And a note here: I am using a library called
ZephJS to define the web component.

88
00:06:15,960 --> 00:06:21,560
It's a tiny and powerful way to write web
components super easily, you can check it

89
00:06:21,560 --> 00:06:24,230
out at ZephJS.com.

90
00:06:24,230 --> 00:06:29,580
So we have a customer that wants a web component
for entering a user name and that they could

91
00:06:29,580 --> 00:06:33,750
reuse and it must advance the focus when"
Enter "Is pressed.

92
00:06:33,750 --> 00:06:37,590
So here's our code again.

93
00:06:37,590 --> 00:06:43,380
I'm going to go through this pretty quick,
so bear with me.

94
00:06:43,380 --> 00:06:46,600
So we define our my user field component.

95
00:06:46,600 --> 00:06:51,020
So with ZephJS you provide the name of the
component you are defining and a function

96
00:06:51,020 --> 00:06:55,590
that describes the detail of the new component.

97
00:06:55,590 --> 00:07:00,360
Within this definition function we define
our HTML content for our component and we

98
00:07:00,360 --> 00:07:05,770
need to tell our component how we want to
handle the key-up event in the interval element.

99
00:07:05,770 --> 00:07:10,940
The keyup event is what we are watching when
enter is pressed, right?

100
00:07:10,940 --> 00:07:12,160
So that's our code.

101
00:07:12,160 --> 00:07:17,100
That's our admittedly simple component division
for our user field.

102
00:07:17,100 --> 00:07:23,630
Once defined this code is going to be used.

103
00:07:23,630 --> 00:07:28,040
So by now, most of you have noticed this line
right here.

104
00:07:28,040 --> 00:07:34,000
This is where we want to put the code that
will change focus when the enter key is pressed.

105
00:07:34,000 --> 00:07:36,960
But there is a big problem here.

106
00:07:36,960 --> 00:07:42,740
With our current focus subsystem, in order
to advance the focus from one element to the

107
00:07:42,740 --> 00:07:46,260
next, we use the element focus method.

108
00:07:46,260 --> 00:07:53,509
Element focus is executed on the element we
want to give the focus to, but then how does

109
00:07:53,509 --> 00:07:59,130
our web component know what element it wants
to advance the focus to?

110
00:07:59,130 --> 00:08:07,539
A web component is built to actively not know
what exists outside of it.

111
00:08:07,539 --> 00:08:13,770
So using the current focus subsystem, we actually
have no easy way to just tell the focus to

112
00:08:13,770 --> 00:08:16,389
advance to the next place.

113
00:08:16,389 --> 00:08:21,360
This is the first problem I want to call your
attention to with the current focus subsystem.

114
00:08:21,360 --> 00:08:26,020
There exists no programmatic way to advance
focus.

115
00:08:26,020 --> 00:08:32,579
Now, some of you are thinking that Glen, you
should probably just walk the tree and you

116
00:08:32,579 --> 00:08:36,449
can start at the current element and locate
the next element which can receive focus and

117
00:08:36,449 --> 00:08:39,069
you can advance to that that's super-easy.

118
00:08:39,069 --> 00:08:44,579
Well, this brings up the second problem with
our current focus system.

119
00:08:44,579 --> 00:08:48,589
What makes an element able to receive focus?

120
00:08:48,589 --> 00:08:52,499
What indicates something isfocusable?

121
00:08:52,499 --> 00:08:55,649
And there are some easy elements here.

122
00:08:55,649 --> 00:09:04,629
If an element is an input tag or a select
tag or a button tag or or the this was a new

123
00:09:04,629 --> 00:09:12,779
one to me the first summary element of a child
element or it's content editable, except if

124
00:09:12,779 --> 00:09:20,300
it's disabled or the tabindex is equal to
-1 or it's hidden or it's within a disabled

125
00:09:20,300 --> 00:09:27,790
forum or it's otherwise not visible, or, or,
or, I mean there's so much I could keep going

126
00:09:27,790 --> 00:09:28,790
on.

127
00:09:28,790 --> 00:09:37,170
See, determining what is focusable is really
hard and even more problematic is that it's

128
00:09:37,170 --> 00:09:45,160
incredibly inconsistent across different browsers,
Chrome may handle a select element different

129
00:09:45,160 --> 00:09:56,970
than Firefox does, and that doesn't even begin
to take account in the are react.

130
00:09:56,970 --> 00:10:01,829
They didn't account for them at all 20 years
ago.

131
00:10:01,829 --> 00:10:07,629
Aria a has huge implications on focus.

132
00:10:07,629 --> 00:10:22,089
It's a big part of this question understanding
it is very tricky and it's full of edge cases.

133
00:10:22,089 --> 00:10:25,110
Someone made this lovely chart.

134
00:10:25,110 --> 00:10:31,930
This compares all the an element could be
focusable.

135
00:10:31,930 --> 00:10:38,709
I tried to shrink this down but it would be
16 stories high on the monitors if I did it.

136
00:10:38,709 --> 00:10:42,059
It's just crazy long.

137
00:10:42,059 --> 00:10:48,240
Of course, we can all go to the specification
and that should be super-easy to understand,

138
00:10:48,240 --> 00:10:49,240
right?

139
00:10:49,240 --> 00:10:50,240
Yeah?

140
00:10:50,240 --> 00:10:56,310
So Section 6.4 of the HTML specification details
the focus subsystem, and here's what it says

141
00:10:56,310 --> 00:11:00,639
about how to determine if an element is folk
focusable.

142
00:11:00,639 --> 00:11:03,739
So I was going to read this aloud verbatim.

143
00:11:03,739 --> 00:11:10,529
I suspect half of you would have left immediately,
but honestly if you just look at it, it's

144
00:11:10,529 --> 00:11:15,579
complicated and it's confusing and even if
you read the whole thing and you get down

145
00:11:15,579 --> 00:11:20,470
to this last line right here, this basically
says that browsers can make anything they

146
00:11:20,470 --> 00:11:24,490
want be focusable or not at any time.

147
00:11:24,490 --> 00:11:29,759
So trying to determine what is focusable is
not something we really should be in the business

148
00:11:29,759 --> 00:11:32,600
of doing as developers.

149
00:11:32,600 --> 00:11:40,630
Smarter people have tried to do this and every
single time they try to do this, they get

150
00:11:40,630 --> 00:11:41,800
it wrong.

151
00:11:41,800 --> 00:11:44,100
So essentially we have two problems that I
mentioned, right?

152
00:11:44,100 --> 00:11:50,970
We have no easy way to programmatically advance
the focus or programmatically move the focus

153
00:11:50,970 --> 00:11:52,480
backwards.

154
00:11:52,480 --> 00:11:58,319
We also have no easy way determine what can
receive the focus, what isfocusable if we

155
00:11:58,319 --> 00:12:04,399
wanted to read the tree.

156
00:12:04,399 --> 00:12:12,180
And internally in the browser, both of these
problems are already solved.

157
00:12:12,180 --> 00:12:16,119
This is just not exposed.

158
00:12:16,119 --> 00:12:19,179
The focus subsystem today is mostly a passive
thing.

159
00:12:19,179 --> 00:12:23,959
We can read it, we can tell where the focus
is and what it changes and we can direct it

160
00:12:23,959 --> 00:12:28,749
if we know exactly where to direct T and this
is OK, but it's not enough.

161
00:12:28,749 --> 00:12:33,029
It's not enough for modern web development.

162
00:12:33,029 --> 00:12:37,680
This is a 20-year-old API and it's really
starting to show its age.

163
00:12:37,680 --> 00:12:43,660
My web component example there, it's only
one small slice, one small example of the

164
00:12:43,660 --> 00:12:45,809
problems we are facing with focus.

165
00:12:45,809 --> 00:12:53,029
20 years ago, we hadn't even begun to envision
all the things we would want or need to do

166
00:12:53,029 --> 00:12:55,850
with the web.

167
00:12:55,850 --> 00:13:01,040
And as we continue to move the needle of what
can be done in a browser, focus will continue

168
00:13:01,040 --> 00:13:06,550
to become more and more of a pain point for
developers, but I think that we can solve

169
00:13:06,550 --> 00:13:07,550
these problems.

170
00:13:07,550 --> 00:13:10,779
I believe we can make focus better.

171
00:13:10,779 --> 00:13:16,629
We can make it more powerful and easier to
work with, and we can make focus help us do

172
00:13:16,629 --> 00:13:17,769
what we need to do.

173
00:13:17,769 --> 00:13:22,339
And all of that begins by exposing three simple
functions.

174
00:13:22,339 --> 00:13:28,369
First, we need to expose that method that
determines if something can receive the focus.

175
00:13:28,369 --> 00:13:33,029
Second and third, we need to expose the methods
to move the focus forward or backwards, regardless

176
00:13:33,029 --> 00:13:36,110
of where the focus currently is.

177
00:13:36,110 --> 00:13:41,720
And consider what other focussings we could
expose or add to make focus better.

178
00:13:41,720 --> 00:13:47,619
What about a function to trap or limit focus
to a particular container, meaning that focus

179
00:13:47,619 --> 00:13:52,350
would cycle through the focusable elements
in that container, but never out of it until

180
00:13:52,350 --> 00:13:54,500
told otherwise.

181
00:13:54,500 --> 00:14:03,370
Especially useful in dialogue boxes.

182
00:14:03,370 --> 00:14:11,310
wouldn't a function that takes an array of
elements and does the ordering for us programmatically

183
00:14:11,310 --> 00:14:14,629
be really helpful?

184
00:14:14,629 --> 00:14:18,389
And there are other things we could be doing
to make focus more understandable.

185
00:14:18,389 --> 00:14:19,790
Lots more.

186
00:14:19,790 --> 00:14:24,779
What if we had a previous active property
or a history array to track what was previously

187
00:14:24,779 --> 00:14:25,779
focused.

188
00:14:25,779 --> 00:14:26,980
That could be useful.

189
00:14:26,980 --> 00:14:31,990
Or a programmatic way to set an element once
the page was loaded.

190
00:14:31,990 --> 00:14:38,709
That might be nice and there are probably
other things I haven't considered.

191
00:14:38,709 --> 00:14:43,899
All of these functions and properties, they
can make focus so much more useful, so much

192
00:14:43,899 --> 00:14:50,329
more better, we just need the courage to make
the changes.

193
00:14:50,329 --> 00:14:58,170
So let's get some more water.

194
00:14:58,170 --> 00:15:05,709
So like any good developer with a new idea,
I set out to address the shortcomings of focus

195
00:15:05,709 --> 00:15:08,429
by writing a new library.

196
00:15:08,429 --> 00:15:13,379
Obviously I didn't want to try and write my
own isfocusable method, so naturally I did

197
00:15:13,379 --> 00:15:17,779
what we all do on the internet: I stole one.

198
00:15:17,779 --> 00:15:22,739
The tabbable library is written by David Clark
and it has a passable isfocusable method.

199
00:15:22,739 --> 00:15:30,001
But 
it's passable for what I needed to do, so

200
00:15:30,001 --> 00:15:32,470
I used that to get started.

201
00:15:32,470 --> 00:15:39,310
And from there I added a global object called
focusManager.

202
00:15:39,310 --> 00:15:51,209
And I had to ask the question, why isn't this
something browsers natively have?

203
00:15:51,209 --> 00:15:53,929
Isn't this something everyone would want?

204
00:15:53,929 --> 00:15:57,790
Isn't a better focus-system something everyone
deserves?

205
00:15:57,790 --> 00:16:02,370
Surely there must be a way to help everyone.

206
00:16:02,370 --> 00:16:09,019
So let me tell you about how I tried to change
the HTML specification.

207
00:16:09,019 --> 00:16:15,639
First, as most of you may be aware, there
are actually two separate governing bodies

208
00:16:15,639 --> 00:16:19,239
maintaining the HTML standard at the same
time.

209
00:16:19,239 --> 00:16:25,139
We have the W3C and we have the whatwg and
each much them work on the specification at

210
00:16:25,139 --> 00:16:29,569
the same time, independent of each other.

211
00:16:29,569 --> 00:16:33,360
One might think that isn't a good idea and
it really wasn't.

212
00:16:33,360 --> 00:16:44,759
So they signed an agreement to work together,
and they decide that the HTML specification

213
00:16:44,759 --> 00:16:50,669
work is going to be done entirely in the whatwg
and we finally have a single body overseeing

214
00:16:50,669 --> 00:16:57,190
the standard and everyone is super happy,
hurray, cheers, right?

215
00:16:57,190 --> 00:16:58,190
Yeah!

216
00:16:58,190 --> 00:17:05,070
Now, let us say that you can an incredibly
dashing but not super well known or popular

217
00:17:05,070 --> 00:17:17,740
web developer and you want to propose changes
to the HTML standard and you might Google

218
00:17:17,740 --> 00:17:25,079
and surprisingly enough, you might get the
WC3 process document as the first hit.

219
00:17:25,079 --> 00:17:28,559
Yay, that sounds like great fun, right?

220
00:17:28,559 --> 00:17:30,280
It was not.

221
00:17:30,280 --> 00:17:33,020
Seriously it is an awful thing to have to
read.

222
00:17:33,020 --> 00:17:35,880
Never, ever read that document.

223
00:17:35,880 --> 00:17:41,070
But if you were persistent, you might eventually
find something called the web platform incubator

224
00:17:41,070 --> 00:17:43,880
community group or the WICG.

225
00:17:43,880 --> 00:17:53,110
It allows people like you and I to make proposals
so this sounds exactly what you were looking

226
00:17:53,110 --> 00:17:54,110
for, right?

227
00:17:54,110 --> 00:18:02,240
So you write up your idea and you submit it
to the WICG discourse group for discussion.

228
00:18:02,240 --> 00:18:04,690
But things go really slowly.

229
00:18:04,690 --> 00:18:16,580
A few people read it but none of them seem
to care and right about that time

230
00:18:16,580 --> 00:18:26,300
you realize that you need to get your proposal
in front of the whatwg eyeballs.

231
00:18:26,300 --> 00:18:34,170
What you don't realize is both of these processes
have the same fundamental flaw.

232
00:18:34,170 --> 00:18:39,140
The process for submitting the proposal is
pretty easy, but the process for getting anyone

233
00:18:39,140 --> 00:18:45,730
to look at it or consider it for that matter
is incredibly hard.

234
00:18:45,730 --> 00:18:51,850
In order for your proposal to get any kind
of response, you are first required to sell

235
00:18:51,850 --> 00:18:52,850
it.

236
00:18:52,850 --> 00:18:54,900
And not everybody is good at selling.

237
00:18:54,900 --> 00:18:57,970
I am not good at selling.

238
00:18:57,970 --> 00:19:09,530
The whatwg process requires you to find, you
have to convince buyers that your idea is

239
00:19:09,530 --> 00:19:15,990
worthy and that's really hard, especially
if you're an incredibly dashing but not very

240
00:19:15,990 --> 00:19:19,880
popular or well known web developer named
Glen.

241
00:19:19,880 --> 00:19:24,000
So you do what you think is the right thing.

242
00:19:24,000 --> 00:19:27,470
You do what you think is best, and you make
a tweet and you write a few articles and you

243
00:19:27,470 --> 00:19:32,600
post to Reddit and Hacker News, and you promote,
promote, promote, you do literally everything

244
00:19:32,600 --> 00:19:33,650
you can think of.

245
00:19:33,650 --> 00:19:37,260
But still, eyeballs are hard to find.

246
00:19:37,260 --> 00:19:44,390
So you decide to take your idea on the road
and you tell the best developers in the world

247
00:19:44,390 --> 00:19:45,390
about your idea.

248
00:19:45,390 --> 00:19:46,390
Hi, everybody!

249
00:19:46,390 --> 00:19:54,150
I have an idea!
[applause]

250
00:19:54,150 --> 00:19:58,020
And that's called pandering, just in case
anyone is keeping track.

251
00:19:58,020 --> 00:20:02,990
You take a roomful of great minds and you
tell them about the focus traversal API proposal.

252
00:20:02,990 --> 00:20:05,990
This is my proposal to make focus better.

253
00:20:05,990 --> 00:20:09,170
A formal proposal to the HTML specification.

254
00:20:09,170 --> 00:20:20,770
This proposal formally introduces the concepts
of focus traversal.

255
00:20:20,770 --> 00:20:28,310
In the proposal I suggest a set of additions
to move focus forward.

256
00:20:28,310 --> 00:20:33,930
This includes creating the top-level window
property called focus manager and to using

257
00:20:33,930 --> 00:20:38,870
that, to expose a series of properties and
methods for working with focus traversal.

258
00:20:38,870 --> 00:20:44,990
It contains as previously described functions
for determining what is focusable.

259
00:20:44,990 --> 00:20:54,020
Functions for incrementing and decrementing
focus.

260
00:20:54,020 --> 00:21:03,320
This is the proposal that I have submitted
to the WICG and the whatwg and now I'm telling

261
00:21:03,320 --> 00:21:05,580
all of you fine folks about it.

262
00:21:05,580 --> 00:21:11,360
I have even fleshed out my original library
and I've made a working polyfill for the proposal

263
00:21:11,360 --> 00:21:18,390
that you can use today to shim all of these
cool functions into your applications until

264
00:21:18,390 --> 00:21:22,570
we can get an actual implementation in the
browsers.

265
00:21:22,570 --> 00:21:27,660
Unfortunately, though, actual implementation
is a long, long way away.

266
00:21:27,660 --> 00:21:35,760
As I've said, the whatwg process for enacting
change requires you to convince browser manufacturers

267
00:21:35,760 --> 00:21:41,760
on your own that your idea is worthy of your
time and I can count on zero hands the number

268
00:21:41,760 --> 00:21:46,050
of browser manufacturers I know how to talk
to.

269
00:21:46,050 --> 00:21:49,350
But there is hope.

270
00:21:49,350 --> 00:21:51,780
You.

271
00:21:51,780 --> 00:21:53,250
You can help me.

272
00:21:53,250 --> 00:21:59,050
I need people to comment on the proposal,
on the WICG or the whatwg and get involved

273
00:21:59,050 --> 00:22:00,750
in this process.

274
00:22:00,750 --> 00:22:05,400
I need people to download the polyfill and
try it out and find the bugs and help me grow

275
00:22:05,400 --> 00:22:07,510
the code.

276
00:22:07,510 --> 00:22:11,850
I need people to come up with new ideas for
new focus functionality.

277
00:22:11,850 --> 00:22:18,850
I need people to write tests, I need people
to be involved, and I especially need people

278
00:22:18,850 --> 00:22:21,080
to help spread the word.

279
00:22:21,080 --> 00:22:26,392
So to that end, I am going to live tweet from
this talk right now while we stand here, it's

280
00:22:26,392 --> 00:22:31,400
very exciting watching me use my phone in
public.

281
00:22:31,400 --> 00:22:36,860
So I'm going to send this tweet here.

282
00:22:36,860 --> 00:22:38,220
All right.

283
00:22:38,220 --> 00:22:44,880
All right, so that's posted to this address,
and with this text.

284
00:22:44,880 --> 00:22:53,010
And I need all of you to go retweet it and
help spread the word with me.

285
00:22:53,010 --> 00:22:54,500
So it's posted now.

286
00:22:54,500 --> 00:22:58,000
Please do go retweet it.

287
00:22:58,000 --> 00:22:59,360
Spread the word.

288
00:22:59,360 --> 00:23:03,630
Together, and only together, we can make focus
better.

289
00:23:03,630 --> 00:23:08,160
We can make it more powerful, and we can make
it easier for everyone.

290
00:23:08,160 --> 00:23:12,340
And finally, if you are a browser manufacturer,
and this is the best graphic I could come

291
00:23:12,340 --> 00:23:17,480
up with for browser manufacturer, apparently,
if you're a browser manufacturer, or you have

292
00:23:17,480 --> 00:23:24,020
any sway with them, or you know one or you
know how to get in touch with one, come talk

293
00:23:24,020 --> 00:23:25,020
to me.

294
00:23:25,020 --> 00:23:30,150
Let's figure out together how we can all advance
the focus.

295
00:23:30,150 --> 00:23:31,150
That's it.

296
00:23:31,150 --> 00:23:32,630
That's all I had to say on the subject.

297
00:23:32,630 --> 00:23:35,380
Thank you very much for listening, and for
retweeting.

298
00:23:35,380 --> 00:23:41,450
Please go retweet, and I hope to talk to you
all in the coming days about focus or life

299
00:23:41,450 --> 00:23:43,870
or maybe just about really good beer.

300
00:23:43,870 --> 00:23:45,010
So thank you for your focus.

