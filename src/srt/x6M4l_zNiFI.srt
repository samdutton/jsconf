1
00:00:39,379 --> 00:00:44,879

my name is and I'm from PayPal yeah so

2
00:00:44,879 --> 00:00:46,649
if you would like to follow along with a

3
00:00:46,649 --> 00:00:48,809
slice in your own browser just point to

4
00:00:48,809 --> 00:00:52,620
the URL out there yeah

5
00:00:52,620 --> 00:00:55,559
so before I start off giving you a

6
00:00:55,559 --> 00:00:58,499
textbook definition of what we mean by

7
00:00:58,499 --> 00:01:02,190
template specialization I'd like to talk

8
00:01:02,190 --> 00:01:04,680
about what is the problem that we wanted

9
00:01:04,680 --> 00:01:07,469
to solve with this solution in big EEMA

10
00:01:07,469 --> 00:01:10,259
ecommerce sites if you there are like

11
00:01:10,259 --> 00:01:13,670
millions of users lots of products and

12
00:01:13,670 --> 00:01:15,869
different flavors of these products that

13
00:01:15,869 --> 00:01:19,530
we want to provide and these products

14
00:01:19,530 --> 00:01:21,119
may vary with respect to the users

15
00:01:21,119 --> 00:01:24,659
profile itself and so we needed a

16
00:01:24,659 --> 00:01:26,729
mechanism in the framework itself

17
00:01:26,729 --> 00:01:28,619
somehow to do it instead of actually

18
00:01:28,619 --> 00:01:30,119
handling it within the templates and

19
00:01:30,119 --> 00:01:31,619
putting the logic the business logic

20
00:01:31,619 --> 00:01:34,859
inside the templates typical cases we've

21
00:01:34,859 --> 00:01:37,140
had is like in case you want to a be

22
00:01:37,140 --> 00:01:38,520
test inexperienced you have two

23
00:01:38,520 --> 00:01:40,469
different great designs but you don't

24
00:01:40,469 --> 00:01:42,119
know which gets you more signup and

25
00:01:42,119 --> 00:01:45,390
which gets you better adaptation so

26
00:01:45,390 --> 00:01:47,609
that's one case that you would want to

27
00:01:47,609 --> 00:01:51,780
use this another common case is like you

28
00:01:51,780 --> 00:01:54,149
want to adapt your website to different

29
00:01:54,149 --> 00:01:56,159
form factors because your user may be a

30
00:01:56,159 --> 00:01:57,600
person who uses your website on

31
00:01:57,600 --> 00:02:02,880
different form factors and then this we

32
00:02:02,880 --> 00:02:04,560
have a lot in PayPal that I'm not sure

33
00:02:04,560 --> 00:02:05,880
if it's applicable to many other

34
00:02:05,880 --> 00:02:07,679
countries like many other companies but

35
00:02:07,679 --> 00:02:09,450
when you have an e-commerce site that

36
00:02:09,450 --> 00:02:10,979
sells products to different countries

37
00:02:10,979 --> 00:02:12,810
the countries may have some regulations

38
00:02:12,810 --> 00:02:15,150
or they may have some slightly different

39
00:02:15,150 --> 00:02:16,769
expectations of the product so you would

40
00:02:16,769 --> 00:02:17,970
probably want to provide different

41
00:02:17,970 --> 00:02:21,269
flavors of the same site for different

42
00:02:21,269 --> 00:02:24,959
countries a little differently so what

43
00:02:24,959 --> 00:02:27,299
are the solutions that are offered out

44
00:02:27,299 --> 00:02:30,510
in the industry like one very popular

45
00:02:30,510 --> 00:02:32,400
one is responsive adaptive design

46
00:02:32,400 --> 00:02:35,189
responsive being using media queries and

47
00:02:35,189 --> 00:02:37,530
CSS techniques to somehow fit the

48
00:02:37,530 --> 00:02:39,689
website into the viewport based on the

49
00:02:39,689 --> 00:02:42,739
viewport size and adaptive being

50
00:02:42,739 --> 00:02:44,970
providing a very specific design for a

51
00:02:44,970 --> 00:02:49,290
very specific device yeah and other

52
00:02:49,290 --> 00:02:51,510
techniques are like not long ago many

53
00:02:51,510 --> 00:02:53,489
companies used to have like their mobile

54
00:02:53,489 --> 00:02:54,959
site completely hosted on a different

55
00:02:54,959 --> 00:02:58,530
domain or even if you want to have two

56
00:02:58,530 --> 00:02:59,879
different experiences you would probably

57
00:02:59,879 --> 00:03:01,230
host them on two different routes and

58
00:03:01,230 --> 00:03:03,810
redirect and based on the users what

59
00:03:03,810 --> 00:03:05,609
experiment or what segmentation is

60
00:03:05,609 --> 00:03:07,859
turned on on to that user and more

61
00:03:07,859 --> 00:03:09,329
recently there's a really popular

62
00:03:09,329 --> 00:03:12,420
technique called rest and what what it

63
00:03:12,420 --> 00:03:14,939
is is basically responsive server-side

64
00:03:14,939 --> 00:03:17,670
components and what this does is like it

65
00:03:17,670 --> 00:03:19,919
takes the advantage of using something

66
00:03:19,919 --> 00:03:21,690
like worthless value find out what

67
00:03:21,690 --> 00:03:23,910
device it is and for certain devices you

68
00:03:23,910 --> 00:03:26,430
kind of like turn on a completely

69
00:03:26,430 --> 00:03:29,180
different design but use it as a hybrid

70
00:03:29,180 --> 00:03:32,129
model with responsive on the front end

71
00:03:32,129 --> 00:03:34,590
to also adjust according to the viewport

72
00:03:34,590 --> 00:03:35,819
sizes for example you could have a

73
00:03:35,819 --> 00:03:37,440
different experience on the website like

74
00:03:37,440 --> 00:03:41,220
on the desktop but from a tablet on you

75
00:03:41,220 --> 00:03:42,419
probably want to have a completely

76
00:03:42,419 --> 00:03:44,579
different layout but you still want to

77
00:03:44,579 --> 00:03:47,040
adjust it as the viewport size decreases

78
00:03:47,040 --> 00:03:52,049
from tablet on so this brings us to the

79
00:03:52,049 --> 00:03:53,310
question of what is template

80
00:03:53,310 --> 00:03:56,790
specialization then tech I would give

81
00:03:56,790 --> 00:03:58,709
the definition as like dynamically

82
00:03:58,709 --> 00:04:01,829
switching partials in your view based on

83
00:04:01,829 --> 00:04:05,220
the context at render time like at that

84
00:04:05,220 --> 00:04:06,930
point you know what the users

85
00:04:06,930 --> 00:04:09,810
information for that request is and you

86
00:04:09,810 --> 00:04:12,659
know for that you sets a set a bunch of

87
00:04:12,659 --> 00:04:14,430
rules to figure out for that rules

88
00:04:14,430 --> 00:04:16,109
what is the template you want to render

89
00:04:16,109 --> 00:04:18,690
and then based on that you decide so

90
00:04:18,690 --> 00:04:20,459
this could be at some levels thought of

91
00:04:20,459 --> 00:04:22,680
as a rest technique because it is using

92
00:04:22,680 --> 00:04:25,770
some information on the server side to

93
00:04:25,770 --> 00:04:28,409
decide what is the base view you want

94
00:04:28,409 --> 00:04:29,009
render

95
00:04:29,009 --> 00:04:30,960
and then from there on you could just

96
00:04:30,960 --> 00:04:32,999
render in response let me make it

97
00:04:32,999 --> 00:04:36,809
responsive on the front end so how does

98
00:04:36,809 --> 00:04:41,039
it work one the first thing as you would

99
00:04:41,039 --> 00:04:43,110
probably have a bunch of rules that you

100
00:04:43,110 --> 00:04:45,419
specified to figure out how you want to

101
00:04:45,419 --> 00:04:47,639
resolve the templates on based on what

102
00:04:47,639 --> 00:04:49,770
rules so there'll be like a bunch of

103
00:04:49,770 --> 00:04:51,930
rules that you specify upfront and then

104
00:04:51,930 --> 00:04:53,969
at render time you use these rules and

105
00:04:53,969 --> 00:04:55,680
you use the context information and then

106
00:04:55,680 --> 00:04:58,529
resolve for every partial what is if if

107
00:04:58,529 --> 00:05:02,059
and what partial you need to map them to

108
00:05:02,059 --> 00:05:05,669
so the genesis of this idea are like we

109
00:05:05,669 --> 00:05:09,569
in PayPal let me take a step back and

110
00:05:09,569 --> 00:05:11,729
give you a history in the past 1 and 1/2

111
00:05:11,729 --> 00:05:14,129
years we moved to doing our entire app

112
00:05:14,129 --> 00:05:17,189
stack in nodejs in JavaScript

113
00:05:17,189 --> 00:05:21,809
so we built a thin bootstrapping

114
00:05:21,809 --> 00:05:24,240
framework on top of Express apps to

115
00:05:24,240 --> 00:05:26,039
provide some structure and convention

116
00:05:26,039 --> 00:05:29,849
and some interesting ideas that came out

117
00:05:29,849 --> 00:05:32,279
of like the design for Kraken is what

118
00:05:32,279 --> 00:05:35,189
actually is an inspiration for how the

119
00:05:35,189 --> 00:05:36,870
template specialization has been built

120
00:05:36,870 --> 00:05:39,149
so I would like to take a quick bit over

121
00:05:39,149 --> 00:05:40,919
to crack and this is not the stock was

122
00:05:40,919 --> 00:05:42,539
not supposed to focus on Kraken itself

123
00:05:42,539 --> 00:05:44,159
if you have if you are interested in

124
00:05:44,159 --> 00:05:46,490
knowing more please hit that link

125
00:05:46,490 --> 00:05:50,029
so what kraken provides is like a nice

126
00:05:50,029 --> 00:05:52,289
thin boost bootstrapping

127
00:05:52,289 --> 00:05:55,439
abstraction on top of express you would

128
00:05:55,439 --> 00:05:57,360
throw it like configs at the conflict

129
00:05:57,360 --> 00:05:59,309
it's a very conflict even approach where

130
00:05:59,309 --> 00:06:02,849
you could have like the set up for your

131
00:06:02,849 --> 00:06:04,889
express apps specified in the form of a

132
00:06:04,889 --> 00:06:06,809
config or you could have like

133
00:06:06,809 --> 00:06:09,149
environment are there configurations to

134
00:06:09,149 --> 00:06:11,580
do different things on different modes

135
00:06:11,580 --> 00:06:13,139
for example in dev board you may want to

136
00:06:13,139 --> 00:06:14,550
do something else and prod mode you want

137
00:06:14,550 --> 00:06:16,559
to do something else and also to set up

138
00:06:16,559 --> 00:06:18,749
your middle that chain not only just to

139
00:06:18,749 --> 00:06:20,459
set up the middle version also to figure

140
00:06:20,459 --> 00:06:22,740
out what order you want to insert these

141
00:06:22,740 --> 00:06:25,169
little bar in the middle that chain so

142
00:06:25,169 --> 00:06:27,990
it's a very nice conflict driven

143
00:06:27,990 --> 00:06:30,169
approach to setting up your app and

144
00:06:30,169 --> 00:06:34,430
hence was born the specialization logic

145
00:06:34,430 --> 00:06:36,779
ended up writing a very simple rule

146
00:06:36,779 --> 00:06:39,880
parser Kolkata and

147
00:06:39,880 --> 00:06:42,010
this is basically you would specify a

148
00:06:42,010 --> 00:06:45,340
simple JSON config of what are the rules

149
00:06:45,340 --> 00:06:48,840
and what you want the rules to result to

150
00:06:48,840 --> 00:06:51,550
when the context information matches

151
00:06:51,550 --> 00:06:53,800
these rules so given a set of rules and

152
00:06:53,800 --> 00:06:57,130
facts if an manage results you will get

153
00:06:57,130 --> 00:06:59,670
the correct templates picked up and

154
00:06:59,670 --> 00:07:02,350
these rules are really in a very simple

155
00:07:02,350 --> 00:07:06,060
JSON format which is what you see here

156
00:07:06,060 --> 00:07:08,290
so you would see that the gun is very

157
00:07:08,290 --> 00:07:10,510
simple you have in this and a rent class

158
00:07:10,510 --> 00:07:13,150
what it means is like for maps to bar

159
00:07:13,150 --> 00:07:16,570
when the bunch of rules in there match

160
00:07:16,570 --> 00:07:20,560
with the context so how would you use

161
00:07:20,560 --> 00:07:22,810
this to generate the map actually if you

162
00:07:22,810 --> 00:07:25,030
look at it it really isn't specific to a

163
00:07:25,030 --> 00:07:26,740
template specialization it's just a rule

164
00:07:26,740 --> 00:07:29,380
parser but we use this rule Casa and

165
00:07:29,380 --> 00:07:31,690
conjunction to do that specialization

166
00:07:31,690 --> 00:07:34,000
itself so how you would do is like

167
00:07:34,000 --> 00:07:35,800
require the module require the conflict

168
00:07:35,800 --> 00:07:38,560
that you just specified and then you

169
00:07:38,560 --> 00:07:41,680
create a rule parser the specialization

170
00:07:41,680 --> 00:07:44,020
of specialized an object that you see

171
00:07:44,020 --> 00:07:46,420
that and the specialized object right

172
00:07:46,420 --> 00:07:49,450
exposes two different methods that's

173
00:07:49,450 --> 00:07:51,820
resolved and resolved ah so you could

174
00:07:51,820 --> 00:07:53,680
either resolve one template at a time or

175
00:07:53,680 --> 00:07:56,890
you could just resolve the whole set of

176
00:07:56,890 --> 00:07:58,990
rules that against the context a set of

177
00:07:58,990 --> 00:08:03,160
rules that you just specified so let's

178
00:08:03,160 --> 00:08:06,280
see how we use it alongside Express apps

179
00:08:06,280 --> 00:08:16,220
for template specialization

180
00:08:16,230 --> 00:08:19,000
I'm just going to show a touch late on

181
00:08:19,000 --> 00:08:21,130
key parts in the Express app that you

182
00:08:21,130 --> 00:08:22,710
would want to like watch out for like to

183
00:08:22,710 --> 00:08:25,690
implement this so this if you look at it

184
00:08:25,690 --> 00:08:29,080
is like a simple JSON config what it's

185
00:08:29,080 --> 00:08:31,240
saying is not a partial called body to

186
00:08:31,240 --> 00:08:34,180
something body ex-porn when like say an

187
00:08:34,180 --> 00:08:36,669
experiment is turned on and not the

188
00:08:36,669 --> 00:08:39,039
partial extra to something else when the

189
00:08:39,039 --> 00:08:41,789
country is either UK or D or France and

190
00:08:41,789 --> 00:08:44,020
then you have another partial right

191
00:08:44,020 --> 00:08:45,820
panel which maps to something else when

192
00:08:45,820 --> 00:08:47,440
the rule is though the rules are

193
00:08:47,440 --> 00:08:49,630
satisfied like experimenters x1 as well

194
00:08:49,630 --> 00:08:51,340
as extra has something called coupons

195
00:08:51,340 --> 00:08:58,660
it's as simple as that and then you

196
00:08:58,660 --> 00:09:06,280
would have I wanted to show so if you

197
00:09:06,280 --> 00:09:07,840
look at the template itself is a dust

198
00:09:07,840 --> 00:09:10,150
template there are three partials here

199
00:09:10,150 --> 00:09:12,130
in body which has header body and footer

200
00:09:12,130 --> 00:09:14,260
we just saw that body is actually

201
00:09:14,260 --> 00:09:18,420
specialized for certain certain context

202
00:09:18,420 --> 00:09:21,550
information so certain rules but you

203
00:09:21,550 --> 00:09:23,680
keep your template really clean by

204
00:09:23,680 --> 00:09:24,880
actually you doing kind of

205
00:09:24,880 --> 00:09:28,450
specialization because you don't put the

206
00:09:28,450 --> 00:09:29,710
business logic in the template itself

207
00:09:29,710 --> 00:09:32,560
and it's actually handled for you by at

208
00:09:32,560 --> 00:09:34,120
render time it'll just get picked up

209
00:09:34,120 --> 00:09:35,890
from the config and then it'll get

210
00:09:35,890 --> 00:09:38,350
inserted and switched in underneath in

211
00:09:38,350 --> 00:09:40,080
the rendering workflow

212
00:09:40,080 --> 00:09:50,160
similarly sorry about that

213
00:09:50,170 --> 00:09:53,260
if you look at body for example body

214
00:09:53,260 --> 00:09:55,390
also has right panels which are

215
00:09:55,390 --> 00:09:56,830
specialized but you don't put any

216
00:09:56,830 --> 00:09:58,840
business logic in your templates at

217
00:09:58,840 --> 00:10:00,700
render time it'll take the context

218
00:10:00,700 --> 00:10:02,020
information and figure out if it needs

219
00:10:02,020 --> 00:10:06,040
to be switched out or not so let's take

220
00:10:06,040 --> 00:10:09,040
a quick look at the app itself I'm not

221
00:10:09,040 --> 00:10:12,310
planning on going over every line of the

222
00:10:12,310 --> 00:10:13,960
ad but I wanted to show a tossed light

223
00:10:13,960 --> 00:10:20,180
on what I'm doing to actually specialize

224
00:10:20,190 --> 00:10:23,200
so this it's a very simple app you can

225
00:10:23,200 --> 00:10:24,790
see that all it does is create an

226
00:10:24,790 --> 00:10:27,610
Express app include the specialization

227
00:10:27,610 --> 00:10:28,840
rules that I just showed you in a

228
00:10:28,840 --> 00:10:30,820
different config and since I'm using

229
00:10:30,820 --> 00:10:33,700
dust I'm actually including dust chairs

230
00:10:33,700 --> 00:10:37,510
LinkedIn module and then creating a rule

231
00:10:37,510 --> 00:10:40,630
parser instance which I'll use later on

232
00:10:40,630 --> 00:10:42,430
to generate the math when I have the

233
00:10:42,430 --> 00:10:44,860
context information and this is just

234
00:10:44,860 --> 00:10:46,930
simple stuff I'm just setting up session

235
00:10:46,930 --> 00:10:50,400
I'm just setting up serving static

236
00:10:50,400 --> 00:10:52,810
telling it what is the parts to the

237
00:10:52,810 --> 00:10:54,430
templates and what a new engine I'm

238
00:10:54,430 --> 00:10:58,150
going to use so this is the part that I

239
00:10:58,150 --> 00:11:00,970
would like to talk more about so where

240
00:11:00,970 --> 00:11:03,010
you would actually intercept and

241
00:11:03,010 --> 00:11:05,170
specialize there's venue where you feed

242
00:11:05,170 --> 00:11:07,510
the app engine function into this

243
00:11:07,510 --> 00:11:11,470
Express app so generally what happens is

244
00:11:11,470 --> 00:11:13,750
you just get the view engine function

245
00:11:13,750 --> 00:11:16,300
from consolidate or whatever module you

246
00:11:16,300 --> 00:11:17,800
are using whatever templating engine

247
00:11:17,800 --> 00:11:20,080
you're using and then you would just

248
00:11:20,080 --> 00:11:22,420
that would automatically look up the

249
00:11:22,420 --> 00:11:23,950
templates and do the processing

250
00:11:23,950 --> 00:11:25,630
compilation of the templates and render

251
00:11:25,630 --> 00:11:28,210
it so this is a plug this is a point you

252
00:11:28,210 --> 00:11:29,650
want to actually intercept and do

253
00:11:29,650 --> 00:11:31,030
whatever you want to do to actually

254
00:11:31,030 --> 00:11:33,580
specialize your templates so what I have

255
00:11:33,580 --> 00:11:35,440
like a three-step recipe that I tell

256
00:11:35,440 --> 00:11:38,170
myself is a right way to do this the

257
00:11:38,170 --> 00:11:39,790
first thing is what you want to do is

258
00:11:39,790 --> 00:11:42,310
wrap your engine function so that you

259
00:11:42,310 --> 00:11:44,530
can intercept before the actual

260
00:11:44,530 --> 00:11:46,210
rendering and compilation of the

261
00:11:46,210 --> 00:11:48,370
templates actually happen the second

262
00:11:48,370 --> 00:11:51,130
step is when the render happens you get

263
00:11:51,130 --> 00:11:54,400
called into your rot function and there

264
00:11:54,400 --> 00:11:56,200
you already have the context information

265
00:11:56,200 --> 00:11:58,810
super so now you have the two pieces of

266
00:11:58,810 --> 00:12:00,040
information that you need to actually

267
00:12:00,040 --> 00:12:02,560
specialize which is a context

268
00:12:02,560 --> 00:12:04,420
and the rules that you already specified

269
00:12:04,420 --> 00:12:07,390
so you have a specialized er which is

270
00:12:07,390 --> 00:12:10,000
the rule parser which already has been

271
00:12:10,000 --> 00:12:12,430
set up with the config rules config that

272
00:12:12,430 --> 00:12:14,740
you just wrote in your app and now you

273
00:12:14,740 --> 00:12:16,720
have the context information all you

274
00:12:16,720 --> 00:12:18,820
need to do is generate that map saying

275
00:12:18,820 --> 00:12:20,740
here in solve all and give me the JSON

276
00:12:20,740 --> 00:12:22,180
object of all the template mappings that

277
00:12:22,180 --> 00:12:24,520
need to happen and now once you have

278
00:12:24,520 --> 00:12:26,890
that you can stash it back into the

279
00:12:26,890 --> 00:12:29,710
context itself great so now you have the

280
00:12:29,710 --> 00:12:33,400
map generated the next step is you want

281
00:12:33,400 --> 00:12:35,980
to somehow get notified right before

282
00:12:35,980 --> 00:12:38,860
every partial gets rendered that you

283
00:12:38,860 --> 00:12:40,960
want to check if that's a mapping that

284
00:12:40,960 --> 00:12:42,580
needs to happen like a switch that needs

285
00:12:42,580 --> 00:12:45,130
to happen or not so for that dust gives

286
00:12:45,130 --> 00:12:49,240
a nice hook to do that which is called

287
00:12:49,240 --> 00:12:51,550
dust or onload so if you implement dust

288
00:12:51,550 --> 00:12:54,360
or onload you will get called into that

289
00:12:54,360 --> 00:12:57,400
function if the template is not found in

290
00:12:57,400 --> 00:13:00,790
the cache so in my case I actually

291
00:13:00,790 --> 00:13:03,580
deliberately enabled cache to false when

292
00:13:03,580 --> 00:13:07,540
I set up the engine function so I will

293
00:13:07,540 --> 00:13:11,110
get called on every every partial that

294
00:13:11,110 --> 00:13:14,200
will get rendered so you may ask hey if

295
00:13:14,200 --> 00:13:15,850
if the cache is disabled isn't that a

296
00:13:15,850 --> 00:13:17,770
bad thing so what we do is we in paper

297
00:13:17,770 --> 00:13:19,600
the kind of internet our own custom

298
00:13:19,600 --> 00:13:21,400
cache if we want to do this sort of

299
00:13:21,400 --> 00:13:24,100
massaging before we actually render the

300
00:13:24,100 --> 00:13:28,540
templates yeah so now we have dust

301
00:13:28,540 --> 00:13:30,820
calling in to me like in to my app

302
00:13:30,820 --> 00:13:33,730
before any partial in my view gets

303
00:13:33,730 --> 00:13:36,010
rendered at this point I had the context

304
00:13:36,010 --> 00:13:37,270
the context already has the

305
00:13:37,270 --> 00:13:39,040
specialization map for that specific

306
00:13:39,040 --> 00:13:41,800
context so great so I have all the

307
00:13:41,800 --> 00:13:43,540
information that I need to check if

308
00:13:43,540 --> 00:13:45,339
before the partial gets rendered if I

309
00:13:45,339 --> 00:13:46,990
need to map it to something else or not

310
00:13:46,990 --> 00:13:50,620
so you would see that what all I'm doing

311
00:13:50,620 --> 00:13:53,020
is getting figuring out if that needs a

312
00:13:53,020 --> 00:13:54,400
mapping to a different template I have

313
00:13:54,400 --> 00:13:56,560
the name of the template the context and

314
00:13:56,560 --> 00:13:59,110
the context has the specialization not

315
00:13:59,110 --> 00:14:01,720
itself generated so at this point what I

316
00:14:01,720 --> 00:14:03,310
do is like I figure out if needs

317
00:14:03,310 --> 00:14:06,010
switching sneekly switch it underneath

318
00:14:06,010 --> 00:14:08,440
and then read the file and then pass

319
00:14:08,440 --> 00:14:10,360
back the data and from there on the

320
00:14:10,360 --> 00:14:12,670
rendering workflow is the exact same as

321
00:14:12,670 --> 00:14:15,950
what you would have before so

322
00:14:15,950 --> 00:14:17,810
that's the three things that you would

323
00:14:17,810 --> 00:14:19,580
have to do if you want to do something

324
00:14:19,580 --> 00:14:23,870
like this rest of the app is pretty

325
00:14:23,870 --> 00:14:24,350
simple

326
00:14:24,350 --> 00:14:25,790
like generally if you want to set the

327
00:14:25,790 --> 00:14:28,160
context information it would let's say

328
00:14:28,160 --> 00:14:29,960
you were trying to trying an experiment

329
00:14:29,960 --> 00:14:31,400
on two different experiences you would

330
00:14:31,400 --> 00:14:33,530
probably have that information come from

331
00:14:33,530 --> 00:14:36,590
some experimentation platform or some

332
00:14:36,590 --> 00:14:38,870
sort of that'll be a segmentation of

333
00:14:38,870 --> 00:14:40,820
users who get some set of experiences

334
00:14:40,820 --> 00:14:42,950
against other in this case I'm just

335
00:14:42,950 --> 00:14:46,250
going to demo something close to real so

336
00:14:46,250 --> 00:14:48,380
I'm just going going to set the context

337
00:14:48,380 --> 00:15:08,040
from the using this route so demo time

338
00:15:08,050 --> 00:15:10,629
so you'd see that what I have here is

339
00:15:10,629 --> 00:15:13,420
like a really simple demo the view has a

340
00:15:13,420 --> 00:15:17,649
header or footer signup form and then

341
00:15:17,649 --> 00:15:20,259
some content in the center and then some

342
00:15:20,259 --> 00:15:22,329
sort of feed newsfeed on the right side

343
00:15:22,329 --> 00:15:25,329
so the menu you'd see is like a tabbed

344
00:15:25,329 --> 00:15:28,839
menu let's say I want this view to be I

345
00:15:28,839 --> 00:15:30,579
want to experiment the exact same

346
00:15:30,579 --> 00:15:32,649
information in a different sort of

347
00:15:32,649 --> 00:15:35,350
layout I all I would have to do is like

348
00:15:35,350 --> 00:15:39,399
set an experiment on it you earlier saw

349
00:15:39,399 --> 00:15:41,470
that in my specialization config

350
00:15:41,470 --> 00:15:43,929
whenever experiment has turned onto x1

351
00:15:43,929 --> 00:15:45,759
it has a different fashion mapping for

352
00:15:45,759 --> 00:15:48,249
like a body fashion so you see that

353
00:15:48,249 --> 00:15:52,720
automatically it gets rearranged to a

354
00:15:52,720 --> 00:15:55,179
different sort of experience tab menu

355
00:15:55,179 --> 00:15:57,489
now becomes a stacked menu and then

356
00:15:57,489 --> 00:15:59,619
there's a content and the login form

357
00:15:59,619 --> 00:16:02,110
actually gets rearranged differently so

358
00:16:02,110 --> 00:16:03,879
let's assume that this is a different

359
00:16:03,879 --> 00:16:05,290
experience that you want to test out to

360
00:16:05,290 --> 00:16:08,170
see which gets better sign up on your

361
00:16:08,170 --> 00:16:12,879
site let's say that once you have

362
00:16:12,879 --> 00:16:14,439
segmented your users between like

363
00:16:14,439 --> 00:16:17,579
experiment 1 and non experiment 1

364
00:16:17,579 --> 00:16:20,110
experiences you want to further segment

365
00:16:20,110 --> 00:16:22,059
it for some other rows let's say you

366
00:16:22,059 --> 00:16:26,649
want to have coupons show up in case of

367
00:16:26,649 --> 00:16:33,970
experiment 1 is enabled in that case you

368
00:16:33,970 --> 00:16:37,660
see that it just setting us extra config

369
00:16:37,660 --> 00:16:40,420
in extra information in the context

370
00:16:40,420 --> 00:16:43,569
automatically showed the coupon on the

371
00:16:43,569 --> 00:16:46,899
right side so it can you can easily set

372
00:16:46,899 --> 00:16:48,610
values in your context and enable

373
00:16:48,610 --> 00:16:50,350
different sorts of layout without having

374
00:16:50,350 --> 00:16:54,129
to touch any of your actual without

375
00:16:54,129 --> 00:16:56,049
having to have enough extra business

376
00:16:56,049 --> 00:16:59,259
logic in the templates themselves let's

377
00:16:59,259 --> 00:17:01,869
say like I want to have my signup forms

378
00:17:01,869 --> 00:17:04,539
differs for some countries as opposed to

379
00:17:04,539 --> 00:17:07,240
another so I'm going to set the country

380
00:17:07,240 --> 00:17:10,029
to UK and you'd see that let's say UK

381
00:17:10,029 --> 00:17:12,069
needs extra information if you want to

382
00:17:12,069 --> 00:17:13,870
sign up you want to probably give a

383
00:17:13,870 --> 00:17:15,610
recovery number like you want to enter a

384
00:17:15,610 --> 00:17:18,549
CAPTCHA you can easily like map that

385
00:17:18,549 --> 00:17:20,529
specific partial to something else to

386
00:17:20,529 --> 00:17:22,060
give show something else

387
00:17:22,060 --> 00:17:24,850
different countries and you can now I've

388
00:17:24,850 --> 00:17:26,170
demoed like there are different three

389
00:17:26,170 --> 00:17:28,060
different vectors of information that

390
00:17:28,060 --> 00:17:30,910
are used to decide what is shown in the

391
00:17:30,910 --> 00:17:33,100
view right like they're all they're all

392
00:17:33,100 --> 00:17:34,540
kind of independent of each other let's

393
00:17:34,540 --> 00:17:37,090
say I want to have UK users also to have

394
00:17:37,090 --> 00:17:39,550
both segmented with both experience one

395
00:17:39,550 --> 00:17:41,500
and non experience one you can easily do

396
00:17:41,500 --> 00:17:43,000
that as well

397
00:17:43,000 --> 00:17:47,530
by setting experiment to not expand so

398
00:17:47,530 --> 00:17:49,270
you have the specialization for the

399
00:17:49,270 --> 00:17:52,620
country still but you get the benefit of

400
00:17:52,620 --> 00:17:55,090
segmenting users for two different kinds

401
00:17:55,090 --> 00:17:59,320
of experiences so this is what I wanted

402
00:17:59,320 --> 00:18:01,840
to this is like a sum total of what

403
00:18:01,840 --> 00:18:09,190
template specialization this so going

404
00:18:09,190 --> 00:18:11,980
back so the rule pasta itself until now

405
00:18:11,980 --> 00:18:14,170
I've just shown like really simple rules

406
00:18:14,170 --> 00:18:16,390
that can be config actually the rule

407
00:18:16,390 --> 00:18:18,730
parser has more capabilities I'm just

408
00:18:18,730 --> 00:18:20,170
going to quickly go over what other

409
00:18:20,170 --> 00:18:22,180
possibilities you can do with that rule

410
00:18:22,180 --> 00:18:24,760
parser caca you can see that you can

411
00:18:24,760 --> 00:18:26,260
specify multiple options like for

412
00:18:26,260 --> 00:18:28,690
example in can either not to yang or BOM

413
00:18:28,690 --> 00:18:30,970
depending on what sort of what are the

414
00:18:30,970 --> 00:18:33,070
set of rules it satisfies this is kind

415
00:18:33,070 --> 00:18:35,020
of like a switch case mentality so which

416
00:18:35,020 --> 00:18:38,170
whichever one wins first gets to be the

417
00:18:38,170 --> 00:18:40,870
one that gets mapped to so if the state

418
00:18:40,870 --> 00:18:42,520
of mind becomes peaceful that gets

419
00:18:42,520 --> 00:18:46,960
satisfied that that wins first the next

420
00:18:46,960 --> 00:18:49,030
is you can specify multiple rules like

421
00:18:49,030 --> 00:18:51,670
en gets mapped in yang if three

422
00:18:51,670 --> 00:18:54,160
different rules are satisfied so that's

423
00:18:54,160 --> 00:18:57,310
one option then you can have multiple

424
00:18:57,310 --> 00:18:59,590
values for a rule where mood can be

425
00:18:59,590 --> 00:19:02,050
either happy or related or ecstatic or

426
00:19:02,050 --> 00:19:05,080
the state of body could be like should

427
00:19:05,080 --> 00:19:07,360
have active and walking or energetic law

428
00:19:07,360 --> 00:19:08,590
so you have different ways of

429
00:19:08,590 --> 00:19:12,160
communicating your rules or let's say

430
00:19:12,160 --> 00:19:13,840
you have a rule where it's not just

431
00:19:13,840 --> 00:19:15,520
about comparison of values but you

432
00:19:15,520 --> 00:19:17,290
actually want to do some math on the

433
00:19:17,290 --> 00:19:19,000
context information or you want to do

434
00:19:19,000 --> 00:19:21,400
some date/time manipulation or let's say

435
00:19:21,400 --> 00:19:23,050
you want to do some regular expression

436
00:19:23,050 --> 00:19:25,120
comparison you could all you can do is

437
00:19:25,120 --> 00:19:26,200
like you don't even have to specify the

438
00:19:26,200 --> 00:19:28,600
rules you can implement the evaluation

439
00:19:28,600 --> 00:19:31,930
function yourself and it will what it

440
00:19:31,930 --> 00:19:33,460
will do is it will give you the context

441
00:19:33,460 --> 00:19:35,830
and the rules config you can do the

442
00:19:35,830 --> 00:19:37,659
process of evaluating whether it matches

443
00:19:37,659 --> 00:19:44,710
or not so summing up what's the recipe

444
00:19:44,710 --> 00:19:46,630
there's just three steps to doing

445
00:19:46,630 --> 00:19:48,970
template specialization take the engine

446
00:19:48,970 --> 00:19:51,640
function wrap it so that you can insert

447
00:19:51,640 --> 00:19:53,140
whatever you want to do at the time of

448
00:19:53,140 --> 00:19:56,049
friendo second step at the time of

449
00:19:56,049 --> 00:19:57,850
render you have the context and the

450
00:19:57,850 --> 00:19:59,950
rules you can just resolve them into

451
00:19:59,950 --> 00:20:01,419
attempted map use your favorite rule

452
00:20:01,419 --> 00:20:03,519
path so it doesn't have to be what I

453
00:20:03,519 --> 00:20:06,789
just showed you caca third once you have

454
00:20:06,789 --> 00:20:08,740
start generated the map and stashed it

455
00:20:08,740 --> 00:20:10,720
back in the context figure out if you're

456
00:20:10,720 --> 00:20:13,559
templating engine of your choice has the

457
00:20:13,559 --> 00:20:16,450
hook for you to like figure out if it

458
00:20:16,450 --> 00:20:18,429
actually has a way to tell you all the

459
00:20:18,429 --> 00:20:20,230
templates that need to be rendered or

460
00:20:20,230 --> 00:20:21,549
the partials that need to be rendered in

461
00:20:21,549 --> 00:20:24,100
your view now map it against I mean

462
00:20:24,100 --> 00:20:25,570
compare it against the map that you just

463
00:20:25,570 --> 00:20:27,549
generated figure out which ones need to

464
00:20:27,549 --> 00:20:29,769
be mapped or something else and yes you

465
00:20:29,769 --> 00:20:31,269
have there you have it there all you

466
00:20:31,269 --> 00:20:32,950
need to do is like once you switch it

467
00:20:32,950 --> 00:20:34,720
pass it back into the rendering workflow

468
00:20:34,720 --> 00:20:37,870
you will have it switched on runtime so

469
00:20:37,870 --> 00:20:40,919
on that's about all I wanted to say

470
00:20:40,919 --> 00:20:44,019
thank you for listening on a parallel

471
00:20:44,019 --> 00:20:46,929
note not completely related but I just

472
00:20:46,929 --> 00:20:50,230
mentioned that PayPal is hiring big time

473
00:20:50,230 --> 00:20:53,649
because we are moving to note completely

474
00:20:53,649 --> 00:20:57,610
JavaScript on our app stack so please

475
00:20:57,610 --> 00:20:59,230
come and talk to us we have a bunch of

476
00:20:59,230 --> 00:21:01,600
enthusiastic faces here we want to talk

477
00:21:01,600 --> 00:21:03,730
to you about what we're doing in PayPal

478
00:21:03,730 --> 00:21:05,679
and want to listen to all the exciting

479
00:21:05,679 --> 00:21:06,970
things they are doing in JavaScript

