1
00:00:37,420 --> 00:00:39,379

okay so today we're going to be talking

2
00:00:39,379 --> 00:00:41,300
about composing front-end web

3
00:00:41,300 --> 00:00:46,309
applications with montage jas so i'm

4
00:00:46,309 --> 00:00:49,550
ryan paul i work for montage studio in

5
00:00:49,550 --> 00:00:52,730
developer relations and i'm a front-end

6
00:00:52,730 --> 00:00:58,100
app developer so back in the day like

7
00:00:58,100 --> 00:01:00,800
1801 there's an inventor named Eli

8
00:01:00,800 --> 00:01:02,539
Whitney he's best known for creating the

9
00:01:02,539 --> 00:01:05,659
cotton gin but he was also a gun

10
00:01:05,659 --> 00:01:08,360
manufacturer and he's one of the

11
00:01:08,360 --> 00:01:11,720
pioneers of interchangeable parts he had

12
00:01:11,720 --> 00:01:13,759
a contract to produce rifles for

13
00:01:13,759 --> 00:01:15,920
Congress and they were investing heavily

14
00:01:15,920 --> 00:01:18,189
in you know advanced production

15
00:01:18,189 --> 00:01:20,090
mechanisms that would allow them to get

16
00:01:20,090 --> 00:01:22,970
more output so at one point they hadn't

17
00:01:22,970 --> 00:01:26,210
give a presentation for for the military

18
00:01:26,210 --> 00:01:28,880
in Congress to show what had been

19
00:01:28,880 --> 00:01:31,430
working on and what he did is he took a

20
00:01:31,430 --> 00:01:33,770
bunch of rifles that he had manufactured

21
00:01:33,770 --> 00:01:36,320
he disassembled them on the spot and he

22
00:01:36,320 --> 00:01:38,329
put all the like parts together so you

23
00:01:38,329 --> 00:01:40,189
have you know all of this component in

24
00:01:40,189 --> 00:01:41,570
one basket all of that component in

25
00:01:41,570 --> 00:01:43,369
another basket and then he proceeded to

26
00:01:43,369 --> 00:01:45,829
assemble rifles from the disassembled

27
00:01:45,829 --> 00:01:48,320
parts essentially mixing the components

28
00:01:48,320 --> 00:01:49,939
from previous rifles to build new ones

29
00:01:49,939 --> 00:01:52,640
and it was unprecedented I mean people

30
00:01:52,640 --> 00:01:54,500
had had this idea that you could do that

31
00:01:54,500 --> 00:01:56,240
but nobody had actually done it at

32
00:01:56,240 --> 00:01:58,909
manufacturing scale before and it was

33
00:01:58,909 --> 00:02:00,350
considered one of the milestones that

34
00:02:00,350 --> 00:02:01,789
that brought the Industrial Revolution

35
00:02:01,789 --> 00:02:04,100
to the United States when you have

36
00:02:04,100 --> 00:02:06,920
interchangeable parts you can simplify

37
00:02:06,920 --> 00:02:09,729
manufacturing increase repairability and

38
00:02:09,729 --> 00:02:14,010
generally reduce all of your costs

39
00:02:14,020 --> 00:02:17,290
so in the 60s there was another pioneer

40
00:02:17,290 --> 00:02:20,830
a software pioneer Doug McElroy and he

41
00:02:20,830 --> 00:02:24,940
gave a presentation for the NATO Science

42
00:02:24,940 --> 00:02:28,180
Committee and he had a new take on this

43
00:02:28,180 --> 00:02:31,360
old idea of you know industrial

44
00:02:31,360 --> 00:02:34,120
manufacturing he wanted mass-produced

45
00:02:34,120 --> 00:02:36,580
software components that would allow

46
00:02:36,580 --> 00:02:38,320
developers to take an assembly line

47
00:02:38,320 --> 00:02:40,770
approach to software development

48
00:02:40,770 --> 00:02:43,420
effectively building applications by

49
00:02:43,420 --> 00:02:47,890
piecing together existing parts so here

50
00:02:47,890 --> 00:02:49,860
we have mr. Pugsley at the assembly line

51
00:02:49,860 --> 00:02:53,980
illustrate that point but you know this

52
00:02:53,980 --> 00:02:55,900
is a really compelling idea Doug McElroy

53
00:02:55,900 --> 00:02:58,570
he went on to invent UNIX piping which

54
00:02:58,570 --> 00:03:00,250
is I think one of the most you know

55
00:03:00,250 --> 00:03:02,880
elegant expressions of this idea of

56
00:03:02,880 --> 00:03:06,520
assembly line programming you know but

57
00:03:06,520 --> 00:03:08,140
we've learned a lot since Doug McElroy

58
00:03:08,140 --> 00:03:09,490
you know we have all of these new ideas

59
00:03:09,490 --> 00:03:11,590
from object-oriented programming about

60
00:03:11,590 --> 00:03:13,900
you know encapsulation and you know how

61
00:03:13,900 --> 00:03:18,190
to maximize code reuse ok so you know

62
00:03:18,190 --> 00:03:20,459
what we what we want to be able to do is

63
00:03:20,459 --> 00:03:23,470
truly assemble our entire front end web

64
00:03:23,470 --> 00:03:26,709
applications from individual units of

65
00:03:26,709 --> 00:03:29,860
prefabricated functionality we want to

66
00:03:29,860 --> 00:03:33,070
be able to simplify development and we

67
00:03:33,070 --> 00:03:36,280
use more of our code so today I'm going

68
00:03:36,280 --> 00:03:37,390
to be talking a little bit about how you

69
00:03:37,390 --> 00:03:41,530
can do that so montage is is a front-end

70
00:03:41,530 --> 00:03:43,840
web development framework it's designed

71
00:03:43,840 --> 00:03:45,670
for building single page applications

72
00:03:45,670 --> 00:03:48,760
and it works in modern browsers it's an

73
00:03:48,760 --> 00:03:50,140
open source framework we distribute

74
00:03:50,140 --> 00:03:55,120
under the BSD license so one of the the

75
00:03:55,120 --> 00:03:58,000
central tenants of montage is is that

76
00:03:58,000 --> 00:04:01,090
everything is a component our component

77
00:04:01,090 --> 00:04:04,300
architecture is somewhat unique and it

78
00:04:04,300 --> 00:04:06,190
allows for this kind of composability

79
00:04:06,190 --> 00:04:08,530
that you you really you know that we've

80
00:04:08,530 --> 00:04:11,620
really aspired to previously so in a

81
00:04:11,620 --> 00:04:13,630
montage project you have all of your

82
00:04:13,630 --> 00:04:14,980
components and they're stored in a

83
00:04:14,980 --> 00:04:17,650
folder which you know by convention we

84
00:04:17,650 --> 00:04:20,320
give that dot real extension and

85
00:04:20,320 --> 00:04:22,750
component you know there's no magic it's

86
00:04:22,750 --> 00:04:25,419
made up of standards-based HTML

87
00:04:25,419 --> 00:04:27,080
Javascript CSS

88
00:04:27,080 --> 00:04:30,379
it is just web content but it does have

89
00:04:30,379 --> 00:04:32,180
one thing that's unique and that's a

90
00:04:32,180 --> 00:04:36,110
JSON component declaration that JSON

91
00:04:36,110 --> 00:04:39,229
declaration is where we describe the

92
00:04:39,229 --> 00:04:42,050
contents of the component and the way

93
00:04:42,050 --> 00:04:44,689
that those that the the pieces inside

94
00:04:44,689 --> 00:04:46,639
connect to each other we define our

95
00:04:46,639 --> 00:04:49,310
bindings and that sort of thing so and

96
00:04:49,310 --> 00:04:50,479
talk a little bit about the you know

97
00:04:50,479 --> 00:04:53,240
that now we have you know the HTML

98
00:04:53,240 --> 00:04:55,939
content is just HTML you know you have

99
00:04:55,939 --> 00:04:59,060
an HTML file then it is you can open in

100
00:04:59,060 --> 00:05:00,889
a browser you can view it as HTML you

101
00:05:00,889 --> 00:05:03,560
can actually take the individual content

102
00:05:03,560 --> 00:05:05,870
from a single component and view it and

103
00:05:05,870 --> 00:05:07,400
edit it there's really important because

104
00:05:07,400 --> 00:05:10,699
it facilitates better cooperation

105
00:05:10,699 --> 00:05:13,069
between developers and designers your

106
00:05:13,069 --> 00:05:14,810
designer doesn't have to understand

107
00:05:14,810 --> 00:05:16,849
anything about the framework in order to

108
00:05:16,849 --> 00:05:19,069
be able to work with the underlying HTML

109
00:05:19,069 --> 00:05:22,580
content so the JSON the component

110
00:05:22,580 --> 00:05:24,800
declaration it's it's basically like a

111
00:05:24,800 --> 00:05:26,779
declarative description of what's inside

112
00:05:26,779 --> 00:05:28,610
of the component and to get more

113
00:05:28,610 --> 00:05:30,439
technical with you it's like it's like a

114
00:05:30,439 --> 00:05:34,400
JSON format object serialization so if

115
00:05:34,400 --> 00:05:36,529
your component is an object and it has a

116
00:05:36,529 --> 00:05:38,060
bunch of other objects inside of what

117
00:05:38,060 --> 00:05:39,050
we've done what you've done is

118
00:05:39,050 --> 00:05:41,060
essentially serialized it into JSON and

119
00:05:41,060 --> 00:05:43,009
that's what the component declaration is

120
00:05:43,009 --> 00:05:45,289
it's like a representation of the

121
00:05:45,289 --> 00:05:46,610
internals I'll show you the code in a

122
00:05:46,610 --> 00:05:48,319
second you'll see an example of a

123
00:05:48,319 --> 00:05:49,610
component declaration will make it a

124
00:05:49,610 --> 00:05:51,830
little more clear when we load that

125
00:05:51,830 --> 00:05:53,900
component declaration in the application

126
00:05:53,900 --> 00:05:56,479
what we do is instantiate all of the

127
00:05:56,479 --> 00:05:58,909
objects inside of it then we attach the

128
00:05:58,909 --> 00:06:00,440
ones that are that are connected the Dom

129
00:06:00,440 --> 00:06:03,110
to the page and then we populate

130
00:06:03,110 --> 00:06:04,610
component properties and establish a

131
00:06:04,610 --> 00:06:07,339
bindings okay so here's here's what

132
00:06:07,339 --> 00:06:09,080
component declaration looks like that

133
00:06:09,080 --> 00:06:12,050
JSON that you see at the top and then at

134
00:06:12,050 --> 00:06:14,839
the bottom what you see is the HTML that

135
00:06:14,839 --> 00:06:16,759
corresponds with it this is from a

136
00:06:16,759 --> 00:06:18,889
simple application that does temperature

137
00:06:18,889 --> 00:06:21,259
conversion you have a Celsius number

138
00:06:21,259 --> 00:06:23,029
field in a Fahrenheit number field and

139
00:06:23,029 --> 00:06:25,460
when you put a value in one you'll get

140
00:06:25,460 --> 00:06:27,229
the equivalent value in the other field

141
00:06:27,229 --> 00:06:29,719
and there's no JavaScript code at all

142
00:06:29,719 --> 00:06:32,449
behind this it's done entirely with data

143
00:06:32,449 --> 00:06:34,480
bindings

144
00:06:34,480 --> 00:06:36,550
the component declaration so the

145
00:06:36,550 --> 00:06:38,080
component declaration we have several

146
00:06:38,080 --> 00:06:41,290
elements here you can see that prototype

147
00:06:41,290 --> 00:06:43,540
field that I've highlighted that

148
00:06:43,540 --> 00:06:46,030
basically is a reference to the module

149
00:06:46,030 --> 00:06:47,680
that we're using to instantiate the

150
00:06:47,680 --> 00:06:49,870
object so each of those top-level blocks

151
00:06:49,870 --> 00:06:51,370
they're like the Celsius number fill

152
00:06:51,370 --> 00:06:52,900
block the Fahrenheit number field block

153
00:06:52,900 --> 00:06:55,120
those are objects and the prototype is

154
00:06:55,120 --> 00:06:57,580
the component that we're going to

155
00:06:57,580 --> 00:06:59,530
instantiate when we're creating those

156
00:06:59,530 --> 00:07:01,300
objects and in this case you know you

157
00:07:01,300 --> 00:07:02,770
can see the dot real extension you can

158
00:07:02,770 --> 00:07:04,000
see that it is a component but it could

159
00:07:04,000 --> 00:07:05,460
also be an object you know we're using

160
00:07:05,460 --> 00:07:09,190
common J's module loading so you can you

161
00:07:09,190 --> 00:07:11,470
can load conventional objects in there

162
00:07:11,470 --> 00:07:16,750
too so next we want to be able to take

163
00:07:16,750 --> 00:07:18,880
those those objects from the component

164
00:07:18,880 --> 00:07:20,530
declaration and attach it to the

165
00:07:20,530 --> 00:07:23,980
document object model and to do that we

166
00:07:23,980 --> 00:07:26,560
have this element property which I've

167
00:07:26,560 --> 00:07:28,750
highlighted here and so the element

168
00:07:28,750 --> 00:07:30,840
property in the component declaration

169
00:07:30,840 --> 00:07:34,030
correlates with a data montage ID

170
00:07:34,030 --> 00:07:37,720
attribute in the associated HTML tag so

171
00:07:37,720 --> 00:07:38,770
if you look at the bottom and you see

172
00:07:38,770 --> 00:07:40,450
that we have those those two input

173
00:07:40,450 --> 00:07:42,550
fields with data montage ID tags for

174
00:07:42,550 --> 00:07:44,680
Celsius and Fahrenheit those get

175
00:07:44,680 --> 00:07:48,220
attached to those number field

176
00:07:48,220 --> 00:07:49,960
components that we've instantiate it in

177
00:07:49,960 --> 00:07:52,360
the object this is really significant

178
00:07:52,360 --> 00:07:53,770
here like one of the one of the things

179
00:07:53,770 --> 00:07:56,380
we care a lot about it is not cluttering

180
00:07:56,380 --> 00:07:59,350
up our markup we don't want any any

181
00:07:59,350 --> 00:08:02,320
logic any application logic in our HTML

182
00:08:02,320 --> 00:08:04,150
code we care a lot about separation of

183
00:08:04,150 --> 00:08:06,850
concerns and you know part of how we

184
00:08:06,850 --> 00:08:08,800
achieve that is by putting all of the

185
00:08:08,800 --> 00:08:12,010
the you know the the glue that holds the

186
00:08:12,010 --> 00:08:13,780
application logic together in the

187
00:08:13,780 --> 00:08:15,370
component declaration and the only thing

188
00:08:15,370 --> 00:08:16,990
we have to put in our markup are those

189
00:08:16,990 --> 00:08:20,680
data IDs that associate the components

190
00:08:20,680 --> 00:08:23,110
with the HTML so now I'm going to talk a

191
00:08:23,110 --> 00:08:25,170
little bit about data binding we have a

192
00:08:25,170 --> 00:08:27,820
barely sophisticated binding system our

193
00:08:27,820 --> 00:08:30,850
functional reactive bindings abbreviated

194
00:08:30,850 --> 00:08:34,300
frb it's created by my friend and

195
00:08:34,300 --> 00:08:36,610
co-worker Crisco wall some of you may

196
00:08:36,610 --> 00:08:39,340
know for his work on the cue library he

197
00:08:39,340 --> 00:08:40,750
tells me that I'm not allowed to

198
00:08:40,750 --> 00:08:44,430
pronounce FRB as furby

199
00:08:44,430 --> 00:08:48,600
so of course I have to what what frb

200
00:08:48,600 --> 00:08:50,640
does is it propagates changes between

201
00:08:50,640 --> 00:08:52,800
object properties so when you're

202
00:08:52,800 --> 00:08:54,570
creating your application you're doing

203
00:08:54,570 --> 00:08:56,580
your data binding you're connecting the

204
00:08:56,580 --> 00:08:58,080
property of one object to the property

205
00:08:58,080 --> 00:09:00,300
of another so that one when one changes

206
00:09:00,300 --> 00:09:02,490
that change propagates to the other and

207
00:09:02,490 --> 00:09:05,190
that can be done in one direction or two

208
00:09:05,190 --> 00:09:08,220
directions frb is an open source library

209
00:09:08,220 --> 00:09:09,360
that you can use standalone we've

210
00:09:09,360 --> 00:09:11,370
integrated it very tightly in a montage

211
00:09:11,370 --> 00:09:13,490
guess but you can also use it by itself

212
00:09:13,490 --> 00:09:16,740
and it can work with components or

213
00:09:16,740 --> 00:09:19,380
regular old JavaScript objects so when

214
00:09:19,380 --> 00:09:20,790
you're doing your bindings you can bind

215
00:09:20,790 --> 00:09:22,560
you can just take some JavaScript object

216
00:09:22,560 --> 00:09:24,360
that you've pulled from some rest you

217
00:09:24,360 --> 00:09:26,430
know API you know some JSON you pulled

218
00:09:26,430 --> 00:09:27,779
from a REST API and you can just bind

219
00:09:27,779 --> 00:09:30,060
right into it you can also use it to

220
00:09:30,060 --> 00:09:31,920
connect properties of components i'm

221
00:09:31,920 --> 00:09:35,160
going to show you next so in our

222
00:09:35,160 --> 00:09:37,140
component declaration when we have a

223
00:09:37,140 --> 00:09:39,570
like a binding section for each object

224
00:09:39,570 --> 00:09:43,050
and when we use that that to double

225
00:09:43,050 --> 00:09:45,120
arrow that that signifies a two-way

226
00:09:45,120 --> 00:09:48,450
binding so what we've done here is we've

227
00:09:48,450 --> 00:09:50,310
taken the Fahrenheit number field and

228
00:09:50,310 --> 00:09:52,560
we've bound it to the Celsius number

229
00:09:52,560 --> 00:09:54,180
field and if you look at the binding

230
00:09:54,180 --> 00:09:55,410
expression you can see we're doing a

231
00:09:55,410 --> 00:09:57,150
little bit of basic math in there to do

232
00:09:57,150 --> 00:09:59,010
the conversion between the two

233
00:09:59,010 --> 00:10:02,370
temperature formats one of the cool

234
00:10:02,370 --> 00:10:04,500
things about frb is that you can it's a

235
00:10:04,500 --> 00:10:06,600
very rich expressive language you can

236
00:10:06,600 --> 00:10:09,150
you can do a lot of computations and

237
00:10:09,150 --> 00:10:11,580
data manipulation in the bindings

238
00:10:11,580 --> 00:10:13,589
themselves which spares you from having

239
00:10:13,589 --> 00:10:16,410
to do it in code so you know instead of

240
00:10:16,410 --> 00:10:17,970
having to take your data structures and

241
00:10:17,970 --> 00:10:19,680
tear them apart and wrap them with a

242
00:10:19,680 --> 00:10:21,690
bunch of things then create computed

243
00:10:21,690 --> 00:10:23,640
properties or whatever you can really

244
00:10:23,640 --> 00:10:25,620
get a lot done just with bindings by

245
00:10:25,620 --> 00:10:27,540
themselves so the end result of what you

246
00:10:27,540 --> 00:10:30,270
would see here is that if if the number

247
00:10:30,270 --> 00:10:32,220
field changes it's just going to compute

248
00:10:32,220 --> 00:10:34,380
the the equivalent value for the other

249
00:10:34,380 --> 00:10:37,770
number field as I'll show you later you

250
00:10:37,770 --> 00:10:39,600
can do some interesting things with with

251
00:10:39,600 --> 00:10:42,660
collections and data structures to with

252
00:10:42,660 --> 00:10:45,510
frb expressions so you know as I said

253
00:10:45,510 --> 00:10:47,850
clean semantic markup is a huge emphasis

254
00:10:47,850 --> 00:10:50,520
for us and I really like to to bring up

255
00:10:50,520 --> 00:10:51,660
this point because it's one of the

256
00:10:51,660 --> 00:10:52,800
things that attracted me to this

257
00:10:52,800 --> 00:10:55,890
framework initially we don't have any

258
00:10:55,890 --> 00:10:57,630
procedural flow control

259
00:10:57,630 --> 00:10:59,520
statements in your markup you've

260
00:10:59,520 --> 00:11:01,530
probably seen some some other you know

261
00:11:01,530 --> 00:11:03,180
JavaScript MVC frameworks where you have

262
00:11:03,180 --> 00:11:04,980
like a for each or something or you know

263
00:11:04,980 --> 00:11:06,870
we don't do that we want to keep the

264
00:11:06,870 --> 00:11:09,660
markup as pure and unadulterated as

265
00:11:09,660 --> 00:11:11,340
possible so what you're looking at in

266
00:11:11,340 --> 00:11:13,670
this example here is the mark-up for

267
00:11:13,670 --> 00:11:16,980
like a list and instead of a for loop

268
00:11:16,980 --> 00:11:19,530
basically what we have here is just a

269
00:11:19,530 --> 00:11:21,690
div tag with some data montage ID that

270
00:11:21,690 --> 00:11:24,600
says list places and in your application

271
00:11:24,600 --> 00:11:25,800
you would have a component in your

272
00:11:25,800 --> 00:11:27,840
component declaration it's called a

273
00:11:27,840 --> 00:11:29,880
repetition you use a repetition

274
00:11:29,880 --> 00:11:32,100
component which will repeat all of the

275
00:11:32,100 --> 00:11:34,170
elements nested inside the attached dip

276
00:11:34,170 --> 00:11:36,720
or detach element it can be any HTML

277
00:11:36,720 --> 00:11:39,120
element so you know by taking that

278
00:11:39,120 --> 00:11:41,310
approach we've made it so that you don't

279
00:11:41,310 --> 00:11:44,460
have to clutter up your your HTML or

280
00:11:44,460 --> 00:11:48,180
combined logic and presentation so

281
00:11:48,180 --> 00:11:50,340
unlike me it's completely clean shaven

282
00:11:50,340 --> 00:11:54,930
framework no mustaches all right so

283
00:11:54,930 --> 00:11:56,430
there's pugsley again helping us keep

284
00:11:56,430 --> 00:12:02,370
the mark-up clean all right so now I'm

285
00:12:02,370 --> 00:12:04,710
going to switch gears a little bit here

286
00:12:04,710 --> 00:12:06,660
show you our application that I've made

287
00:12:06,660 --> 00:12:08,370
with montage just give you a little bit

288
00:12:08,370 --> 00:12:10,140
of a sense of what you can do with the

289
00:12:10,140 --> 00:12:12,800
component system this application is

290
00:12:12,800 --> 00:12:15,870
designed to help groups of people decide

291
00:12:15,870 --> 00:12:18,090
where to eat together which I'm sure you

292
00:12:18,090 --> 00:12:19,530
know is one of the hardest problems in

293
00:12:19,530 --> 00:12:22,110
engineering if you've ever tried to do

294
00:12:22,110 --> 00:12:24,420
lunch with your team or whatever so the

295
00:12:24,420 --> 00:12:26,720
application is called nominate and

296
00:12:26,720 --> 00:12:29,640
basically people suggest places and then

297
00:12:29,640 --> 00:12:31,560
vote on them it's a full stack

298
00:12:31,560 --> 00:12:33,600
JavaScript application the backend is

299
00:12:33,600 --> 00:12:35,280
written the API back in is written is

300
00:12:35,280 --> 00:12:37,620
sales jas and the front end is written

301
00:12:37,620 --> 00:12:41,010
with montage guess and it uses web

302
00:12:41,010 --> 00:12:44,760
sockets for real time voting so there we

303
00:12:44,760 --> 00:12:47,880
go I hope everybody can see that yeah ok

304
00:12:47,880 --> 00:12:53,090
so in nominate you create a poll and

305
00:12:53,090 --> 00:12:56,670
then you out of place and what we're

306
00:12:56,670 --> 00:12:59,850
using here is a browser geolocation and

307
00:12:59,850 --> 00:13:02,730
the Google Places API to allow you to do

308
00:13:02,730 --> 00:13:04,380
a place search I don't know if my

309
00:13:04,380 --> 00:13:08,190
connectivity is good enough ok so in

310
00:13:08,190 --> 00:13:10,080
anticipation of connectivity issues I

311
00:13:10,080 --> 00:13:10,520
had

312
00:13:10,520 --> 00:13:12,440
tab open with the example here but yeah

313
00:13:12,440 --> 00:13:15,200
so it'll pull in locations around you

314
00:13:15,200 --> 00:13:17,690
and it'll let you add them to the poll

315
00:13:17,690 --> 00:13:19,790
by clicking one of the plus button in

316
00:13:19,790 --> 00:13:21,620
one of those places you can see that

317
00:13:21,620 --> 00:13:24,410
Todd each tile has the name of a place

318
00:13:24,410 --> 00:13:27,950
and then address right so when your vote

319
00:13:27,950 --> 00:13:30,560
when users are voting you see the the

320
00:13:30,560 --> 00:13:33,680
polls it's again the same tiles the the

321
00:13:33,680 --> 00:13:35,450
name and then the address then

322
00:13:35,450 --> 00:13:37,130
underneath is a vote button when you

323
00:13:37,130 --> 00:13:38,600
click the vote button it'll add your

324
00:13:38,600 --> 00:13:40,760
vote and then it's probably hard to see

325
00:13:40,760 --> 00:13:42,410
not enough contrast on the projector but

326
00:13:42,410 --> 00:13:44,690
it's tallying the vote and you can

327
00:13:44,690 --> 00:13:46,970
switch your vote if you're logged in so

328
00:13:46,970 --> 00:13:49,250
very simple application one of the

329
00:13:49,250 --> 00:13:51,670
things I'm doing here these tiles are

330
00:13:51,670 --> 00:13:54,890
component we have a mechanism for

331
00:13:54,890 --> 00:13:57,440
template replacement so you can take a

332
00:13:57,440 --> 00:13:59,750
component and you can specify a part of

333
00:13:59,750 --> 00:14:02,300
it that can be extended in place so in

334
00:14:02,300 --> 00:14:03,860
the context in which you use the

335
00:14:03,860 --> 00:14:08,060
component you get to add elements to it

336
00:14:08,060 --> 00:14:10,880
so we have the same tile but in one case

337
00:14:10,880 --> 00:14:12,680
we have a vote button and in another

338
00:14:12,680 --> 00:14:15,380
case we have plus button and you can

339
00:14:15,380 --> 00:14:16,970
actually do that in the component in

340
00:14:16,970 --> 00:14:20,840
which you're consuming the the tile so

341
00:14:20,840 --> 00:14:21,910
that's that's one way in which

342
00:14:21,910 --> 00:14:24,740
components help us increase amount of

343
00:14:24,740 --> 00:14:29,180
code reuse that that we get we can we

344
00:14:29,180 --> 00:14:31,460
can reuse those elements and not have to

345
00:14:31,460 --> 00:14:34,640
do the same work over and over again we

346
00:14:34,640 --> 00:14:36,620
can make them generic and allow us to

347
00:14:36,620 --> 00:14:40,280
tailor them to the context so another

348
00:14:40,280 --> 00:14:43,610
feature here see if I can open an

349
00:14:43,610 --> 00:14:45,680
incognito window so you can see when

350
00:14:45,680 --> 00:14:55,860
it's not logged in see if that loads

351
00:14:55,870 --> 00:14:57,670
yeah I might be having connectivity

352
00:14:57,670 --> 00:15:05,800
issues but okay so we have a login form

353
00:15:05,800 --> 00:15:09,430
and a signup form and you can see the

354
00:15:09,430 --> 00:15:10,779
log in and the signup form are very

355
00:15:10,779 --> 00:15:13,600
similar it's basically just your

356
00:15:13,600 --> 00:15:15,550
username field then your password field

357
00:15:15,550 --> 00:15:17,589
and the main difference is whether you

358
00:15:17,589 --> 00:15:19,360
have to password fields to check the

359
00:15:19,360 --> 00:15:21,010
password during registration and then

360
00:15:21,010 --> 00:15:23,410
the the label on the button whether it's

361
00:15:23,410 --> 00:15:25,779
sign up or login so in this case we're

362
00:15:25,779 --> 00:15:28,089
using one component for both contexts

363
00:15:28,089 --> 00:15:30,100
but we're using data binding within the

364
00:15:30,100 --> 00:15:31,990
component to customize it for the

365
00:15:31,990 --> 00:15:36,010
scenario so if you look at the URL bar

366
00:15:36,010 --> 00:15:37,960
here you'll see we have a you know hash

367
00:15:37,960 --> 00:15:40,450
identity / sign up and we have a very

368
00:15:40,450 --> 00:15:42,910
simple like route controller here and

369
00:15:42,910 --> 00:15:45,970
the component the login component is

370
00:15:45,970 --> 00:15:47,920
bound to the route controller and it

371
00:15:47,920 --> 00:15:49,000
looks to see whether you're on the

372
00:15:49,000 --> 00:15:50,800
signup route or the login route and

373
00:15:50,800 --> 00:15:51,820
depending on which one you're using

374
00:15:51,820 --> 00:15:54,250
it'll show you the correct form and

375
00:15:54,250 --> 00:15:56,320
that's all done again with frb

376
00:15:56,320 --> 00:15:59,770
expressions inside of the code so we

377
00:15:59,770 --> 00:16:01,480
don't need JavaScript code to do that

378
00:16:01,480 --> 00:16:03,850
kind of tinkering you can you can

379
00:16:03,850 --> 00:16:06,940
customize many elements of the of the

380
00:16:06,940 --> 00:16:09,310
component with straight up bindings then

381
00:16:09,310 --> 00:16:11,890
put values into properties in the

382
00:16:11,890 --> 00:16:14,050
component and bind to those so you know

383
00:16:14,050 --> 00:16:16,180
it allows you to do a lot of things very

384
00:16:16,180 --> 00:16:18,010
in a very flexible way and where you get

385
00:16:18,010 --> 00:16:19,900
more reuse you know another cool thing

386
00:16:19,900 --> 00:16:22,510
about this login component is that none

387
00:16:22,510 --> 00:16:25,300
of the actual authentication logic or

388
00:16:25,300 --> 00:16:26,529
you know for communication with the

389
00:16:26,529 --> 00:16:27,910
server to do authentication is

390
00:16:27,910 --> 00:16:30,880
implemented in the component itself we

391
00:16:30,880 --> 00:16:34,300
have event handlers that we define in a

392
00:16:34,300 --> 00:16:36,760
component and in this case we have an

393
00:16:36,760 --> 00:16:38,890
event handler for sign up or login event

394
00:16:38,890 --> 00:16:41,620
so we can take this this login component

395
00:16:41,620 --> 00:16:43,900
and we can use it in a higher level

396
00:16:43,900 --> 00:16:45,520
component that makes up our our main

397
00:16:45,520 --> 00:16:47,440
component of our application we can say

398
00:16:47,440 --> 00:16:49,209
when we get this login event then we're

399
00:16:49,209 --> 00:16:50,800
going to do the authentication logic so

400
00:16:50,800 --> 00:16:52,870
we can keep the actual application

401
00:16:52,870 --> 00:16:54,880
specific logic at a higher level and

402
00:16:54,880 --> 00:16:57,190
again that increases Qadri's because I

403
00:16:57,190 --> 00:16:58,930
can take the same login component and I

404
00:16:58,930 --> 00:17:00,610
can drop it into any application that

405
00:17:00,610 --> 00:17:03,580
requires this kind of log in form and I

406
00:17:03,580 --> 00:17:06,490
just attach different behaviors to the

407
00:17:06,490 --> 00:17:07,329
event handler

408
00:17:07,329 --> 00:17:10,779
and you know I've got my login so you

409
00:17:10,779 --> 00:17:11,470
know there are all kinds of

410
00:17:11,470 --> 00:17:14,500
opportunities for reuse now briefly I

411
00:17:14,500 --> 00:17:18,959
want to talk a little bit about bindings

412
00:17:18,959 --> 00:17:24,909
we have the the vote tabulation so when

413
00:17:24,909 --> 00:17:26,769
you're when you're when users are voting

414
00:17:26,769 --> 00:17:31,480
in the application you know effectively

415
00:17:31,480 --> 00:17:33,640
what happens on the servers we're taking

416
00:17:33,640 --> 00:17:35,710
creating like a vote record for each

417
00:17:35,710 --> 00:17:37,899
vote and that vote record has a place ID

418
00:17:37,899 --> 00:17:40,029
associated with it so what I'm showing

419
00:17:40,029 --> 00:17:43,240
you here is just the JSON data returned

420
00:17:43,240 --> 00:17:45,070
by the server when you retrieve the vote

421
00:17:45,070 --> 00:17:47,260
records is what it looks like you can

422
00:17:47,260 --> 00:17:50,289
see that there's a place ID in each one

423
00:17:50,289 --> 00:17:53,169
so we want to take that data and use it

424
00:17:53,169 --> 00:17:55,990
to show the vote count next to each

425
00:17:55,990 --> 00:17:58,600
place so we're actually doing that with

426
00:17:58,600 --> 00:18:00,880
bindings rather than JavaScript this is

427
00:18:00,880 --> 00:18:01,779
this is where it gets kind of

428
00:18:01,779 --> 00:18:04,539
interesting so you can look at this frb

429
00:18:04,539 --> 00:18:07,330
binding expression what we do is we

430
00:18:07,330 --> 00:18:09,460
group those objects by the place

431
00:18:09,460 --> 00:18:12,370
property and that gives us the vote

432
00:18:12,370 --> 00:18:13,840
results then to find out which one was

433
00:18:13,840 --> 00:18:16,899
the winner we take the the entries in

434
00:18:16,899 --> 00:18:18,970
that group so the group is effectively

435
00:18:18,970 --> 00:18:20,769
like a hash table where the the ID is

436
00:18:20,769 --> 00:18:22,179
the place on the value is an array of

437
00:18:22,179 --> 00:18:24,490
vote records so we take the entries from

438
00:18:24,490 --> 00:18:27,100
that hash table we find we use the this

439
00:18:27,100 --> 00:18:30,490
max function to find the the one with

440
00:18:30,490 --> 00:18:32,679
the value that has the greatest length

441
00:18:32,679 --> 00:18:35,260
because the array containing the vote

442
00:18:35,260 --> 00:18:37,750
records the one with the most votes will

443
00:18:37,750 --> 00:18:40,090
have the greatest length so here we're

444
00:18:40,090 --> 00:18:42,100
using these frb expressions to to

445
00:18:42,100 --> 00:18:43,929
compute the scores when we want to

446
00:18:43,929 --> 00:18:47,470
present it in the user interface we can

447
00:18:47,470 --> 00:18:50,769
reach into that that hash table using

448
00:18:50,769 --> 00:18:53,260
this get property and then we use the

449
00:18:53,260 --> 00:18:55,899
place ID from the individual block and

450
00:18:55,899 --> 00:18:57,250
then we get the length of the array

451
00:18:57,250 --> 00:18:59,019
that's associated with it and that's our

452
00:18:59,019 --> 00:19:01,659
count so instead of having to do you

453
00:19:01,659 --> 00:19:03,250
know take take the data from the server

454
00:19:03,250 --> 00:19:05,320
and do a bunch of slicing and dicing on

455
00:19:05,320 --> 00:19:08,860
it we can use FRBS you know very rich

456
00:19:08,860 --> 00:19:11,320
collection manipulation features to do

457
00:19:11,320 --> 00:19:12,639
it all in data binding so what makes

458
00:19:12,639 --> 00:19:16,059
this especially cool is that all of the

459
00:19:16,059 --> 00:19:18,070
whenever the values change all the

460
00:19:18,070 --> 00:19:20,050
changes will propagate so let's

461
00:19:20,050 --> 00:19:22,030
say that you have the application open

462
00:19:22,030 --> 00:19:23,380
and another user opens it on their phone

463
00:19:23,380 --> 00:19:25,960
in place as a vote we use web sockets to

464
00:19:25,960 --> 00:19:27,370
get the new vote record and add it to

465
00:19:27,370 --> 00:19:29,350
the array with the votes well as soon as

466
00:19:29,350 --> 00:19:31,410
you add that vote record to the array

467
00:19:31,410 --> 00:19:34,090
the these frb expressions will all

468
00:19:34,090 --> 00:19:37,420
recompute and it'll automatically change

469
00:19:37,420 --> 00:19:39,610
which one is the winner and you know

470
00:19:39,610 --> 00:19:41,950
what the score value is in each of those

471
00:19:41,950 --> 00:19:45,040
tiles based on the new data and it works

472
00:19:45,040 --> 00:19:46,540
that way if you replace you know the

473
00:19:46,540 --> 00:19:47,920
whole data structure you're bound to or

474
00:19:47,920 --> 00:19:49,660
if you just change values reaching and

475
00:19:49,660 --> 00:19:52,780
change values inside of it so you know

476
00:19:52,780 --> 00:19:55,120
frb gives you a lot of power here and

477
00:19:55,120 --> 00:19:57,310
really reduces the amount of JavaScript

478
00:19:57,310 --> 00:19:59,560
code that you have to write the language

479
00:19:59,560 --> 00:20:01,000
is a little odd I mean it has its own

480
00:20:01,000 --> 00:20:03,820
syntax as you can see but it's it's

481
00:20:03,820 --> 00:20:05,500
intuitive enough that once once you

482
00:20:05,500 --> 00:20:07,690
start using it you know it really it

483
00:20:07,690 --> 00:20:09,240
really becomes very practical

484
00:20:09,240 --> 00:20:12,280
transparent way of moving data through

485
00:20:12,280 --> 00:20:15,640
your application so you know that's

486
00:20:15,640 --> 00:20:17,620
that's nominate now that I've shown you

487
00:20:17,620 --> 00:20:19,600
nominate i want to show you another demo

488
00:20:19,600 --> 00:20:21,850
that the kind of highlights you know

489
00:20:21,850 --> 00:20:23,980
more sophisticated angle you know what

490
00:20:23,980 --> 00:20:26,560
we can do visually with components so

491
00:20:26,560 --> 00:20:29,290
this is a wordpress viewer and you can

492
00:20:29,290 --> 00:20:31,540
see we've got we've got these tiles and

493
00:20:31,540 --> 00:20:34,690
each tile represents a blog post what

494
00:20:34,690 --> 00:20:37,660
i'm doing here is i'm using the new json

495
00:20:37,660 --> 00:20:40,840
api is in wordpress to retrieve posts

496
00:20:40,840 --> 00:20:43,150
from an actual wordpress blog then I'm

497
00:20:43,150 --> 00:20:44,680
displaying the featured image in the

498
00:20:44,680 --> 00:20:48,310
headline for each blog post and this you

499
00:20:48,310 --> 00:20:51,340
know incredible 3d display here is what

500
00:20:51,340 --> 00:20:53,470
we call the flow component and the flow

501
00:20:53,470 --> 00:20:55,840
component it will take elements and

502
00:20:55,840 --> 00:20:59,560
display them in 3d space using CSS 3d

503
00:20:59,560 --> 00:21:02,620
transforms and it gives you like this

504
00:21:02,620 --> 00:21:04,420
really nice touch friendly you know

505
00:21:04,420 --> 00:21:07,420
great on a tablet interaction model for

506
00:21:07,420 --> 00:21:10,570
for manipulating you know this this kind

507
00:21:10,570 --> 00:21:14,590
of view and it does it all you know in a

508
00:21:14,590 --> 00:21:15,940
way that's that's very neatly

509
00:21:15,940 --> 00:21:18,250
encapsulated you can take a flow add it

510
00:21:18,250 --> 00:21:20,530
to your application just dump data into

511
00:21:20,530 --> 00:21:22,600
it you know and have it display in this

512
00:21:22,600 --> 00:21:24,730
this fashion so I mean there are a few

513
00:21:24,730 --> 00:21:26,140
things here like I mean it's you can

514
00:21:26,140 --> 00:21:27,970
click a tile and it'll flip around and

515
00:21:27,970 --> 00:21:31,710
you get the the content of the blog post

516
00:21:31,710 --> 00:21:33,880
so I mean this is pretty cool

517
00:21:33,880 --> 00:21:36,250
right so i want to show you next what

518
00:21:36,250 --> 00:21:39,010
the underlying json representation looks

519
00:21:39,010 --> 00:21:46,030
like for that flow okay so this is from

520
00:21:46,030 --> 00:21:47,710
the component declaration these are the

521
00:21:47,710 --> 00:21:49,360
properties that we use to define the

522
00:21:49,360 --> 00:21:51,910
flow what the flow is it's basically a

523
00:21:51,910 --> 00:21:54,820
path with 3d perspective like a camera

524
00:21:54,820 --> 00:21:56,740
with a 3d perspective on it and the path

525
00:21:56,740 --> 00:21:58,660
has what we call knots which are like

526
00:21:58,660 --> 00:22:01,900
they're like points in the path that the

527
00:22:01,900 --> 00:22:04,660
items will flow through so you define

528
00:22:04,660 --> 00:22:07,780
the the position of these knots in 3d

529
00:22:07,780 --> 00:22:10,060
space and then the angles that they'll

530
00:22:10,060 --> 00:22:11,860
rotate the items at you can also adjust

531
00:22:11,860 --> 00:22:13,450
things like opacity and things like that

532
00:22:13,450 --> 00:22:15,850
now obviously this is a lot of data here

533
00:22:15,850 --> 00:22:17,500
and you could write it by hand in your

534
00:22:17,500 --> 00:22:21,460
component declaration but what if there

535
00:22:21,460 --> 00:22:23,680
was a richer way to visualize it a you

536
00:22:23,680 --> 00:22:24,970
know a better way to see this

537
00:22:24,970 --> 00:22:27,070
information and manipulate it

538
00:22:27,070 --> 00:22:30,800
interactively what would that look like

539
00:22:30,810 --> 00:22:33,850
so this is a visualization I don't know

540
00:22:33,850 --> 00:22:34,870
it's a little hard to see but that's a

541
00:22:34,870 --> 00:22:37,720
visualization of that path you can see

542
00:22:37,720 --> 00:22:39,970
it's like it's almost like editing a

543
00:22:39,970 --> 00:22:43,480
Bezier curve and in a vector art program

544
00:22:43,480 --> 00:22:45,730
if you've ever done that you have

545
00:22:45,730 --> 00:22:48,130
handles on it you can see the position

546
00:22:48,130 --> 00:22:49,600
of the curve and you can see the the

547
00:22:49,600 --> 00:22:51,340
camera and the angle that the camera is

548
00:22:51,340 --> 00:22:54,940
taking on the curve so we you know we

549
00:22:54,940 --> 00:22:56,230
would really like to be able to

550
00:22:56,230 --> 00:22:59,680
manipulate all of this data with a more

551
00:22:59,680 --> 00:23:01,660
interactive visual style would you know

552
00:23:01,660 --> 00:23:04,240
like what you see there and we can so

553
00:23:04,240 --> 00:23:05,620
one of the things that's really

554
00:23:05,620 --> 00:23:07,720
fantastic about the montage j/s

555
00:23:07,720 --> 00:23:10,180
component declaration is that it is just

556
00:23:10,180 --> 00:23:13,090
JSON data so here's a big word for you

557
00:23:13,090 --> 00:23:16,630
homo icon icity and if any of you have

558
00:23:16,630 --> 00:23:18,490
ever learned lisp or a lisp like

559
00:23:18,490 --> 00:23:19,720
language you probably know what that

560
00:23:19,720 --> 00:23:22,510
means the idea is that your code is data

561
00:23:22,510 --> 00:23:24,520
data that you can programmatically

562
00:23:24,520 --> 00:23:27,610
manipulate and that's a really exciting

563
00:23:27,610 --> 00:23:30,250
concept because when when you have code

564
00:23:30,250 --> 00:23:32,890
your your application logic and a format

565
00:23:32,890 --> 00:23:34,420
that you can programmatically manipulate

566
00:23:34,420 --> 00:23:38,140
it opens the door to creating very rich

567
00:23:38,140 --> 00:23:39,820
tooling on top of it being able to

568
00:23:39,820 --> 00:23:41,440
manipulate it programmatically in

569
00:23:41,440 --> 00:23:43,330
interesting ways being able to produce

570
00:23:43,330 --> 00:23:46,210
produce it through scripts and from

571
00:23:46,210 --> 00:23:47,290
other data sources

572
00:23:47,290 --> 00:23:50,710
and that's that's a huge part of what

573
00:23:50,710 --> 00:23:54,910
montage jas is all about so you know

574
00:23:54,910 --> 00:23:56,560
when it comes to application authoring

575
00:23:56,560 --> 00:23:58,690
you know a lot of us use our text

576
00:23:58,690 --> 00:24:00,840
editors our command line tools

577
00:24:00,840 --> 00:24:02,950
preprocessors various things like that

578
00:24:02,950 --> 00:24:06,490
we all use tools but you know unlike

579
00:24:06,490 --> 00:24:08,560
native application developers we tend to

580
00:24:08,560 --> 00:24:11,170
not do visual drag and drop types of

581
00:24:11,170 --> 00:24:14,230
development and you know as the web

582
00:24:14,230 --> 00:24:16,450
becomes more of an application platform

583
00:24:16,450 --> 00:24:18,400
and less of a content delivery system

584
00:24:18,400 --> 00:24:21,700
you know the need for you know parody

585
00:24:21,700 --> 00:24:24,430
with what native platforms have you know

586
00:24:24,430 --> 00:24:26,080
for development is going to increase we

587
00:24:26,080 --> 00:24:29,350
really need richer tools but you know

588
00:24:29,350 --> 00:24:30,940
there's kind of the stigma against

589
00:24:30,940 --> 00:24:33,160
visual authoring in the web development

590
00:24:33,160 --> 00:24:35,680
community and you know a large part of

591
00:24:35,680 --> 00:24:36,850
where that comes from is just that the

592
00:24:36,850 --> 00:24:38,620
first generation of visual authoring

593
00:24:38,620 --> 00:24:41,770
tools for the web were really bad you

594
00:24:41,770 --> 00:24:43,660
think about a lot of the early tools and

595
00:24:43,660 --> 00:24:45,250
they were you know they took this

596
00:24:45,250 --> 00:24:47,200
WYSIWYG approach that they're basically

597
00:24:47,200 --> 00:24:49,690
like word processors and building a web

598
00:24:49,690 --> 00:24:51,400
application with a word processor is

599
00:24:51,400 --> 00:24:53,110
pretty much a worst experience

600
00:24:53,110 --> 00:24:55,810
imaginable and it produced those

601
00:24:55,810 --> 00:24:57,700
applications pretty terrible code right

602
00:24:57,700 --> 00:25:00,490
so you know this the stigma emerged

603
00:25:00,490 --> 00:25:03,310
against visual authoring because that

604
00:25:03,310 --> 00:25:05,590
whole model was just it was just such a

605
00:25:05,590 --> 00:25:07,660
step backward to step in the wrong

606
00:25:07,660 --> 00:25:10,690
direction so you know what we've tried

607
00:25:10,690 --> 00:25:13,480
to do building on this this this concept

608
00:25:13,480 --> 00:25:16,210
of our code is data what if we could

609
00:25:16,210 --> 00:25:18,940
create a visual authoring experience

610
00:25:18,940 --> 00:25:22,150
that exploits that and allows us to

611
00:25:22,150 --> 00:25:25,330
manipulate the data as data it provides

612
00:25:25,330 --> 00:25:28,120
useful and relevant visualizations allow

613
00:25:28,120 --> 00:25:31,740
us to to control and interact with the

614
00:25:31,740 --> 00:25:34,090
content of an application in a way

615
00:25:34,090 --> 00:25:36,640
that's that's practical and most

616
00:25:36,640 --> 00:25:39,940
importantly we're not generating code so

617
00:25:39,940 --> 00:25:41,350
if you're if you're taking that

618
00:25:41,350 --> 00:25:43,420
component declaration it's just data you

619
00:25:43,420 --> 00:25:45,910
can generate that and you can generate

620
00:25:45,910 --> 00:25:48,190
it well but you know unlike trying to

621
00:25:48,190 --> 00:25:49,840
generate a bunch of markup from a you

622
00:25:49,840 --> 00:25:51,700
know WYSIWYG you know word processing

623
00:25:51,700 --> 00:25:54,880
type authoring experience so what I want

624
00:25:54,880 --> 00:25:57,580
to show you now is montage studio which

625
00:25:57,580 --> 00:26:00,280
is kind of our vision of what you can do

626
00:26:00,280 --> 00:26:01,020
with

627
00:26:01,020 --> 00:26:03,480
with interactive visual authoring when

628
00:26:03,480 --> 00:26:04,590
you take advantage of these

629
00:26:04,590 --> 00:26:09,680
characteristics of you know code as data

630
00:26:09,680 --> 00:26:13,770
so what you see here on the the

631
00:26:13,770 --> 00:26:15,150
left-hand column which I'm scrolling

632
00:26:15,150 --> 00:26:17,490
here is a visual representation of the

633
00:26:17,490 --> 00:26:19,770
component declaration all of the

634
00:26:19,770 --> 00:26:21,840
properties all of the bindings the

635
00:26:21,840 --> 00:26:24,000
prototype it's all in there but it's a

636
00:26:24,000 --> 00:26:26,160
visual representation when you want to

637
00:26:26,160 --> 00:26:28,560
adjust the bindings or out of binding

638
00:26:28,560 --> 00:26:30,450
you can just click to add a binding you

639
00:26:30,450 --> 00:26:33,020
can drag in properties and it has

640
00:26:33,020 --> 00:26:35,190
completion so that you understand what

641
00:26:35,190 --> 00:26:37,680
the properties are say when you select a

642
00:26:37,680 --> 00:26:40,380
component like so what we're looking at

643
00:26:40,380 --> 00:26:42,060
here is essentially that WordPress demo

644
00:26:42,060 --> 00:26:43,560
I showed you when you select our

645
00:26:43,560 --> 00:26:45,600
WordPress controller component which is

646
00:26:45,600 --> 00:26:47,280
a component we made in the application

647
00:26:47,280 --> 00:26:49,590
itself for retrieving the data from

648
00:26:49,590 --> 00:26:52,290
WordPress we have property field on the

649
00:26:52,290 --> 00:26:54,840
far far right you can see that text box

650
00:26:54,840 --> 00:26:57,180
there that allows us to set the host

651
00:26:57,180 --> 00:26:59,940
property of that component so we can

652
00:26:59,940 --> 00:27:01,800
take and expose the properties of our

653
00:27:01,800 --> 00:27:03,810
components in a you know a really

654
00:27:03,810 --> 00:27:05,910
intuitive discoverable way instead of

655
00:27:05,910 --> 00:27:06,750
having to look at the reference

656
00:27:06,750 --> 00:27:09,000
documentation you just click a component

657
00:27:09,000 --> 00:27:11,400
you can see it and on the the black

658
00:27:11,400 --> 00:27:13,470
column on the very far right you can see

659
00:27:13,470 --> 00:27:15,810
a set of components that we've loaded

660
00:27:15,810 --> 00:27:17,610
into our project so you can actually

661
00:27:17,610 --> 00:27:20,580
drag a component from the palette into

662
00:27:20,580 --> 00:27:23,010
the the component declaration field area

663
00:27:23,010 --> 00:27:25,230
on the left and I mean it's just like

664
00:27:25,230 --> 00:27:26,790
writing that component declaration all

665
00:27:26,790 --> 00:27:28,440
its producing is the JSON but it's

666
00:27:28,440 --> 00:27:30,080
giving us it's really nice visualization

667
00:27:30,080 --> 00:27:33,440
in the center column we also have a

668
00:27:33,440 --> 00:27:36,120
basically representation of the HTML Dom

669
00:27:36,120 --> 00:27:39,210
and when you attach a component to an

670
00:27:39,210 --> 00:27:41,970
element in the Dom it's just as easy as

671
00:27:41,970 --> 00:27:44,040
dragging and dropping so I mean what

672
00:27:44,040 --> 00:27:45,930
we've done here is take you know the

673
00:27:45,930 --> 00:27:48,300
underlying representation as data and

674
00:27:48,300 --> 00:27:50,940
we've we've created a visual interface

675
00:27:50,940 --> 00:27:53,130
for manipulating it and you know what's

676
00:27:53,130 --> 00:27:54,660
exciting about this I mean this is this

677
00:27:54,660 --> 00:27:56,310
is the tool we're very excited about but

678
00:27:56,310 --> 00:27:58,020
what's really exciting about this is

679
00:27:58,020 --> 00:27:59,400
that when you have this kind of

680
00:27:59,400 --> 00:28:01,200
application development model you can

681
00:28:01,200 --> 00:28:02,730
build your own tools you can build

682
00:28:02,730 --> 00:28:04,470
anything on top of it from manipulating

683
00:28:04,470 --> 00:28:07,890
the code and producing the application

684
00:28:07,890 --> 00:28:11,970
the way that you want to so you know you

685
00:28:11,970 --> 00:28:13,590
can take this a step further to I've

686
00:28:13,590 --> 00:28:14,820
shown you here how you have

687
00:28:14,820 --> 00:28:16,740
you know property property filled all

688
00:28:16,740 --> 00:28:18,000
the properties are exposed in this

689
00:28:18,000 --> 00:28:21,269
property editor and we're using some you

690
00:28:21,269 --> 00:28:23,490
know like met type metadata so if your

691
00:28:23,490 --> 00:28:25,440
property is an integer you get us number

692
00:28:25,440 --> 00:28:27,149
spinner or whatever but you could take

693
00:28:27,149 --> 00:28:29,279
that a step further and actually create

694
00:28:29,279 --> 00:28:32,009
a custom editor for specific kind of

695
00:28:32,009 --> 00:28:34,259
component so here's our flow component

696
00:28:34,259 --> 00:28:36,210
which I've selected in the component

697
00:28:36,210 --> 00:28:38,429
declaration field I'm going to open the

698
00:28:38,429 --> 00:28:41,309
flow editor so now we're manipulating

699
00:28:41,309 --> 00:28:46,710
that JSON with a base your curve and you

700
00:28:46,710 --> 00:28:49,289
can actually manipulate it just visually

701
00:28:49,289 --> 00:28:51,690
and it's producing is that JSON like I

702
00:28:51,690 --> 00:28:54,090
showed you earlier okay so let's see i'm

703
00:28:54,090 --> 00:28:55,440
not sure if the connectivity is good

704
00:28:55,440 --> 00:28:57,750
enough i'd like to try to show you what

705
00:28:57,750 --> 00:28:59,100
that looks like when you do a live

706
00:28:59,100 --> 00:29:04,429
preview we'll see okay that's good so

707
00:29:04,429 --> 00:29:06,960
here's you know a live preview of that

708
00:29:06,960 --> 00:29:10,409
application we've loaded from from the

709
00:29:10,409 --> 00:29:19,970
authoring environment

710
00:29:19,980 --> 00:29:23,790
and now I'm going to open up that flow

711
00:29:23,790 --> 00:29:32,260
editor again okay watch what happens

712
00:29:32,270 --> 00:29:35,760
we're actually seeing the application

713
00:29:35,760 --> 00:29:38,610
change as we're editing it in a live

714
00:29:38,610 --> 00:29:40,440
preview this is a fully functional

715
00:29:40,440 --> 00:29:42,210
working version of the application that

716
00:29:42,210 --> 00:29:45,210
we're just editing in real time and now

717
00:29:45,210 --> 00:29:46,470
I'm doing this on the same computer but

718
00:29:46,470 --> 00:29:47,880
you can actually do this across devices

719
00:29:47,880 --> 00:29:49,169
it works over the web we're using

720
00:29:49,169 --> 00:29:51,660
WebSockets to propagate the changes so

721
00:29:51,660 --> 00:29:54,390
if you were to open this preview on an

722
00:29:54,390 --> 00:29:57,179
iPad for example and you were to edit it

723
00:29:57,179 --> 00:30:00,600
on your computer in the editor you would

724
00:30:00,600 --> 00:30:03,210
see the changes propagated over to the

725
00:30:03,210 --> 00:30:05,760
other device so i mean this is this is

726
00:30:05,760 --> 00:30:07,309
all taking advantage of the same

727
00:30:07,309 --> 00:30:09,660
characteristics of the you know the

728
00:30:09,660 --> 00:30:12,000
underlying code as data approach of our

729
00:30:12,000 --> 00:30:15,510
component architecture so i think that

730
00:30:15,510 --> 00:30:17,820
this this kind of reflects a you know a

731
00:30:17,820 --> 00:30:19,919
potential approach to simplifying

732
00:30:19,919 --> 00:30:23,250
application development and reducing the

733
00:30:23,250 --> 00:30:26,490
amount of time and you know and in

734
00:30:26,490 --> 00:30:28,799
complexity through you know this

735
00:30:28,799 --> 00:30:30,929
component oriented model so real quick

736
00:30:30,929 --> 00:30:33,240
to wrap up I want to show you that you

737
00:30:33,240 --> 00:30:34,440
know where these components are coming

738
00:30:34,440 --> 00:30:36,900
from in our montage project we have a

739
00:30:36,900 --> 00:30:39,270
package.json file and in the

740
00:30:39,270 --> 00:30:42,210
package.json file you can load modules

741
00:30:42,210 --> 00:30:45,840
from npm that contain components so we

742
00:30:45,840 --> 00:30:48,570
use NPM on the front end here and what

743
00:30:48,570 --> 00:30:50,669
you're seeing here are the dependencies

744
00:30:50,669 --> 00:30:52,200
of the application digit which is our

745
00:30:52,200 --> 00:30:55,049
widget collection then montage WordPress

746
00:30:55,049 --> 00:30:57,120
which is our you know that component

747
00:30:57,120 --> 00:31:00,090
that loads in the the other WordPress

748
00:31:00,090 --> 00:31:01,470
data and it's just a component that

749
00:31:01,470 --> 00:31:03,179
we're loading from mpm and adding to the

750
00:31:03,179 --> 00:31:05,309
project when you do that it shows up in

751
00:31:05,309 --> 00:31:09,390
the palette okay so you know that wraps

752
00:31:09,390 --> 00:31:11,580
it up I hope that's you know that you

753
00:31:11,580 --> 00:31:13,169
can kind of appreciate you know the

754
00:31:13,169 --> 00:31:15,000
significance of of what we've created

755
00:31:15,000 --> 00:31:18,740
here we have a beta of the tool online

756
00:31:18,740 --> 00:31:21,419
so you can visit this address or visit

757
00:31:21,419 --> 00:31:24,480
montage to do calm and sign up for the

758
00:31:24,480 --> 00:31:27,000
beta you'll get in right away and you

759
00:31:27,000 --> 00:31:29,490
can build stuff with it the framework

760
00:31:29,490 --> 00:31:32,010
itself is also available online montage

761
00:31:32,010 --> 00:31:33,779
j/s is open source and it's on gay

762
00:31:33,779 --> 00:31:35,309
hub so if you want to use the framework

763
00:31:35,309 --> 00:31:36,929
stand alone without our tool you can do

764
00:31:36,929 --> 00:31:38,369
that too and you can build your own

765
00:31:38,369 --> 00:31:40,169
tools on top we would love to see people

766
00:31:40,169 --> 00:31:43,349
build new stuff with it so we're going

767
00:31:43,349 --> 00:31:45,389
to be here all week I'm here with two of

768
00:31:45,389 --> 00:31:47,129
my colleagues or wearing montage studio

769
00:31:47,129 --> 00:31:49,710
t-shirts so if you happen to build

770
00:31:49,710 --> 00:31:51,570
something great with montage studio this

771
00:31:51,570 --> 00:31:54,539
week you can track one of us down we'll

772
00:31:54,539 --> 00:31:55,859
give you a t-shirt just show us what

773
00:31:55,859 --> 00:32:00,179
you've done thank you i guess i don't

