1
00:00:00,320 --> 00:00:02,070

[Music]

2
00:00:02,070 --> 00:00:03,840
[Applause]

3
00:00:03,840 --> 00:00:05,660
[Music]

4
00:00:05,660 --> 00:00:07,410
[Applause]

5
00:00:07,410 --> 00:00:09,280
[Music]

6
00:00:09,280 --> 00:00:11,020
[Applause]

7
00:00:11,020 --> 00:00:12,780
[Music]

8
00:00:12,780 --> 00:00:16,860
[Applause]

9
00:00:16,870 --> 00:00:23,570
[Music]

10
00:00:23,570 --> 00:00:29,569
[Applause]

11
00:00:29,579 --> 00:00:33,850
hello hey my mic is on that's awesome

12
00:00:33,850 --> 00:00:35,649
is the text here large enough do I need

13
00:00:35,649 --> 00:00:38,860
a bump for anything I do things in HTML

14
00:00:38,860 --> 00:00:42,070
so that you know you can do that

15
00:00:42,070 --> 00:00:44,920
oh my clicker is not going though let's

16
00:00:44,920 --> 00:00:49,239
get that fixed you know what I didn't do

17
00:00:49,239 --> 00:00:56,200
I didn't plug in the dongle so with a

18
00:00:56,200 --> 00:01:00,329
quick pause for dongles there we go hi

19
00:01:00,329 --> 00:01:05,110
I'm Miriam Suzanne that is definitely a

20
00:01:05,110 --> 00:01:08,310
picture of me and I'm glad to be here

21
00:01:08,310 --> 00:01:12,729
thanks Jen in case you don't know me I

22
00:01:12,729 --> 00:01:16,990
run a bird with my brother

23
00:01:16,990 --> 00:01:20,080
we're a full-stack agency small team

24
00:01:20,080 --> 00:01:22,360
doing client work for various people I

25
00:01:22,360 --> 00:01:24,190
recently started learning JavaScript

26
00:01:24,190 --> 00:01:26,860
sorry being introduced to JavaScript

27
00:01:26,860 --> 00:01:29,610
it's the one language you cannot learn

28
00:01:29,610 --> 00:01:35,229
everything else is learn about so mostly

29
00:01:35,229 --> 00:01:38,650
I've done lots of HTML and CSS and then

30
00:01:38,650 --> 00:01:43,720
dabbled wherever I need to so I've

31
00:01:43,720 --> 00:01:47,049
mostly been known for Susie which I was

32
00:01:47,049 --> 00:01:48,640
told to use as an introduction because

33
00:01:48,640 --> 00:01:50,350
people might know it even if you don't

34
00:01:50,350 --> 00:01:52,720
know me and then show like that it's got

35
00:01:52,720 --> 00:01:54,520
lots of downloads but I don't want to do

36
00:01:54,520 --> 00:01:56,369
that I want to tell you not to use it

37
00:01:56,369 --> 00:02:01,020
because grids are so let's say six peas

38
00:02:01,020 --> 00:02:03,430
right that's going back a little too far

39
00:02:03,430 --> 00:02:06,220
but good so while you were all surfing

40
00:02:06,220 --> 00:02:07,840
yesterday I was just on my way here

41
00:02:07,840 --> 00:02:10,569
sorry I showed up late but I'm here now

42
00:02:10,569 --> 00:02:14,049
the TSA took my toothpaste so you're

43
00:02:14,049 --> 00:02:17,170
safe

44
00:02:17,180 --> 00:02:21,349
but fortunately the hotel has given me

45
00:02:21,349 --> 00:02:25,549
some more so you're safe but let's talk

46
00:02:25,549 --> 00:02:27,349
about CSS and we're going to start with

47
00:02:27,349 --> 00:02:33,640
a little bit of history thanks Jen

48
00:02:33,650 --> 00:02:37,359
so in 1993 we got the first HTML spec

49
00:02:37,359 --> 00:02:43,730
that's this is my company in 93 we were

50
00:02:43,730 --> 00:02:46,489
just doing our first client planning I

51
00:02:46,489 --> 00:02:50,239
think their card sort of some kind a

52
00:02:50,239 --> 00:02:53,329
little bit later we got the font tag in

53
00:02:53,329 --> 00:02:55,639
tables which was great we could start

54
00:02:55,639 --> 00:02:57,530
styling these documents that we had

55
00:02:57,530 --> 00:02:59,959
these HTML documents and in case nobody

56
00:02:59,959 --> 00:03:02,030
screamed it out you recently yes tables

57
00:03:02,030 --> 00:03:07,010
are for data a little bit later actually

58
00:03:07,010 --> 00:03:08,540
earlier if you're looking at when the

59
00:03:08,540 --> 00:03:10,400
spec was first released but later if

60
00:03:10,400 --> 00:03:11,480
you're talking about when it was

61
00:03:11,480 --> 00:03:14,469
implemented in browsers we finally got

62
00:03:14,469 --> 00:03:18,409
CSS cascading style sheets and HTML and

63
00:03:18,409 --> 00:03:19,969
CSS were both built around this

64
00:03:19,969 --> 00:03:22,579
principle of least power what is the

65
00:03:22,579 --> 00:03:24,409
least powerful language we can build

66
00:03:24,409 --> 00:03:27,590
that will solve this problem we need and

67
00:03:27,590 --> 00:03:30,139
that was a guiding principle of the

68
00:03:30,139 --> 00:03:31,549
design of these languages which is

69
00:03:31,549 --> 00:03:32,900
important to know when we're looking at

70
00:03:32,900 --> 00:03:36,919
the history of them so we got CSS and

71
00:03:36,919 --> 00:03:38,389
it's awesome thank you

72
00:03:38,389 --> 00:03:43,069
that's my talk you've all seen this I

73
00:03:43,069 --> 00:03:45,620
you should know I think that this is

74
00:03:45,620 --> 00:03:48,680
absolutely a feature if you had a design

75
00:03:48,680 --> 00:03:51,229
tool that could not handle overflow of a

76
00:03:51,229 --> 00:03:53,629
box you would ditch that design tool

77
00:03:53,629 --> 00:03:55,909
immediately you need to be able to

78
00:03:55,909 --> 00:03:58,790
handle overflow this is a feature of CSS

79
00:03:58,790 --> 00:04:01,519
and we CSS actually gives you various

80
00:04:01,519 --> 00:04:04,220
ways you can handle it and that's good

81
00:04:04,220 --> 00:04:06,169
the problem with this is just that a

82
00:04:06,169 --> 00:04:11,500
designer didn't look at it also in 2000

83
00:04:11,500 --> 00:04:14,439
same time that browsers were picking up

84
00:04:14,439 --> 00:04:18,590
CSS we got the DAO of web design from

85
00:04:18,590 --> 00:04:20,840
john Alsop how many of you have read

86
00:04:20,840 --> 00:04:25,550
that article or know of it a few so

87
00:04:25,550 --> 00:04:30,409
that's an early manifesto saying

88
00:04:30,409 --> 00:04:33,889
limitation of the printed page is that

89
00:04:33,889 --> 00:04:36,259
it's the same everywhere and we have to

90
00:04:36,259 --> 00:04:37,849
stop thinking about that as an advantage

91
00:04:37,849 --> 00:04:39,949
of the printed page that we should

92
00:04:39,949 --> 00:04:42,080
achieve with CSS and instead think of

93
00:04:42,080 --> 00:04:44,330
that as a limitation that we can now go

94
00:04:44,330 --> 00:04:46,189
beyond we can start thinking dynamically

95
00:04:46,189 --> 00:04:48,439
we can start thinking about how things

96
00:04:48,439 --> 00:04:49,999
are gonna look for different people in

97
00:04:49,999 --> 00:04:51,559
different places on different browsers

98
00:04:51,559 --> 00:04:55,610
so this is actually the first time we're

99
00:04:55,610 --> 00:04:57,889
talking about should everything look the

100
00:04:57,889 --> 00:04:59,539
same in every browser and John Alsop

101
00:04:59,539 --> 00:05:04,909
says no around 2007 to 2010 and this is

102
00:05:04,909 --> 00:05:07,159
when I was starting my company we got

103
00:05:07,159 --> 00:05:09,679
the major grid frameworks blueprint oo

104
00:05:09,679 --> 00:05:14,779
CSS 960 at this time grids were starting

105
00:05:14,779 --> 00:05:16,699
to become popular you had 12 columns

106
00:05:16,699 --> 00:05:18,649
gutters between them you were able to

107
00:05:18,649 --> 00:05:21,619
span the columns and this made sense to

108
00:05:21,619 --> 00:05:23,779
me that grid systems would become hugely

109
00:05:23,779 --> 00:05:26,959
popular at this point because we were

110
00:05:26,959 --> 00:05:29,449
using floats and we were dealing with

111
00:05:29,449 --> 00:05:31,729
lots of browser bugs with floats so

112
00:05:31,729 --> 00:05:33,769
every time you made a float you had to

113
00:05:33,769 --> 00:05:35,809
set it to display inline and then you

114
00:05:35,809 --> 00:05:38,029
had to handle various bugs across

115
00:05:38,029 --> 00:05:40,219
different browsers and it was a mess

116
00:05:40,219 --> 00:05:44,119
so these CSS frameworks which were as

117
00:05:44,119 --> 00:05:47,569
far as I recall the first open source

118
00:05:47,569 --> 00:05:51,490
tools that we had as CSS developers

119
00:05:51,490 --> 00:05:54,829
maybe Eric Meyers reset was in there

120
00:05:54,829 --> 00:05:58,309
somewhere but these allowed us to skip

121
00:05:58,309 --> 00:06:01,279
most of the hacks and ignore that part

122
00:06:01,279 --> 00:06:03,769
of the process which was nice so those

123
00:06:03,769 --> 00:06:05,360
became very big that's the same time

124
00:06:05,360 --> 00:06:06,969
that I was actually starting my company

125
00:06:06,969 --> 00:06:11,599
and I saw this talk not live because I

126
00:06:11,599 --> 00:06:14,569
was not in London but thanks to the

127
00:06:14,569 --> 00:06:17,239
Internet if you ever have a chance to

128
00:06:17,239 --> 00:06:19,759
watch this talk it's still relevant

129
00:06:19,759 --> 00:06:21,979
there's a few things in it that are out

130
00:06:21,979 --> 00:06:25,309
of date since 2008 but Natalie down was

131
00:06:25,309 --> 00:06:28,189
proposing a different way of working

132
00:06:28,189 --> 00:06:33,339
with CSS moving away from those

133
00:06:33,339 --> 00:06:37,729
frameworks that were a library of CSS

134
00:06:37,729 --> 00:06:41,749
code and with plain CSS all that we have

135
00:06:41,749 --> 00:06:43,280
is an API when we give you

136
00:06:43,280 --> 00:06:46,220
CSS framework the only API available is

137
00:06:46,220 --> 00:06:48,980
selectors so these were just lists of

138
00:06:48,980 --> 00:06:52,250
selectors that you could use and some

139
00:06:52,250 --> 00:06:53,900
people still use things like that today

140
00:06:53,900 --> 00:06:55,790
she was proposing that instead of a

141
00:06:55,790 --> 00:06:58,190
library full of selectors we could

142
00:06:58,190 --> 00:07:01,850
instead have a system and use consistent

143
00:07:01,850 --> 00:07:03,940
systems so that would be more like BEM

144
00:07:03,940 --> 00:07:08,620
or oo CSS now OS ESS had its framework

145
00:07:08,620 --> 00:07:12,500
but sort of these systems of thinking

146
00:07:12,500 --> 00:07:15,190
about CSS systems of naming things

147
00:07:15,190 --> 00:07:17,360
conventions that we can use across every

148
00:07:17,360 --> 00:07:20,450
site to build consistent grids without

149
00:07:20,450 --> 00:07:23,390
having to use the same grid for every

150
00:07:23,390 --> 00:07:26,030
site that we work on so she was also

151
00:07:26,030 --> 00:07:28,120
working with fluid grids she would put

152
00:07:28,120 --> 00:07:32,260
fluid percent based grids inside of a M

153
00:07:32,260 --> 00:07:34,910
based container and that way it was

154
00:07:34,910 --> 00:07:38,450
responsive to both font size and window

155
00:07:38,450 --> 00:07:42,400
size and this was before responsive

156
00:07:42,400 --> 00:07:46,760
trademark became a thing and really the

157
00:07:46,760 --> 00:07:48,740
the basic difference with responsive was

158
00:07:48,740 --> 00:07:52,550
that it involved media queries I used

159
00:07:52,550 --> 00:07:54,800
her system quite a bit but the math was

160
00:07:54,800 --> 00:07:57,350
really ugly I simplified it here target

161
00:07:57,350 --> 00:08:00,080
divided by context times 100% that's how

162
00:08:00,080 --> 00:08:03,200
you do fluid math but figuring out what

163
00:08:03,200 --> 00:08:06,100
context and target is once you include

164
00:08:06,100 --> 00:08:09,530
gutters can be very complex and at that

165
00:08:09,530 --> 00:08:12,260
point we didn't have sass so actually I

166
00:08:12,260 --> 00:08:13,880
think it existed but nobody knew about

167
00:08:13,880 --> 00:08:18,890
it so my CSS looked like this I was

168
00:08:18,890 --> 00:08:20,810
typing that into a calculator and then

169
00:08:20,810 --> 00:08:23,840
copying and pasting it and nobody had

170
00:08:23,840 --> 00:08:26,840
any idea what my CSS meant there's no

171
00:08:26,840 --> 00:08:29,750
way to know what that's for

172
00:08:29,750 --> 00:08:33,140
soon after that compass and sass did

173
00:08:33,140 --> 00:08:36,050
become more popular and finally our CSS

174
00:08:36,050 --> 00:08:37,070
is turing-complete

175
00:08:37,070 --> 00:08:40,550
it sort of breaks that principle of

176
00:08:40,550 --> 00:08:43,219
least power but I looked at that and

177
00:08:43,219 --> 00:08:45,710
said ok great I can start writing out my

178
00:08:45,710 --> 00:08:49,130
math that's meaningful

179
00:08:49,140 --> 00:08:53,649
not perfect so that's where Susie came

180
00:08:53,649 --> 00:08:54,130
in

181
00:08:54,130 --> 00:08:56,500
I wrote Susie just to take that math and

182
00:08:56,500 --> 00:08:58,300
make it readable that was the entire

183
00:08:58,300 --> 00:09:00,310
point it only does that one equation

184
00:09:00,310 --> 00:09:04,750
good done but what we're going for is

185
00:09:04,750 --> 00:09:07,779
code that's readable both to humans and

186
00:09:07,779 --> 00:09:10,959
to machines that's what we want from the

187
00:09:10,959 --> 00:09:13,630
start we want code that can be read by

188
00:09:13,630 --> 00:09:16,779
other developers as well as read by our

189
00:09:16,779 --> 00:09:21,040
browsers so that it's rendered and

190
00:09:21,040 --> 00:09:23,290
that's the goal and SAS helps with that

191
00:09:23,290 --> 00:09:25,769
we're naming things we get to take this

192
00:09:25,769 --> 00:09:28,450
HSL which some people aren't gonna

193
00:09:28,450 --> 00:09:30,370
understand necessarily what exactly

194
00:09:30,370 --> 00:09:33,670
color that is and we give it a name and

195
00:09:33,670 --> 00:09:37,060
we say not only what color is this but

196
00:09:37,060 --> 00:09:38,829
we can say what do we use it for why is

197
00:09:38,829 --> 00:09:40,029
it here

198
00:09:40,029 --> 00:09:42,820
we can give it a purpose so as Sarah

199
00:09:42,820 --> 00:09:45,670
Dresner says code is communication and I

200
00:09:45,670 --> 00:09:47,260
always have to mention she only said

201
00:09:47,260 --> 00:09:48,970
that once and she complains every time I

202
00:09:48,970 --> 00:09:54,490
quote her on it so sorry Sarah in 2009

203
00:09:54,490 --> 00:09:57,910
we get media queries and then in 2011 we

204
00:09:57,910 --> 00:10:01,149
get calc and calc is really interesting

205
00:10:01,149 --> 00:10:02,529
and it has been around for quite a while

206
00:10:02,529 --> 00:10:06,000
and well-supported more than its used

207
00:10:06,000 --> 00:10:09,279
kal gives us the first ability to mix

208
00:10:09,279 --> 00:10:12,279
units in our CSS finally we can add a

209
00:10:12,279 --> 00:10:15,160
pixel to a percentage and get a result

210
00:10:15,160 --> 00:10:18,040
because calc is calculated by the

211
00:10:18,040 --> 00:10:20,200
browser the browser has access to the

212
00:10:20,200 --> 00:10:22,540
Dom it can figure out both of these

213
00:10:22,540 --> 00:10:26,350
numbers and then add them together so

214
00:10:26,350 --> 00:10:28,270
that's something that SAS will never be

215
00:10:28,270 --> 00:10:29,920
able to do because SAS will never have

216
00:10:29,920 --> 00:10:34,660
access to the browser given all of those

217
00:10:34,660 --> 00:10:38,670
pieces Ethan Marcotte writes his article

218
00:10:38,670 --> 00:10:42,310
gives a talk announces responsive web

219
00:10:42,310 --> 00:10:45,399
design basically saying we need to

220
00:10:45,399 --> 00:10:48,880
target all these things and this is a

221
00:10:48,880 --> 00:10:51,070
fraction of what we're looking at and

222
00:10:51,070 --> 00:10:53,260
it's not just devices we're trying to go

223
00:10:53,260 --> 00:10:56,230
beyond targeting one man with yellow

224
00:10:56,230 --> 00:10:59,589
hair and beyond this and beyond this and

225
00:10:59,589 --> 00:11:02,140
you know we don't even know

226
00:11:02,140 --> 00:11:03,820
things about these people just from

227
00:11:03,820 --> 00:11:05,589
their pictures but we're trying to

228
00:11:05,589 --> 00:11:09,300
target lots of people in lots of places

229
00:11:09,300 --> 00:11:13,779
so we need to remember that though CSS

230
00:11:13,779 --> 00:11:16,930
has a declarative syntax CSS is in no

231
00:11:16,930 --> 00:11:21,760
way static CSS is built for from the

232
00:11:21,760 --> 00:11:24,700
start it is built to give us ability to

233
00:11:24,700 --> 00:11:27,970
make change and to style change how does

234
00:11:27,970 --> 00:11:29,890
this look different in one place versus

235
00:11:29,890 --> 00:11:31,959
another place and those are the sorts of

236
00:11:31,959 --> 00:11:34,329
rules that were writing in CSS it's not

237
00:11:34,329 --> 00:11:38,110
here's how it is forever but here's how

238
00:11:38,110 --> 00:11:40,540
it should handle different situations

239
00:11:40,540 --> 00:11:43,690
that's what CSS is written for so part

240
00:11:43,690 --> 00:11:47,140
of that is going with the flow you may

241
00:11:47,140 --> 00:11:49,300
know the concept of the flow these

242
00:11:49,300 --> 00:11:51,700
things are in an inline flow and they

243
00:11:51,700 --> 00:11:53,290
move in relationship to each other

244
00:11:53,290 --> 00:11:56,140
we can toggle that to a block flow and

245
00:11:56,140 --> 00:11:59,760
see that they move in a different axis

246
00:11:59,760 --> 00:12:02,320
but the flow is useful because it sets

247
00:12:02,320 --> 00:12:05,079
up relationships between objects rather

248
00:12:05,079 --> 00:12:07,480
than having each object on its own on

249
00:12:07,480 --> 00:12:09,640
the page if you've got if each object

250
00:12:09,640 --> 00:12:11,740
was on its own when I change the size of

251
00:12:11,740 --> 00:12:14,740
one I would have to hard-code this size

252
00:12:14,740 --> 00:12:16,420
change for every other object in the

253
00:12:16,420 --> 00:12:19,720
flow but the flow gives us ability to

254
00:12:19,720 --> 00:12:23,470
just let those relationships move so

255
00:12:23,470 --> 00:12:24,940
responsive design said we're going to

256
00:12:24,940 --> 00:12:27,579
use fluid grids flexible images and

257
00:12:27,579 --> 00:12:30,490
media queries to manage how the flow

258
00:12:30,490 --> 00:12:32,529
changes at different sized screens on

259
00:12:32,529 --> 00:12:34,839
different devices that was a new idea

260
00:12:34,839 --> 00:12:36,399
putting all that together it's

261
00:12:36,399 --> 00:12:38,019
interesting media queries were available

262
00:12:38,019 --> 00:12:39,579
much earlier but nobody was really

263
00:12:39,579 --> 00:12:41,890
paying attention to them until Ethan

264
00:12:41,890 --> 00:12:46,240
wrote that article in 2014 and I was

265
00:12:46,240 --> 00:12:50,320
surprised by how long ago this was we

266
00:12:50,320 --> 00:12:53,699
got CSS variables Firefox 31

267
00:12:53,699 --> 00:12:56,829
unless you count current color current

268
00:12:56,829 --> 00:12:59,110
color has been a variable that we've had

269
00:12:59,110 --> 00:13:02,410
since the beginning it stores the

270
00:13:02,410 --> 00:13:07,600
current color in your CSS and that's

271
00:13:07,600 --> 00:13:10,029
figured out by where you are in the Dom

272
00:13:10,029 --> 00:13:13,350
not just where you are in the CSS file

273
00:13:13,350 --> 00:13:16,089
but a variable we didn't have

274
00:13:16,089 --> 00:13:18,759
access to changing at that point now we

275
00:13:18,759 --> 00:13:21,040
have access to change these and tab

276
00:13:21,040 --> 00:13:24,509
Atkins wrote the spec for this it looks

277
00:13:24,509 --> 00:13:29,110
like this you can define the color and

278
00:13:29,110 --> 00:13:33,339
you can then call it so it's basically

279
00:13:33,339 --> 00:13:36,600
an empty browser prefix on a property

280
00:13:36,600 --> 00:13:41,350
and the goal there he says was that he

281
00:13:41,350 --> 00:13:43,660
was actually trying to slip in a new

282
00:13:43,660 --> 00:13:45,819
feature called custom properties nobody

283
00:13:45,819 --> 00:13:47,589
would go for it he called it variables

284
00:13:47,589 --> 00:13:49,029
and they bought it

285
00:13:49,029 --> 00:13:50,980
so he's now working on the next step of

286
00:13:50,980 --> 00:13:54,550
that which is to make it more powerful

287
00:13:54,550 --> 00:13:57,579
as a custom property this is how you

288
00:13:57,579 --> 00:13:59,980
access it you use the VAR function in

289
00:13:59,980 --> 00:14:02,889
CSS now you can call the property name

290
00:14:02,889 --> 00:14:05,160
and then you can also give it a fallback

291
00:14:05,160 --> 00:14:08,920
so that's useful if the property may or

292
00:14:08,920 --> 00:14:12,939
may not be defined in some ways that's

293
00:14:12,939 --> 00:14:14,889
similar to variables in sass we've all

294
00:14:14,889 --> 00:14:16,839
worked with variables before I hear

295
00:14:16,839 --> 00:14:20,259
JavaScript also has variables though I

296
00:14:20,259 --> 00:14:22,360
can't guarantee it

297
00:14:22,360 --> 00:14:24,850
so sass variables were rad when we got

298
00:14:24,850 --> 00:14:26,410
those we were able to clean up a lot of

299
00:14:26,410 --> 00:14:29,470
our code they hold beta they're useful

300
00:14:29,470 --> 00:14:32,410
for that they store something they make

301
00:14:32,410 --> 00:14:34,990
it reusable they help us make our code

302
00:14:34,990 --> 00:14:39,610
more dry that's great but sass variables

303
00:14:39,610 --> 00:14:42,939
use scope the way we understand it in

304
00:14:42,939 --> 00:14:45,759
most languages where we look at the file

305
00:14:45,759 --> 00:14:50,470
and we can see the scope because columns

306
00:14:50,470 --> 00:14:53,050
two is defined inside of example and

307
00:14:53,050 --> 00:14:55,720
even though nested class is nested in

308
00:14:55,720 --> 00:14:58,209
the Dom we don't know that it's nested

309
00:14:58,209 --> 00:15:00,870
in our code so it has no access to

310
00:15:00,870 --> 00:15:03,730
columns two and when we change something

311
00:15:03,730 --> 00:15:08,559
at a media query we can change the value

312
00:15:08,559 --> 00:15:10,660
of columns there but it only changes for

313
00:15:10,660 --> 00:15:14,319
that scope so it again isn't changing

314
00:15:14,319 --> 00:15:18,490
for everything in the media query or

315
00:15:18,490 --> 00:15:20,949
everything that uses it it has no access

316
00:15:20,949 --> 00:15:22,899
to the Dom it's just scoped in the file

317
00:15:22,899 --> 00:15:24,429
like we would with in other programming

318
00:15:24,429 --> 00:15:26,769
languages that's the big difference here

319
00:15:26,769 --> 00:15:29,799
with CSS variables we finally have a way

320
00:15:29,799 --> 00:15:29,990
of

321
00:15:29,990 --> 00:15:32,720
scoping to the Dom the same way that CSS

322
00:15:32,720 --> 00:15:36,680
does that cascade that we're used to or

323
00:15:36,680 --> 00:15:41,180
maybe not used to so what that means is

324
00:15:41,180 --> 00:15:43,550
that when we set columns to in example

325
00:15:43,550 --> 00:15:46,910
all of the children nodes in the Dom of

326
00:15:46,910 --> 00:15:50,420
example will have that value even if

327
00:15:50,420 --> 00:15:51,860
they are not nested in the style sheet

328
00:15:51,860 --> 00:15:54,920
and that means that we can now change a

329
00:15:54,920 --> 00:15:57,260
value at a media query and have that

330
00:15:57,260 --> 00:16:00,880
trickle down to everything at that size

331
00:16:00,880 --> 00:16:03,740
in the browser so that's a very

332
00:16:03,740 --> 00:16:06,260
different way that these work and really

333
00:16:06,260 --> 00:16:07,610
changes how we think about them and how

334
00:16:07,610 --> 00:16:13,370
we use them in order for them the by

335
00:16:13,370 --> 00:16:16,910
default they inherit everywhere if we

336
00:16:16,910 --> 00:16:19,339
put them in the root tag then I really

337
00:16:19,339 --> 00:16:22,520
mean everywhere everywhere that makes

338
00:16:22,520 --> 00:16:24,260
this color available throughout our

339
00:16:24,260 --> 00:16:27,020
entire document so that's something that

340
00:16:27,020 --> 00:16:29,180
we can do if we really don't want things

341
00:16:29,180 --> 00:16:34,459
to inherit we can set them to reset to

342
00:16:34,459 --> 00:16:37,430
their initial value on every property so

343
00:16:37,430 --> 00:16:40,070
this is a useful way to say certain

344
00:16:40,070 --> 00:16:42,350
things should not inherit let's reset

345
00:16:42,350 --> 00:16:46,700
them every time if you need that one of

346
00:16:46,700 --> 00:16:48,529
the things that I most love about them

347
00:16:48,529 --> 00:16:50,600
and have started using them for right

348
00:16:50,600 --> 00:16:52,880
away is that they make inline Styles

349
00:16:52,880 --> 00:16:55,399
totally safe there's always been a

350
00:16:55,399 --> 00:16:59,000
problem with inline Styles being too

351
00:16:59,000 --> 00:17:01,250
specific it's impossible to override an

352
00:17:01,250 --> 00:17:03,260
inline style if you need to but when

353
00:17:03,260 --> 00:17:05,199
you're just defining a variable inline

354
00:17:05,199 --> 00:17:07,670
you don't need to override it you can

355
00:17:07,670 --> 00:17:11,179
just ignore it so it's totally safe to

356
00:17:11,179 --> 00:17:12,860
set any variables you want to in your

357
00:17:12,860 --> 00:17:16,250
HTML which is a great way to pass data

358
00:17:16,250 --> 00:17:20,000
between JavaScript and CSS you can set

359
00:17:20,000 --> 00:17:22,280
the variable in the HTML it's totally

360
00:17:22,280 --> 00:17:24,260
safe CSS can ignore it when it needs to

361
00:17:24,260 --> 00:17:27,260
has access to it when it wants and

362
00:17:27,260 --> 00:17:29,230
you're still separating those concerns

363
00:17:29,230 --> 00:17:34,700
while communicating between them yeah I

364
00:17:34,700 --> 00:17:36,230
already showed you how to use them so I

365
00:17:36,230 --> 00:17:38,300
don't know what this slide is for so

366
00:17:38,300 --> 00:17:39,650
I'll just give you a moment with it

367
00:17:39,650 --> 00:17:42,250
while I have a drink

368
00:17:42,250 --> 00:17:49,030
think on that you know what about that

369
00:17:49,030 --> 00:17:56,110
fallback color it's a bit bright right

370
00:17:56,110 --> 00:17:59,380
so you can call it there or you can

371
00:17:59,380 --> 00:18:00,940
ignore it so that was the point of those

372
00:18:00,940 --> 00:18:02,590
than I just should have gone through my

373
00:18:02,590 --> 00:18:05,530
slides faster another thing that you can

374
00:18:05,530 --> 00:18:07,390
do that I've used it for a lot is if I

375
00:18:07,390 --> 00:18:11,470
don't want excessive nesting in my CSS

376
00:18:11,470 --> 00:18:15,370
if I don't want really specific long

377
00:18:15,370 --> 00:18:18,400
selector strings I can avoid it by

378
00:18:18,400 --> 00:18:22,630
changing a variable at the at the root

379
00:18:22,630 --> 00:18:24,970
string where I want it to change

380
00:18:24,970 --> 00:18:27,039
and then just grabbing that variable in

381
00:18:27,039 --> 00:18:29,289
the button so I can suddenly make

382
00:18:29,289 --> 00:18:30,580
buttons look different in different

383
00:18:30,580 --> 00:18:33,100
places without adding any specificity to

384
00:18:33,100 --> 00:18:37,059
my button selector I like that that's a

385
00:18:37,059 --> 00:18:39,539
really nice way to avoid increasing

386
00:18:39,539 --> 00:18:42,659
specificity when you don't want to

387
00:18:42,659 --> 00:18:46,210
another way to use it you can start to

388
00:18:46,210 --> 00:18:49,020
create defaults where they're missing

389
00:18:49,020 --> 00:18:54,730
and missing longhand so box-shadow for

390
00:18:54,730 --> 00:18:57,039
example only has the shorthand property

391
00:18:57,039 --> 00:18:59,770
if you wanted to change any one part of

392
00:18:59,770 --> 00:19:02,020
a box-shadow you would have to redefine

393
00:19:02,020 --> 00:19:03,159
the entire box-shadow

394
00:19:03,159 --> 00:19:06,789
but with variables we can set each

395
00:19:06,789 --> 00:19:08,799
property as a variable and then we have

396
00:19:08,799 --> 00:19:10,240
access to change that variable

397
00:19:10,240 --> 00:19:12,549
individually that's also really useful

398
00:19:12,549 --> 00:19:16,590
for things like transition transform

399
00:19:16,590 --> 00:19:19,059
that have different properties you want

400
00:19:19,059 --> 00:19:23,320
to transform and then a last way and

401
00:19:23,320 --> 00:19:25,299
this is less and less needed this auto

402
00:19:25,299 --> 00:19:28,929
prefixing but you can create mix-ins in

403
00:19:28,929 --> 00:19:31,360
a way if you have multiple properties

404
00:19:31,360 --> 00:19:34,900
that need the same value we can use them

405
00:19:34,900 --> 00:19:35,860
that way

406
00:19:35,860 --> 00:19:41,110
like we would use mix-ins in SAS but

407
00:19:41,110 --> 00:19:42,730
where I start to get excited is when we

408
00:19:42,730 --> 00:19:44,700
start combining them with calculations

409
00:19:44,700 --> 00:19:48,510
so now I can pass data in to CSS and

410
00:19:48,510 --> 00:19:54,090
manipulate it and return a new value so

411
00:19:54,090 --> 00:19:56,760
as a test the first thing I did was I

412
00:19:56,760 --> 00:19:59,970
rebuilt Susy entirely in CSS

413
00:19:59,970 --> 00:20:04,890
there's no sass involved here and it

414
00:20:04,890 --> 00:20:07,470
works in in fact the background images

415
00:20:07,470 --> 00:20:10,770
are also generated by CSS variables calc

416
00:20:10,770 --> 00:20:15,179
and a background gradient and you can

417
00:20:15,179 --> 00:20:17,130
see the full demo there if you go to the

418
00:20:17,130 --> 00:20:20,549
link and this is how it works

419
00:20:20,549 --> 00:20:22,470
I'm just setting the same global

420
00:20:22,470 --> 00:20:26,340
settings that Suzy has the columns the

421
00:20:26,340 --> 00:20:27,809
gutter the spread the container spread

422
00:20:27,809 --> 00:20:32,010
and then I have 50 of these functions or

423
00:20:32,010 --> 00:20:36,240
so the interesting thing about using CSS

424
00:20:36,240 --> 00:20:38,669
variables as functions is that they can

425
00:20:38,669 --> 00:20:41,970
only hold one value at a time so you can

426
00:20:41,970 --> 00:20:46,110
only have one calculation per element

427
00:20:46,110 --> 00:20:49,380
which is not particularly useful but it

428
00:20:49,380 --> 00:20:55,049
works so then in use using it this is

429
00:20:55,049 --> 00:20:57,720
all of the code for defining the final

430
00:20:57,720 --> 00:20:58,649
layout

431
00:20:58,649 --> 00:21:00,899
I just set how many columns there are

432
00:21:00,899 --> 00:21:04,169
and then say how many I want to span and

433
00:21:04,169 --> 00:21:05,880
I can change how many columns are

434
00:21:05,880 --> 00:21:08,909
available for nested context and all of

435
00:21:08,909 --> 00:21:12,059
that works very smoothly so and then the

436
00:21:12,059 --> 00:21:16,850
background images also uses that and

437
00:21:16,850 --> 00:21:19,830
calculates out the background it don't

438
00:21:19,830 --> 00:21:23,370
use it really like this is overkill it's

439
00:21:23,370 --> 00:21:26,250
totally not worthwhile but that concept

440
00:21:26,250 --> 00:21:29,490
is useful if you do want a grid system

441
00:21:29,490 --> 00:21:34,200
in your HTML passing in columns and

442
00:21:34,200 --> 00:21:36,630
gutters and then defining how they're

443
00:21:36,630 --> 00:21:40,200
used in the CSS that's a that's a good

444
00:21:40,200 --> 00:21:41,640
way to go the reason you shouldn't use

445
00:21:41,640 --> 00:21:43,590
mine is because I tried to solve all

446
00:21:43,590 --> 00:21:45,840
layout problems at once and you don't

447
00:21:45,840 --> 00:21:47,279
need to solve all they are problems at

448
00:21:47,279 --> 00:21:51,669
once you have your one layout problem

449
00:21:51,679 --> 00:21:53,520
another thing that I just started

450
00:21:53,520 --> 00:21:56,549
playing with and this is there's a

451
00:21:56,549 --> 00:21:59,580
article on CSS tricks that inspired some

452
00:21:59,580 --> 00:22:03,649
of this is manipulating individual

453
00:22:03,649 --> 00:22:07,230
values of the HSL function as variables

454
00:22:07,230 --> 00:22:08,250
and then

455
00:22:08,250 --> 00:22:11,190
getting to change them individually for

456
00:22:11,190 --> 00:22:13,740
example creating a darken and a

457
00:22:13,740 --> 00:22:15,390
compliment

458
00:22:15,390 --> 00:22:18,510
and being able to use those where I want

459
00:22:18,510 --> 00:22:21,000
so I can start to create a theme based

460
00:22:21,000 --> 00:22:24,810
on CSS variables so the fun thing that

461
00:22:24,810 --> 00:22:26,970
they were showing in the article is the

462
00:22:26,970 --> 00:22:30,150
way you can use clamped values so this

463
00:22:30,150 --> 00:22:33,600
would be to say the the color wheel

464
00:22:33,600 --> 00:22:38,480
no the lightness scale from 0 to 100

465
00:22:38,480 --> 00:22:41,520
will clamp at 0 and 100 so if you go

466
00:22:41,520 --> 00:22:44,760
under 0 it will stay at 0 if you go over

467
00:22:44,760 --> 00:22:47,010
100 it will stay at 100 so you can use

468
00:22:47,010 --> 00:22:48,720
that to toggle back and forth between a

469
00:22:48,720 --> 00:22:50,910
black and a white by multiplying with a

470
00:22:50,910 --> 00:22:53,600
negative value or with a positive value

471
00:22:53,600 --> 00:22:59,070
you can do something similar with the

472
00:22:59,070 --> 00:23:01,410
color wheel if you go over 360 you're

473
00:23:01,410 --> 00:23:03,960
still on the wheel so you can simply add

474
00:23:03,960 --> 00:23:08,790
to get the complement so here's a little

475
00:23:08,790 --> 00:23:10,170
tool that I built that just lets me

476
00:23:10,170 --> 00:23:13,590
adjust so the threshold is where we're

477
00:23:13,590 --> 00:23:16,530
doing the toggle what lightness do we

478
00:23:16,530 --> 00:23:21,150
want to switch our main color at and

479
00:23:21,150 --> 00:23:25,740
then as we change color when we go past

480
00:23:25,740 --> 00:23:29,010
the threshold we change so this is a

481
00:23:29,010 --> 00:23:32,310
rudimentary way of doing color ratio

482
00:23:32,310 --> 00:23:34,500
accessibility it fails a little bit

483
00:23:34,500 --> 00:23:37,850
because you'll notice that if we have a

484
00:23:37,850 --> 00:23:41,730
blue and a yellow say there are

485
00:23:41,730 --> 00:23:43,350
different times when they ought to

486
00:23:43,350 --> 00:23:47,040
switch so it's not perfect because we

487
00:23:47,040 --> 00:23:48,120
don't actually see color

488
00:23:48,120 --> 00:23:52,980
purely by lightness so again probably

489
00:23:52,980 --> 00:23:55,890
not useful right away but the concept is

490
00:23:55,890 --> 00:23:57,420
fun to play with we can now start

491
00:23:57,420 --> 00:24:00,480
creating themes purely in our CSS

492
00:24:00,480 --> 00:24:02,820
passing in one color and generating the

493
00:24:02,820 --> 00:24:06,030
other colors that we need through

494
00:24:06,030 --> 00:24:08,340
JavaScript I here this is a JavaScript

495
00:24:08,340 --> 00:24:11,610
conference so I threw in this slide you

496
00:24:11,610 --> 00:24:15,510
can access and change the custom

497
00:24:15,510 --> 00:24:17,400
properties like you would access and

498
00:24:17,400 --> 00:24:20,040
change any other property in CSS there's

499
00:24:20,040 --> 00:24:20,980
a lot more come

500
00:24:20,980 --> 00:24:23,980
sorry that's all that I know I've only

501
00:24:23,980 --> 00:24:29,260
been introduced and actually I should

502
00:24:29,260 --> 00:24:30,940
jump to this one first there's a lot

503
00:24:30,940 --> 00:24:33,520
more coming in terms of JavaScript mean

504
00:24:33,520 --> 00:24:39,429
manipulation of CSS variables right now

505
00:24:39,429 --> 00:24:41,980
it's all behind a flag in Chrome but you

506
00:24:41,980 --> 00:24:43,360
can start playing with it it's called

507
00:24:43,360 --> 00:24:46,360
Houdini because it helps you escape from

508
00:24:46,360 --> 00:24:52,390
the confines of CSS something so there's

509
00:24:52,390 --> 00:24:55,210
a few issues when you start playing a

510
00:24:55,210 --> 00:25:00,090
few gotchas types aren't defined

511
00:25:00,090 --> 00:25:01,900
currently and that's part of what

512
00:25:01,900 --> 00:25:05,169
Houdini is gonna help us solve so when I

513
00:25:05,169 --> 00:25:08,049
put in a string or a color CSS doesn't

514
00:25:08,049 --> 00:25:09,610
yet know the browser doesn't yet know

515
00:25:09,610 --> 00:25:12,669
what it is so it has trouble animating

516
00:25:12,669 --> 00:25:15,100
it so at this point you have to animate

517
00:25:15,100 --> 00:25:18,090
the property that it's put on not the

518
00:25:18,090 --> 00:25:21,220
CSS variable itself because the browser

519
00:25:21,220 --> 00:25:23,080
doesn't know how to animate an unknown

520
00:25:23,080 --> 00:25:27,270
type they don't work inside of the URL

521
00:25:27,270 --> 00:25:30,610
function which is too bad I've had

522
00:25:30,610 --> 00:25:32,710
problems with that several times and

523
00:25:32,710 --> 00:25:36,700
then another thing you'll notice the VAR

524
00:25:36,700 --> 00:25:39,150
size M I can't

525
00:25:39,150 --> 00:25:42,309
concatenate things like that so I have

526
00:25:42,309 --> 00:25:47,049
to use instead calc var size times 1/m

527
00:25:47,049 --> 00:25:51,400
the browser can do that math adding an M

528
00:25:51,400 --> 00:25:53,590
unit that way but it can't do string

529
00:25:53,590 --> 00:25:56,080
concatenation so that's unfortunate

530
00:25:56,080 --> 00:25:59,260
hopefully we'll get that eventually part

531
00:25:59,260 --> 00:26:01,600
of what we're gonna get from Houdini is

532
00:26:01,600 --> 00:26:04,030
this ability to register properties and

533
00:26:04,030 --> 00:26:06,460
define their syntax define their type

534
00:26:06,460 --> 00:26:08,799
and that will start to allow the browser

535
00:26:08,799 --> 00:26:10,510
to do some of these things that we can't

536
00:26:10,510 --> 00:26:14,679
yet do so if I were tab I would show you

537
00:26:14,679 --> 00:26:18,070
a demo of that but I'm not you can learn

538
00:26:18,070 --> 00:26:20,140
a lot more from leav rule on this she's

539
00:26:20,140 --> 00:26:22,150
done some amazing talks that just dive

540
00:26:22,150 --> 00:26:24,610
into variables and everything you can do

541
00:26:24,610 --> 00:26:25,750
with them and if you've never seen her

542
00:26:25,750 --> 00:26:27,730
talk her talks are amazing she live

543
00:26:27,730 --> 00:26:33,140
codes the whole thing and I can't

544
00:26:33,140 --> 00:26:36,540
so I'm gonna start to put that together

545
00:26:36,540 --> 00:26:38,370
with CSS grid instead of going more into

546
00:26:38,370 --> 00:26:41,910
depth with that CSS grid was fun because

547
00:26:41,910 --> 00:26:44,370
it suddenly landed in three browsers all

548
00:26:44,370 --> 00:26:44,850
at once

549
00:26:44,850 --> 00:26:48,960
in March of 2017 it was one day not

550
00:26:48,960 --> 00:26:50,910
usable and the next day I woke up and

551
00:26:50,910 --> 00:26:53,850
could use grid and production which was

552
00:26:53,850 --> 00:26:58,020
fun we were in the future now or more

553
00:26:58,020 --> 00:27:01,450
relatable we're in the future now that

554
00:27:01,460 --> 00:27:06,150
boat is awesome whoever built that there

555
00:27:06,150 --> 00:27:10,410
is seriously nothing like it it so.when

556
00:27:10,410 --> 00:27:12,780
CSS grid landed I stopped getting

557
00:27:12,780 --> 00:27:14,850
invited to conferences because I was

558
00:27:14,850 --> 00:27:17,040
known for Suzy and Suzy was dead that

559
00:27:17,040 --> 00:27:20,580
day like that was dead CSS grid is

560
00:27:20,580 --> 00:27:23,520
totally unique it can do way more than

561
00:27:23,520 --> 00:27:28,440
any sass a library that there is if any

562
00:27:28,440 --> 00:27:32,880
sass library claims or or what's that

563
00:27:32,880 --> 00:27:36,120
other one post CSS if any of them claim

564
00:27:36,120 --> 00:27:37,679
that they can do what CSS grid does

565
00:27:37,679 --> 00:27:40,380
they're lying to you don't believe them

566
00:27:40,380 --> 00:27:43,350
it's really unique because all of the

567
00:27:43,350 --> 00:27:45,000
calculations are run by the browser it

568
00:27:45,000 --> 00:27:48,300
has access to the Dom it can do mixed

569
00:27:48,300 --> 00:27:51,150
units in a way that nothing else can the

570
00:27:51,150 --> 00:27:53,100
spec is very complex and I've seen lots

571
00:27:53,100 --> 00:27:55,260
of talks on grid go into detail on the

572
00:27:55,260 --> 00:27:57,990
spec and people are scared away getting

573
00:27:57,990 --> 00:28:00,809
started doesn't have to be reading the

574
00:28:00,809 --> 00:28:02,220
whole spec there's a lot of ways to get

575
00:28:02,220 --> 00:28:05,190
started very quickly it basically looks

576
00:28:05,190 --> 00:28:07,260
like this the grid is defined on the

577
00:28:07,260 --> 00:28:10,530
container so you can say display grid

578
00:28:10,530 --> 00:28:14,040
it's just a display property you can

579
00:28:14,040 --> 00:28:16,230
define columns and rows I only showed

580
00:28:16,230 --> 00:28:21,030
columns there but our normal historic

581
00:28:21,030 --> 00:28:23,340
twelve column grid we can create with

582
00:28:23,340 --> 00:28:26,370
that line of code repeat twelve one

583
00:28:26,370 --> 00:28:29,300
fraction and then we can put in gutters

584
00:28:29,300 --> 00:28:32,330
without having to do any math of our own

585
00:28:32,330 --> 00:28:35,190
optionally so that was defining it on

586
00:28:35,190 --> 00:28:39,059
the container optionally we can pass

587
00:28:39,059 --> 00:28:42,690
control of sizing on the grid back to

588
00:28:42,690 --> 00:28:45,770
our elements using the auto keyword

589
00:28:45,770 --> 00:28:49,400
and so what Auto does is it just returns

590
00:28:49,400 --> 00:28:50,210
to the flow

591
00:28:50,210 --> 00:28:51,980
what would this element do naturally on

592
00:28:51,980 --> 00:28:53,480
its own and we looked at the flow

593
00:28:53,480 --> 00:28:56,470
earlier on the inline axis and on the

594
00:28:56,470 --> 00:29:01,220
block axis if it's confusing

595
00:29:01,220 --> 00:29:05,570
there are several different units in CSS

596
00:29:05,570 --> 00:29:08,360
now that all have to do with percentages

597
00:29:08,360 --> 00:29:11,270
of the space this is your cheat sheet

598
00:29:11,270 --> 00:29:13,970
for them so a percent is relative to the

599
00:29:13,970 --> 00:29:16,010
parent with actually that's available

600
00:29:16,010 --> 00:29:18,260
space in the parent so that wouldn't

601
00:29:18,260 --> 00:29:22,010
include padding the VW unit is relative

602
00:29:22,010 --> 00:29:26,030
to the entire viewpoint viewport so 100

603
00:29:26,030 --> 00:29:29,570
VW is the entire width of the window and

604
00:29:29,570 --> 00:29:33,080
fraction is the new one added in CSS

605
00:29:33,080 --> 00:29:37,400
grid and what it means is how to share

606
00:29:37,400 --> 00:29:41,180
remaining space so a fraction unit takes

607
00:29:41,180 --> 00:29:43,520
up a percentage of remaining space

608
00:29:43,520 --> 00:29:45,920
that's similar if you've used flex box

609
00:29:45,920 --> 00:29:48,890
to the Flex grow in Flex shrink which

610
00:29:48,890 --> 00:29:51,500
have no units it's exactly the same

611
00:29:51,500 --> 00:29:53,960
context how fast should this shrink or

612
00:29:53,960 --> 00:29:56,900
grow to give up or take up remaining

613
00:29:56,900 --> 00:30:00,230
space one tricky thing about the

614
00:30:00,230 --> 00:30:02,690
fraction unit if you define something as

615
00:30:02,690 --> 00:30:05,870
one fraction it automatically assumes

616
00:30:05,870 --> 00:30:09,380
you mean min max Auto one fraction so it

617
00:30:09,380 --> 00:30:12,860
will only grow and not shrink because

618
00:30:12,860 --> 00:30:16,520
auto is the minimum and then it's

619
00:30:16,520 --> 00:30:18,170
allowed to grow to one fraction so if

620
00:30:18,170 --> 00:30:20,570
you actually want something to shrink

621
00:30:20,570 --> 00:30:23,180
and grow you have to set a new minimum

622
00:30:23,180 --> 00:30:25,880
so I have quite a few of these in my

623
00:30:25,880 --> 00:30:28,670
code min max zero one fraction to allow

624
00:30:28,670 --> 00:30:31,880
something to shrink completely grids

625
00:30:31,880 --> 00:30:34,400
wants you to find a grid you get a

626
00:30:34,400 --> 00:30:36,530
layout like this you have your grid

627
00:30:36,530 --> 00:30:39,080
lines and they're one indexed and then

628
00:30:39,080 --> 00:30:41,150
they're also negative one indexed so you

629
00:30:41,150 --> 00:30:43,490
can access them from the front or from

630
00:30:43,490 --> 00:30:47,570
the back and you have this sort of

631
00:30:47,570 --> 00:30:49,370
single source of truth that you can

632
00:30:49,370 --> 00:30:52,700
create this is starting to build out

633
00:30:52,700 --> 00:30:55,280
more complex defining different parts of

634
00:30:55,280 --> 00:30:57,320
how we're going to relate to this grid

635
00:30:57,320 --> 00:30:59,520
but we can basically draw this

636
00:30:59,520 --> 00:31:03,780
ASCII art of our layout and then say the

637
00:31:03,780 --> 00:31:07,350
header takes up both columns and is

638
00:31:07,350 --> 00:31:12,600
sized Auto for its vertical and then nav

639
00:31:12,600 --> 00:31:14,490
is on one side main and is on the other

640
00:31:14,490 --> 00:31:15,930
side and then the footer goes across

641
00:31:15,930 --> 00:31:19,160
again and then we define the column

642
00:31:19,160 --> 00:31:23,760
widths at the bottom and then for the

643
00:31:23,760 --> 00:31:28,500
layout similar to the Suzy demonstration

644
00:31:28,500 --> 00:31:31,500
we just pass in the name and it

645
00:31:31,500 --> 00:31:32,940
automatically goes there and actually

646
00:31:32,940 --> 00:31:36,480
this ignores the order of the elements

647
00:31:36,480 --> 00:31:38,970
in the Dom so no matter what order these

648
00:31:38,970 --> 00:31:41,970
are in the Dom we can pass them to the

649
00:31:41,970 --> 00:31:44,160
right area of the grid so there's a lot

650
00:31:44,160 --> 00:31:47,250
of power there be careful with mixing up

651
00:31:47,250 --> 00:31:50,790
code order Dom order and visual order

652
00:31:50,790 --> 00:31:52,950
but there's good reasons for it

653
00:31:52,950 --> 00:31:54,870
sometimes so right away with those

654
00:31:54,870 --> 00:31:57,810
couple lines of code we have a full

655
00:31:57,810 --> 00:32:00,420
standard layout and that's it and really

656
00:32:00,420 --> 00:32:02,070
CSS developers are all going to get

657
00:32:02,070 --> 00:32:05,520
fired because this is gonna be just too

658
00:32:05,520 --> 00:32:12,120
easy so Jen Simmons who's been doing

659
00:32:12,120 --> 00:32:16,250
lots of the work on the grid spec and on

660
00:32:16,250 --> 00:32:18,690
informing people about it

661
00:32:18,690 --> 00:32:20,790
has sorted call this intrinsic web

662
00:32:20,790 --> 00:32:23,910
design the next step after responsive so

663
00:32:23,910 --> 00:32:26,700
instead of just being fluid it's both

664
00:32:26,700 --> 00:32:29,060
fluid and fixed we can mix the two now

665
00:32:29,060 --> 00:32:32,160
they can live together we dealing with

666
00:32:32,160 --> 00:32:35,880
stages of squishiness so something can

667
00:32:35,880 --> 00:32:40,320
be fixed or it can use fractions to take

668
00:32:40,320 --> 00:32:43,080
up remaining space to be somewhat fluid

669
00:32:43,080 --> 00:32:45,780
we can use min max to let something be

670
00:32:45,780 --> 00:32:49,920
fluid until it is fixed and we can use

671
00:32:49,920 --> 00:32:51,840
auto to return to the flow so we've got

672
00:32:51,840 --> 00:32:54,540
all these different stages of how we're

673
00:32:54,540 --> 00:32:57,510
handling squishiness in our elements we

674
00:32:57,510 --> 00:32:59,460
finally have truly two-dimensional

675
00:32:59,460 --> 00:33:03,090
layouts we get columns and rows which is

676
00:33:03,090 --> 00:33:07,680
totally new in CSS revolutionary to

677
00:33:07,680 --> 00:33:11,220
dimensions and we can start to mix these

678
00:33:11,220 --> 00:33:12,899
things there's no reason that

679
00:33:12,899 --> 00:33:15,839
floats are gone forever I've already

680
00:33:15,839 --> 00:33:17,779
heard some people talking about floats

681
00:33:17,779 --> 00:33:20,339
like we talked about tables for a little

682
00:33:20,339 --> 00:33:22,769
where a teacher was refusing to allow

683
00:33:22,769 --> 00:33:24,779
their students to float anything that's

684
00:33:24,779 --> 00:33:27,299
absurd floats are still useful for what

685
00:33:27,299 --> 00:33:29,279
they were invented for which is floating

686
00:33:29,279 --> 00:33:32,339
images in text they have a narrower use

687
00:33:32,339 --> 00:33:35,549
case they're not gone but we can start

688
00:33:35,549 --> 00:33:36,899
to mix these things so when we want

689
00:33:36,899 --> 00:33:39,779
things to align and flow in one

690
00:33:39,779 --> 00:33:41,629
dimension flexbox is better for that

691
00:33:41,629 --> 00:33:43,559
when we want to go into two dimensions

692
00:33:43,559 --> 00:33:46,710
grid works great sometimes I go back and

693
00:33:46,710 --> 00:33:49,349
forth on those between whether I'm want

694
00:33:49,349 --> 00:33:52,919
to define the spacing from the child or

695
00:33:52,919 --> 00:33:54,389
from the parent so there's different

696
00:33:54,389 --> 00:33:56,070
reasons to use them and we can start to

697
00:33:56,070 --> 00:34:00,089
nest those and get different outcomes we

698
00:34:00,089 --> 00:34:02,339
can expand and contract our content in

699
00:34:02,339 --> 00:34:04,849
new ways we can change justification

700
00:34:04,849 --> 00:34:08,520
very simply we can change how things

701
00:34:08,520 --> 00:34:11,579
wrap for the flow we can start to flex

702
00:34:11,579 --> 00:34:14,940
things using the fraction unit etc and

703
00:34:14,940 --> 00:34:16,490
then media queries are only needed

704
00:34:16,490 --> 00:34:19,980
sometimes because we get things like

705
00:34:19,980 --> 00:34:22,470
autofit and autofit that figure out for

706
00:34:22,470 --> 00:34:24,950
us how many columns we have space for

707
00:34:24,950 --> 00:34:29,129
and then it just fills them in which can

708
00:34:29,129 --> 00:34:31,669
be really useful for something like

709
00:34:31,669 --> 00:34:33,240
image gallery

710
00:34:33,240 --> 00:34:39,149
or masonry like layout but I want to put

711
00:34:39,149 --> 00:34:42,149
all these things together and we started

712
00:34:42,149 --> 00:34:44,879
playing with this right away on a client

713
00:34:44,879 --> 00:34:48,079
project last year being able to pass in

714
00:34:48,079 --> 00:34:52,730
values from JavaScript just pure data

715
00:34:52,730 --> 00:34:55,679
gets passed in we're building a

716
00:34:55,679 --> 00:34:57,990
scheduling app we want to know when an

717
00:34:57,990 --> 00:35:01,140
event starts and how long it is so we

718
00:35:01,140 --> 00:35:04,400
passed that in as CSS variables and

719
00:35:04,400 --> 00:35:07,799
using calc and grid we manipulate that

720
00:35:07,799 --> 00:35:11,430
data and we can say we have this many

721
00:35:11,430 --> 00:35:13,619
minutes in a day let's create a column

722
00:35:13,619 --> 00:35:15,180
on the grid for every minute of the day

723
00:35:15,180 --> 00:35:17,789
and then we're just passing in a start

724
00:35:17,789 --> 00:35:21,000
and an end and we use those as grid

725
00:35:21,000 --> 00:35:26,310
lines to tell every session on this

726
00:35:26,310 --> 00:35:29,340
schedule where to start an end so we got

727
00:35:29,340 --> 00:35:32,790
a layout in about 10 minutes using just

728
00:35:32,790 --> 00:35:36,120
some CSS variables and some grid and it

729
00:35:36,120 --> 00:35:41,780
builds our schedule for us which I love

730
00:35:41,780 --> 00:35:45,750
the limitation here is I don't remember

731
00:35:45,750 --> 00:35:46,740
the exact number

732
00:35:46,740 --> 00:35:50,040
there's only we were able to do 16 hours

733
00:35:50,040 --> 00:35:51,720
and then you hit the limit of how many

734
00:35:51,720 --> 00:35:54,900
columns a grid can have so if you need a

735
00:35:54,900 --> 00:35:57,630
24 hour you're gonna have to step back a

736
00:35:57,630 --> 00:36:01,260
level and do two minutes per column but

737
00:36:01,260 --> 00:36:05,240
you can get to 16 hours worth of grid

738
00:36:05,240 --> 00:36:07,410
then I've played with this with bar

739
00:36:07,410 --> 00:36:11,400
charts this is just the HTML for a bar

740
00:36:11,400 --> 00:36:13,320
chart you could also use tables for this

741
00:36:13,320 --> 00:36:18,000
I decided on definition lists but just

742
00:36:18,000 --> 00:36:20,430
some simple semantic markup and I pass

743
00:36:20,430 --> 00:36:23,250
in the value of 45 value 100 and I can

744
00:36:23,250 --> 00:36:26,660
even change the scale up top in my chart

745
00:36:26,660 --> 00:36:32,550
and then this is the math I take each

746
00:36:32,550 --> 00:36:38,130
chart starts at the scale plus 1 because

747
00:36:38,130 --> 00:36:41,730
to handle the indexing minus the value

748
00:36:41,730 --> 00:36:45,470
of where we're wanting to start and

749
00:36:45,470 --> 00:36:48,930
again I played then with how it adjusts

750
00:36:48,930 --> 00:36:50,910
color based on the value that's passed

751
00:36:50,910 --> 00:36:54,780
in and using just those variables I have

752
00:36:54,780 --> 00:36:57,060
this completely fluid grid and I'm

753
00:36:57,060 --> 00:36:59,790
actually going to inspect it here so

754
00:36:59,790 --> 00:37:04,780
that I can let's see where's this scale

755
00:37:04,790 --> 00:37:09,500
let's change that to 200 there we go and

756
00:37:09,500 --> 00:37:12,930
everything adjusts so I don't know why

757
00:37:12,930 --> 00:37:14,370
you need to change the scale on your

758
00:37:14,370 --> 00:37:20,430
chart but you can and I love this idea

759
00:37:20,430 --> 00:37:23,070
of being able to manipulate raw data in

760
00:37:23,070 --> 00:37:27,450
CSS so that JavaScript only has to pass

761
00:37:27,450 --> 00:37:31,290
us what is known and then the Styles can

762
00:37:31,290 --> 00:37:33,510
decide how actually to use that data to

763
00:37:33,510 --> 00:37:35,550
generate something next I want to play

764
00:37:35,550 --> 00:37:38,299
with see if I can do line graphs and

765
00:37:38,299 --> 00:37:40,759
plot charts I think plot charts will be

766
00:37:40,759 --> 00:37:42,949
easy in line graphs will be much more

767
00:37:42,949 --> 00:37:47,059
difficult but have fun with that start

768
00:37:47,059 --> 00:37:48,650
playing with those things here's another

769
00:37:48,650 --> 00:37:51,259
one that I did somebody presented some

770
00:37:51,259 --> 00:37:54,979
generated art they had done so I redid

771
00:37:54,979 --> 00:38:02,619
it in view and I can start adding

772
00:38:02,619 --> 00:38:08,239
invaders or removing invaders and I can

773
00:38:08,239 --> 00:38:10,429
click on them to change them and I can

774
00:38:10,429 --> 00:38:13,779
shuffle them and then I can kick ass and

775
00:38:13,779 --> 00:38:17,920
like drive around shooting them yes yeah

776
00:38:17,920 --> 00:38:27,859
give them so that's important if you

777
00:38:27,859 --> 00:38:30,499
want to dig more into grids grid by

778
00:38:30,499 --> 00:38:33,979
example comm is a great place to go this

779
00:38:33,979 --> 00:38:37,880
is Rachel Andrew site it has not only

780
00:38:37,880 --> 00:38:40,939
lessons on the different aspects of grid

781
00:38:40,939 --> 00:38:46,130
but also common layouts built in grid

782
00:38:46,130 --> 00:38:49,369
with fallbacks already built so if you

783
00:38:49,369 --> 00:38:51,259
have one of the common layout needs or

784
00:38:51,259 --> 00:38:53,420
something similar to it you can copy and

785
00:38:53,420 --> 00:38:54,920
paste her code

786
00:38:54,920 --> 00:38:56,859
and already have your layout written

787
00:38:56,859 --> 00:39:01,759
also Jenn Simmons has youtube.com slash

788
00:39:01,759 --> 00:39:04,039
layout land where she does various

789
00:39:04,039 --> 00:39:06,769
YouTube videos going into much more

790
00:39:06,769 --> 00:39:10,119
detail she also has Jenn Simmons labs

791
00:39:10,119 --> 00:39:12,829
where you can see lots of experiments

792
00:39:12,829 --> 00:39:16,699
her doing various art sites playing with

793
00:39:16,699 --> 00:39:23,239
what grid can do so this is I just want

794
00:39:23,239 --> 00:39:28,509
to remind you CSS is in fact awesome

795
00:39:28,509 --> 00:39:33,730
thank you

