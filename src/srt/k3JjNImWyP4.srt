1
00:00:00,000 --> 00:00:10,170

ah

2
00:00:10,180 --> 00:00:12,650
what I'm talking about here is work i

3
00:00:12,650 --> 00:00:15,290
did when i was working Ozma soft which

4
00:00:15,290 --> 00:00:17,660
I've moved on from recently a little bit

5
00:00:17,660 --> 00:00:19,490
of a discovery process about all the

6
00:00:19,490 --> 00:00:22,250
hacks that go on behind the scenes of an

7
00:00:22,250 --> 00:00:24,290
application like tiddlywiki which is a

8
00:00:24,290 --> 00:00:28,880
single page application and in many

9
00:00:28,880 --> 00:00:30,470
respects to the wiki is a very

10
00:00:30,470 --> 00:00:32,660
understood software framework it's more

11
00:00:32,660 --> 00:00:35,660
than just an application so quick demo

12
00:00:35,660 --> 00:00:38,329
of what to lee wiki is how many people

13
00:00:38,329 --> 00:00:40,969
here have heard of tiddlywiki all right

14
00:00:40,969 --> 00:00:43,010
probably about a third how many people

15
00:00:43,010 --> 00:00:45,710
actually have used to lee wiki cool nice

16
00:00:45,710 --> 00:00:48,499
to see people using it as well the way

17
00:00:48,499 --> 00:00:51,649
it works is I can download this so this

18
00:00:51,649 --> 00:00:54,019
is sitting on an HTTP URL standard web

19
00:00:54,019 --> 00:00:56,659
server I download it to my local system

20
00:00:56,659 --> 00:00:59,089
and now it's actually running on the

21
00:00:59,089 --> 00:01:02,749
file system so you can see it's just a

22
00:01:02,749 --> 00:01:05,420
file URL hence we call it single page

23
00:01:05,420 --> 00:01:07,400
application running off the file URL and

24
00:01:07,400 --> 00:01:09,800
I can actually start changing this thing

25
00:01:09,800 --> 00:01:17,930
so i can say save it and it's going to

26
00:01:17,930 --> 00:01:20,480
see if check efforts if i'm allowing it

27
00:01:20,480 --> 00:01:22,460
to do that because I've just saved a

28
00:01:22,460 --> 00:01:24,860
local file system so i can actually

29
00:01:24,860 --> 00:01:27,500
reload this now and just to prove the

30
00:01:27,500 --> 00:01:29,540
point it's reloaded and this is running

31
00:01:29,540 --> 00:01:31,610
on the file system saving to the file

32
00:01:31,610 --> 00:01:33,620
system without any browser extensions

33
00:01:33,620 --> 00:01:37,070
being installed and what's quite cool

34
00:01:37,070 --> 00:01:41,120
that tiddlywiki as an application is it

35
00:01:41,120 --> 00:01:43,220
lets you do more than just manipulate

36
00:01:43,220 --> 00:01:44,660
these little bits of content these

37
00:01:44,660 --> 00:01:47,990
tiddlers that are basically like a

38
00:01:47,990 --> 00:01:49,670
little blocks of content that show up

39
00:01:49,670 --> 00:01:51,770
with a title and a text and everything

40
00:01:51,770 --> 00:01:54,230
is composed of these things you can

41
00:01:54,230 --> 00:01:56,150
actually go beyond just treating it as

42
00:01:56,150 --> 00:01:57,920
something for content although that in

43
00:01:57,920 --> 00:01:59,600
itself is quite useful for many people

44
00:01:59,600 --> 00:02:01,340
that's all they ever do and that's fine

45
00:02:01,340 --> 00:02:03,410
but you can actually go on and you can

46
00:02:03,410 --> 00:02:05,090
start customizing it so I can start

47
00:02:05,090 --> 00:02:11,350
doing things like change the site title

48
00:02:11,360 --> 00:02:15,290
and I can get even more advanced if I

49
00:02:15,290 --> 00:02:18,080
know how to do that because a lot of the

50
00:02:18,080 --> 00:02:19,580
people in the tiddlywiki community are

51
00:02:19,580 --> 00:02:22,130
not programmers that people like poets

52
00:02:22,130 --> 00:02:24,620
and genealogists and physicists people

53
00:02:24,620 --> 00:02:28,010
who just want to make little tweaks so

54
00:02:28,010 --> 00:02:29,690
these are the kind of people who hacked

55
00:02:29,690 --> 00:02:31,340
quite comfortable doing things like this

56
00:02:31,340 --> 00:02:32,930
and taking it as far as they want to

57
00:02:32,930 --> 00:02:36,530
take it and I can even get further than

58
00:02:36,530 --> 00:02:38,390
that if I really know what I'm doing I

59
00:02:38,390 --> 00:02:40,160
can actually do some programming as well

60
00:02:40,160 --> 00:02:44,090
and this is all everything's tiddlers

61
00:02:44,090 --> 00:02:46,000
here so it's a very simple model of

62
00:02:46,000 --> 00:02:48,050
modularity where you don't have to learn

63
00:02:48,050 --> 00:02:49,489
new concepts for every type of thing

64
00:02:49,489 --> 00:02:50,930
you're doing so all I'm doing is I'm

65
00:02:50,930 --> 00:02:52,850
tagging this Hitler this tiddler as a

66
00:02:52,850 --> 00:02:55,489
system config Hitler and that means that

67
00:02:55,489 --> 00:02:56,900
it that system knows that it gets

68
00:02:56,900 --> 00:03:00,380
evaluated on startup so when I do a save

69
00:03:00,380 --> 00:03:03,650
and reload the page you've got

70
00:03:03,650 --> 00:03:05,870
JavaScript being executed so you can

71
00:03:05,870 --> 00:03:07,310
take it as far as you want and with that

72
00:03:07,310 --> 00:03:08,720
JavaScript you can start manipulating

73
00:03:08,720 --> 00:03:10,790
all the underlying components here and

74
00:03:10,790 --> 00:03:12,830
start building entire applications on

75
00:03:12,830 --> 00:03:14,900
top of what looks like just a simple

76
00:03:14,900 --> 00:03:17,299
personal wiki and in fact the

77
00:03:17,299 --> 00:03:18,799
presentation i'm using here is

78
00:03:18,799 --> 00:03:20,870
dogfooding it's another version of

79
00:03:20,870 --> 00:03:22,910
tiddlywiki that's got all these plugins

80
00:03:22,910 --> 00:03:24,709
that have been reused from other places

81
00:03:24,709 --> 00:03:26,630
and some extra configuration that's been

82
00:03:26,630 --> 00:03:32,480
done on top of it so what I think is

83
00:03:32,480 --> 00:03:34,670
cool about this sort of model is it's

84
00:03:34,670 --> 00:03:36,730
the idea of extreme agility because

85
00:03:36,730 --> 00:03:39,080
there was a talk a little while ago or a

86
00:03:39,080 --> 00:03:40,549
paper a little while ago talking about

87
00:03:40,549 --> 00:03:42,440
extreme agility as being something where

88
00:03:42,440 --> 00:03:44,330
programmers are writing the kinds of

89
00:03:44,330 --> 00:03:46,100
things they want themselves but we don't

90
00:03:46,100 --> 00:03:48,320
all have that luxury so to me what

91
00:03:48,320 --> 00:03:50,030
extreme agility is about it's about

92
00:03:50,030 --> 00:03:52,280
empowering users to tweak their own

93
00:03:52,280 --> 00:03:54,470
environment I think the spreadsheet is a

94
00:03:54,470 --> 00:03:57,170
perfect example of this much loathed by

95
00:03:57,170 --> 00:04:00,019
IT departments for this very reason but

96
00:04:00,019 --> 00:04:02,209
something that gives users great power

97
00:04:02,209 --> 00:04:04,360
to set their own environments up and

98
00:04:04,360 --> 00:04:07,850
it's it's agility from a deployment

99
00:04:07,850 --> 00:04:09,709
point of view as well as a development

100
00:04:09,709 --> 00:04:12,200
point of view from a deployment point of

101
00:04:12,200 --> 00:04:13,519
view you're just dealing with a single

102
00:04:13,519 --> 00:04:15,500
file with all your HTML Javascript CSS

103
00:04:15,500 --> 00:04:18,620
and the content inside that file so that

104
00:04:18,620 --> 00:04:21,200
lets you run it on your own system lets

105
00:04:21,200 --> 00:04:23,180
you mail it to your friends lets you

106
00:04:23,180 --> 00:04:25,160
upload it to a web server just using

107
00:04:25,160 --> 00:04:27,830
static FTTP upload and having a static

108
00:04:27,830 --> 00:04:29,890
file sitting on the server and it also

109
00:04:29,890 --> 00:04:32,330
lets you put it on a shared drive and

110
00:04:32,330 --> 00:04:35,180
treat it as a very lightweight sort of

111
00:04:35,180 --> 00:04:37,370
multi-user system where other people can

112
00:04:37,370 --> 00:04:39,220
access that too and change the content

113
00:04:39,220 --> 00:04:41,390
so that's from a deployment point of

114
00:04:41,390 --> 00:04:42,740
view from a development point of view

115
00:04:42,740 --> 00:04:44,480
like I've just shown you it also is very

116
00:04:44,480 --> 00:04:46,220
easy for individual users who aren't

117
00:04:46,220 --> 00:04:48,530
programmers to tweak and to me that's

118
00:04:48,530 --> 00:04:53,630
real agility it's single page

119
00:04:53,630 --> 00:04:55,460
application most of us have probably

120
00:04:55,460 --> 00:04:57,140
done this kind of thing where we want to

121
00:04:57,140 --> 00:04:59,150
experiment with a bit of CSS or

122
00:04:59,150 --> 00:05:01,400
JavaScript so we'll open up our text

123
00:05:01,400 --> 00:05:03,500
editor save to the file and open that in

124
00:05:03,500 --> 00:05:05,870
the browser against a file you are i but

125
00:05:05,870 --> 00:05:07,310
tiddlywiki goes further than that

126
00:05:07,310 --> 00:05:09,470
because it also allows saving so the

127
00:05:09,470 --> 00:05:11,630
first version actually just had a little

128
00:05:11,630 --> 00:05:14,090
text area because Jeremy rust and the

129
00:05:14,090 --> 00:05:15,800
Creator and my former boss at Ozma's

130
00:05:15,800 --> 00:05:18,470
soft he figured well he can't really

131
00:05:18,470 --> 00:05:20,180
saved a local file system right that's

132
00:05:20,180 --> 00:05:22,040
crazy no web application could let you

133
00:05:22,040 --> 00:05:24,350
do that so it was just a text area that

134
00:05:24,350 --> 00:05:25,640
said you know now that you've changed

135
00:05:25,640 --> 00:05:26,870
all this you can have to cut and paste

136
00:05:26,870 --> 00:05:29,590
this back into the original file and

137
00:05:29,590 --> 00:05:32,810
what's very cool about this nice open

138
00:05:32,810 --> 00:05:34,430
source success story here someone

139
00:05:34,430 --> 00:05:36,230
actually came along and wrote a Firefox

140
00:05:36,230 --> 00:05:40,250
extension and to actually do saving and

141
00:05:40,250 --> 00:05:42,260
Jeremy looked at this and he looked at

142
00:05:42,260 --> 00:05:44,240
the code is kind of interesting I wonder

143
00:05:44,240 --> 00:05:45,680
what would happen if I put this in the

144
00:05:45,680 --> 00:05:48,080
actual tiddlywiki application this is

145
00:05:48,080 --> 00:05:50,419
back in 2004 and in actually lo and

146
00:05:50,419 --> 00:05:52,010
behold did actually work it actually

147
00:05:52,010 --> 00:05:53,870
allowed saving without having any

148
00:05:53,870 --> 00:05:55,910
browser extensions installed just with

149
00:05:55,910 --> 00:05:57,740
that simple pop-up dialog you saw Ramona

150
00:05:57,740 --> 00:06:01,150
to go to check if you ok with it and so

151
00:06:01,150 --> 00:06:03,350
ever since then it's turned out that you

152
00:06:03,350 --> 00:06:05,230
can actually do saving with tiddlywiki

153
00:06:05,230 --> 00:06:07,790
so it leads to you from these different

154
00:06:07,790 --> 00:06:09,650
sets of evolution you've got the single

155
00:06:09,650 --> 00:06:11,300
page application which is kind of thing

156
00:06:11,300 --> 00:06:14,450
we all know where it's just a single bit

157
00:06:14,450 --> 00:06:17,030
of rich interactive JavaScript that runs

158
00:06:17,030 --> 00:06:19,490
either from the server or from just a

159
00:06:19,490 --> 00:06:23,000
file you are I then you go to the next

160
00:06:23,000 --> 00:06:24,710
stage which is once you can start saving

161
00:06:24,710 --> 00:06:26,390
and doing that round trip back and forth

162
00:06:26,390 --> 00:06:28,010
you've got what i call a single page

163
00:06:28,010 --> 00:06:31,100
application and database and then the

164
00:06:31,100 --> 00:06:33,320
step beyond that the next insight was

165
00:06:33,320 --> 00:06:35,360
well we've got all our javascript in our

166
00:06:35,360 --> 00:06:38,300
CSS sitting in this file anyway we may

167
00:06:38,300 --> 00:06:39,200
as well let the you

168
00:06:39,200 --> 00:06:41,090
actually edit that while they're

169
00:06:41,090 --> 00:06:43,190
actually working with the application to

170
00:06:43,190 --> 00:06:46,010
do all those kinds of tweaks that users

171
00:06:46,010 --> 00:06:47,900
even if they're not programmers are

172
00:06:47,900 --> 00:06:49,970
quite capable of doing and especially

173
00:06:49,970 --> 00:06:51,260
because there's also a plug-in

174
00:06:51,260 --> 00:06:53,240
mechanisms that lets you pull plugins

175
00:06:53,240 --> 00:06:54,860
from other places on the net very easily

176
00:06:54,860 --> 00:06:57,140
to users are quite comfortable with

177
00:06:57,140 --> 00:07:01,520
configuring stuff like that so it does

178
00:07:01,520 --> 00:07:03,230
position tiddlywiki is a kind of cloud

179
00:07:03,230 --> 00:07:05,390
ID in the same vein as things like bus

180
00:07:05,390 --> 00:07:07,820
P&J has been and jsfiddle where we're

181
00:07:07,820 --> 00:07:08,930
seeing a lot more of this actually

182
00:07:08,930 --> 00:07:11,030
editing javascript inside the actual

183
00:07:11,030 --> 00:07:13,370
browser not that you have to do it this

184
00:07:13,370 --> 00:07:15,620
way most of us have written fairly

185
00:07:15,620 --> 00:07:17,180
complex applications on top of

186
00:07:17,180 --> 00:07:19,490
tiddlywinks still use an editor and a

187
00:07:19,490 --> 00:07:22,130
make type tool but for doing those

188
00:07:22,130 --> 00:07:26,300
little tweaks very handy and if you want

189
00:07:26,300 --> 00:07:27,470
to get a feel for some of the things

190
00:07:27,470 --> 00:07:29,300
that are written on top of tiddlywinks a

191
00:07:29,300 --> 00:07:31,460
platoon frameworks i created a showcase

192
00:07:31,460 --> 00:07:33,680
just before i left oz and soph actually

193
00:07:33,680 --> 00:07:35,240
that's that goes through a bunch of

194
00:07:35,240 --> 00:07:37,280
verticals all these slides are online

195
00:07:37,280 --> 00:07:39,380
too if you look in the j s comp tag i

196
00:07:39,380 --> 00:07:42,560
just put on twitter the actual um the

197
00:07:42,560 --> 00:07:44,330
link for these for these presentations

198
00:07:44,330 --> 00:07:48,530
and just to mention too although there

199
00:07:48,530 --> 00:07:49,790
are some very cool things about running

200
00:07:49,790 --> 00:07:51,170
off the file you are I there are also

201
00:07:51,170 --> 00:07:53,240
some great advantages to running things

202
00:07:53,240 --> 00:07:56,930
in the cloud and there is a whole server

203
00:07:56,930 --> 00:07:59,560
side story to Tilly wiki as well say

204
00:07:59,560 --> 00:08:02,210
where it gets position from this point

205
00:08:02,210 --> 00:08:04,340
of view is you've got all these tiddlers

206
00:08:04,340 --> 00:08:05,600
that i just showed you there's just

207
00:08:05,600 --> 00:08:07,460
little blocks of text content all of

208
00:08:07,460 --> 00:08:09,320
those things can sit as resources on a

209
00:08:09,320 --> 00:08:11,480
restful web server as well and that's

210
00:08:11,480 --> 00:08:13,520
what tiddly web and tilly space enable

211
00:08:13,520 --> 00:08:15,890
so that you can put to them and get them

212
00:08:15,890 --> 00:08:17,690
and delete them and you can render them

213
00:08:17,690 --> 00:08:20,110
as json or HTML however you want and

214
00:08:20,110 --> 00:08:22,670
then what you can do is you can compose

215
00:08:22,670 --> 00:08:24,230
them together too so you can have a

216
00:08:24,230 --> 00:08:26,330
whole bunch of tiddlers and render those

217
00:08:26,330 --> 00:08:28,730
things as json or whatever but what you

218
00:08:28,730 --> 00:08:29,990
can also do is you can take a whole

219
00:08:29,990 --> 00:08:31,400
bunch of tiddlers sitting on the server

220
00:08:31,400 --> 00:08:35,000
and render them on the browser as a wiki

221
00:08:35,000 --> 00:08:36,650
in which case you get the tiddlywiki

222
00:08:36,650 --> 00:08:39,440
until the wiki then becomes a single

223
00:08:39,440 --> 00:08:42,349
page application client into a no SQL

224
00:08:42,349 --> 00:08:47,870
restful database so it leads to a very

225
00:08:47,870 --> 00:08:48,980
interesting model which I've

226
00:08:48,980 --> 00:08:50,810
demonstrated in this screencast here

227
00:08:50,810 --> 00:08:52,430
right at the end where I've developed

228
00:08:52,430 --> 00:08:53,180
the whole thing

229
00:08:53,180 --> 00:08:55,370
on the file you are i but then at the

230
00:08:55,370 --> 00:08:57,800
last stage i actually go and upload to a

231
00:08:57,800 --> 00:08:59,750
server and at that point you can start

232
00:08:59,750 --> 00:09:01,279
setting up your security policies and

233
00:09:01,279 --> 00:09:03,710
you can see what kind of tiddlers can be

234
00:09:03,710 --> 00:09:05,480
accessed by what kind of users in what

235
00:09:05,480 --> 00:09:07,399
kinds of ways but your day to day

236
00:09:07,399 --> 00:09:12,090
development is done on a file you are a

237
00:09:12,100 --> 00:09:15,320
so this is talking more than just about

238
00:09:15,320 --> 00:09:17,149
tiddlywiki it's about some of that hacks

239
00:09:17,149 --> 00:09:20,390
that we uncovered in the creation and

240
00:09:20,390 --> 00:09:24,370
the ongoing evolution of tiddlywiki and

241
00:09:24,370 --> 00:09:27,170
the most obvious hack here is the file

242
00:09:27,170 --> 00:09:29,990
access it's the fact that in all of

243
00:09:29,990 --> 00:09:31,339
these different browsers you can

244
00:09:31,339 --> 00:09:33,800
actually talk to the file system which

245
00:09:33,800 --> 00:09:35,060
is something that a lot of people just

246
00:09:35,060 --> 00:09:37,940
unaware of tiddlywiki these days is

247
00:09:37,940 --> 00:09:40,520
built on top of jquery so there's been a

248
00:09:40,520 --> 00:09:46,430
a file plugin extracted from jQuery TW

249
00:09:46,430 --> 00:09:49,940
file and interestingly enough it doesn't

250
00:09:49,940 --> 00:09:51,980
just say back to itself the tiddlywiki

251
00:09:51,980 --> 00:09:54,080
that you're actually running it actually

252
00:09:54,080 --> 00:09:56,000
will do general purpose file

253
00:09:56,000 --> 00:09:58,040
manipulation loading and saving any file

254
00:09:58,040 --> 00:10:03,680
on your hard drive it's got a bunch of

255
00:10:03,680 --> 00:10:05,390
strategy objects different

256
00:10:05,390 --> 00:10:07,130
implementations depending on what the

257
00:10:07,130 --> 00:10:09,140
current environment is so we'll sort of

258
00:10:09,140 --> 00:10:11,900
say can you do this no okay can you do

259
00:10:11,900 --> 00:10:13,640
this no and we'll go through until you

260
00:10:13,640 --> 00:10:15,050
find something that will actually be

261
00:10:15,050 --> 00:10:18,290
able to deal with it the first one that

262
00:10:18,290 --> 00:10:20,060
was created and the one that most people

263
00:10:20,060 --> 00:10:22,160
use today because the best supported is

264
00:10:22,160 --> 00:10:25,250
on Firefox so it's this mozilla object

265
00:10:25,250 --> 00:10:28,400
and you can see here that it's got this

266
00:10:28,400 --> 00:10:30,529
in the mozilla these native objects

267
00:10:30,529 --> 00:10:32,839
component or interfaces dot NSR local

268
00:10:32,839 --> 00:10:34,820
file component or interfaces that NSI

269
00:10:34,820 --> 00:10:37,220
file output stream and once you know

270
00:10:37,220 --> 00:10:39,079
that those things exist it's very

271
00:10:39,079 --> 00:10:40,579
straightforward it's just a standard

272
00:10:40,579 --> 00:10:41,779
sort of thing that you'd expect to see

273
00:10:41,779 --> 00:10:45,260
in C or Java for doing outdoor in it

274
00:10:45,260 --> 00:10:47,470
outright I've got flash out close

275
00:10:47,470 --> 00:10:51,430
standard API for outputting to a file

276
00:10:51,430 --> 00:10:54,050
activex also has a similar sort of

277
00:10:54,050 --> 00:10:56,480
component scripting.filesystemobject so

278
00:10:56,480 --> 00:10:57,860
you can do the same sorts of things that

279
00:10:57,860 --> 00:11:01,310
way unfortunately for the other browsers

280
00:11:01,310 --> 00:11:04,010
you have to resort to an applet and I

281
00:11:04,010 --> 00:11:06,260
say this is unfortunate because a lot of

282
00:11:06,260 --> 00:11:06,980
the thinking

283
00:11:06,980 --> 00:11:09,440
to the wiki is that a single file is

284
00:11:09,440 --> 00:11:12,649
just extremely easy and straightforward

285
00:11:12,649 --> 00:11:15,110
for users as soon as you introduce any

286
00:11:15,110 --> 00:11:16,490
concept of having to carry around

287
00:11:16,490 --> 00:11:19,040
multiple files means you always have to

288
00:11:19,040 --> 00:11:21,410
remember to attach ten different files

289
00:11:21,410 --> 00:11:23,360
to an email or upload ten different

290
00:11:23,360 --> 00:11:25,940
files or put them in a zip file and hope

291
00:11:25,940 --> 00:11:27,320
that someone on the other end can done

292
00:11:27,320 --> 00:11:30,649
it can unzip it and all the directories

293
00:11:30,649 --> 00:11:33,320
work out right or having to have any

294
00:11:33,320 --> 00:11:35,510
kind of server infrastructure so all of

295
00:11:35,510 --> 00:11:37,550
those things zip files and server side

296
00:11:37,550 --> 00:11:39,980
stuff it's not rocket science but it is

297
00:11:39,980 --> 00:11:41,779
actually exponentially simpler if you

298
00:11:41,779 --> 00:11:43,370
can actually encapsulate everything in a

299
00:11:43,370 --> 00:11:45,709
single file and so that's where it is a

300
00:11:45,709 --> 00:11:48,529
bit of a downside that at the moment the

301
00:11:48,529 --> 00:11:50,269
other browsers do actually require too

302
00:11:50,269 --> 00:11:52,399
far so if you go to tiddlywiki com do a

303
00:11:52,399 --> 00:11:55,190
download you'll get a zip link and that

304
00:11:55,190 --> 00:11:57,649
zip will include the applet as well as

305
00:11:57,649 --> 00:12:00,110
the HTML but it still does actually work

306
00:12:00,110 --> 00:12:01,579
you can still save from the other

307
00:12:01,579 --> 00:12:04,970
browsers for the most part and the final

308
00:12:04,970 --> 00:12:08,329
technique is java live connect very old

309
00:12:08,329 --> 00:12:10,790
technique for talking to native java

310
00:12:10,790 --> 00:12:13,459
objects would actually be quite cool but

311
00:12:13,459 --> 00:12:15,649
it's just a very slow process you know

312
00:12:15,649 --> 00:12:17,540
to start up every time it has to try to

313
00:12:17,540 --> 00:12:22,610
use one of those components the next

314
00:12:22,610 --> 00:12:23,600
tack is something quite different

315
00:12:23,600 --> 00:12:25,760
something that I came up with when I was

316
00:12:25,760 --> 00:12:28,069
coming when I was trying to create an

317
00:12:28,069 --> 00:12:30,079
OpenSocial gadget to talk to tiddlywiki

318
00:12:30,079 --> 00:12:32,690
and there are all these single page

319
00:12:32,690 --> 00:12:35,120
files you know HTML files sitting on the

320
00:12:35,120 --> 00:12:37,399
web and how cool would it be if we could

321
00:12:37,399 --> 00:12:39,560
turn all of those into AP is that could

322
00:12:39,560 --> 00:12:43,339
be meshed up using javascript api is the

323
00:12:43,339 --> 00:12:45,019
kind of thing that Doug Crockford was

324
00:12:45,019 --> 00:12:47,839
trashing this morning so this is the

325
00:12:47,839 --> 00:12:49,490
idea where you dynamically create a

326
00:12:49,490 --> 00:12:52,040
script tag and evaluate that and the

327
00:12:52,040 --> 00:12:54,050
response comes back into your third

328
00:12:54,050 --> 00:12:58,310
party mashup and here you're just

329
00:12:58,310 --> 00:12:59,899
dealing with a single file you've got no

330
00:12:59,899 --> 00:13:01,970
server side component so is it possible

331
00:13:01,970 --> 00:13:04,069
that you can have a single HTML file

332
00:13:04,069 --> 00:13:07,519
that also presents itself as valid

333
00:13:07,519 --> 00:13:09,860
JavaScript and the answer turns out to

334
00:13:09,860 --> 00:13:13,699
be yes you can so this is a chameleon

335
00:13:13,699 --> 00:13:15,470
file its kind of thing where depending

336
00:13:15,470 --> 00:13:17,390
on who's looking at it you can see it in

337
00:13:17,390 --> 00:13:20,090
two different ways

338
00:13:20,100 --> 00:13:22,959
you view it from the browser just type

339
00:13:22,959 --> 00:13:25,179
the tiddlywiki URL into an address bar

340
00:13:25,179 --> 00:13:28,239
and you see it as a tiddlywiki take them

341
00:13:28,239 --> 00:13:30,579
from a third-party web app it calls on

342
00:13:30,579 --> 00:13:33,550
it the same URL as a script tag and that

343
00:13:33,550 --> 00:13:35,199
actually evaluates in the browser as

344
00:13:35,199 --> 00:13:39,639
valid JavaScript and the URL you can see

345
00:13:39,639 --> 00:13:42,660
it here and I'll show you how it looks

346
00:13:42,660 --> 00:13:45,869
it's basically you've got an open tag

347
00:13:45,869 --> 00:13:48,879
click open JavaScript tattoo open HTML

348
00:13:48,879 --> 00:13:51,579
open JavaScript closed HTML and so on

349
00:13:51,579 --> 00:13:52,600
I'll show you how this actually looks

350
00:13:52,600 --> 00:13:54,339
from the point of view of something that

351
00:13:54,339 --> 00:13:58,660
treats it as HTML it ignores all this

352
00:13:58,660 --> 00:13:59,889
stuff at the top because that's it

353
00:13:59,889 --> 00:14:02,319
that's commented out as HTML and the

354
00:14:02,319 --> 00:14:04,029
stuff at the bottom so it ignores all at

355
00:14:04,029 --> 00:14:06,489
javascript fortunately enough all of the

356
00:14:06,489 --> 00:14:08,619
browser's except for IE actually look at

357
00:14:08,619 --> 00:14:10,299
the doctype even though it appears after

358
00:14:10,299 --> 00:14:12,309
a comment so it turns out you can

359
00:14:12,309 --> 00:14:13,869
actually get away with having a doctype

360
00:14:13,869 --> 00:14:15,970
further down and not falling into quirks

361
00:14:15,970 --> 00:14:18,790
mode and so from browsers they'll

362
00:14:18,790 --> 00:14:21,910
happily render that javascript a little

363
00:14:21,910 --> 00:14:24,129
bit more interesting because the HTML

364
00:14:24,129 --> 00:14:27,399
tags are actually ignored and this is

365
00:14:27,399 --> 00:14:29,019
just some fortunate thing I don't know

366
00:14:29,019 --> 00:14:31,749
if anyone can explain why this is but

367
00:14:31,749 --> 00:14:34,269
they're not only ignored but the thing

368
00:14:34,269 --> 00:14:36,189
that's inside them is not ignored so you

369
00:14:36,189 --> 00:14:37,749
think maybe if they're ignoring they're

370
00:14:37,749 --> 00:14:38,949
ignoring it because they're treating it

371
00:14:38,949 --> 00:14:40,209
as oh well you didn't really know the

372
00:14:40,209 --> 00:14:41,829
difference between JavaScript and HTML

373
00:14:41,829 --> 00:14:43,480
so we'll just treat it as an HTML

374
00:14:43,480 --> 00:14:45,009
comment it's not that they're actually

375
00:14:45,009 --> 00:14:47,110
just ignoring the open tag and the close

376
00:14:47,110 --> 00:14:49,779
tag so all that HTML gets ignored and

377
00:14:49,779 --> 00:14:52,509
you end up with valid JavaScript so it

378
00:14:52,509 --> 00:14:54,100
is actually possible to have a single

379
00:14:54,100 --> 00:14:58,230
file that is both HTML and JavaScript

380
00:14:58,230 --> 00:15:00,639
the next hack is kind of trying to do

381
00:15:00,639 --> 00:15:04,230
the same thing with vector images and

382
00:15:04,230 --> 00:15:06,519
again you know if you have the idea of a

383
00:15:06,519 --> 00:15:08,410
single file it just makes life easier

384
00:15:08,410 --> 00:15:09,579
you can mail it around to different

385
00:15:09,579 --> 00:15:11,499
people so a bit of an experiment again

386
00:15:11,499 --> 00:15:13,360
turned out that you can actually do this

387
00:15:13,360 --> 00:15:16,959
in a very simplistic sense any way is to

388
00:15:16,959 --> 00:15:19,360
have a single file where it works out as

389
00:15:19,360 --> 00:15:22,360
vml most of that is actually just vml

390
00:15:22,360 --> 00:15:24,399
but you've got an SVG tag in there that

391
00:15:24,399 --> 00:15:28,569
I ignores and likewise if you treat it

392
00:15:28,569 --> 00:15:31,689
as SVG fortunately the most of the

393
00:15:31,689 --> 00:15:33,309
browsers will ignore the rest of it you

394
00:15:33,309 --> 00:15:33,580
can't

395
00:15:33,580 --> 00:15:35,740
do everything with it but it's um an

396
00:15:35,740 --> 00:15:36,850
interesting hack which might go

397
00:15:36,850 --> 00:15:38,860
somewhere sometime although now the IE

398
00:15:38,860 --> 00:15:43,240
supports SVG maybe not another

399
00:15:43,240 --> 00:15:45,430
interesting thing about SVG is actually

400
00:15:45,430 --> 00:15:48,580
taking an actual block of SVG the actual

401
00:15:48,580 --> 00:15:51,310
code for it and putting on a page turns

402
00:15:51,310 --> 00:15:53,740
out to me not so simple and this is

403
00:15:53,740 --> 00:15:55,120
exactly the kind of thing you need to be

404
00:15:55,120 --> 00:15:56,140
able to do when you're keeping

405
00:15:56,140 --> 00:15:57,730
everything in a single file you can't

406
00:15:57,730 --> 00:15:59,830
you don't have the luxury of putting it

407
00:15:59,830 --> 00:16:01,780
in a separate file and linking to it via

408
00:16:01,780 --> 00:16:06,070
an iframe source so turns out that if

409
00:16:06,070 --> 00:16:08,290
you want to have this as a standard HTML

410
00:16:08,290 --> 00:16:10,270
document rather than XHTML where you can

411
00:16:10,270 --> 00:16:13,450
actually add an SPG node you have to do

412
00:16:13,450 --> 00:16:15,160
something like this you do it you create

413
00:16:15,160 --> 00:16:18,010
an object and you said its data the data

414
00:16:18,010 --> 00:16:21,010
attribute to data images SVG plus xml

415
00:16:21,010 --> 00:16:23,440
and the SVG code and that way you can

416
00:16:23,440 --> 00:16:25,390
actually put more than one if you like

417
00:16:25,390 --> 00:16:28,420
SVG elements on the page in real time

418
00:16:28,420 --> 00:16:30,520
and this could be useful if you have an

419
00:16:30,520 --> 00:16:32,530
SVG editor which tiddlywiki the next

420
00:16:32,530 --> 00:16:34,770
version hopefully is going to have and

421
00:16:34,770 --> 00:16:36,760
Jeremy Ruston's done some further

422
00:16:36,760 --> 00:16:39,570
research on this that you can find here

423
00:16:39,570 --> 00:16:41,710
again all these links are actually in

424
00:16:41,710 --> 00:16:44,920
the slides and he's been looking at

425
00:16:44,920 --> 00:16:46,830
doing unique name spacing on the SVG

426
00:16:46,830 --> 00:16:49,240
elements as well so he recursos through

427
00:16:49,240 --> 00:16:50,740
all of the things inside it like

428
00:16:50,740 --> 00:16:52,360
gradients and gives them all the unique

429
00:16:52,360 --> 00:16:53,830
name space otherwise you end up with

430
00:16:53,830 --> 00:16:55,540
conflicts depending on how you've added

431
00:16:55,540 --> 00:17:01,390
the SVG elements the next hack is do it

432
00:17:01,390 --> 00:17:04,750
I frames and this is I think a an area

433
00:17:04,750 --> 00:17:06,550
that needs a lot more research that's

434
00:17:06,550 --> 00:17:09,640
starting to become quite interesting you

435
00:17:09,640 --> 00:17:11,410
end up with you've got all these

436
00:17:11,410 --> 00:17:13,810
miniature HTML documents inside your big

437
00:17:13,810 --> 00:17:16,060
HTML document so until a wiki for

438
00:17:16,060 --> 00:17:17,440
instance one of the things I did was a

439
00:17:17,440 --> 00:17:19,959
playground application in this case 2

440
00:17:19,959 --> 00:17:23,770
playground for html5 with little little

441
00:17:23,770 --> 00:17:25,990
bite-sized applications to do little

442
00:17:25,990 --> 00:17:27,850
things and these are just you know this

443
00:17:27,850 --> 00:17:29,650
is a complete HTML document that I'm

444
00:17:29,650 --> 00:17:32,530
embedding inside my bigger HTML document

445
00:17:32,530 --> 00:17:35,950
and I don't want this mini HTML document

446
00:17:35,950 --> 00:17:38,950
to be in any way contaminated by the

447
00:17:38,950 --> 00:17:42,210
JavaScript or CSS that's in this bigger

448
00:17:42,210 --> 00:17:45,460
this bigger application so that's why I

449
00:17:45,460 --> 00:17:47,169
squared it all into

450
00:17:47,169 --> 00:17:52,090
you dynamically generated iframe so

451
00:17:52,090 --> 00:17:54,669
we're used to iframes being rendered as

452
00:17:54,669 --> 00:17:57,159
as having a source you know that

453
00:17:57,159 --> 00:17:58,629
appoints somewhere else but we don't

454
00:17:58,629 --> 00:18:00,759
have that luxury here so we need to

455
00:18:00,759 --> 00:18:02,739
actually have a technique for creating a

456
00:18:02,739 --> 00:18:04,779
new iframe and pushing content into it

457
00:18:04,779 --> 00:18:08,340
and that's where you get code like this

458
00:18:08,340 --> 00:18:10,779
but basically lets you get hold of the

459
00:18:10,779 --> 00:18:13,210
iframes document and then it's a simple

460
00:18:13,210 --> 00:18:17,100
matter of dr. open right lane closed

461
00:18:17,100 --> 00:18:19,269
what's also cool about running off a

462
00:18:19,269 --> 00:18:22,720
filer URI is you actually don't have the

463
00:18:22,720 --> 00:18:24,940
standard cross-domain policies applying

464
00:18:24,940 --> 00:18:26,590
as well so you can actually do cross

465
00:18:26,590 --> 00:18:30,009
domain xmlhttprequest calls and this

466
00:18:30,009 --> 00:18:31,570
leads to a whole application as a

467
00:18:31,570 --> 00:18:33,609
scraper because what you can then do is

468
00:18:33,609 --> 00:18:35,999
you can call off to a third party site

469
00:18:35,999 --> 00:18:39,940
pull down the entire HTML inject it into

470
00:18:39,940 --> 00:18:42,309
an iframe and start pausing it using a

471
00:18:42,309 --> 00:18:45,129
CSS selector engine so that's a

472
00:18:45,129 --> 00:18:46,539
completely different application from

473
00:18:46,539 --> 00:18:48,309
the playground type application but also

474
00:18:48,309 --> 00:18:49,690
something that's useful and people have

475
00:18:49,690 --> 00:18:54,129
done it Ozma soft as well and I wanted

476
00:18:54,129 --> 00:18:56,379
to point out that Primrose has actually

477
00:18:56,379 --> 00:18:58,899
done a lot of work recently on iframes

478
00:18:58,899 --> 00:19:01,179
he's been doing a whole widget framework

479
00:19:01,179 --> 00:19:02,950
called squidgy that is actually quite

480
00:19:02,950 --> 00:19:05,679
cool and worth checking out and one of

481
00:19:05,679 --> 00:19:07,840
the ways he does it is with CSS resets

482
00:19:07,840 --> 00:19:10,239
that use bang important rules and so on

483
00:19:10,239 --> 00:19:12,009
to basically say you've got a new div

484
00:19:12,009 --> 00:19:14,889
where nothing else above applies and

485
00:19:14,889 --> 00:19:16,899
also it starts to get into fuse j/s

486
00:19:16,899 --> 00:19:19,090
territory as well about having things

487
00:19:19,090 --> 00:19:20,799
that don't conflict with other things

488
00:19:20,799 --> 00:19:23,409
that are still on the same page but what

489
00:19:23,409 --> 00:19:24,789
it's also done is a lot of work on

490
00:19:24,789 --> 00:19:27,340
iframes squirting too so actually being

491
00:19:27,340 --> 00:19:31,119
able to do this the idea of us I frames

492
00:19:31,119 --> 00:19:32,799
without a source is something that

493
00:19:32,799 --> 00:19:34,690
hasn't been explored and has a lot of

494
00:19:34,690 --> 00:19:36,340
subtle things like the fact that if you

495
00:19:36,340 --> 00:19:38,139
move it from one element one part of the

496
00:19:38,139 --> 00:19:40,600
Dom tree to another it basically

497
00:19:40,600 --> 00:19:43,059
destroys the whole content it's like why

498
00:19:43,059 --> 00:19:44,739
doesn't do that who knows but it does

499
00:19:44,739 --> 00:19:46,629
actually fail on a lot of things that

500
00:19:46,629 --> 00:19:48,249
he's trying to equalize that across all

501
00:19:48,249 --> 00:19:53,499
the different browsers the next hack is

502
00:19:53,499 --> 00:19:55,480
script islands also a pattern I think

503
00:19:55,480 --> 00:19:57,849
we'll start to see more of it's the idea

504
00:19:57,849 --> 00:20:00,099
of embedding scripts that don't actually

505
00:20:00,099 --> 00:20:00,669
get

506
00:20:00,669 --> 00:20:02,769
evaluated when the page actually loads

507
00:20:02,769 --> 00:20:04,720
and Google's done this as a performance

508
00:20:04,720 --> 00:20:06,960
optimization putting scripts inside

509
00:20:06,960 --> 00:20:10,330
comments in the case of tiddlywiki we're

510
00:20:10,330 --> 00:20:11,830
doing it for a different reason we're

511
00:20:11,830 --> 00:20:14,980
doing it because we want to just keep

512
00:20:14,980 --> 00:20:16,929
them in a nicely contained place whereas

513
00:20:16,929 --> 00:20:18,669
previously to Lewicki were storing

514
00:20:18,669 --> 00:20:20,470
everything in divs all of that content

515
00:20:20,470 --> 00:20:24,029
whether it's the users content or CSS or

516
00:20:24,029 --> 00:20:27,340
JavaScript nowadays or in the new

517
00:20:27,340 --> 00:20:29,230
version of tiddlywiki to lyric you five

518
00:20:29,230 --> 00:20:32,019
which is complete rewrite its using a

519
00:20:32,019 --> 00:20:33,940
different text a different type so as

520
00:20:33,940 --> 00:20:35,980
long as that types not text / JavaScript

521
00:20:35,980 --> 00:20:37,600
it's not going to be evaluated but you

522
00:20:37,600 --> 00:20:39,789
still have the nicety of keeping them in

523
00:20:39,789 --> 00:20:44,230
the place where they belong the next

524
00:20:44,230 --> 00:20:47,889
hack is embedded images again we wanted

525
00:20:47,889 --> 00:20:49,059
we want to we don't want to carry around

526
00:20:49,059 --> 00:20:50,590
all those separate images so we want to

527
00:20:50,590 --> 00:20:52,239
keep them in one place so we used data

528
00:20:52,239 --> 00:20:54,340
URIs all the images you've seen in this

529
00:20:54,340 --> 00:20:57,330
presentation that based on data URIs and

530
00:20:57,330 --> 00:20:59,619
most of you probably familiar with the

531
00:20:59,619 --> 00:21:01,539
idea of data URIs that's just a long

532
00:21:01,539 --> 00:21:03,129
string that represents the content

533
00:21:03,129 --> 00:21:05,470
instead of having it on a separate in a

534
00:21:05,470 --> 00:21:08,739
separate URL somewhere problem with ie a

535
00:21:08,739 --> 00:21:10,389
six and seven they don't support data

536
00:21:10,389 --> 00:21:12,820
URIs and even i ate pretty much supports

537
00:21:12,820 --> 00:21:14,889
them just for images so there's a hack

538
00:21:14,889 --> 00:21:17,080
that came out last year that was quite

539
00:21:17,080 --> 00:21:19,629
cool that's rediscovering what was

540
00:21:19,629 --> 00:21:22,359
around a long time ago mhtml and the

541
00:21:22,359 --> 00:21:25,779
idea of multi-part HTML documents which

542
00:21:25,779 --> 00:21:27,850
we've proven to work and is also being

543
00:21:27,850 --> 00:21:31,929
incorporated into tiddlywiki 5 and this

544
00:21:31,929 --> 00:21:33,759
is how it looks you end up with just

545
00:21:33,759 --> 00:21:35,559
these different blocks of content at the

546
00:21:35,559 --> 00:21:37,539
start fortunately enough this is the

547
00:21:37,539 --> 00:21:39,970
same syntax as you get in a day to URI

548
00:21:39,970 --> 00:21:42,369
so you do have to have the redundancy of

549
00:21:42,369 --> 00:21:44,559
storing it twice and having to save it

550
00:21:44,559 --> 00:21:46,659
to two different locations because the

551
00:21:46,659 --> 00:21:49,210
other browsers can't read this but at

552
00:21:49,210 --> 00:21:52,749
least it's the same content and when you

553
00:21:52,749 --> 00:21:54,999
use it in CSS it looks something like

554
00:21:54,999 --> 00:21:57,789
this mhtml of the URL and then the

555
00:21:57,789 --> 00:22:01,800
segment that you've got

556
00:22:01,810 --> 00:22:05,170
and you can also use data URI for other

557
00:22:05,170 --> 00:22:07,390
things like audio video and font faces

558
00:22:07,390 --> 00:22:09,190
that you would usually expect to see in

559
00:22:09,190 --> 00:22:11,830
a separate file as well so all of those

560
00:22:11,830 --> 00:22:14,260
things allow you to get some extended

561
00:22:14,260 --> 00:22:17,440
features but without having to carry

562
00:22:17,440 --> 00:22:20,500
those separate files around and the last

563
00:22:20,500 --> 00:22:23,350
tack to mention is the magic hash that

564
00:22:23,350 --> 00:22:24,880
we've come to know and love we see this

565
00:22:24,880 --> 00:22:26,790
a lot and tilly wiki used it to

566
00:22:26,790 --> 00:22:30,010
basically changing the fragment ID to

567
00:22:30,010 --> 00:22:31,870
let you store the state and bookmark

568
00:22:31,870 --> 00:22:33,100
things and send them around to different

569
00:22:33,100 --> 00:22:37,240
people so that's about it just to say

570
00:22:37,240 --> 00:22:38,860
what's going on in the future tiddlywiki

571
00:22:38,860 --> 00:22:40,510
5 is putting a lot of these things

572
00:22:40,510 --> 00:22:43,240
together a lot of them are already in

573
00:22:43,240 --> 00:22:45,250
the existing version of tiddlywiki but

574
00:22:45,250 --> 00:22:47,560
tiddlywiki 5 is a complete it's the

575
00:22:47,560 --> 00:22:49,240
first complete rewrite for the six years

576
00:22:49,240 --> 00:22:52,120
of tiddlywiki production typically space

577
00:22:52,120 --> 00:22:54,370
is multi-user tiddlywiki hosting and

578
00:22:54,370 --> 00:22:57,460
when I say it it's hosting wiki's that

579
00:22:57,460 --> 00:22:59,290
you can sort of spin off its not just

580
00:22:59,290 --> 00:23:00,940
really wiki's because it's things like

581
00:23:00,940 --> 00:23:03,100
this slideshow or forums or blogs or

582
00:23:03,100 --> 00:23:04,960
whatever people want to build on top of

583
00:23:04,960 --> 00:23:07,810
tiddlywiki and above to see what people

584
00:23:07,810 --> 00:23:09,220
can come up with some of these hacks

585
00:23:09,220 --> 00:23:11,020
that I've shown today and I hope you

586
00:23:11,020 --> 00:23:19,480
found it useful and thank you so no no

587
00:23:19,480 --> 00:23:20,440
probably don't have time for questions

588
00:23:20,440 --> 00:23:25,210
do we probably got time for lunch

589
00:23:25,210 --> 00:23:28,240
instead I ok gone you we're doing this

590
00:23:28,240 --> 00:23:29,639
trip down

591
00:23:29,639 --> 00:23:32,609
painting the tape country consumes later

592
00:23:32,609 --> 00:23:35,820
oh yeah well that's just a matter of you

593
00:23:35,820 --> 00:23:37,440
can actually just get hold of all the

594
00:23:37,440 --> 00:23:39,839
script tags in the document and then so

595
00:23:39,839 --> 00:23:41,099
this is for the script Island how do you

596
00:23:41,099 --> 00:23:42,809
actually evaluate the scripts later on

597
00:23:42,809 --> 00:23:44,820
so you just get hold of all the script

598
00:23:44,820 --> 00:23:46,679
tags look at their inner HTML and you've

599
00:23:46,679 --> 00:23:48,659
got access to that information know

600
00:23:48,659 --> 00:23:50,009
where you get access to see the

601
00:23:50,009 --> 00:23:52,259
multi-part thing would you build good

602
00:23:52,259 --> 00:23:54,659
acting you can you can get X 0 to

603
00:23:54,659 --> 00:23:56,190
actually get a whole access to the

604
00:23:56,190 --> 00:23:58,619
content I think you actually can I'm not

605
00:23:58,619 --> 00:24:03,149
a hundred percent sure but I think yeah

606
00:24:03,149 --> 00:24:05,039
that's true except i think if you can

607
00:24:05,039 --> 00:24:06,989
get access it might only be nae that you

608
00:24:06,989 --> 00:24:09,389
can get access to it but yeah because i

609
00:24:09,389 --> 00:24:11,369
think the reason i say i think you can

610
00:24:11,369 --> 00:24:13,529
get access to it is is I mentioned that

611
00:24:13,529 --> 00:24:15,690
originally to the wiki is or the current

612
00:24:15,690 --> 00:24:16,889
version of tiddlywiki at storing

613
00:24:16,889 --> 00:24:18,929
everything and gives the next version

614
00:24:18,929 --> 00:24:20,609
will store some things in script tags

615
00:24:20,609 --> 00:24:22,409
and other things in mhtml so I think

616
00:24:22,409 --> 00:24:23,789
that's why you can actually get hold of

617
00:24:23,789 --> 00:24:33,289
it in a yeah cool

