1
00:00:02,330 --> 00:00:09,190

[Music]

2
00:00:09,200 --> 00:00:11,910
all right I'm going to tell you a little

3
00:00:11,910 --> 00:00:14,130
bit about native web animations so

4
00:00:14,130 --> 00:00:18,090
animation without libraries my name is

5
00:00:18,090 --> 00:00:18,960
Lizzie

6
00:00:18,960 --> 00:00:22,230
I'm live in hard on Twitter and

7
00:00:22,230 --> 00:00:24,449
listening hook dot info as my website if

8
00:00:24,449 --> 00:00:27,150
you wanna check it out

9
00:00:27,150 --> 00:00:29,970
this this talk used to be a three hours

10
00:00:29,970 --> 00:00:33,870
workshop so I cut it down to different

11
00:00:33,870 --> 00:00:36,030
topics so what we're gonna do is we're

12
00:00:36,030 --> 00:00:37,680
gonna do it a little bit interactive I

13
00:00:37,680 --> 00:00:42,020
have four different topics which is CSS

14
00:00:42,020 --> 00:00:44,840
transitions and CSS animation

15
00:00:44,840 --> 00:00:50,250
performance well she says custom

16
00:00:50,250 --> 00:00:52,260
properties and the web animations API

17
00:00:52,260 --> 00:00:56,610
and we're gonna we're gonna pick two so

18
00:00:56,610 --> 00:00:59,399
I'm gonna ask you to raise your hands

19
00:00:59,399 --> 00:01:01,199
you can raise your hands twice for two

20
00:01:01,199 --> 00:01:03,359
topics you're interested in and then the

21
00:01:03,359 --> 00:01:04,739
one with the most interest we're gonna

22
00:01:04,739 --> 00:01:06,360
we're gonna do because we can't do it

23
00:01:06,360 --> 00:01:08,070
all but you can come to me afterwards

24
00:01:08,070 --> 00:01:10,020
and I can tell you more about everything

25
00:01:10,020 --> 00:01:14,310
you want to know all right so if you

26
00:01:14,310 --> 00:01:16,500
wanna hear something about CSS

27
00:01:16,500 --> 00:01:19,350
transitions and CSS animations this one

28
00:01:19,350 --> 00:01:25,080
raise your hands all right if you want

29
00:01:25,080 --> 00:01:27,450
to hear something about animation

30
00:01:27,450 --> 00:01:37,979
performance CSS custom properties the

31
00:01:37,979 --> 00:01:42,720
web animations API alright so I think it

32
00:01:42,720 --> 00:01:45,390
was performance and the web animations

33
00:01:45,390 --> 00:01:55,920
API so all right so we're gonna start

34
00:01:55,920 --> 00:02:00,030
with performance when we do animation

35
00:02:00,030 --> 00:02:02,640
the most important property to use is

36
00:02:02,640 --> 00:02:06,540
the transform property there's four

37
00:02:06,540 --> 00:02:08,429
things the browser can really animate

38
00:02:08,429 --> 00:02:11,430
really cheaply and that's position scale

39
00:02:11,430 --> 00:02:13,130
rotation

40
00:02:13,130 --> 00:02:16,070
pasady and so position scale rotation

41
00:02:16,070 --> 00:02:18,530
you can do them all with CSS transforms

42
00:02:18,530 --> 00:02:25,460
and opacity is just CSS opacity yeah and

43
00:02:25,460 --> 00:02:28,970
you use them in CSS transform property

44
00:02:28,970 --> 00:02:32,960
mostly the transform property can do can

45
00:02:32,960 --> 00:02:36,290
do a lot of things you can translate

46
00:02:36,290 --> 00:02:38,450
things so you can move them left to

47
00:02:38,450 --> 00:02:41,810
right up and down on the XY axis and

48
00:02:41,810 --> 00:02:44,930
also in a 3d space with translate set

49
00:02:44,930 --> 00:02:49,100
you can rotate things on different axis

50
00:02:49,100 --> 00:02:51,680
on the set axis on the x axis and the y

51
00:02:51,680 --> 00:02:54,890
axis so you can also do 3d rotate you

52
00:02:54,890 --> 00:02:58,490
can scale things up and down then you

53
00:02:58,490 --> 00:03:00,280
can skew things

54
00:03:00,280 --> 00:03:03,710
yeah you can also rotate on different

55
00:03:03,710 --> 00:03:06,890
axes CSS reference is really useful the

56
00:03:06,890 --> 00:03:08,840
link on the bottom to like look at what

57
00:03:08,840 --> 00:03:11,090
transform can do and how to use two

58
00:03:11,090 --> 00:03:15,640
different the different properties

59
00:03:15,640 --> 00:03:18,410
because some of them use degrees some

60
00:03:18,410 --> 00:03:20,930
just use numbers between 0 and 1 some

61
00:03:20,930 --> 00:03:22,910
use pixels so it's all different

62
00:03:22,910 --> 00:03:26,540
depending on what you're using and in

63
00:03:26,540 --> 00:03:29,120
combination with transform the

64
00:03:29,120 --> 00:03:31,550
transformer richness it really important

65
00:03:31,550 --> 00:03:34,520
it tells your animation from which point

66
00:03:34,520 --> 00:03:36,680
it should start so if it should be

67
00:03:36,680 --> 00:03:39,140
reaching from the center from the top

68
00:03:39,140 --> 00:03:42,770
left from the bottom right it looks like

69
00:03:42,770 --> 00:03:45,440
the like the following so if it's from

70
00:03:45,440 --> 00:03:49,820
the center it's gonna transform like

71
00:03:49,820 --> 00:03:51,620
that then you can also have it outside

72
00:03:51,620 --> 00:03:54,350
of the object so you can rotate for

73
00:03:54,350 --> 00:03:57,800
example around the circle or you could

74
00:03:57,800 --> 00:03:59,810
just have it on the top left or on the

75
00:03:59,810 --> 00:04:01,640
bottom right wherever you need it to

76
00:04:01,640 --> 00:04:07,640
original so what happens when we change

77
00:04:07,640 --> 00:04:11,090
something this is really important to to

78
00:04:11,090 --> 00:04:13,130
know to realize how does the browser

79
00:04:13,130 --> 00:04:16,250
paint a website what changes you can

80
00:04:16,250 --> 00:04:18,700
make and how they influence the painting

81
00:04:18,700 --> 00:04:22,870
so first your Chavez script is evaluated

82
00:04:22,870 --> 00:04:25,060
then we

83
00:04:25,060 --> 00:04:27,219
then the browser is gonna recalculate

84
00:04:27,219 --> 00:04:30,249
your Styles he's gonna see how much

85
00:04:30,249 --> 00:04:33,009
space does every element need where does

86
00:04:33,009 --> 00:04:35,740
it go this is often when you do um left

87
00:04:35,740 --> 00:04:39,879
or right up top a button with CSS also

88
00:04:39,879 --> 00:04:41,349
they're layered calculations it's the

89
00:04:41,349 --> 00:04:44,229
same stuff then with their paintings so

90
00:04:44,229 --> 00:04:46,509
everything gets rasterized and put on

91
00:04:46,509 --> 00:04:48,039
two layers so you have different layers

92
00:04:48,039 --> 00:04:50,430
when your browser paint something and

93
00:04:50,430 --> 00:04:54,219
you can move layers independently so if

94
00:04:54,219 --> 00:04:55,810
you have a layer in the bottom you can

95
00:04:55,810 --> 00:04:57,699
move it independently from from an other

96
00:04:57,699 --> 00:05:00,069
layer but your browsers gonna um group

97
00:05:00,069 --> 00:05:03,159
things together into layers so you don't

98
00:05:03,159 --> 00:05:04,870
get too many layers because too many

99
00:05:04,870 --> 00:05:07,629
layers are also on performant and in the

100
00:05:07,629 --> 00:05:09,969
end we have the composite step and

101
00:05:09,969 --> 00:05:11,979
that's where the browser takes advantage

102
00:05:11,979 --> 00:05:15,159
of the GPU and all the layers get get

103
00:05:15,159 --> 00:05:17,830
glued together to one frame and that's

104
00:05:17,830 --> 00:05:19,960
what's shown to the user that happens in

105
00:05:19,960 --> 00:05:23,080
the last step so all of this happens in

106
00:05:23,080 --> 00:05:24,999
in one frame and so when we change

107
00:05:24,999 --> 00:05:27,189
different things it's gonna influence

108
00:05:27,189 --> 00:05:30,460
our performance so when we change layer

109
00:05:30,460 --> 00:05:33,189
it's gonna be in the layout step so in

110
00:05:33,189 --> 00:05:35,469
the second step this is when we changed

111
00:05:35,469 --> 00:05:38,259
with the March and the left the top all

112
00:05:38,259 --> 00:05:40,569
of these layout properties and that's

113
00:05:40,569 --> 00:05:42,430
really unperformed because then the

114
00:05:42,430 --> 00:05:45,009
browser needs to go to also through the

115
00:05:45,009 --> 00:05:47,289
other steps after that and that's why

116
00:05:47,289 --> 00:05:49,719
you don't really want to animate layout

117
00:05:49,719 --> 00:05:52,330
properties because yeah it's gonna be

118
00:05:52,330 --> 00:05:54,550
unperformed then with the paint step

119
00:05:54,550 --> 00:05:56,860
that's when we when we change for

120
00:05:56,860 --> 00:05:58,870
example the background color shadows

121
00:05:58,870 --> 00:06:02,469
outlines it's more performant and then

122
00:06:02,469 --> 00:06:05,050
layout but the most performant way to

123
00:06:05,050 --> 00:06:07,419
animate is like I already said transform

124
00:06:07,419 --> 00:06:09,849
property and that's happening on the

125
00:06:09,849 --> 00:06:13,319
composite layer so transform and opacity

126
00:06:13,319 --> 00:06:16,180
are the last step and then when you when

127
00:06:16,180 --> 00:06:17,860
you animate those you don't need to go

128
00:06:17,860 --> 00:06:19,889
through the previous steps the browser

129
00:06:19,889 --> 00:06:23,860
needs to run through yeah so try to

130
00:06:23,860 --> 00:06:25,719
animate are always on their composite

131
00:06:25,719 --> 00:06:29,349
step this is what it looks like in your

132
00:06:29,349 --> 00:06:32,050
dev tools so you can you can dip back

133
00:06:32,050 --> 00:06:36,500
animations and see what's happening what

134
00:06:36,500 --> 00:06:39,080
causing your animation to be slow where

135
00:06:39,080 --> 00:06:41,570
where the issues are yeah and the

136
00:06:41,570 --> 00:06:43,520
coloring you can also look at why it's

137
00:06:43,520 --> 00:06:46,100
taking so long

138
00:06:46,100 --> 00:06:48,590
also yeah like I already said a lot of

139
00:06:48,590 --> 00:06:51,320
layers a bad but it's good to like

140
00:06:51,320 --> 00:06:53,510
create layers for the right things so if

141
00:06:53,510 --> 00:06:55,460
you animate something specifically and

142
00:06:55,460 --> 00:06:57,530
you know you're gonna need an extra

143
00:06:57,530 --> 00:06:59,780
layer for that it's it's good to create

144
00:06:59,780 --> 00:07:04,340
layers so what creates a new layer 3d

145
00:07:04,340 --> 00:07:07,400
transform always creates a new layer so

146
00:07:07,400 --> 00:07:11,840
if you use trance let's see set or you

147
00:07:11,840 --> 00:07:14,290
know any any kind of 3d transform

148
00:07:14,290 --> 00:07:17,540
animated 2d transforms to also create

149
00:07:17,540 --> 00:07:20,419
layers so if you have keyframes the anim

150
00:07:20,419 --> 00:07:22,910
transforms you're gonna have those on a

151
00:07:22,910 --> 00:07:25,940
separate layer being on top of

152
00:07:25,940 --> 00:07:28,690
compositing layers also creates new

153
00:07:28,690 --> 00:07:32,000
creates a new layer so you have to see

154
00:07:32,000 --> 00:07:34,580
where where where your layers are and

155
00:07:34,580 --> 00:07:37,100
you should rather animate on top layers

156
00:07:37,100 --> 00:07:40,820
not on the bottom layers accelerated CSS

157
00:07:40,820 --> 00:07:43,130
filters create new layers and of course

158
00:07:43,130 --> 00:07:46,729
will change property creates a new layer

159
00:07:46,729 --> 00:07:50,360
that's the most popular one but you have

160
00:07:50,360 --> 00:07:52,010
to be aware when you create new layers

161
00:07:52,010 --> 00:07:57,320
that every layer consumes memory so ya

162
00:07:57,320 --> 00:07:59,720
only use them when you need them for

163
00:07:59,720 --> 00:08:01,790
animation and maybe remove them and

164
00:08:01,790 --> 00:08:05,360
something has stopped animating so this

165
00:08:05,360 --> 00:08:08,840
is SAS mixing for like really making

166
00:08:08,840 --> 00:08:11,630
sure that a new layer is created it uses

167
00:08:11,630 --> 00:08:16,160
will change then it uses a transform

168
00:08:16,160 --> 00:08:19,669
translate that because will change isn't

169
00:08:19,669 --> 00:08:22,850
supported in all browsers so if you

170
00:08:22,850 --> 00:08:24,530
really want to support all our browsers

171
00:08:24,530 --> 00:08:29,290
you're gonna probably use a 3d transform

172
00:08:29,290 --> 00:08:33,320
yeah and on will change because you

173
00:08:33,320 --> 00:08:34,849
always create new layers with will

174
00:08:34,849 --> 00:08:37,400
change you you shouldn't optimize all

175
00:08:37,400 --> 00:08:38,839
the elements because you're gonna get a

176
00:08:38,839 --> 00:08:40,430
lot of layers and you don't want that

177
00:08:40,430 --> 00:08:43,310
and only use it if the change happens

178
00:08:43,310 --> 00:08:45,950
constantly and maybe remove it when you

179
00:08:45,950 --> 00:08:47,060
don't need it anymore

180
00:08:47,060 --> 00:08:51,750
and yeah in some browsers it's not

181
00:08:51,750 --> 00:08:53,790
supported yet so you're gonna need to

182
00:08:53,790 --> 00:08:57,959
use the 3d transforms also another thing

183
00:08:57,959 --> 00:09:00,209
for performance that's really important

184
00:09:00,209 --> 00:09:01,800
is a function that's called

185
00:09:01,800 --> 00:09:05,640
requestanimationframe in JavaScript it's

186
00:09:05,640 --> 00:09:07,500
a function that the browser can optimize

187
00:09:07,500 --> 00:09:10,370
so your animations will be smooth there

188
00:09:10,370 --> 00:09:13,589
it will stop when you're in another tab

189
00:09:13,589 --> 00:09:16,649
and it allows the CPU to chill if you go

190
00:09:16,649 --> 00:09:18,300
to another website so it doesn't run

191
00:09:18,300 --> 00:09:19,800
consistently if you're not even looking

192
00:09:19,800 --> 00:09:22,800
at it and it's more battery friendly so

193
00:09:22,800 --> 00:09:25,350
if you do consistent changes consistent

194
00:09:25,350 --> 00:09:27,990
animations requestanimationframe is a

195
00:09:27,990 --> 00:09:31,649
great way to to make it more performant

196
00:09:31,649 --> 00:09:33,329
and you don't need to use it if you're

197
00:09:33,329 --> 00:09:35,339
using the web animations API because it

198
00:09:35,339 --> 00:09:38,730
does this automatically yeah and green

199
00:09:38,730 --> 00:09:40,290
sock of course also uses the

200
00:09:40,290 --> 00:09:44,790
requestanimationframe already and you

201
00:09:44,790 --> 00:09:47,010
can use the cancel animation frame

202
00:09:47,010 --> 00:09:49,290
function to end calling the

203
00:09:49,290 --> 00:09:52,529
requestanimationframe function this is

204
00:09:52,529 --> 00:09:54,660
what it looks like so it's a function

205
00:09:54,660 --> 00:09:58,829
and then you do your your changes and in

206
00:09:58,829 --> 00:10:01,620
the end you call this function again and

207
00:10:01,620 --> 00:10:04,260
you start it you start calling the

208
00:10:04,260 --> 00:10:06,180
requestanimationframe function by

209
00:10:06,180 --> 00:10:08,209
calling request animation frame on your

210
00:10:08,209 --> 00:10:10,680
function with your changes that should

211
00:10:10,680 --> 00:10:16,110
happen on every frame so to summarize

212
00:10:16,110 --> 00:10:20,399
this if you want to get performant

213
00:10:20,399 --> 00:10:21,959
animation you should only animate

214
00:10:21,959 --> 00:10:25,260
transform and opacity if possible use

215
00:10:25,260 --> 00:10:28,680
will change and request animation frame

216
00:10:28,680 --> 00:10:31,829
where you need them don't create too

217
00:10:31,829 --> 00:10:34,920
many layers look at what layers you are

218
00:10:34,920 --> 00:10:37,709
creating and animate elements on the top

219
00:10:37,709 --> 00:10:41,010
layers and also inspect and test the

220
00:10:41,010 --> 00:10:43,079
animations in the dev tools that's

221
00:10:43,079 --> 00:10:45,149
really important and I can show you

222
00:10:45,149 --> 00:10:46,980
later if someone is interested how to

223
00:10:46,980 --> 00:10:50,459
use the dev tools to inspect your

224
00:10:50,459 --> 00:10:54,980
animations all right that's the

225
00:10:54,980 --> 00:10:59,100
performance part let's see

226
00:10:59,100 --> 00:11:06,450
go to the web animations API so the web

227
00:11:06,450 --> 00:11:09,780
animations API tries to combine the

228
00:11:09,780 --> 00:11:13,820
advantages of CSS animation and

229
00:11:13,820 --> 00:11:16,290
performance like hardware acceleration

230
00:11:16,290 --> 00:11:19,440
with JavaScript so you animate

231
00:11:19,440 --> 00:11:21,600
completely in Chaves script but you have

232
00:11:21,600 --> 00:11:27,030
a lot of advantages you have in CSS yeah

233
00:11:27,030 --> 00:11:29,160
you animate completely in JavaScript you

234
00:11:29,160 --> 00:11:30,870
have more control over your animations

235
00:11:30,870 --> 00:11:33,930
so doing timelines in CSS is kind of

236
00:11:33,930 --> 00:11:36,260
hard if you have like more than three

237
00:11:36,260 --> 00:11:39,870
staggered animations to deal with so the

238
00:11:39,870 --> 00:11:42,030
web animations API tries to make this

239
00:11:42,030 --> 00:11:45,270
easier and you can also pause and make

240
00:11:45,270 --> 00:11:48,060
your animations faster it'sit's really

241
00:11:48,060 --> 00:11:50,700
good for like dynamic and reactive

242
00:11:50,700 --> 00:11:52,890
animations so when you have like mouse

243
00:11:52,890 --> 00:11:56,790
movements and other more more dynamic

244
00:11:56,790 --> 00:11:59,760
things you want to react to and you can

245
00:11:59,760 --> 00:12:01,980
really combine it nicely with JavaScript

246
00:12:01,980 --> 00:12:03,510
events because you do everything in

247
00:12:03,510 --> 00:12:04,860
JavaScript you can use it in your

248
00:12:04,860 --> 00:12:06,570
frameworks and you and you react

249
00:12:06,570 --> 00:12:09,270
wherever you need it and yeah you get

250
00:12:09,270 --> 00:12:11,190
controls and callbacks so this means

251
00:12:11,190 --> 00:12:12,930
when animation is finished you get a

252
00:12:12,930 --> 00:12:15,450
callback and you can pause it replay it

253
00:12:15,450 --> 00:12:18,720
whatever and you can group to grouping

254
00:12:18,720 --> 00:12:22,560
and timing so how does it look like the

255
00:12:22,560 --> 00:12:25,220
web animations API to call it you have

256
00:12:25,220 --> 00:12:29,160
you have a function on a Dom element so

257
00:12:29,160 --> 00:12:30,840
every Dom element if you do document

258
00:12:30,840 --> 00:12:33,120
query selector you can call on this Dom

259
00:12:33,120 --> 00:12:38,190
element animate function and it has two

260
00:12:38,190 --> 00:12:40,590
values so the keyframes object or a

261
00:12:40,590 --> 00:12:43,050
keyframes array is the stages of the

262
00:12:43,050 --> 00:12:45,780
different animations so where you start

263
00:12:45,780 --> 00:12:47,340
and where you end and how your animation

264
00:12:47,340 --> 00:12:49,500
behaviors and then the second part is

265
00:12:49,500 --> 00:12:51,930
the timings object its how its animated

266
00:12:51,930 --> 00:12:54,300
so how far fast it is how much delay it

267
00:12:54,300 --> 00:13:02,610
has and other timing related things all

268
00:13:02,610 --> 00:13:05,220
right so the first part the keyframes

269
00:13:05,220 --> 00:13:07,500
you can either use an object or an array

270
00:13:07,500 --> 00:13:10,770
if you use an object you have the CSS

271
00:13:10,770 --> 00:13:13,650
property and then give it all their work

272
00:13:13,650 --> 00:13:16,290
values you want to animate and if you

273
00:13:16,290 --> 00:13:18,870
have an array you have an array of

274
00:13:18,870 --> 00:13:21,540
objects and that's the different parts

275
00:13:21,540 --> 00:13:24,020
the different frames of your animation

276
00:13:24,020 --> 00:13:26,880
so that's for the first part of the

277
00:13:26,880 --> 00:13:28,500
function for the second part of a

278
00:13:28,500 --> 00:13:32,850
function you have a timing object it has

279
00:13:32,850 --> 00:13:35,280
the duration how often you would wander

280
00:13:35,280 --> 00:13:38,880
the animation if you run it forwards or

281
00:13:38,880 --> 00:13:42,480
backwards if you wanted to go forwards

282
00:13:42,480 --> 00:13:46,170
and back the delay the empty may and the

283
00:13:46,170 --> 00:13:48,150
easing so you can use all of these are

284
00:13:48,150 --> 00:13:50,400
really similar to CSS animation yet so

285
00:13:50,400 --> 00:13:53,520
you can use the CSS eating's you're used

286
00:13:53,520 --> 00:13:57,210
to you can use cubic pcs and also the

287
00:13:57,210 --> 00:13:59,970
direction and to fill are what you use

288
00:13:59,970 --> 00:14:04,170
in CSS animation so to call it you would

289
00:14:04,170 --> 00:14:06,360
get an object and then you would call

290
00:14:06,360 --> 00:14:09,120
that animate on this object you'd have

291
00:14:09,120 --> 00:14:11,310
two keyframes at the timings so for

292
00:14:11,310 --> 00:14:14,610
example this would do my object would be

293
00:14:14,610 --> 00:14:17,670
scaled to zero and not visible and then

294
00:14:17,670 --> 00:14:20,100
there's like zero percent and then at

295
00:14:20,100 --> 00:14:22,860
100% it would be scaled to one and

296
00:14:22,860 --> 00:14:25,230
visible so it would fade and scale in

297
00:14:25,230 --> 00:14:28,680
and then it would take two seconds

298
00:14:28,680 --> 00:14:31,410
I have an easing at run it once and to

299
00:14:31,410 --> 00:14:33,120
fill for words is the fill mode this

300
00:14:33,120 --> 00:14:35,030
means after the animation is finished

301
00:14:35,030 --> 00:14:38,160
it's gonna stay the way it was animated

302
00:14:38,160 --> 00:14:42,220
to and not go back to what it was before

303
00:14:42,230 --> 00:14:46,260
then once you have an animation so once

304
00:14:46,260 --> 00:14:48,180
you call this function you get back an

305
00:14:48,180 --> 00:14:50,550
animation object and you can do

306
00:14:50,550 --> 00:14:52,410
different things with this animation of

307
00:14:52,410 --> 00:14:55,890
object so you could get the play state

308
00:14:55,890 --> 00:14:58,530
in the second line if you if you're just

309
00:14:58,530 --> 00:15:00,870
played it it's going to be running you

310
00:15:00,870 --> 00:15:02,970
can pause your animation you can play

311
00:15:02,970 --> 00:15:05,610
your animation you can answer cancel it

312
00:15:05,610 --> 00:15:09,570
so may make it go away you can jump to

313
00:15:09,570 --> 00:15:10,680
the end of the animation

314
00:15:10,680 --> 00:15:15,119
or you could play it backwards and you

315
00:15:15,119 --> 00:15:17,490
could make it faster or slower depending

316
00:15:17,490 --> 00:15:21,199
on how fast your playback rate is and

317
00:15:21,199 --> 00:15:32,079
you also get callbacks

318
00:15:32,089 --> 00:15:36,509
you also get callbacks so also an

319
00:15:36,509 --> 00:15:38,879
animation object you get callback

320
00:15:38,879 --> 00:15:41,129
function so you can say animation on

321
00:15:41,129 --> 00:15:43,980
finish do something or when my animation

322
00:15:43,980 --> 00:15:47,279
is cancelled remove my whole Dom object

323
00:15:47,279 --> 00:15:49,079
because I don't need it anymore because

324
00:15:49,079 --> 00:15:58,170
the animation is done this is a little

325
00:15:58,170 --> 00:15:59,910
animation I built with the web animation

326
00:15:59,910 --> 00:16:01,649
API and I'm going to explain it to you

327
00:16:01,649 --> 00:16:03,929
so this is the keyframes and then the

328
00:16:03,929 --> 00:16:06,779
offset on every keyframe I can define an

329
00:16:06,779 --> 00:16:09,199
offset and that's similar to the

330
00:16:09,199 --> 00:16:13,459
percentages in CSS animation so offset

331
00:16:13,459 --> 00:16:18,389
point 33 would be 33% so I can have

332
00:16:18,389 --> 00:16:21,709
different parts where I want to animate

333
00:16:21,709 --> 00:16:27,509
my properties then I have a timing

334
00:16:27,509 --> 00:16:31,679
object and then I just call on my Dom

335
00:16:31,679 --> 00:16:38,069
object I call my animation and now what

336
00:16:38,069 --> 00:16:40,769
I can do is my tree is one Dom element

337
00:16:40,769 --> 00:16:44,160
and I can add an event listener and then

338
00:16:44,160 --> 00:16:46,709
I can take my animation object and I can

339
00:16:46,709 --> 00:16:49,290
set the current time which is the time

340
00:16:49,290 --> 00:16:52,050
of the animation of the Apple to zero so

341
00:16:52,050 --> 00:16:53,999
it starts from the beginning and then I

342
00:16:53,999 --> 00:16:56,910
replay it so I change I change the

343
00:16:56,910 --> 00:17:01,620
properties I can also add an event

344
00:17:01,620 --> 00:17:04,169
listener to the Apple and make it faster

345
00:17:04,169 --> 00:17:05,429
here in the bottom you see that it's

346
00:17:05,429 --> 00:17:07,439
that's a playback right so now the

347
00:17:07,439 --> 00:17:10,829
animation is a lot faster so I can

348
00:17:10,829 --> 00:17:12,870
really like dynamically change how my

349
00:17:12,870 --> 00:17:20,039
animation behaves in the browser yeah

350
00:17:20,039 --> 00:17:22,439
this is I think it's too small but this

351
00:17:22,439 --> 00:17:24,209
is an example I did in the workshop and

352
00:17:24,209 --> 00:17:26,669
here I'm just staggering

353
00:17:26,669 --> 00:17:29,850
different elements after and after

354
00:17:29,850 --> 00:17:32,100
another and then I can just stop the

355
00:17:32,100 --> 00:17:34,919
animation restarted and it's all just

356
00:17:34,919 --> 00:17:37,110
here in the JavaScript two different

357
00:17:37,110 --> 00:17:39,240
keyframes you can look at it later in

358
00:17:39,240 --> 00:17:42,899
copán and play around with it all right

359
00:17:42,899 --> 00:17:45,840
a little bit about the web animation API

360
00:17:45,840 --> 00:17:49,770
and CSS so what's the difference when

361
00:17:49,770 --> 00:17:51,990
should I use the web animations API when

362
00:17:51,990 --> 00:17:55,980
should I use CSS animation maybe well

363
00:17:55,980 --> 00:17:59,190
CSS is great for for styling and for

364
00:17:59,190 --> 00:18:01,020
static animations so if you have some

365
00:18:01,020 --> 00:18:04,409
predefined animations CSS this is really

366
00:18:04,409 --> 00:18:07,169
enough but if you want to like interact

367
00:18:07,169 --> 00:18:09,120
with the animation if you want to react

368
00:18:09,120 --> 00:18:11,639
to some JavaScript events if you want to

369
00:18:11,639 --> 00:18:14,070
react to something they use it as the

370
00:18:14,070 --> 00:18:16,350
web animation API might be a better

371
00:18:16,350 --> 00:18:20,610
option because yeah you can change all

372
00:18:20,610 --> 00:18:24,630
the things right there also transitions

373
00:18:24,630 --> 00:18:27,600
and hover and focus animations so maybe

374
00:18:27,600 --> 00:18:29,909
patterns or loading spinners they can

375
00:18:29,909 --> 00:18:31,860
all be defined in CSS because they don't

376
00:18:31,860 --> 00:18:36,029
really need to be that reactive and CSS

377
00:18:36,029 --> 00:18:38,820
also is really simple and declarative so

378
00:18:38,820 --> 00:18:40,620
you don't need to know like really a lot

379
00:18:40,620 --> 00:18:43,620
of JavaScript to do in CSS animation so

380
00:18:43,620 --> 00:18:46,620
if you want really simple animation CSS

381
00:18:46,620 --> 00:18:49,620
is enough and what's cool about CSS is

382
00:18:49,620 --> 00:18:51,630
also that you don't have JavaScript

383
00:18:51,630 --> 00:18:53,220
blocking so if you run a lot of

384
00:18:53,220 --> 00:18:54,929
JavaScript and you have all your

385
00:18:54,929 --> 00:18:56,970
animations in like a JavaScript

386
00:18:56,970 --> 00:18:59,010
animation library it can be that your

387
00:18:59,010 --> 00:19:00,750
animations are not running because all

388
00:19:00,750 --> 00:19:02,789
your Chaves script is really a ting and

389
00:19:02,789 --> 00:19:05,520
if you do CSS animations you won't have

390
00:19:05,520 --> 00:19:08,880
that problem the web animation API is

391
00:19:08,880 --> 00:19:12,750
great for sequencing because it's built

392
00:19:12,750 --> 00:19:15,809
for doing more complex animations you

393
00:19:15,809 --> 00:19:17,299
get controls callbacks

394
00:19:17,299 --> 00:19:20,610
you also get all your animations in your

395
00:19:20,610 --> 00:19:23,340
document timeline so you can get all the

396
00:19:23,340 --> 00:19:25,470
animations you have to find in your

397
00:19:25,470 --> 00:19:27,570
document and you can stop them all or

398
00:19:27,570 --> 00:19:29,909
replay them all or for accessibility

399
00:19:29,909 --> 00:19:32,530
make them slower or

400
00:19:32,530 --> 00:19:35,470
make them not play at all you also get

401
00:19:35,470 --> 00:19:37,330
hardware acceleration like you get in

402
00:19:37,330 --> 00:19:40,540
CSS and yeah it's gonna be natively in

403
00:19:40,540 --> 00:19:42,190
your browser in the future

404
00:19:42,190 --> 00:19:44,410
so all the browser's are already working

405
00:19:44,410 --> 00:19:47,200
on implementing it so it's gonna be a

406
00:19:47,200 --> 00:19:49,420
more advanced option on doing animation

407
00:19:49,420 --> 00:19:56,770
in the browser and yeah the the web

408
00:19:56,770 --> 00:20:01,630
animations API to libraries when you

409
00:20:01,630 --> 00:20:04,090
should use the web animation API versus

410
00:20:04,090 --> 00:20:08,080
like a big library like cheese app while

411
00:20:08,080 --> 00:20:09,760
the web animation API is going to be

412
00:20:09,760 --> 00:20:11,440
native so you won't need to load

413
00:20:11,440 --> 00:20:13,630
anything in your browser versus

414
00:20:13,630 --> 00:20:15,820
libraries can can be kind of big it

415
00:20:15,820 --> 00:20:17,620
depends on which library which animation

416
00:20:17,620 --> 00:20:19,780
library use but you're gonna have an

417
00:20:19,780 --> 00:20:21,790
external dependency and you're gonna

418
00:20:21,790 --> 00:20:24,730
need to load it so the size you don't

419
00:20:24,730 --> 00:20:26,590
have any additional size in the web

420
00:20:26,590 --> 00:20:30,730
animation API if you do SVG animation

421
00:20:30,730 --> 00:20:33,460
which is very popular it's going to be

422
00:20:33,460 --> 00:20:35,020
hard to do with the web animations API

423
00:20:35,020 --> 00:20:37,600
because there's a lot of cross browser

424
00:20:37,600 --> 00:20:40,420
inconsistencies in SVG and whatever

425
00:20:40,420 --> 00:20:44,740
library like cheese Aptos they it's like

426
00:20:44,740 --> 00:20:48,540
like a big SVG animation polyfill it

427
00:20:48,540 --> 00:20:50,980
solves all these issues and that's why

428
00:20:50,980 --> 00:20:53,530
you when you animate SVG you normally

429
00:20:53,530 --> 00:20:55,870
choose an animation tool like cheese app

430
00:20:55,870 --> 00:21:02,110
or another SVG animation library ya

431
00:21:02,110 --> 00:21:04,330
browser rendering so when you use the

432
00:21:04,330 --> 00:21:07,720
web animation API the browser optimizes

433
00:21:07,720 --> 00:21:09,640
it because it's you're using the browser

434
00:21:09,640 --> 00:21:11,920
API so the browser knows what you're

435
00:21:11,920 --> 00:21:13,840
animating when you use a library often

436
00:21:13,840 --> 00:21:15,490
the browser doesn't know that you're

437
00:21:15,490 --> 00:21:17,710
animating this and elements and so it

438
00:21:17,710 --> 00:21:19,840
can't optimize for this animation

439
00:21:19,840 --> 00:21:24,280
animation and yeah it's gonna be small

440
00:21:24,280 --> 00:21:28,810
because it's gonna be native this is

441
00:21:28,810 --> 00:21:31,660
also interesting this is different

442
00:21:31,660 --> 00:21:34,980
libraries animations without cheese

443
00:21:34,980 --> 00:21:37,299
JavaScript black blocking

444
00:21:37,299 --> 00:21:41,679
and if you add JavaScript blocking all

445
00:21:41,679 --> 00:21:44,259
the JavaScript libraries they're gonna

446
00:21:44,259 --> 00:21:46,450
be like slower and if you have a lot of

447
00:21:46,450 --> 00:21:48,909
JavaScript and it's unperformed then

448
00:21:48,909 --> 00:21:51,039
your animations are also not gonna run

449
00:21:51,039 --> 00:21:51,700
smooth

450
00:21:51,700 --> 00:21:54,879
so with web animations API on CSS

451
00:21:54,879 --> 00:21:56,830
animations you don't have that problem

452
00:21:56,830 --> 00:21:59,220
because you're using in browser

453
00:21:59,220 --> 00:22:06,070
optimization the problem about the web

454
00:22:06,070 --> 00:22:08,019
animations API is of course the

455
00:22:08,019 --> 00:22:09,639
browser's support still it's in

456
00:22:09,639 --> 00:22:12,970
implementation there's a really good

457
00:22:12,970 --> 00:22:15,549
polyfill I'm good github and you can use

458
00:22:15,549 --> 00:22:18,129
it and then it's your gonna it's like an

459
00:22:18,129 --> 00:22:21,220
animation library yet you're using it's

460
00:22:21,220 --> 00:22:22,779
gonna fall back to the native

461
00:22:22,779 --> 00:22:25,539
implementation if it's there if it's not

462
00:22:25,539 --> 00:22:28,539
there you're gonna load the polyfill and

463
00:22:28,539 --> 00:22:30,759
you can use all the web animation API

464
00:22:30,759 --> 00:22:35,609
things already on production sites and

465
00:22:35,609 --> 00:22:38,259
the web platform tests you can look at

466
00:22:38,259 --> 00:22:42,220
it to see how far the implementations

467
00:22:42,220 --> 00:22:45,249
are so you can look at the different

468
00:22:45,249 --> 00:22:47,499
parts of the animation and see which

469
00:22:47,499 --> 00:22:49,690
browsers are already implemented which

470
00:22:49,690 --> 00:22:52,609
functions

471
00:22:52,619 --> 00:22:55,480
yeah that's why can I use isn't really

472
00:22:55,480 --> 00:22:57,340
saying that much because different

473
00:22:57,340 --> 00:22:59,799
browser already implemented different

474
00:22:59,799 --> 00:23:04,470
parts of the API and you don't know if

475
00:23:04,470 --> 00:23:07,869
if you just look at can I use it doesn't

476
00:23:07,869 --> 00:23:09,879
mean they haven't implemented it at all

477
00:23:09,879 --> 00:23:11,379
but it's still working on it it just

478
00:23:11,379 --> 00:23:15,029
haven't implemented everything and just

479
00:23:15,029 --> 00:23:17,830
animate is a really small animation

480
00:23:17,830 --> 00:23:21,279
library that uses the web animation API

481
00:23:21,279 --> 00:23:24,340
under the hood so it's it's really tiny

482
00:23:24,340 --> 00:23:26,710
and it's really easy to use so you don't

483
00:23:26,710 --> 00:23:31,299
have to write so many keyframes and you

484
00:23:31,299 --> 00:23:36,229
get like easing x' and different stuff

485
00:23:36,239 --> 00:23:38,889
these are some examples I build with the

486
00:23:38,889 --> 00:23:41,799
web animation API so you get you get all

487
00:23:41,799 --> 00:23:45,009
this like interaction you can reset your

488
00:23:45,009 --> 00:23:45,900
animation

489
00:23:45,900 --> 00:23:48,810
and then I can change I can change the

490
00:23:48,810 --> 00:23:54,300
text in the back on a call back so I get

491
00:23:54,300 --> 00:23:59,040
to like react to what I use it us yeah

492
00:23:59,040 --> 00:24:01,080
this is with a slider so you have a

493
00:24:01,080 --> 00:24:03,600
slider and then you start some some

494
00:24:03,600 --> 00:24:06,420
animations yeah

495
00:24:06,420 --> 00:24:10,590
so dynamic dynamic reactions to to what

496
00:24:10,590 --> 00:24:12,840
the user does so that's where it's gonna

497
00:24:12,840 --> 00:24:15,300
be hard to do in in CSS and that's where

498
00:24:15,300 --> 00:24:25,750
you would use web animations API alright

499
00:24:25,760 --> 00:24:28,650
yeah one more thing I wanted to say if

500
00:24:28,650 --> 00:24:31,800
you do web animations and you want to

501
00:24:31,800 --> 00:24:33,810
make your animations look better I'm

502
00:24:33,810 --> 00:24:36,690
trying to level up your eating's

503
00:24:36,690 --> 00:24:39,450
don't just use is in ease out but look

504
00:24:39,450 --> 00:24:40,980
at different eating's there's a lot of

505
00:24:40,980 --> 00:24:45,090
tools like easing studnet so you get all

506
00:24:45,090 --> 00:24:47,850
these different easing Xin CSS and you

507
00:24:47,850 --> 00:24:54,570
can just copy them all so here in the

508
00:24:54,570 --> 00:24:56,370
bottom there are some eating's which you

509
00:24:56,370 --> 00:24:59,400
can't do in CSS that's what like CSS

510
00:24:59,400 --> 00:25:02,070
animation libraries do because you can

511
00:25:02,070 --> 00:25:04,380
only have like a simple curve in CSS in

512
00:25:04,380 --> 00:25:06,390
JavaScript you can do like bouncing

513
00:25:06,390 --> 00:25:09,360
bouncing eating's which are really great

514
00:25:09,360 --> 00:25:15,510
for more dynamic animations then cubic

515
00:25:15,510 --> 00:25:18,150
this year from Nehru it's just great to

516
00:25:18,150 --> 00:25:21,270
play around to see how you're eating

517
00:25:21,270 --> 00:25:23,280
looks like and it has like in the top

518
00:25:23,280 --> 00:25:26,160
you can compare different animations and

519
00:25:26,160 --> 00:25:30,030
different eating's and what I also love

520
00:25:30,030 --> 00:25:32,550
is a great tool is cheese app and green

521
00:25:32,550 --> 00:25:35,880
6yz visualizer which is really great

522
00:25:35,880 --> 00:25:37,560
because they have a lot of like more

523
00:25:37,560 --> 00:25:40,800
complex easing and you can in the bottom

524
00:25:40,800 --> 00:25:43,710
you can change them make them faster and

525
00:25:43,710 --> 00:25:46,200
slower and when you get started with

526
00:25:46,200 --> 00:25:48,900
animation this is really useful to to

527
00:25:48,900 --> 00:25:50,640
try different eating's and play around

528
00:25:50,640 --> 00:25:57,610
with how you how your animations behave

529
00:25:57,620 --> 00:25:58,720
there

530
00:25:58,720 --> 00:26:02,890
also just predefined easing zinthoss or

531
00:26:02,890 --> 00:26:05,559
there's a great medium article called

532
00:26:05,559 --> 00:26:07,929
crafting user interface crafting easing

533
00:26:07,929 --> 00:26:11,200
curves for user interfaces which goes

534
00:26:11,200 --> 00:26:14,740
more in-depth into eating's for user

535
00:26:14,740 --> 00:26:19,390
interfaces all right there was it I hope

536
00:26:19,390 --> 00:26:21,400
you enjoyed it the slides will be at

537
00:26:21,400 --> 00:26:24,280
slides that come easily not gs uncom so

538
00:26:24,280 --> 00:26:25,870
you can look through everything you can

539
00:26:25,870 --> 00:26:28,539
look at the examples and copán and play

540
00:26:28,539 --> 00:26:31,030
around with them and there's also the

541
00:26:31,030 --> 00:26:32,860
other parts which I wasn't didn't have

542
00:26:32,860 --> 00:26:35,230
the time to go through there also in

543
00:26:35,230 --> 00:26:37,330
these slides so you can also look at the

544
00:26:37,330 --> 00:26:40,480
other parts we didn't cover yeah that's

545
00:26:40,480 --> 00:26:41,230
it thank you

546
00:26:41,230 --> 00:26:46,830
[Applause]

