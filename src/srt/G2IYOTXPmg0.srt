1
00:00:17,170 --> 00:00:21,580

hi good morning um so yeah I wanted to

2
00:00:21,580 --> 00:00:26,760
talk to you guys about Evie Jasmine v

3
00:00:26,760 --> 00:00:30,279
jayus and and jasmine and how I mush

4
00:00:30,279 --> 00:00:32,950
them together to get the unit testing

5
00:00:32,950 --> 00:00:35,410
working on my Hudson server which was

6
00:00:35,410 --> 00:00:37,570
really awesome but first of all let me

7
00:00:37,570 --> 00:00:39,520
introduce myself my name is Trevor

8
00:00:39,520 --> 00:00:43,570
leishman awe at Trev max I I work for

9
00:00:43,570 --> 00:00:46,690
comcast which is a big evil company and

10
00:00:46,690 --> 00:00:49,059
we do being evil things but the stuff I

11
00:00:49,059 --> 00:00:50,860
do is kind of fun and the payment money

12
00:00:50,860 --> 00:00:54,460
do it so that's cool and yeah so I

13
00:00:54,460 --> 00:00:58,989
wanted to talk about that it was it's

14
00:00:58,989 --> 00:01:02,170
interesting I came from a smaller team

15
00:01:02,170 --> 00:01:06,220
and I I went to that that was doing unit

16
00:01:06,220 --> 00:01:08,049
testing and doing a lot of stuff to a

17
00:01:08,049 --> 00:01:10,420
larger team where we really didn't do

18
00:01:10,420 --> 00:01:12,790
any testing at all especially not in

19
00:01:12,790 --> 00:01:15,850
JavaScript and I came from Ruby world

20
00:01:15,850 --> 00:01:17,680
where everyone's like I love unit

21
00:01:17,680 --> 00:01:19,420
testing I was like yeah I love the unit

22
00:01:19,420 --> 00:01:22,600
testing too so I started in doctoring

23
00:01:22,600 --> 00:01:25,329
people in my team into the unit testing

24
00:01:25,329 --> 00:01:27,039
but really I wanted some accountability

25
00:01:27,039 --> 00:01:29,979
to that so I'm going to give a little

26
00:01:29,979 --> 00:01:31,450
bit of the presentation i gave to them

27
00:01:31,450 --> 00:01:33,909
to try and passion them on unit testing

28
00:01:33,909 --> 00:01:35,950
and then i'll talk about the tools i use

29
00:01:35,950 --> 00:01:39,189
to push it together so i already asked

30
00:01:39,189 --> 00:01:40,509
this before but raise your hand if you

31
00:01:40,509 --> 00:01:42,869
test your javascript programmatically

32
00:01:42,869 --> 00:01:47,829
okay good that's awesome so i'm going to

33
00:01:47,829 --> 00:01:49,509
go through a little primer on what unit

34
00:01:49,509 --> 00:01:53,530
tests are unit test test functions i

35
00:01:53,530 --> 00:01:54,969
believe that you should test your logic

36
00:01:54,969 --> 00:01:58,719
of her functions and not not just a

37
00:01:58,719 --> 00:02:00,579
function for testing and function so

38
00:02:00,579 --> 00:02:02,020
that function does have any logic so I

39
00:02:02,020 --> 00:02:03,850
wouldn't write a test for it now you

40
00:02:03,850 --> 00:02:05,740
might say that's dumb but you know

41
00:02:05,740 --> 00:02:08,830
that's the way I would do it I also

42
00:02:08,830 --> 00:02:10,240
believe that you should write functions

43
00:02:10,240 --> 00:02:12,250
that do one thing and one thing really

44
00:02:12,250 --> 00:02:14,440
well so this is the unix principle that

45
00:02:14,440 --> 00:02:16,780
you you have a program that does one

46
00:02:16,780 --> 00:02:18,550
thing and one thing really well i like

47
00:02:18,550 --> 00:02:19,780
my functions to be that is small like

48
00:02:19,780 --> 00:02:21,340
that to you write a small function you

49
00:02:21,340 --> 00:02:23,050
can you can test it really easy if

50
00:02:23,050 --> 00:02:24,520
you're i Function there's 13 different

51
00:02:24,520 --> 00:02:26,260
things well then your test is going to

52
00:02:26,260 --> 00:02:27,640
be beast and you're gonna be crying and

53
00:02:27,640 --> 00:02:30,200
it sucks right so that's

54
00:02:30,200 --> 00:02:34,489
so here we go here's a test I have you

55
00:02:34,489 --> 00:02:37,340
guys if you're familiar with jasmine

56
00:02:37,340 --> 00:02:38,900
this is jasmine it sort of looks like

57
00:02:38,900 --> 00:02:41,269
our spec coming from a ruby world I

58
00:02:41,269 --> 00:02:42,620
really like our spec so that's why i

59
00:02:42,620 --> 00:02:44,780
chose jasmine actually I chose je spec

60
00:02:44,780 --> 00:02:47,030
first but then the guy that did Jace

61
00:02:47,030 --> 00:02:48,530
Beck said I'm not doing that anymore you

62
00:02:48,530 --> 00:02:50,330
Jasmine so Mazel Tov that's where we are

63
00:02:50,330 --> 00:02:53,930
and so so that's pretty straight for Ida

64
00:02:53,930 --> 00:02:56,180
scribe add one it returns the parameter

65
00:02:56,180 --> 00:03:00,830
plus 1 and then I expect add one with 12

66
00:03:00,830 --> 00:03:03,250
equal to so it's pretty straightforward

67
00:03:03,250 --> 00:03:07,459
and the entire point of this is is the

68
00:03:07,459 --> 00:03:12,260
red green refactor cycle I and I really

69
00:03:12,260 --> 00:03:14,480
got into this after going to a code camp

70
00:03:14,480 --> 00:03:16,340
on site I went to this code camp about a

71
00:03:16,340 --> 00:03:19,099
year and half ago and its really awesome

72
00:03:19,099 --> 00:03:22,310
like we got together and we r I T crappy

73
00:03:22,310 --> 00:03:24,920
tested broke we would write the test

74
00:03:24,920 --> 00:03:27,349
that fixed it and then we fix the code

75
00:03:27,349 --> 00:03:29,000
because we wrote a really crappy code

76
00:03:29,000 --> 00:03:30,980
just to make it pass and over and over

77
00:03:30,980 --> 00:03:33,739
over again and it's addictively fun to

78
00:03:33,739 --> 00:03:36,829
to code this way but it's really really

79
00:03:36,829 --> 00:03:39,980
hard to get people in in the air prize

80
00:03:39,980 --> 00:03:41,690
at least or we like when you have a day

81
00:03:41,690 --> 00:03:42,920
job and you have to get your stuff done

82
00:03:42,920 --> 00:03:45,560
you know I can't get my stuff done and I

83
00:03:45,560 --> 00:03:47,510
don't test like I I'm really bad out

84
00:03:47,510 --> 00:03:49,250
test all the time I wish I did test all

85
00:03:49,250 --> 00:03:52,609
the time I love testing but it's hard to

86
00:03:52,609 --> 00:03:54,290
do that without having a group of people

87
00:03:54,290 --> 00:03:56,690
that also love testing so that's why I

88
00:03:56,690 --> 00:03:58,010
preach on testing because I want other

89
00:03:58,010 --> 00:04:00,230
people to to get excited about it and

90
00:04:00,230 --> 00:04:02,389
the entire concept beach n red greening

91
00:04:02,389 --> 00:04:04,310
factor is really my ideal working

92
00:04:04,310 --> 00:04:06,470
situation I write something I right

93
00:04:06,470 --> 00:04:08,720
little thing I make it work I make it

94
00:04:08,720 --> 00:04:10,850
better that that seems like the best

95
00:04:10,850 --> 00:04:14,450
case scenario in my opinion but the

96
00:04:14,450 --> 00:04:17,900
problem is legacy code so like this is

97
00:04:17,900 --> 00:04:19,430
really great in Greenfield stuff and

98
00:04:19,430 --> 00:04:21,320
like you know it's all fairies and

99
00:04:21,320 --> 00:04:23,539
unicorns when you're talking about this

100
00:04:23,539 --> 00:04:26,030
stuff but then you get this 20,000 line

101
00:04:26,030 --> 00:04:28,430
javascript file 20,000 line javascript

102
00:04:28,430 --> 00:04:32,450
file why why they end with a tons of

103
00:04:32,450 --> 00:04:34,340
crappy code in there and like how can I

104
00:04:34,340 --> 00:04:37,849
test that well it's it's about testing

105
00:04:37,849 --> 00:04:40,909
little tiny things at once right and you

106
00:04:40,909 --> 00:04:42,110
guys probably already knows the ones

107
00:04:42,110 --> 00:04:43,249
that are testing at least

108
00:04:43,249 --> 00:04:45,649
that if you have a piece of legacy code

109
00:04:45,649 --> 00:04:47,629
you have a bug right chest that proves

110
00:04:47,629 --> 00:04:51,199
your bug exists and that's like a little

111
00:04:51,199 --> 00:04:52,939
tiny thing you can do to make you make

112
00:04:52,939 --> 00:04:55,099
your life a little tiny bit better right

113
00:04:55,099 --> 00:04:56,749
even that's a hard sell for a lot of

114
00:04:56,749 --> 00:04:58,759
people because they have a bug and they

115
00:04:58,759 --> 00:04:59,959
just want to get stuff done maybe you

116
00:04:59,959 --> 00:05:02,179
have an SLA that says you need but get

117
00:05:02,179 --> 00:05:03,559
this bug fixed in eight hours or you're

118
00:05:03,559 --> 00:05:06,169
fired you know that happens and you're

119
00:05:06,169 --> 00:05:08,899
thinking test test won't to won't make

120
00:05:08,899 --> 00:05:10,369
it better but you know what happens is

121
00:05:10,369 --> 00:05:13,099
that when when I don't write test if I

122
00:05:13,099 --> 00:05:14,149
don't write a test for a thing i sent

123
00:05:14,149 --> 00:05:16,489
off the QA curious like you didn't fix

124
00:05:16,489 --> 00:05:19,489
it and like oh no so that kind of sucks

125
00:05:19,489 --> 00:05:22,159
and the right knee chest really helps

126
00:05:22,159 --> 00:05:26,839
mediate that so I'll go through this

127
00:05:26,839 --> 00:05:29,689
quickly like how do I refactor stuff so

128
00:05:29,689 --> 00:05:32,749
look I have a reference to a global

129
00:05:32,749 --> 00:05:35,419
variable in a function what the hell so

130
00:05:35,419 --> 00:05:37,369
I see this a lot in the code that I work

131
00:05:37,369 --> 00:05:39,949
with where someone has a global variable

132
00:05:39,949 --> 00:05:40,999
and they're referencing a global

133
00:05:40,999 --> 00:05:43,879
variable inside function so that one is

134
00:05:43,879 --> 00:05:46,969
adding our buddy spike to the kennel and

135
00:05:46,969 --> 00:05:50,989
that's really hard to test because my my

136
00:05:50,989 --> 00:05:54,949
test now has to have a global variable

137
00:05:54,949 --> 00:05:57,439
kennel and know about that and handle

138
00:05:57,439 --> 00:06:01,369
that so so here's how we're testing it

139
00:06:01,369 --> 00:06:04,279
we're defining a global inside our test

140
00:06:04,279 --> 00:06:06,259
itself and then we're adding spike to it

141
00:06:06,259 --> 00:06:08,089
so this actually works but you know it's

142
00:06:08,089 --> 00:06:10,249
kind of crappy and it doesn't work very

143
00:06:10,249 --> 00:06:12,139
well I mean I'm not a big fan of doing

144
00:06:12,139 --> 00:06:16,969
that so so here's a cool way refactoring

145
00:06:16,969 --> 00:06:19,789
it in my opinion I just say add dog to

146
00:06:19,789 --> 00:06:21,439
kennel i passed the catalan hey still

147
00:06:21,439 --> 00:06:23,779
have the stupid global kennel but now

148
00:06:23,779 --> 00:06:25,659
this function can live without and

149
00:06:25,659 --> 00:06:28,459
access to that global and that's awesome

150
00:06:28,459 --> 00:06:32,239
like I like a function that that doesn't

151
00:06:32,239 --> 00:06:34,009
depend on anything external and this

152
00:06:34,009 --> 00:06:36,169
function with that small change to the

153
00:06:36,169 --> 00:06:39,379
signature now you don't have an external

154
00:06:39,379 --> 00:06:41,329
dependency isn't that cool so that's

155
00:06:41,329 --> 00:06:43,399
much much easier to test in my opinion I

156
00:06:43,399 --> 00:06:46,369
just say expect add dogs kennel and

157
00:06:46,369 --> 00:06:49,669
passing in an empty array that's my

158
00:06:49,669 --> 00:06:51,649
kennel just so I can have an equal spike

159
00:06:51,649 --> 00:06:55,279
on I have to define another variable in

160
00:06:55,279 --> 00:06:56,100
my

161
00:06:56,100 --> 00:07:00,330
in my tests it's kinda cool okay

162
00:07:00,330 --> 00:07:02,710
sometimes you have to call external

163
00:07:02,710 --> 00:07:05,430
functions this is my favorite example of

164
00:07:05,430 --> 00:07:10,270
window console.log right so so I have a

165
00:07:10,270 --> 00:07:13,780
function that that does console.log if

166
00:07:13,780 --> 00:07:15,970
console.log is this right i call it

167
00:07:15,970 --> 00:07:18,670
whatever like sim dot log or something

168
00:07:18,670 --> 00:07:21,970
like that so that it doesn't blow up in

169
00:07:21,970 --> 00:07:25,960
IE because that sucks so I you spies for

170
00:07:25,960 --> 00:07:27,820
that jasmine has this concept of spies

171
00:07:27,820 --> 00:07:30,640
I'm sure that other test suites also

172
00:07:30,640 --> 00:07:33,700
have the concept of spies are mocks or

173
00:07:33,700 --> 00:07:36,520
whatever you want to call it but spies

174
00:07:36,520 --> 00:07:39,790
are cool this says I'm going to spy on

175
00:07:39,790 --> 00:07:42,850
window console.log that means i'm going

176
00:07:42,850 --> 00:07:45,910
to i'm going to say look at what winds

177
00:07:45,910 --> 00:07:47,350
up window console.log is doing a

178
00:07:47,350 --> 00:07:49,930
register when it's being called and let

179
00:07:49,930 --> 00:07:51,880
me know when it's been called and then i

180
00:07:51,880 --> 00:07:56,110
can say expect my cool log thing that's

181
00:07:56,110 --> 00:07:57,400
been dame space you guys really

182
00:07:57,400 --> 00:07:59,440
namespace your stuff if you're not named

183
00:07:59,440 --> 00:08:01,480
station yourself god damn it right but

184
00:08:01,480 --> 00:08:04,720
you know please do that that would be

185
00:08:04,720 --> 00:08:09,460
good so I expect my log function to

186
00:08:09,460 --> 00:08:12,670
equal test message but I'm also going to

187
00:08:12,670 --> 00:08:14,950
expect window console.log to be to have

188
00:08:14,950 --> 00:08:16,870
been called the test message that bottom

189
00:08:16,870 --> 00:08:19,660
expect is what I'm spying on because a

190
00:08:19,660 --> 00:08:21,940
funny thing with jasmine if you actually

191
00:08:21,940 --> 00:08:25,000
call window console.log and jasmine it

192
00:08:25,000 --> 00:08:28,840
explodes that kind of sucks for for one

193
00:08:28,840 --> 00:08:31,150
reason or another and maybe your test

194
00:08:31,150 --> 00:08:32,260
suite doesn't have this problem but I'm

195
00:08:32,260 --> 00:08:33,490
guarantee your run so these high

196
00:08:33,490 --> 00:08:37,030
problems somewhere so that's that what

197
00:08:37,030 --> 00:08:42,580
about ajax ajax ajax is cool so I have

198
00:08:42,580 --> 00:08:46,030
an ajax ii like function that doesn't

199
00:08:46,030 --> 00:08:48,970
stuff so I have my widget that that

200
00:08:48,970 --> 00:08:51,460
makes an AJAX call and add some to

201
00:08:51,460 --> 00:08:53,770
the Dom when it's successful whoops I

202
00:08:53,770 --> 00:08:57,880
curse sorry um and in add data to dom it

203
00:08:57,880 --> 00:09:04,000
doesn't stuff right so um what i'm going

204
00:09:04,000 --> 00:09:06,520
to do here is I I'm going to make the

205
00:09:06,520 --> 00:09:09,670
Ajax call on top and got add a spy

206
00:09:09,670 --> 00:09:11,860
to add dated on what that's doing is

207
00:09:11,860 --> 00:09:14,530
saying well just make sure to see if

208
00:09:14,530 --> 00:09:17,350
this has been called and jasmine has

209
00:09:17,350 --> 00:09:19,120
this weird thing called most recent ajax

210
00:09:19,120 --> 00:09:21,220
request which is basically just a an

211
00:09:21,220 --> 00:09:25,060
array of Ajax calls so what what jQuery

212
00:09:25,060 --> 00:09:29,080
AJAX does it add on to not jquery what

213
00:09:29,080 --> 00:09:32,620
the Jasmine Ajax does which is an add-on

214
00:09:32,620 --> 00:09:35,530
to jasmine is it it creates this age

215
00:09:35,530 --> 00:09:37,480
executing that captures all of your Ajax

216
00:09:37,480 --> 00:09:40,930
requests all over xhr requests and puts

217
00:09:40,930 --> 00:09:44,320
them in this array so I can just say get

218
00:09:44,320 --> 00:09:48,070
the most recent HS request and and set a

219
00:09:48,070 --> 00:09:51,940
fake response to it so then I expect my

220
00:09:51,940 --> 00:09:54,820
widget to have been called with foo

221
00:09:54,820 --> 00:09:57,070
because that's what the response text is

222
00:09:57,070 --> 00:09:59,530
going to be so hopefully that's not too

223
00:09:59,530 --> 00:10:01,960
complicated but that's a way to to test

224
00:10:01,960 --> 00:10:04,810
Ajax with with jasmine so hopefully some

225
00:10:04,810 --> 00:10:05,770
of you are I knew that and that's really

226
00:10:05,770 --> 00:10:08,740
cool but maybe some of you didn't that's

227
00:10:08,740 --> 00:10:12,430
really really awesome my opinion um so

228
00:10:12,430 --> 00:10:15,820
this is the interesting stuff I one of

229
00:10:15,820 --> 00:10:17,410
the big problem now that you know what

230
00:10:17,410 --> 00:10:19,180
jasmine is and all that stuff that's

231
00:10:19,180 --> 00:10:22,690
great one of the things that that I

232
00:10:22,690 --> 00:10:24,340
really really wanted to do when I

233
00:10:24,340 --> 00:10:28,000
introduced JavaScript unit tests to

234
00:10:28,000 --> 00:10:31,120
comcast as I wide like front of

235
00:10:31,120 --> 00:10:32,410
developers to be able to break the build

236
00:10:32,410 --> 00:10:34,480
so we have a continuous integration

237
00:10:34,480 --> 00:10:38,920
server hut we're using Hudson and that's

238
00:10:38,920 --> 00:10:40,960
hooked up with this huge maven build

239
00:10:40,960 --> 00:10:44,950
script and so a maven test runs every

240
00:10:44,950 --> 00:10:48,190
time you you make a build on hudson

241
00:10:48,190 --> 00:10:50,170
server and if one of the mill were

242
00:10:50,170 --> 00:10:52,510
backing guys they wrote something crappy

243
00:10:52,510 --> 00:10:55,240
and a test blew up it break the build

244
00:10:55,240 --> 00:10:58,300
but are frightening guys myself included

245
00:10:58,300 --> 00:11:00,730
were not held responsible for bugs so

246
00:11:00,730 --> 00:11:03,250
they slipped through and then QA we get

247
00:11:03,250 --> 00:11:05,080
something you know every time you have

248
00:11:05,080 --> 00:11:07,420
QA involved with something it cost a

249
00:11:07,420 --> 00:11:08,740
whole bunch of money a whole bunch of

250
00:11:08,740 --> 00:11:10,540
time that really sucks well it wouldn't

251
00:11:10,540 --> 00:11:12,850
be nice if we can catch it earlier on so

252
00:11:12,850 --> 00:11:18,580
what we did is is we took in bjs did you

253
00:11:18,580 --> 00:11:20,760
guys know it EMV jess's raise your hands

254
00:11:20,760 --> 00:11:23,630
that's cool so for you for you guys

255
00:11:23,630 --> 00:11:27,100
don't evj s is a headless browser

256
00:11:27,100 --> 00:11:31,190
written in JavaScript and is written by

257
00:11:31,190 --> 00:11:34,780
the guy it did jquery john rzeznik and

258
00:11:34,780 --> 00:11:37,670
it's awesome it's really cool it runs on

259
00:11:37,670 --> 00:11:42,200
top of rhino which is a JavaScript

260
00:11:42,200 --> 00:11:44,870
engine for java now that's hot because I

261
00:11:44,870 --> 00:11:48,140
can take rhino and run that in my maven

262
00:11:48,140 --> 00:11:51,620
build chain so Odin is we took rhino and

263
00:11:51,620 --> 00:11:55,340
on top of rhino we put in vgs and top

264
00:11:55,340 --> 00:11:58,700
vgs we lower jasmine and top of jasmine

265
00:11:58,700 --> 00:12:02,240
we load all our tests so with one java

266
00:12:02,240 --> 00:12:06,200
command i can run all of my tests inside

267
00:12:06,200 --> 00:12:08,540
a java runtime and that's really cool

268
00:12:08,540 --> 00:12:10,580
because what we did then is hook that

269
00:12:10,580 --> 00:12:14,300
into maven and now when your JavaScript

270
00:12:14,300 --> 00:12:18,170
test fails you get an alert and you

271
00:12:18,170 --> 00:12:21,170
broke the build now as a friend engineer

272
00:12:21,170 --> 00:12:22,760
maybe was saying I don't want break the

273
00:12:22,760 --> 00:12:24,290
build breaking the builds lame and I

274
00:12:24,290 --> 00:12:25,970
don't want the responsibility well you

275
00:12:25,970 --> 00:12:28,280
suck if you do that it would be better

276
00:12:28,280 --> 00:12:29,510
if you did break the bill I think

277
00:12:29,510 --> 00:12:31,040
breaking the bill is a really good thing

278
00:12:31,040 --> 00:12:34,760
because it means that that that you did

279
00:12:34,760 --> 00:12:36,830
something wrong and you should be able

280
00:12:36,830 --> 00:12:40,460
to to be aware of that so basically if

281
00:12:40,460 --> 00:12:43,520
you go to a Jasmine under my github

282
00:12:43,520 --> 00:12:46,760
account you can you can see what's going

283
00:12:46,760 --> 00:12:47,570
on there it's really straightforward

284
00:12:47,570 --> 00:12:50,300
there's a bunch of directories the bin

285
00:12:50,300 --> 00:12:52,340
directory is where there's some shell

286
00:12:52,340 --> 00:12:53,780
scripts I'll just run the test and

287
00:12:53,780 --> 00:12:55,970
that's kind of cool then you could add

288
00:12:55,970 --> 00:12:58,550
your dependencies which is like if you

289
00:12:58,550 --> 00:13:02,270
have jquery or other dependencies that

290
00:13:02,270 --> 00:13:04,160
you aren't testing but you need you have

291
00:13:04,160 --> 00:13:05,990
them there create tests in the specs

292
00:13:05,990 --> 00:13:08,960
directory run him that's it it's it's

293
00:13:08,960 --> 00:13:12,440
pretty straightforward the two other

294
00:13:12,440 --> 00:13:14,810
things I did is I created a of the

295
00:13:14,810 --> 00:13:19,750
plugin for maven which is is here and my

296
00:13:19,750 --> 00:13:23,380
husband maven example that's just

297
00:13:23,380 --> 00:13:25,370
honestly all I have to do is look at the

298
00:13:25,370 --> 00:13:27,620
Palm XML on this if you're familiar with

299
00:13:27,620 --> 00:13:30,050
maven and you look at the palm to xml

300
00:13:30,050 --> 00:13:33,620
and this directory you'll see what i'm

301
00:13:33,620 --> 00:13:35,030
doing here it's pretty straightforward

302
00:13:35,030 --> 00:13:36,920
basically it's a cut and paste in

303
00:13:36,920 --> 00:13:38,779
to your your palm that XML configuration

304
00:13:38,779 --> 00:13:42,110
file and you're done last thing I did

305
00:13:42,110 --> 00:13:44,649
because I'm a rails geek was that I I

306
00:13:44,649 --> 00:13:47,959
envy Jasmine two rails the cool thing

307
00:13:47,959 --> 00:13:51,399
about this Evie Jasmine thing is that

308
00:13:51,399 --> 00:13:55,160
you can it's totally powerful this is a

309
00:13:55,160 --> 00:13:57,680
self-contained thing that all you need

310
00:13:57,680 --> 00:14:01,370
is Java to run so i can take it in put

311
00:14:01,370 --> 00:14:03,160
it in any project doesn't have to be in

312
00:14:03,160 --> 00:14:06,260
in maven it doesn't have to be an aunt

313
00:14:06,260 --> 00:14:08,720
does have to be in rails one of the

314
00:14:08,720 --> 00:14:11,060
things that the one of the reasons we

315
00:14:11,060 --> 00:14:12,949
created this because because a there was

316
00:14:12,949 --> 00:14:14,930
a maven plugin for for Jasmine but it

317
00:14:14,930 --> 00:14:17,329
just didn't work so hot it didn't work

318
00:14:17,329 --> 00:14:19,010
the way I wanted the work so we made

319
00:14:19,010 --> 00:14:20,540
something more portable and the only the

320
00:14:20,540 --> 00:14:22,100
only thing you have to do to add this

321
00:14:22,100 --> 00:14:26,329
its rails is add a tiny rakefile in in

322
00:14:26,329 --> 00:14:28,639
your lib toss directory and then when

323
00:14:28,639 --> 00:14:31,790
you run rake test you have you have you

324
00:14:31,790 --> 00:14:34,970
Jasmine chess training and in rails so

325
00:14:34,970 --> 00:14:38,269
what's next what's next is is you should

326
00:14:38,269 --> 00:14:39,800
you should test you should test your

327
00:14:39,800 --> 00:14:42,050
code and if you're in a big enterprise-e

328
00:14:42,050 --> 00:14:44,390
place where they have lots of other

329
00:14:44,390 --> 00:14:47,899
tools you should work on hooking those

330
00:14:47,899 --> 00:14:50,300
tests up in a way that other people can

331
00:14:50,300 --> 00:14:52,970
pay attention to them it's testing is

332
00:14:52,970 --> 00:14:54,649
really important it helps everyone's

333
00:14:54,649 --> 00:14:57,769
code quality go up it helps you as a

334
00:14:57,769 --> 00:15:00,949
program right oh no ever since I started

335
00:15:00,949 --> 00:15:02,870
working with test it's made a huge

336
00:15:02,870 --> 00:15:05,630
difference on the way I code I mean it's

337
00:15:05,630 --> 00:15:08,560
fundamentally changed the way I write

338
00:15:08,560 --> 00:15:10,850
functions the way I write my code is

339
00:15:10,850 --> 00:15:12,410
different because I think about the way

340
00:15:12,410 --> 00:15:13,910
you test it so if you don't test your

341
00:15:13,910 --> 00:15:16,010
code please test your code if you do

342
00:15:16,010 --> 00:15:17,750
test your code and you can't break the

343
00:15:17,750 --> 00:15:19,790
build please figure out how you can

344
00:15:19,790 --> 00:15:21,529
break the build because it's pretty

345
00:15:21,529 --> 00:15:24,589
important that's my talk my name is

346
00:15:24,589 --> 00:15:28,420
Trevor nice to meet you

