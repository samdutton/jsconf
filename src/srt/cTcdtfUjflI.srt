1
00:00:37,770 --> 00:00:41,290

funny story I'm I've been super nervous

2
00:00:41,290 --> 00:00:43,960
all day and a friend of mine gave me the

3
00:00:43,960 --> 00:00:45,430
advice that I should come up on stage

4
00:00:45,430 --> 00:00:47,260
and beatbox for a minute and that would

5
00:00:47,260 --> 00:00:49,840
make me less nervous I'm not gonna do

6
00:00:49,840 --> 00:00:51,250
that but I found that telling Santa

7
00:00:51,250 --> 00:00:52,690
story to make someone laugh makes them a

8
00:00:52,690 --> 00:00:54,940
lot less nervous and I think I think

9
00:00:54,940 --> 00:00:57,940
that happens to be true so just a

10
00:00:57,940 --> 00:01:00,030
forewarning

11
00:01:00,030 --> 00:01:02,560
just before warning there are a lot of

12
00:01:02,560 --> 00:01:04,689
opinions in this slide deck and if you'd

13
00:01:04,689 --> 00:01:05,950
like to talk to me about those opinions

14
00:01:05,950 --> 00:01:08,259
I will be hopefully in a light-up dress

15
00:01:08,259 --> 00:01:10,689
at the party like broadcasting myself as

16
00:01:10,689 --> 00:01:11,950
much as possible so feel free to

17
00:01:11,950 --> 00:01:13,719
approach me and talk to me about these

18
00:01:13,719 --> 00:01:18,060
things because they are important so

19
00:01:18,060 --> 00:01:20,170
JavaScript especially the programming in

20
00:01:20,170 --> 00:01:21,729
general that I'm finding JavaScript is

21
00:01:21,729 --> 00:01:23,319
falling more and more into a fanaticism

22
00:01:23,319 --> 00:01:26,439
problem we invest in one framework one

23
00:01:26,439 --> 00:01:29,139
tool one way of one way of coding and we

24
00:01:29,139 --> 00:01:31,569
we use it for everything in anything and

25
00:01:31,569 --> 00:01:34,509
it's we're actually starting to see

26
00:01:34,509 --> 00:01:36,670
alternatives to our way of doing things

27
00:01:36,670 --> 00:01:38,740
as adversaries whether rather than

28
00:01:38,740 --> 00:01:40,990
alternatives whether rather than ways to

29
00:01:40,990 --> 00:01:45,130
benefit our lives and our code I

30
00:01:45,130 --> 00:01:46,749
definitely see a lot of the when you

31
00:01:46,749 --> 00:01:48,189
have a hammer everything is a nail

32
00:01:48,189 --> 00:01:51,549
problem we use our favorite tools even

33
00:01:51,549 --> 00:01:53,499
when they might not necessarily fit well

34
00:01:53,499 --> 00:01:55,270
or maybe something would be a little bit

35
00:01:55,270 --> 00:01:57,729
better or a little bit easier to use not

36
00:01:57,729 --> 00:01:59,079
just for ourselves but when we're

37
00:01:59,079 --> 00:02:00,789
working on teams we tend to pick our

38
00:02:00,789 --> 00:02:02,709
favorite tools maybe at the expense of

39
00:02:02,709 --> 00:02:06,159
those were working with and I truly

40
00:02:06,159 --> 00:02:08,380
believe fanaticism prevents us from

41
00:02:08,380 --> 00:02:10,090
building the best software we can

42
00:02:10,090 --> 00:02:12,280
possibly build we're limiting ourselves

43
00:02:12,280 --> 00:02:14,650
to singular frameworks singular tools

44
00:02:14,650 --> 00:02:15,040
and we're

45
00:02:15,040 --> 00:02:16,900
missing out on all the possibilities

46
00:02:16,900 --> 00:02:18,400
that are there I'm not saying we should

47
00:02:18,400 --> 00:02:20,049
learn everything I'm saying we should

48
00:02:20,049 --> 00:02:22,840
keep our lines open it's not just that

49
00:02:22,840 --> 00:02:25,269
we miss new tools to hold on to what we

50
00:02:25,269 --> 00:02:27,609
what we already know the new and shiny

51
00:02:27,609 --> 00:02:29,469
effect is something I see very

52
00:02:29,469 --> 00:02:32,680
pervasively in j/s I saw this a lot with

53
00:02:32,680 --> 00:02:34,720
grunt when gulp came out a lot of people

54
00:02:34,720 --> 00:02:36,159
immediately jump to gulp and just

55
00:02:36,159 --> 00:02:38,349
started just thrashing grunt and it was

56
00:02:38,349 --> 00:02:40,780
just it was it was quite confusing to me

57
00:02:40,780 --> 00:02:43,239
to see two perfectly valid tools but

58
00:02:43,239 --> 00:02:45,549
because one was newer it must have been

59
00:02:45,549 --> 00:02:50,409
better I didn't quite see it so if you

60
00:02:50,409 --> 00:02:52,750
need an example of this kind of

61
00:02:52,750 --> 00:02:55,269
fanaticism there's nothing like waking

62
00:02:55,269 --> 00:02:57,489
up the morning of your talk to a blog

63
00:02:57,489 --> 00:02:59,139
post saying that the premise of your

64
00:02:59,139 --> 00:03:00,220
talk is bunk

65
00:03:00,220 --> 00:03:04,299
I was absolutely dumbfounded this

66
00:03:04,299 --> 00:03:05,799
morning when I saw a blog post about it

67
00:03:05,799 --> 00:03:08,200
and I I definitely liked Isaac's

68
00:03:08,200 --> 00:03:10,030
response to this and I hate to read off

69
00:03:10,030 --> 00:03:11,260
my slides but I'm going to read this

70
00:03:11,260 --> 00:03:14,169
there's this myth that a single rule or

71
00:03:14,169 --> 00:03:16,090
the rejection of one will make software

72
00:03:16,090 --> 00:03:17,950
developments simple or easy and that's

73
00:03:17,950 --> 00:03:21,040
full and I I happen to really agree with

74
00:03:21,040 --> 00:03:24,519
that so today I'm really here to talk

75
00:03:24,519 --> 00:03:25,900
about modular I could text here but keep

76
00:03:25,900 --> 00:03:27,579
what I've already said in mind keep keep

77
00:03:27,579 --> 00:03:29,319
the problems of fanaticism in mind when

78
00:03:29,319 --> 00:03:31,389
I talk about this because it will come

79
00:03:31,389 --> 00:03:34,419
up from time to time so one of the

80
00:03:34,419 --> 00:03:37,090
things that I find for modular

81
00:03:37,090 --> 00:03:39,729
architecture is I get this question a

82
00:03:39,729 --> 00:03:41,560
lot I've spoken about flight which is a

83
00:03:41,560 --> 00:03:43,750
front-end framework from Twitter and I

84
00:03:43,750 --> 00:03:46,299
get this question all the time when I

85
00:03:46,299 --> 00:03:48,250
speak about that framework and I find

86
00:03:48,250 --> 00:03:52,060
it's a valid question but asking how is

87
00:03:52,060 --> 00:03:54,159
flight like ember how is flight like

88
00:03:54,159 --> 00:03:56,949
angular how is flight like polymer which

89
00:03:56,949 --> 00:03:58,810
follower isn't even really you know

90
00:03:58,810 --> 00:04:01,750
comparing it doesn't--it's it should not

91
00:04:01,750 --> 00:04:04,060
be the basis for selecting a framework

92
00:04:04,060 --> 00:04:06,099
or a tool we shouldn't be asking

93
00:04:06,099 --> 00:04:08,109
ourselves how are things like each other

94
00:04:08,109 --> 00:04:10,389
in the JavaScript ecosystem we should be

95
00:04:10,389 --> 00:04:13,000
asking how will this tool this framework

96
00:04:13,000 --> 00:04:15,009
this piece of code make my life better

97
00:04:15,009 --> 00:04:17,919
as a developer make my team's life

98
00:04:17,919 --> 00:04:20,019
better make my process better these are

99
00:04:20,019 --> 00:04:21,579
the kinds of questions I find we're not

100
00:04:21,579 --> 00:04:23,590
asking nearly as much but we could be

101
00:04:23,590 --> 00:04:27,160
and we should be

102
00:04:27,170 --> 00:04:30,230
and before I say before I get the

103
00:04:30,230 --> 00:04:31,850
argument of oh well that means we just

104
00:04:31,850 --> 00:04:33,050
shouldn't become attached to anything

105
00:04:33,050 --> 00:04:34,790
that's that's entirely not true we

106
00:04:34,790 --> 00:04:36,260
should definitely be passionate about

107
00:04:36,260 --> 00:04:38,650
the tools we use blog posts

108
00:04:38,650 --> 00:04:41,120
documentation pull requests tests these

109
00:04:41,120 --> 00:04:43,280
are all things we could be doing to show

110
00:04:43,280 --> 00:04:45,080
our passion for the tools that we like

111
00:04:45,080 --> 00:04:47,090
to use now we just need to apply some

112
00:04:47,090 --> 00:04:49,340
critical thinking as a group and I'm

113
00:04:49,340 --> 00:04:52,040
sure not all you know not all of you

114
00:04:52,040 --> 00:04:54,140
fall for this but I have I've caught

115
00:04:54,140 --> 00:04:56,060
myself doing this recently so we need to

116
00:04:56,060 --> 00:04:57,500
remember to be passionate but not a

117
00:04:57,500 --> 00:04:59,480
fanatic about the tools that we use the

118
00:04:59,480 --> 00:05:00,950
frameworks that we use we need to keep

119
00:05:00,950 --> 00:05:05,030
open minds another problem I see is

120
00:05:05,030 --> 00:05:08,420
common developer assumptions jQuery

121
00:05:08,420 --> 00:05:11,000
I love jQuery I really do I consider it

122
00:05:11,000 --> 00:05:12,680
to be a common developer assumption that

123
00:05:12,680 --> 00:05:14,420
mean you know it nests it it requires

124
00:05:14,420 --> 00:05:16,910
some thought before you start your next

125
00:05:16,910 --> 00:05:18,620
application think about what you're

126
00:05:18,620 --> 00:05:20,930
going to use and don't just assume that

127
00:05:20,930 --> 00:05:22,580
because you've always used a particular

128
00:05:22,580 --> 00:05:26,810
tool that it needs to be in place and

129
00:05:26,810 --> 00:05:28,430
I'm certainly not saying don't use a

130
00:05:28,430 --> 00:05:29,750
framework ever

131
00:05:29,750 --> 00:05:33,140
I like frameworks I in particular you

132
00:05:33,140 --> 00:05:34,760
know I like quite a few different

133
00:05:34,760 --> 00:05:36,680
frameworks for different tasks so I'm

134
00:05:36,680 --> 00:05:38,270
definitely not saying don't ever use a

135
00:05:38,270 --> 00:05:40,400
framework I'm simply saying we should be

136
00:05:40,400 --> 00:05:42,830
much more judicious about when and what

137
00:05:42,830 --> 00:05:45,770
frameworks we happen to use I like to

138
00:05:45,770 --> 00:05:47,060
consider the following when I'm

139
00:05:47,060 --> 00:05:48,500
considering any tool but especially

140
00:05:48,500 --> 00:05:50,210
tools that require a large amount of

141
00:05:50,210 --> 00:05:52,820
buy-in is it bringing in functionality I

142
00:05:52,820 --> 00:05:56,330
don't need can I bring it in in outside

143
00:05:56,330 --> 00:05:57,590
code easily this is one of the more

144
00:05:57,590 --> 00:05:59,780
important ones and my one of the ones

145
00:05:59,780 --> 00:06:01,640
that I feel especially with teams is

146
00:06:01,640 --> 00:06:03,700
what's the investment to reward ratio

147
00:06:03,700 --> 00:06:06,170
how much am i how much work am I going

148
00:06:06,170 --> 00:06:07,250
to have to put in to learn this

149
00:06:07,250 --> 00:06:08,690
particular tool in order to get what I

150
00:06:08,690 --> 00:06:13,010
need out of it one way to kind of help

151
00:06:13,010 --> 00:06:15,230
determine what kind of tools I

152
00:06:15,230 --> 00:06:16,400
definitely am a big fan of building

153
00:06:16,400 --> 00:06:18,290
proofs of concepts like to do MVC

154
00:06:18,290 --> 00:06:21,260
definitely an indie a good way of seeing

155
00:06:21,260 --> 00:06:24,020
how to build a tool right more than the

156
00:06:24,020 --> 00:06:25,430
hello world with whatever tool you're

157
00:06:25,430 --> 00:06:27,230
happening to proof of concept I see this

158
00:06:27,230 --> 00:06:30,020
a lot where where I've done it where

159
00:06:30,020 --> 00:06:31,310
I've written a hello world in a tool and

160
00:06:31,310 --> 00:06:32,810
I've just dismissed it based off that

161
00:06:32,810 --> 00:06:34,850
you're gonna want to actually get your

162
00:06:34,850 --> 00:06:36,830
hands dirty with whatever tool you're

163
00:06:36,830 --> 00:06:38,840
evaluating before you make any decisions

164
00:06:38,840 --> 00:06:40,040
about it

165
00:06:40,040 --> 00:06:42,770
positive or negative make sure you're

166
00:06:42,770 --> 00:06:45,110
just building a proof of concept for the

167
00:06:45,110 --> 00:06:47,810
tool you're trying to evaluate if you

168
00:06:47,810 --> 00:06:49,460
bring in three different tools and try

169
00:06:49,460 --> 00:06:50,810
to use them together and it turns out to

170
00:06:50,810 --> 00:06:52,910
be horrible maybe one of those tools or

171
00:06:52,910 --> 00:06:54,140
all three of those tools are actually

172
00:06:54,140 --> 00:06:55,970
fantastic it's just using them together

173
00:06:55,970 --> 00:06:57,920
was a pain so definitely try to isolate

174
00:06:57,920 --> 00:06:59,360
your proof of concept to kind of

175
00:06:59,360 --> 00:07:02,170
actually evaluate the tool at hand and

176
00:07:02,170 --> 00:07:04,910
keep your teams as centricity is in mind

177
00:07:04,910 --> 00:07:07,070
this is especially important when you're

178
00:07:07,070 --> 00:07:09,520
not working by yourself

179
00:07:09,520 --> 00:07:12,110
I've gotten into and argued with my

180
00:07:12,110 --> 00:07:13,670
co-workers about semicolons for two

181
00:07:13,670 --> 00:07:16,010
hours so you have to keep other people's

182
00:07:16,010 --> 00:07:17,900
development in mind because it will make

183
00:07:17,900 --> 00:07:19,610
your life better if they're happier

184
00:07:19,610 --> 00:07:22,190
so I usually get to this point in the

185
00:07:22,190 --> 00:07:24,860
conversation with people before actually

186
00:07:24,860 --> 00:07:27,020
starts to pop up an awful lot so what

187
00:07:27,020 --> 00:07:29,480
I'm going to do is go over the three

188
00:07:29,480 --> 00:07:31,940
most common arguments I hear against

189
00:07:31,940 --> 00:07:33,590
using a modular architecture and

190
00:07:33,590 --> 00:07:35,990
building from the ground up and kind of

191
00:07:35,990 --> 00:07:38,180
counterpoint or even admit to the

192
00:07:38,180 --> 00:07:40,190
possible downfalls of this sort of kind

193
00:07:40,190 --> 00:07:43,190
of this sort of building the first one I

194
00:07:43,190 --> 00:07:44,810
get is that module systems cause

195
00:07:44,810 --> 00:07:47,300
spaghetti code um you know cobbling all

196
00:07:47,300 --> 00:07:48,650
these little tiny pieces of code

197
00:07:48,650 --> 00:07:51,350
together causes an completely

198
00:07:51,350 --> 00:07:53,900
unmaintainable application and it's just

199
00:07:53,900 --> 00:07:55,550
impossible to understand how

200
00:07:55,550 --> 00:07:57,500
everything's working together and the

201
00:07:57,500 --> 00:07:59,510
worst part is no one's code is the same

202
00:07:59,510 --> 00:08:01,460
style so you're writing different styles

203
00:08:01,460 --> 00:08:04,820
of code around your application the the

204
00:08:04,820 --> 00:08:06,560
counter did this would be a framework

205
00:08:06,560 --> 00:08:08,870
would solve this by including everything

206
00:08:08,870 --> 00:08:11,030
or having a plug-in system some sort of

207
00:08:11,030 --> 00:08:15,220
unified language or way of doing things

208
00:08:15,220 --> 00:08:18,500
my response to that is we should be

209
00:08:18,500 --> 00:08:20,420
separating our module choices from our

210
00:08:20,420 --> 00:08:22,460
code in our frameworks from our like our

211
00:08:22,460 --> 00:08:24,410
business logic we shouldn't be you know

212
00:08:24,410 --> 00:08:25,910
tightly coupling these either way

213
00:08:25,910 --> 00:08:27,200
whether we're using a framework or

214
00:08:27,200 --> 00:08:28,460
whether we're using a modular structure

215
00:08:28,460 --> 00:08:33,349
I do believe in the practical use of

216
00:08:33,349 --> 00:08:35,180
abstraction layers I used to scoff at

217
00:08:35,180 --> 00:08:37,520
them just as much as some of my friends

218
00:08:37,520 --> 00:08:40,040
and some of my respected peers but I

219
00:08:40,040 --> 00:08:41,690
actually believe abstraction layers been

220
00:08:41,690 --> 00:08:43,669
used in in proper settings are quite

221
00:08:43,669 --> 00:08:46,550
beneficial functional mix-ins as opposed

222
00:08:46,550 --> 00:08:48,710
to inheritance I've also found is a very

223
00:08:48,710 --> 00:08:51,140
valid tactic for keeping code separated

224
00:08:51,140 --> 00:08:52,460
and keeping it loosely coupled while

225
00:08:52,460 --> 00:08:53,450
maintaining well being

226
00:08:53,450 --> 00:08:54,830
able to use the functionality within

227
00:08:54,830 --> 00:08:56,990
that code and then architecture

228
00:08:56,990 --> 00:08:58,310
assistance I'm gonna talk a little more

229
00:08:58,310 --> 00:09:00,560
about how I really feel about frameworks

230
00:09:00,560 --> 00:09:03,320
and where where my thoughts come from on

231
00:09:03,320 --> 00:09:04,600
that

232
00:09:04,600 --> 00:09:08,270
so with extraction abstraction layers I

233
00:09:08,270 --> 00:09:09,860
find a really good example of this as

234
00:09:09,860 --> 00:09:11,480
premise if you've ever used it for node

235
00:09:11,480 --> 00:09:14,180
it's a it's a web socket abstraction

236
00:09:14,180 --> 00:09:16,370
layer for different protocols and if you

237
00:09:16,370 --> 00:09:18,530
want to use different protocols for your

238
00:09:18,530 --> 00:09:19,880
web sockets all you have to do is change

239
00:09:19,880 --> 00:09:21,680
one line of configuration it gives the

240
00:09:21,680 --> 00:09:23,960
standard API to all of the WebSocket

241
00:09:23,960 --> 00:09:26,240
configurations so that way if you need

242
00:09:26,240 --> 00:09:27,260
to switch if you need to make a

243
00:09:27,260 --> 00:09:28,910
technology change and you don't have to

244
00:09:28,910 --> 00:09:30,500
rewrite your entire application you just

245
00:09:30,500 --> 00:09:32,570
change one line I think this is

246
00:09:32,570 --> 00:09:34,280
definitely something we can consider for

247
00:09:34,280 --> 00:09:36,590
pieces of functionality creating an

248
00:09:36,590 --> 00:09:38,450
abstraction layer if it's severe using

249
00:09:38,450 --> 00:09:40,250
third-party code creating that layer of

250
00:09:40,250 --> 00:09:42,680
the things we need I also find writing

251
00:09:42,680 --> 00:09:44,360
the abstraction layer before choosing

252
00:09:44,360 --> 00:09:46,130
your module can actually help you make

253
00:09:46,130 --> 00:09:48,290
the decision quite well you could say

254
00:09:48,290 --> 00:09:51,740
okay I need these things out of my out

255
00:09:51,740 --> 00:09:53,780
of my query selectors and either out of

256
00:09:53,780 --> 00:09:56,450
my animation tool I need these things

257
00:09:56,450 --> 00:09:58,670
it's even you have the API that you need

258
00:09:58,670 --> 00:10:00,530
it makes a little easier to select the

259
00:10:00,530 --> 00:10:03,020
tool that you want and what we'll do the

260
00:10:03,020 --> 00:10:05,890
tool that will do what you need it to do

261
00:10:05,890 --> 00:10:08,660
as for functional mix-ins I can't really

262
00:10:08,660 --> 00:10:10,610
go into the details of how they work

263
00:10:10,610 --> 00:10:12,230
because that would be a whole nother

264
00:10:12,230 --> 00:10:15,200
talk anga scroll has written a lot about

265
00:10:15,200 --> 00:10:19,190
these and I actually did I find that

266
00:10:19,190 --> 00:10:21,020
they fit javascript is a language right

267
00:10:21,020 --> 00:10:22,910
quite well and it's a very interesting

268
00:10:22,910 --> 00:10:25,070
way to augment your code with other

269
00:10:25,070 --> 00:10:27,470
codes functionality without necessarily

270
00:10:27,470 --> 00:10:31,820
type tightly coupling that code as for

271
00:10:31,820 --> 00:10:33,500
architecture assistants I do mean

272
00:10:33,500 --> 00:10:36,620
frameworks in this sense and I I usually

273
00:10:36,620 --> 00:10:38,390
fall back to the definition of the word

274
00:10:38,390 --> 00:10:40,220
framework when I'm considering that and

275
00:10:40,220 --> 00:10:41,660
the definition of the word is an

276
00:10:41,660 --> 00:10:44,480
essential supporting structure the basic

277
00:10:44,480 --> 00:10:47,660
structure and a lot of frameworks out

278
00:10:47,660 --> 00:10:50,120
there do everything and that's cool

279
00:10:50,120 --> 00:10:51,980
I really only care about the part where

280
00:10:51,980 --> 00:10:53,870
they're you know providing a structure

281
00:10:53,870 --> 00:10:55,700
for my code the rest of the stuff can be

282
00:10:55,700 --> 00:10:59,360
evaluated separately and the other thing

283
00:10:59,360 --> 00:11:00,770
I like to consider when I'm thinking of

284
00:11:00,770 --> 00:11:02,540
the definition of the word is is a

285
00:11:02,540 --> 00:11:04,160
framework giving me structure or is it

286
00:11:04,160 --> 00:11:06,200
giving me a gilded cage from which I if

287
00:11:06,200 --> 00:11:06,830
I want to do

288
00:11:06,830 --> 00:11:08,030
something outside of the ways of the

289
00:11:08,030 --> 00:11:09,710
framework am I going to have to fight it

290
00:11:09,710 --> 00:11:12,140
I've seen and I've been on teams they've

291
00:11:12,140 --> 00:11:13,940
fought their framework endlessly and

292
00:11:13,940 --> 00:11:15,260
instead of considering dropping the

293
00:11:15,260 --> 00:11:17,750
framework for a modular sort of

294
00:11:17,750 --> 00:11:19,730
architecture they'd spend even more time

295
00:11:19,730 --> 00:11:21,710
than rebuilding the application fighting

296
00:11:21,710 --> 00:11:25,550
that framework some good examples of

297
00:11:25,550 --> 00:11:27,350
frameworks that provide architecture

298
00:11:27,350 --> 00:11:29,240
exist assistance and not much else

299
00:11:29,240 --> 00:11:31,580
include flight and backbone for the

300
00:11:31,580 --> 00:11:33,890
front end and Resta phi for the back gun

301
00:11:33,890 --> 00:11:35,210
though rest by starting to kind of

302
00:11:35,210 --> 00:11:37,220
branch out into more functionality I

303
00:11:37,220 --> 00:11:39,320
think generally it does provide that

304
00:11:39,320 --> 00:11:40,790
architecture assistance if you're doing

305
00:11:40,790 --> 00:11:42,680
a breast API if you're doing a web app

306
00:11:42,680 --> 00:11:44,900
not a you know definitely like I said be

307
00:11:44,900 --> 00:11:46,910
judicious about what frameworks you use

308
00:11:46,910 --> 00:11:51,560
and when so what you get with with

309
00:11:51,560 --> 00:11:53,750
keeping your code your business logic

310
00:11:53,750 --> 00:11:55,850
separate from your modules is you can

311
00:11:55,850 --> 00:11:57,470
swap out your modules with minimal work

312
00:11:57,470 --> 00:11:59,030
you need to write it to the abstraction

313
00:11:59,030 --> 00:12:00,530
layer and that's it you don't need to

314
00:12:00,530 --> 00:12:02,690
worry about every particular piece of

315
00:12:02,690 --> 00:12:04,400
code that's calling that module because

316
00:12:04,400 --> 00:12:07,270
you've used that tertiary layer and

317
00:12:07,270 --> 00:12:09,560
especially for testing you can test

318
00:12:09,560 --> 00:12:11,060
through your abstraction layer and

319
00:12:11,060 --> 00:12:12,950
you're done when you swap out a module

320
00:12:12,950 --> 00:12:14,480
you don't need it you don't usually need

321
00:12:14,480 --> 00:12:15,980
to rewrite your tests sometimes there

322
00:12:15,980 --> 00:12:17,840
may be extenuating circumstances but to

323
00:12:17,840 --> 00:12:20,240
the general point when you do it this

324
00:12:20,240 --> 00:12:22,400
way you can swap out modules swap out

325
00:12:22,400 --> 00:12:24,410
even technologies without worrying about

326
00:12:24,410 --> 00:12:26,000
rewriting your entire test suite without

327
00:12:26,000 --> 00:12:27,500
worrying about rewriting most of your

328
00:12:27,500 --> 00:12:30,590
code so the second argument I get a lot

329
00:12:30,590 --> 00:12:32,960
is that my framework has everything my

330
00:12:32,960 --> 00:12:33,620
team needs

331
00:12:33,620 --> 00:12:35,630
I don't need outside sources I don't

332
00:12:35,630 --> 00:12:37,430
need to worry about looking at 50

333
00:12:37,430 --> 00:12:40,100
different tools and picking one my my

334
00:12:40,100 --> 00:12:41,810
framework does this for me and having

335
00:12:41,810 --> 00:12:43,520
it's got my best interest in mind and

336
00:12:43,520 --> 00:12:46,340
etc and that's definitely a good point

337
00:12:46,340 --> 00:12:48,470
I mean frameworks can do a lot for you

338
00:12:48,470 --> 00:12:50,480
especially if you align with what the

339
00:12:50,480 --> 00:12:55,110
framework is concerned about and

340
00:12:55,120 --> 00:12:57,200
basically developer efficiency is

341
00:12:57,200 --> 00:13:00,170
something that is brought up a lot I my

342
00:13:00,170 --> 00:13:01,340
team rates faster when I'm in a

343
00:13:01,340 --> 00:13:02,870
framework because everything's there

344
00:13:02,870 --> 00:13:03,980
every you know you can learn the

345
00:13:03,980 --> 00:13:05,030
framework and then you're done you've

346
00:13:05,030 --> 00:13:06,470
got you've got all the knowledge you

347
00:13:06,470 --> 00:13:07,940
need to build web applications from that

348
00:13:07,940 --> 00:13:11,780
framework and this is definitely the

349
00:13:11,780 --> 00:13:13,700
argument where I see fanaticism really

350
00:13:13,700 --> 00:13:15,860
start to leak through I have given two

351
00:13:15,860 --> 00:13:17,480
talks about flight at conferences and

352
00:13:17,480 --> 00:13:19,490
the same thing has happened both times I

353
00:13:19,490 --> 00:13:20,630
immediately

354
00:13:20,630 --> 00:13:22,280
down and someone runs over to me with a

355
00:13:22,280 --> 00:13:24,350
laptop and shows me my sample code

356
00:13:24,350 --> 00:13:27,200
rewritten in another framework I asked

357
00:13:27,200 --> 00:13:29,270
them how long it took one said five

358
00:13:29,270 --> 00:13:30,770
minutes and once in ten minutes so I

359
00:13:30,770 --> 00:13:32,270
think to myself if you came running over

360
00:13:32,270 --> 00:13:34,160
the second i sat down us-- missed the

361
00:13:34,160 --> 00:13:35,840
last five or ten minutes of my talk

362
00:13:35,840 --> 00:13:38,630
about another framework to prove me

363
00:13:38,630 --> 00:13:40,930
wrong by writing it in your framework

364
00:13:40,930 --> 00:13:43,640
this is my response to them just about

365
00:13:43,640 --> 00:13:46,820
every time because I just feel like

366
00:13:46,820 --> 00:13:48,980
that's great that's great for you that

367
00:13:48,980 --> 00:13:50,600
you know your framework that well that's

368
00:13:50,600 --> 00:13:51,650
great that your framework is that

369
00:13:51,650 --> 00:13:54,650
efficient and you really showed me but

370
00:13:54,650 --> 00:13:55,670
you missed my point

371
00:13:55,670 --> 00:13:57,830
you missed the you missed an entirely

372
00:13:57,830 --> 00:14:00,020
new opportunity in a way a new tool and

373
00:14:00,020 --> 00:14:01,490
a new way of thinking about things

374
00:14:01,490 --> 00:14:03,920
because you were mired in what your

375
00:14:03,920 --> 00:14:08,510
favorite already was all-in-one

376
00:14:08,510 --> 00:14:10,820
frameworks to me they have a lot of

377
00:14:10,820 --> 00:14:13,750
buy-in and that makes me wary I have a

378
00:14:13,750 --> 00:14:15,980
personal metric I'm sure someone else's

379
00:14:15,980 --> 00:14:17,900
thought of it before me I call it the

380
00:14:17,900 --> 00:14:19,820
time to first hello world metric and the

381
00:14:19,820 --> 00:14:22,640
time to first non-trivial and those are

382
00:14:22,640 --> 00:14:24,620
both rather high for a lot of the

383
00:14:24,620 --> 00:14:25,940
all-in-one frameworks that I've

384
00:14:25,940 --> 00:14:27,470
experimented with not just for myself

385
00:14:27,470 --> 00:14:29,510
but I've asked around and other people

386
00:14:29,510 --> 00:14:31,490
have seem to have high time to first

387
00:14:31,490 --> 00:14:34,190
worlds and hi non-trivial times and that

388
00:14:34,190 --> 00:14:36,620
to me it leaves devs in the dark for a

389
00:14:36,620 --> 00:14:37,970
lot longer so when you talk about dev

390
00:14:37,970 --> 00:14:40,190
efficiency it's about whether they need

391
00:14:40,190 --> 00:14:41,660
to learn things in increments or whether

392
00:14:41,660 --> 00:14:42,800
they need to learn all about a framework

393
00:14:42,800 --> 00:14:44,750
at once and then they're done so you're

394
00:14:44,750 --> 00:14:47,750
not putting it one isn't easier than the

395
00:14:47,750 --> 00:14:50,270
other I think I think it's the both the

396
00:14:50,270 --> 00:14:52,100
same amount of work it's just in what

397
00:14:52,100 --> 00:14:56,900
increments you put those work in finally

398
00:14:56,900 --> 00:14:58,730
when it comes to picking a framework

399
00:14:58,730 --> 00:15:00,980
versus picking modules I feel sometimes

400
00:15:00,980 --> 00:15:02,780
that when you're talking about

401
00:15:02,780 --> 00:15:04,220
frameworks it feels kind of like a

402
00:15:04,220 --> 00:15:07,010
negotiation of oh well this framework

403
00:15:07,010 --> 00:15:08,750
does this this and this well but we have

404
00:15:08,750 --> 00:15:11,390
to put up with these two things that

405
00:15:11,390 --> 00:15:13,940
don't go well with our app or you fight

406
00:15:13,940 --> 00:15:15,680
the app so that or you fight the

407
00:15:15,680 --> 00:15:17,300
framework or whatever you're using so

408
00:15:17,300 --> 00:15:18,920
that you can you can accomplish those

409
00:15:18,920 --> 00:15:21,020
two things decently but how much time

410
00:15:21,020 --> 00:15:24,740
did you put into that definitely to me

411
00:15:24,740 --> 00:15:25,940
it feels like you're kind of holding

412
00:15:25,940 --> 00:15:27,740
pieces of your application is like

413
00:15:27,740 --> 00:15:29,960
bartering tools it's like okay if we can

414
00:15:29,960 --> 00:15:31,430
get a B and C out of this framework we

415
00:15:31,430 --> 00:15:33,170
can put up with D and E being

416
00:15:33,170 --> 00:15:38,059
look terrible to implement the last

417
00:15:38,059 --> 00:15:41,089
argument is what was the most solid

418
00:15:41,089 --> 00:15:42,679
argument but I think now it's actually

419
00:15:42,679 --> 00:15:44,600
kind of a moot point

420
00:15:44,600 --> 00:15:46,999
I really think third party module

421
00:15:46,999 --> 00:15:49,220
management has come a long long way in

422
00:15:49,220 --> 00:15:51,279
JavaScript since when I started

423
00:15:51,279 --> 00:15:54,199
JavaScript development and I'm my

424
00:15:54,199 --> 00:15:56,600
favorite joke about this is we have the

425
00:15:56,600 --> 00:15:59,199
technology we have ways of managing

426
00:15:59,199 --> 00:16:02,379
module upgrades versioning keep

427
00:16:02,379 --> 00:16:05,059
installing dev environments quickly and

428
00:16:05,059 --> 00:16:07,309
easily wewe have they're not of course

429
00:16:07,309 --> 00:16:08,269
they're not perfect

430
00:16:08,269 --> 00:16:10,279
but I certainly think we have these to a

431
00:16:10,279 --> 00:16:12,980
workable state of course I'm talking

432
00:16:12,980 --> 00:16:15,619
about MPM and feelings aside about Bower

433
00:16:15,619 --> 00:16:17,660
it is a package management tool and it

434
00:16:17,660 --> 00:16:20,660
does its job so feelings aside those two

435
00:16:20,660 --> 00:16:22,549
tools have really stepped forward in

436
00:16:22,549 --> 00:16:24,769
terms of managed managing third-party

437
00:16:24,769 --> 00:16:26,959
modules in terms of keeping versioning

438
00:16:26,959 --> 00:16:28,939
saying in terms of keeping your

439
00:16:28,939 --> 00:16:31,249
application structured and and in terms

440
00:16:31,249 --> 00:16:33,079
of what code goes wearing what version

441
00:16:33,079 --> 00:16:35,779
it is and as for module loading on the

442
00:16:35,779 --> 00:16:38,360
in the browser again we have a litany of

443
00:16:38,360 --> 00:16:40,819
tools that need a litany of needs and

444
00:16:40,819 --> 00:16:43,339
es6 is coming and that has module

445
00:16:43,339 --> 00:16:45,139
loading natively which is fantastic I

446
00:16:45,139 --> 00:16:48,919
think so with these combined and with

447
00:16:48,919 --> 00:16:50,869
continuous integration tools such as

448
00:16:50,869 --> 00:16:53,209
Travis CI that clear to manage and you

449
00:16:53,209 --> 00:16:54,410
know alert you when you have a

450
00:16:54,410 --> 00:16:56,360
dependency that's fallen out of version

451
00:16:56,360 --> 00:16:58,160
or when you you know you can run your

452
00:16:58,160 --> 00:16:59,779
tests quickly and you can run your

453
00:16:59,779 --> 00:17:01,699
configurations quickly I think there's a

454
00:17:01,699 --> 00:17:03,049
significant reduction in nightmares

455
00:17:03,049 --> 00:17:04,789
there will always be nightmares with

456
00:17:04,789 --> 00:17:07,010
managing third-party modules I won't

457
00:17:07,010 --> 00:17:09,740
deny that there will always be a reason

458
00:17:09,740 --> 00:17:11,720
to worry about it but I think we

459
00:17:11,720 --> 00:17:13,909
significantly reduced that worry over

460
00:17:13,909 --> 00:17:18,709
the past few years so to reiterate be

461
00:17:18,709 --> 00:17:20,779
passionate but not fanatic about the

462
00:17:20,779 --> 00:17:23,569
tools that you use definitely be a

463
00:17:23,569 --> 00:17:26,089
little more judicious of and sceptical

464
00:17:26,089 --> 00:17:27,649
of tools with a large amount of BI and

465
00:17:27,649 --> 00:17:29,269
I'm not saying don't use them I'm simply

466
00:17:29,269 --> 00:17:31,429
saying evaluate them to the fullest and

467
00:17:31,429 --> 00:17:33,950
then consider your needs all of your

468
00:17:33,950 --> 00:17:36,559
needs not just some of your needs pick

469
00:17:36,559 --> 00:17:38,750
the right tool for each task and if you

470
00:17:38,750 --> 00:17:40,010
like I said if you use a framework be

471
00:17:40,010 --> 00:17:42,710
judicious now why bother with all this

472
00:17:42,710 --> 00:17:44,690
you know some of you may be out there

473
00:17:44,690 --> 00:17:46,860
and still feel that modular

474
00:17:46,860 --> 00:17:48,870
texture is still a pain it's still more

475
00:17:48,870 --> 00:17:50,580
difficult than framework what do you get

476
00:17:50,580 --> 00:17:51,260
out of it

477
00:17:51,260 --> 00:17:54,000
abstractions for me and my team create a

478
00:17:54,000 --> 00:17:55,770
common language and a common way of

479
00:17:55,770 --> 00:17:58,320
doing things so that all the developers

480
00:17:58,320 --> 00:18:00,000
can still speak the same language even

481
00:18:00,000 --> 00:18:01,470
though we've got several pieces of

482
00:18:01,470 --> 00:18:03,990
third-party code everything you need and

483
00:18:03,990 --> 00:18:05,760
nothing you don't and nothing really

484
00:18:05,760 --> 00:18:07,290
getting in your way that you didn't need

485
00:18:07,290 --> 00:18:11,100
in the first place and testing when you

486
00:18:11,100 --> 00:18:13,110
have self-contained modules it's much

487
00:18:13,110 --> 00:18:16,230
easier to test its I've found testing

488
00:18:16,230 --> 00:18:18,059
against a an application built on a

489
00:18:18,059 --> 00:18:19,980
framework I end up testing the framework

490
00:18:19,980 --> 00:18:21,240
more than I end up testing my own

491
00:18:21,240 --> 00:18:23,610
application code with a modular with a

492
00:18:23,610 --> 00:18:25,260
modular set up you're much more likely

493
00:18:25,260 --> 00:18:27,570
to you can see your code in smaller bits

494
00:18:27,570 --> 00:18:29,130
and it's easier to see okay what's my

495
00:18:29,130 --> 00:18:30,809
code and what's the module I'm using and

496
00:18:30,809 --> 00:18:35,370
test therefore because developer heads

497
00:18:35,370 --> 00:18:36,840
I've been saying this a lot and this

498
00:18:36,840 --> 00:18:38,669
developer happiness is contagious when

499
00:18:38,669 --> 00:18:40,559
you're happy your team's happy and when

500
00:18:40,559 --> 00:18:41,880
you're all developing code that is

501
00:18:41,880 --> 00:18:44,309
easier to maintain and easier to track

502
00:18:44,309 --> 00:18:48,480
keep track of everyone's happier I have

503
00:18:48,480 --> 00:18:50,460
a couple of thank-yous to make Chris

504
00:18:50,460 --> 00:18:53,100
Williams and and the Jas comp staff for

505
00:18:53,100 --> 00:18:54,840
putting on such an amazing conference

506
00:18:54,840 --> 00:18:57,870
I've had a miraculously fun time I'd

507
00:18:57,870 --> 00:19:00,120
really like to thank RetailMeNot I'm an

508
00:19:00,120 --> 00:19:01,950
engineering evangelist for them they let

509
00:19:01,950 --> 00:19:04,140
me speak at conferences and they fly me

510
00:19:04,140 --> 00:19:06,210
all over the place and they let me have

511
00:19:06,210 --> 00:19:08,280
these fun experiences and I'd like to

512
00:19:08,280 --> 00:19:10,770
thank my friend and mentor ray I often

513
00:19:10,770 --> 00:19:11,970
say I don't know where I'd be without

514
00:19:11,970 --> 00:19:14,010
him but I do know that my life is a

515
00:19:14,010 --> 00:19:17,040
better for him in it thank you for

516
00:19:17,040 --> 00:19:18,510
listening like I said if you have

517
00:19:18,510 --> 00:19:20,250
questions or comments feel free to track

518
00:19:20,250 --> 00:19:22,080
me down at tonight's party I should be

519
00:19:22,080 --> 00:19:24,030
wearing a light-up dress that's my

520
00:19:24,030 --> 00:19:25,860
twitter handle my email address and

521
00:19:25,860 --> 00:19:27,450
again I'm an engineering evangelist at

522
00:19:27,450 --> 00:19:28,890
RetailMeNot thank you very much for

