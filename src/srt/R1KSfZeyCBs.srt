1
00:00:17,190 --> 00:00:19,710

because I'd like to start by saying how

2
00:00:19,710 --> 00:00:22,190
happy I am to be at a conference that

3
00:00:22,190 --> 00:00:24,120
supports the expression of such

4
00:00:24,120 --> 00:00:27,570
unpopular ideas I'm going to be talking

5
00:00:27,570 --> 00:00:32,430
on the subject of frameworks and why we

6
00:00:32,430 --> 00:00:37,739
want them should say a bit about Who I

7
00:00:37,739 --> 00:00:42,540
am and where I come from I work with the

8
00:00:42,540 --> 00:00:45,989
fluid project who r group of people

9
00:00:45,989 --> 00:00:47,820
primarily interested in accessibility

10
00:00:47,820 --> 00:00:50,820
who work in Toronto we've got number of

11
00:00:50,820 --> 00:00:53,909
partner projects that we're engaged with

12
00:00:53,909 --> 00:00:57,120
at the moment some of these are working

13
00:00:57,120 --> 00:01:01,769
in the space of museums or academic

14
00:01:01,769 --> 00:01:06,330
projects and generally their issue of

15
00:01:06,330 --> 00:01:08,909
accessibility is one that is strongly

16
00:01:08,909 --> 00:01:10,740
underrepresented in the world of web

17
00:01:10,740 --> 00:01:15,060
technologies if any developer deals that

18
00:01:15,060 --> 00:01:20,320
at all it's largely as an afterthought

19
00:01:20,330 --> 00:01:23,870
the world is full of exciting new

20
00:01:23,870 --> 00:01:26,670
whizzing technologies that often leave

21
00:01:26,670 --> 00:01:28,890
people who have different requirements

22
00:01:28,890 --> 00:01:34,770
left behind but the talks got a larger

23
00:01:34,770 --> 00:01:37,050
focus since I'm talking I'm intending to

24
00:01:37,050 --> 00:01:39,320
talk about larger issues about the way

25
00:01:39,320 --> 00:01:41,960
that we think about the code we write

26
00:01:41,960 --> 00:01:47,070
since the biggest problem is that

27
00:01:47,070 --> 00:01:48,150
software doesn't work the way that

28
00:01:48,150 --> 00:01:52,530
people want it to work people if you

29
00:01:52,530 --> 00:01:54,240
find an interface that you don't like

30
00:01:54,240 --> 00:01:55,920
there's nothing you can do about it

31
00:01:55,920 --> 00:01:58,230
generally you can submit a bug report

32
00:01:58,230 --> 00:02:00,240
and see if anybody pays any attention

33
00:02:00,240 --> 00:02:05,040
but usually they weren't so there's a

34
00:02:05,040 --> 00:02:09,479
certain mindset amongst developers that

35
00:02:09,479 --> 00:02:11,810
I wanted to to characterize that

36
00:02:11,810 --> 00:02:14,010
developers when they have their code and

37
00:02:14,010 --> 00:02:16,170
when they they reflect on how to deal

38
00:02:16,170 --> 00:02:19,200
with a a threat to their architecture

39
00:02:19,200 --> 00:02:21,000
there's a stereotypical way that they'll

40
00:02:21,000 --> 00:02:24,330
tend to react and this is by becoming

41
00:02:24,330 --> 00:02:26,610
what all kind of code misers they'll

42
00:02:26,610 --> 00:02:29,400
hide hide the visibility of their code

43
00:02:29,400 --> 00:02:29,940
from other

44
00:02:29,940 --> 00:02:31,470
code or they'll hide data from other

45
00:02:31,470 --> 00:02:33,870
people in particular they'll hide it

46
00:02:33,870 --> 00:02:37,590
from their clients because of course

47
00:02:37,590 --> 00:02:40,650
developers think that they're the only

48
00:02:40,650 --> 00:02:41,850
people who should be allowed to get

49
00:02:41,850 --> 00:02:46,230
their hands on code I mean perhaps this

50
00:02:46,230 --> 00:02:49,200
version of of Scrooge is a more cheerful

51
00:02:49,200 --> 00:02:51,630
one but basically the images all of this

52
00:02:51,630 --> 00:02:57,840
code is heaped up in private and if you

53
00:02:57,840 --> 00:02:59,820
see any kind of architectural threat the

54
00:02:59,820 --> 00:03:02,190
way to deal with it is by creating a

55
00:03:02,190 --> 00:03:04,740
module system that it's like a bank

56
00:03:04,740 --> 00:03:06,540
vault you put your code inside the bank

57
00:03:06,540 --> 00:03:09,090
vault and nobody can see it from the

58
00:03:09,090 --> 00:03:14,100
outside so the central problem of

59
00:03:14,100 --> 00:03:16,560
software comes on these two axes there's

60
00:03:16,560 --> 00:03:17,490
a failure of what you could call

61
00:03:17,490 --> 00:03:19,920
composability so if you combine two

62
00:03:19,920 --> 00:03:21,810
modules that meet two different

63
00:03:21,810 --> 00:03:24,720
functions a and B the system that you

64
00:03:24,720 --> 00:03:26,430
create has got greater complexity than

65
00:03:26,430 --> 00:03:28,010
the complexity that's in the two modules

66
00:03:28,010 --> 00:03:30,540
on the other hand looking at your users

67
00:03:30,540 --> 00:03:33,120
if you try to if you try to do two jobs

68
00:03:33,120 --> 00:03:36,959
for your users x and y you'll discover

69
00:03:36,959 --> 00:03:38,550
that the work you have to do is greater

70
00:03:38,550 --> 00:03:41,360
than the sum of x and y and these

71
00:03:41,360 --> 00:03:45,989
inevitably deal lead to the death of

72
00:03:45,989 --> 00:03:49,200
your architecture eventually due to this

73
00:03:49,200 --> 00:03:53,820
failure of composition in complexity and

74
00:03:53,820 --> 00:03:56,160
development costs eventually every

75
00:03:56,160 --> 00:03:58,190
development will become an unscalable

76
00:03:58,190 --> 00:04:02,850
ball of mud so yes I have to apologize

77
00:04:02,850 --> 00:04:04,769
for putting an equation here I mean

78
00:04:04,769 --> 00:04:07,620
since it will probably drive away half

79
00:04:07,620 --> 00:04:10,860
of the audience that we have but anyway

80
00:04:10,860 --> 00:04:14,340
this is a broad equation showing the the

81
00:04:14,340 --> 00:04:16,169
economics of development so how much

82
00:04:16,169 --> 00:04:18,330
does it cost to do something so you pay

83
00:04:18,330 --> 00:04:19,590
the cost of your framework and your

84
00:04:19,590 --> 00:04:22,919
tools and then on the right is some

85
00:04:22,919 --> 00:04:25,730
function derived from what you actually

86
00:04:25,730 --> 00:04:28,530
get done as work what functionality did

87
00:04:28,530 --> 00:04:31,290
you deliver to your users and so there's

88
00:04:31,290 --> 00:04:33,230
some constant scaling factor which is

89
00:04:33,230 --> 00:04:36,960
you know your day to day grind which is

90
00:04:36,960 --> 00:04:39,660
the sort of thing solved by frameworks

91
00:04:39,660 --> 00:04:42,300
such as coffee script and then they

92
00:04:42,300 --> 00:04:44,610
it is this exponent here the gamma and

93
00:04:44,610 --> 00:04:46,620
this is the thing which is going to kill

94
00:04:46,620 --> 00:04:49,289
you in the end so you imagine this is a

95
00:04:49,289 --> 00:04:52,889
quadratic function then your cost goes

96
00:04:52,889 --> 00:04:55,199
with the square of the amount of stuff

97
00:04:55,199 --> 00:04:57,090
you deliver and clearly what you really

98
00:04:57,090 --> 00:04:59,099
want is this impossible dream this real

99
00:04:59,099 --> 00:05:02,639
code utopia of having your development

100
00:05:02,639 --> 00:05:05,610
costs simply being proportional to the

101
00:05:05,610 --> 00:05:08,520
amount of work you do so can we get

102
00:05:08,520 --> 00:05:10,319
there what kinds of things are going to

103
00:05:10,319 --> 00:05:11,729
assume of it there's plenty of things in

104
00:05:11,729 --> 00:05:13,349
the world which reduce a things which

105
00:05:13,349 --> 00:05:15,180
which would use typing things which

106
00:05:15,180 --> 00:05:19,050
reduce verbosity better tools but what

107
00:05:19,050 --> 00:05:20,699
kinds of things will help you bring down

108
00:05:20,699 --> 00:05:23,219
this exponent gamma so you know here's

109
00:05:23,219 --> 00:05:25,919
here's a picture of your app if you

110
00:05:25,919 --> 00:05:28,289
imagine each one of these little bubbles

111
00:05:28,289 --> 00:05:30,930
is a module you want to make some kind

112
00:05:30,930 --> 00:05:33,270
of assertion about your application or

113
00:05:33,270 --> 00:05:34,800
you want to change the behavior of some

114
00:05:34,800 --> 00:05:36,240
application so if your if your

115
00:05:36,240 --> 00:05:40,740
application is composed of this freely

116
00:05:40,740 --> 00:05:47,029
linked graph with islands of insulation

117
00:05:47,029 --> 00:05:49,319
then you've got no language to talk

118
00:05:49,319 --> 00:05:51,719
about alteration of behavior because

119
00:05:51,719 --> 00:05:53,279
you've got no global point of view I

120
00:05:53,279 --> 00:05:54,960
mean perhaps the module system as a

121
00:05:54,960 --> 00:05:58,830
global point of view but if that's part

122
00:05:58,830 --> 00:06:00,659
of your world then you have to admit

123
00:06:00,659 --> 00:06:02,880
that that's a kind of framework but at

124
00:06:02,880 --> 00:06:07,560
the moment with opaque barriers between

125
00:06:07,560 --> 00:06:10,680
different parts of the application it's

126
00:06:10,680 --> 00:06:13,979
impossible faced with a user who wants

127
00:06:13,979 --> 00:06:16,379
something changed in the application to

128
00:06:16,379 --> 00:06:18,180
make assertions about the part of the

129
00:06:18,180 --> 00:06:20,690
architecture which he's referring to so

130
00:06:20,690 --> 00:06:22,590
this is a kind of problem which we

131
00:06:22,590 --> 00:06:24,210
haven't really made much progress on we

132
00:06:24,210 --> 00:06:25,860
code in pretty much the same way that

133
00:06:25,860 --> 00:06:30,000
that we started coding in 1960 and these

134
00:06:30,000 --> 00:06:31,860
dominant approaches that we have for

135
00:06:31,860 --> 00:06:33,060
dealing with the problem really don't

136
00:06:33,060 --> 00:06:37,770
make the issues much better so why I'm

137
00:06:37,770 --> 00:06:39,389
excited about javascript is because I

138
00:06:39,389 --> 00:06:40,949
think it's a great environment

139
00:06:40,949 --> 00:06:43,849
unexpectedly for solving these problems

140
00:06:43,849 --> 00:06:47,879
so largely as a result of having this

141
00:06:47,879 --> 00:06:49,860
marvelous dialect inside the language

142
00:06:49,860 --> 00:06:52,199
called Jason as well as being a great

143
00:06:52,199 --> 00:06:54,000
model for the state which the

144
00:06:54,000 --> 00:06:56,240
application

145
00:06:56,240 --> 00:06:58,500
managers on behalf of its uses it's also

146
00:06:58,500 --> 00:07:02,490
a great model for representing behavior

147
00:07:02,490 --> 00:07:07,440
or what one would once call code things

148
00:07:07,440 --> 00:07:09,390
like syntax trees things which are

149
00:07:09,390 --> 00:07:11,990
describing what work is to be done but

150
00:07:11,990 --> 00:07:14,870
clearly there's a lot to be bridged in

151
00:07:14,870 --> 00:07:19,950
in getting this done so our product that

152
00:07:19,950 --> 00:07:21,750
we're working on our framework is called

153
00:07:21,750 --> 00:07:24,750
fluid infusion a brief rundown of the

154
00:07:24,750 --> 00:07:27,540
the contents it has in it many of which

155
00:07:27,540 --> 00:07:30,360
are pretty conventional has got an event

156
00:07:30,360 --> 00:07:32,340
system it's got to render a data binding

157
00:07:32,340 --> 00:07:34,590
system and of course assistance for

158
00:07:34,590 --> 00:07:36,000
people who want to make applications

159
00:07:36,000 --> 00:07:38,490
more accessible and widgets these are

160
00:07:38,490 --> 00:07:41,520
all things that you expect to find in in

161
00:07:41,520 --> 00:07:43,920
a normal framework but what I want to

162
00:07:43,920 --> 00:07:46,860
talk about is our ioc system so this is

163
00:07:46,860 --> 00:07:50,730
the inversion of control system that

164
00:07:50,730 --> 00:07:54,240
we've been working on I'm glad that

165
00:07:54,240 --> 00:07:58,800
other speakers on track be have already

166
00:07:58,800 --> 00:08:00,510
talked about these so I don't need to

167
00:08:00,510 --> 00:08:02,280
describe in too much detail what they

168
00:08:02,280 --> 00:08:05,850
are an inversion of control system takes

169
00:08:05,850 --> 00:08:07,770
out of your hands the responsibility for

170
00:08:07,770 --> 00:08:10,500
constructing objects and wiring them

171
00:08:10,500 --> 00:08:13,800
together you can think of it as being

172
00:08:13,800 --> 00:08:16,380
allowed to hand a box full of jigsaw

173
00:08:16,380 --> 00:08:18,660
pieces to your framework and for it to

174
00:08:18,660 --> 00:08:20,910
just work out how to put the puzzle

175
00:08:20,910 --> 00:08:23,790
together without you saying well do one

176
00:08:23,790 --> 00:08:25,140
thing after the other do this first

177
00:08:25,140 --> 00:08:31,470
thing to this second thing so we

178
00:08:31,470 --> 00:08:35,219
inherited many of the concepts from the

179
00:08:35,219 --> 00:08:37,979
Java world which these ideas originated

180
00:08:37,979 --> 00:08:40,650
in but the crucial idea that was missing

181
00:08:40,650 --> 00:08:44,240
was the idea of context and this is the

182
00:08:44,240 --> 00:08:49,110
the idea which allows us to bridge to

183
00:08:49,110 --> 00:08:52,140
the world of our users users and their

184
00:08:52,140 --> 00:08:54,180
requirements of what provide context and

185
00:08:54,180 --> 00:08:56,700
this context awareness has to trickle

186
00:08:56,700 --> 00:08:59,070
down through all parts of the

187
00:08:59,070 --> 00:09:02,220
application structure and looking back

188
00:09:02,220 --> 00:09:04,589
at this that tangled mess picture we had

189
00:09:04,589 --> 00:09:08,130
clearly it's impossible for the context

190
00:09:08,130 --> 00:09:10,740
you travel across these impermeable

191
00:09:10,740 --> 00:09:13,160
boundaries in our architecture

192
00:09:13,160 --> 00:09:15,990
everything in the application has to

193
00:09:15,990 --> 00:09:18,540
have a line of sight to the place where

194
00:09:18,540 --> 00:09:26,450
context arises so contextual awareness

195
00:09:26,450 --> 00:09:29,570
has to be the crucial aspect which is

196
00:09:29,570 --> 00:09:32,880
entered into the system and especially

197
00:09:32,880 --> 00:09:35,400
the transparency which the Jason model

198
00:09:35,400 --> 00:09:39,050
gives us is going to be the principal

199
00:09:39,050 --> 00:09:42,210
weapon we use to transmit context

200
00:09:42,210 --> 00:09:44,930
awareness throughout the application

201
00:09:44,930 --> 00:09:49,020
it's the wrong way around right so let

202
00:09:49,020 --> 00:09:51,450
me just skip ahead a bit so this is a

203
00:09:51,450 --> 00:09:54,180
what we call a demands block so this is

204
00:09:54,180 --> 00:09:57,450
a fragment of of configuration of the

205
00:09:57,450 --> 00:10:02,330
application and as you can see it's

206
00:10:02,330 --> 00:10:04,950
clearly simply a JSON object we don't

207
00:10:04,950 --> 00:10:06,930
have funny things in here we don't have

208
00:10:06,930 --> 00:10:08,730
function calls the only potentially

209
00:10:08,730 --> 00:10:11,310
funny thing we have is this expression

210
00:10:11,310 --> 00:10:13,830
in curly brackets here which is

211
00:10:13,830 --> 00:10:17,000
something that matches a context name so

212
00:10:17,000 --> 00:10:20,130
what does this thing do this thing is a

213
00:10:20,130 --> 00:10:22,160
rule for explaining how a particular

214
00:10:22,160 --> 00:10:24,750
requested operation is to be resolved in

215
00:10:24,750 --> 00:10:28,350
a particular context so the first name

216
00:10:28,350 --> 00:10:30,150
is the name of the function which is

217
00:10:30,150 --> 00:10:33,050
required and these functions exist in a

218
00:10:33,050 --> 00:10:36,570
global I mean a truly global name space

219
00:10:36,570 --> 00:10:39,840
of functions it's a it's a moral

220
00:10:39,840 --> 00:10:41,700
namespace they may or may not be any

221
00:10:41,700 --> 00:10:43,530
particular thing sitting in a particular

222
00:10:43,530 --> 00:10:46,170
global scope does this but this name

223
00:10:46,170 --> 00:10:49,110
uniquely defines the function which is

224
00:10:49,110 --> 00:10:54,360
required the second name or actually the

225
00:10:54,360 --> 00:10:56,820
third name the third name really is the

226
00:10:56,820 --> 00:10:58,200
name of a function so in this particular

227
00:10:58,200 --> 00:11:00,600
case we want to honor the requested

228
00:11:00,600 --> 00:11:04,430
function by choosing the name of a

229
00:11:04,430 --> 00:11:07,530
concretely existing global function now

230
00:11:07,530 --> 00:11:09,060
the second name is the crucial on the

231
00:11:09,060 --> 00:11:13,470
second name identifies the context so in

232
00:11:13,470 --> 00:11:14,700
this slot were actually allowed multiple

233
00:11:14,700 --> 00:11:16,500
names so you can think of this as a kind

234
00:11:16,500 --> 00:11:18,750
of CSS system for talking about code

235
00:11:18,750 --> 00:11:20,940
multiple context names when matched

236
00:11:20,940 --> 00:11:22,490
provides

237
00:11:22,490 --> 00:11:26,270
a more specific concept of the context

238
00:11:26,270 --> 00:11:28,430
so a rule which matches more contexts

239
00:11:28,430 --> 00:11:30,860
will beat one that matches fewer fewer

240
00:11:30,860 --> 00:11:35,779
contexts so these two names interact in

241
00:11:35,779 --> 00:11:37,670
a kind of partnership that the demanded

242
00:11:37,670 --> 00:11:39,860
function name is the name of what the

243
00:11:39,860 --> 00:11:43,760
user wants dunn's the second name or

244
00:11:43,760 --> 00:11:47,270
multiple names define the scope of

245
00:11:47,270 --> 00:11:49,100
matching of this rule and the final

246
00:11:49,100 --> 00:11:50,690
block is the disposition of this rule

247
00:11:50,690 --> 00:11:52,060
and this disposition is again

248
00:11:52,060 --> 00:11:54,800
configuration and this configuration is

249
00:11:54,800 --> 00:11:58,640
also addressed at this tree so if we

250
00:11:58,640 --> 00:12:01,190
skip back a bit to this kind of tree

251
00:12:01,190 --> 00:12:03,040
unfortunately every structure in

252
00:12:03,040 --> 00:12:05,690
computer science ends up looking like

253
00:12:05,690 --> 00:12:08,870
one of these boring structures but this

254
00:12:08,870 --> 00:12:10,880
one has a particular interpretation so

255
00:12:10,880 --> 00:12:14,270
this tree is a globally visible and

256
00:12:14,270 --> 00:12:20,320
globally resolvable data structure and

257
00:12:20,320 --> 00:12:23,839
it's shown partway through the process

258
00:12:23,839 --> 00:12:26,630
of instantiation at this point marked in

259
00:12:26,630 --> 00:12:29,930
green the component the component marked

260
00:12:29,930 --> 00:12:31,190
it green is the one which is currently

261
00:12:31,190 --> 00:12:35,149
resolving and by process of resolving

262
00:12:35,149 --> 00:12:37,820
these rules the context is drawn from

263
00:12:37,820 --> 00:12:39,230
the section of the tree shown in yellow

264
00:12:39,230 --> 00:12:43,160
so you can see this tree is in some ways

265
00:12:43,160 --> 00:12:46,970
a model of a standard scope system apart

266
00:12:46,970 --> 00:12:48,890
from the fact that the actual nodes

267
00:12:48,890 --> 00:12:50,510
themselves write it to the scope as well

268
00:12:50,510 --> 00:12:52,310
as their children this is just the way

269
00:12:52,310 --> 00:12:54,170
that scopes work in normal programming

270
00:12:54,170 --> 00:12:58,070
languages so these these yellow boxes

271
00:12:58,070 --> 00:13:00,649
form the context both for the purpose of

272
00:13:00,649 --> 00:13:03,500
matching the rules and secondly for the

273
00:13:03,500 --> 00:13:05,870
purpose of matching the disposition of

274
00:13:05,870 --> 00:13:10,760
the rule so for example this

275
00:13:10,760 --> 00:13:13,010
contextualise expression in curly

276
00:13:13,010 --> 00:13:15,110
brackets undergoes what's called value

277
00:13:15,110 --> 00:13:17,930
resolution so this value is resolved

278
00:13:17,930 --> 00:13:20,089
contextually in the tree according to

279
00:13:20,089 --> 00:13:22,850
what according to what can be found in

280
00:13:22,850 --> 00:13:28,070
it so what was the crucial feature which

281
00:13:28,070 --> 00:13:29,600
is lost when

282
00:13:29,600 --> 00:13:31,940
the sacred Brendan I constructed

283
00:13:31,940 --> 00:13:34,430
JavaScript from the raw materials of

284
00:13:34,430 --> 00:13:37,579
Lisp there was a crucial property which

285
00:13:37,579 --> 00:13:42,459
Lisp has above all other languages which

286
00:13:42,459 --> 00:13:44,959
JavaScript doesn't enjoy and this

287
00:13:44,959 --> 00:13:47,480
property is called home iconicity this

288
00:13:47,480 --> 00:13:50,269
is the equivalence of programming

289
00:13:50,269 --> 00:13:54,740
languages syntax tree with a data

290
00:13:54,740 --> 00:13:56,300
element of the language this allowed

291
00:13:56,300 --> 00:13:58,519
Java this allows Vegas allowed list

292
00:13:58,519 --> 00:14:01,120
programs to operate on themselves with

293
00:14:01,120 --> 00:14:03,230
special kinds of functions which were

294
00:14:03,230 --> 00:14:06,079
called macros and macros were functions

295
00:14:06,079 --> 00:14:08,259
which accepted one block of code and

296
00:14:08,259 --> 00:14:11,089
produced a different block of code and

297
00:14:11,089 --> 00:14:13,519
this is the one thing which which we

298
00:14:13,519 --> 00:14:15,589
which we don't have in JavaScript we

299
00:14:15,589 --> 00:14:18,079
can't transform the insides of functions

300
00:14:18,079 --> 00:14:20,300
we can only transform functions by

301
00:14:20,300 --> 00:14:22,759
wrapping them in other functions so we

302
00:14:22,759 --> 00:14:24,259
have higher order functions but we don't

303
00:14:24,259 --> 00:14:27,380
have macros so it's clear looking at

304
00:14:27,380 --> 00:14:30,889
these kinds of structures you can see

305
00:14:30,889 --> 00:14:32,779
this this structure being specified

306
00:14:32,779 --> 00:14:38,089
purely in Jason bridges the gap to to

307
00:14:38,089 --> 00:14:39,949
this crucial property and it's clear

308
00:14:39,949 --> 00:14:43,100
that to make really scalable and

309
00:14:43,100 --> 00:14:45,529
efficient designs we need to be able to

310
00:14:45,529 --> 00:14:50,290
recover this property because most

311
00:14:50,290 --> 00:14:53,060
interesting requests for new features by

312
00:14:53,060 --> 00:14:56,750
users will require the tree of code to

313
00:14:56,750 --> 00:14:59,660
be transformed so this this structure

314
00:14:59,660 --> 00:15:04,819
here serves many roles I mean it has the

315
00:15:04,819 --> 00:15:06,889
the classic role of collecting all the

316
00:15:06,889 --> 00:15:08,930
widgets you've made but it's also a map

317
00:15:08,930 --> 00:15:10,819
of all the state in your application as

318
00:15:10,819 --> 00:15:12,709
well as all the dependent structure but

319
00:15:12,709 --> 00:15:14,689
it's also a computational structure like

320
00:15:14,689 --> 00:15:18,199
a syntax tree or like a map of nested

321
00:15:18,199 --> 00:15:21,920
scopes like a call stack so this is a

322
00:15:21,920 --> 00:15:24,139
this is a multi-purpose structure which

323
00:15:24,139 --> 00:15:27,829
will enable a new kind of programming so

324
00:15:27,829 --> 00:15:30,680
as some concrete examples of the kinds

325
00:15:30,680 --> 00:15:32,630
of things which we're interested in

326
00:15:32,630 --> 00:15:34,910
achieving so imagine these two views of

327
00:15:34,910 --> 00:15:39,829
a of an Amazon page so these are clearly

328
00:15:39,829 --> 00:15:41,630
the same resource in some sense one of

329
00:15:41,630 --> 00:15:43,270
them is displayed on a desktop browser

330
00:15:43,270 --> 00:15:49,410
and one that's displayed on a mobile now

331
00:15:49,410 --> 00:15:51,640
amazon can solve this by throwing money

332
00:15:51,640 --> 00:15:53,380
at it they simply develop the page twice

333
00:15:53,380 --> 00:15:55,780
and they say okay this is this is your

334
00:15:55,780 --> 00:15:57,910
small cut down page and this is your big

335
00:15:57,910 --> 00:16:00,880
page and this is just you know dealing

336
00:16:00,880 --> 00:16:03,120
with one class of user the biggest

337
00:16:03,120 --> 00:16:05,440
top-level division of users into ones

338
00:16:05,440 --> 00:16:08,230
who like small things on mobile screens

339
00:16:08,230 --> 00:16:09,820
are ones who like big things on desktop

340
00:16:09,820 --> 00:16:12,130
screens imagining the whole universe

341
00:16:12,130 --> 00:16:13,990
full of different things that people

342
00:16:13,990 --> 00:16:15,580
want done you can imagine this is a very

343
00:16:15,580 --> 00:16:17,860
small start on the kinds of problems

344
00:16:17,860 --> 00:16:20,200
which we expect to deal with but we've

345
00:16:20,200 --> 00:16:22,570
got no answer even even to this top

346
00:16:22,570 --> 00:16:24,820
level division other than just write the

347
00:16:24,820 --> 00:16:26,350
thing again and maybe you can share it

348
00:16:26,350 --> 00:16:28,180
maybe you can share a couple of widgets

349
00:16:28,180 --> 00:16:30,400
between the two of them but that's about

350
00:16:30,400 --> 00:16:32,710
it imagine all the kinds of special

351
00:16:32,710 --> 00:16:34,450
needs which users might want you know I

352
00:16:34,450 --> 00:16:37,660
want I want that there to be a different

353
00:16:37,660 --> 00:16:39,340
contrast I've got special navigation

354
00:16:39,340 --> 00:16:41,620
requirements so in fact people are so

355
00:16:41,620 --> 00:16:43,060
desperate for even this kind of

356
00:16:43,060 --> 00:16:44,830
transformation that we're doing work

357
00:16:44,830 --> 00:16:48,640
just simply to fake out the Amazon

358
00:16:48,640 --> 00:16:51,190
server-side by sending a user agent

359
00:16:51,190 --> 00:16:53,860
string pretending that say a desktop app

360
00:16:53,860 --> 00:16:55,750
desktop browser is really a mobile

361
00:16:55,750 --> 00:16:56,950
browser because people who for example

362
00:16:56,950 --> 00:16:59,020
once simplified content for some reason

363
00:16:59,020 --> 00:17:00,610
this is the first way they've ever been

364
00:17:00,610 --> 00:17:02,350
able to get it and the way they get it

365
00:17:02,350 --> 00:17:05,290
is by impersonating a mobile user agent

366
00:17:05,290 --> 00:17:09,490
so all kinds of contexts in which you

367
00:17:09,490 --> 00:17:11,589
have different needs you're wandering

368
00:17:11,589 --> 00:17:13,480
along and you're operating this thing

369
00:17:13,480 --> 00:17:15,520
one handedly wouldn't it be great if if

370
00:17:15,520 --> 00:17:17,350
it switched to really simplified

371
00:17:17,350 --> 00:17:20,140
interface that could just respond to

372
00:17:20,140 --> 00:17:23,950
broad gestures and perhaps when you've

373
00:17:23,950 --> 00:17:25,720
got some more attention you can you can

374
00:17:25,720 --> 00:17:27,580
use the fine-grained version site again

375
00:17:27,580 --> 00:17:29,620
anyway so these are the kinds of issues

376
00:17:29,620 --> 00:17:32,800
that we're interested in solving with

377
00:17:32,800 --> 00:17:35,190
this new approach to building software

378
00:17:35,190 --> 00:17:38,170
labeling software that is much more like

379
00:17:38,170 --> 00:17:41,080
this squidgy iphone users really want to

380
00:17:41,080 --> 00:17:42,460
be able to pull your stuff apart and

381
00:17:42,460 --> 00:17:44,500
make it work the way they want whereas

382
00:17:44,500 --> 00:17:47,770
if your code is sitting in your scrooge

383
00:17:47,770 --> 00:17:49,630
silo there's no way they're going to be

384
00:17:49,630 --> 00:17:51,910
able to get the stuff out to to get the

385
00:17:51,910 --> 00:17:53,950
things they want to do so this island

386
00:17:53,950 --> 00:17:55,360
with this inspirational quote from

387
00:17:55,360 --> 00:17:55,770
Johnny

388
00:17:55,770 --> 00:17:59,280
Taylor that we don't we can't even

389
00:17:59,280 --> 00:18:01,200
imagine what better you eyes looked like

390
00:18:01,200 --> 00:18:04,050
because we're a community who's full of

391
00:18:04,050 --> 00:18:06,180
people who are just all used to working

392
00:18:06,180 --> 00:18:07,800
in a particular way and we produce

393
00:18:07,800 --> 00:18:09,480
interfaces which look and work a

394
00:18:09,480 --> 00:18:11,910
particular way and in general they don't

395
00:18:11,910 --> 00:18:13,710
work the way that our users want them to

396
00:18:13,710 --> 00:18:17,400
work so I'll skip over examples of

397
00:18:17,400 --> 00:18:20,580
markup and say yes we want this kind of

398
00:18:20,580 --> 00:18:22,470
out in the open model of transparency

399
00:18:22,470 --> 00:18:25,670
where things can be picked apart and

400
00:18:25,670 --> 00:18:29,040
bolted together again and here all our

