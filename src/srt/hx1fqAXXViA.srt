1
00:00:08,630 --> 00:00:11,910

hi everyone okay welcome to Hangover

2
00:00:11,910 --> 00:00:13,860
 number two I hope you're not

3
00:00:13,860 --> 00:00:17,160
number two I hope you're not
feeling too however this morning my name

4
00:00:17,160 --> 00:00:18,779
is Oliver ash you can find me on twitter

5
00:00:18,779 --> 00:00:22,140
at this user name and today i'm going to

6
00:00:22,140 --> 00:00:24,029
be talking about how i built an offline

7
00:00:24,029 --> 00:00:27,540
page for the Guardian com I work at the

8
00:00:27,540 --> 00:00:30,060
Guardian previously I worked on the

9
00:00:30,060 --> 00:00:32,520
content management system which is a web

10
00:00:32,520 --> 00:00:35,130
application you can see here this is

11
00:00:35,130 --> 00:00:38,010
called composer if you want to hear more

12
00:00:38,010 --> 00:00:40,320
about that you can come talk to me later

13
00:00:40,320 --> 00:00:41,880
but essentially this is the tool that

14
00:00:41,880 --> 00:00:43,920
all the journalists key is to publish

15
00:00:43,920 --> 00:00:47,360
content to the web and also print and

16
00:00:47,360 --> 00:00:50,880
now I work on the website and so if you

17
00:00:50,880 --> 00:00:52,530
hump me into the Guardian com this is

18
00:00:52,530 --> 00:00:58,670
what it looks like I'm going to begin by

19
00:00:58,670 --> 00:01:01,890
comparing web and native and how these

20
00:01:01,890 --> 00:01:06,090
two different platforms compare when it

21
00:01:06,090 --> 00:01:09,780
comes to performance in a native app

22
00:01:09,780 --> 00:01:12,720
when you open when you open it it will

23
00:01:12,720 --> 00:01:15,060
download some content and cash it so the

24
00:01:15,060 --> 00:01:16,770
next time you're open it and you're

25
00:01:16,770 --> 00:01:18,720
offline well you just see the stale

26
00:01:18,720 --> 00:01:20,729
content this is a guardian up I'm

27
00:01:20,729 --> 00:01:22,830
offline but I can still see the homepage

28
00:01:22,830 --> 00:01:25,470
I can actually navigate into content and

29
00:01:25,470 --> 00:01:29,250
I can still read it the same thing if

30
00:01:29,250 --> 00:01:32,159
the server is down I'll see the stale

31
00:01:32,159 --> 00:01:35,909
content if I have a poor connection then

32
00:01:35,909 --> 00:01:37,890
I'll see the stell content whilst we try

33
00:01:37,890 --> 00:01:40,950
to get the new content that might take a

34
00:01:40,950 --> 00:01:42,180
long time but at least I'm seeing

35
00:01:42,180 --> 00:01:44,700
something in the meantime and if I have

36
00:01:44,700 --> 00:01:46,890
a good connection then I'll briefly see

37
00:01:46,890 --> 00:01:48,960
the cell content and then I'll see the

38
00:01:48,960 --> 00:01:51,240
new content once it arrives we will know

39
00:01:51,240 --> 00:01:52,650
this because we will use native apps

40
00:01:52,650 --> 00:01:56,700
every day but on the web well if you're

41
00:01:56,700 --> 00:01:58,439
flying you don't really get anything if

42
00:01:58,439 --> 00:02:00,180
I try to go to the Guardian calm and I'm

43
00:02:00,180 --> 00:02:03,299
a flying I just get this chrome or Fline

44
00:02:03,299 --> 00:02:05,580
page little and in fact there is a game

45
00:02:05,580 --> 00:02:07,110
you can play if you tap on the dinosaur

46
00:02:07,110 --> 00:02:10,700
it's quite fun I'm not very good at they

47
00:02:10,700 --> 00:02:13,739
if the server's down again I'll just get

48
00:02:13,739 --> 00:02:17,129
this page it's not very useful and if I

49
00:02:17,129 --> 00:02:18,599
have a poor connection then you're going

50
00:02:18,599 --> 00:02:20,129
to be if you try to let the Guardian

51
00:02:20,129 --> 00:02:20,850
drama anyone

52
00:02:20,850 --> 00:02:22,980
so you're going to be staring at a white

53
00:02:22,980 --> 00:02:26,400
screen until the content of isles and if

54
00:02:26,400 --> 00:02:27,960
you have a good connection then finally

55
00:02:27,960 --> 00:02:30,150
we have the happy path you see the new

56
00:02:30,150 --> 00:02:35,310
content and and and the offline page is

57
00:02:35,310 --> 00:02:36,780
actually becoming something of a symbol

58
00:02:36,780 --> 00:02:39,000
like this is an advertisement in the cap

59
00:02:39,000 --> 00:02:41,160
underground station or in the capital of

60
00:02:41,160 --> 00:02:44,010
Argentina and you can see that the the

61
00:02:44,010 --> 00:02:45,330
dinosaur that I just showed you on the

62
00:02:45,330 --> 00:02:47,700
offline page and is actually used in an

63
00:02:47,700 --> 00:02:50,700
advertisement say what why don't we use

64
00:02:50,700 --> 00:02:53,280
that as an opportunity to push our brand

65
00:02:53,280 --> 00:02:57,740
and so to give the user something useful

66
00:02:57,740 --> 00:03:01,020
so we can we can do that we can do

67
00:03:01,020 --> 00:03:03,810
better and as a start the guards

68
00:03:03,810 --> 00:03:07,050
intercom we built an offline page so if

69
00:03:07,050 --> 00:03:10,920
i'm on https page on the guardian and i

70
00:03:10,920 --> 00:03:16,320
go offline when i refresh that page I'll

71
00:03:16,320 --> 00:03:18,870
see the offline page and it has a

72
00:03:18,870 --> 00:03:21,900
crossword you can play but I'm not very

73
00:03:21,900 --> 00:03:24,540
good at crossword this way have a go

74
00:03:24,540 --> 00:03:29,760
there if you want to try it out we are

75
00:03:29,760 --> 00:03:32,790
we have limited it to the smashing fire

76
00:03:32,790 --> 00:03:34,620
/ developer blog section and that's

77
00:03:34,620 --> 00:03:36,720
because of browser bucks which I will

78
00:03:36,720 --> 00:03:40,980
explain later so I'm gonna I'm going to

79
00:03:40,980 --> 00:03:46,040
break down how we built it in four steps

80
00:03:46,040 --> 00:03:50,190
the first step is introducing service

81
00:03:50,190 --> 00:03:54,720
workers I before I go into that I just

82
00:03:54,720 --> 00:03:56,940
want to emphasize that this is something

83
00:03:56,940 --> 00:04:00,420
that I was able to build in less than a

84
00:04:00,420 --> 00:04:04,290
day I think mid 2015 Jake came into the

85
00:04:04,290 --> 00:04:06,780
Guardian office to talk about service

86
00:04:06,780 --> 00:04:09,660
workers and I thought okay I'm going to

87
00:04:09,660 --> 00:04:11,640
use this as an opportunity to try and

88
00:04:11,640 --> 00:04:13,350
learn and spilled something and I was

89
00:04:13,350 --> 00:04:15,360
able to build what you just saw in less

90
00:04:15,360 --> 00:04:17,190
than a day I did have to do some

91
00:04:17,190 --> 00:04:19,320
polishing to get into production but

92
00:04:19,320 --> 00:04:21,270
that was no more than a few hours so

93
00:04:21,270 --> 00:04:22,590
everything you see here you can learn

94
00:04:22,590 --> 00:04:25,740
you can I want to inspire you to go

95
00:04:25,740 --> 00:04:27,060
ahead and pay with these technologies

96
00:04:27,060 --> 00:04:30,479
yourself so what is the service worker

97
00:04:30,479 --> 00:04:31,849
well

98
00:04:31,849 --> 00:04:33,289
I don't know if this needs an

99
00:04:33,289 --> 00:04:36,649
introduction really but i'm going to i'm

100
00:04:36,649 --> 00:04:38,330
going to do an introduction but create

101
00:04:38,330 --> 00:04:40,999
chrome dev summit last year i think

102
00:04:40,999 --> 00:04:43,369
someone counted how many times the word

103
00:04:43,369 --> 00:04:47,029
service workers was used and they

104
00:04:47,029 --> 00:04:49,069
counted 66.5 I actually think that's

105
00:04:49,069 --> 00:04:51,169
probably a guess and I think it was

106
00:04:51,169 --> 00:04:52,399
probably mentioned more than a hundred

107
00:04:52,399 --> 00:04:56,749
times but there we go and of course if

108
00:04:56,749 --> 00:04:58,279
you if you didn't know what service

109
00:04:58,279 --> 00:05:00,610
workers well then you probably

110
00:05:00,610 --> 00:05:02,869
discovered yesterday that actually it's

111
00:05:02,869 --> 00:05:05,599
just a cake and you can eat service

112
00:05:05,599 --> 00:05:10,610
workers so a service worker is a script

113
00:05:10,610 --> 00:05:13,369
that runs in the background and it's

114
00:05:13,369 --> 00:05:16,249
useful for features that require no user

115
00:05:16,249 --> 00:05:19,759
interaction so that might be listening

116
00:05:19,759 --> 00:05:21,919
to a push event and you might want to

117
00:05:21,919 --> 00:05:24,229
show a notification when you receive a

118
00:05:24,229 --> 00:05:26,990
push oven we might be intersecting and

119
00:05:26,990 --> 00:05:29,360
handling Network requests which is

120
00:05:29,360 --> 00:05:30,559
something that will be using

121
00:05:30,559 --> 00:05:32,360
specifically for the affluent page as

122
00:05:32,360 --> 00:05:35,149
well as I'll show you and in the future

123
00:05:35,149 --> 00:05:36,919
it will be used for other things like a

124
00:05:36,919 --> 00:05:39,439
background think if you have some data

125
00:05:39,439 --> 00:05:42,729
that you want to update periodically or

126
00:05:42,729 --> 00:05:45,800
alarmed if you want to show a reminder a

127
00:05:45,800 --> 00:05:49,879
specific time to a user and also maybe

128
00:05:49,879 --> 00:05:51,649
geofencing so when you enter a

129
00:05:51,649 --> 00:05:53,659
geographical perimeter you want to

130
00:05:53,659 --> 00:05:56,059
perform some action all of these things

131
00:05:56,059 --> 00:05:59,360
the service work is a perfect place to

132
00:05:59,360 --> 00:06:01,819
have to have those features and it's

133
00:06:01,819 --> 00:06:03,349
also a progressive enhancement because

134
00:06:03,349 --> 00:06:05,300
if you don't have service worker then

135
00:06:05,300 --> 00:06:08,719
your your website just works as it as it

136
00:06:08,719 --> 00:06:13,369
was before to do two things tonight it's

137
00:06:13,369 --> 00:06:17,479
https only and it's supported in chrome

138
00:06:17,479 --> 00:06:20,839
or opera and firefox a moment but maybe

139
00:06:20,839 --> 00:06:26,590
safari next decades we'll see

140
00:06:26,600 --> 00:06:30,270
and for the observant among you you may

141
00:06:30,270 --> 00:06:32,610
realize that actually the Guardian isn't

142
00:06:32,610 --> 00:06:36,960
on HTTPS but we are migrating we're

143
00:06:36,960 --> 00:06:40,020
actually migrating pay section by

144
00:06:40,020 --> 00:06:42,150
section these are the ones that you can

145
00:06:42,150 --> 00:06:45,060
go to today and they are HTTPS and if

146
00:06:45,060 --> 00:06:46,410
you go to any of these page you'll get

147
00:06:46,410 --> 00:06:51,420
our service worker and if you want to

148
00:06:51,420 --> 00:06:53,100
learn more about how the migration is

149
00:06:53,100 --> 00:06:54,450
going come and talk to me afterwards but

150
00:06:54,450 --> 00:06:56,880
I think we've essentially ruled out as

151
00:06:56,880 --> 00:07:00,240
advertising as a problem so we've almost

152
00:07:00,240 --> 00:07:04,600
got the green light to go for the HTTPS

153
00:07:04,610 --> 00:07:08,400
so creating and registering a service

154
00:07:08,400 --> 00:07:11,070
worker just imagine me we create a empty

155
00:07:11,070 --> 00:07:13,350
file called service worker George S and

156
00:07:13,350 --> 00:07:15,780
on an HTML page we're going to have a

157
00:07:15,780 --> 00:07:18,419
script that tells the browser we want to

158
00:07:18,419 --> 00:07:23,070
register it we have a service worker

159
00:07:23,070 --> 00:07:26,010
registered now but nothing is really

160
00:07:26,010 --> 00:07:27,690
happening the request is just going

161
00:07:27,690 --> 00:07:30,060
straight from the page to the server and

162
00:07:30,060 --> 00:07:35,220
back if if you want to see yourselves

163
00:07:35,220 --> 00:07:36,510
worker you can actually use the dev

164
00:07:36,510 --> 00:07:37,980
tools to see that if you go into the

165
00:07:37,980 --> 00:07:40,500
resources panel and I can service work

166
00:07:40,500 --> 00:07:44,460
it down the left-hand side likewise in

167
00:07:44,460 --> 00:07:48,000
chrome if you go to about debugging hash

168
00:07:48,000 --> 00:07:50,280
workers and you can see your service

169
00:07:50,280 --> 00:07:53,760
worker there as well so we have we have

170
00:07:53,760 --> 00:07:55,890
a we have a service worker but it's not

171
00:07:55,890 --> 00:07:59,010
doing anything what we need to do is we

172
00:07:59,010 --> 00:08:00,450
need to we need to download some

173
00:08:00,450 --> 00:08:02,700
resources ahead of time and the show to

174
00:08:02,700 --> 00:08:04,620
the user when they're offline we want to

175
00:08:04,620 --> 00:08:08,310
prime the cash and service worker has

176
00:08:08,310 --> 00:08:09,750
something called the install event which

177
00:08:09,750 --> 00:08:12,060
is the perfect opportunity to do this

178
00:08:12,060 --> 00:08:15,900
and so I don't have too much code today

179
00:08:15,900 --> 00:08:20,250
but this is just to show you how you

180
00:08:20,250 --> 00:08:24,570
prank ash we in the install event we

181
00:08:24,570 --> 00:08:26,190
just run a function called update cash

182
00:08:26,190 --> 00:08:30,660
and that opens a new cache and it adds

183
00:08:30,660 --> 00:08:33,750
three different assets to the cash the

184
00:08:33,750 --> 00:08:36,390
offline page which is the HTML some CSS

185
00:08:36,390 --> 00:08:37,900
which we need for that for the

186
00:08:37,900 --> 00:08:43,210
homepage to work and some JavaScript and

187
00:08:43,210 --> 00:08:44,980
we also we're going to version the cash

188
00:08:44,980 --> 00:08:48,430
because as we see later we want to we

189
00:08:48,430 --> 00:08:50,710
want to know when the user has an old

190
00:08:50,710 --> 00:08:52,360
version and then we want to update it

191
00:08:52,360 --> 00:08:58,060
and but you'll see that later and in our

192
00:08:58,060 --> 00:09:00,070
case as you saw the offline page has a

193
00:09:00,070 --> 00:09:01,600
critter has a crossword that's actually

194
00:09:01,600 --> 00:09:03,850
built as a reactor reactor application

195
00:09:03,850 --> 00:09:06,400
and that's all contained within within

196
00:09:06,400 --> 00:09:08,130
the JavaScript that we're cashing here

197
00:09:08,130 --> 00:09:11,290
so now we have a service worker and cash

198
00:09:11,290 --> 00:09:15,100
but we're not doing anything still you

199
00:09:15,100 --> 00:09:16,720
know the offline page doesn't work yet

200
00:09:16,720 --> 00:09:18,820
request is just going straight to the

201
00:09:18,820 --> 00:09:21,010
server and back so the next thing we

202
00:09:21,010 --> 00:09:24,060
need to do is we need to handle requests

203
00:09:24,060 --> 00:09:27,850
with something called to fetch event the

204
00:09:27,850 --> 00:09:30,910
fetch event lets you intercept requests

205
00:09:30,910 --> 00:09:34,590
and handle them programmatically and so

206
00:09:34,590 --> 00:09:38,460
the default is just for the browser to

207
00:09:38,460 --> 00:09:42,340
to make the request to the network and

208
00:09:42,340 --> 00:09:43,900
in the code here which I've just added

209
00:09:43,900 --> 00:09:45,340
to the bottom of the code that you saw

210
00:09:45,340 --> 00:09:50,230
previously and I'm just going dude doing

211
00:09:50,230 --> 00:09:51,760
what the browser were doing it anyway so

212
00:09:51,760 --> 00:09:53,110
I'm not doing anything different here

213
00:09:53,110 --> 00:09:55,900
but what you could do is you could fetch

214
00:09:55,900 --> 00:09:57,100
for what you could fetch from the catch

215
00:09:57,100 --> 00:09:59,890
cash instead or you could construct a

216
00:09:59,890 --> 00:10:06,360
response programmatically so now our

217
00:10:06,360 --> 00:10:08,830
service worker is actually doing

218
00:10:08,830 --> 00:10:10,600
something the the requests are actually

219
00:10:10,600 --> 00:10:14,320
going through the service worker to the

220
00:10:14,320 --> 00:10:17,110
server and back but we still don't help

221
00:10:17,110 --> 00:10:20,080
your flowing page working and let's move

222
00:10:20,080 --> 00:10:23,410
on just to give you an idea of the

223
00:10:23,410 --> 00:10:25,270
flexibility you have in a service worker

224
00:10:25,270 --> 00:10:27,430
it is very very programmatic so you can

225
00:10:27,430 --> 00:10:30,190
actually construct your own response as

226
00:10:30,190 --> 00:10:32,020
you can see here I have a string of HTML

227
00:10:32,020 --> 00:10:36,340
and I could just construct your response

228
00:10:36,340 --> 00:10:38,710
from that string and respond with that

229
00:10:38,710 --> 00:10:41,320
and that the browser is a perfectly

230
00:10:41,320 --> 00:10:43,630
valid response so you have a lot of

231
00:10:43,630 --> 00:10:47,789
control

232
00:10:47,799 --> 00:10:51,499
so in order to use the fetch event to

233
00:10:51,499 --> 00:10:53,809
serve the offline page and I need to I

234
00:10:53,809 --> 00:10:55,459
need to break this down into two parts

235
00:10:55,459 --> 00:10:57,290
because we have we have two different

236
00:10:57,290 --> 00:11:00,259
types of content we have HTML which is

237
00:11:00,259 --> 00:11:03,920
mutable and so you know the Guardian com

238
00:11:03,920 --> 00:11:07,220
is some HTML and it changes every time

239
00:11:07,220 --> 00:11:09,319
someone adds new contents for the

240
00:11:09,319 --> 00:11:11,689
offline page will also change and every

241
00:11:11,689 --> 00:11:15,259
time we make a change to it or you know

242
00:11:15,259 --> 00:11:19,639
the crossword updates whereas we have we

243
00:11:19,639 --> 00:11:21,739
have immutable assets like a CSS and

244
00:11:21,739 --> 00:11:24,679
JavaScript once we deploy those they are

245
00:11:24,679 --> 00:11:27,079
on the Internet forever and and if you

246
00:11:27,079 --> 00:11:30,170
request that URL and it will it will

247
00:11:30,170 --> 00:11:33,319
always return the same content so we

248
00:11:33,319 --> 00:11:34,790
have different kasia strategies for

249
00:11:34,790 --> 00:11:36,470
these different different types of

250
00:11:36,470 --> 00:11:39,019
requests so I'm we need to handle them

251
00:11:39,019 --> 00:11:44,089
separately for HTML and when when you're

252
00:11:44,089 --> 00:11:46,610
offline and you make a request for some

253
00:11:46,610 --> 00:11:48,350
HTML that's the time when we want to

254
00:11:48,350 --> 00:11:51,169
show you offline page so what would be

255
00:11:51,169 --> 00:11:53,660
is what we want to do is we want to go

256
00:11:53,660 --> 00:11:55,610
to the network first because if you are

257
00:11:55,610 --> 00:11:56,989
online we don't want to show the offline

258
00:11:56,989 --> 00:12:00,110
page but if there is an error when we

259
00:12:00,110 --> 00:12:02,689
try to go to the to the network then

260
00:12:02,689 --> 00:12:05,600
we'll fall back to the cash and this is

261
00:12:05,600 --> 00:12:07,249
a path pattern known as network first

262
00:12:07,249 --> 00:12:12,919
then cash this is the same in fetch

263
00:12:12,919 --> 00:12:16,579
event you saw earlier I the only change

264
00:12:16,579 --> 00:12:18,819
I've made here is I've guarded the

265
00:12:18,819 --> 00:12:22,730
response and I'm only handling HTML

266
00:12:22,730 --> 00:12:24,679
requests and the way I do that is by

267
00:12:24,679 --> 00:12:27,589
looking at the request headers and so

268
00:12:27,589 --> 00:12:30,350
the request accept header and tells me

269
00:12:30,350 --> 00:12:33,290
whether or not the browser accepts HTML

270
00:12:33,290 --> 00:12:35,809
and all only I'll only handle the

271
00:12:35,809 --> 00:12:39,549
request if the browser does except HTML

272
00:12:39,549 --> 00:12:43,939
that's not useful in itself but we will

273
00:12:43,939 --> 00:12:47,799
elaborate so moving on we hit we have

274
00:12:47,799 --> 00:12:50,119
that we're doing the fetch to the

275
00:12:50,119 --> 00:12:52,009
network and we want to fall back to the

276
00:12:52,009 --> 00:12:56,480
cash fetch returns a promise so if

277
00:12:56,480 --> 00:12:59,800
you're offline fetch will return

278
00:12:59,800 --> 00:13:03,339
will return a rejected promise so we

279
00:13:03,339 --> 00:13:07,089
catch that promise rejection and we

280
00:13:07,089 --> 00:13:09,490
retrieve something from the cache which

281
00:13:09,490 --> 00:13:15,399
is that offline page and now if you're

282
00:13:15,399 --> 00:13:17,620
offline you get this beautiful offline

283
00:13:17,620 --> 00:13:20,529
page that something's missing I hope you

284
00:13:20,529 --> 00:13:23,709
can notice we're missing some styling

285
00:13:23,709 --> 00:13:28,720
and some behavior so we now need to

286
00:13:28,720 --> 00:13:31,779
handle asset requests and as I said

287
00:13:31,779 --> 00:13:35,110
earlier these were immutable so what we

288
00:13:35,110 --> 00:13:36,670
want to do really is we want to go to

289
00:13:36,670 --> 00:13:38,769
the cash straight away because we know

290
00:13:38,769 --> 00:13:41,820
that they're going to be in there and

291
00:13:41,820 --> 00:13:45,790
this is how we do that if it's not HTML

292
00:13:45,790 --> 00:13:50,470
then we'll just look in the cash to see

293
00:13:50,470 --> 00:13:53,350
if there's a an entry that matches the

294
00:13:53,350 --> 00:13:57,339
request that's coming through ah that's

295
00:13:57,339 --> 00:13:59,170
not going to work for things which

296
00:13:59,170 --> 00:14:02,920
aren't in the cash so we need to we need

297
00:14:02,920 --> 00:14:05,079
to take a different approach we want to

298
00:14:05,079 --> 00:14:08,350
go to the cash first and if it's not in

299
00:14:08,350 --> 00:14:10,329
a cash then we'll try the network and

300
00:14:10,329 --> 00:14:13,660
this is good for any CSS or JavaScript

301
00:14:13,660 --> 00:14:15,550
any assets that we don't have in the

302
00:14:15,550 --> 00:14:17,890
cash because remember remember we're

303
00:14:17,890 --> 00:14:19,360
only cashing things which are needed for

304
00:14:19,360 --> 00:14:23,320
your flame page and the way we do that

305
00:14:23,320 --> 00:14:25,950
is the same code we had before and

306
00:14:25,950 --> 00:14:29,829
cashes match returns at promise and

307
00:14:29,829 --> 00:14:32,010
we'll see if the value of that from its

308
00:14:32,010 --> 00:14:37,360
is undefined or not and if there is a

309
00:14:37,360 --> 00:14:39,579
value then we'll just use that otherwise

310
00:14:39,579 --> 00:14:41,290
we'll go to the network using the fetch

311
00:14:41,290 --> 00:14:48,540
function the final part to talk about is

312
00:14:48,540 --> 00:14:51,640
updating the crossword so we publish new

313
00:14:51,640 --> 00:14:54,300
crosswords every day we have an avid

314
00:14:54,300 --> 00:14:58,540
user base and it would be great if the

315
00:14:58,540 --> 00:15:00,279
offline page contained the latest

316
00:15:00,279 --> 00:15:04,990
crossword and how would you do this well

317
00:15:04,990 --> 00:15:07,720
the way we're currently doing it is in

318
00:15:07,720 --> 00:15:10,400
the global scope of our service worker

319
00:15:10,400 --> 00:15:12,510
with we're seeing if the cache is

320
00:15:12,510 --> 00:15:15,240
updated or not and we know we know that

321
00:15:15,240 --> 00:15:17,700
by looking at the cache name that we

322
00:15:17,700 --> 00:15:20,400
defined earlier as I said earlier we've

323
00:15:20,400 --> 00:15:22,350
version the cash so if there isn't a

324
00:15:22,350 --> 00:15:25,560
version that matches today's date then

325
00:15:25,560 --> 00:15:28,980
we know it's not up to date and if it's

326
00:15:28,980 --> 00:15:31,410
not up to date then we'll run the same

327
00:15:31,410 --> 00:15:33,180
function that we ran in the install

328
00:15:33,180 --> 00:15:35,700
event the update cash function and then

329
00:15:35,700 --> 00:15:37,770
once that finishes we can safely delete

330
00:15:37,770 --> 00:15:41,940
the old caches in the future we might

331
00:15:41,940 --> 00:15:44,310
want to use the background sync API for

332
00:15:44,310 --> 00:15:48,270
this instead it's kind of it's a bit of

333
00:15:48,270 --> 00:15:49,950
a hack doing it doing it here and

334
00:15:49,950 --> 00:15:51,720
actually the reason this works is

335
00:15:51,720 --> 00:15:54,150
because the browser closes the service

336
00:15:54,150 --> 00:15:56,790
worker and disabled memory and then it

337
00:15:56,790 --> 00:15:59,250
will boot it up again when you visit

338
00:15:59,250 --> 00:16:01,800
that page again and so this code in the

339
00:16:01,800 --> 00:16:03,420
global scope actually gets it gets a

340
00:16:03,420 --> 00:16:09,420
chance to run quite frequently sorry

341
00:16:09,420 --> 00:16:13,250
there we go we have an offline page and

342
00:16:13,250 --> 00:16:17,610
everything works next I want to talk

343
00:16:17,610 --> 00:16:19,520
about what we might use service worker

344
00:16:19,520 --> 00:16:21,750
for in the future on the Guardian calm

345
00:16:21,750 --> 00:16:24,450
and you're flying page right now is a

346
00:16:24,450 --> 00:16:26,390
little bit insignificant because of our

347
00:16:26,390 --> 00:16:30,480
HTTPS migration is still ongoing and

348
00:16:30,480 --> 00:16:32,970
also browser support but it will

349
00:16:32,970 --> 00:16:34,560
increase in significance you can imagine

350
00:16:34,560 --> 00:16:37,080
a year from now when browser support is

351
00:16:37,080 --> 00:16:41,640
really good and we're on HTTPS loads of

352
00:16:41,640 --> 00:16:44,850
people will see that offline page so we

353
00:16:44,850 --> 00:16:47,040
would like to extend it maybe do what

354
00:16:47,040 --> 00:16:48,870
native apps to show the stale content or

355
00:16:48,870 --> 00:16:51,180
download content ahead of time and show

356
00:16:51,180 --> 00:16:53,550
them show the user personalized content

357
00:16:53,550 --> 00:16:56,070
for them because we know what you've

358
00:16:56,070 --> 00:17:00,900
been reading recently and we also have a

359
00:17:00,900 --> 00:17:02,280
feature called save for later we could

360
00:17:02,280 --> 00:17:07,020
use that as a action that states I want

361
00:17:07,020 --> 00:17:09,660
to read this offline and we could also

362
00:17:09,660 --> 00:17:13,020
go full you're flying fast and I'll fly

363
00:17:13,020 --> 00:17:15,780
first what does that mean it means when

364
00:17:15,780 --> 00:17:18,689
I request the HTML I get a response

365
00:17:18,689 --> 00:17:20,699
instantly with just a shell of the page

366
00:17:20,699 --> 00:17:23,449
and that's coming from the cash

367
00:17:23,449 --> 00:17:28,860
via the service worker that improves

368
00:17:28,860 --> 00:17:30,690
experience quite significantly for users

369
00:17:30,690 --> 00:17:32,270
with poor connections as we saw earlier

370
00:17:32,270 --> 00:17:35,610
when we compared native and web if you

371
00:17:35,610 --> 00:17:37,200
if you have a poor connection you open a

372
00:17:37,200 --> 00:17:38,610
website you're just going to be staring

373
00:17:38,610 --> 00:17:41,130
a white screen so service workers allows

374
00:17:41,130 --> 00:17:43,380
you to to avoid that situation and give

375
00:17:43,380 --> 00:17:49,080
a much better experience and yeah we

376
00:17:49,080 --> 00:17:50,700
could show you Stella content whilst

377
00:17:50,700 --> 00:17:55,710
clutching new new new content as well so

378
00:17:55,710 --> 00:17:58,590
just to create a very happy demo me to

379
00:17:58,590 --> 00:18:00,600
demonstrate what I meant by that this is

380
00:18:00,600 --> 00:18:04,110
kind of how many content websites why

381
00:18:04,110 --> 00:18:07,320
today you tap on a link and then nothing

382
00:18:07,320 --> 00:18:12,059
happens for 5-10 seconds depending on

383
00:18:12,059 --> 00:18:14,520
your network connection and then finally

384
00:18:14,520 --> 00:18:16,770
the new content downloads and it flashes

385
00:18:16,770 --> 00:18:19,799
and it appears on screen but you're not

386
00:18:19,799 --> 00:18:22,980
really giving you any feedback would it

387
00:18:22,980 --> 00:18:24,900
would be much better if when I tap on

388
00:18:24,900 --> 00:18:28,230
that link i get feedback straightaway to

389
00:18:28,230 --> 00:18:29,400
say okay something is happening

390
00:18:29,400 --> 00:18:30,990
something floating and then when the new

391
00:18:30,990 --> 00:18:35,250
content arrives it just appears and that

392
00:18:35,250 --> 00:18:40,090
is what we mean by show architecture i

393
00:18:40,100 --> 00:18:42,929
also want to mention some problems and

394
00:18:42,929 --> 00:18:44,820
caveats that I had when I was working on

395
00:18:44,820 --> 00:18:46,860
this mentioned earlier that there were

396
00:18:46,860 --> 00:18:49,710
browser bugs as a weird bargain chrome

397
00:18:49,710 --> 00:18:56,070
where any redirect from HTTP to HTTPS

398
00:18:56,070 --> 00:18:58,289
would result in there in a view of the

399
00:18:58,289 --> 00:19:00,350
offline page even if you went offline

400
00:19:00,350 --> 00:19:03,179
and we also had a weird bug in Firefox

401
00:19:03,179 --> 00:19:06,419
where cookies were dropped and which

402
00:19:06,419 --> 00:19:09,570
meant that or no those odd behavior like

403
00:19:09,570 --> 00:19:12,870
users on HTTPS sections couldn't use

404
00:19:12,870 --> 00:19:17,820
come commenting for some reason but we

405
00:19:17,820 --> 00:19:19,080
worked around those and they weren't

406
00:19:19,080 --> 00:19:21,960
they weren't too severe and it's it's

407
00:19:21,960 --> 00:19:24,299
been good to push and identify those

408
00:19:24,299 --> 00:19:27,000
lace bugs I think the vol being fixed

409
00:19:27,000 --> 00:19:30,539
now and another problem we had was in

410
00:19:30,539 --> 00:19:32,880
interleaving of versions in the seed in

411
00:19:32,880 --> 00:19:35,159
cash and I want to explain what I mean

412
00:19:35,159 --> 00:19:36,720
by that because I think

413
00:19:36,720 --> 00:19:38,490
other people might have this problem

414
00:19:38,490 --> 00:19:40,409
when they when they tried to cash wings

415
00:19:40,409 --> 00:19:43,559
in a service worker so we have a service

416
00:19:43,559 --> 00:19:47,610
worker and that caches I've simplified

417
00:19:47,610 --> 00:19:49,440
the example here that this cash is two

418
00:19:49,440 --> 00:19:51,539
things it caches the offline page which

419
00:19:51,539 --> 00:19:55,549
it's an HTML and it caches some CSS and

420
00:19:55,549 --> 00:19:58,470
that offline page when you try to run it

421
00:19:58,470 --> 00:20:04,440
it will try to load that CSS and if if

422
00:20:04,440 --> 00:20:06,630
we looked at how things were cashed in

423
00:20:06,630 --> 00:20:11,730
our CDN when you request the service

424
00:20:11,730 --> 00:20:14,429
worker for the first time okay the CDN

425
00:20:14,429 --> 00:20:16,620
is going to cash that we say it's going

426
00:20:16,620 --> 00:20:19,679
to cash it for 60 seconds when you

427
00:20:19,679 --> 00:20:21,090
request your flowing page for the first

428
00:20:21,090 --> 00:20:23,669
time the CDM will cash that as well for

429
00:20:23,669 --> 00:20:27,090
60 seconds in the same with the CSS but

430
00:20:27,090 --> 00:20:30,270
because the CSS is an immutable thing we

431
00:20:30,270 --> 00:20:35,760
can cash that for much longer but at

432
00:20:35,760 --> 00:20:39,500
some point in time we do a deploy and

433
00:20:39,500 --> 00:20:43,070
someone changes a service worker and

434
00:20:43,070 --> 00:20:45,990
when you when someone makes a request

435
00:20:45,990 --> 00:20:48,960
for that the CDM wall will cash the new

436
00:20:48,960 --> 00:20:50,610
version if the old version has fallen

437
00:20:50,610 --> 00:20:54,030
out of the cash and that leads to a

438
00:20:54,030 --> 00:20:56,159
situation like this where you have the

439
00:20:56,159 --> 00:20:58,470
new version of the service worker which

440
00:20:58,470 --> 00:21:02,130
is telling the browser to cash the old

441
00:21:02,130 --> 00:21:04,260
the old version of the offline page

442
00:21:04,260 --> 00:21:06,120
because the CDN still has that version

443
00:21:06,120 --> 00:21:10,350
and and the new version of the CSS and

444
00:21:10,350 --> 00:21:12,570
of course when you try to run the

445
00:21:12,570 --> 00:21:14,039
offline page because you'll get an old

446
00:21:14,039 --> 00:21:17,130
version the CSS just won't work because

447
00:21:17,130 --> 00:21:19,230
it will be trying to lay the version 1

448
00:21:19,230 --> 00:21:22,409
into the version 2 is a difficult

449
00:21:22,409 --> 00:21:28,380
situation and we could have fixed it one

450
00:21:28,380 --> 00:21:31,370
way we could have fixed it is by naming

451
00:21:31,370 --> 00:21:33,809
versioning the service worker and the

452
00:21:33,809 --> 00:21:36,960
offline page but the way we actually

453
00:21:36,960 --> 00:21:40,799
fixed it was using something I guess you

454
00:21:40,799 --> 00:21:42,750
would call a cache manifest and so this

455
00:21:42,750 --> 00:21:45,679
is just some Jason that has some HTML

456
00:21:45,679 --> 00:21:48,960
for the offline page and a list of

457
00:21:48,960 --> 00:21:50,230
assets to download

458
00:21:50,230 --> 00:21:52,540
and because a cache manifest will will

459
00:21:52,540 --> 00:21:54,820
be a single entry in the CD in cash you

460
00:21:54,820 --> 00:21:56,260
can guarantee that there will be no

461
00:21:56,260 --> 00:22:03,950
interleaving of versions so there we go

462
00:22:03,960 --> 00:22:07,929
finally why why did I why did I do this

463
00:22:07,929 --> 00:22:10,990
I mean it's fun to experiment with new

464
00:22:10,990 --> 00:22:14,490
browser technology of course but

465
00:22:14,490 --> 00:22:17,350
although there's insignificant usage due

466
00:22:17,350 --> 00:22:19,419
to HTTPS and browser support right now I

467
00:22:19,419 --> 00:22:21,040
think it's good to plant the seeds and a

468
00:22:21,040 --> 00:22:22,840
lot of people don't realize that the

469
00:22:22,840 --> 00:22:26,350
webcam work offline and so I think it's

470
00:22:26,350 --> 00:22:28,809
good to start demonstrating that and

471
00:22:28,809 --> 00:22:31,809
people will start to see the product as

472
00:22:31,809 --> 00:22:35,590
as these things do increase in support

473
00:22:35,590 --> 00:22:39,280
and also it's good to iron out browser

474
00:22:39,280 --> 00:22:43,630
bugs that pushes the web for words and I

475
00:22:43,630 --> 00:22:45,929
really like this quote by Nolan awesome

476
00:22:45,929 --> 00:22:48,970
if we only use features that work in ie8

477
00:22:48,970 --> 00:22:50,740
we're condemning ourselves to 98 world

478
00:22:50,740 --> 00:22:54,429
so I think I really really would like to

479
00:22:54,429 --> 00:22:56,200
encourage everyone to like trying new

480
00:22:56,200 --> 00:22:59,110
service workers today because you can

481
00:22:59,110 --> 00:23:00,370
start building really great things of

482
00:23:00,370 --> 00:23:06,190
them so in conclusion and service

483
00:23:06,190 --> 00:23:08,290
workers allows us to progressively

484
00:23:08,290 --> 00:23:10,570
enhance the experience for users who are

485
00:23:10,570 --> 00:23:12,730
offline and but also uses with poor

486
00:23:12,730 --> 00:23:15,340
connections and its really really easy

487
00:23:15,340 --> 00:23:18,400
to build an offline page and and it's a

488
00:23:18,400 --> 00:23:21,549
really good place to start so go ahead

489
00:23:21,549 --> 00:23:24,790
and have a go here is some third reading

490
00:23:24,790 --> 00:23:27,880
I wrote a blog post about all of this if

491
00:23:27,880 --> 00:23:30,910
you want to read that and there's also a

492
00:23:30,910 --> 00:23:33,730
great explainer on service workers on

493
00:23:33,730 --> 00:23:37,690
Alex Russell's github and you can

494
00:23:37,690 --> 00:23:39,460
actually visit the Guardian service

495
00:23:39,460 --> 00:23:40,630
worker if you want to take a look at

496
00:23:40,630 --> 00:23:43,360
what code we have in there I will admit

497
00:23:43,360 --> 00:23:45,250
it's not exactly the same as what you've

498
00:23:45,250 --> 00:23:46,480
seen here because I've had to work

499
00:23:46,480 --> 00:23:48,340
around browser bugs and things like that

500
00:23:48,340 --> 00:23:53,860
and but that's life thank you very much

