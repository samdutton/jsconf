1
00:00:00,620 --> 00:00:18,189

[Music]

2
00:00:18,199 --> 00:00:22,800
hello everybody uh thank you so much for

3
00:00:22,800 --> 00:00:24,779
inviting me and thank you for staying

4
00:00:24,779 --> 00:00:27,000
all the way to the last talk on a

5
00:00:27,000 --> 00:00:28,619
three-day conference I know that it is

6
00:00:28,619 --> 00:00:30,119
very hard to keep the energy going all

7
00:00:30,119 --> 00:00:32,040
the way to the end of a conference and

8
00:00:32,040 --> 00:00:35,790
the very end of the day this has been a

9
00:00:35,790 --> 00:00:37,590
great conference I want to thank the

10
00:00:37,590 --> 00:00:40,350
organizers the staff the volunteers for

11
00:00:40,350 --> 00:00:42,059
an amazing conference I go to a lot of

12
00:00:42,059 --> 00:00:44,129
conferences and this has been absolutely

13
00:00:44,129 --> 00:00:47,010
world-class the curation of the talks

14
00:00:47,010 --> 00:00:48,510
the quality of the speakers the

15
00:00:48,510 --> 00:00:52,379
organization the a/v the food please

16
00:00:52,379 --> 00:00:53,840
let's all give them a round of applause

17
00:00:53,840 --> 00:00:59,030
[Applause]

18
00:00:59,030 --> 00:01:02,129
and before we get started we have to do

19
00:01:02,129 --> 00:01:08,760
the pre talk speaker selfie because if

20
00:01:08,760 --> 00:01:10,770
it doesn't end up on Instagram did it

21
00:01:10,770 --> 00:01:12,500
even happen

22
00:01:12,500 --> 00:01:16,110
all right with that important business

23
00:01:16,110 --> 00:01:19,920
out of the way hello I'm Laurie I helped

24
00:01:19,920 --> 00:01:22,200
co-found NPM Inc I didn't invent NPM I

25
00:01:22,200 --> 00:01:24,479
just did all of the other stuff and I'm

26
00:01:24,479 --> 00:01:27,180
currently chief data officer there but

27
00:01:27,180 --> 00:01:29,520
what I really AM is a web developer I've

28
00:01:29,520 --> 00:01:31,710
been a web developer for 23 years now

29
00:01:31,710 --> 00:01:33,390
which means that I have been writing

30
00:01:33,390 --> 00:01:35,400
HTML longer than some of you have been

31
00:01:35,400 --> 00:01:40,470
alive but making the web bigger and

32
00:01:40,470 --> 00:01:42,689
better and more accessible by getting

33
00:01:42,689 --> 00:01:45,060
more people involved that is what really

34
00:01:45,060 --> 00:01:48,390
motivates me and I know that you were

35
00:01:48,390 --> 00:01:50,399
all expecting a talk about the future of

36
00:01:50,399 --> 00:01:52,380
JavaScript but at the last minute I

37
00:01:52,380 --> 00:01:54,210
decided I would just throw the whole

38
00:01:54,210 --> 00:01:56,909
thing out and instead this talk is gonna

39
00:01:56,909 --> 00:02:00,200
be about micro front ends

40
00:02:00,200 --> 00:02:01,749
[Music]

41
00:02:01,749 --> 00:02:05,869
can you even imagine this is just a joke

42
00:02:05,869 --> 00:02:07,819
for like the five people who spend way

43
00:02:07,819 --> 00:02:09,080
too much time on Twitter and will

44
00:02:09,080 --> 00:02:11,720
understand this joke what I'm really

45
00:02:11,720 --> 00:02:14,000
here to talk about is JavaScript I'm

46
00:02:14,000 --> 00:02:17,660
gonna talk about who we are we the

47
00:02:17,660 --> 00:02:21,260
people who write JavaScript where we use

48
00:02:21,260 --> 00:02:22,790
JavaScript and what we're doing with it

49
00:02:22,790 --> 00:02:25,549
today and I'm also going to talk about

50
00:02:25,549 --> 00:02:27,620
why we're doing this stuff the forces

51
00:02:27,620 --> 00:02:30,170
that got JavaScript and us into where we

52
00:02:30,170 --> 00:02:32,959
are today and then finally I'm going to

53
00:02:32,959 --> 00:02:34,579
talk about what comes next I'm gonna

54
00:02:34,579 --> 00:02:35,810
look at all of the trends that we're

55
00:02:35,810 --> 00:02:38,269
seeing and make some guesses about where

56
00:02:38,269 --> 00:02:42,319
it's going the goal of this talk is to

57
00:02:42,319 --> 00:02:44,569
give you a sense of where you are in the

58
00:02:44,569 --> 00:02:47,930
landscape of JavaScript and where your

59
00:02:47,930 --> 00:02:50,030
current tools and techniques sit in that

60
00:02:50,030 --> 00:02:51,980
landscape because too many developers

61
00:02:51,980 --> 00:02:54,349
work in a sort of vacuum you don't know

62
00:02:54,349 --> 00:02:56,660
if the stuff that you're doing is a best

63
00:02:56,660 --> 00:02:59,450
practice or if it's a fad or if it's

64
00:02:59,450 --> 00:03:01,220
this outdated technique that nobody does

65
00:03:01,220 --> 00:03:03,349
anymore too many people are like I'm

66
00:03:03,349 --> 00:03:05,440
gonna do this thing and I hope it's okay

67
00:03:05,440 --> 00:03:07,970
but we know and we should be able to

68
00:03:07,970 --> 00:03:10,670
share that information with you so I

69
00:03:10,670 --> 00:03:12,139
hope you'll leave this talk feeling good

70
00:03:12,139 --> 00:03:16,510
about one thing that you're using and

71
00:03:16,510 --> 00:03:18,500
realizing it's time to move away from

72
00:03:18,500 --> 00:03:20,030
one other thing that you're using and

73
00:03:20,030 --> 00:03:22,280
also curious and excited about learning

74
00:03:22,280 --> 00:03:25,730
one new thing but before I say all of

75
00:03:25,730 --> 00:03:27,560
this stuff it's worth asking how we know

76
00:03:27,560 --> 00:03:29,810
all of this stuff I have three main

77
00:03:29,810 --> 00:03:31,880
sources first the NPM registry logs

78
00:03:31,880 --> 00:03:34,069
every time you download a package we see

79
00:03:34,069 --> 00:03:36,829
it happen they contain an enormous

80
00:03:36,829 --> 00:03:38,120
amount of information about what

81
00:03:38,120 --> 00:03:41,389
JavaScript developers are up to second

82
00:03:41,389 --> 00:03:42,970
we went out and asked people directly

83
00:03:42,970 --> 00:03:46,040
two years ago we did a survey of 16,000

84
00:03:46,040 --> 00:03:47,930
JavaScript developers and last year we

85
00:03:47,930 --> 00:03:50,450
did a bigger one of 33,000 JavaScript

86
00:03:50,450 --> 00:03:51,739
developers and asked you directly like

87
00:03:51,739 --> 00:03:54,980
what are you using and why and I also

88
00:03:54,980 --> 00:03:56,359
supplemented and double-checked our

89
00:03:56,359 --> 00:03:58,010
numbers using the excellent state of

90
00:03:58,010 --> 00:04:00,319
JavaScript survey run by independent

91
00:04:00,319 --> 00:04:02,720
members of the community incidentally

92
00:04:02,720 --> 00:04:04,849
while this talk is strictly about

93
00:04:04,849 --> 00:04:06,440
JavaScript if you are interested in

94
00:04:06,440 --> 00:04:08,870
warren CSS the same people who did the

95
00:04:08,870 --> 00:04:10,519
state of javascript survey this year for

96
00:04:10,519 --> 00:04:12,639
the first time did a state of CSS survey

97
00:04:12,639 --> 00:04:14,910
and it's full of fun

98
00:04:14,910 --> 00:04:17,459
Meishan about what is going on in the

99
00:04:17,459 --> 00:04:19,950
world of CSS and the website is an

100
00:04:19,950 --> 00:04:22,200
absolute nightmare CSS transitions

101
00:04:22,200 --> 00:04:23,760
because they just threw in everything

102
00:04:23,760 --> 00:04:27,930
that they could possibly do and before

103
00:04:27,930 --> 00:04:29,580
we dive in a few quick disclaimers some

104
00:04:29,580 --> 00:04:31,200
of what I'm presenting here is facts and

105
00:04:31,200 --> 00:04:32,340
some of what I'm presenting here is

106
00:04:32,340 --> 00:04:34,230
opinions and I've tried to be as clear

107
00:04:34,230 --> 00:04:36,480
as possible about when I'm doing which

108
00:04:36,480 --> 00:04:40,620
one of those things sometimes people see

109
00:04:40,620 --> 00:04:43,050
a graph that I present that says that a

110
00:04:43,050 --> 00:04:45,030
technology that they love is getting

111
00:04:45,030 --> 00:04:47,250
less popular and then they get mad at me

112
00:04:47,250 --> 00:04:50,940
and what I'm asking you to do is I have

113
00:04:50,940 --> 00:04:53,070
a bunch of really terrible opinions get

114
00:04:53,070 --> 00:04:55,050
mad about the opinions don't get mad

115
00:04:55,050 --> 00:04:56,910
about the graph the graph is just a

116
00:04:56,910 --> 00:04:58,590
thing you can't get mad at it it's just

117
00:04:58,590 --> 00:05:02,190
happening I don't have a horse in this

118
00:05:02,190 --> 00:05:04,140
race other than NPM I don't contribute

119
00:05:04,140 --> 00:05:05,370
to any of the projects that I'm talking

120
00:05:05,370 --> 00:05:08,310
about so I'm not I'm trying to you know

121
00:05:08,310 --> 00:05:09,930
just present the facts without any bias

122
00:05:09,930 --> 00:05:14,610
here but all facts have bias secondly a

123
00:05:14,610 --> 00:05:15,870
lot of what I'm talking about involves

124
00:05:15,870 --> 00:05:17,790
relative popularity of technologies and

125
00:05:17,790 --> 00:05:19,560
I want to make clear but just because

126
00:05:19,560 --> 00:05:21,720
the technology is popular that doesn't

127
00:05:21,720 --> 00:05:22,770
mean that I think it's the best

128
00:05:22,770 --> 00:05:24,990
technology in fact I don't even know

129
00:05:24,990 --> 00:05:28,530
what the best technology means Evan you

130
00:05:28,530 --> 00:05:30,270
and his talk yesterday gave a really

131
00:05:30,270 --> 00:05:32,340
great description of the sort of space

132
00:05:32,340 --> 00:05:34,380
that frameworks in particular live in

133
00:05:34,380 --> 00:05:35,700
it's this sort of multi-dimensional

134
00:05:35,700 --> 00:05:37,860
space where you can't even know what's

135
00:05:37,860 --> 00:05:40,380
best there is no best there's just you

136
00:05:40,380 --> 00:05:41,820
know trade-offs that you make in all

137
00:05:41,820 --> 00:05:46,980
sorts of directions so for technology

138
00:05:46,980 --> 00:05:49,919
popularity is useful if there are a lot

139
00:05:49,919 --> 00:05:51,450
of people using your technology then

140
00:05:51,450 --> 00:05:53,010
there gonna be a lot of blog posts a lot

141
00:05:53,010 --> 00:05:54,840
of tutorials a lot of questions answered

142
00:05:54,840 --> 00:05:57,060
on Stack Overflow there will be a lot of

143
00:05:57,060 --> 00:06:00,030
people helping find and fix bugs so if

144
00:06:00,030 --> 00:06:01,290
you work with something that's very

145
00:06:01,290 --> 00:06:03,410
popular it often makes your work easier

146
00:06:03,410 --> 00:06:05,520
regardless of you know how good that

147
00:06:05,520 --> 00:06:07,740
technology is by you know whatever

148
00:06:07,740 --> 00:06:10,550
definition of good you want to use so

149
00:06:10,550 --> 00:06:12,810
popularity is what I have data about and

150
00:06:12,810 --> 00:06:15,060
popularity is what I'm talking about but

151
00:06:15,060 --> 00:06:16,320
I'm not saying that things are better

152
00:06:16,320 --> 00:06:20,250
and finally I really love this stuff and

153
00:06:20,250 --> 00:06:22,110
I'd have to get very excited about this

154
00:06:22,110 --> 00:06:24,180
stuff and when I get excited I cursed

155
00:06:24,180 --> 00:06:25,800
like a drunken sailor

156
00:06:25,800 --> 00:06:27,659
and there's just nothing I intend to do

157
00:06:27,659 --> 00:06:29,190
about that so you're all just going to

158
00:06:29,190 --> 00:06:33,389
have to deal so who are we

159
00:06:33,389 --> 00:06:35,129
JavaScript developers the answer is

160
00:06:35,129 --> 00:06:37,500
we're pretty much like all developers at

161
00:06:37,500 --> 00:06:39,930
this point when we said that when we set

162
00:06:39,930 --> 00:06:41,340
out to get these questions I was like oh

163
00:06:41,340 --> 00:06:42,840
well I'm expecting JavaScript developers

164
00:06:42,840 --> 00:06:44,280
to be different demographically in some

165
00:06:44,280 --> 00:06:46,080
way maybe we're younger maybe we work on

166
00:06:46,080 --> 00:06:48,330
different stuff now it turns out that

167
00:06:48,330 --> 00:06:50,849
almost everybody who is a programmer

168
00:06:50,849 --> 00:06:53,250
gets to do JavaScript these days and so

169
00:06:53,250 --> 00:06:55,110
we look like all other programmers we

170
00:06:55,110 --> 00:06:56,729
have the same age distribution the same

171
00:06:56,729 --> 00:06:59,250
levels of education we work in every

172
00:06:59,250 --> 00:07:00,840
industry and in every country in the

173
00:07:00,840 --> 00:07:02,580
world and the reason is there are just

174
00:07:02,580 --> 00:07:04,740
so many of us there are 11 million

175
00:07:04,740 --> 00:07:08,819
JavaScript developers in 2019 and those

176
00:07:08,819 --> 00:07:11,129
11 million developers are using more

177
00:07:11,129 --> 00:07:13,199
open source software than any other

178
00:07:13,199 --> 00:07:15,060
language community has ever used before

179
00:07:15,060 --> 00:07:17,940
the NPM registry is the largest

180
00:07:17,940 --> 00:07:19,919
repository of open-source software of

181
00:07:19,919 --> 00:07:23,159
any kind and by any measure by number of

182
00:07:23,159 --> 00:07:24,930
modules by lines of code by number of

183
00:07:24,930 --> 00:07:26,460
users whatever measure you want to pick

184
00:07:26,460 --> 00:07:28,530
it is more than twice as big as the

185
00:07:28,530 --> 00:07:30,830
next-biggest registry of course

186
00:07:30,830 --> 00:07:32,819
everybody knows that javascript in

187
00:07:32,819 --> 00:07:34,710
particular has a tendency to use lots of

188
00:07:34,710 --> 00:07:36,120
modules so maybe that's not a fair

189
00:07:36,120 --> 00:07:39,090
comparison so does having a really big

190
00:07:39,090 --> 00:07:40,949
registry translate to any other kind of

191
00:07:40,949 --> 00:07:43,740
activity on github javascript is the

192
00:07:43,740 --> 00:07:44,969
largest language by a number of

193
00:07:44,969 --> 00:07:46,680
repositories by a number of issues and

194
00:07:46,680 --> 00:07:48,419
by number of lines of code and it has

195
00:07:48,419 --> 00:07:51,449
been for seven years in a row on Stack

196
00:07:51,449 --> 00:07:53,909
Overflow they did a survey of 80,000

197
00:07:53,909 --> 00:07:56,310
developers and JavaScript was again the

198
00:07:56,310 --> 00:07:58,710
most popular language with 68% of all

199
00:07:58,710 --> 00:08:00,779
developers in their survey saying that

200
00:08:00,779 --> 00:08:02,849
they use it of course you're all at JS

201
00:08:02,849 --> 00:08:04,020
console you probably knew that

202
00:08:04,020 --> 00:08:06,449
JavaScript was pretty popular but here

203
00:08:06,449 --> 00:08:07,169
is the truth

204
00:08:07,169 --> 00:08:09,210
javascript is the most popular

205
00:08:09,210 --> 00:08:11,069
programming language in the world today

206
00:08:11,069 --> 00:08:12,719
and because there are more developers in

207
00:08:12,719 --> 00:08:14,639
the world today than ever before it is

208
00:08:14,639 --> 00:08:16,800
the most popular programming language

209
00:08:16,800 --> 00:08:20,729
that has ever existed as JavaScript

210
00:08:20,729 --> 00:08:22,860
community continues to grow the

211
00:08:22,860 --> 00:08:24,960
JavaScript community is changing the

212
00:08:24,960 --> 00:08:26,610
JavaScript the one thing that we noticed

213
00:08:26,610 --> 00:08:29,069
that's changed about us between our

214
00:08:29,069 --> 00:08:31,050
survey in 2018 and the one we did last

215
00:08:31,050 --> 00:08:32,729
year this year is that JavaScript

216
00:08:32,729 --> 00:08:34,740
developers are getting more experienced

217
00:08:34,740 --> 00:08:36,990
they've been writing JavaScript for

218
00:08:36,990 --> 00:08:39,640
longer we especially noticed this with

219
00:08:39,640 --> 00:08:43,630
p.m. itself a year ago half of NPM users

220
00:08:43,630 --> 00:08:45,400
were what we consider new they'd been

221
00:08:45,400 --> 00:08:47,080
using NPM for less than two years and

222
00:08:47,080 --> 00:08:51,760
this year only 36% are round about 2014

223
00:08:51,760 --> 00:08:54,310
and 2015 there was a massive spike in

224
00:08:54,310 --> 00:08:56,290
the number of NPM users it was when the

225
00:08:56,290 --> 00:08:58,300
existing pool of JavaScript developers

226
00:08:58,300 --> 00:09:00,580
sort of latched on to the idea that NPM

227
00:09:00,580 --> 00:09:01,870
was a thing that they should use and

228
00:09:01,870 --> 00:09:06,880
they all showed up at once and today the

229
00:09:06,880 --> 00:09:09,160
number of new NPM users and the number

230
00:09:09,160 --> 00:09:11,620
of new JavaScript users is pretty much

231
00:09:11,620 --> 00:09:13,570
the same basically anybody who learns

232
00:09:13,570 --> 00:09:15,820
JavaScript learns NPM at the same time

233
00:09:15,820 --> 00:09:17,860
and all of the people who had learned

234
00:09:17,860 --> 00:09:20,350
JavaScript before NPM came along have at

235
00:09:20,350 --> 00:09:24,100
this point pretty much all adopted it so

236
00:09:24,100 --> 00:09:26,380
now we believe that about 99% of

237
00:09:26,380 --> 00:09:28,600
JavaScript developers use NPM that's

238
00:09:28,600 --> 00:09:30,070
part of why we have so much information

239
00:09:30,070 --> 00:09:33,190
and it's part of why in this talk I use

240
00:09:33,190 --> 00:09:36,580
the terms like NPM users or respondents

241
00:09:36,580 --> 00:09:38,650
or JavaScript developers as pretty much

242
00:09:38,650 --> 00:09:40,600
interchangeable because they pretty much

243
00:09:40,600 --> 00:09:43,930
are this ever-growing pool of

244
00:09:43,930 --> 00:09:45,370
increasingly experienced JavaScript

245
00:09:45,370 --> 00:09:47,380
developers means that we've seen a shift

246
00:09:47,380 --> 00:09:50,470
in what people care about we knew from

247
00:09:50,470 --> 00:09:52,300
analyzing last year's data when we cut

248
00:09:52,300 --> 00:09:54,790
people up by how long they've been doing

249
00:09:54,790 --> 00:09:57,670
JavaScript that more experienced

250
00:09:57,670 --> 00:09:59,260
developers care more about best

251
00:09:59,260 --> 00:10:01,300
practices they knew do more bundling

252
00:10:01,300 --> 00:10:02,560
they do more lending they care more

253
00:10:02,560 --> 00:10:04,450
about security the care about they care

254
00:10:04,450 --> 00:10:06,880
more about everything and because all of

255
00:10:06,880 --> 00:10:08,560
javascript is becoming more experienced

256
00:10:08,560 --> 00:10:10,090
that's now true of all JavaScript

257
00:10:10,090 --> 00:10:15,100
developers as a whole since last year's

258
00:10:15,100 --> 00:10:16,480
survey the number of people concerned

259
00:10:16,480 --> 00:10:18,220
about the security of their open source

260
00:10:18,220 --> 00:10:20,920
has increased in the last two years

261
00:10:20,920 --> 00:10:23,440
NPM has introduced two-factor off to

262
00:10:23,440 --> 00:10:26,350
help protect package publishers from

263
00:10:26,350 --> 00:10:29,110
having their account stolen as well as a

264
00:10:29,110 --> 00:10:30,700
security team and a bunch of automation

265
00:10:30,700 --> 00:10:33,070
behind the scenes to detect and flag

266
00:10:33,070 --> 00:10:34,690
malicious packages but malicious

267
00:10:34,690 --> 00:10:36,670
packages while they get a lot of press

268
00:10:36,670 --> 00:10:39,160
they're not really the biggest source of

269
00:10:39,160 --> 00:10:40,990
security vulnerabilities the biggest

270
00:10:40,990 --> 00:10:42,520
source of security vulnerabilities is

271
00:10:42,520 --> 00:10:43,930
accidental vulnerabilities

272
00:10:43,930 --> 00:10:46,240
vulnerabilities caused by you using a

273
00:10:46,240 --> 00:10:47,740
package with a known security

274
00:10:47,740 --> 00:10:49,630
vulnerability and not updating your

275
00:10:49,630 --> 00:10:53,020
dependencies so last year we introduced

276
00:10:53,020 --> 00:10:53,540
the end

277
00:10:53,540 --> 00:10:56,449
audit command which will find and fix

278
00:10:56,449 --> 00:10:57,649
security vulnerabilities in your

279
00:10:57,649 --> 00:10:59,509
application by upgrading to a more

280
00:10:59,509 --> 00:11:02,240
secure version of that package in the

281
00:11:02,240 --> 00:11:03,230
last 30 days

282
00:11:03,230 --> 00:11:06,199
we have performed more than 335 million

283
00:11:06,199 --> 00:11:08,149
of these audits because they happen

284
00:11:08,149 --> 00:11:13,069
every time you run NPM install if you

285
00:11:13,069 --> 00:11:14,329
think that your company should be doing

286
00:11:14,329 --> 00:11:15,949
more about JavaScript security and it

287
00:11:15,949 --> 00:11:18,380
probably should then you'll forgive me

288
00:11:18,380 --> 00:11:20,360
if I spend a little time mentioning NPM

289
00:11:20,360 --> 00:11:23,630
Enterprise NPM Enterprise gives you your

290
00:11:23,630 --> 00:11:25,819
own registry on your own domain with

291
00:11:25,819 --> 00:11:28,550
your own NPM website where you can see

292
00:11:28,550 --> 00:11:29,660
what you where you're devs have

293
00:11:29,660 --> 00:11:30,800
published you can publish your own

294
00:11:30,800 --> 00:11:32,660
packages you can search within all of

295
00:11:32,660 --> 00:11:34,459
your company's Java scripts you can see

296
00:11:34,459 --> 00:11:36,680
full package pages and read Me's it's

297
00:11:36,680 --> 00:11:38,360
just like having your own little NPM

298
00:11:38,360 --> 00:11:40,040
universe inside of your company it

299
00:11:40,040 --> 00:11:42,019
includes single sign-on support and

300
00:11:42,019 --> 00:11:44,000
extra security and compliance reporting

301
00:11:44,000 --> 00:11:45,230
which is the kind of stuff that big

302
00:11:45,230 --> 00:11:47,329
companies need basically if you are a

303
00:11:47,329 --> 00:11:49,579
big company you should probably be using

304
00:11:49,579 --> 00:11:51,050
it and if you are a smaller company we

305
00:11:51,050 --> 00:11:52,220
have a company we have a product called

306
00:11:52,220 --> 00:11:54,350
orgs which does many of the same things

307
00:11:54,350 --> 00:11:57,769
and is a lot cheaper so back to the

308
00:11:57,769 --> 00:11:59,510
survey data after that terrible terrible

309
00:11:59,510 --> 00:12:02,240
sales pitch

310
00:12:02,240 --> 00:12:05,329
I was wearing the rainbow shirt and

311
00:12:05,329 --> 00:12:07,399
there's rainbow unicorns on the stage

312
00:12:07,399 --> 00:12:10,160
and I have been for the entire three

313
00:12:10,160 --> 00:12:13,339
days I've been telling myself I'm gonna

314
00:12:13,339 --> 00:12:14,930
do some of this talk while sitting on

315
00:12:14,930 --> 00:12:16,610
the damn unicorn so that's gonna be this

316
00:12:16,610 --> 00:12:21,589
section so another aspect of our

317
00:12:21,589 --> 00:12:23,720
increasingly experienced user base is

318
00:12:23,720 --> 00:12:26,000
that people actually care about the

319
00:12:26,000 --> 00:12:28,220
software licenses that they use that was

320
00:12:28,220 --> 00:12:30,380
kind of a surprise because like people

321
00:12:30,380 --> 00:12:32,480
think of JavaScript developers as being

322
00:12:32,480 --> 00:12:34,130
Cowboys who just like throw in

323
00:12:34,130 --> 00:12:36,230
there without looking at it but it turns

324
00:12:36,230 --> 00:12:39,260
out that 58% of JavaScript developers

325
00:12:39,260 --> 00:12:41,870
say that the software license effects

326
00:12:41,870 --> 00:12:43,850
their decision to use an open-source

327
00:12:43,850 --> 00:12:47,240
package and 55% of those people say that

328
00:12:47,240 --> 00:12:48,889
their company actively prevents them

329
00:12:48,889 --> 00:12:51,199
from using certain software licenses so

330
00:12:51,199 --> 00:12:53,420
overall 29 percent of people are

331
00:12:53,420 --> 00:12:55,310
prohibited from using certain licenses

332
00:12:55,310 --> 00:12:58,040
what license is exactly well

333
00:12:58,040 --> 00:13:00,800
unsurprisingly the GPL and the a GPL are

334
00:13:00,800 --> 00:13:02,839
unpopular because of the restrictions

335
00:13:02,839 --> 00:13:04,399
that a place on commercial development

336
00:13:04,399 --> 00:13:06,769
but bigger than those was

337
00:13:06,769 --> 00:13:09,800
nice licenses basically anybody who

338
00:13:09,800 --> 00:13:11,989
cares about licenses has to hire a

339
00:13:11,989 --> 00:13:13,850
lawyer to tell them which licenses are

340
00:13:13,850 --> 00:13:14,449
okay

341
00:13:14,449 --> 00:13:16,069
so if you use a license that they've

342
00:13:16,069 --> 00:13:17,989
never heard of they have to go back to

343
00:13:17,989 --> 00:13:19,519
the lawyer and pay the lawyer more money

344
00:13:19,519 --> 00:13:22,160
nobody wants to do that so if you're

345
00:13:22,160 --> 00:13:24,649
releasing open source software by all

346
00:13:24,649 --> 00:13:26,839
means include some kind of license but

347
00:13:26,839 --> 00:13:28,910
stick to one of the big popular licenses

348
00:13:28,910 --> 00:13:30,410
because otherwise people will just go

349
00:13:30,410 --> 00:13:32,809
this license is too weird I will not use

350
00:13:32,809 --> 00:13:35,149
it a really great example of that was

351
00:13:35,149 --> 00:13:37,549
Facebook tried to change the license

352
00:13:37,549 --> 00:13:40,089
that react is licensed under and like

353
00:13:40,089 --> 00:13:43,489
react a very popular Facebook very large

354
00:13:43,489 --> 00:13:46,009
company but even they could not get past

355
00:13:46,009 --> 00:13:48,079
the battery of annoyed lawyers going no

356
00:13:48,079 --> 00:13:49,790
we do not want to have to figure this

357
00:13:49,790 --> 00:13:55,249
out again go back to MIT and the final

358
00:13:55,249 --> 00:13:56,600
aspect of who we are that I want to

359
00:13:56,600 --> 00:13:58,970
touch on is a consequence of how

360
00:13:58,970 --> 00:14:01,429
ubiquitous JavaScript has become which

361
00:14:01,429 --> 00:14:03,860
is that 25% of JavaScript developers

362
00:14:03,860 --> 00:14:06,049
don't consider JavaScript to be their

363
00:14:06,049 --> 00:14:08,779
primary language because javascript is

364
00:14:08,779 --> 00:14:10,699
so popular it's becoming escapable and

365
00:14:10,699 --> 00:14:12,049
because it's inescapable there's a mean

366
00:14:12,049 --> 00:14:13,279
it means that there's a lot of people

367
00:14:13,279 --> 00:14:15,679
who program javascript who are doing so

368
00:14:15,679 --> 00:14:18,049
because they have to not because they

369
00:14:18,049 --> 00:14:20,299
want to and that is going to show up in

370
00:14:20,299 --> 00:14:25,459
a bunch of places in this data so what

371
00:14:25,459 --> 00:14:26,720
are these other languages written by

372
00:14:26,720 --> 00:14:28,639
developers who don't who Brent don't

373
00:14:28,639 --> 00:14:30,170
primarily write JavaScript well the top

374
00:14:30,170 --> 00:14:32,269
of the list is typescript typescript is

375
00:14:32,269 --> 00:14:33,619
an interesting case and I'm gonna talk

376
00:14:33,619 --> 00:14:36,799
more about it in a bit but there's also

377
00:14:36,799 --> 00:14:38,839
lots of Python and Java and C and C

378
00:14:38,839 --> 00:14:42,290
sharp in there and we'll see the effect

379
00:14:42,290 --> 00:14:43,429
that that's having later interestingly

380
00:14:43,429 --> 00:14:45,860
12% of JavaScript developers say that

381
00:14:45,860 --> 00:14:47,360
javascript is the only language they

382
00:14:47,360 --> 00:14:49,759
write it's just all JavaScript all the

383
00:14:49,759 --> 00:14:52,970
time for 12% of you but 88% of you are

384
00:14:52,970 --> 00:14:56,360
writing something else so now we've

385
00:14:56,360 --> 00:14:58,790
covered who we are we are all over the

386
00:14:58,790 --> 00:15:01,549
world we are every age and experience we

387
00:15:01,549 --> 00:15:03,230
are increasingly sophisticated and we

388
00:15:03,230 --> 00:15:04,939
care more about licensing and security

389
00:15:04,939 --> 00:15:07,489
than we used to where are we writing all

390
00:15:07,489 --> 00:15:09,379
of this javascript well the answer is

391
00:15:09,379 --> 00:15:11,860
every goddamn place you can imagine

392
00:15:11,860 --> 00:15:15,769
first and most obviously is browsers 97%

393
00:15:15,769 --> 00:15:18,769
of us are writing code for browsers 77%

394
00:15:18,769 --> 00:15:20,660
of us are also writing JavaScript for

395
00:15:20,660 --> 00:15:23,240
servus so noches is obviously still a

396
00:15:23,240 --> 00:15:25,220
big part of the JavaScript's community

397
00:15:25,220 --> 00:15:27,379
but there are two big surprises in here

398
00:15:27,379 --> 00:15:30,800
and the first one is native apps 46% of

399
00:15:30,800 --> 00:15:32,660
JavaScript developers are writing native

400
00:15:32,660 --> 00:15:35,930
apps and 13% of us are doing embedded as

401
00:15:35,930 --> 00:15:37,910
I'm going to dig into all of these

402
00:15:37,910 --> 00:15:39,430
numbers because they're fascinating

403
00:15:39,430 --> 00:15:42,949
first off when people write for browsers

404
00:15:42,949 --> 00:15:45,259
do they target the mobile web or the

405
00:15:45,259 --> 00:15:46,100
desktop web

406
00:15:46,100 --> 00:15:48,199
well the overwhelming majority 72%

407
00:15:48,199 --> 00:15:50,870
target both but despite all of our talk

408
00:15:50,870 --> 00:15:52,790
about mobile first a vanishingly small

409
00:15:52,790 --> 00:15:55,120
number of people target only mobile and

410
00:15:55,120 --> 00:15:57,709
27% of us are getting away without

411
00:15:57,709 --> 00:15:59,870
thinking about mobile at all that is

412
00:15:59,870 --> 00:16:01,970
probably a legitimate number because

413
00:16:01,970 --> 00:16:03,709
there's lots of applications we're just

414
00:16:03,709 --> 00:16:05,329
never gonna be used on a phone like it's

415
00:16:05,329 --> 00:16:07,310
some internal app admin application like

416
00:16:07,310 --> 00:16:08,449
no one's ever gonna be running that on

417
00:16:08,449 --> 00:16:09,639
their phone

418
00:16:09,639 --> 00:16:13,189
but let's talk about native apps 46% of

419
00:16:13,189 --> 00:16:14,959
JavaScript developers are writing native

420
00:16:14,959 --> 00:16:15,379
apps

421
00:16:15,379 --> 00:16:18,769
by a native app I mean an application

422
00:16:18,769 --> 00:16:21,079
that runs directly on your desktop or

423
00:16:21,079 --> 00:16:23,269
your phone I don't mean like you know

424
00:16:23,269 --> 00:16:25,370
it's not a shortcut that's you know

425
00:16:25,370 --> 00:16:27,230
actually a web app it's being either

426
00:16:27,230 --> 00:16:29,240
transpiled or it's running directly with

427
00:16:29,240 --> 00:16:30,920
full access to the file system like an

428
00:16:30,920 --> 00:16:33,139
electron we were very careful about how

429
00:16:33,139 --> 00:16:34,819
we phrased this question to make sure

430
00:16:34,819 --> 00:16:36,920
that that was what people were answering

431
00:16:36,920 --> 00:16:38,720
about this year because when we asked it

432
00:16:38,720 --> 00:16:40,790
two years ago we used this ridiculously

433
00:16:40,790 --> 00:16:42,230
vague language and everybody was like

434
00:16:42,230 --> 00:16:43,819
well sometimes people look at it on

435
00:16:43,819 --> 00:16:48,740
mobile so it's a mobile app anyway I'm a

436
00:16:48,740 --> 00:16:52,490
very bad statistician anyway where are

437
00:16:52,490 --> 00:16:54,560
we writing these native apps as you can

438
00:16:54,560 --> 00:16:57,290
see the biggest group is mobile devs 35%

439
00:16:57,290 --> 00:16:58,459
of respondents said that they are

440
00:16:58,459 --> 00:17:00,800
writing native mobile apps that's of all

441
00:17:00,800 --> 00:17:02,990
JavaScript developers 35% are writing

442
00:17:02,990 --> 00:17:05,659
native mobile apps and 26% of

443
00:17:05,659 --> 00:17:07,429
respondents are writing native desktop

444
00:17:07,429 --> 00:17:08,030
agz

445
00:17:08,030 --> 00:17:10,669
apps and a big chunk are doing both so

446
00:17:10,669 --> 00:17:13,240
what are they using to do all this stuff

447
00:17:13,240 --> 00:17:16,069
amongst the desktop developers 26% of

448
00:17:16,069 --> 00:17:17,659
devs say that they write native desktop

449
00:17:17,659 --> 00:17:19,640
apps and we have a bit of a puzzle here

450
00:17:19,640 --> 00:17:22,760
because most of what we think of as

451
00:17:22,760 --> 00:17:25,010
being desktop application development in

452
00:17:25,010 --> 00:17:27,409
JavaScript happens an electron but only

453
00:17:27,409 --> 00:17:29,270
21% of people say that they use

454
00:17:29,270 --> 00:17:31,820
electrons so there's 5% who are writing

455
00:17:31,820 --> 00:17:33,710
native desktop apps but not using

456
00:17:33,710 --> 00:17:34,380
electron

457
00:17:34,380 --> 00:17:35,940
I don't know what they're using if you

458
00:17:35,940 --> 00:17:39,110
know what they're using please tell me

459
00:17:39,110 --> 00:17:43,020
on the native mobile app side I measured

460
00:17:43,020 --> 00:17:44,910
the popularity of frameworks for native

461
00:17:44,910 --> 00:17:46,440
mobile apps I'm gonna explain how I

462
00:17:46,440 --> 00:17:48,000
measured this in a second but for the

463
00:17:48,000 --> 00:17:50,370
moment just believe me that green line

464
00:17:50,370 --> 00:17:52,350
is all native native mobile app

465
00:17:52,350 --> 00:17:54,330
development as you can see it's staying

466
00:17:54,330 --> 00:17:56,130
pretty much constant but what's happened

467
00:17:56,130 --> 00:17:58,230
is it's fragmented Cordova used to be

468
00:17:58,230 --> 00:17:59,700
the only game in town that's the yellow

469
00:17:59,700 --> 00:18:03,809
line but it is its shares going down in

470
00:18:03,809 --> 00:18:05,400
favor of the red line which is react

471
00:18:05,400 --> 00:18:08,490
native now they're both equal at about

472
00:18:08,490 --> 00:18:13,380
19 percent of JavaScript developers but

473
00:18:13,380 --> 00:18:14,730
if you're using some other framework to

474
00:18:14,730 --> 00:18:16,169
do native mobile app development please

475
00:18:16,169 --> 00:18:18,720
tell me about it the final where

476
00:18:18,720 --> 00:18:20,909
question is about server side apps where

477
00:18:20,909 --> 00:18:23,970
are we deploying them so 77% of us are

478
00:18:23,970 --> 00:18:25,020
writing server side apps and

479
00:18:25,020 --> 00:18:27,030
unsurprisingly docker and other

480
00:18:27,030 --> 00:18:29,370
container applications like kubernetes

481
00:18:29,370 --> 00:18:31,470
are everybody's jam everybody is

482
00:18:31,470 --> 00:18:34,860
deploying that way these days but

483
00:18:34,860 --> 00:18:37,230
deployment platforms like Heroku and

484
00:18:37,230 --> 00:18:38,760
Neto Phi and stuff like that are

485
00:18:38,760 --> 00:18:42,630
surprisingly popular and VMs are a

486
00:18:42,630 --> 00:18:44,549
surprisingly unpopular choice I don't

487
00:18:44,549 --> 00:18:46,020
know if I'm just old school but I sort

488
00:18:46,020 --> 00:18:47,309
of think of VMs as being like the

489
00:18:47,309 --> 00:18:49,110
default way that you deploy software but

490
00:18:49,110 --> 00:18:51,840
if they're not anymore but the real

491
00:18:51,840 --> 00:18:53,760
surprise in this number in these numbers

492
00:18:53,760 --> 00:18:56,700
was service server lists has left out of

493
00:18:56,700 --> 00:18:58,650
the sort of early adopter category and

494
00:18:58,650 --> 00:19:01,110
at 33% this is a mainstream technology

495
00:19:01,110 --> 00:19:05,490
now so now let's talk about what we're

496
00:19:05,490 --> 00:19:08,460
using to do all of this as with the who

497
00:19:08,460 --> 00:19:10,230
in the where sections this I'm going to

498
00:19:10,230 --> 00:19:13,679
try and keep as factual as possible to

499
00:19:13,679 --> 00:19:15,659
measure this stuff I use a metric called

500
00:19:15,659 --> 00:19:17,640
share of registry it's a very useful

501
00:19:17,640 --> 00:19:19,080
metric but it's also a somewhat

502
00:19:19,080 --> 00:19:20,610
confusing metric it was the one that I

503
00:19:20,610 --> 00:19:23,010
was just using so I'm going to explain

504
00:19:23,010 --> 00:19:27,390
it briefly this is a graph of weekly

505
00:19:27,390 --> 00:19:29,370
downloads from the NPM registry at the

506
00:19:29,370 --> 00:19:31,620
moment we do a little under 12 billion

507
00:19:31,620 --> 00:19:34,350
downloads every seven days and that

508
00:19:34,350 --> 00:19:37,350
number has grown by 26 thousand percent

509
00:19:37,350 --> 00:19:40,080
since NPM became a company and that

510
00:19:40,080 --> 00:19:42,840
presents something of a problem first it

511
00:19:42,840 --> 00:19:44,490
presents something of a scaling problem

512
00:19:44,490 --> 00:19:46,169
but it also presents something of a

513
00:19:46,169 --> 00:19:47,669
problem if you're trying to measure the

514
00:19:47,669 --> 00:19:48,250
popular

515
00:19:48,250 --> 00:19:50,800
of stuff because download numbers always

516
00:19:50,800 --> 00:19:53,830
go up download numbers go up for

517
00:19:53,830 --> 00:19:56,980
everything here's a graph of downloads

518
00:19:56,980 --> 00:19:58,510
of some major front-end frameworks

519
00:19:58,510 --> 00:20:00,820
they're all growing pretty fast in fact

520
00:20:00,820 --> 00:20:03,250
everything in the registry is constantly

521
00:20:03,250 --> 00:20:04,810
growing in terms of download numbers

522
00:20:04,810 --> 00:20:06,460
even the shittiest package in the

523
00:20:06,460 --> 00:20:08,020
registry is getting more and more

524
00:20:08,020 --> 00:20:10,060
downloads every week just because more

525
00:20:10,060 --> 00:20:11,770
and more people show up every week and

526
00:20:11,770 --> 00:20:13,300
are like I don't know I'll download evil

527
00:20:13,300 --> 00:20:16,550
package 1 this seems fine

528
00:20:16,560 --> 00:20:19,870
so using absolute growth of downloads is

529
00:20:19,870 --> 00:20:21,760
not a good way of measuring popularity

530
00:20:21,760 --> 00:20:23,410
since Ted we're using relative

531
00:20:23,410 --> 00:20:25,540
popularity as a percentage of all

532
00:20:25,540 --> 00:20:27,520
downloads and that's what we call share

533
00:20:27,520 --> 00:20:30,520
of registry so here are all the same

534
00:20:30,520 --> 00:20:32,830
packages again using share of registry

535
00:20:32,830 --> 00:20:34,690
as the metric instead and suddenly

536
00:20:34,690 --> 00:20:36,610
what's going on is much clearer some

537
00:20:36,610 --> 00:20:38,230
stuff is going up some stuff is staying

538
00:20:38,230 --> 00:20:40,240
flat and some stuff is going down but

539
00:20:40,240 --> 00:20:42,370
it's important to remember that going

540
00:20:42,370 --> 00:20:46,300
down is only in relative terms so it

541
00:20:46,300 --> 00:20:47,680
just means that you're not growing as

542
00:20:47,680 --> 00:20:50,110
fast as everything else if you stay flat

543
00:20:50,110 --> 00:20:52,050
on this graph that means that you grew

544
00:20:52,050 --> 00:20:54,910
26,000 percent if you're going up on

545
00:20:54,910 --> 00:20:57,850
this graph you grew faster than 26,000

546
00:20:57,850 --> 00:21:00,220
percent so if you're going up at all on

547
00:21:00,220 --> 00:21:02,040
this graph then you are really growing

548
00:21:02,040 --> 00:21:05,820
so let's dig into these actual numbers

549
00:21:05,820 --> 00:21:08,350
the story of front-end frameworks in

550
00:21:08,350 --> 00:21:11,590
2019 is very simple and it is that react

551
00:21:11,590 --> 00:21:15,520
has conquered the web react has more

552
00:21:15,520 --> 00:21:17,260
than four times as many downloads as the

553
00:21:17,260 --> 00:21:19,270
next most popular framework and there

554
00:21:19,270 --> 00:21:20,830
has never been anything like this

555
00:21:20,830 --> 00:21:23,890
popular in front-end frameworks part of

556
00:21:23,890 --> 00:21:25,830
the reason for that is because react

557
00:21:25,830 --> 00:21:28,120
isn't just a front-end framework in fact

558
00:21:28,120 --> 00:21:30,010
it's not even a front-end framework it's

559
00:21:30,010 --> 00:21:31,450
just a component model and that

560
00:21:31,450 --> 00:21:33,520
component model is used by web apps but

561
00:21:33,520 --> 00:21:35,890
as we saw with the native apps it's also

562
00:21:35,890 --> 00:21:38,200
used in react native for mobile and it's

563
00:21:38,200 --> 00:21:39,670
used in electron for desktop

564
00:21:39,670 --> 00:21:42,670
applications but all this is just the

565
00:21:42,670 --> 00:21:44,620
Downloads data what about the survey

566
00:21:44,620 --> 00:21:47,050
where we asked actual people in our

567
00:21:47,050 --> 00:21:50,380
survey 63% of JavaScript developers say

568
00:21:50,380 --> 00:21:52,960
that they use react but using is a vague

569
00:21:52,960 --> 00:21:54,670
term but what you know do you just use

570
00:21:54,670 --> 00:21:56,380
it sometimes are using it you know just

571
00:21:56,380 --> 00:21:59,050
to try stuff out so we asked a more

572
00:21:59,050 --> 00:22:01,570
specific question 57% of people say that

573
00:22:01,570 --> 00:22:01,870
they

574
00:22:01,870 --> 00:22:04,180
right reacts themselves 6% say they use

575
00:22:04,180 --> 00:22:06,100
react written by other people but more

576
00:22:06,100 --> 00:22:09,280
interestingly 15% of people say that

577
00:22:09,280 --> 00:22:11,440
they don't use react but are considering

578
00:22:11,440 --> 00:22:13,720
it which means that they're even at 63

579
00:22:13,720 --> 00:22:15,520
percent which is already an absurd

580
00:22:15,520 --> 00:22:17,620
amount of adoption there still might be

581
00:22:17,620 --> 00:22:21,250
room for react to continue to grow but

582
00:22:21,250 --> 00:22:23,290
as you saw in that graph react growth

583
00:22:23,290 --> 00:22:24,940
kind of seems like it might be slowing

584
00:22:24,940 --> 00:22:26,980
down so it's not clear what's going to

585
00:22:26,980 --> 00:22:29,890
happen next to the react to dig even

586
00:22:29,890 --> 00:22:31,720
further we asked people how much they

587
00:22:31,720 --> 00:22:35,230
write react inside the fifteen fifty

588
00:22:35,230 --> 00:22:36,960
seven percent of people who write react

589
00:22:36,960 --> 00:22:38,800
forty-nine percent said that they

590
00:22:38,800 --> 00:22:41,230
primarily write react which means 26

591
00:22:41,230 --> 00:22:43,179
percent of all NPM users are primarily

592
00:22:43,179 --> 00:22:45,070
writing react a quarter of the of

593
00:22:45,070 --> 00:22:47,020
JavaScript developers are primarily

594
00:22:47,020 --> 00:22:48,970
writing react and if you include the

595
00:22:48,970 --> 00:22:50,380
people who write at some of the time

596
00:22:50,380 --> 00:22:53,559
that means 47 percent nearly half of

597
00:22:53,559 --> 00:22:55,990
JavaScript developers are writing react

598
00:22:55,990 --> 00:22:59,080
some or most of the time there has never

599
00:22:59,080 --> 00:23:01,179
been a framework with that kind of

600
00:23:01,179 --> 00:23:03,730
adoption it is changing the way web

601
00:23:03,730 --> 00:23:06,179
development works

602
00:23:06,179 --> 00:23:08,950
moving on to some other frameworks last

603
00:23:08,950 --> 00:23:10,390
year I got into some trouble because I

604
00:23:10,390 --> 00:23:12,340
took angular version 1 and angular

605
00:23:12,340 --> 00:23:14,140
version 2 onwards and I called them both

606
00:23:14,140 --> 00:23:15,970
angular and I put them together and I

607
00:23:15,970 --> 00:23:17,470
didn't separate them out and I was

608
00:23:17,470 --> 00:23:19,450
strenuously informed that that was

609
00:23:19,450 --> 00:23:22,900
incorrect angular version 1 is now

610
00:23:22,900 --> 00:23:25,690
called angularjs angular version 2

611
00:23:25,690 --> 00:23:27,490
onwards is a completely different

612
00:23:27,490 --> 00:23:29,020
framework that has nothing to do with

613
00:23:29,020 --> 00:23:30,670
the first version and it's called

614
00:23:30,670 --> 00:23:33,790
angular I think but that is a little bit

615
00:23:33,790 --> 00:23:36,400
confusing I feel like I was justified

616
00:23:36,400 --> 00:23:38,200
and not knowing that there that there's

617
00:23:38,200 --> 00:23:40,000
two things called angular and they're

618
00:23:40,000 --> 00:23:42,190
not the same anyway

619
00:23:42,190 --> 00:23:44,650
as you can see angularjs has been in

620
00:23:44,650 --> 00:23:48,250
decline since 2016 and angular 2 plus

621
00:23:48,250 --> 00:23:51,490
has been in decline since 2017 but again

622
00:23:51,490 --> 00:23:53,470
it's important to keep in mind this is

623
00:23:53,470 --> 00:23:56,679
only in relative terms in absolute terms

624
00:23:56,679 --> 00:23:59,290
both of these frameworks have more users

625
00:23:59,290 --> 00:24:01,690
than they've ever had before in absolute

626
00:24:01,690 --> 00:24:03,490
terms both of these frameworks are still

627
00:24:03,490 --> 00:24:05,530
growing they're just not growing as fast

628
00:24:05,530 --> 00:24:07,860
as everything else in the registry

629
00:24:07,860 --> 00:24:10,030
angular remains an extremely popular

630
00:24:10,030 --> 00:24:12,850
framework 37% of NPM users are using one

631
00:24:12,850 --> 00:24:14,970
or the other version of angular

632
00:24:14,970 --> 00:24:17,190
and 29% of NPM users say that they are

633
00:24:17,190 --> 00:24:19,049
using the current version if you

634
00:24:19,049 --> 00:24:20,940
extrapolate out that means there's

635
00:24:20,940 --> 00:24:23,220
probably about 3 million people who do

636
00:24:23,220 --> 00:24:26,190
angular which is definitely nothing to

637
00:24:26,190 --> 00:24:27,809
sneeze at and probably means that it's

638
00:24:27,809 --> 00:24:31,919
not going to go anywhere so let's look

639
00:24:31,919 --> 00:24:33,570
at the next two most obvious framework

640
00:24:33,570 --> 00:24:36,059
which is view view is the only major

641
00:24:36,059 --> 00:24:38,849
framework other than react which is

642
00:24:38,849 --> 00:24:40,830
strong showing strong positive growth

643
00:24:40,830 --> 00:24:43,289
and it is very very positive share of

644
00:24:43,289 --> 00:24:45,330
registry for view has more than doubled

645
00:24:45,330 --> 00:24:47,309
in the last two years which means that

646
00:24:47,309 --> 00:24:49,460
downloads grew more than a factor of 10

647
00:24:49,460 --> 00:24:53,070
and our survey data backs this up 27% of

648
00:24:53,070 --> 00:24:55,649
NPM users say that they are using view

649
00:24:55,649 --> 00:24:58,320
which is up from 24% last year which

650
00:24:58,320 --> 00:25:00,090
means that roughly the same number of

651
00:25:00,090 --> 00:25:02,220
people who are using view as are using

652
00:25:02,220 --> 00:25:05,940
the current version of angular one thing

653
00:25:05,940 --> 00:25:07,409
that I haven't talked about so far is

654
00:25:07,409 --> 00:25:09,599
web components and part of that is that

655
00:25:09,599 --> 00:25:11,369
web components are built into browsers

656
00:25:11,369 --> 00:25:13,320
so there isn't a share of registry

657
00:25:13,320 --> 00:25:14,729
they're not downloading anything from

658
00:25:14,729 --> 00:25:17,399
NPM to use web components but the other

659
00:25:17,399 --> 00:25:18,570
reason is that they just don't seem to

660
00:25:18,570 --> 00:25:21,869
be very popular we didn't ask about them

661
00:25:21,869 --> 00:25:24,090
an NPM survey which was a mistake on my

662
00:25:24,090 --> 00:25:27,090
part the state of j/s survey allowed

663
00:25:27,090 --> 00:25:28,799
people to volunteer if they were using

664
00:25:28,799 --> 00:25:31,019
web components but less than one percent

665
00:25:31,019 --> 00:25:33,659
of web developers did so I'm not

666
00:25:33,659 --> 00:25:35,549
ignoring web components but my data on

667
00:25:35,549 --> 00:25:38,970
them is not very good at the moment the

668
00:25:38,970 --> 00:25:40,739
people who build web components like the

669
00:25:40,739 --> 00:25:42,029
people who work for browsers and build

670
00:25:42,029 --> 00:25:43,259
web components they tell me that web

671
00:25:43,259 --> 00:25:44,700
components are much more popular than I

672
00:25:44,700 --> 00:25:46,470
believe but of course they would say

673
00:25:46,470 --> 00:25:50,729
that moving from the front end to the

674
00:25:50,729 --> 00:25:52,590
back end there has been a real

675
00:25:52,590 --> 00:25:56,340
revolution previously if I was talking

676
00:25:56,340 --> 00:25:57,690
about the back end I'd have talked about

677
00:25:57,690 --> 00:26:00,690
frameworks like happy or ember and those

678
00:26:00,690 --> 00:26:01,919
things are still around and they are

679
00:26:01,919 --> 00:26:04,049
showing basically flat growth in the

680
00:26:04,049 --> 00:26:06,269
registry which is to say 25000 percent

681
00:26:06,269 --> 00:26:08,159
growth you know healthy but not

682
00:26:08,159 --> 00:26:09,629
spectacular by the standards of the

683
00:26:09,629 --> 00:26:12,749
registry but now everybody has moved to

684
00:26:12,749 --> 00:26:15,080
writing rich front-end apps those

685
00:26:15,080 --> 00:26:17,669
frameworks which are about providing

686
00:26:17,669 --> 00:26:19,559
static views they're just not as popular

687
00:26:19,559 --> 00:26:21,119
they're just not as much of a fit for

688
00:26:21,119 --> 00:26:23,999
what we're doing instead what's happened

689
00:26:23,999 --> 00:26:26,399
is that front-end framework enthusiasts

690
00:26:26,399 --> 00:26:28,080
have realized that for performance

691
00:26:28,080 --> 00:26:29,190
reasons they need to deliver

692
00:26:29,190 --> 00:26:32,460
pre-rendered HTML from the server and so

693
00:26:32,460 --> 00:26:34,049
they called it server-side rendering or

694
00:26:34,049 --> 00:26:36,269
SSR and they invented a bunch of stuff

695
00:26:36,269 --> 00:26:38,700
to do that which is to say they invented

696
00:26:38,700 --> 00:26:42,779
backends so now all of the bet all of

697
00:26:42,779 --> 00:26:44,100
the front-end frameworks are also

698
00:26:44,100 --> 00:26:47,220
back-end frameworks they provide

699
00:26:47,220 --> 00:26:48,750
collections of servers and routers that

700
00:26:48,750 --> 00:26:50,100
make it easy to build a full server

701
00:26:50,100 --> 00:26:52,890
using your favorite framework I don't

702
00:26:52,890 --> 00:26:54,750
know about you but the idea that I can

703
00:26:54,750 --> 00:26:56,190
just write a bunch of components and

704
00:26:56,190 --> 00:26:57,750
throw them into exists an existing

705
00:26:57,750 --> 00:26:59,279
framework that does all of the serving

706
00:26:59,279 --> 00:27:00,510
and parsing and stuff for me that's

707
00:27:00,510 --> 00:27:03,419
great but it's also super familiar I'm

708
00:27:03,419 --> 00:27:07,309
pretty sure that is how PHP works

709
00:27:07,309 --> 00:27:09,600
someday soon somebody is gonna like you

710
00:27:09,600 --> 00:27:11,850
know do this huge flashy launch with an

711
00:27:11,850 --> 00:27:13,769
amazing website and be like you can you

712
00:27:13,769 --> 00:27:15,690
can build a website by just ft peeing

713
00:27:15,690 --> 00:27:17,850
your react components to a server and

714
00:27:17,850 --> 00:27:20,309
then the circle will be completes and we

715
00:27:20,309 --> 00:27:24,870
will have finished reinventing PHP so

716
00:27:24,870 --> 00:27:26,429
before I talk about these new SSR

717
00:27:26,429 --> 00:27:27,000
frameworks

718
00:27:27,000 --> 00:27:28,679
it's important to note that they are all

719
00:27:28,679 --> 00:27:30,809
still pretty small here for comparison

720
00:27:30,809 --> 00:27:34,860
is Express Express is a goddamn giant of

721
00:27:34,860 --> 00:27:37,380
a package it used to be 1.5% of registry

722
00:27:37,380 --> 00:27:39,120
downloads all by itself and while the

723
00:27:39,120 --> 00:27:40,500
rest of the registry has sort of grown

724
00:27:40,500 --> 00:27:42,600
up around it it is still very very big

725
00:27:42,600 --> 00:27:44,309
all of the other frameworks that I'm

726
00:27:44,309 --> 00:27:46,110
about to talk about they are that little

727
00:27:46,110 --> 00:27:48,889
flat line at the bottom of this graph

728
00:27:48,889 --> 00:27:51,090
but when you take Express out of the

729
00:27:51,090 --> 00:27:52,980
picture the new picture is very

730
00:27:52,980 --> 00:27:55,710
interesting at the top of our list is

731
00:27:55,710 --> 00:27:58,769
Gatsby Gatsby uses react and it provides

732
00:27:58,769 --> 00:28:00,389
a whole set of tools for hooking it up

733
00:28:00,389 --> 00:28:02,010
to backends and providing easy

734
00:28:02,010 --> 00:28:04,320
deployment methods for it got to be

735
00:28:04,320 --> 00:28:06,360
snuck up on us in our previous survey we

736
00:28:06,360 --> 00:28:08,190
didn't ask about Gatsby at all and this

737
00:28:08,190 --> 00:28:10,139
year's survey 8% of people said that

738
00:28:10,139 --> 00:28:11,309
they are using Gatsby

739
00:28:11,309 --> 00:28:13,950
for comparison frameworks that we used

740
00:28:13,950 --> 00:28:17,460
to talk about like happy and and amber

741
00:28:17,460 --> 00:28:19,470
they're at like 5 percent and 4 percent

742
00:28:19,470 --> 00:28:22,380
so Gatsby being at 8 percent means that

743
00:28:22,380 --> 00:28:24,029
it is a real and serious framework that

744
00:28:24,029 --> 00:28:28,019
is showing real growth and next comes a

745
00:28:28,019 --> 00:28:30,720
trio of back-end frameworks which all

746
00:28:30,720 --> 00:28:32,490
have nearly the same name in a way that

747
00:28:32,490 --> 00:28:35,029
is not confusing or irritating at all

748
00:28:35,029 --> 00:28:39,149
first up is next Jess it's another react

749
00:28:39,149 --> 00:28:40,909
based framework

750
00:28:40,909 --> 00:28:43,580
and our survey respondents love next j/s

751
00:28:43,580 --> 00:28:46,100
about 9% of them say that they use it

752
00:28:46,100 --> 00:28:49,250
the registry downloads data gives gatsby

753
00:28:49,250 --> 00:28:50,690
the edge but it's clear that those two

754
00:28:50,690 --> 00:28:52,039
things are both very popular and pretty

755
00:28:52,039 --> 00:28:53,450
close together in terms of the number of

756
00:28:53,450 --> 00:28:56,509
users then there is Knox

757
00:28:56,509 --> 00:28:58,669
with au which is very much like next J s

758
00:28:58,669 --> 00:29:02,029
but it's for view instead 5% of devs in

759
00:29:02,029 --> 00:29:03,679
our survey say that they use it and it's

760
00:29:03,679 --> 00:29:05,840
showing similar healthy growth and then

761
00:29:05,840 --> 00:29:09,139
there's nest jeaious with an S which is

762
00:29:09,139 --> 00:29:11,179
apparently also very much like next to

763
00:29:11,179 --> 00:29:16,340
J's but it's for angular our survey

764
00:29:16,340 --> 00:29:17,779
didn't ask about it because I only found

765
00:29:17,779 --> 00:29:20,200
out about it quite recently but

766
00:29:20,200 --> 00:29:22,549
extrapolating from its download data

767
00:29:22,549 --> 00:29:24,950
probably about 2% of NPM users are using

768
00:29:24,950 --> 00:29:28,970
Ness GS so closely related to all that

769
00:29:28,970 --> 00:29:30,259
these front-end frameworks that are now

770
00:29:30,259 --> 00:29:33,289
back-end frameworks is graph QL there

771
00:29:33,289 --> 00:29:34,490
have been a couple of talks about graph

772
00:29:34,490 --> 00:29:36,019
QL at this conference it's a pretty fun

773
00:29:36,019 --> 00:29:38,330
technology it is the hot new way of

774
00:29:38,330 --> 00:29:40,519
building api's that power all of this

775
00:29:40,519 --> 00:29:43,580
stuff and as you can see graph QL score

776
00:29:43,580 --> 00:29:45,740
library and two of its most popular

777
00:29:45,740 --> 00:29:47,830
clients are all very very steadily

778
00:29:47,830 --> 00:29:50,360
climbing and share of registry and this

779
00:29:50,360 --> 00:29:51,830
climb is reflected in the survey data

780
00:29:51,830 --> 00:29:53,899
the survey data says that 22% of

781
00:29:53,899 --> 00:29:55,669
JavaScript developers are already using

782
00:29:55,669 --> 00:29:58,940
graph QL but the really interesting

783
00:29:58,940 --> 00:30:02,659
number is that half of NPM users 49% say

784
00:30:02,659 --> 00:30:04,250
they are considering using graph QL

785
00:30:04,250 --> 00:30:05,960
which means that 2019 is going to be a

786
00:30:05,960 --> 00:30:08,769
very big year for that technology and

787
00:30:08,769 --> 00:30:10,970
the final set of trend data we're going

788
00:30:10,970 --> 00:30:12,409
to look at is the hottest trend of all

789
00:30:12,409 --> 00:30:15,610
which is not writing JavaScript anymore

790
00:30:15,610 --> 00:30:18,110
remember all of those non primary

791
00:30:18,110 --> 00:30:19,610
JavaScript writers especially the ones

792
00:30:19,610 --> 00:30:21,169
coming from typed languages like Java

793
00:30:21,169 --> 00:30:23,659
and c-sharp and stuff this is how their

794
00:30:23,659 --> 00:30:26,509
influence is showing up the biggest part

795
00:30:26,509 --> 00:30:28,580
of this trend is typescript last year we

796
00:30:28,580 --> 00:30:30,200
were caught completely by surprise when

797
00:30:30,200 --> 00:30:31,820
we asked people how much if they use

798
00:30:31,820 --> 00:30:35,149
typescript and 46% of them said yes this

799
00:30:35,149 --> 00:30:38,179
year 63% of them said that they are

800
00:30:38,179 --> 00:30:40,730
using typescript so we immediately asked

801
00:30:40,730 --> 00:30:43,639
a bunch of a bunch more questions what

802
00:30:43,639 --> 00:30:47,269
does using mean so it turns out that 15%

803
00:30:47,269 --> 00:30:49,159
of people who say that they 15% of

804
00:30:49,159 --> 00:30:51,679
people are using libraries that are

805
00:30:51,679 --> 00:30:53,419
written in typescript and the main

806
00:30:53,419 --> 00:30:54,590
culprit here is angular

807
00:30:54,590 --> 00:30:56,059
angular is written in typescript so all

808
00:30:56,059 --> 00:30:58,070
the angular users show up as typescript

809
00:30:58,070 --> 00:30:59,659
users but they're not really writing

810
00:30:59,659 --> 00:31:01,159
typescript so they're just using a thing

811
00:31:01,159 --> 00:31:04,909
that is written in typescript it's

812
00:31:04,909 --> 00:31:06,799
interesting that both react and ember

813
00:31:06,799 --> 00:31:08,450
have type scripts now so the only major

814
00:31:08,450 --> 00:31:10,179
framework that doesn't have some

815
00:31:10,179 --> 00:31:14,299
typescript in it is view but even if you

816
00:31:14,299 --> 00:31:15,830
say that you write typescript do you

817
00:31:15,830 --> 00:31:17,330
mean that you write it all the time or

818
00:31:17,330 --> 00:31:19,730
just to try it out within the typescript

819
00:31:19,730 --> 00:31:22,130
developers 52% primarily write

820
00:31:22,130 --> 00:31:24,740
typescript and another 34% write

821
00:31:24,740 --> 00:31:26,870
typescript some of the time which means

822
00:31:26,870 --> 00:31:29,720
that overall 36% of NPM users are

823
00:31:29,720 --> 00:31:31,309
writing typescript somewhere all of the

824
00:31:31,309 --> 00:31:34,070
time a third of javascript developers

825
00:31:34,070 --> 00:31:36,770
don't write JavaScript anymore that is a

826
00:31:36,770 --> 00:31:38,720
stunning change in the landscape in

827
00:31:38,720 --> 00:31:41,750
which we're sitting incidentally one of

828
00:31:41,750 --> 00:31:42,919
the features of typescript

829
00:31:42,919 --> 00:31:45,260
is that it has type definition files and

830
00:31:45,260 --> 00:31:46,880
those type definition files are hosted

831
00:31:46,880 --> 00:31:48,860
under the types of scope which is on NPM

832
00:31:48,860 --> 00:31:51,049
so I went looking to see exactly how

833
00:31:51,049 --> 00:31:52,789
much of registry traffic is the type

834
00:31:52,789 --> 00:31:54,860
scope and it turns out it's 2.5 percent

835
00:31:54,860 --> 00:31:56,990
all by itself being constantly

836
00:31:56,990 --> 00:31:59,630
downloaded by copies of vs code which

837
00:31:59,630 --> 00:32:00,950
means that we're probably going to need

838
00:32:00,950 --> 00:32:02,450
to have a chat with Microsoft about

839
00:32:02,450 --> 00:32:07,010
their bandwidth bill the other part of

840
00:32:07,010 --> 00:32:08,750
the not writing JavaScript trend is

841
00:32:08,750 --> 00:32:09,860
webassembly

842
00:32:09,860 --> 00:32:12,110
cast just gave a great talk about web

843
00:32:12,110 --> 00:32:15,080
assembly and gave a whole bunch of good

844
00:32:15,080 --> 00:32:16,610
reasons for using web assembly and its

845
00:32:16,610 --> 00:32:19,370
place in the ecosystem but in case you

846
00:32:19,370 --> 00:32:22,220
somehow were asleep for that web

847
00:32:22,220 --> 00:32:23,600
assembly is a technology that lets you

848
00:32:23,600 --> 00:32:25,460
take any compiled language and run it on

849
00:32:25,460 --> 00:32:26,840
the web at near native speeds and

850
00:32:26,840 --> 00:32:28,309
there's two interesting things about

851
00:32:28,309 --> 00:32:30,289
that the first is obviously the speed

852
00:32:30,289 --> 00:32:32,330
but the people who write web assembly

853
00:32:32,330 --> 00:32:34,070
say that the much more interesting part

854
00:32:34,070 --> 00:32:37,070
is the second part which is that it

855
00:32:37,070 --> 00:32:38,899
gives you the ability to use existing

856
00:32:38,899 --> 00:32:41,149
code written in other languages directly

857
00:32:41,149 --> 00:32:44,270
on the web to me one of the most

858
00:32:44,270 --> 00:32:45,950
exciting features of web assembly is

859
00:32:45,950 --> 00:32:47,809
that when assembly modules are

860
00:32:47,809 --> 00:32:50,330
interoperable with existing NPM modules

861
00:32:50,330 --> 00:32:52,700
written in JavaScript so you can use a

862
00:32:52,700 --> 00:32:54,620
tool like wisent pack which is for rust

863
00:32:54,620 --> 00:32:56,809
or equivalent tools for other languages

864
00:32:56,809 --> 00:32:59,450
and you can write code in those

865
00:32:59,450 --> 00:33:01,700
languages publish it as a module to the

866
00:33:01,700 --> 00:33:04,190
NPM registry and then just npm install

867
00:33:04,190 --> 00:33:06,289
it into a JavaScript application and it

868
00:33:06,289 --> 00:33:08,390
will work you won't even know that it's

869
00:33:08,390 --> 00:33:10,250
not JavaScript's it'll just happen and

870
00:33:10,250 --> 00:33:11,870
the way that I know that you won't know

871
00:33:11,870 --> 00:33:13,640
it's JavaScript is because it already

872
00:33:13,640 --> 00:33:15,770
happened it's is already happening the

873
00:33:15,770 --> 00:33:19,910
call is coming from inside the house our

874
00:33:19,910 --> 00:33:21,530
stats say that webassembly is still very

875
00:33:21,530 --> 00:33:23,480
new only about 3 percent of people say

876
00:33:23,480 --> 00:33:25,700
that they use it but you know at the

877
00:33:25,700 --> 00:33:27,280
scale of NPM that means that about

878
00:33:27,280 --> 00:33:30,500
300,000 people are using it and we found

879
00:33:30,500 --> 00:33:33,530
that just 0.06 percent of packages in

880
00:33:33,530 --> 00:33:35,480
the registry contain wasm but that is

881
00:33:35,480 --> 00:33:37,340
about 600 packages and some of those are

882
00:33:37,340 --> 00:33:39,500
very interesting but the big number for

883
00:33:39,500 --> 00:33:42,080
webassembly is 54% that is how the

884
00:33:42,080 --> 00:33:43,820
percentage of people who say that they

885
00:33:43,820 --> 00:33:45,350
are considering using webassembly

886
00:33:45,350 --> 00:33:50,260
webassembly is about to be very very big

887
00:33:50,260 --> 00:33:53,450
so now we know who we are and what we're

888
00:33:53,450 --> 00:33:55,940
using and those facts together can point

889
00:33:55,940 --> 00:33:58,460
us towards explanations as to why this

890
00:33:58,460 --> 00:34:01,010
is where I switch from facts to analysis

891
00:34:01,010 --> 00:34:04,880
and by analysis I mean opinions but

892
00:34:04,880 --> 00:34:10,840
first just a quick drink of water

893
00:34:10,840 --> 00:34:13,880
because I'm going real slow and talking

894
00:34:13,880 --> 00:34:16,310
a lot so for this next bit I need to

895
00:34:16,310 --> 00:34:18,290
split up the room into two teams so

896
00:34:18,290 --> 00:34:20,390
everybody on this side of the line you

897
00:34:20,390 --> 00:34:22,730
are team a everybody on this side of the

898
00:34:22,730 --> 00:34:26,600
line you are team B team a let me hear

899
00:34:26,600 --> 00:34:27,340
it

900
00:34:27,340 --> 00:34:35,270
team B team a team B fantastic I'm not

901
00:34:35,270 --> 00:34:36,500
going to use that for anything it's just

902
00:34:36,500 --> 00:34:38,330
to keep you awake after 30 minutes of

903
00:34:38,330 --> 00:34:42,320
grass the other thing that I said that I

904
00:34:42,320 --> 00:34:44,000
would do is I would give a pair of NPM

905
00:34:44,000 --> 00:34:46,130
socks away but I didn't have time to

906
00:34:46,130 --> 00:34:47,659
come up with any system for giving the

907
00:34:47,659 --> 00:34:50,870
socks away is Shivani here there you are

908
00:34:50,870 --> 00:34:53,419
Shivani had the bright idea of just

909
00:34:53,419 --> 00:34:54,950
asking me on Twitter if she could get

910
00:34:54,950 --> 00:35:00,450
the socks so she gets the sauce

911
00:35:00,460 --> 00:35:03,599
[Applause]

912
00:35:03,599 --> 00:35:06,550
so the first question to answer in the Y

913
00:35:06,550 --> 00:35:09,579
section is why is JavaScript the most

914
00:35:09,579 --> 00:35:10,990
popular programming language in the

915
00:35:10,990 --> 00:35:13,180
world I think we can discard the idea

916
00:35:13,180 --> 00:35:14,890
that it is the best designed language in

917
00:35:14,890 --> 00:35:18,550
the world one possible answer is the NPM

918
00:35:18,550 --> 00:35:22,150
registry a guy called Leo meyerovich for

919
00:35:22,150 --> 00:35:25,000
his PhD did a study of in which he

920
00:35:25,000 --> 00:35:27,280
researched why people pick programming

921
00:35:27,280 --> 00:35:29,109
languages this is a very useful study

922
00:35:29,109 --> 00:35:31,599
for answering this question so he was

923
00:35:31,599 --> 00:35:33,099
asking you know is it features is its

924
00:35:33,099 --> 00:35:34,900
speed is it because they're forced to by

925
00:35:34,900 --> 00:35:35,589
their company

926
00:35:35,589 --> 00:35:37,270
like what is it that makes somebody pick

927
00:35:37,270 --> 00:35:38,920
a programming language and the number

928
00:35:38,920 --> 00:35:40,720
one reason turned out to be open source

929
00:35:40,720 --> 00:35:43,660
modules it turns out that if there is a

930
00:35:43,660 --> 00:35:45,670
library that exists that helps you get

931
00:35:45,670 --> 00:35:47,079
the job that you're trying to get done

932
00:35:47,079 --> 00:35:49,869
done then you switch to the language in

933
00:35:49,869 --> 00:35:52,030
which that library exists and because

934
00:35:52,030 --> 00:35:55,060
the largest set of libraries is NPM that

935
00:35:55,060 --> 00:35:56,530
means an enormous number of people are

936
00:35:56,530 --> 00:35:58,450
moving to JavaScript because of all of

937
00:35:58,450 --> 00:36:00,160
them libraries that are existing in NPM

938
00:36:00,160 --> 00:36:03,730
and once you start doing that a positive

939
00:36:03,730 --> 00:36:06,310
feedback loop kicks in more open source

940
00:36:06,310 --> 00:36:08,319
libraries bring more users and those

941
00:36:08,319 --> 00:36:11,349
users write more open source once about

942
00:36:11,349 --> 00:36:13,839
every 15 minutes or so somebody on

943
00:36:13,839 --> 00:36:16,990
Twitter sends me this picture but it's

944
00:36:16,990 --> 00:36:21,280
not actually a bad analogy the NPM

945
00:36:21,280 --> 00:36:23,829
registry has created a gravity well that

946
00:36:23,829 --> 00:36:25,869
pulls in developers and every time a new

947
00:36:25,869 --> 00:36:27,460
developer joins the JavaScript community

948
00:36:27,460 --> 00:36:31,630
they increase the pull and this has

949
00:36:31,630 --> 00:36:33,400
created the new type of JavaScript

950
00:36:33,400 --> 00:36:35,680
developer The Reluctant JavaScript er

951
00:36:35,680 --> 00:36:37,599
this used to be a very small group but

952
00:36:37,599 --> 00:36:40,630
is now possibly a quarter or more of the

953
00:36:40,630 --> 00:36:42,849
JavaScript community is reluctant Java

954
00:36:42,849 --> 00:36:44,680
Scriptures they don't write Java scripts

955
00:36:44,680 --> 00:36:45,940
because they like it they write

956
00:36:45,940 --> 00:36:48,040
JavaScript because they have to and that

957
00:36:48,040 --> 00:36:50,260
is bad that's bad for them because they

958
00:36:50,260 --> 00:36:52,630
hate it but it's also bad for Java

959
00:36:52,630 --> 00:36:54,040
scripts because people who don't like a

960
00:36:54,040 --> 00:36:55,540
language are not going to write it well

961
00:36:55,540 --> 00:36:59,440
and this happened before in 2009 and

962
00:36:59,440 --> 00:37:01,480
2010 Ruby developers who were writing

963
00:37:01,480 --> 00:37:04,030
web apps got sucked into the exploding

964
00:37:04,030 --> 00:37:05,680
popularity of Java scripts and they

965
00:37:05,680 --> 00:37:06,760
 hated it

966
00:37:06,760 --> 00:37:08,200
hated it
they told us that they hated it at the

967
00:37:08,200 --> 00:37:10,390
time in the survey data they've made

968
00:37:10,390 --> 00:37:12,069
very clear that they still hate it and

969
00:37:12,069 --> 00:37:14,960
don't want to be writing JavaScript

970
00:37:14,960 --> 00:37:16,979
some of them wanted some of them

971
00:37:16,979 --> 00:37:18,359
attempted to solve this problem with

972
00:37:18,359 --> 00:37:21,359
CoffeeScript which introduced a ton of

973
00:37:21,359 --> 00:37:23,160
Ruby like features into JavaScript

974
00:37:23,160 --> 00:37:26,130
CoffeeScript failed but honestly the

975
00:37:26,130 --> 00:37:28,229
Ruby folks mostly one like JavaScript

976
00:37:28,229 --> 00:37:30,479
these days modern JavaScript has a ton

977
00:37:30,479 --> 00:37:32,160
of language features that are basically

978
00:37:32,160 --> 00:37:36,839
copied from Ruby and typescript is

979
00:37:36,839 --> 00:37:39,329
something like that pattern remember all

980
00:37:39,329 --> 00:37:40,769
of those non primary JavaScript

981
00:37:40,769 --> 00:37:41,999
developers who are working in typed

982
00:37:41,999 --> 00:37:44,670
languages like Java and c-sharp a bunch

983
00:37:44,670 --> 00:37:46,529
of people from those languages have come

984
00:37:46,529 --> 00:37:47,999
to the JavaScript community and found

985
00:37:47,999 --> 00:37:50,369
that they've missed types and typescript

986
00:37:50,369 --> 00:37:54,329
gives them those types backing so given

987
00:37:54,329 --> 00:37:57,420
the popularity of types and people using

988
00:37:57,420 --> 00:37:58,859
those type languages and also

989
00:37:58,859 --> 00:38:00,839
Microsoft's considerable backing to

990
00:38:00,839 --> 00:38:03,029
typescript I don't think the typescript

991
00:38:03,029 --> 00:38:04,410
is going to be the kind of failure that

992
00:38:04,410 --> 00:38:08,910
CoffeeScript was in our survey 17% of

993
00:38:08,910 --> 00:38:11,400
people who had heard of webassembly

994
00:38:11,400 --> 00:38:13,109
said that the thing that they found most

995
00:38:13,109 --> 00:38:15,089
interesting about web assembly was that

996
00:38:15,089 --> 00:38:16,859
it allowed them to write a language

997
00:38:16,859 --> 00:38:18,630
other than JavaScript and they preferred

998
00:38:18,630 --> 00:38:23,130
doing that web assembly freeze web

999
00:38:23,130 --> 00:38:25,289
developers and it frees web development

1000
00:38:25,289 --> 00:38:27,359
from JavaScript and the result will be

1001
00:38:27,359 --> 00:38:29,400
that a bunch of people will stop writing

1002
00:38:29,400 --> 00:38:31,739
JavaScript but that is not something to

1003
00:38:31,739 --> 00:38:32,549
be worried about

1004
00:38:32,549 --> 00:38:35,009
first not everybody will stop just the

1005
00:38:35,009 --> 00:38:39,029
people who hate it and second when

1006
00:38:39,029 --> 00:38:41,099
people writing web assembly are looking

1007
00:38:41,099 --> 00:38:42,960
for a way to share code with each other

1008
00:38:42,960 --> 00:38:45,029
the massive gravity well of the NPM

1009
00:38:45,029 --> 00:38:47,609
registry will make it obvious the best

1010
00:38:47,609 --> 00:38:49,529
place to share your web assembly modules

1011
00:38:49,529 --> 00:38:52,739
is also the NPM registry web assembly

1012
00:38:52,739 --> 00:38:55,559
will make JavaScript stronger by giving

1013
00:38:55,559 --> 00:38:57,630
it access to the best libraries no

1014
00:38:57,630 --> 00:38:58,920
matter what language they were written

1015
00:38:58,920 --> 00:39:03,049
it that is a tremendously exciting idea

1016
00:39:03,049 --> 00:39:05,460
the next question we're spending time on

1017
00:39:05,460 --> 00:39:07,880
is what the hell is going on with react

1018
00:39:07,880 --> 00:39:10,739
part of the explanation is that react

1019
00:39:10,739 --> 00:39:12,779
isn't a full web framework it has no

1020
00:39:12,779 --> 00:39:14,519
opinions about routing or data modules

1021
00:39:14,519 --> 00:39:17,130
like other frameworks do so as opinions

1022
00:39:17,130 --> 00:39:18,779
change about the best way to do routing

1023
00:39:18,779 --> 00:39:22,380
and data people don't have to abandon

1024
00:39:22,380 --> 00:39:24,059
react to be able to do that they can

1025
00:39:24,059 --> 00:39:25,650
just switch from you know flux to

1026
00:39:25,650 --> 00:39:27,630
reduction from Redux to whatever

1027
00:39:27,630 --> 00:39:32,730
next it's just a component model and it

1028
00:39:32,730 --> 00:39:35,940
creates truly reusable fully functioning

1029
00:39:35,940 --> 00:39:38,010
components if you've never seen quite

1030
00:39:38,010 --> 00:39:39,480
how well that can work here are two

1031
00:39:39,480 --> 00:39:42,330
examples of react components that you

1032
00:39:42,330 --> 00:39:44,910
can just npm install today two of the

1033
00:39:44,910 --> 00:39:47,010
most annoying and fiddly components a

1034
00:39:47,010 --> 00:39:49,260
color picker and a date picker and you

1035
00:39:49,260 --> 00:39:52,320
can just npm install them that my

1036
00:39:52,320 --> 00:39:54,600
friends has been the dream for 20 years

1037
00:39:54,600 --> 00:39:56,370
I don't want to have to implement a date

1038
00:39:56,370 --> 00:39:58,560
picker ever again and now I don't have

1039
00:39:58,560 --> 00:40:02,940
to other projects provide whole

1040
00:40:02,940 --> 00:40:04,350
libraries of excellent pre-built

1041
00:40:04,350 --> 00:40:06,590
components to use react toolbox does one

1042
00:40:06,590 --> 00:40:09,360
using Google's material design although

1043
00:40:09,360 --> 00:40:11,010
it's not like an official Google project

1044
00:40:11,010 --> 00:40:13,590
or anything and reach UI is an excellent

1045
00:40:13,590 --> 00:40:14,700
start on addressing accessibility

1046
00:40:14,700 --> 00:40:17,070
concerns and react by providing a

1047
00:40:17,070 --> 00:40:18,690
library of fully accessible react

1048
00:40:18,690 --> 00:40:21,660
components but now react can go even

1049
00:40:21,660 --> 00:40:24,600
further as you've already heard of this

1050
00:40:24,600 --> 00:40:27,330
conference react 16.8 introduced hooks

1051
00:40:27,330 --> 00:40:29,430
hooks are a new way of handling state in

1052
00:40:29,430 --> 00:40:31,230
react but from my perspective the most

1053
00:40:31,230 --> 00:40:33,210
interesting thing about hooks is that it

1054
00:40:33,210 --> 00:40:34,800
is very easy to add a whole bunch of

1055
00:40:34,800 --> 00:40:37,110
functionality to your application using

1056
00:40:37,110 --> 00:40:42,330
hooks by just npm installing them an

1057
00:40:42,330 --> 00:40:44,490
early promising demonstration of this is

1058
00:40:44,490 --> 00:40:46,080
react use which is a library that

1059
00:40:46,080 --> 00:40:48,030
provides a ton of functionality for the

1060
00:40:48,030 --> 00:40:49,890
like you know more dark and dangerous

1061
00:40:49,890 --> 00:40:53,010
corners of the Web API in your react app

1062
00:40:53,010 --> 00:40:54,930
by just npm installing the functionality

1063
00:40:54,930 --> 00:40:56,550
that you want to use with way less

1064
00:40:56,550 --> 00:40:59,430
effort on your part and this suggests an

1065
00:40:59,430 --> 00:41:01,140
enticing future where we can build web

1066
00:41:01,140 --> 00:41:03,540
apps at a whole new level of abstraction

1067
00:41:03,540 --> 00:41:06,090
all of these things together mean that

1068
00:41:06,090 --> 00:41:07,710
we won't have to think too hard about

1069
00:41:07,710 --> 00:41:09,900
what the server is or how it works or

1070
00:41:09,900 --> 00:41:13,500
even where it is and we can put existing

1071
00:41:13,500 --> 00:41:15,030
components together instead of having to

1072
00:41:15,030 --> 00:41:16,500
build them from scratch every time we

1073
00:41:16,500 --> 00:41:19,590
start a new project and each new

1074
00:41:19,590 --> 00:41:21,180
component added to the pile of

1075
00:41:21,180 --> 00:41:22,860
components inside of the NPM registry

1076
00:41:22,860 --> 00:41:25,200
will make it more attractive to use

1077
00:41:25,200 --> 00:41:27,900
those components again the same feedback

1078
00:41:27,900 --> 00:41:29,160
loop that created the NPM registry

1079
00:41:29,160 --> 00:41:32,010
itself could make react and react

1080
00:41:32,010 --> 00:41:34,740
components an unstoppable force that

1081
00:41:34,740 --> 00:41:39,060
changes web development forever but it's

1082
00:41:39,060 --> 00:41:39,840
not guaranteed

1083
00:41:39,840 --> 00:41:41,430
reiax growth seems to be

1084
00:41:41,430 --> 00:41:43,020
slowing down and view is showing a lot

1085
00:41:43,020 --> 00:41:45,480
of growth so is view the future will

1086
00:41:45,480 --> 00:41:47,250
react to decline and fall like every

1087
00:41:47,250 --> 00:41:50,430
framework ever before in the next couple

1088
00:41:50,430 --> 00:41:53,520
of years we get to find out in the

1089
00:41:53,520 --> 00:41:54,240
meantime

1090
00:41:54,240 --> 00:41:56,609
reacts dominance on the front end has

1091
00:41:56,609 --> 00:41:59,160
totally changed the back end as I showed

1092
00:41:59,160 --> 00:42:01,349
earlier frameworks that enable

1093
00:42:01,349 --> 00:42:03,480
server-side rendering of react apps are

1094
00:42:03,480 --> 00:42:04,980
now more popular than traditional

1095
00:42:04,980 --> 00:42:08,760
back-end frameworks so instead of

1096
00:42:08,760 --> 00:42:11,190
writing code for clients and servers we

1097
00:42:11,190 --> 00:42:12,780
just write code for clients and we get

1098
00:42:12,780 --> 00:42:15,390
the server to figure it out we

1099
00:42:15,390 --> 00:42:17,309
increasingly abstract away how code is

1100
00:42:17,309 --> 00:42:20,579
deployed and just give it away entirely

1101
00:42:20,579 --> 00:42:22,890
to serverless things or deployment

1102
00:42:22,890 --> 00:42:28,680
services building all apps is rich

1103
00:42:28,680 --> 00:42:30,450
front-end apps I'm not sure that that is

1104
00:42:30,450 --> 00:42:31,619
a good idea I'm not sure that that's

1105
00:42:31,619 --> 00:42:33,359
always the best kind of app that we can

1106
00:42:33,359 --> 00:42:35,339
build but it certainly is a popular idea

1107
00:42:35,339 --> 00:42:38,010
and as I've been pointing out popularity

1108
00:42:38,010 --> 00:42:40,829
has its own momentum at least one

1109
00:42:40,829 --> 00:42:43,079
browser maker is already working on

1110
00:42:43,079 --> 00:42:45,210
specific optimizations to the browser to

1111
00:42:45,210 --> 00:42:49,859
make react faster and last year I made

1112
00:42:49,859 --> 00:42:51,450
the case that react components or at

1113
00:42:51,450 --> 00:42:52,740
least some of the core parts of them

1114
00:42:52,740 --> 00:42:54,569
should become part of the browser so

1115
00:42:54,569 --> 00:42:56,579
that we can make our frameworks smaller

1116
00:42:56,579 --> 00:42:58,640
and we can make our frameworks faster

1117
00:42:58,640 --> 00:43:00,690
because we did that before we did that

1118
00:43:00,690 --> 00:43:03,150
with jQuery a lot of the api's that we

1119
00:43:03,150 --> 00:43:05,040
that were in jQuery are now just part of

1120
00:43:05,040 --> 00:43:06,630
the web api we think of ourselves as

1121
00:43:06,630 --> 00:43:08,790
having stopped using jQuery but we still

1122
00:43:08,790 --> 00:43:10,440
use jQuery every day we just don't need

1123
00:43:10,440 --> 00:43:13,589
to download a library to do it so I

1124
00:43:13,589 --> 00:43:15,450
stand by that I think some parts of

1125
00:43:15,450 --> 00:43:17,910
react are so good and so popular that at

1126
00:43:17,910 --> 00:43:19,440
this point they should probably be part

1127
00:43:19,440 --> 00:43:22,770
of the web so let's take all of these

1128
00:43:22,770 --> 00:43:24,359
trends and analysis and opinions and

1129
00:43:24,359 --> 00:43:25,559
weave them all together and make some

1130
00:43:25,559 --> 00:43:27,270
guesses about the future this is where I

1131
00:43:27,270 --> 00:43:29,250
go from slightly wrong to extremely

1132
00:43:29,250 --> 00:43:33,839
wrong first is a future I don't have to

1133
00:43:33,839 --> 00:43:35,970
guess about and that is NPM tink NPM

1134
00:43:35,970 --> 00:43:37,740
tink is a tremendously exciting leap

1135
00:43:37,740 --> 00:43:39,720
forward in package management it's a

1136
00:43:39,720 --> 00:43:42,720
package manager and a runtime and you

1137
00:43:42,720 --> 00:43:44,460
won't have to install packages anymore

1138
00:43:44,460 --> 00:43:45,990
you won't have to transpile type scripts

1139
00:43:45,990 --> 00:43:47,130
you won't have to think about whether

1140
00:43:47,130 --> 00:43:49,770
assembly you can just import stuff and

1141
00:43:49,770 --> 00:43:52,650
tink will figure it out so let's watch

1142
00:43:52,650 --> 00:43:54,560
that happen

1143
00:43:54,560 --> 00:43:56,770
will it have downloaded the whole video

1144
00:43:56,770 --> 00:43:59,060
what you're seeing is two modules in

1145
00:43:59,060 --> 00:44:00,770
this folder one is JavaScript and one is

1146
00:44:00,770 --> 00:44:03,290
wasum the main file is typescript index

1147
00:44:03,290 --> 00:44:06,140
TS we import that as 'm straight into

1148
00:44:06,140 --> 00:44:08,540
the typescript and then we use tink SH

1149
00:44:08,540 --> 00:44:11,180
to run that typescript we don't have to

1150
00:44:11,180 --> 00:44:12,620
do any transpiling we don't have to do

1151
00:44:12,620 --> 00:44:14,300
any loading there is no other code in

1152
00:44:14,300 --> 00:44:17,590
this folder tink just figures it out

1153
00:44:17,590 --> 00:44:20,000
that's amazing we don't have to do any

1154
00:44:20,000 --> 00:44:22,490
of that stuff anymore the ergonomics of

1155
00:44:22,490 --> 00:44:26,150
that are wonderful dan I dream of

1156
00:44:26,150 --> 00:44:28,220
tweeted recently about how vb6 is what

1157
00:44:28,220 --> 00:44:30,080
got him into programming and it's a

1158
00:44:30,080 --> 00:44:31,490
really great point because it's exactly

1159
00:44:31,490 --> 00:44:33,140
where it seems like all of this stuff is

1160
00:44:33,140 --> 00:44:36,320
going imagine a world where you can

1161
00:44:36,320 --> 00:44:39,020
build a web app without needing to know

1162
00:44:39,020 --> 00:44:40,490
all the details of how all of your

1163
00:44:40,490 --> 00:44:44,060
components work people hate on vb6

1164
00:44:44,060 --> 00:44:46,190
but at one point it was the world's most

1165
00:44:46,190 --> 00:44:48,230
programming popular programming language

1166
00:44:48,230 --> 00:44:51,500
and that's us now vb6 unlocked and

1167
00:44:51,500 --> 00:44:53,510
created a generation of programmers by

1168
00:44:53,510 --> 00:44:55,430
making programming very easy and

1169
00:44:55,430 --> 00:44:57,620
accessible for everyone that made it

1170
00:44:57,620 --> 00:45:01,730
very good and very popular think how

1171
00:45:01,730 --> 00:45:03,530
many more people could get to be web

1172
00:45:03,530 --> 00:45:05,720
developers if you could build a real and

1173
00:45:05,720 --> 00:45:07,880
useful web app by dragging and dropping

1174
00:45:07,880 --> 00:45:10,850
open-source components into it that

1175
00:45:10,850 --> 00:45:12,740
wouldn't make your job obsolete we would

1176
00:45:12,740 --> 00:45:14,150
still need everyone in this room to be

1177
00:45:14,150 --> 00:45:15,950
writing components but we would need a

1178
00:45:15,950 --> 00:45:18,650
room ten times this size to hold all of

1179
00:45:18,650 --> 00:45:20,090
the people who would be using the

1180
00:45:20,090 --> 00:45:22,880
components that we write it would be a

1181
00:45:22,880 --> 00:45:24,890
whole new level of abstraction it would

1182
00:45:24,890 --> 00:45:27,170
create a whole new type of web developer

1183
00:45:27,170 --> 00:45:29,270
and it would unlock a whole new sequence

1184
00:45:29,270 --> 00:45:31,820
and a whole new class of web apps that

1185
00:45:31,820 --> 00:45:34,070
currently it's too expensive for anyone

1186
00:45:34,070 --> 00:45:37,640
to build that is a tremendously exciting

1187
00:45:37,640 --> 00:45:40,760
idea and then you add to that mix web

1188
00:45:40,760 --> 00:45:43,280
assembly which it's still very early

1189
00:45:43,280 --> 00:45:45,470
days right now but you could bring every

1190
00:45:45,470 --> 00:45:47,630
useful library from every other language

1191
00:45:47,630 --> 00:45:49,700
and put them into the JavaScript

1192
00:45:49,700 --> 00:45:51,830
universe and make all of those libraries

1193
00:45:51,830 --> 00:45:54,400
interoperable with no performance hit

1194
00:45:54,400 --> 00:45:56,930
suddenly not only is it easier to build

1195
00:45:56,930 --> 00:45:58,940
these apps in JavaScript but what you

1196
00:45:58,940 --> 00:46:01,840
can build would be greatly expanded and

1197
00:46:01,840 --> 00:46:04,790
the last piece of the puzzle is all of

1198
00:46:04,790 --> 00:46:06,500
those native app developers that's

1199
00:46:06,500 --> 00:46:08,150
already nearly half of

1200
00:46:08,150 --> 00:46:10,730
take highly performant rich web apps and

1201
00:46:10,730 --> 00:46:13,339
then run them anywhere that you like on

1202
00:46:13,339 --> 00:46:15,829
desktops on phones on tablets on watches

1203
00:46:15,829 --> 00:46:19,569
on VR VR headsets on your shoes

1204
00:46:19,569 --> 00:46:22,400
JavaScript running everywhere absorbing

1205
00:46:22,400 --> 00:46:24,140
all of the other languages into a single

1206
00:46:24,140 --> 00:46:26,059
unified world of open-source components

1207
00:46:26,059 --> 00:46:28,369
built by an ever expanding and

1208
00:46:28,369 --> 00:46:30,700
increasingly diverse set of developers

1209
00:46:30,700 --> 00:46:32,809
there is no guarantee that that will

1210
00:46:32,809 --> 00:46:35,809
happen but I can imagine a world where

1211
00:46:35,809 --> 00:46:37,490
the thing that we currently call web

1212
00:46:37,490 --> 00:46:39,619
development just becomes the way that we

1213
00:46:39,619 --> 00:46:42,440
build software and after 23 years of

1214
00:46:42,440 --> 00:46:44,269
watching web development change and grow

1215
00:46:44,269 --> 00:46:47,150
no time has ever been more exciting to

1216
00:46:47,150 --> 00:46:49,700
be a web developer and you my friends

1217
00:46:49,700 --> 00:46:51,950
and colleagues are perfectly placed to

1218
00:46:51,950 --> 00:46:57,109
become part of that change the web is an

1219
00:46:57,109 --> 00:46:59,960
amazing force for good and evil it is a

1220
00:46:59,960 --> 00:47:02,750
toy and the tool it's a playground and

1221
00:47:02,750 --> 00:47:04,789
it's a marketplace it is alternately

1222
00:47:04,789 --> 00:47:07,490
amazing and terrifying and its power we

1223
00:47:07,490 --> 00:47:09,710
can do so much good and we can do so

1224
00:47:09,710 --> 00:47:11,750
much harm but I choose to believe that

1225
00:47:11,750 --> 00:47:13,759
in the long run we will collectively

1226
00:47:13,759 --> 00:47:16,130
decide to do more things that help the

1227
00:47:16,130 --> 00:47:18,559
world than hurt it we have all made

1228
00:47:18,559 --> 00:47:20,420
mistakes that have hurt people I know

1229
00:47:20,420 --> 00:47:23,779
that I have but I believe that in the

1230
00:47:23,779 --> 00:47:26,089
course of time our good decisions will

1231
00:47:26,089 --> 00:47:28,730
outweigh our bad decisions and the web

1232
00:47:28,730 --> 00:47:31,490
will grow forever I hope what I've

1233
00:47:31,490 --> 00:47:33,529
shared with you today has helped you see

1234
00:47:33,529 --> 00:47:35,299
where you are and what you can do I hope

1235
00:47:35,299 --> 00:47:37,279
that's helped motivate you and make you

1236
00:47:37,279 --> 00:47:39,529
curious I hope you've had a fantastic

1237
00:47:39,529 --> 00:47:40,579
jeaious cough

1238
00:47:40,579 --> 00:47:42,829
I certainly have and thank you all so

