1
00:00:09,950 --> 00:00:11,880

one of the things we've done a lot of

2
00:00:11,880 --> 00:00:14,099
and yet is really stress around with

3
00:00:14,099 --> 00:00:18,180
building real time applications and it's

4
00:00:18,180 --> 00:00:20,039
real time is one of those things that I

5
00:00:20,039 --> 00:00:22,580
feel has a has a giant pile of potential

6
00:00:22,580 --> 00:00:26,310
I think we really haven't seen what it

7
00:00:26,310 --> 00:00:28,410
can be used for yet as far as I mean I

8
00:00:28,410 --> 00:00:29,460
really think we can push it a little

9
00:00:29,460 --> 00:00:31,289
further the first the first thing people

10
00:00:31,289 --> 00:00:32,790
always do is they go write some chat

11
00:00:32,790 --> 00:00:34,770
application and you know that's

12
00:00:34,770 --> 00:00:37,050
interesting and it's solely useful but

13
00:00:37,050 --> 00:00:38,760
it's been done and it's every other week

14
00:00:38,760 --> 00:00:40,230
we get somebody it's like oh you know I

15
00:00:40,230 --> 00:00:42,390
wrote a chat app in 10 lines of code

16
00:00:42,390 --> 00:00:45,360
like cool way to go and that's all great

17
00:00:45,360 --> 00:00:49,620
but I really think that as this

18
00:00:49,620 --> 00:00:51,059
continues to get easier and easier and

19
00:00:51,059 --> 00:00:53,219
easier to do we're going to see people

20
00:00:53,219 --> 00:00:54,180
using it for a lot more interesting

21
00:00:54,180 --> 00:00:57,770
things and that's really what what

22
00:00:57,770 --> 00:01:00,420
what's so amazing about what the what

23
00:01:00,420 --> 00:01:04,650
Sokka do does for us but so one of the

24
00:01:04,650 --> 00:01:07,229
things we have to keep in mind is as web

25
00:01:07,229 --> 00:01:09,330
developers is we're actually in direct

26
00:01:09,330 --> 00:01:11,689
competition with native applications

27
00:01:11,689 --> 00:01:14,100
that's not really something people think

28
00:01:14,100 --> 00:01:16,259
about or talk about a lot but I mean the

29
00:01:16,259 --> 00:01:18,240
truth is it given the choice between

30
00:01:18,240 --> 00:01:21,060
using you know Gmail or Sparrow mail

31
00:01:21,060 --> 00:01:23,490
from my mac sparrow gives me a nicer

32
00:01:23,490 --> 00:01:25,799
experience and and that's what i use and

33
00:01:25,799 --> 00:01:28,439
i end up spending money it's from to you

34
00:01:28,439 --> 00:01:31,130
know to some third-party mac app

35
00:01:31,130 --> 00:01:34,920
developers to use gmail and the truth of

36
00:01:34,920 --> 00:01:37,740
the matter is like experience is

37
00:01:37,740 --> 00:01:39,960
everything right and i think i think one

38
00:01:39,960 --> 00:01:41,930
of the things that we've kind of done i

39
00:01:41,930 --> 00:01:44,130
mean i'm a little more of a front end

40
00:01:44,130 --> 00:01:45,930
guy my background is actually in

41
00:01:45,930 --> 00:01:48,360
business not not development got into

42
00:01:48,360 --> 00:01:52,350
this stuff later but i think you know

43
00:01:52,350 --> 00:01:53,899
really got to keep in mind that that

44
00:01:53,899 --> 00:01:57,149
recreating as much of that the

45
00:01:57,149 --> 00:01:59,579
experience that people want from native

46
00:01:59,579 --> 00:02:01,920
applications in the web is very possible

47
00:02:01,920 --> 00:02:04,680
these days but we're kind of stuck in

48
00:02:04,680 --> 00:02:06,329
this rut of feeling like we always have

49
00:02:06,329 --> 00:02:08,129
the support you know we have to limp

50
00:02:08,129 --> 00:02:10,200
along all these old browsers and i

51
00:02:10,200 --> 00:02:11,470
really think that's a mistake and

52
00:02:11,470 --> 00:02:12,550
we're kind of shooting ourselves in the

53
00:02:12,550 --> 00:02:16,390
foot a little bit and that and I think

54
00:02:16,390 --> 00:02:18,040
the truth of the matter is it's totally

55
00:02:18,040 --> 00:02:20,170
fine you know you go buy microsoft

56
00:02:20,170 --> 00:02:22,240
office in a box you read the side of it

57
00:02:22,240 --> 00:02:24,790
there's minimum system requirements so

58
00:02:24,790 --> 00:02:27,370
what's wrong with requiring a modern

59
00:02:27,370 --> 00:02:29,680
free browser I mean the truth of it is

60
00:02:29,680 --> 00:02:31,990
if you give a compelling enough reason

61
00:02:31,990 --> 00:02:35,800
to use those the people will come in the

62
00:02:35,800 --> 00:02:37,450
IT departments will switch if the

63
00:02:37,450 --> 00:02:39,460
business is a big enterprise guys have

64
00:02:39,460 --> 00:02:42,910
good reason to you know actually get

65
00:02:42,910 --> 00:02:44,350
their people downloading chrome or

66
00:02:44,350 --> 00:02:46,870
whatever it is if there's enough of

67
00:02:46,870 --> 00:02:48,400
business reason that the technological

68
00:02:48,400 --> 00:02:50,260
stuff goes away so I think the trick is

69
00:02:50,260 --> 00:02:54,310
really as web developers to focus on you

70
00:02:54,310 --> 00:02:55,990
know basically stop supporting crappy

71
00:02:55,990 --> 00:03:04,150
browsers because so in yeah like I said

72
00:03:04,150 --> 00:03:07,000
it's really not too much to ask I think

73
00:03:07,000 --> 00:03:08,410
one of the biggest components of that

74
00:03:08,410 --> 00:03:10,420
and one of the things that can make the

75
00:03:10,420 --> 00:03:13,570
most compelling argument for using you

76
00:03:13,570 --> 00:03:15,459
know really modern browsers is the

77
00:03:15,459 --> 00:03:17,489
real-time stuff I think there's a lot of

78
00:03:17,489 --> 00:03:19,750
collaboration tools and a lot of a lot

79
00:03:19,750 --> 00:03:21,160
of things awaiting the thought of yet

80
00:03:21,160 --> 00:03:23,290
that you can do with real time that

81
00:03:23,290 --> 00:03:24,790
people just need to start experiment

82
00:03:24,790 --> 00:03:26,500
when experimenting with and publishing

83
00:03:26,500 --> 00:03:28,930
and just you know forget i mean socket

84
00:03:28,930 --> 00:03:30,430
i/o kind of makes it easier as far as

85
00:03:30,430 --> 00:03:32,320
supporting older stuff but you know what

86
00:03:32,320 --> 00:03:34,959
if your app requires websockets so be it

87
00:03:34,959 --> 00:03:37,810
just use it if it's got a compelling

88
00:03:37,810 --> 00:03:39,820
enough of an experience then you know

89
00:03:39,820 --> 00:03:41,380
people will people will do whatever they

90
00:03:41,380 --> 00:03:42,580
need to do use your app and i think

91
00:03:42,580 --> 00:03:43,810
really that's the approach we should be

92
00:03:43,810 --> 00:03:46,090
taking instead of this like endless

93
00:03:46,090 --> 00:03:47,830
reverse compatibility mode that we're

94
00:03:47,830 --> 00:03:50,350
kind of stuck in and i know some people

95
00:03:50,350 --> 00:03:52,090
don't you know you work in a corporation

96
00:03:52,090 --> 00:03:54,220
you don't have that option but i would

97
00:03:54,220 --> 00:03:56,230
just say really really really want to

98
00:03:56,230 --> 00:03:57,610
stress this i think that's important and

99
00:03:57,610 --> 00:03:59,380
I think real-time is one of those things

100
00:03:59,380 --> 00:04:02,110
that can make that happen so I would

101
00:04:02,110 --> 00:04:03,459
just suggest in general on this is kind

102
00:04:03,459 --> 00:04:05,260
of a soapboxing obviously but really

103
00:04:05,260 --> 00:04:06,880
focus on providing the most compelling

104
00:04:06,880 --> 00:04:10,180
experiences and that you can and i think

105
00:04:10,180 --> 00:04:12,310
i think real-time single page apps is

106
00:04:12,310 --> 00:04:15,400
actually a great way to do that and as

107
00:04:15,400 --> 00:04:17,109
browsers get better at integrating with

108
00:04:17,109 --> 00:04:19,630
the OS and everything else you do

109
00:04:19,630 --> 00:04:21,459
desktop notifications background apps

110
00:04:21,459 --> 00:04:24,280
all that kind of stuff um you know it's

111
00:04:24,280 --> 00:04:25,240
up to us

112
00:04:25,240 --> 00:04:26,590
community to actually use that stuff

113
00:04:26,590 --> 00:04:28,660
push it and show what it can be done

114
00:04:28,660 --> 00:04:30,580
with it and that's what I'd love to see

115
00:04:30,580 --> 00:04:35,169
happen so one of the things that that I

116
00:04:35,169 --> 00:04:37,120
think is true for a lot of a lot of

117
00:04:37,120 --> 00:04:41,110
people are self-taught right and really

118
00:04:41,110 --> 00:04:44,259
adoption is driven by how how easy it is

119
00:04:44,259 --> 00:04:46,470
to start messing around with something

120
00:04:46,470 --> 00:04:49,960
if you have to have you know this giant

121
00:04:49,960 --> 00:04:51,669
full stack development experience and

122
00:04:51,669 --> 00:04:53,830
you you have to know how to set up you

123
00:04:53,830 --> 00:04:56,800
know like basically in to do real time

124
00:04:56,800 --> 00:04:58,330
the way the way people started doing it

125
00:04:58,330 --> 00:05:00,340
was XMPP kind of was one of the first

126
00:05:00,340 --> 00:05:02,919
approaches to doing this and that that's

127
00:05:02,919 --> 00:05:04,659
flying that's great and it's you know

128
00:05:04,659 --> 00:05:06,639
you've got you've got this nice API and

129
00:05:06,639 --> 00:05:08,590
protocol to work with and tons of

130
00:05:08,590 --> 00:05:12,009
libraries out there and whatnot but you

131
00:05:12,009 --> 00:05:13,479
know then you have to know how to how to

132
00:05:13,479 --> 00:05:15,580
set up and run an xmpp server along with

133
00:05:15,580 --> 00:05:17,020
everything else that you're doing the

134
00:05:17,020 --> 00:05:19,060
truth is you know your average front end

135
00:05:19,060 --> 00:05:21,039
dev who's going to have to implement

136
00:05:21,039 --> 00:05:23,409
this isn't going to know enough to spend

137
00:05:23,409 --> 00:05:25,860
his weeknights you know like at home

138
00:05:25,860 --> 00:05:28,210
cranking out some real time app I mean

139
00:05:28,210 --> 00:05:30,070
it could happen but the truth is the

140
00:05:30,070 --> 00:05:32,830
easier it gets the lower the bar to the

141
00:05:32,830 --> 00:05:35,409
level of you know basically the lower

142
00:05:35,409 --> 00:05:37,270
the bar is to enter that start messing

143
00:05:37,270 --> 00:05:38,860
around with it easier it's going to be

144
00:05:38,860 --> 00:05:40,270
in and the faster you're going to see

145
00:05:40,270 --> 00:05:42,099
adoption and I think honestly I think

146
00:05:42,099 --> 00:05:43,599
that's what Guillermo is really done

147
00:05:43,599 --> 00:05:45,789
with socket i/o because you can run note

148
00:05:45,789 --> 00:05:47,530
it's a single process it's not that hard

149
00:05:47,530 --> 00:05:49,570
to set up on your machine and you can

150
00:05:49,570 --> 00:05:51,460
just have this this WebSocket server and

151
00:05:51,460 --> 00:05:52,599
just start sending messages back and

152
00:05:52,599 --> 00:05:57,310
forth so i mean when i first started

153
00:05:57,310 --> 00:06:00,729
getting into to web development I mean I

154
00:06:00,729 --> 00:06:03,880
was intimidated by ajax until i saw how

155
00:06:03,880 --> 00:06:05,500
easy it was to do with jquery and mike

156
00:06:05,500 --> 00:06:08,530
holy crap so I think I've belabored that

157
00:06:08,530 --> 00:06:11,770
point enough but the point is it's it's

158
00:06:11,770 --> 00:06:15,789
getting a heck of a lot easier so most

159
00:06:15,789 --> 00:06:16,690
of you how many of you guys have

160
00:06:16,690 --> 00:06:19,719
actually messed with socket i/o okay so

161
00:06:19,719 --> 00:06:23,139
most of you but basically it just makes

162
00:06:23,139 --> 00:06:25,270
it stupidly simple to send messages back

163
00:06:25,270 --> 00:06:27,099
and forth without having to think about

164
00:06:27,099 --> 00:06:28,449
the transport without having to

165
00:06:28,449 --> 00:06:31,150
basically just so on the on the server

166
00:06:31,150 --> 00:06:33,219
all you do now you got your normal

167
00:06:33,219 --> 00:06:36,460
little node server and then you can just

168
00:06:36,460 --> 00:06:37,569
start sending message

169
00:06:37,569 --> 00:06:40,149
I mean you say listen to the server and

170
00:06:40,149 --> 00:06:41,830
with the changes obviously this is going

171
00:06:41,830 --> 00:06:44,679
to be a little different but you can

172
00:06:44,679 --> 00:06:46,059
just send messages back and forth so

173
00:06:46,059 --> 00:06:47,949
then on the client you know you just

174
00:06:47,949 --> 00:06:50,709
create your socket and you say it's

175
00:06:50,709 --> 00:06:53,499
roughly the same API on the client and

176
00:06:53,499 --> 00:06:55,689
you just send messages it's just nice

177
00:06:55,689 --> 00:06:57,309
super simple bi-directional

178
00:06:57,309 --> 00:06:59,740
communication you don't need to worry

179
00:06:59,740 --> 00:07:01,029
about serialization you're working at

180
00:07:01,029 --> 00:07:03,399
the same language both places it's it's

181
00:07:03,399 --> 00:07:07,719
quite simple really so like I said my

182
00:07:07,719 --> 00:07:11,740
first experience with with with all this

183
00:07:11,740 --> 00:07:15,009
was just using XMPP and so we use stroke

184
00:07:15,009 --> 00:07:17,919
GS in the client and actually you know

185
00:07:17,919 --> 00:07:20,979
connect as an XMPP client turn the

186
00:07:20,979 --> 00:07:22,539
browser into the next peak peak client

187
00:07:22,539 --> 00:07:24,189
connect to some you know some other

188
00:07:24,189 --> 00:07:29,319
service and start receiving XML you know

189
00:07:29,319 --> 00:07:31,059
then you've got it and then you get a

190
00:07:31,059 --> 00:07:33,039
parse XML in the browser and all this

191
00:07:33,039 --> 00:07:36,059
other stuff so it's it's really a

192
00:07:36,059 --> 00:07:38,769
significantly more difficult and and the

193
00:07:38,769 --> 00:07:39,969
truth is there's nothing stopping us

194
00:07:39,969 --> 00:07:41,469
from messing around with this stuff and

195
00:07:41,469 --> 00:07:42,939
there's nothing stopping us from from

196
00:07:42,939 --> 00:07:45,909
expecting that you know a browser can

197
00:07:45,909 --> 00:07:48,360
support what we're trying to accomplish

198
00:07:48,360 --> 00:07:51,599
one of the most important things about

199
00:07:51,599 --> 00:07:53,529
building real time outs from what we've

200
00:07:53,529 --> 00:07:56,680
discovered is is state so the state is

201
00:07:56,680 --> 00:07:58,119
essentially just I mean if you can think

202
00:07:58,119 --> 00:08:00,249
of it as kind of a stripped-down way of

203
00:08:00,249 --> 00:08:03,819
representing just the core of what's in

204
00:08:03,819 --> 00:08:05,860
the application right now as far as just

205
00:08:05,860 --> 00:08:08,349
data no and I completely abstracted from

206
00:08:08,349 --> 00:08:14,289
views everything else and so recently

207
00:08:14,289 --> 00:08:16,059
I've started I mean I've done a lot of

208
00:08:16,059 --> 00:08:17,709
stuff aback on Jas and what backbone

209
00:08:17,709 --> 00:08:20,349
does is it lets you create models that

210
00:08:20,349 --> 00:08:23,860
are separate from your views so you

211
00:08:23,860 --> 00:08:26,379
create you create a backbone model and

212
00:08:26,379 --> 00:08:29,289
then you can bind changes to specific

213
00:08:29,289 --> 00:08:30,939
you can say for example I care about

214
00:08:30,939 --> 00:08:33,099
this property if this property change is

215
00:08:33,099 --> 00:08:35,289
called this handler really easy stuff

216
00:08:35,289 --> 00:08:38,800
but what happens is you can keep you can

217
00:08:38,800 --> 00:08:40,449
keep that data very kind of encapsulated

218
00:08:40,449 --> 00:08:42,339
in these models and then anything that

219
00:08:42,339 --> 00:08:46,600
changes you just respond to it so your

220
00:08:46,600 --> 00:08:50,170
view it is just you know your view gets

221
00:08:50,170 --> 00:08:51,209
past the model and

222
00:08:51,209 --> 00:08:54,509
so your model you you bind changes to

223
00:08:54,509 --> 00:08:56,910
the model to your views in this case you

224
00:08:56,910 --> 00:08:58,559
just rear-ended the whole thing here in

225
00:08:58,559 --> 00:08:59,939
this simple example I mean you could dig

226
00:08:59,939 --> 00:09:02,459
in and re-render certain portions of it

227
00:09:02,459 --> 00:09:03,749
or change values or whatever you want

228
00:09:03,749 --> 00:09:06,449
but I mean the point is once you've

229
00:09:06,449 --> 00:09:08,670
attracted your state everything else

230
00:09:08,670 --> 00:09:11,879
just responds to that and so one of the

231
00:09:11,879 --> 00:09:15,959
first apps that we use this for backbone

232
00:09:15,959 --> 00:09:18,769
dermot set up to do Ajax type

233
00:09:18,769 --> 00:09:21,300
architecture so you know they've got

234
00:09:21,300 --> 00:09:24,209
kind of the built-in methods for working

235
00:09:24,209 --> 00:09:26,279
with jquery ajax stuff so you write a

236
00:09:26,279 --> 00:09:28,920
REST API and then you can just call you

237
00:09:28,920 --> 00:09:30,720
know you build your collection of models

238
00:09:30,720 --> 00:09:32,879
and you just call fetch and it will go

239
00:09:32,879 --> 00:09:34,290
make the server call populate your

240
00:09:34,290 --> 00:09:38,730
models and off you go which is cool and

241
00:09:38,730 --> 00:09:40,410
then what we did is on top of that so we

242
00:09:40,410 --> 00:09:42,540
would do an AJAX call and then we would

243
00:09:42,540 --> 00:09:45,119
actually go subscribe to whatever items

244
00:09:45,119 --> 00:09:47,309
were were brought back in an exit PP

245
00:09:47,309 --> 00:09:48,689
channel and start getting live updates

246
00:09:48,689 --> 00:09:52,379
do that again it works it's possible

247
00:09:52,379 --> 00:09:54,929
it's but it's kind of tedious because

248
00:09:54,929 --> 00:09:57,240
you have to keep track of I mean at

249
00:09:57,240 --> 00:09:58,679
least your models are on living in one

250
00:09:58,679 --> 00:10:02,100
place and really the kind of this this

251
00:10:02,100 --> 00:10:04,379
this pattern about distracting that into

252
00:10:04,379 --> 00:10:07,379
this little observable model state is

253
00:10:07,379 --> 00:10:09,749
definitely super helpful as a front end

254
00:10:09,749 --> 00:10:11,220
dev and because you just you just

255
00:10:11,220 --> 00:10:12,689
changed everything that happens in your

256
00:10:12,689 --> 00:10:14,999
view all it does is flip a flag in your

257
00:10:14,999 --> 00:10:20,129
model and then your response to it so so

258
00:10:20,129 --> 00:10:22,799
what after after messing around with

259
00:10:22,799 --> 00:10:25,079
with with backbone and a little bit of

260
00:10:25,079 --> 00:10:28,439
socket i/o I I just thought well you get

261
00:10:28,439 --> 00:10:29,879
you get all these changes through

262
00:10:29,879 --> 00:10:32,850
backbone and yet you kind of do this

263
00:10:32,850 --> 00:10:35,540
ajax thing which is kind of not really I

264
00:10:35,540 --> 00:10:38,699
mean it at that point it's kind of you

265
00:10:38,699 --> 00:10:40,199
know asynchronous you make a change then

266
00:10:40,199 --> 00:10:41,850
you have to call save on that model and

267
00:10:41,850 --> 00:10:44,069
then that that he'll see realize that

268
00:10:44,069 --> 00:10:45,360
sends it to the server and as your

269
00:10:45,360 --> 00:10:49,199
server saves it so what I when I realize

270
00:10:49,199 --> 00:10:51,179
that backbone can actually run on the

271
00:10:51,179 --> 00:10:53,970
server as well and that opens up some

272
00:10:53,970 --> 00:10:55,259
interesting possibilities because what

273
00:10:55,259 --> 00:10:56,420
you can do is

274
00:10:56,420 --> 00:10:58,940
is basically send the exact same model

275
00:10:58,940 --> 00:11:02,089
file so you define your models once you

276
00:11:02,089 --> 00:11:03,860
send that as a script tag to the browser

277
00:11:03,860 --> 00:11:06,410
and you require it as a module in node

278
00:11:06,410 --> 00:11:10,160
and if you have a few other things you

279
00:11:10,160 --> 00:11:12,980
can actually so what I did is capsule

280
00:11:12,980 --> 00:11:14,899
JSL does it's it's an extension of

281
00:11:14,899 --> 00:11:17,029
backbone what it does is includes a way

282
00:11:17,029 --> 00:11:21,170
to nest models so you have kind of a one

283
00:11:21,170 --> 00:11:22,639
model that's kind of your route model

284
00:11:22,639 --> 00:11:25,550
and you can add collections to it you

285
00:11:25,550 --> 00:11:28,370
can add models to it and you can

286
00:11:28,370 --> 00:11:30,110
serialize the entire state just off of

287
00:11:30,110 --> 00:11:31,370
that root model there's an export

288
00:11:31,370 --> 00:11:33,829
function that you can just use to to get

289
00:11:33,829 --> 00:11:36,649
that all out and to its most concise

290
00:11:36,649 --> 00:11:38,870
state possible which you can just you

291
00:11:38,870 --> 00:11:41,959
know send across socket i/o am also the

292
00:11:41,959 --> 00:11:45,380
change events that you get there's no

293
00:11:45,380 --> 00:11:47,600
there's no event bubbling by default in

294
00:11:47,600 --> 00:11:49,730
backbone so I implemented just the OS

295
00:11:49,730 --> 00:11:51,769
now may away basically to pass those

296
00:11:51,769 --> 00:11:53,149
events up the tree just like you would

297
00:11:53,149 --> 00:11:55,070
in the browser what you're used to there

298
00:11:55,070 --> 00:11:58,459
and so you can listen for publish events

299
00:11:58,459 --> 00:12:02,089
on the root model and so all these

300
00:12:02,089 --> 00:12:04,550
things combined you can actually very

301
00:12:04,550 --> 00:12:08,570
quickly you know basically in it you're

302
00:12:08,570 --> 00:12:10,760
in the exact same models on the client

303
00:12:10,760 --> 00:12:13,760
as you get your connection you just send

304
00:12:13,760 --> 00:12:15,740
you just export the entire app state

305
00:12:15,740 --> 00:12:17,720
send it to the client and from there on

306
00:12:17,720 --> 00:12:19,910
you can actually just let the change

307
00:12:19,910 --> 00:12:22,720
events propagate back and forth which is

308
00:12:22,720 --> 00:12:25,339
there's clearly some some interesting

309
00:12:25,339 --> 00:12:26,959
problems that come along with us as far

310
00:12:26,959 --> 00:12:29,060
as security and scaling or not but it's

311
00:12:29,060 --> 00:12:32,269
it's a really kind of fascinating way to

312
00:12:32,269 --> 00:12:34,459
build applications because no matter

313
00:12:34,459 --> 00:12:35,990
where the change happens it gets

314
00:12:35,990 --> 00:12:39,319
propagated everywhere or you can do it

315
00:12:39,319 --> 00:12:40,850
so that you know you can say the server

316
00:12:40,850 --> 00:12:44,980
is the authority here and you know the

317
00:12:44,980 --> 00:12:47,660
individual client has to actually you

318
00:12:47,660 --> 00:12:49,459
know click send a command that sets the

319
00:12:49,459 --> 00:12:51,110
change on the server and then it gets

320
00:12:51,110 --> 00:12:52,670
propagated out I mean you can choose how

321
00:12:52,670 --> 00:12:55,279
you want to do it and you know you

322
00:12:55,279 --> 00:12:56,720
certainly have the valve validate

323
00:12:56,720 --> 00:12:57,889
anything that you're using for

324
00:12:57,889 --> 00:12:59,560
permissions or anything like that just

325
00:12:59,560 --> 00:13:02,000
to make sure that because I mean you

326
00:13:02,000 --> 00:13:03,589
could open a console on a browser and

327
00:13:03,589 --> 00:13:05,779
just edit the model and those things

328
00:13:05,779 --> 00:13:07,160
that just propagate if you don't have a

329
00:13:07,160 --> 00:13:07,800
secured

330
00:13:07,800 --> 00:13:12,269
probably but it makes basically if

331
00:13:12,269 --> 00:13:14,070
you're used to using backbone and if

332
00:13:14,070 --> 00:13:15,180
you're building your apps this way it

333
00:13:15,180 --> 00:13:18,510
doesn't take that much to just get this

334
00:13:18,510 --> 00:13:20,910
setup and and kind of have those events

335
00:13:20,910 --> 00:13:24,600
magically propagate so as a little

336
00:13:24,600 --> 00:13:26,100
example here this would be like your

337
00:13:26,100 --> 00:13:30,060
core app model right so what I've done

338
00:13:30,060 --> 00:13:31,529
is there's this little register function

339
00:13:31,529 --> 00:13:34,529
that creates a uuid for that model on

340
00:13:34,529 --> 00:13:37,829
the server and and then there's these

341
00:13:37,829 --> 00:13:39,810
addchild collection that child model

342
00:13:39,810 --> 00:13:42,420
type functions here the methods that you

343
00:13:42,420 --> 00:13:45,500
can use to build basically your tree of

344
00:13:45,500 --> 00:13:47,220
describes the structure of your

345
00:13:47,220 --> 00:13:52,320
application and so then you know on the

346
00:13:52,320 --> 00:13:54,680
server what you would do is you know

347
00:13:54,680 --> 00:13:57,390
what I'm doing right now because I was I

348
00:13:57,390 --> 00:13:58,709
knew he was going to do something with

349
00:13:58,709 --> 00:14:00,390
making it easier to do sessions and user

350
00:14:00,390 --> 00:14:03,000
data and stuff first I could i oh so I

351
00:14:03,000 --> 00:14:04,320
was kind of waiting for that but all I'm

352
00:14:04,320 --> 00:14:06,329
doing is grabbing the cookie on the

353
00:14:06,329 --> 00:14:08,279
client and saying hey and sending it

354
00:14:08,279 --> 00:14:11,040
across socket i/o Oh which is kind of

355
00:14:11,040 --> 00:14:14,339
kind of wonky but it works so basically

356
00:14:14,339 --> 00:14:16,110
you know you go fetch sure you get this

357
00:14:16,110 --> 00:14:18,089
session event from the client and you go

358
00:14:18,089 --> 00:14:19,950
fetch your user in the day database and

359
00:14:19,950 --> 00:14:22,020
you know whatever the corresponding app

360
00:14:22,020 --> 00:14:23,550
state that corresponds to that

361
00:14:23,550 --> 00:14:25,260
particular user and then you just

362
00:14:25,260 --> 00:14:27,660
serialize the thing send it out and also

363
00:14:27,660 --> 00:14:30,360
you bind you know you bind the changes

364
00:14:30,360 --> 00:14:33,779
for that public event on that state for

365
00:14:33,779 --> 00:14:36,120
that client on the disconnect you unbind

366
00:14:36,120 --> 00:14:41,640
it so it's fairly simple stuff but it

367
00:14:41,640 --> 00:14:44,510
works quite well so yeah on the on the

368
00:14:44,510 --> 00:14:46,620
it's all I'm doing on the client side is

369
00:14:46,620 --> 00:14:48,600
sending session across the wire and then

370
00:14:48,600 --> 00:14:51,320
listening for messages and the messages

371
00:14:51,320 --> 00:14:54,990
basically what i did is i came up with

372
00:14:54,990 --> 00:14:57,270
just basically a simple protocol for

373
00:14:57,270 --> 00:14:59,880
doing this so you get your initial state

374
00:14:59,880 --> 00:15:01,290
and then you get change events you get

375
00:15:01,290 --> 00:15:03,540
add events you get move events and you

376
00:15:03,540 --> 00:15:06,540
get removed events and then all you do

377
00:15:06,540 --> 00:15:10,290
is you look it up by that ID which the

378
00:15:10,290 --> 00:15:11,610
general was generated on the server and

379
00:15:11,610 --> 00:15:14,070
then you can just whatever the change

380
00:15:14,070 --> 00:15:16,470
was you just simply apply it on the

381
00:15:16,470 --> 00:15:18,899
other side of the connection so and it's

382
00:15:18,899 --> 00:15:21,630
really up to you as far as you know

383
00:15:21,630 --> 00:15:23,610
what you want to do there I've in theory

384
00:15:23,610 --> 00:15:26,070
you can just have it so that any client

385
00:15:26,070 --> 00:15:27,330
can change anything and it just gets

386
00:15:27,330 --> 00:15:29,610
propagated it completely depends on the

387
00:15:29,610 --> 00:15:31,530
use case for what you're trying to do

388
00:15:31,530 --> 00:15:37,140
but so anyway this is one of the little

389
00:15:37,140 --> 00:15:38,820
chat apps we built with it this was all

390
00:15:38,820 --> 00:15:44,010
XMPP but what we did here was actually

391
00:15:44,010 --> 00:15:45,750
kind of an interesting mixture of the

392
00:15:45,750 --> 00:15:49,200
two so XMPP is fantastic as an external

393
00:15:49,200 --> 00:15:50,580
API right because there's all these

394
00:15:50,580 --> 00:15:53,340
libraries out there that that can use it

395
00:15:53,340 --> 00:15:55,740
and for say you want to write an iphone

396
00:15:55,740 --> 00:15:57,170
app to go along with your application

397
00:15:57,170 --> 00:16:01,140
you need to provide that external API if

398
00:16:01,140 --> 00:16:03,120
all you have those models living in

399
00:16:03,120 --> 00:16:06,780
memory and note it's really hard to kind

400
00:16:06,780 --> 00:16:08,640
of give access to that and some kind of

401
00:16:08,640 --> 00:16:10,770
predictable manner to some other client

402
00:16:10,770 --> 00:16:13,140
and you could write some custom custom

403
00:16:13,140 --> 00:16:16,980
HTTP API or whatever but so anyways what

404
00:16:16,980 --> 00:16:20,190
we ended up doing here is basically in

405
00:16:20,190 --> 00:16:21,750
this particular use case we just add

406
00:16:21,750 --> 00:16:23,040
this little chat bar at the bottom and

407
00:16:23,040 --> 00:16:26,100
if somebody wants to go you know open a

408
00:16:26,100 --> 00:16:28,170
new tab we don't want to have to

409
00:16:28,170 --> 00:16:30,210
reconnect that with xmpp again so what

410
00:16:30,210 --> 00:16:32,760
we did is just maintain an XMPP

411
00:16:32,760 --> 00:16:35,100
connection on the server for each client

412
00:16:35,100 --> 00:16:37,170
and then everything else is being sent

413
00:16:37,170 --> 00:16:39,900
and synchronized to through capsule so

414
00:16:39,900 --> 00:16:42,270
as a result you open a new tab it's

415
00:16:42,270 --> 00:16:44,550
immediately there it's way faster to

416
00:16:44,550 --> 00:16:46,380
reconnect that way than having to

417
00:16:46,380 --> 00:16:49,440
re-establish that XMPP connection so

418
00:16:49,440 --> 00:16:50,820
that's just one of the things we did

419
00:16:50,820 --> 00:16:54,450
with it um another thing that we kind of

420
00:16:54,450 --> 00:16:56,280
a mess around with is this this little

421
00:16:56,280 --> 00:16:58,650
app called and bang and it's a

422
00:16:58,650 --> 00:17:00,570
collaboration app and what we're doing

423
00:17:00,570 --> 00:17:03,260
here is we've got our entire team is

424
00:17:03,260 --> 00:17:07,770
like 10 of us and so here you here we

425
00:17:07,770 --> 00:17:09,839
have a shared team state and then

426
00:17:09,839 --> 00:17:12,420
members live within that so the so your

427
00:17:12,420 --> 00:17:14,819
your route state for the app is actually

428
00:17:14,819 --> 00:17:18,300
the team and then each user is a member

429
00:17:18,300 --> 00:17:20,490
of the team as you know it's somewhere

430
00:17:20,490 --> 00:17:23,430
down on the tree so what happens is as

431
00:17:23,430 --> 00:17:25,110
you make changes to your tasks and

432
00:17:25,110 --> 00:17:28,560
whatnot um it just gets propagated to

433
00:17:28,560 --> 00:17:32,430
the rest of the team the and and it's

434
00:17:32,430 --> 00:17:34,890
surprisingly quick even if you even if

435
00:17:34,890 --> 00:17:35,460
you decide

436
00:17:35,460 --> 00:17:36,630
you're going to set this stuff on the

437
00:17:36,630 --> 00:17:38,730
server initially and then wait for the

438
00:17:38,730 --> 00:17:41,010
change to come back it's surprisingly

439
00:17:41,010 --> 00:17:42,539
responsive if you're using WebSockets

440
00:17:42,539 --> 00:17:43,620
see if you had a decent internet

441
00:17:43,620 --> 00:17:47,700
connection so I was going to try to do a

442
00:17:47,700 --> 00:17:49,710
little demo but I don't know how big the

443
00:17:49,710 --> 00:17:54,990
screen is here but I mean just as an

444
00:17:54,990 --> 00:17:56,610
example of something you can do with it

445
00:17:56,610 --> 00:17:58,529
right so and I don't even have the

446
00:17:58,529 --> 00:17:59,669
internet connection going here but

447
00:17:59,669 --> 00:18:01,919
basically so you this whole thing is uh

448
00:18:01,919 --> 00:18:04,919
is keyboard control too so you can just

449
00:18:04,919 --> 00:18:07,409
add like you know if I add a new task

450
00:18:07,409 --> 00:18:10,649
here it's actually what it's doing is

451
00:18:10,649 --> 00:18:12,929
it's sending to the server saying you

452
00:18:12,929 --> 00:18:15,000
know here's an ad event it's getting the

453
00:18:15,000 --> 00:18:16,740
change response it's getting the the

454
00:18:16,740 --> 00:18:20,100
addy event back and and then the view is

455
00:18:20,100 --> 00:18:21,870
responding to that and if we had

456
00:18:21,870 --> 00:18:27,580
multiple windows open of the same thing

457
00:18:27,590 --> 00:18:29,940
you know the changes all happen

458
00:18:29,940 --> 00:18:31,620
simultaneously right so it obviously

459
00:18:31,620 --> 00:18:33,510
we've got some CSS issues going on here

460
00:18:33,510 --> 00:18:37,350
but the fact is I mean everything is

461
00:18:37,350 --> 00:18:39,240
simultaneous it's super fast it's super

462
00:18:39,240 --> 00:18:41,130
easy to work with the truth is all you

463
00:18:41,130 --> 00:18:44,190
got to do is just modify the state I

464
00:18:44,190 --> 00:18:45,630
mean you're just setting you're just

465
00:18:45,630 --> 00:18:47,309
setting values on this shared state and

466
00:18:47,309 --> 00:18:48,840
everything else just kind of propagates

467
00:18:48,840 --> 00:18:51,720
and takes care of itself we are

468
00:18:51,720 --> 00:18:55,080
definitely doing some I mean some of the

469
00:18:55,080 --> 00:18:56,640
obvious some of the obvious problems

470
00:18:56,640 --> 00:18:58,559
here are persistence and scaling and

471
00:18:58,559 --> 00:19:00,330
everything else because if you're going

472
00:19:00,330 --> 00:19:02,039
to have to keep the entire application

473
00:19:02,039 --> 00:19:04,919
state in memory on the server there's

474
00:19:04,919 --> 00:19:07,679
some challenges there so we're working

475
00:19:07,679 --> 00:19:13,039
on actually my coworker fritzy here is a

476
00:19:13,039 --> 00:19:17,760
he's on the xsf Council of the XMPP only

477
00:19:17,760 --> 00:19:19,830
the XMPP standards foundation Council

478
00:19:19,830 --> 00:19:23,520
and you know so he's totally an XMPP guy

479
00:19:23,520 --> 00:19:27,029
and what he's been looking at is

480
00:19:27,029 --> 00:19:31,320
basically writing using Redis as kind of

481
00:19:31,320 --> 00:19:35,190
a shared memory for for the types of

482
00:19:35,190 --> 00:19:37,320
applications so basically your register

483
00:19:37,320 --> 00:19:39,299
function that I called here would we

484
00:19:39,299 --> 00:19:42,299
basically set up a feed-in when he's

485
00:19:42,299 --> 00:19:46,289
calling thou'lt j/s and then you can use

486
00:19:46,289 --> 00:19:48,290
Redis is clustering to just

487
00:19:48,290 --> 00:19:49,310
I mean you can just tilt those as many

488
00:19:49,310 --> 00:19:52,940
servers as you need to so and then you

489
00:19:52,940 --> 00:19:56,870
know pub/sub events do that instead the

490
00:19:56,870 --> 00:19:58,310
there's that I mean there's definitely

491
00:19:58,310 --> 00:20:02,030
some other some other challenges here as

492
00:20:02,030 --> 00:20:05,030
far as you know in the case of the team

493
00:20:05,030 --> 00:20:06,950
here you can't just have one view that

494
00:20:06,950 --> 00:20:09,020
responds to the same model for everybody

495
00:20:09,020 --> 00:20:11,090
because you want every every member of

496
00:20:11,090 --> 00:20:13,610
the team to have you know their view of

497
00:20:13,610 --> 00:20:17,420
that so what we're doing is instead of

498
00:20:17,420 --> 00:20:19,480
trying to I messed around a lot with in

499
00:20:19,480 --> 00:20:22,820
gear most channels implementation think

500
00:20:22,820 --> 00:20:23,870
would have been interesting the

501
00:20:23,870 --> 00:20:25,820
multiplexing because then you could have

502
00:20:25,820 --> 00:20:27,260
a team channel and you could have your

503
00:20:27,260 --> 00:20:30,890
own channel but you know so what we're

504
00:20:30,890 --> 00:20:32,990
doing is basically the members are

505
00:20:32,990 --> 00:20:35,420
further down the tree but the view just

506
00:20:35,420 --> 00:20:39,260
identifies you know this user is X user

507
00:20:39,260 --> 00:20:42,290
and then so as a result anything that's

508
00:20:42,290 --> 00:20:44,540
specific to that user is getting set as

509
00:20:44,540 --> 00:20:46,700
a property of that users model in the

510
00:20:46,700 --> 00:20:48,890
team so the entire team state is still

511
00:20:48,890 --> 00:20:53,240
sink but the you know your view your

512
00:20:53,240 --> 00:20:55,100
view just shows the correct one based on

513
00:20:55,100 --> 00:20:59,000
session ID of that user so the other

514
00:20:59,000 --> 00:21:01,160
thing is like I said providing external

515
00:21:01,160 --> 00:21:03,590
api's and one of the things that that

516
00:21:03,590 --> 00:21:06,370
thunk does is basically you can have

517
00:21:06,370 --> 00:21:08,780
thunk is just a contract system with

518
00:21:08,780 --> 00:21:11,210
Reddit and so you could actually have

519
00:21:11,210 --> 00:21:14,000
just an XMPP interface to thunk that

520
00:21:14,000 --> 00:21:15,980
just uses pub/sub you could have it

521
00:21:15,980 --> 00:21:17,930
right you know RSS or atom feeds or

522
00:21:17,930 --> 00:21:21,170
whatever so there's definitely some

523
00:21:21,170 --> 00:21:23,570
stuff there that's still missing that

524
00:21:23,570 --> 00:21:26,690
we're working on but just you know not

525
00:21:26,690 --> 00:21:28,430
like here's how you should do real-time

526
00:21:28,430 --> 00:21:30,440
just kind of showing what we've been

527
00:21:30,440 --> 00:21:32,090
doing what we midpoint around with and

528
00:21:32,090 --> 00:21:34,190
kind of what we found hopefully

529
00:21:34,190 --> 00:21:36,500
hopefully that's useful to you guys and

530
00:21:36,500 --> 00:21:38,800
anybody who has questions or anything

531
00:21:38,800 --> 00:21:45,669
just any questions

532
00:21:45,679 --> 00:21:53,789
now Jas yeah oh yeah I haven't spent a

533
00:21:53,789 --> 00:21:55,200
lot of time looking at now Jas my

534
00:21:55,200 --> 00:21:57,179
impression is that basically if you you

535
00:21:57,179 --> 00:21:59,700
have this kind of magic object and if

536
00:21:59,700 --> 00:22:02,100
you create a function on the client that

537
00:22:02,100 --> 00:22:05,629
function becomes available on the server

538
00:22:05,629 --> 00:22:08,879
which is interesting and that's that I

539
00:22:08,879 --> 00:22:10,350
mean that's that's cool it's just it's

540
00:22:10,350 --> 00:22:12,029
just an infection on top of socket i/o

541
00:22:12,029 --> 00:22:15,690
basically right but yeah that would be

542
00:22:15,690 --> 00:22:17,609
another interesting architecture choice

543
00:22:17,609 --> 00:22:20,970
but I mean you could totally do that

544
00:22:20,970 --> 00:22:23,190
anyways i mean i i've got a method in

545
00:22:23,190 --> 00:22:24,720
here for just you know call this method

546
00:22:24,720 --> 00:22:27,989
on this model on the server does

547
00:22:27,989 --> 00:22:30,779
basically the same thing so it's cool I

548
00:22:30,779 --> 00:22:36,340
mean I I haven't played with it a lot

549
00:22:36,350 --> 00:22:45,120
other questions

550
00:22:45,130 --> 00:22:49,600
oh yeah so I think I have one last slide

551
00:22:49,600 --> 00:22:52,930
yeah okay so capsule capsule Jas is kind

552
00:22:52,930 --> 00:22:54,970
of what what I wrote that it that adds

553
00:22:54,970 --> 00:22:57,640
those features to backbone I'd love to

554
00:22:57,640 --> 00:22:59,350
get more feedback on that I know it's

555
00:22:59,350 --> 00:23:00,580
certainly not perfect and i know this

556
00:23:00,580 --> 00:23:02,850
approach still has the shortcomings but

557
00:23:02,850 --> 00:23:04,600
we're going to keep playing with an

558
00:23:04,600 --> 00:23:08,020
experimental see what we can do and also

559
00:23:08,020 --> 00:23:09,880
if any guys are interested in messing

560
00:23:09,880 --> 00:23:12,940
around with an bang as a little pre

561
00:23:12,940 --> 00:23:15,070
alpha something or other i just hit me

562
00:23:15,070 --> 00:23:16,480
up on Twitter and I can get some invites

563
00:23:16,480 --> 00:23:17,800
sent out because we've got that almost

564
00:23:17,800 --> 00:23:20,110
we're almost ready to publish that stuff

565
00:23:20,110 --> 00:23:21,940
so it's kind of a that way you can at

566
00:23:21,940 --> 00:23:23,200
least have something that you can play

567
00:23:23,200 --> 00:23:26,950
with and see how it works as well but

568
00:23:26,950 --> 00:23:28,990
yeah and then just some other things

569
00:23:28,990 --> 00:23:33,730
here one of the at jas conf which I

570
00:23:33,730 --> 00:23:35,920
wasn't there at but funk unit is it

571
00:23:35,920 --> 00:23:37,480
seems like a really way cool way to test

572
00:23:37,480 --> 00:23:39,790
these types of apps because basically

573
00:23:39,790 --> 00:23:44,440
you can just run basically it's built on

574
00:23:44,440 --> 00:23:46,600
top of queue unit which is the jQuery

575
00:23:46,600 --> 00:23:51,670
testing thing but they and you can bail

576
00:23:51,670 --> 00:23:53,350
owes your app open an iframe and says

577
00:23:53,350 --> 00:23:55,210
hey click this button do this thing and

578
00:23:55,210 --> 00:23:56,950
make sure that this you know wait for

579
00:23:56,950 --> 00:23:58,300
this thing to become visible kind of

580
00:23:58,300 --> 00:23:59,860
thing and it's a really awesome way to

581
00:23:59,860 --> 00:24:01,990
test these types of that but just as a

582
00:24:01,990 --> 00:24:05,590
little side note so well thank you very

