1
00:00:15,360 --> 00:00:20,380

you

2
00:00:20,390 --> 00:00:23,339
so hi everybody my name is john britton

3
00:00:23,339 --> 00:00:25,289
and i'm going to be talking about how we

4
00:00:25,289 --> 00:00:27,929
do operations at github and how you can

5
00:00:27,929 --> 00:00:31,320
too so first just a little bit about me

6
00:00:31,320 --> 00:00:34,320
I am homeless I used to live in New York

7
00:00:34,320 --> 00:00:35,760
City but I've been on the road for about

8
00:00:35,760 --> 00:00:37,589
a year and a half now right now I'm

9
00:00:37,589 --> 00:00:40,559
living in Manila and i'll be heading out

10
00:00:40,559 --> 00:00:42,120
you know at the end of the week for the

11
00:00:42,120 --> 00:00:44,460
next place so that's just a little bit

12
00:00:44,460 --> 00:00:46,079
about my background i started working at

13
00:00:46,079 --> 00:00:47,550
github about a year and a half ago and

14
00:00:47,550 --> 00:00:49,739
when i first started i thought that

15
00:00:49,739 --> 00:00:51,930
operations was just for neck beards and

16
00:00:51,930 --> 00:00:54,689
you know when you think about it it's

17
00:00:54,689 --> 00:00:56,549
like you know many companies have a

18
00:00:56,549 --> 00:00:59,699
dedicated operations team and the

19
00:00:59,699 --> 00:01:01,110
developers write their code they build

20
00:01:01,110 --> 00:01:02,640
their apps they say i want to use this

21
00:01:02,640 --> 00:01:04,049
new thing called node and the ops team

22
00:01:04,049 --> 00:01:05,579
says no way that's crazy i don't know

23
00:01:05,579 --> 00:01:07,619
how to do how to do that and you go back

24
00:01:07,619 --> 00:01:09,240
and forth and you throw the the problem

25
00:01:09,240 --> 00:01:10,590
over there over the wall to somebody

26
00:01:10,590 --> 00:01:12,409
else and they solve the problem for you

27
00:01:12,409 --> 00:01:16,079
and you know a lot of companies operate

28
00:01:16,079 --> 00:01:18,810
that way but you don't have to and this

29
00:01:18,810 --> 00:01:20,939
is going to be the story about how we

30
00:01:20,939 --> 00:01:23,430
kind of change that style within our

31
00:01:23,430 --> 00:01:26,580
company so as with everything we do at

32
00:01:26,580 --> 00:01:28,920
github we try and work from first

33
00:01:28,920 --> 00:01:30,390
principles and i'll tell you a little

34
00:01:30,390 --> 00:01:34,140
bit about why we we operate this way the

35
00:01:34,140 --> 00:01:35,250
first value that we have is

36
00:01:35,250 --> 00:01:37,830
collaboration everything that we do we

37
00:01:37,830 --> 00:01:40,620
care about doing it with other people so

38
00:01:40,620 --> 00:01:42,450
it's better to work together than to

39
00:01:42,450 --> 00:01:46,260
work alone when you have a you know

40
00:01:46,260 --> 00:01:47,430
terminal and you go to deploy your

41
00:01:47,430 --> 00:01:50,100
application no one can see what you're

42
00:01:50,100 --> 00:01:51,900
doing right you're just on your machine

43
00:01:51,900 --> 00:01:54,690
running running like deploy to Heroku or

44
00:01:54,690 --> 00:01:57,240
whatever your your stack is and there's

45
00:01:57,240 --> 00:01:58,470
no way to kind of work with each other

46
00:01:58,470 --> 00:02:01,890
so this is one one main value the next

47
00:02:01,890 --> 00:02:04,860
is automation how many people can deploy

48
00:02:04,860 --> 00:02:09,209
by running one command how many people

49
00:02:09,209 --> 00:02:11,849
have a deploy process it takes more than

50
00:02:11,849 --> 00:02:16,459
five minutes anybody yeah okay so

51
00:02:16,459 --> 00:02:18,540
basically the point here is that you

52
00:02:18,540 --> 00:02:22,319
should you should never have the same do

53
00:02:22,319 --> 00:02:24,030
the same thing twice right if you can if

54
00:02:24,030 --> 00:02:28,379
you can strip it you should so the next

55
00:02:28,379 --> 00:02:30,480
is experimentation it shouldn't be

56
00:02:30,480 --> 00:02:32,500
difficult to try new things

57
00:02:32,500 --> 00:02:34,150
when we're talking about you know

58
00:02:34,150 --> 00:02:36,760
launching a new application or testing

59
00:02:36,760 --> 00:02:37,960
out a new feature it should be really

60
00:02:37,960 --> 00:02:39,460
easy to just deploy a branch of your

61
00:02:39,460 --> 00:02:41,920
application or just deploy a new thing

62
00:02:41,920 --> 00:02:43,900
without having to go through lots of

63
00:02:43,900 --> 00:02:46,870
Hoops if you can automate the process

64
00:02:46,870 --> 00:02:48,640
for provisioning it's really easy to

65
00:02:48,640 --> 00:02:51,610
experiment and create new apps and the

66
00:02:51,610 --> 00:02:53,890
final value that I wanted to talk about

67
00:02:53,890 --> 00:02:56,740
is distribution so we want knowledge

68
00:02:56,740 --> 00:02:58,180
within the company to be distributed

69
00:02:58,180 --> 00:02:59,680
among people so that if someone is

70
00:02:59,680 --> 00:03:00,970
unavailable for vacation or if they

71
00:03:00,970 --> 00:03:03,550
leave the company we don't have a single

72
00:03:03,550 --> 00:03:05,440
point of failure so those are like the

73
00:03:05,440 --> 00:03:08,739
four main reasons why we do the things

74
00:03:08,739 --> 00:03:12,100
that I'm going to talk about but let's

75
00:03:12,100 --> 00:03:14,459
talk about what we're actually doing so

76
00:03:14,459 --> 00:03:16,570
there are two applications i'm going to

77
00:03:16,570 --> 00:03:18,310
talk about they're both open source and

78
00:03:18,310 --> 00:03:20,220
you can use them the first is boxing

79
00:03:20,220 --> 00:03:23,020
it's a tool for managing developer

80
00:03:23,020 --> 00:03:26,140
workstations so and the second is cubot

81
00:03:26,140 --> 00:03:30,040
it's a node.js application for adding a

82
00:03:30,040 --> 00:03:33,970
bot to your chat rooms so I'll start at

83
00:03:33,970 --> 00:03:35,860
the beginning and kind of work through

84
00:03:35,860 --> 00:03:38,019
you know what a new developer does it

85
00:03:38,019 --> 00:03:40,239
github and then how how they get started

86
00:03:40,239 --> 00:03:43,060
so boxing I get up most people are using

87
00:03:43,060 --> 00:03:46,030
max for development there are some

88
00:03:46,030 --> 00:03:47,290
people on Windows there are some people

89
00:03:47,290 --> 00:03:50,470
on Linux but for the most part we use

90
00:03:50,470 --> 00:03:52,780
macs and boxing is a tool specifically

91
00:03:52,780 --> 00:03:54,970
for max to make it really easy to get

92
00:03:54,970 --> 00:03:57,459
started and kind of keep all of our

93
00:03:57,459 --> 00:04:00,340
machines in a good clean state the

94
00:04:00,340 --> 00:04:01,840
overall goal is to eliminate friction

95
00:04:01,840 --> 00:04:05,110
when you start a new job it's often that

96
00:04:05,110 --> 00:04:07,120
you know you have to spend a ton of time

97
00:04:07,120 --> 00:04:08,739
setting up the developed environment for

98
00:04:08,739 --> 00:04:11,140
the first time I remember my first

99
00:04:11,140 --> 00:04:12,549
programming job it took me a whole week

100
00:04:12,549 --> 00:04:14,530
before I could actually get the whole

101
00:04:14,530 --> 00:04:16,299
stack running on my machine that's a

102
00:04:16,299 --> 00:04:18,160
terrible waste of time terrible waste of

103
00:04:18,160 --> 00:04:20,079
money and every single time you add a

104
00:04:20,079 --> 00:04:21,910
new developer team you have this new

105
00:04:21,910 --> 00:04:23,200
develop to the team you have the same

106
00:04:23,200 --> 00:04:26,350
problem so the goal of boxing is to make

107
00:04:26,350 --> 00:04:27,970
it possible to build something new on

108
00:04:27,970 --> 00:04:32,020
the first day of work so what does a

109
00:04:32,020 --> 00:04:33,700
typical first day at github look like we

110
00:04:33,700 --> 00:04:36,010
have about 215 people working in the

111
00:04:36,010 --> 00:04:37,600
company now and every time somebody

112
00:04:37,600 --> 00:04:40,630
joins often a few new people join on the

113
00:04:40,630 --> 00:04:42,220
same day what do they do they get a

114
00:04:42,220 --> 00:04:44,169
brand new mac laptop retina to

115
00:04:44,169 --> 00:04:45,789
play they unwrapped it and they're

116
00:04:45,789 --> 00:04:47,860
having a good ol time and they go and

117
00:04:47,860 --> 00:04:49,330
they install xcode command line tools

118
00:04:49,330 --> 00:04:52,349
right this is the first first step and

119
00:04:52,349 --> 00:04:54,520
you might say oh this that doesn't sound

120
00:04:54,520 --> 00:04:56,409
very automated but we can't automate

121
00:04:56,409 --> 00:04:57,879
this part because you have to click the

122
00:04:57,879 --> 00:04:59,979
terms of service and all the blah so

123
00:04:59,979 --> 00:05:01,900
this is not automated but once you've

124
00:05:01,900 --> 00:05:03,400
got command line tools you've got you

125
00:05:03,400 --> 00:05:05,469
know a compiler and whatever you need

126
00:05:05,469 --> 00:05:08,439
you just go to an internal application

127
00:05:08,439 --> 00:05:11,620
just a behind an employee authorization

128
00:05:11,620 --> 00:05:13,539
and there's a web page and the web page

129
00:05:13,539 --> 00:05:15,699
has this command and this command you

130
00:05:15,699 --> 00:05:17,080
just copy and paste it in your terminal

131
00:05:17,080 --> 00:05:18,939
and you run it what it does is it goes

132
00:05:18,939 --> 00:05:21,430
to it pulls down a script to a temporary

133
00:05:21,430 --> 00:05:23,860
directory and then it executes the

134
00:05:23,860 --> 00:05:26,080
script that downloaded and pretty much

135
00:05:26,080 --> 00:05:28,779
it does everything you need it just asks

136
00:05:28,779 --> 00:05:30,009
you for your github user name your

137
00:05:30,009 --> 00:05:33,669
github password your machine username

138
00:05:33,669 --> 00:05:36,039
and your machine password so trust me

139
00:05:36,039 --> 00:05:38,050
it's fine we're not going to do anything

140
00:05:38,050 --> 00:05:40,419
bad too but it is a big leap of faith

141
00:05:40,419 --> 00:05:42,099
the first thing to do is give you ever

142
00:05:42,099 --> 00:05:44,680
give the script root access and so we do

143
00:05:44,680 --> 00:05:46,749
that and then you grab a beverage and

144
00:05:46,749 --> 00:05:49,449
wait on a fast connection you could be

145
00:05:49,449 --> 00:05:51,849
done in about an hour maybe a little bit

146
00:05:51,849 --> 00:05:53,680
more on a slow connection it could be a

147
00:05:53,680 --> 00:05:55,389
few hours you know downloading all of

148
00:05:55,389 --> 00:05:58,479
the different tools but once once it

149
00:05:58,479 --> 00:06:00,039
finishes you've got everything you need

150
00:06:00,039 --> 00:06:02,979
for a development environment homebrew

151
00:06:02,979 --> 00:06:06,759
get all this stuff node no damn much of

152
00:06:06,759 --> 00:06:09,490
you know javascript stuff also all kinds

153
00:06:09,490 --> 00:06:11,139
of other platforms to not everything is

154
00:06:11,139 --> 00:06:13,599
listed here so now you've got a great

155
00:06:13,599 --> 00:06:15,789
brand new mac laptop all set up for

156
00:06:15,789 --> 00:06:16,899
development you don't have to worry

157
00:06:16,899 --> 00:06:18,759
about do you have the Ruby versions you

158
00:06:18,759 --> 00:06:20,199
need you have the node versions you need

159
00:06:20,199 --> 00:06:22,810
everything is there but you probably

160
00:06:22,810 --> 00:06:26,289
have some feature requests or some bugs

161
00:06:26,289 --> 00:06:27,819
that you've noticed on github com that

162
00:06:27,819 --> 00:06:29,080
you really really want to fix on your

163
00:06:29,080 --> 00:06:31,599
first day right so how do we get github

164
00:06:31,599 --> 00:06:33,159
installed on our machine we want to have

165
00:06:33,159 --> 00:06:35,379
a local development environment for

166
00:06:35,379 --> 00:06:37,509
github you just run one command box and

167
00:06:37,509 --> 00:06:39,759
github and everything is set up for you

168
00:06:39,759 --> 00:06:42,759
it creates databases it creates key

169
00:06:42,759 --> 00:06:44,560
value stores if you need them it creates

170
00:06:44,560 --> 00:06:48,219
everything and that's it you've got

171
00:06:48,219 --> 00:06:50,879
github now you can go write some code so

172
00:06:50,879 --> 00:06:53,440
how does the github port work how does

173
00:06:53,440 --> 00:06:55,960
it how does box in know

174
00:06:55,960 --> 00:06:57,860
going download this particular

175
00:06:57,860 --> 00:07:00,950
repository and install these back-end

176
00:07:00,950 --> 00:07:03,440
dependencies and databases and you know

177
00:07:03,440 --> 00:07:05,150
all this stuff that we need it uses a

178
00:07:05,150 --> 00:07:08,870
project manifest so let's take a look at

179
00:07:08,870 --> 00:07:11,150
a project manifest for a project that i

180
00:07:11,150 --> 00:07:13,130
created so i could help i work on the

181
00:07:13,130 --> 00:07:14,870
education team and I handle all the kind

182
00:07:14,870 --> 00:07:16,940
of inbound requests from students and

183
00:07:16,940 --> 00:07:19,730
teachers who are you know wanting to use

184
00:07:19,730 --> 00:07:21,050
github for free so i built an

185
00:07:21,050 --> 00:07:22,340
application that can like automate all

186
00:07:22,340 --> 00:07:24,980
that stuff for me and if i want other

187
00:07:24,980 --> 00:07:26,270
people to collaborate with me in the

188
00:07:26,270 --> 00:07:28,340
company it should be as easy as saying

189
00:07:28,340 --> 00:07:30,530
box in education web and they should

190
00:07:30,530 --> 00:07:32,630
have my application setup so here's what

191
00:07:32,630 --> 00:07:34,490
the the project manifest looks like for

192
00:07:34,490 --> 00:07:36,380
my application it's a pretty

193
00:07:36,380 --> 00:07:37,700
straightforward it just has the name of

194
00:07:37,700 --> 00:07:40,850
the application and by default this this

195
00:07:40,850 --> 00:07:42,890
kind of module format also matches with

196
00:07:42,890 --> 00:07:46,400
our github organizations so box and

197
00:07:46,400 --> 00:07:48,410
knows to look at github com / github /

198
00:07:48,410 --> 00:07:50,690
or education web to find my application

199
00:07:50,690 --> 00:07:52,550
and then it has some dependencies dot

200
00:07:52,550 --> 00:07:55,190
anvil astok surge Redis Ruby specific

201
00:07:55,190 --> 00:07:57,620
version and also information about the

202
00:07:57,620 --> 00:07:59,840
databases that I need for development so

203
00:07:59,840 --> 00:08:00,980
that's it it's just a pretty

204
00:08:00,980 --> 00:08:03,890
straightforward kind of declarative

205
00:08:03,890 --> 00:08:06,530
thing if you're familiar this is

206
00:08:06,530 --> 00:08:08,840
actually puppet under the hood so if you

207
00:08:08,840 --> 00:08:11,360
use puppet this is you know exactly what

208
00:08:11,360 --> 00:08:12,830
you're used to if not it's not that hard

209
00:08:12,830 --> 00:08:15,620
to get going so this defines a project

210
00:08:15,620 --> 00:08:20,120
for us so once we've got a project we

211
00:08:20,120 --> 00:08:21,620
can say you know other developers can

212
00:08:21,620 --> 00:08:23,810
come and help us out but maybe I have

213
00:08:23,810 --> 00:08:25,250
multiple computers you know I have a

214
00:08:25,250 --> 00:08:27,800
laptop I have a desktop when the newest

215
00:08:27,800 --> 00:08:29,420
you know new macbook comes out I don't

216
00:08:29,420 --> 00:08:32,060
want to get the new one and I don't know

217
00:08:32,060 --> 00:08:33,020
about you guys but I have a lot of

218
00:08:33,020 --> 00:08:35,330
tweaks a lot of individual things and

219
00:08:35,330 --> 00:08:36,979
settings that i like about the way i

220
00:08:36,979 --> 00:08:38,690
have my mac setup that i don't want to

221
00:08:38,690 --> 00:08:41,060
have to repeat over and over again so we

222
00:08:41,060 --> 00:08:42,560
have something called personal manifests

223
00:08:42,560 --> 00:08:44,750
in boxing that'll let you achieve this

224
00:08:44,750 --> 00:08:46,250
goal as well so you can you can actually

225
00:08:46,250 --> 00:08:48,230
code every kind of configuration change

226
00:08:48,230 --> 00:08:51,800
to your machine and save it on like a

227
00:08:51,800 --> 00:08:54,320
per-user basis so let's take a look at

228
00:08:54,320 --> 00:08:57,080
my personal manifest step by step I know

229
00:08:57,080 --> 00:08:59,230
the text is kind of hard to see but I

230
00:08:59,230 --> 00:09:02,180
think you'll be able to get the idea so

231
00:09:02,180 --> 00:09:04,700
first it's a puppet class in the people

232
00:09:04,700 --> 00:09:06,020
module so we have a module that

233
00:09:06,020 --> 00:09:07,950
represents each person at the company

234
00:09:07,950 --> 00:09:10,080
and mine is John Dee Britain that's my

235
00:09:10,080 --> 00:09:13,170
username next you can see that I've

236
00:09:13,170 --> 00:09:15,990
included a bunch of puppet modules or

237
00:09:15,990 --> 00:09:18,870
boxing things there's a puppet module

238
00:09:18,870 --> 00:09:21,630
called OSX made specifically for boxing

239
00:09:21,630 --> 00:09:23,910
that includes a bunch of default

240
00:09:23,910 --> 00:09:26,220
settings so things like enabling the

241
00:09:26,220 --> 00:09:30,360
control zoom yeah things like that and

242
00:09:30,360 --> 00:09:33,540
you know disabling the doc all that kind

243
00:09:33,540 --> 00:09:34,830
of stuff is there and these are all

244
00:09:34,830 --> 00:09:36,480
pre-written packages that anybody can

245
00:09:36,480 --> 00:09:39,810
use next you can see that i'm including

246
00:09:39,810 --> 00:09:41,160
a bunch of applications so i use

247
00:09:41,160 --> 00:09:43,220
1password I've got Firefox and Chrome

248
00:09:43,220 --> 00:09:45,810
dropbox so when I get a new machine I've

249
00:09:45,810 --> 00:09:47,940
run this stuff it automatically installs

250
00:09:47,940 --> 00:09:49,650
all these applications for me and you

251
00:09:49,650 --> 00:09:50,640
might be curious you know what's this

252
00:09:50,640 --> 00:09:53,580
include you know include chrome actually

253
00:09:53,580 --> 00:09:55,290
doing well there's an organization on

254
00:09:55,290 --> 00:09:58,440
github github.com / boxing and there's a

255
00:09:58,440 --> 00:09:59,760
bunch of repositories under that

256
00:09:59,760 --> 00:10:01,800
organization that contain all the box

257
00:10:01,800 --> 00:10:04,980
and modules so we don't maintain all of

258
00:10:04,980 --> 00:10:06,270
those it's actually a community effort

259
00:10:06,270 --> 00:10:08,910
so if you create a new box in module you

260
00:10:08,910 --> 00:10:10,500
can send a request to us and we'll fork

261
00:10:10,500 --> 00:10:12,150
it into that organization and make it

262
00:10:12,150 --> 00:10:13,890
available to other people so this is

263
00:10:13,890 --> 00:10:15,300
kind of how it works to install

264
00:10:15,300 --> 00:10:16,890
applications that do have existing

265
00:10:16,890 --> 00:10:19,530
modules but not everything has a module

266
00:10:19,530 --> 00:10:20,850
and it's not worth creating a module for

267
00:10:20,850 --> 00:10:22,380
everything so i'll show you i have a

268
00:10:22,380 --> 00:10:23,820
couple applications that i've installed

269
00:10:23,820 --> 00:10:26,100
they don't have modules so you can see

270
00:10:26,100 --> 00:10:27,840
that I've got bartender which is being

271
00:10:27,840 --> 00:10:29,370
installed from a zip file over the

272
00:10:29,370 --> 00:10:31,740
network and I have sublime text 3 which

273
00:10:31,740 --> 00:10:34,170
is being still installed from a dmg so

274
00:10:34,170 --> 00:10:35,580
you can install from you know pretty

275
00:10:35,580 --> 00:10:38,940
much any format next I've got a few

276
00:10:38,940 --> 00:10:40,590
command line tools that I like installed

277
00:10:40,590 --> 00:10:42,960
so i'm using homebrew the default

278
00:10:42,960 --> 00:10:46,230
package manager with boxing is homebrew

279
00:10:46,230 --> 00:10:47,610
so you can see it's installing these

280
00:10:47,610 --> 00:10:50,880
commands for me and then last it sets up

281
00:10:50,880 --> 00:10:52,440
my shell and colognes a bunch of my

282
00:10:52,440 --> 00:10:55,380
projects since we won't like to ought to

283
00:10:55,380 --> 00:10:57,540
automate everything you know the first

284
00:10:57,540 --> 00:10:59,430
step which was copy this script and run

285
00:10:59,430 --> 00:11:01,710
it then box and github that's two steps

286
00:11:01,710 --> 00:11:04,320
we want it to be one step so I can also

287
00:11:04,320 --> 00:11:06,840
install projects using my personal

288
00:11:06,840 --> 00:11:08,460
manifest so that's kind of an overview

289
00:11:08,460 --> 00:11:12,570
of boxing and how we you know get people

290
00:11:12,570 --> 00:11:13,920
productive building things on their

291
00:11:13,920 --> 00:11:15,660
first day and make it easy for people to

292
00:11:15,660 --> 00:11:17,040
jump into

293
00:11:17,040 --> 00:11:18,640
collaborating on other people's

294
00:11:18,640 --> 00:11:20,589
applications so in short it's just

295
00:11:20,589 --> 00:11:24,490
puppet being used on your on your laptop

296
00:11:24,490 --> 00:11:27,550
so that has nothing to do with

297
00:11:27,550 --> 00:11:30,220
JavaScript at all but I think it's still

298
00:11:30,220 --> 00:11:32,560
very relevant for people who are writing

299
00:11:32,560 --> 00:11:34,330
web apps who are building any kind of

300
00:11:34,330 --> 00:11:36,160
applications for that matter but the

301
00:11:36,160 --> 00:11:37,270
next thing that I want to talk about is

302
00:11:37,270 --> 00:11:39,430
Hugh bot and Hugh bot is a node.js

303
00:11:39,430 --> 00:11:41,830
application it's also open source so you

304
00:11:41,830 --> 00:11:45,430
can get it on github and the goal of

305
00:11:45,430 --> 00:11:47,560
cubot is to make it possible to share

306
00:11:47,560 --> 00:11:50,860
the terminal working in your command on

307
00:11:50,860 --> 00:11:53,200
the command line has always been a kind

308
00:11:53,200 --> 00:11:55,480
of private task you know unless you have

309
00:11:55,480 --> 00:11:56,649
somebody sitting right next to you

310
00:11:56,649 --> 00:11:58,060
looking at you when you're deploying

311
00:11:58,060 --> 00:12:02,890
your application or you have some other

312
00:12:02,890 --> 00:12:04,750
system there's no way to get an idea of

313
00:12:04,750 --> 00:12:07,180
what someone's doing so if I'm working

314
00:12:07,180 --> 00:12:08,589
with my like my colleague Donna she's

315
00:12:08,589 --> 00:12:10,390
back there and I'm deploying my

316
00:12:10,390 --> 00:12:11,860
application he has no idea that I'm

317
00:12:11,860 --> 00:12:14,350
doing that for my terminal so the goal

318
00:12:14,350 --> 00:12:17,529
of cubot is to make it possible to test

319
00:12:17,529 --> 00:12:19,660
ship and measure everything and also to

320
00:12:19,660 --> 00:12:21,310
make it possible for others to see when

321
00:12:21,310 --> 00:12:22,540
you're doing that so we want to be able

322
00:12:22,540 --> 00:12:24,940
to collaborate on that stuff just as we

323
00:12:24,940 --> 00:12:30,459
would collaborate on code so we have a

324
00:12:30,459 --> 00:12:32,470
term for this internally we call it chat

325
00:12:32,470 --> 00:12:36,910
ops nobody can see what commands are run

326
00:12:36,910 --> 00:12:38,320
on your terminal so let's bring them

327
00:12:38,320 --> 00:12:40,690
into the chat room I could hope we use

328
00:12:40,690 --> 00:12:42,880
campfire so you can you know we have a

329
00:12:42,880 --> 00:12:44,110
bunch of campfire rooms I think there's

330
00:12:44,110 --> 00:12:45,820
like 150 or something like that and

331
00:12:45,820 --> 00:12:48,400
generally we have one room for each area

332
00:12:48,400 --> 00:12:50,020
of interest so for example we have a

333
00:12:50,020 --> 00:12:53,020
room for ops which is where people talk

334
00:12:53,020 --> 00:12:54,850
about availability and you know those

335
00:12:54,850 --> 00:12:56,860
kinds of issues also supporting new

336
00:12:56,860 --> 00:12:58,330
hardware and things like that we have a

337
00:12:58,330 --> 00:12:59,980
room for each application so there's a

338
00:12:59,980 --> 00:13:03,100
room for github com there's a room for

339
00:13:03,100 --> 00:13:05,130
all of our internal applications and

340
00:13:05,130 --> 00:13:08,079
it's kind of separated out by topic that

341
00:13:08,079 --> 00:13:09,279
way you can kind of parse out what you

342
00:13:09,279 --> 00:13:11,320
want the thing that's really nice about

343
00:13:11,320 --> 00:13:13,600
doing things inside of chat is that it's

344
00:13:13,600 --> 00:13:15,040
possible for people who are new at the

345
00:13:15,040 --> 00:13:18,730
company to see how things are done

346
00:13:18,730 --> 00:13:21,520
without asking you know they're just if

347
00:13:21,520 --> 00:13:23,140
they're in the chat room you know

348
00:13:23,140 --> 00:13:24,730
hanging out seeing what people are up to

349
00:13:24,730 --> 00:13:27,220
they'll die osmosis learn how to deploy

350
00:13:27,220 --> 00:13:29,410
they'll learn how to do a branch deploy

351
00:13:29,410 --> 00:13:30,270
how to do a

352
00:13:30,270 --> 00:13:31,640
regular deploy how to deploy to staging

353
00:13:31,640 --> 00:13:34,650
how to do all kinds of stuff so we like

354
00:13:34,650 --> 00:13:36,090
to think of chat as a shared command

355
00:13:36,090 --> 00:13:39,140
line and you know bring those things out

356
00:13:39,140 --> 00:13:44,670
into the open so let's like take a look

357
00:13:44,670 --> 00:13:47,910
into how we actually do this stuff some

358
00:13:47,910 --> 00:13:50,550
some actual commands so first let's look

359
00:13:50,550 --> 00:13:53,520
at some commands for testing most of our

360
00:13:53,520 --> 00:13:56,130
apps have a fair amount of tests not

361
00:13:56,130 --> 00:13:58,200
everything but you know we strive for

362
00:13:58,200 --> 00:14:01,080
that the first command that will look at

363
00:14:01,080 --> 00:14:04,170
is CI build so the slash in the front is

364
00:14:04,170 --> 00:14:06,780
what indicates that this is a command

365
00:14:06,780 --> 00:14:09,060
for Hugh bot as opposed to you know a

366
00:14:09,060 --> 00:14:11,430
normal chat room message so here's what

367
00:14:11,430 --> 00:14:14,190
it looks like in action so I'm in the

368
00:14:14,190 --> 00:14:16,140
chat room and I say see I build

369
00:14:16,140 --> 00:14:18,120
education web that specifies which

370
00:14:18,120 --> 00:14:20,250
application I want to build cubot

371
00:14:20,250 --> 00:14:21,900
responds with a message to say that he

372
00:14:21,900 --> 00:14:25,500
has begun the build process and then you

373
00:14:25,500 --> 00:14:29,550
can see when the build completed you can

374
00:14:29,550 --> 00:14:31,440
also use see I build with a specific

375
00:14:31,440 --> 00:14:33,270
branch of your repository so if you have

376
00:14:33,270 --> 00:14:34,860
a project you know this is all based on

377
00:14:34,860 --> 00:14:38,610
using get as your you know as your

378
00:14:38,610 --> 00:14:41,940
deployment stack so you can build

379
00:14:41,940 --> 00:14:43,170
actually a specific branch so in this

380
00:14:43,170 --> 00:14:44,580
case I'm working on a new feature where

381
00:14:44,580 --> 00:14:46,710
I'm using kind of Mechanical Turk

382
00:14:46,710 --> 00:14:50,100
service to do some work and I wanted to

383
00:14:50,100 --> 00:14:51,360
see if it worked and it turns out there

384
00:14:51,360 --> 00:14:53,280
was a failure after 31 seconds so we can

385
00:14:53,280 --> 00:14:56,370
run deploy run builds in the chat room

386
00:14:56,370 --> 00:14:58,470
so once your build is passing and you

387
00:14:58,470 --> 00:15:00,600
decide you want to go you just I'd you

388
00:15:00,600 --> 00:15:02,310
want to ship your software you have to

389
00:15:02,310 --> 00:15:03,480
make sure that your environments are set

390
00:15:03,480 --> 00:15:06,090
up so by default you know everybody has

391
00:15:06,090 --> 00:15:07,620
a production environment but some people

392
00:15:07,620 --> 00:15:09,660
like to staging some people like to have

393
00:15:09,660 --> 00:15:11,370
multiple staging areas so that you can

394
00:15:11,370 --> 00:15:13,530
stage different changes at the same time

395
00:15:13,530 --> 00:15:16,050
but so we have a command called config

396
00:15:16,050 --> 00:15:18,480
which allows you to set up your

397
00:15:18,480 --> 00:15:20,640
environments it allows you to set

398
00:15:20,640 --> 00:15:23,570
environment variables for specific

399
00:15:23,570 --> 00:15:26,430
specific environments so in this case

400
00:15:26,430 --> 00:15:28,020
you can see that I'm locking the room

401
00:15:28,020 --> 00:15:31,410
and then I run config education web

402
00:15:31,410 --> 00:15:33,630
fubar and what that does it sets the

403
00:15:33,630 --> 00:15:35,130
environment variable foo equal the bar

404
00:15:35,130 --> 00:15:37,560
and Hugh bought response back to me that

405
00:15:37,560 --> 00:15:39,180
that was successful it's important to

406
00:15:39,180 --> 00:15:41,040
note that I locked the room manually

407
00:15:41,040 --> 00:15:43,270
because i was typing in credential

408
00:15:43,270 --> 00:15:44,770
or something secret that I don't want in

409
00:15:44,770 --> 00:15:48,160
our chat room logs so that i can read

410
00:15:48,160 --> 00:15:50,020
back you know the environment variables

411
00:15:50,020 --> 00:15:52,480
and if I say config education web foo it

412
00:15:52,480 --> 00:15:53,500
will tell me the value of that variable

413
00:15:53,500 --> 00:15:55,900
if I say config education web it will

414
00:15:55,900 --> 00:15:57,400
tell you the value tell me the value of

415
00:15:57,400 --> 00:16:00,190
all of the environment if I save config

416
00:16:00,190 --> 00:16:02,740
educated web in staging it will show me

417
00:16:02,740 --> 00:16:04,870
the staging you know environment and I

418
00:16:04,870 --> 00:16:05,620
can go through all the different

419
00:16:05,620 --> 00:16:07,510
environments that we have it's also

420
00:16:07,510 --> 00:16:08,590
worth noting that Hugh bought

421
00:16:08,590 --> 00:16:10,060
automatically locks the room before he

422
00:16:10,060 --> 00:16:12,670
regurgitates what could be potentially

423
00:16:12,670 --> 00:16:14,230
private information so it's really

424
00:16:14,230 --> 00:16:16,150
important to make sure that you don't

425
00:16:16,150 --> 00:16:20,200
leak that stuff so we've got our

426
00:16:20,200 --> 00:16:21,990
environment setup now let's actually

427
00:16:21,990 --> 00:16:26,950
deploy some some stuff so here's how you

428
00:16:26,950 --> 00:16:28,240
would do it if you want to deploy the

429
00:16:28,240 --> 00:16:30,190
master branch just deploy in the name of

430
00:16:30,190 --> 00:16:32,470
the application cubot responds back that

431
00:16:32,470 --> 00:16:34,480
it's begun and there's a link and then

432
00:16:34,480 --> 00:16:36,520
once it's finished it says that it was

433
00:16:36,520 --> 00:16:38,980
successful or that it failed that link

434
00:16:38,980 --> 00:16:42,910
is actually to a just a text-based page

435
00:16:42,910 --> 00:16:45,340
it has a bunch of all the lines of the

436
00:16:45,340 --> 00:16:47,680
log output of the deploy process so if

437
00:16:47,680 --> 00:16:48,880
something goes wrong you can go in and

438
00:16:48,880 --> 00:16:52,120
kind of dig through that this next part

439
00:16:52,120 --> 00:16:55,210
is interesting to me so how many people

440
00:16:55,210 --> 00:16:57,880
deploy applications too many servers so

441
00:16:57,880 --> 00:16:58,900
if you have if you have an application

442
00:16:58,900 --> 00:17:00,850
like like how many people have more than

443
00:17:00,850 --> 00:17:03,280
one server for their production app okay

444
00:17:03,280 --> 00:17:07,030
so this is a useful thing so if you want

445
00:17:07,030 --> 00:17:08,380
to take a look at you know what servers

446
00:17:08,380 --> 00:17:11,860
are running for this application you can

447
00:17:11,860 --> 00:17:14,020
use the host command so in this example

448
00:17:14,020 --> 00:17:15,459
I'm showing the training application

449
00:17:15,459 --> 00:17:17,170
which has two front end servers and a

450
00:17:17,170 --> 00:17:20,020
back-end Redis server so it just kind of

451
00:17:20,020 --> 00:17:22,180
tells me what's there if I ran this for

452
00:17:22,180 --> 00:17:24,430
github it would be a huge list of you

453
00:17:24,430 --> 00:17:26,230
know host names for front ends for

454
00:17:26,230 --> 00:17:28,270
backends for file servers so on and so

455
00:17:28,270 --> 00:17:30,760
forth we also have tools for doing

456
00:17:30,760 --> 00:17:31,810
provisioning so you can actually

457
00:17:31,810 --> 00:17:34,620
provision servers from chat apps as well

458
00:17:34,620 --> 00:17:37,450
but say for example you want to roll out

459
00:17:37,450 --> 00:17:39,280
a configuration change for your

460
00:17:39,280 --> 00:17:41,530
production hosts but you don't want to

461
00:17:41,530 --> 00:17:42,970
roll it out to all of the servers at

462
00:17:42,970 --> 00:17:44,290
first you just want to roll out to some

463
00:17:44,290 --> 00:17:45,280
of them and make sure that you're not

464
00:17:45,280 --> 00:17:47,440
getting a lot of errors so you want to

465
00:17:47,440 --> 00:17:48,910
do a ten percent roll out or something

466
00:17:48,910 --> 00:17:49,140
like

467
00:17:49,140 --> 00:17:51,270
that you can use the puppet run command

468
00:17:51,270 --> 00:17:54,150
we use puppet for our laptops we also

469
00:17:54,150 --> 00:17:57,030
use it for our production servers so you

470
00:17:57,030 --> 00:17:58,740
can use puppet run command and chat to

471
00:17:58,740 --> 00:18:03,390
actually tell certain machines to run

472
00:18:03,390 --> 00:18:07,080
their puppet manifests so here's an

473
00:18:07,080 --> 00:18:10,380
example puppet run training fe1 what

474
00:18:10,380 --> 00:18:12,450
that says is the training fe1 part is a

475
00:18:12,450 --> 00:18:14,340
matching pattern so before we had this

476
00:18:14,340 --> 00:18:16,800
list of hosts it will match just the

477
00:18:16,800 --> 00:18:19,770
first host and it will run puppet just

478
00:18:19,770 --> 00:18:21,960
for that one host if i put in puppet run

479
00:18:21,960 --> 00:18:23,310
training it would run on all three of

480
00:18:23,310 --> 00:18:25,560
those hosts if Iran puppet run it would

481
00:18:25,560 --> 00:18:27,510
run on all hosts in github all

482
00:18:27,510 --> 00:18:32,040
applications so i can kind of glob to

483
00:18:32,040 --> 00:18:34,590
match which posts i want to run my my

484
00:18:34,590 --> 00:18:41,760
puppet manifests on so the next thing i

485
00:18:41,760 --> 00:18:43,080
want to talk about is measuring it's

486
00:18:43,080 --> 00:18:45,060
it's incredibly important to be able to

487
00:18:45,060 --> 00:18:47,340
measure you know not only usage of your

488
00:18:47,340 --> 00:18:52,470
app but exceptions and known knew

489
00:18:52,470 --> 00:18:54,240
whether or not you new features are

490
00:18:54,240 --> 00:18:56,610
actually being used so we have this tool

491
00:18:56,610 --> 00:19:00,420
graph me so on the back end we use a

492
00:19:00,420 --> 00:19:03,900
graphite and stats d to collect metrics

493
00:19:03,900 --> 00:19:05,280
from all kinds of different services

494
00:19:05,280 --> 00:19:07,790
within the company essentially it uses

495
00:19:07,790 --> 00:19:12,000
UDP packets to send counters which you

496
00:19:12,000 --> 00:19:14,790
know increment by 1 or gauges which say

497
00:19:14,790 --> 00:19:16,800
the current status of this value is you

498
00:19:16,800 --> 00:19:19,080
know 57 right there are 57 users or

499
00:19:19,080 --> 00:19:20,490
something like that and it goes up and

500
00:19:20,490 --> 00:19:23,340
down over time and the third is a timer

501
00:19:23,340 --> 00:19:26,520
so a page load took 30 seconds or 30

502
00:19:26,520 --> 00:19:28,710
milliseconds whatever it was so you can

503
00:19:28,710 --> 00:19:29,670
send those different types of metrics

504
00:19:29,670 --> 00:19:32,280
into graphite and then in chat you can

505
00:19:32,280 --> 00:19:35,610
actually like take a look at those in a

506
00:19:35,610 --> 00:19:38,460
nice pretty graph form so here's an

507
00:19:38,460 --> 00:19:41,700
example of when I deployed the education

508
00:19:41,700 --> 00:19:43,620
application at one point there were very

509
00:19:43,620 --> 00:19:45,450
few exceptions then I deployed in the

510
00:19:45,450 --> 00:19:47,910
exception spiked so i can say graph me

511
00:19:47,910 --> 00:19:49,350
education exceptions and it gives me a

512
00:19:49,350 --> 00:19:53,070
nice pretty formatted output of the

513
00:19:53,070 --> 00:19:55,650
things that failed

514
00:19:55,650 --> 00:19:58,420
another one there's a feature on github

515
00:19:58,420 --> 00:20:03,280
com in issues comments in pull requests

516
00:20:03,280 --> 00:20:06,130
which is called task lists it allows you

517
00:20:06,130 --> 00:20:08,530
to like right mark down list items with

518
00:20:08,530 --> 00:20:10,510
two square brackets and create a

519
00:20:10,510 --> 00:20:12,040
checkbox you can check them and uncheck

520
00:20:12,040 --> 00:20:16,000
them shortly after we released that

521
00:20:16,000 --> 00:20:17,470
feature or when we release that feature

522
00:20:17,470 --> 00:20:21,400
we created we did some tracking to see

523
00:20:21,400 --> 00:20:22,900
if people are checking not checking them

524
00:20:22,900 --> 00:20:24,250
to see you know is this actually useful

525
00:20:24,250 --> 00:20:27,220
to people care about it so we can get a

526
00:20:27,220 --> 00:20:36,340
look at that here excuse me so so far

527
00:20:36,340 --> 00:20:39,669
we've seen how you can deploy you can

528
00:20:39,669 --> 00:20:43,299
test you can measure using chat ops but

529
00:20:43,299 --> 00:20:45,010
let's take a look at some some commands

530
00:20:45,010 --> 00:20:47,860
that are not all serious business so we

531
00:20:47,860 --> 00:20:49,809
like to have fun in our chat rooms as

532
00:20:49,809 --> 00:20:51,850
well and the story behind this next

533
00:20:51,850 --> 00:20:55,540
command is actually the nicest part of

534
00:20:55,540 --> 00:20:58,840
cubot so my favorite command is one that

535
00:20:58,840 --> 00:21:01,179
I wrote it's called I'm sorry not this

536
00:21:01,179 --> 00:21:03,580
one this is my favorite command where is

537
00:21:03,580 --> 00:21:06,760
I didn't write this but it's really cool

538
00:21:06,760 --> 00:21:08,049
since we have a distributed team we have

539
00:21:08,049 --> 00:21:10,690
people over the world it's hard to keep

540
00:21:10,690 --> 00:21:13,270
track of where people are so I can just

541
00:21:13,270 --> 00:21:14,860
say where is you know John Dee Britain

542
00:21:14,860 --> 00:21:16,929
and when I first prepared this talk I

543
00:21:16,929 --> 00:21:19,240
was in Japan so you can see here i am in

544
00:21:19,240 --> 00:21:21,280
japan and you can get a link to a Google

545
00:21:21,280 --> 00:21:24,549
map and see who's nearby there's also

546
00:21:24,549 --> 00:21:26,650
another another command that I don't

547
00:21:26,650 --> 00:21:28,720
have a screenshot of which is where is

548
00:21:28,720 --> 00:21:30,640
everybody in this room so if your work

549
00:21:30,640 --> 00:21:32,290
in a team say I'm on the education team

550
00:21:32,290 --> 00:21:34,179
we have a few people in the room I said

551
00:21:34,179 --> 00:21:36,280
where's every day in this room and I get

552
00:21:36,280 --> 00:21:38,110
a nice map showing all of the people in

553
00:21:38,110 --> 00:21:43,590
the team all over the place Fitbit me

554
00:21:43,590 --> 00:21:47,860
Fitbit is a little device that you wear

555
00:21:47,860 --> 00:21:49,390
like clip it on your belt you wear it on

556
00:21:49,390 --> 00:21:51,130
your wrist and it's like a pedometer it

557
00:21:51,130 --> 00:21:55,450
tracks your steps so we have kind of an

558
00:21:55,450 --> 00:21:57,040
internal competition within the company

559
00:21:57,040 --> 00:21:58,809
and people staying fit and walking

560
00:21:58,809 --> 00:22:00,760
around and stuff so if it bit me is a

561
00:22:00,760 --> 00:22:01,340
come

562
00:22:01,340 --> 00:22:03,320
and it gives you a score board of who

563
00:22:03,320 --> 00:22:04,760
has made the most steps in the company

564
00:22:04,760 --> 00:22:06,800
and you'll notice I'm nowhere to be

565
00:22:06,800 --> 00:22:13,130
found on the on there so another fun

566
00:22:13,130 --> 00:22:15,200
command is new hire me new hire me now

567
00:22:15,200 --> 00:22:16,700
this is the one I was going to say the I

568
00:22:16,700 --> 00:22:18,980
robe we started growing really quickly

569
00:22:18,980 --> 00:22:20,780
after I start working in the company and

570
00:22:20,780 --> 00:22:22,970
I couldn't keep track of everybody for

571
00:22:22,970 --> 00:22:24,650
this joining so I said we should have a

572
00:22:24,650 --> 00:22:26,030
command or i can say who are the newest

573
00:22:26,030 --> 00:22:29,030
people so new hire me gives you back you

574
00:22:29,030 --> 00:22:30,560
know a percentage of people who have

575
00:22:30,560 --> 00:22:32,240
joined in the last month and all of

576
00:22:32,240 --> 00:22:33,620
their usernames so you can actually

577
00:22:33,620 --> 00:22:35,060
summon them to the room that you're in

578
00:22:35,060 --> 00:22:36,290
you can say new hire me and then start

579
00:22:36,290 --> 00:22:37,840
talking to those people they'll get

580
00:22:37,840 --> 00:22:41,440
notifications and things like that so

581
00:22:41,440 --> 00:22:43,760
what the really important part of this

582
00:22:43,760 --> 00:22:46,550
is that it's actually really easy to add

583
00:22:46,550 --> 00:22:48,560
new commands to Hugh bought since you

584
00:22:48,560 --> 00:22:51,050
bots just a note jf app each one of

585
00:22:51,050 --> 00:22:53,150
these commands is just you know one

586
00:22:53,150 --> 00:22:55,070
JavaScript or one coffee script file

587
00:22:55,070 --> 00:22:58,850
that you know parses a line of code so

588
00:22:58,850 --> 00:23:00,470
by default we have this like / in the

589
00:23:00,470 --> 00:23:03,590
front so any command that begins with a

590
00:23:03,590 --> 00:23:05,510
slash or begins with cubot gets sent

591
00:23:05,510 --> 00:23:07,880
sent to Cuba and then you can write a

592
00:23:07,880 --> 00:23:11,780
matcher match pattern in your own your

593
00:23:11,780 --> 00:23:13,940
command file and have it do whatever you

594
00:23:13,940 --> 00:23:14,960
want you're going to use a third-party

595
00:23:14,960 --> 00:23:17,750
API in this case I'm using an API that's

596
00:23:17,750 --> 00:23:19,970
internal to the company that shows you

597
00:23:19,970 --> 00:23:22,850
know when people started and what their

598
00:23:22,850 --> 00:23:25,790
user names aren't things like that so

599
00:23:25,790 --> 00:23:27,110
the last command that I'll leave you

600
00:23:27,110 --> 00:23:30,530
with is animate me this one's always

601
00:23:30,530 --> 00:23:32,180
good fun you just say animate me and

602
00:23:32,180 --> 00:23:33,620
then something that you want to see an

603
00:23:33,620 --> 00:23:39,170
animated gif format and that's it so I

604
00:23:39,170 --> 00:23:41,960
reserved a good amount of time for

605
00:23:41,960 --> 00:23:45,170
questions so I just want to give you an

606
00:23:45,170 --> 00:23:46,760
introduction of what these things are

607
00:23:46,760 --> 00:23:50,450
what's going on and now I would love to

608
00:23:50,450 --> 00:23:53,110
hear what you'd like to know more about

609
00:23:53,110 --> 00:23:55,280
thank you

610
00:23:55,280 --> 00:24:01,430
I thank you for that lecture on boxing I

611
00:24:01,430 --> 00:24:02,960
was wondering if it's possible to

612
00:24:02,960 --> 00:24:08,090
replace rbn with RPM with in boxing so

613
00:24:08,090 --> 00:24:12,800
by default boxing does install rbm and I

614
00:24:12,800 --> 00:24:16,400
don't think it's compatible to use both

615
00:24:16,400 --> 00:24:18,080
of them so for example you'd have to rip

616
00:24:18,080 --> 00:24:22,610
out rbm to start using our VM I don't

617
00:24:22,610 --> 00:24:25,640
think we would support it but you could

618
00:24:25,640 --> 00:24:28,310
probably each each part of boxing is

619
00:24:28,310 --> 00:24:30,710
actually a puppet module so you could

620
00:24:30,710 --> 00:24:34,420
find there's a there's a file called

621
00:24:34,420 --> 00:24:38,540
site PP and the way you the wait here

622
00:24:38,540 --> 00:24:42,170
I'll show you on the on the web so this

623
00:24:42,170 --> 00:24:46,040
is the boxing organization there's a

624
00:24:46,040 --> 00:24:48,470
repository here that's called our boxin

625
00:24:48,470 --> 00:24:52,190
and the way you install the way you use

626
00:24:52,190 --> 00:24:54,290
box in with your company is you fork

627
00:24:54,290 --> 00:24:55,880
this repository or you you create a

628
00:24:55,880 --> 00:24:57,620
clone of this repository in your own

629
00:24:57,620 --> 00:25:01,490
organization and there's a file in here

630
00:25:01,490 --> 00:25:06,230
it's called site PP so it's under

631
00:25:06,230 --> 00:25:09,560
manifest site PP and then this is what

632
00:25:09,560 --> 00:25:12,530
actually says what things are are

633
00:25:12,530 --> 00:25:14,030
requires you can see like the the site

634
00:25:14,030 --> 00:25:16,880
Ruby versions are specified so you can

635
00:25:16,880 --> 00:25:19,460
actually say that you want to you know

636
00:25:19,460 --> 00:25:21,880
change that stuff out you can unincluded

637
00:25:21,880 --> 00:25:24,230
certain modules the other thing to look

638
00:25:24,230 --> 00:25:26,920
at when you're trying to do this is

639
00:25:26,920 --> 00:25:29,870
there's a puppet file and this actually

640
00:25:29,870 --> 00:25:34,490
is where all of the dependent puppet

641
00:25:34,490 --> 00:25:36,440
packages are declared and their versions

642
00:25:36,440 --> 00:25:39,260
so this makes it so that within the

643
00:25:39,260 --> 00:25:42,290
company when we upgrade let's say the

644
00:25:42,290 --> 00:25:44,750
get version all of our laptops get the

645
00:25:44,750 --> 00:25:46,640
upgrade right and we can lock to a

646
00:25:46,640 --> 00:25:48,500
specific version so if we need this

647
00:25:48,500 --> 00:25:51,110
version of my sequel it will always be

648
00:25:51,110 --> 00:25:52,490
that version on all of our developer

649
00:25:52,490 --> 00:25:56,360
machines do you know if there's been any

650
00:25:56,360 --> 00:25:57,770
more progress I know that was talked

651
00:25:57,770 --> 00:25:59,630
about of open sourcing any parts of

652
00:25:59,630 --> 00:26:02,930
heaven open sourcing any parts of heaven

653
00:26:02,930 --> 00:26:07,680
heaven okay so heaven is our deploy

654
00:26:07,680 --> 00:26:09,840
infrastructure it's kind of it's not

655
00:26:09,840 --> 00:26:12,000
open source right now there has been

656
00:26:12,000 --> 00:26:14,190
talk internally of doing that it we're

657
00:26:14,190 --> 00:26:15,420
just basically we need to find somebody

658
00:26:15,420 --> 00:26:17,490
who wants to take the time to do it and

659
00:26:17,490 --> 00:26:18,930
then once you publish something open

660
00:26:18,930 --> 00:26:20,130
source you have to be you know kind of a

661
00:26:20,130 --> 00:26:22,170
good steward and maintain it so we've

662
00:26:22,170 --> 00:26:24,720
already got people who are pretty keen

663
00:26:24,720 --> 00:26:27,330
on maintaining cubot and boxing but

664
00:26:27,330 --> 00:26:30,560
heavens a kind of a bigger harder sell

665
00:26:30,560 --> 00:26:34,740
so I would love to see that happen so

666
00:26:34,740 --> 00:26:36,510
you run those commands and campfire or

667
00:26:36,510 --> 00:26:38,580
right from the terminal happy being

668
00:26:38,580 --> 00:26:41,550
synchronized or so the first command

669
00:26:41,550 --> 00:26:42,720
when you get started you have to run on

670
00:26:42,720 --> 00:26:45,150
the terminal to install boxing but all

671
00:26:45,150 --> 00:26:46,800
of these commands that I'm that i was

672
00:26:46,800 --> 00:26:49,140
showing here like animate me like this

673
00:26:49,140 --> 00:26:52,380
is all in campfire right Oh actually you

674
00:26:52,380 --> 00:26:54,900
can't see my stuff so those all those

675
00:26:54,900 --> 00:26:56,820
messages it's like you know / new hire

676
00:26:56,820 --> 00:27:00,150
me that's a campfire room okay

677
00:27:00,150 --> 00:27:03,270
interesting and then some other boss

678
00:27:03,270 --> 00:27:05,720
they pick up this information and like

679
00:27:05,720 --> 00:27:08,340
propagate to other servers and things

680
00:27:08,340 --> 00:27:10,770
like right so are you saying about how

681
00:27:10,770 --> 00:27:13,710
how like puppet for example gets run yep

682
00:27:13,710 --> 00:27:18,330
so when you do like the like this one

683
00:27:18,330 --> 00:27:21,020
puppet run what happens is Hugh bot

684
00:27:21,020 --> 00:27:23,340
here's the message and then Hugh bot

685
00:27:23,340 --> 00:27:26,310
uses a an external API to fire off the

686
00:27:26,310 --> 00:27:28,530
you know the build process or you know

687
00:27:28,530 --> 00:27:31,110
in this case it tells puppet to execute

688
00:27:31,110 --> 00:27:33,840
the the latest version on all the hosts

689
00:27:33,840 --> 00:27:37,170
but that's actually not that's not part

690
00:27:37,170 --> 00:27:39,000
of Hugh bot essentially every command

691
00:27:39,000 --> 00:27:41,580
here is you do something in chat Hugh

692
00:27:41,580 --> 00:27:42,990
bought hears about it and then he bought

693
00:27:42,990 --> 00:27:44,730
goes and uses some API to do something

694
00:27:44,730 --> 00:27:46,590
else and that part where Hugh bought

695
00:27:46,590 --> 00:27:48,360
goes and uses an API is like user

696
00:27:48,360 --> 00:27:50,280
serviceable so you can make it do

697
00:27:50,280 --> 00:27:52,380
anything you want but the really nice

698
00:27:52,380 --> 00:27:54,090
thing is keeping it in the chat room so

699
00:27:54,090 --> 00:27:56,390
that everybody can see what's going on

700
00:27:56,390 --> 00:28:00,270
Thanks actually I have a question you

701
00:28:00,270 --> 00:28:03,690
don't mind what is the rationale behind

702
00:28:03,690 --> 00:28:06,900
you guys choosing puppet over say chef

703
00:28:06,900 --> 00:28:09,490
or ansible or salt or anything

704
00:28:09,490 --> 00:28:13,660
so um I don't know the the whole back

705
00:28:13,660 --> 00:28:15,820
story but basically there's there are

706
00:28:15,820 --> 00:28:18,760
the people who are doing like writing

707
00:28:18,760 --> 00:28:21,309
the code for that stuff decided to use

708
00:28:21,309 --> 00:28:23,590
puppet probably because it's you know

709
00:28:23,590 --> 00:28:25,450
pretty well supported there's a lot of

710
00:28:25,450 --> 00:28:27,580
existing stuff out there they have a lot

711
00:28:27,580 --> 00:28:28,900
of experience in it already and we had a

712
00:28:28,900 --> 00:28:30,670
lot of institutional like knowledge

713
00:28:30,670 --> 00:28:32,200
people already knew how to use puppet I

714
00:28:32,200 --> 00:28:34,720
think that anta belen sult probably

715
00:28:34,720 --> 00:28:37,179
weren't very weren't even considered I

716
00:28:37,179 --> 00:28:38,590
would say it was more of between like

717
00:28:38,590 --> 00:28:40,540
probably puppet and chef because those

718
00:28:40,540 --> 00:28:44,340
are two of the more heavily used tools

719
00:28:44,340 --> 00:28:47,260
but it was already puppet when I started

720
00:28:47,260 --> 00:28:51,220
working at github so this a question

721
00:28:51,220 --> 00:28:53,500
about abuse are they automated or do you

722
00:28:53,500 --> 00:28:55,030
have to send a command before I you

723
00:28:55,030 --> 00:28:57,850
would be beautiful but the question is

724
00:28:57,850 --> 00:29:00,850
do I have to run the build manually yes

725
00:29:00,850 --> 00:29:02,920
sorry no you don't need to run the build

726
00:29:02,920 --> 00:29:05,350
manually the way we have it set up is on

727
00:29:05,350 --> 00:29:09,910
github com you go to your repository and

728
00:29:09,910 --> 00:29:12,309
on each repository there's a settings

729
00:29:12,309 --> 00:29:14,679
page and there's a service hooks feature

730
00:29:14,679 --> 00:29:17,410
so if you actually if you're using Hugh

731
00:29:17,410 --> 00:29:18,910
bot what you can do is you can set it up

732
00:29:18,910 --> 00:29:22,260
so that Hugh bot is notified when

733
00:29:22,260 --> 00:29:24,730
whenever I build or whenever a new

734
00:29:24,730 --> 00:29:26,350
commit is pushed or a new branch or

735
00:29:26,350 --> 00:29:27,580
anything like that and it will

736
00:29:27,580 --> 00:29:28,900
automatically run the build and then

737
00:29:28,900 --> 00:29:30,850
hubert will report the build information

738
00:29:30,850 --> 00:29:32,860
into the chat room every time you make a

739
00:29:32,860 --> 00:29:34,450
new push every time you something like

740
00:29:34,450 --> 00:29:37,660
that so it's it's automated but for you

741
00:29:37,660 --> 00:29:38,830
know if you want to run the build again

742
00:29:38,830 --> 00:29:41,350
for some reason or if you want to run a

743
00:29:41,350 --> 00:29:42,850
build on demand you can do it with you

744
00:29:42,850 --> 00:29:45,850
bought that way do you specify like what

745
00:29:45,850 --> 00:29:47,410
the steps you wish to be collected by

746
00:29:47,410 --> 00:29:50,559
graphite do we specify something with

747
00:29:50,559 --> 00:29:54,790
graphite then the dimensions the which

748
00:29:54,790 --> 00:29:57,130
they thought to be collected which data

749
00:29:57,130 --> 00:29:59,650
yes ok so the way graphites data is

750
00:29:59,650 --> 00:30:03,070
stored is a nested nested keys so it's

751
00:30:03,070 --> 00:30:05,500
essentially a tree we have a top-level

752
00:30:05,500 --> 00:30:08,650
namespace for each application so github

753
00:30:08,650 --> 00:30:11,350
com is github in my case the education

754
00:30:11,350 --> 00:30:13,540
stuff is under education there's a bunch

755
00:30:13,540 --> 00:30:16,270
of buckets for each of our apps and then

756
00:30:16,270 --> 00:30:17,860
once you're in the bucket for the app

757
00:30:17,860 --> 00:30:20,070
you just use a dot and then

758
00:30:20,070 --> 00:30:22,260
of the metric so we'll do things like

759
00:30:22,260 --> 00:30:25,770
you know task lists was github task list

760
00:30:25,770 --> 00:30:28,590
dot activity so it was information about

761
00:30:28,590 --> 00:30:32,280
clicks and and not clicks so once you

762
00:30:32,280 --> 00:30:33,900
have the data stored in graphite you can

763
00:30:33,900 --> 00:30:35,220
actually query it from the command line

764
00:30:35,220 --> 00:30:37,770
or from the from chat ops by saying you

765
00:30:37,770 --> 00:30:40,290
know graph me and then the name of the

766
00:30:40,290 --> 00:30:43,080
key that you want to graph and what you

767
00:30:43,080 --> 00:30:44,580
can do it's a matching pattern as well

768
00:30:44,580 --> 00:30:46,920
so just like with the host command it's

769
00:30:46,920 --> 00:30:48,630
a matching pattern you can say you know

770
00:30:48,630 --> 00:30:51,330
graph meet github dot star and it will

771
00:30:51,330 --> 00:30:53,340
graph you all the top level metrics in

772
00:30:53,340 --> 00:30:56,220
the github bucket or you could say graph

773
00:30:56,220 --> 00:30:59,550
me tas listo github task list at star

774
00:30:59,550 --> 00:31:01,020
and we'll graph you all of the metrics

775
00:31:01,020 --> 00:31:04,020
related to that topic does that answer

776
00:31:04,020 --> 00:31:07,650
your question ok great all right all

777
00:31:07,650 --> 00:31:09,630
right well thank you John yeah thank you

