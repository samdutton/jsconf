1
00:00:07,600 --> 00:00:12,800

hi um yeah let's get started um as you

2
00:00:12,800 --> 00:00:14,690
can see this talk is called wedding apps

3
00:00:14,690 --> 00:00:19,010
on the edge with couch TV and so we're

4
00:00:19,010 --> 00:00:22,880
going to see some apps of course and how

5
00:00:22,880 --> 00:00:24,430
we want to write them and of course

6
00:00:24,430 --> 00:00:26,630
they're going to be written in couch TV

7
00:00:26,630 --> 00:00:27,820
um

8
00:00:27,820 --> 00:00:30,259
just start misty on already said my name

9
00:00:30,259 --> 00:00:32,960
is Alex can call me lang Alex if you

10
00:00:32,960 --> 00:00:37,610
want to I'm a programmer as you might

11
00:00:37,610 --> 00:00:39,559
guess and I have a little software

12
00:00:39,559 --> 00:00:42,890
company in Berlin which does software

13
00:00:42,890 --> 00:00:45,890
development and consulting and we were

14
00:00:45,890 --> 00:00:49,250
big fans of the what you today will call

15
00:00:49,250 --> 00:00:51,859
agile thing and untested and all that

16
00:00:51,859 --> 00:00:55,239
and we do most of that using Ruby and

17
00:00:55,239 --> 00:01:02,239
also rails so how come we use JavaScript

18
00:01:02,239 --> 00:01:03,949
or how come nice I'm standing here

19
00:01:03,949 --> 00:01:06,020
talking about JavaScript when ninety

20
00:01:06,020 --> 00:01:09,200
percent what I do is Ruby

21
00:01:09,200 --> 00:01:12,050
first of all some point our customers

22
00:01:12,050 --> 00:01:15,410
came and said we need Ajax without a

23
00:01:15,410 --> 00:01:17,210
Jaques we we can't sell our products

24
00:01:17,210 --> 00:01:19,580
anymore and so we had to do javascript

25
00:01:19,580 --> 00:01:24,350
of course and then one day quite a while

26
00:01:24,350 --> 00:01:24,560
ago

27
00:01:24,560 --> 00:01:28,940
Yan came alone in our office or and he

28
00:01:28,940 --> 00:01:35,020
said CouchDB to me and I was like what

29
00:01:35,020 --> 00:01:36,170
okay

30
00:01:36,170 --> 00:01:39,860
what is code TV and so Yun said whenever

31
00:01:39,860 --> 00:01:42,500
he talks about coaching he's talking

32
00:01:42,500 --> 00:01:43,910
those really long sentences seems like

33
00:01:43,910 --> 00:01:45,350
yeah it's restful you know like

34
00:01:45,350 --> 00:01:48,040
MapReduce has other amazing stuff and

35
00:01:48,040 --> 00:01:50,480
MapReduce again and our language scares

36
00:01:50,480 --> 00:01:51,580
and blah

37
00:01:51,580 --> 00:01:54,700
and he keeps on talking until he finally

38
00:01:54,700 --> 00:01:58,950
has to breathe and yeah so I was

39
00:01:58,950 --> 00:02:01,360
presented with his lung sentence about a

40
00:02:01,360 --> 00:02:04,000
couch TV and didn't really know what it

41
00:02:04,000 --> 00:02:06,610
was and so I started to investigate and

42
00:02:06,610 --> 00:02:08,350
I won't and this kind of adventure

43
00:02:08,350 --> 00:02:10,750
journey here I'm asking myself what

44
00:02:10,750 --> 00:02:13,840
couch TV actually is and so first thing

45
00:02:13,840 --> 00:02:15,940
I saw was a sign that said it's not an

46
00:02:15,940 --> 00:02:19,510
SQL database instead it's a key value

47
00:02:19,510 --> 00:02:22,510
store which means you can buy keys and

48
00:02:22,510 --> 00:02:26,200
values and you can put values into it

49
00:02:26,200 --> 00:02:28,780
and then have keys and get them out

50
00:02:28,780 --> 00:02:32,650
again and so I started talking to the

51
00:02:32,650 --> 00:02:35,740
couch as the digital natives you know

52
00:02:35,740 --> 00:02:39,280
what comes naturally for me is HDPE so I

53
00:02:39,280 --> 00:02:41,260
didn't know what a couch would respond

54
00:02:41,260 --> 00:02:45,280
to so joy try the HDTV and surprisingly

55
00:02:45,280 --> 00:02:47,080
that worked and the couch responded and

56
00:02:47,080 --> 00:02:48,010
talked back to me

57
00:02:48,010 --> 00:02:50,440
and so this is the first thing as you

58
00:02:50,440 --> 00:02:52,390
can see here and basically saying hi I'm

59
00:02:52,390 --> 00:02:56,860
Alex to that couch and it says back hi

60
00:02:56,860 --> 00:02:59,830
and that has stored my my requests and

61
00:02:59,830 --> 00:03:03,580
you can see here I'm posting some data

62
00:03:03,580 --> 00:03:07,360
to it as you can see that is JSON which

63
00:03:07,360 --> 00:03:10,900
you might all be familiar with and I get

64
00:03:10,900 --> 00:03:13,870
back this this ID and revision here the

65
00:03:13,870 --> 00:03:18,040
ideas and the key of that data from now

66
00:03:18,040 --> 00:03:22,000
on and so I can ask it again for that

67
00:03:22,000 --> 00:03:24,010
document and as you can see here I'm

68
00:03:24,010 --> 00:03:26,800
doing a get and this is the same idea

69
00:03:26,800 --> 00:03:28,810
that it just gave me under step before

70
00:03:28,810 --> 00:03:31,959
and so the couch again talks back and

71
00:03:31,959 --> 00:03:36,770
gives me the data I just stored in it

72
00:03:36,780 --> 00:03:40,000
next I wanted to know all the speakers

73
00:03:40,000 --> 00:03:43,090
at this conference and so I told coach

74
00:03:43,090 --> 00:03:45,160
TV about this map function I had made up

75
00:03:45,160 --> 00:03:51,820
and what this internally does it takes

76
00:03:51,820 --> 00:03:54,940
that function and then takes every

77
00:03:54,940 --> 00:03:57,100
document and in that database every like

78
00:03:57,100 --> 00:03:59,620
chunk of data and processes it with it

79
00:03:59,620 --> 00:04:02,440
and as you can see here my data has some

80
00:04:02,440 --> 00:04:04,550
kind of speaker property

81
00:04:04,550 --> 00:04:08,060
and if that hazard then it's sort of

82
00:04:08,060 --> 00:04:10,850
return said so I'm not going to

83
00:04:10,850 --> 00:04:12,140
magically details about the MapReduce

84
00:04:12,140 --> 00:04:14,000
how it works because it's kind of

85
00:04:14,000 --> 00:04:17,840
complicated sometimes but so um the

86
00:04:17,840 --> 00:04:20,180
thing is it'll just collect all the

87
00:04:20,180 --> 00:04:21,890
speakers that are in the database and

88
00:04:21,890 --> 00:04:23,900
return them which you can see here on

89
00:04:23,900 --> 00:04:26,240
the right side so I mean there's so not

90
00:04:26,240 --> 00:04:33,680
all of us but most so I again talk to it

91
00:04:33,680 --> 00:04:35,030
and I wanted to know how many speakers

92
00:04:35,030 --> 00:04:38,660
are actually where and for this I passed

93
00:04:38,660 --> 00:04:41,480
in or gave it this reduce function which

94
00:04:41,480 --> 00:04:44,150
looks quite simple so it sums up all

95
00:04:44,150 --> 00:04:47,240
these ones that you can see here and it

96
00:04:47,240 --> 00:04:51,590
said okay there's 23 speakers and yeah

97
00:04:51,590 --> 00:04:53,660
pretty nice so I look down at the couch

98
00:04:53,660 --> 00:04:55,820
and at the Eternals and wanted to know

99
00:04:55,820 --> 00:04:58,370
what it was and so you can see here at

100
00:04:58,370 --> 00:05:01,160
the left it's kind of this big sucking

101
00:05:01,160 --> 00:05:03,560
machine that sucks up all the documents

102
00:05:03,560 --> 00:05:07,280
here and there at the bottom and gives

103
00:05:07,280 --> 00:05:10,040
them to me when I request them so I can

104
00:05:10,040 --> 00:05:11,870
whenever have the key to a document I

105
00:05:11,870 --> 00:05:15,380
can load it using this which is very

106
00:05:15,380 --> 00:05:17,000
simple that's why it's a key value store

107
00:05:17,000 --> 00:05:18,890
right and then there's this other thing

108
00:05:18,890 --> 00:05:25,010
which kind of has these pipes and when I

109
00:05:25,010 --> 00:05:28,190
give it a rip function like give me all

110
00:05:28,190 --> 00:05:32,030
the speakers it'll like internally sort

111
00:05:32,030 --> 00:05:33,850
of create one of those pipes and then

112
00:05:33,850 --> 00:05:36,590
like so are the speakers ready for me so

113
00:05:36,590 --> 00:05:37,970
whenever I ask it they're already

114
00:05:37,970 --> 00:05:40,550
available and I can just get them so as

115
00:05:40,550 --> 00:05:43,430
you can see here it says speaker so it's

116
00:05:43,430 --> 00:05:44,870
the speaker's pipe and I can just say

117
00:05:44,870 --> 00:05:46,900
give me the speakers and they're there

118
00:05:46,900 --> 00:05:50,150
um what I was added also looked at MySQL

119
00:05:50,150 --> 00:05:53,060
again a bit but um well as you can see

120
00:05:53,060 --> 00:05:54,890
it's all sorted into tables at button

121
00:05:54,890 --> 00:05:59,540
but it gets messy by the rap so I went

122
00:05:59,540 --> 00:06:02,870
on back to the couch looked up and it

123
00:06:02,870 --> 00:06:06,500
was again and those boards here are a

124
00:06:06,500 --> 00:06:09,730
few documents edit corrected for me and

125
00:06:09,730 --> 00:06:12,350
so suddenly there was four couches and

126
00:06:12,350 --> 00:06:14,600
not just one and they all had the same

127
00:06:14,600 --> 00:06:15,760
data so

128
00:06:15,760 --> 00:06:17,980
what country we can do is replicate

129
00:06:17,980 --> 00:06:20,530
itself which becomes important later on

130
00:06:20,530 --> 00:06:22,990
and whenever I change something in one

131
00:06:22,990 --> 00:06:24,610
of those couches or the others will pick

132
00:06:24,610 --> 00:06:30,970
up and just have those same documents as

133
00:06:30,970 --> 00:06:32,620
the one I changed so I can change any of

134
00:06:32,620 --> 00:06:34,200
those cultures and it'll automatically

135
00:06:34,200 --> 00:06:36,400
transfer the data to the other couch TV

136
00:06:36,400 --> 00:06:38,940
couch the weeks um

137
00:06:38,940 --> 00:06:42,070
couches can live in servers like this

138
00:06:42,070 --> 00:06:45,670
one they can also live in like laptops

139
00:06:45,670 --> 00:06:47,860
which um doesn't come as a big surprise

140
00:06:47,860 --> 00:06:50,680
I guess um but you can also run on

141
00:06:50,680 --> 00:06:53,470
phones which can become quite

142
00:06:53,470 --> 00:06:56,010
interesting as we will see a bit later

143
00:06:56,010 --> 00:06:59,320
anyway so that was a long day and I said

144
00:06:59,320 --> 00:07:01,240
on the couch and watch the sunset at

145
00:07:01,240 --> 00:07:06,760
middle and it's already the end of part

146
00:07:06,760 --> 00:07:09,610
one of this talk and what we fluency for

147
00:07:09,610 --> 00:07:13,300
we using JSON to to store data in the

148
00:07:13,300 --> 00:07:18,340
database um it has an HTTP interface so

149
00:07:18,340 --> 00:07:21,310
I can talk to it if I talk it should be

150
00:07:21,310 --> 00:07:24,520
myself but can you take dude I can't

151
00:07:24,520 --> 00:07:27,430
speak to directly I can use a browser or

152
00:07:27,430 --> 00:07:31,810
any HTTP client I want I can pass with

153
00:07:31,810 --> 00:07:34,360
those map functions to sort of extract

154
00:07:34,360 --> 00:07:38,110
data from it and I can pass those reduce

155
00:07:38,110 --> 00:07:39,790
functions to do calculations on that

156
00:07:39,790 --> 00:07:42,160
data it's sort of the essence of those

157
00:07:42,160 --> 00:07:45,340
two and it has this replication which

158
00:07:45,340 --> 00:07:47,470
means I can set up as many copies as I

159
00:07:47,470 --> 00:07:49,960
want and I can tell it to love keep all

160
00:07:49,960 --> 00:07:53,890
of them in sync so like in multi master

161
00:07:53,890 --> 00:07:56,020
data they set up something which is

162
00:07:56,020 --> 00:07:59,260
really a pain when using traditional

163
00:07:59,260 --> 00:08:04,720
databases like MySQL for instance yeah

164
00:08:04,720 --> 00:08:10,290
so that was part one

165
00:08:10,300 --> 00:08:18,830
and this is part 2 so let's talk about

166
00:08:18,830 --> 00:08:20,360
some apps and I have a little

167
00:08:20,360 --> 00:08:22,849
co-presenter here which is Steve hearing

168
00:08:22,849 --> 00:08:25,639
them on the left and it's gonna help me

169
00:08:25,639 --> 00:08:29,479
present this thing and this is the first

170
00:08:29,479 --> 00:08:32,719
slide um I think that's the other

171
00:08:32,719 --> 00:08:38,000
presentation so let's move on so am the

172
00:08:38,000 --> 00:08:44,060
apps um apps are this which is a couch

173
00:08:44,060 --> 00:08:47,420
and the apps live inside the couch which

174
00:08:47,420 --> 00:08:49,810
is why they are called couch apps and

175
00:08:49,810 --> 00:08:52,760
basically what that all is is JavaScript

176
00:08:52,760 --> 00:08:55,670
on the server side and in this case the

177
00:08:55,670 --> 00:08:56,870
server is

178
00:08:56,870 --> 00:08:59,209
couchdb so you can run those apps inside

179
00:08:59,209 --> 00:09:05,269
the database and then deliver them to a

180
00:09:05,269 --> 00:09:09,170
browser we have documents as you've

181
00:09:09,170 --> 00:09:11,329
already seen you can just put any JSON

182
00:09:11,329 --> 00:09:14,660
into couchdb and then it's gonna be

183
00:09:14,660 --> 00:09:16,070
stored there and you can get it back if

184
00:09:16,070 --> 00:09:19,339
you want to you can also have

185
00:09:19,339 --> 00:09:20,870
attachments which can be anything you

186
00:09:20,870 --> 00:09:24,320
want anything binary data HTML pages yes

187
00:09:24,320 --> 00:09:26,589
as far as good whatever videos you want

188
00:09:26,589 --> 00:09:29,029
which comes in handy when you talk to a

189
00:09:29,029 --> 00:09:33,410
browser we have those views that this

190
00:09:33,410 --> 00:09:38,480
that is a map function thing so you can

191
00:09:38,480 --> 00:09:42,560
extract data so if I have documents with

192
00:09:42,560 --> 00:09:44,300
speakers I can get a list of speakers or

193
00:09:44,300 --> 00:09:48,589
the sum of all the number of speakers

194
00:09:48,589 --> 00:09:51,010
and that kind of stuff

195
00:09:51,010 --> 00:09:54,940
we have shows which can be used to

196
00:09:54,940 --> 00:09:58,339
transform a single document into

197
00:09:58,339 --> 00:10:00,980
anything else which might be a just

198
00:10:00,980 --> 00:10:03,110
email in this case I could be XML it

199
00:10:03,110 --> 00:10:06,459
could even be binary data I think and

200
00:10:06,459 --> 00:10:10,130
yeah so this allows you to serve a

201
00:10:10,130 --> 00:10:12,290
document to a browser or some other

202
00:10:12,290 --> 00:10:12,649
class

203
00:10:12,649 --> 00:10:17,709
like say like some RSS reader or so and

204
00:10:17,709 --> 00:10:19,970
transform it into a format that this

205
00:10:19,970 --> 00:10:22,610
client can understand and we have lists

206
00:10:22,610 --> 00:10:25,069
and that is the same thing but it's not

207
00:10:25,069 --> 00:10:27,139
working on a single document but on a

208
00:10:27,139 --> 00:10:31,490
view so you can admit or you can serve a

209
00:10:31,490 --> 00:10:36,319
list of data or anything you want and we

210
00:10:36,319 --> 00:10:39,639
have updates and updates

211
00:10:39,639 --> 00:10:42,369
well they update they don't so you can

212
00:10:42,369 --> 00:10:47,809
post output to the database a little

213
00:10:47,809 --> 00:10:52,759
update data and you can run code in this

214
00:10:52,759 --> 00:10:55,220
so it's not like a fixed thing but you

215
00:10:55,220 --> 00:10:57,410
run code well and tell it what to update

216
00:10:57,410 --> 00:11:02,779
from the request so like like a real

217
00:11:02,779 --> 00:11:03,279
server

218
00:11:03,279 --> 00:11:06,410
um so anyway um this is the short

219
00:11:06,410 --> 00:11:11,689
overview of what couch apps are and I

220
00:11:11,689 --> 00:11:15,759
don't know what is it new MacBooks no

221
00:11:15,759 --> 00:11:18,889
it's something called semi and Sammy is

222
00:11:18,889 --> 00:11:20,689
doesn't really have to do anything with

223
00:11:20,689 --> 00:11:24,019
couch TV or not even with server-side

224
00:11:24,019 --> 00:11:27,949
JavaScript but it is a nice little

225
00:11:27,949 --> 00:11:30,470
framework inspired by Sinatra I don't

226
00:11:30,470 --> 00:11:33,290
know anyone knows Sinatra just written

227
00:11:33,290 --> 00:11:37,730
in Ruby so I know Sinatra it's a tiny

228
00:11:37,730 --> 00:11:39,410
little framework that allows you to

229
00:11:39,410 --> 00:11:44,480
quickly yeah write web apps and there's

230
00:11:44,480 --> 00:11:46,790
a bit support of mapping URLs to actions

231
00:11:46,790 --> 00:11:49,189
and then you can run some code and it's

232
00:11:49,189 --> 00:11:52,339
a nice way to to write a little apps and

233
00:11:52,339 --> 00:11:53,420
I'll show you some code later or how

234
00:11:53,420 --> 00:11:54,790
that works

235
00:11:54,790 --> 00:11:57,620
so anyway Sammy is pretty nice because

236
00:11:57,620 --> 00:11:59,990
it takes the concept and runs it in the

237
00:11:59,990 --> 00:12:02,059
browser so you have a full sort of

238
00:12:02,059 --> 00:12:04,189
little framework for web apps in the

239
00:12:04,189 --> 00:12:06,529
browser and you can run web apps in the

240
00:12:06,529 --> 00:12:08,720
browser and then you can an use couch TV

241
00:12:08,720 --> 00:12:12,139
under that and use it as a storage which

242
00:12:12,139 --> 00:12:17,389
is pretty nice um those are a few apps

243
00:12:17,389 --> 00:12:20,179
that are already out there so there's

244
00:12:20,179 --> 00:12:22,110
something called

245
00:12:22,110 --> 00:12:23,610
amazing which is used for presenting

246
00:12:23,610 --> 00:12:26,700
this ayah which yawns little URL

247
00:12:26,700 --> 00:12:30,089
shortening service there's a calendar is

248
00:12:30,089 --> 00:12:31,950
a real-time chat unless an e-learning

249
00:12:31,950 --> 00:12:34,649
app less time tracking blogging Twitter

250
00:12:34,649 --> 00:12:38,370
clients wiki's and maybe most notably

251
00:12:38,370 --> 00:12:40,769
there's also rain drop which is written

252
00:12:40,769 --> 00:12:45,300
by Mozilla and it's sort of I don't

253
00:12:45,300 --> 00:12:47,160
think I'm supposed to say this but I'm

254
00:12:47,160 --> 00:12:51,000
sort of Google Wave quite familiar but

255
00:12:51,000 --> 00:12:53,850
it's not so it's like their approach to

256
00:12:53,850 --> 00:12:57,329
like sort of next-generation messaging

257
00:12:57,329 --> 00:12:59,250
and it's it's a couch app which is

258
00:12:59,250 --> 00:13:03,779
pretty cool um anyway um Steve and I are

259
00:13:03,779 --> 00:13:12,970
gonna show you how this works right now

260
00:13:12,980 --> 00:13:15,720
um by the way the first couch I've ever

261
00:13:15,720 --> 00:13:17,579
written a sister CouchDB admin interface

262
00:13:17,579 --> 00:13:20,700
which is of course served as a cow chip

263
00:13:20,700 --> 00:13:22,829
so it runs in the database and that's

264
00:13:22,829 --> 00:13:29,070
this nice Ajax interface but okay so

265
00:13:29,070 --> 00:13:30,930
this is I oh this is the URL shortening

266
00:13:30,930 --> 00:13:34,230
service yun wrote um it's pretty simple

267
00:13:34,230 --> 00:13:46,030
I can go here and type in some new hour

268
00:13:46,040 --> 00:13:51,570
gives me a shorter URL of course if you

269
00:13:51,570 --> 00:13:52,890
wanna use this in production you're not

270
00:13:52,890 --> 00:13:55,680
gonna expose this long URL but you're

271
00:13:55,680 --> 00:13:58,040
gonna use some kind of proxy and then

272
00:13:58,040 --> 00:14:01,649
have just this little part here appear

273
00:14:01,649 --> 00:14:08,410
to the client so anyway and if I just

274
00:14:08,420 --> 00:14:12,900
pasted in here and if the internet would

275
00:14:12,900 --> 00:14:15,540
work then we would see J's confer you

276
00:14:15,540 --> 00:14:18,960
now anyway so that works you've seen it

277
00:14:18,960 --> 00:14:21,170
all

278
00:14:21,180 --> 00:14:24,060
another example that I wrote for another

279
00:14:24,060 --> 00:14:26,610
talk is a little wiki this is written

280
00:14:26,610 --> 00:14:28,680
and using semi so it's all running in

281
00:14:28,680 --> 00:14:31,460
the browser you can see um right here

282
00:14:31,460 --> 00:14:38,310
maybe you can see I don't know so this

283
00:14:38,310 --> 00:14:39,810
is the important part of the URL and

284
00:14:39,810 --> 00:14:42,420
that changes well and filling in forms

285
00:14:42,420 --> 00:14:46,760
and clicking links and so this uses

286
00:14:46,760 --> 00:14:49,050
JavaScript on the client you determine

287
00:14:49,050 --> 00:14:51,240
what you do next depending on what how

288
00:14:51,240 --> 00:14:59,470
this changes here so I can create a page

289
00:14:59,480 --> 00:15:04,530
and it's my first page and I can click

290
00:15:04,530 --> 00:15:06,510
on this camicus link and create more

291
00:15:06,510 --> 00:15:09,840
pages and so that's what you would

292
00:15:09,840 --> 00:15:14,250
expect from a wiki I guess and so that's

293
00:15:14,250 --> 00:15:16,020
all client-side and it just saves data

294
00:15:16,020 --> 00:15:18,600
back to Akashi be but takes for

295
00:15:18,600 --> 00:15:19,740
rendering of templates and everything

296
00:15:19,740 --> 00:15:23,190
runs in the browser and my third example

297
00:15:23,190 --> 00:15:27,030
is Mozilla raindrop raindrop is pretty

298
00:15:27,030 --> 00:15:28,740
new it's actually so new that it doesn't

299
00:15:28,740 --> 00:15:31,590
even run on my computer yet at least

300
00:15:31,590 --> 00:15:33,450
I couldn't install it or I couldn't

301
00:15:33,450 --> 00:15:34,890
solve it and it's this is what I saw but

302
00:15:34,890 --> 00:15:36,410
it doesn't really do anything for me

303
00:15:36,410 --> 00:15:40,410
which is why I found a video about it

304
00:15:40,410 --> 00:15:45,660
which I'm going to show you over the

305
00:15:45,660 --> 00:15:49,260
bulk well as an example here's our

306
00:15:49,260 --> 00:15:52,140
initial version of raindrop and here you

307
00:15:52,140 --> 00:15:54,180
can see we already recognized mailing

308
00:15:54,180 --> 00:15:56,130
list messages and put them to the side

309
00:15:56,130 --> 00:15:58,170
you can get to them when you need to but

310
00:15:58,170 --> 00:15:59,100
they shouldn't get in the way of

311
00:15:59,100 --> 00:16:00,690
messages that are only for you

312
00:16:00,690 --> 00:16:02,970
we're also working on ways to filter for

313
00:16:02,970 --> 00:16:04,500
notifications like those you might get

314
00:16:04,500 --> 00:16:06,960
from Amazon Facebook or eBay to keep

315
00:16:06,960 --> 00:16:08,580
them out of the messages you get from

316
00:16:08,580 --> 00:16:11,430
real people and because this is an open

317
00:16:11,430 --> 00:16:13,200
source project with a built-in extension

318
00:16:13,200 --> 00:16:14,820
system you'll be able to pick which

319
00:16:14,820 --> 00:16:18,120
notifications you want where well that's

320
00:16:18,120 --> 00:16:19,800
all for now thanks for listening the

321
00:16:19,800 --> 00:16:20,800
range up team welcomes

322
00:16:20,800 --> 00:16:24,190
comments indeed been but so what are you

323
00:16:24,190 --> 00:16:25,420
said in the beginning which you did not

324
00:16:25,420 --> 00:16:27,610
see you said it's a messaging kind of

325
00:16:27,610 --> 00:16:29,350
system so Audion acid is from everywhere

326
00:16:29,350 --> 00:16:31,209
from Twitter from Facebook from email

327
00:16:31,209 --> 00:16:33,850
from Skype everything just go into this

328
00:16:33,850 --> 00:16:35,940
one app and then this app figures out

329
00:16:35,940 --> 00:16:38,680
which messages are important and which

330
00:16:38,680 --> 00:16:42,760
are not or visa tries to and so it does

331
00:16:42,760 --> 00:16:51,710
set inside of couch TV

332
00:16:51,720 --> 00:16:55,740
next one I'm gonna show you some code

333
00:16:55,740 --> 00:16:58,860
because I mean talking about apps is

334
00:16:58,860 --> 00:17:01,020
nice but you might want to see how that

335
00:17:01,020 --> 00:17:05,790
actually works so we're gonna look at IO

336
00:17:05,790 --> 00:17:07,410
which is really simple so I can show you

337
00:17:07,410 --> 00:17:09,660
all the code because it's just a few

338
00:17:09,660 --> 00:17:15,110
lines um yeah it's simple eyes that's it

339
00:17:15,110 --> 00:17:17,520
and it's only code Shiva so there's

340
00:17:17,520 --> 00:17:19,230
nothing added on top of us no sugar or

341
00:17:19,230 --> 00:17:24,270
nothing it just is just contains a few

342
00:17:24,270 --> 00:17:26,160
of those things like views and updates

343
00:17:26,160 --> 00:17:27,630
and lists where I'll just show you so

344
00:17:27,630 --> 00:17:29,250
anyway this is um the map function and

345
00:17:29,250 --> 00:17:33,210
what it does is so it takes the key of

346
00:17:33,210 --> 00:17:37,680
every document which is like a sort of

347
00:17:37,680 --> 00:17:41,610
short version of the URL so the secret

348
00:17:41,610 --> 00:17:44,340
and the target is the actual URL and

349
00:17:44,340 --> 00:17:47,580
then it spits out a list of every key so

350
00:17:47,580 --> 00:17:52,230
every like secret and every URL and this

351
00:17:52,230 --> 00:17:55,560
way we can figure out if someone gives

352
00:17:55,560 --> 00:18:01,860
us a key what the URL is this is the

353
00:18:01,860 --> 00:18:05,520
update function that stores a ul so as

354
00:18:05,520 --> 00:18:09,780
you can see here and we are getting the

355
00:18:09,780 --> 00:18:11,190
document which in this case is now

356
00:18:11,190 --> 00:18:13,140
because we're creating a new one and the

357
00:18:13,140 --> 00:18:15,000
request and so what we can do here is

358
00:18:15,000 --> 00:18:17,810
okay if there's already duck we we just

359
00:18:17,810 --> 00:18:19,950
return because we don't want to update

360
00:18:19,950 --> 00:18:22,980
existing ones and then we create a new

361
00:18:22,980 --> 00:18:25,770
document and then we just say okay the

362
00:18:25,770 --> 00:18:28,350
target is the URL which we are getting

363
00:18:28,350 --> 00:18:30,570
from the request object so from the form

364
00:18:30,570 --> 00:18:33,090
that I've just submitted and the

365
00:18:33,090 --> 00:18:35,100
shortened version we just generate the

366
00:18:35,100 --> 00:18:39,930
random string and we send that a cid and

367
00:18:39,930 --> 00:18:44,970
so this just gets returned here and so

368
00:18:44,970 --> 00:18:46,920
this is the stuff that gets saved in the

369
00:18:46,920 --> 00:18:49,800
database and this is the this is sent to

370
00:18:49,800 --> 00:18:52,050
the browser so you would actually want

371
00:18:52,050 --> 00:18:55,290
some HTML editor maybe so that people

372
00:18:55,290 --> 00:18:57,390
can click on it or

373
00:18:57,390 --> 00:19:00,210
and yeah what generate secrets not that

374
00:19:00,210 --> 00:19:09,750
interesting I guess this is the actual

375
00:19:09,750 --> 00:19:13,650
thing that redirects you to the URL you

376
00:19:13,650 --> 00:19:16,260
wanted to go so when I clicked on the

377
00:19:16,260 --> 00:19:17,820
link this is what get exit gets executed

378
00:19:17,820 --> 00:19:19,980
and as you can see here we are returning

379
00:19:19,980 --> 00:19:24,120
and redirect 302 and giving it the

380
00:19:24,120 --> 00:19:26,400
location header which is the target of

381
00:19:26,400 --> 00:19:30,679
that document so pretty simple and

382
00:19:30,679 --> 00:19:34,500
here's the list and that just spits out

383
00:19:34,500 --> 00:19:38,610
all the links or all the URLs in the

384
00:19:38,610 --> 00:19:40,590
database so I can have a list and see

385
00:19:40,590 --> 00:19:47,230
what people submitted

386
00:19:47,240 --> 00:19:50,130
okay next one is some the CouchDB wiki

387
00:19:50,130 --> 00:19:51,990
that I just told you that is as I said

388
00:19:51,990 --> 00:19:55,770
implemented using semi so that's a bit

389
00:19:55,770 --> 00:20:01,500
different as I said my dog runs on the

390
00:20:01,500 --> 00:20:04,910
client and I just uses an occasional a

391
00:20:04,910 --> 00:20:07,919
jQuery to to store the data but

392
00:20:07,919 --> 00:20:09,590
everything else happens in the client

393
00:20:09,590 --> 00:20:13,740
and semi is based on jQuery and there's

394
00:20:13,740 --> 00:20:15,809
also little a brick couch days which

395
00:20:15,809 --> 00:20:18,750
makes it easier to to talk to couch the

396
00:20:18,750 --> 00:20:21,660
front within the browser so you can just

397
00:20:21,660 --> 00:20:23,820
say okay just save that you don't have

398
00:20:23,820 --> 00:20:31,710
to do HTTP by yourself this is part of

399
00:20:31,710 --> 00:20:34,020
the source code at least so this is how

400
00:20:34,020 --> 00:20:36,840
you write a semi application and the top

401
00:20:36,840 --> 00:20:38,580
you're you're just initializing semi

402
00:20:38,580 --> 00:20:41,250
itself and then what you do is and you

403
00:20:41,250 --> 00:20:45,000
can call get put post and delete and you

404
00:20:45,000 --> 00:20:49,020
can see here and you just pass it a

405
00:20:49,020 --> 00:20:52,200
pattern for ul so this one will match

406
00:20:52,200 --> 00:20:54,960
everything that says pages slash some

407
00:20:54,960 --> 00:20:59,850
string so when my URL changes to slash

408
00:20:59,850 --> 00:21:01,770
pages some string this function gets

409
00:21:01,770 --> 00:21:07,320
involved and this will here load the

410
00:21:07,320 --> 00:21:08,419
documents

411
00:21:08,419 --> 00:21:10,639
whistling which in this case is a page

412
00:21:10,639 --> 00:21:16,399
and it will run and this function this

413
00:21:16,399 --> 00:21:19,129
looks like pretty nominal jQuery so on

414
00:21:19,129 --> 00:21:21,080
success there's another function and the

415
00:21:21,080 --> 00:21:23,149
dog gets passed in and then you can

416
00:21:23,149 --> 00:21:26,690
render a template here showing the page

417
00:21:26,690 --> 00:21:30,590
or whatever you want to do so and yeah

418
00:21:30,590 --> 00:21:35,629
pretty simple again this is some sort of

419
00:21:35,629 --> 00:21:38,899
the create action sorry I'm talking a

420
00:21:38,899 --> 00:21:40,549
bit like a trains person's own rates

421
00:21:40,549 --> 00:21:42,559
they're actually our actions and they

422
00:21:42,559 --> 00:21:49,730
are called create so you know so here

423
00:21:49,730 --> 00:21:53,049
let's posts to the pages path and again

424
00:21:53,049 --> 00:21:56,629
this load some some kind of object and

425
00:21:56,629 --> 00:22:01,100
and then store sets or you say coach Doc

426
00:22:01,100 --> 00:22:04,249
TV dot save doc and then it saves that

427
00:22:04,249 --> 00:22:07,970
and you can show some message saying

428
00:22:07,970 --> 00:22:12,259
okay that worked or it didn't so what is

429
00:22:12,259 --> 00:22:15,919
it and some he also has some sugar like

430
00:22:15,919 --> 00:22:18,320
the fall filters I don't know with that

431
00:22:18,320 --> 00:22:20,629
but so you can run stuff before every

432
00:22:20,629 --> 00:22:22,999
request if you wanted to like in this

433
00:22:22,999 --> 00:22:28,850
case clear the error message yep that is

434
00:22:28,850 --> 00:22:31,759
semi and um as I said it all uses Ajax

435
00:22:31,759 --> 00:22:33,769
and that makes our customers very happy

436
00:22:33,769 --> 00:22:43,489
of course so um the last one damn it

437
00:22:43,489 --> 00:22:48,290
it's called rain drop on that wave drop

438
00:22:48,300 --> 00:22:51,660
that was yesterday night sorry

439
00:22:51,660 --> 00:22:55,840
so as I said um rain drop it collects

440
00:22:55,840 --> 00:22:57,610
all the messages from other clients and

441
00:22:57,610 --> 00:22:58,900
all your accounts you have so if you

442
00:22:58,900 --> 00:23:01,060
have Twitter and Skype and I am client

443
00:23:01,060 --> 00:23:04,360
on Facebook I will collect those and it

444
00:23:04,360 --> 00:23:05,950
also integrates email em neutrals

445
00:23:05,950 --> 00:23:08,470
they're going to work with weight and

446
00:23:08,470 --> 00:23:10,630
you can also shop in RSS feeds a 19-1

447
00:23:10,630 --> 00:23:15,840
basically and install it and those into

448
00:23:15,840 --> 00:23:17,580
whoops

449
00:23:17,580 --> 00:23:23,440
like this and that's actually some

450
00:23:23,440 --> 00:23:26,400
Python involved so it's not all just

451
00:23:26,400 --> 00:23:29,710
JavaScript and couch unfortunately they

452
00:23:29,710 --> 00:23:32,470
need some Python to to set up things and

453
00:23:32,470 --> 00:23:35,560
to actually go to Twitter and and load

454
00:23:35,560 --> 00:23:38,710
stuff so that is our Python but we're

455
00:23:38,710 --> 00:23:41,080
not going to talk about that and then

456
00:23:41,080 --> 00:23:42,750
I'm that goes through the couch and then

457
00:23:42,750 --> 00:23:46,540
again it serves the stuff that you've

458
00:23:46,540 --> 00:23:47,980
seen in the video so you can use the

459
00:23:47,980 --> 00:23:52,090
browser to see your messages inside the

460
00:23:52,090 --> 00:23:55,000
couch is again documents and those

461
00:23:55,000 --> 00:23:57,340
contain your tweets your emails your

462
00:23:57,340 --> 00:23:59,470
everything your contacts and so every

463
00:23:59,470 --> 00:24:03,010
everything that raindrop collects stored

464
00:24:03,010 --> 00:24:05,470
in one document and then what they do

465
00:24:05,470 --> 00:24:07,930
they have a view and that view is called

466
00:24:07,930 --> 00:24:12,220
mega view I'm not gonna get into why

467
00:24:12,220 --> 00:24:14,950
they're doing it but I have a few

468
00:24:14,950 --> 00:24:17,200
reasons to instead of using many views

469
00:24:17,200 --> 00:24:18,730
for extracting data they're just doing

470
00:24:18,730 --> 00:24:21,220
this one big thing here which looks like

471
00:24:21,220 --> 00:24:24,280
this which is the because of you I've

472
00:24:24,280 --> 00:24:26,560
ever seen so usually you have like three

473
00:24:26,560 --> 00:24:29,590
four lines or something and yeah so they

474
00:24:29,590 --> 00:24:30,610
have a bigger one because they're

475
00:24:30,610 --> 00:24:33,250
Mozilla and they need something big and

476
00:24:33,250 --> 00:24:35,410
this is reduced function which is small

477
00:24:35,410 --> 00:24:37,660
again like you're used to and it just

478
00:24:37,660 --> 00:24:41,500
comes something and then they have some

479
00:24:41,500 --> 00:24:43,330
assets and libraries like 30 megabytes

480
00:24:43,330 --> 00:24:46,540
or so in that CouchDB and it is enough

481
00:24:46,540 --> 00:24:49,840
to serve the application and generate

482
00:24:49,840 --> 00:24:53,050
HTML and everything and of course it

483
00:24:53,050 --> 00:24:54,520
wouldn't be a Mozilla project if I

484
00:24:54,520 --> 00:24:55,120
didn't have

485
00:24:55,120 --> 00:24:56,680
engines or you can write your own

486
00:24:56,680 --> 00:24:59,620
extensions and do we stop with that and

487
00:24:59,620 --> 00:25:01,840
then the way it works is that every

488
00:25:01,840 --> 00:25:03,160
document gets passed with every

489
00:25:03,160 --> 00:25:05,440
extension and the extension can generate

490
00:25:05,440 --> 00:25:08,860
more documents which get fed back to the

491
00:25:08,860 --> 00:25:11,530
extensions again until no more documents

492
00:25:11,530 --> 00:25:14,100
are being generated which sounds like a

493
00:25:14,100 --> 00:25:17,430
bit crazy but it seems to work

494
00:25:17,430 --> 00:25:19,740
I'm sorry where this is like the

495
00:25:19,740 --> 00:25:24,160
architectural overview everything goes

496
00:25:24,160 --> 00:25:27,640
into the Python thing fetches all the

497
00:25:27,640 --> 00:25:29,410
data and drops it into the couch and

498
00:25:29,410 --> 00:25:31,660
then it runs all the extensions and then

499
00:25:31,660 --> 00:25:38,650
it goes to the browser okay so um that's

500
00:25:38,650 --> 00:25:40,960
actually already the end and the song

501
00:25:40,960 --> 00:25:44,110
questions and that's sort of what comes

502
00:25:44,110 --> 00:25:49,360
next all those apps and first of all

503
00:25:49,360 --> 00:25:51,510
what what do we now now so could she be

504
00:25:51,510 --> 00:25:55,360
stores those documents a situation we

505
00:25:55,360 --> 00:25:59,080
use those views and then with a map and

506
00:25:59,080 --> 00:26:03,040
reduced to to extract the data it has a

507
00:26:03,040 --> 00:26:06,300
built in HTTP server which means we can

508
00:26:06,300 --> 00:26:08,910
talk to it directly from the browser I

509
00:26:08,910 --> 00:26:11,620
test for shows and lists which allow us

510
00:26:11,620 --> 00:26:14,020
to generate HTML or whatever XML we want

511
00:26:14,020 --> 00:26:17,890
to talk to the clients it has assets

512
00:26:17,890 --> 00:26:21,010
such as images and CSS so you can serve

513
00:26:21,010 --> 00:26:22,660
those as well direct directly from the

514
00:26:22,660 --> 00:26:24,400
from the database and you don't need a

515
00:26:24,400 --> 00:26:29,050
specialized server for that and together

516
00:26:29,050 --> 00:26:33,250
all this is called cow chips and one

517
00:26:33,250 --> 00:26:35,470
other thing has said now that everything

518
00:26:35,470 --> 00:26:36,850
is in the database it also means that

519
00:26:36,850 --> 00:26:39,400
the data of your application and the

520
00:26:39,400 --> 00:26:43,059
code are in one place which is pretty

521
00:26:43,059 --> 00:26:46,480
nice because um together with the

522
00:26:46,480 --> 00:26:49,240
replication where you can sort of copy

523
00:26:49,240 --> 00:26:51,730
data from one database to the other it

524
00:26:51,730 --> 00:26:53,170
also allows you to install absolute

525
00:26:53,170 --> 00:26:55,390
weight because everything is just in the

526
00:26:55,390 --> 00:26:57,550
database so you replicate your data and

527
00:26:57,550 --> 00:26:59,870
that includes your code and then this

528
00:26:59,870 --> 00:27:01,309
how you install your apps which is

529
00:27:01,309 --> 00:27:08,450
pretty simple um okay so so again and

530
00:27:08,450 --> 00:27:09,620
this is what we already know

531
00:27:09,620 --> 00:27:11,750
and so the question is what what comes

532
00:27:11,750 --> 00:27:14,180
next I mean why not have an app store

533
00:27:14,180 --> 00:27:17,030
and they get giant couch TV somewhere

534
00:27:17,030 --> 00:27:18,680
and then people can just replicate stuff

535
00:27:18,680 --> 00:27:21,350
out of that and maybe pay for it all

536
00:27:21,350 --> 00:27:23,240
right maybe not for it and have some

537
00:27:23,240 --> 00:27:25,610
some sort of even better open source

538
00:27:25,610 --> 00:27:28,430
word than we have now because whenever

539
00:27:28,430 --> 00:27:30,500
you run an application you have access

540
00:27:30,500 --> 00:27:32,630
to the code and you can change it and

541
00:27:32,630 --> 00:27:35,480
everyone can can can improve apps and

542
00:27:35,480 --> 00:27:38,210
stuff and replicate that to other people

543
00:27:38,210 --> 00:27:40,700
and it might be a pretty a pretty nice

544
00:27:40,700 --> 00:27:43,970
scenario having those apps everywhere

545
00:27:43,970 --> 00:27:47,179
and everyone can hack on them which

546
00:27:47,179 --> 00:27:48,710
isn't my idea and I didn't come up with

547
00:27:48,710 --> 00:27:51,740
this but I like the in the scenario and

548
00:27:51,740 --> 00:27:55,429
of course we want more apps and more

549
00:27:55,429 --> 00:27:58,520
presentations that consume so I mean

550
00:27:58,520 --> 00:28:00,350
what you're seeing here is of course a

551
00:28:00,350 --> 00:28:03,890
couch app that I've written in the last

552
00:28:03,890 --> 00:28:06,679
week and already stopped working it in

553
00:28:06,679 --> 00:28:08,270
the last week it I've had it written for

554
00:28:08,270 --> 00:28:10,880
a previous talk and what you're actually

555
00:28:10,880 --> 00:28:14,000
seeing here is a one giant enormous SVG

556
00:28:14,000 --> 00:28:16,850
file that I generated using tons of

557
00:28:16,850 --> 00:28:17,320
tools

558
00:28:17,320 --> 00:28:19,910
soo-ji on Austin really sucks um

559
00:28:19,910 --> 00:28:22,460
everything crashed yesterday and I

560
00:28:22,460 --> 00:28:24,350
didn't get a nice BG files into the

561
00:28:24,350 --> 00:28:27,670
browser um but anyway I'm gonna do

562
00:28:27,670 --> 00:28:29,570
presentations like this and you can

563
00:28:29,570 --> 00:28:34,880
check out amazing yeah thanks that's

564
00:28:34,880 --> 00:28:47,880
everything so far

565
00:28:47,890 --> 00:28:50,060
there's a couchdb book if you want to

566
00:28:50,060 --> 00:28:51,920
read it it's online and you can also buy

567
00:28:51,920 --> 00:28:53,470
it on paper

568
00:28:53,470 --> 00:28:57,230
soonish thing and if you want to look at

569
00:28:57,230 --> 00:29:00,290
couch apps use those things here you see

570
00:29:00,290 --> 00:29:02,780
me and there's a couch TV website any

571
00:29:02,780 --> 00:29:18,020
questions

572
00:29:18,030 --> 00:29:20,010
so the question was about security

573
00:29:20,010 --> 00:29:23,550
because of course of what I've showed

574
00:29:23,550 --> 00:29:27,390
now when you have access to the entire

575
00:29:27,390 --> 00:29:28,590
application and the code from the

576
00:29:28,590 --> 00:29:31,200
browser you can change it and spy on

577
00:29:31,200 --> 00:29:33,780
people's passwords or something there's

578
00:29:33,780 --> 00:29:36,450
a number of ways one would be to just

579
00:29:36,450 --> 00:29:38,580
put it frogs in front of it and just

580
00:29:38,580 --> 00:29:41,220
check which data you want to give out to

581
00:29:41,220 --> 00:29:44,100
users or to - to clients and you can

582
00:29:44,100 --> 00:29:46,620
also catch to be has some integrated

583
00:29:46,620 --> 00:29:49,320
authentication modules so you can do or

584
00:29:49,320 --> 00:29:50,550
author and stuff like that

585
00:29:50,550 --> 00:29:52,170
and now to decide what you want to give

586
00:29:52,170 --> 00:29:59,680
out there's a dancer a question okay I

