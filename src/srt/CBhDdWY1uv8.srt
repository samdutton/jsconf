1
00:00:38,280 --> 00:00:47,050

ambulance emeriti I was talking to Jen

2
00:00:47,050 --> 00:00:49,660
yesterday Jen Schiffer said well what I

3
00:00:49,660 --> 00:00:51,520
really want to know is polymer or

4
00:00:51,520 --> 00:00:55,000
parallax have you ever picked a

5
00:00:55,000 --> 00:00:59,920
framework or library or stat and got

6
00:00:59,920 --> 00:01:03,720
this

7
00:01:03,730 --> 00:01:06,190
a couple years ago some co-workers and I

8
00:01:06,190 --> 00:01:08,170
went to a place called Del Taco

9
00:01:08,170 --> 00:01:09,850
I don't know if you have those outside

10
00:01:09,850 --> 00:01:12,159
of Utah but we have del tacos and he

11
00:01:12,159 --> 00:01:15,280
ordered a burger with just it was really

12
00:01:15,280 --> 00:01:16,510
hard to get the order out and he said

13
00:01:16,510 --> 00:01:17,740
well I just want like ketchup and a

14
00:01:17,740 --> 00:01:18,400
pickle on it

15
00:01:18,400 --> 00:01:19,990
I don't like the cheese and all that

16
00:01:19,990 --> 00:01:25,210
kind of stuff he opens it up you know it

17
00:01:25,210 --> 00:01:28,780
gets as a ketchup in a pickle I went

18
00:01:28,780 --> 00:01:34,150
back and got the burger but uh sometimes

19
00:01:34,150 --> 00:01:36,729
when we compare all of these libraries

20
00:01:36,729 --> 00:01:38,380
or frameworks or toolkits or whatever

21
00:01:38,380 --> 00:01:40,899
name they want to give themselves we

22
00:01:40,899 --> 00:01:43,240
sometimes think that they're equivalent

23
00:01:43,240 --> 00:01:46,000
to each other or more similar than maybe

24
00:01:46,000 --> 00:01:52,000
we realized that they are or aren't so

25
00:01:52,000 --> 00:01:54,460
if you boil down browser development I

26
00:01:54,460 --> 00:01:57,580
think you've got these five tasks

27
00:01:57,580 --> 00:01:59,679
involved and I hope that this is a

28
00:01:59,679 --> 00:02:01,960
pretty unbiased list of you're building

29
00:02:01,960 --> 00:02:03,310
something in the browser here's what you

30
00:02:03,310 --> 00:02:05,020
have to consider so you've got to

31
00:02:05,020 --> 00:02:07,210
interact with data stores maybe it's

32
00:02:07,210 --> 00:02:09,459
like a JSON API maybe it's just

33
00:02:09,459 --> 00:02:11,200
something to local storage or maybe it's

34
00:02:11,200 --> 00:02:13,090
some over WebSockets but you've got some

35
00:02:13,090 --> 00:02:14,410
data store somewhere that you deal with

36
00:02:14,410 --> 00:02:16,780
you want to render that data to the UI

37
00:02:16,780 --> 00:02:19,870
and keep it up to date and you need to

38
00:02:19,870 --> 00:02:21,370
respond to user interaction to go and

39
00:02:21,370 --> 00:02:23,890
change things and you need to deal with

40
00:02:23,890 --> 00:02:26,050
routing and URLs so that we don't

41
00:02:26,050 --> 00:02:27,760
continue to break the web like most of

42
00:02:27,760 --> 00:02:29,520
us have done for the last few years and

43
00:02:29,520 --> 00:02:33,130
we need to do project stuff where do the

44
00:02:33,130 --> 00:02:35,200
files go what do we name them do use

45
00:02:35,200 --> 00:02:36,940
underscores dashes camelcase

46
00:02:36,940 --> 00:02:39,760
what if you're on unix and guys on Mac

47
00:02:39,760 --> 00:02:42,640
and now your capitalization is wrong but

48
00:02:42,640 --> 00:02:44,080
it works on your computer but not

49
00:02:44,080 --> 00:02:46,629
there's that kind of stuff and also the

50
00:02:46,629 --> 00:02:49,569
build so I framed this whole talk around

51
00:02:49,569 --> 00:02:54,489
these five tasks and then addressed what

52
00:02:54,489 --> 00:02:57,520
each of the ambulatory bone libraries

53
00:02:57,520 --> 00:03:00,459
are concerned about not necessarily what

54
00:03:00,459 --> 00:03:03,010
they are the best at or whose API is

55
00:03:03,010 --> 00:03:06,160
better for the task but just how

56
00:03:06,160 --> 00:03:08,620
concerned is the library with one of

57
00:03:08,620 --> 00:03:12,790
these tasks so here's my graph no

58
00:03:12,790 --> 00:03:14,439
surprise amber is very concerned about

59
00:03:14,439 --> 00:03:18,579
everything I took out a few columns like

60
00:03:18,579 --> 00:03:24,979
your clothes your opinion on MongoDB

61
00:03:24,989 --> 00:03:28,359
things like that so you can see ember is

62
00:03:28,359 --> 00:03:30,519
very concerned about everything angular

63
00:03:30,519 --> 00:03:33,670
is concerned to some degree with all of

64
00:03:33,670 --> 00:03:35,739
these acceptor project stuff react in

65
00:03:35,739 --> 00:03:37,299
polymer just right up the middle and

66
00:03:37,299 --> 00:03:39,459
then a backbone has probably the

67
00:03:39,459 --> 00:03:44,290
strangest looking graph on there and

68
00:03:44,290 --> 00:03:46,780
also for all these comparisons my

69
00:03:46,780 --> 00:03:48,519
favorite UI that I build is a

70
00:03:48,519 --> 00:03:50,799
master-detail UI you think about any

71
00:03:50,799 --> 00:03:53,530
application that has any significance in

72
00:03:53,530 --> 00:03:54,909
your life and it's going to have some

73
00:03:54,909 --> 00:03:57,249
sort of master detail so that's where

74
00:03:57,249 --> 00:03:58,390
you've got two lists on the left and

75
00:03:58,390 --> 00:04:01,359
then some items on the right so let's

76
00:04:01,359 --> 00:04:06,389
look at what we've got here so here is

77
00:04:06,389 --> 00:04:09,099
the app that I built in all five of

78
00:04:09,099 --> 00:04:11,139
these libraries so on the Left we have a

79
00:04:11,139 --> 00:04:13,030
list and as we click through the list

80
00:04:13,030 --> 00:04:16,239
it changes the person on the right I get

81
00:04:16,239 --> 00:04:18,670
an active link here I can refresh this

82
00:04:18,670 --> 00:04:21,070
and it should still work I can come to

83
00:04:21,070 --> 00:04:22,780
Matt and I should be able to click back

84
00:04:22,780 --> 00:04:26,250
and that should all work I edit Matt

85
00:04:26,250 --> 00:04:30,520
Matthew save it and it should update

86
00:04:30,520 --> 00:04:34,420
here update here and it's actually going

87
00:04:34,420 --> 00:04:37,990
off to a server side API so those were

88
00:04:37,990 --> 00:04:39,639
those changes in that edit should be

89
00:04:39,639 --> 00:04:42,240
reflected when i refresh here as well so

90
00:04:42,240 --> 00:04:50,110
those are the that's the the baseline

91
00:04:50,110 --> 00:04:51,310
for how I'm comparing all of these

92
00:04:51,310 --> 00:04:53,139
things for the code samples and the rest

93
00:04:53,139 --> 00:04:57,570
of it now but on master detail

94
00:04:57,570 --> 00:05:00,550
think about your UI you probably have

95
00:05:00,550 --> 00:05:09,440
this even if it's just like the global

96
00:05:09,450 --> 00:05:12,100
navigator at least on the left go inside

97
00:05:12,100 --> 00:05:13,840
there there's another list and just one

98
00:05:13,840 --> 00:05:15,220
little piece of your app is changing at

99
00:05:15,220 --> 00:05:16,900
a time while all the wrapper stuff on

100
00:05:16,900 --> 00:05:21,700
the outside is not so let's look at

101
00:05:21,700 --> 00:05:25,120
backbone so I I ranked at 0 to 4 and how

102
00:05:25,120 --> 00:05:27,220
concerned it is not how good it is at it

103
00:05:27,220 --> 00:05:29,710
but how concerned it is with the problem

104
00:05:29,710 --> 00:05:34,030
so data backbone gave a to rendering

105
00:05:34,030 --> 00:05:36,550
nothing user action routing in project

106
00:05:36,550 --> 00:05:39,789
so here is backbones own definition of

107
00:05:39,789 --> 00:05:40,380
what it is

108
00:05:40,380 --> 00:05:42,220
backbone gives structured to web

109
00:05:42,220 --> 00:05:43,930
applications by providing models with

110
00:05:43,930 --> 00:05:45,639
key value binding and custom events

111
00:05:45,639 --> 00:05:47,530
collections with the rich API for a

112
00:05:47,530 --> 00:05:49,150
numeral function enumerable functions

113
00:05:49,150 --> 00:05:51,039
use with declarative event handling and

114
00:05:51,039 --> 00:05:52,889
connects it all to your existing API

115
00:05:52,889 --> 00:05:57,160
over restful Jason interface so not a

116
00:05:57,160 --> 00:05:58,449
whole lot of like tag learn there but

117
00:05:58,449 --> 00:06:00,220
just very here's what I give you

118
00:06:00,220 --> 00:06:04,259
I sent out a questionnaire to the

119
00:06:04,259 --> 00:06:07,210
creators of all these libraries and this

120
00:06:07,210 --> 00:06:15,430
was my response from Jeremy I was gonna

121
00:06:15,430 --> 00:06:17,560
have a slide for each question and but

122
00:06:17,560 --> 00:06:21,160
anyway Jeremy I don't want to like be

123
00:06:21,160 --> 00:06:23,289
talking bad about Jeremy Jeremy had a

124
00:06:23,289 --> 00:06:25,599
huge influence on probably all of us and

125
00:06:25,599 --> 00:06:27,430
a lot of us are still using underscore

126
00:06:27,430 --> 00:06:30,070
CoffeeScript 2012 was like the year of

127
00:06:30,070 --> 00:06:32,919
Jeremy right and he did a lot of great

128
00:06:32,919 --> 00:06:36,639
things for all of us so data how does it

129
00:06:36,639 --> 00:06:38,409
handle data it's got backbone model it's

130
00:06:38,409 --> 00:06:39,580
probably the most interesting part of

131
00:06:39,580 --> 00:06:41,919
the library it works great with a lot of

132
00:06:41,919 --> 00:06:42,699
rest ish

133
00:06:42,699 --> 00:06:44,770
API is right out of the box but when it

134
00:06:44,770 --> 00:06:46,630
doesn't it's super easy to just back out

135
00:06:46,630 --> 00:06:50,199
and change some things and you got

136
00:06:50,199 --> 00:06:51,970
pub/sub to connect those models to your

137
00:06:51,970 --> 00:06:54,760
view rendering and then you have decide

138
00:06:54,760 --> 00:06:56,770
to have collections and all of this

139
00:06:56,770 --> 00:07:00,610
stuff gets cached so when you request

140
00:07:00,610 --> 00:07:01,840
some records it's going to stay in that

141
00:07:01,840 --> 00:07:03,340
collection and then we ask for one of

142
00:07:03,340 --> 00:07:04,570
those items back from that collection

143
00:07:04,570 --> 00:07:07,000
you get the same object that the whole

144
00:07:07,000 --> 00:07:08,919
collection has which makes updating

145
00:07:08,919 --> 00:07:11,610
things a little bit easier

146
00:07:11,610 --> 00:07:14,409
rendering doesn't do anything backbone

147
00:07:14,409 --> 00:07:18,340
view prototype render is a no op so in

148
00:07:18,340 --> 00:07:19,870
order to get anything on the page at all

149
00:07:19,870 --> 00:07:21,190
and backbone you've got to do something

150
00:07:21,190 --> 00:07:23,740
yourself so you have brains in your head

151
00:07:23,740 --> 00:07:25,570
you have feet in your shoes you can

152
00:07:25,570 --> 00:07:27,460
steer yourself any direction you choose

153
00:07:27,460 --> 00:07:29,949
you're on your own and you know what you

154
00:07:29,949 --> 00:07:32,680
know and you are the one will decide

155
00:07:32,680 --> 00:07:39,279
where to go most people do this at least

156
00:07:39,279 --> 00:07:41,100
the demos

157
00:07:41,100 --> 00:07:42,870
I've seen a lot more handlebars in the

158
00:07:42,870 --> 00:07:45,930
wild and then I guess you could do

159
00:07:45,930 --> 00:07:47,850
manual Dom and actually a new thing a

160
00:07:47,850 --> 00:07:49,650
lot of people are mixing up backbone and

161
00:07:49,650 --> 00:07:51,930
react and having a rack do the rendering

162
00:07:51,930 --> 00:07:54,030
for them and then just using backbone

163
00:07:54,030 --> 00:07:57,330
for the models and collections user

164
00:07:57,330 --> 00:07:58,590
interaction so it's interesting that

165
00:07:58,590 --> 00:08:00,120
backbone doesn't provide anything for

166
00:08:00,120 --> 00:08:02,370
rendering but it does provide user

167
00:08:02,370 --> 00:08:04,740
interaction so you have a declarative

168
00:08:04,740 --> 00:08:07,530
select handler configuration to select

169
00:08:07,530 --> 00:08:10,490
an element and then handle the event

170
00:08:10,490 --> 00:08:12,630
routing it's got a router I only ranked

171
00:08:12,630 --> 00:08:14,850
it at a1 because all it really does is

172
00:08:14,850 --> 00:08:18,330
Maps some route to some Handler and then

173
00:08:18,330 --> 00:08:20,280
that's it and then you have some

174
00:08:20,280 --> 00:08:21,810
programmatic api's to navigate around

175
00:08:21,810 --> 00:08:25,200
the app but it doesn't have any like

176
00:08:25,200 --> 00:08:27,090
declarative routing or links to

177
00:08:27,090 --> 00:08:30,150
automatically get their href set you

178
00:08:30,150 --> 00:08:31,530
have to control all of the setup and

179
00:08:31,530 --> 00:08:33,840
teardown during transitions there isn't

180
00:08:33,840 --> 00:08:35,490
actually even a concept of a transition

181
00:08:35,490 --> 00:08:37,530
so if you want to stop or cancel or

182
00:08:37,530 --> 00:08:40,140
retry some sort of route there's nothing

183
00:08:40,140 --> 00:08:41,610
in there so you've got to build out

184
00:08:41,610 --> 00:08:42,150
yourself

185
00:08:42,150 --> 00:08:48,340
project stuff you're on your own

186
00:08:48,350 --> 00:08:50,370
backbone played a really critical role

187
00:08:50,370 --> 00:08:53,540
we probably have all used it most of us

188
00:08:53,540 --> 00:08:56,580
so I have like a little special place in

189
00:08:56,580 --> 00:08:58,560
my heart for backbone for getting

190
00:08:58,560 --> 00:09:00,210
everyone to actually start taking the

191
00:09:00,210 --> 00:09:02,430
browser even more seriously than we had

192
00:09:02,430 --> 00:09:03,750
started to and jQuery and other things

193
00:09:03,750 --> 00:09:08,220
showed up so let's look at the code

194
00:09:08,220 --> 00:09:12,780
really fast and backbone to make that

195
00:09:12,780 --> 00:09:16,200
thing happen so I've got my index with

196
00:09:16,200 --> 00:09:19,140
some ejs templates hope that's big

197
00:09:19,140 --> 00:09:24,900
enough I can make it bigger so I'm

198
00:09:24,900 --> 00:09:26,250
getting my models in here and just

199
00:09:26,250 --> 00:09:27,840
calling things on a template is probably

200
00:09:27,840 --> 00:09:30,690
the least interesting part here total

201
00:09:30,690 --> 00:09:34,710
lines of code I was down at about 200 so

202
00:09:34,710 --> 00:09:36,060
stuff that I had to write because

203
00:09:36,060 --> 00:09:37,680
backbone didn't provide anything for me

204
00:09:37,680 --> 00:09:40,050
I had to tell it how you actually render

205
00:09:40,050 --> 00:09:44,730
anything into the browser and then a

206
00:09:44,730 --> 00:09:46,380
little thing called serialized so this

207
00:09:46,380 --> 00:09:47,520
is an interesting thing about backbone

208
00:09:47,520 --> 00:09:49,440
is usually you get someone else's flavor

209
00:09:49,440 --> 00:09:51,810
of backbone because it doesn't someone

210
00:09:51,810 --> 00:09:53,220
in the hot tub last night said the

211
00:09:53,220 --> 00:09:54,260
backbone gives you

212
00:09:54,260 --> 00:09:57,029
enough rope to hang yourself and that's

213
00:09:57,029 --> 00:10:00,180
and then that's it so you got to get you

214
00:10:00,180 --> 00:10:02,060
got to get the rest in there yourself

215
00:10:02,060 --> 00:10:04,830
the models almost worked with my API

216
00:10:04,830 --> 00:10:08,100
I had to assign this parse thing to

217
00:10:08,100 --> 00:10:10,890
extract route which then will pull out

218
00:10:10,890 --> 00:10:12,720
you know like the root key that some

219
00:10:12,720 --> 00:10:17,580
api's give you actually had to handle

220
00:10:17,580 --> 00:10:19,380
the click events on links to be able to

221
00:10:19,380 --> 00:10:21,510
route around through the app myself and

222
00:10:21,510 --> 00:10:25,140
so any link that is not external I'm

223
00:10:25,140 --> 00:10:26,790
going to grab that and then tell

224
00:10:26,790 --> 00:10:30,149
backbone history to move around and

225
00:10:30,149 --> 00:10:32,130
notice there I didn't program in any way

226
00:10:32,130 --> 00:10:34,290
to like prevent a transition from

227
00:10:34,290 --> 00:10:36,270
happening so user has a form half filled

228
00:10:36,270 --> 00:10:37,560
out and then they click some link

229
00:10:37,560 --> 00:10:39,779
somewhere else in old development you

230
00:10:39,779 --> 00:10:41,760
have on before and load to alert and say

231
00:10:41,760 --> 00:10:42,930
hey you're not done with this form are

232
00:10:42,930 --> 00:10:43,440
you sure

233
00:10:43,440 --> 00:10:45,390
but with my little implementation here

234
00:10:45,390 --> 00:10:50,700
I'm on my own and then to set up the

235
00:10:50,700 --> 00:10:54,180
models to my API is pretty quick that

236
00:10:54,180 --> 00:10:56,100
was that's about it back phone model

237
00:10:56,100 --> 00:10:59,640
here define a couple things and then my

238
00:10:59,640 --> 00:11:02,450
collection also very very simple and

239
00:11:02,450 --> 00:11:04,560
then you get into the view stuff don't

240
00:11:04,560 --> 00:11:05,459
really want to talk a whole lot about

241
00:11:05,459 --> 00:11:08,400
this because this is just my idea of how

242
00:11:08,400 --> 00:11:11,940
backbone can render a view but basically

243
00:11:11,940 --> 00:11:20,459
I have a router that has a couple mapped

244
00:11:20,459 --> 00:11:22,820
routes here contact and then edit and

245
00:11:22,820 --> 00:11:25,529
then the app and contact are two things

246
00:11:25,529 --> 00:11:26,820
and it was kind of kind of tricky to

247
00:11:26,820 --> 00:11:29,240
keep the Left column

248
00:11:29,240 --> 00:11:32,580
around that but only change the stuff in

249
00:11:32,580 --> 00:11:34,470
the right since backbone isn't

250
00:11:34,470 --> 00:11:35,970
prescribing anything to me I had to

251
00:11:35,970 --> 00:11:39,480
figure that all all out on my own so all

252
00:11:39,480 --> 00:11:48,180
in all yeah there's the app not bad but

253
00:11:48,180 --> 00:11:50,790
a lot of work I've been doing backbone

254
00:11:50,790 --> 00:11:52,260
for two years at work and I couldn't

255
00:11:52,260 --> 00:11:54,420
believe I've like I'm not a very good

256
00:11:54,420 --> 00:11:58,140
developer still because it took me way

257
00:11:58,140 --> 00:11:59,790
longer to do the back on one than any of

258
00:11:59,790 --> 00:12:00,529
the others

259
00:12:00,529 --> 00:12:06,550
alright so that's enough about backbone

260
00:12:06,560 --> 00:12:08,509
oh it's not enough about backbone what's

261
00:12:08,509 --> 00:12:09,920
really neat about backbone is you can

262
00:12:09,920 --> 00:12:11,540
use it like anywhere

263
00:12:11,540 --> 00:12:14,180
if you've used Testim before their

264
00:12:14,180 --> 00:12:16,430
little interface inside of the console

265
00:12:16,430 --> 00:12:18,800
is actually using backbone to create

266
00:12:18,800 --> 00:12:20,749
this tab interface inside of a CLI I

267
00:12:20,749 --> 00:12:24,019
think that's really slick you can't do

268
00:12:24,019 --> 00:12:25,100
that with most the other things that

269
00:12:25,100 --> 00:12:28,309
I'll be talking about ok angular this is

270
00:12:28,309 --> 00:12:30,019
the new kid on the block that has seemed

271
00:12:30,019 --> 00:12:32,300
to like take over everything at least in

272
00:12:32,300 --> 00:12:35,149
my city they had the conference there in

273
00:12:35,149 --> 00:12:36,949
Salt Lake and we've got I got a lot of

274
00:12:36,949 --> 00:12:39,790
friends that are really big into angular

275
00:12:39,790 --> 00:12:42,259
superhero JavaScript mvw

276
00:12:42,259 --> 00:12:45,230
w stands for whatever lets you extend

277
00:12:45,230 --> 00:12:47,839
HTML vocabulary for your app it's a tool

278
00:12:47,839 --> 00:12:49,670
set for building a framework most suited

279
00:12:49,670 --> 00:12:54,239
to your application development

280
00:12:54,249 --> 00:12:56,540
misko says he wanted to make it easy for

281
00:12:56,540 --> 00:12:58,430
web designers non developers to build

282
00:12:58,430 --> 00:13:01,699
web apps I didn't know that they had a

283
00:13:01,699 --> 00:13:03,319
firebase back-end idea at first but they

284
00:13:03,319 --> 00:13:06,559
dropped that what development problems

285
00:13:06,559 --> 00:13:09,550
does it solve decouple your DOM and

286
00:13:09,550 --> 00:13:11,660
testing is right there as one of their

287
00:13:11,660 --> 00:13:14,029
first things and then creating dsls

288
00:13:14,029 --> 00:13:16,970
in HTML well features are you excited

289
00:13:16,970 --> 00:13:19,250
about directives so you can make your

290
00:13:19,250 --> 00:13:22,040
own DSL directives are pretty neat

291
00:13:22,040 --> 00:13:24,379
especially at the composition with them

292
00:13:24,379 --> 00:13:26,180
so then ask them for a sales pitch said

293
00:13:26,180 --> 00:13:27,920
angular is the web what the web browser

294
00:13:27,920 --> 00:13:29,930
would have been had it been designed for

295
00:13:29,930 --> 00:13:31,519
dynamic applications rather than static

296
00:13:31,519 --> 00:13:39,610
documents and by the angular team

297
00:13:39,620 --> 00:13:44,390
so rendering I added that last part the

298
00:13:44,390 --> 00:13:45,830
UI stays up-to-date with the magical

299
00:13:45,830 --> 00:13:47,480
scope object so it's interesting that

300
00:13:47,480 --> 00:13:50,380
Mitsuko says that it was designed for

301
00:13:50,380 --> 00:13:52,700
designers because if you think about

302
00:13:52,700 --> 00:13:54,290
that scope object and you think about

303
00:13:54,290 --> 00:13:58,190
CSS if you say color red the color is

304
00:13:58,190 --> 00:14:00,620
red and that's how scope works you say

305
00:14:00,620 --> 00:14:03,950
scope name is Ryan and name is Ryan when

306
00:14:03,950 --> 00:14:05,810
it wherever I changed that it's just

307
00:14:05,810 --> 00:14:08,810
going to update so I think that this is

308
00:14:08,810 --> 00:14:10,130
one of the greatest things about angular

309
00:14:10,130 --> 00:14:14,630
is you really can just hand it to

310
00:14:14,630 --> 00:14:16,010
someone who doesn't have a whole lot of

311
00:14:16,010 --> 00:14:18,080
experience with browser development and

312
00:14:18,080 --> 00:14:19,730
just say here's this dollar scope thing

313
00:14:19,730 --> 00:14:21,380
put whatever you want on it whenever you

314
00:14:21,380 --> 00:14:23,240
want and this thing is going to stay up

315
00:14:23,240 --> 00:14:25,610
to date for you so it gives people a

316
00:14:25,610 --> 00:14:28,970
real rush of like just enthusiasm and

317
00:14:28,970 --> 00:14:30,350
excitement for building stuff in the

318
00:14:30,350 --> 00:14:32,360
browser that they haven't had probably

319
00:14:32,360 --> 00:14:35,810
their entire career in the web composing

320
00:14:35,810 --> 00:14:37,070
attribute directives is also pretty

321
00:14:37,070 --> 00:14:38,510
powerful if you wanna make something

322
00:14:38,510 --> 00:14:40,640
draggable and have a tooltip you just

323
00:14:40,640 --> 00:14:42,650
have to attribute directives you just

324
00:14:42,650 --> 00:14:44,510
give them some attributes on your HTML

325
00:14:44,510 --> 00:14:46,460
element and you get that behavior so you

326
00:14:46,460 --> 00:14:49,090
can compose those together really well

327
00:14:49,090 --> 00:14:51,260
but essentially it's just a whole bunch

328
00:14:51,260 --> 00:14:53,930
of directives that are hooks based on

329
00:14:53,930 --> 00:14:55,490
the name of an element or they attribute

330
00:14:55,490 --> 00:14:57,350
on the element that gives us some

331
00:14:57,350 --> 00:15:01,040
behavior so yeah I think their HTML DSL

332
00:15:01,040 --> 00:15:02,770
is really good the scope API is

333
00:15:02,770 --> 00:15:04,400
fantastic

334
00:15:04,400 --> 00:15:14,770
the directive API is completely nuts

335
00:15:14,780 --> 00:15:18,440
I really like I don't understand this

336
00:15:18,440 --> 00:15:24,770
stuff

337
00:15:24,780 --> 00:15:27,850
but anyway people people like building

338
00:15:27,850 --> 00:15:28,420
directives

339
00:15:28,420 --> 00:15:30,190
I think the API that you get from it

340
00:15:30,190 --> 00:15:33,730
it's really really good data I hope I

341
00:15:33,730 --> 00:15:36,280
gave it a tune out of one it gives you

342
00:15:36,280 --> 00:15:38,500
HTTP which is really just an xhr module

343
00:15:38,500 --> 00:15:40,840
so the scope stuff will get up-to-date

344
00:15:40,840 --> 00:15:42,970
automatically for you if you do anything

345
00:15:42,970 --> 00:15:46,150
outside of angular's like blest modules

346
00:15:46,150 --> 00:15:47,650
you've probably got a call scope apply

347
00:15:47,650 --> 00:15:50,050
to get their dirty checking which is the

348
00:15:50,050 --> 00:15:51,430
way that they keep the UI up-to-date to

349
00:15:51,430 --> 00:15:53,500
happen and so HTTP will do that for you

350
00:15:53,500 --> 00:15:55,510
automatically and then resource is a

351
00:15:55,510 --> 00:15:57,580
declarative model like module to hook up

352
00:15:57,580 --> 00:16:02,050
an API to an HTTP API but it's very

353
00:16:02,050 --> 00:16:05,470
limited in that like it's expecting xhr

354
00:16:05,470 --> 00:16:07,480
calls and like puts and posts and get

355
00:16:07,480 --> 00:16:10,960
you couldn't really twist it very well

356
00:16:10,960 --> 00:16:13,300
into other things like local storage or

357
00:16:13,300 --> 00:16:15,520
stuff like that so that's why it's only

358
00:16:15,520 --> 00:16:18,610
a two instead of like a four where maybe

359
00:16:18,610 --> 00:16:19,690
they would provide something to allow

360
00:16:19,690 --> 00:16:23,820
you to plug into any kind of data store

361
00:16:23,820 --> 00:16:26,110
user interaction st. paradigm is

362
00:16:26,110 --> 00:16:28,240
rendering just use the HTML scope so you

363
00:16:28,240 --> 00:16:31,350
add functions onto scope and then you

364
00:16:31,350 --> 00:16:34,510
put an attribute on your element to like

365
00:16:34,510 --> 00:16:37,090
on click or ng click will then call some

366
00:16:37,090 --> 00:16:40,870
function note no delegation of all the

367
00:16:40,870 --> 00:16:43,960
events live on the elements routing I

368
00:16:43,960 --> 00:16:47,970
only gave it a 2 because it has ng view

369
00:16:47,970 --> 00:16:51,180
which is pretty nice you can just say

370
00:16:51,180 --> 00:16:54,130
what these routes render this controller

371
00:16:54,130 --> 00:16:56,650
in this template into this ng view but

372
00:16:56,650 --> 00:16:57,940
it's limited because you can't do any

373
00:16:57,940 --> 00:17:00,220
sort of nesting so in my example I've

374
00:17:00,220 --> 00:17:01,480
got stuff on the left thing on the right

375
00:17:01,480 --> 00:17:04,240
and you can't you can't do another level

376
00:17:04,240 --> 00:17:07,449
with ng view so the UI router a lot of

377
00:17:07,449 --> 00:17:09,339
you out there thinking yet just use UI

378
00:17:09,339 --> 00:17:12,100
router and so you can't and UI routers

379
00:17:12,100 --> 00:17:15,339
pretty good and in angular 2.0 they're

380
00:17:15,339 --> 00:17:17,920
redoing the grounder completely I don't

381
00:17:17,920 --> 00:17:18,820
know if they're still looking at ember

382
00:17:18,820 --> 00:17:20,459
but they were looking at embers router

383
00:17:20,459 --> 00:17:22,600
so ice project stuff you're on your own

384
00:17:22,600 --> 00:17:24,850
you know what you know and you're the

385
00:17:24,850 --> 00:17:28,720
one who'll decide where you go let's go

386
00:17:28,720 --> 00:17:33,410
to the yeah let's go to the code for

387
00:17:33,410 --> 00:17:41,680
thank you there real quick so angular

388
00:17:41,680 --> 00:17:47,030
not very much that's the whole app I

389
00:17:47,030 --> 00:17:49,130
didn't really have to do anything custom

390
00:17:49,130 --> 00:17:51,050
they've got a route provider thing to do

391
00:17:51,050 --> 00:17:54,350
my routing and the big angular resource

392
00:17:54,350 --> 00:17:55,970
that I plugged into my API with just

393
00:17:55,970 --> 00:18:00,020
this quick little config I make my

394
00:18:00,020 --> 00:18:01,700
controllers and just dump stuff on to

395
00:18:01,700 --> 00:18:05,840
scope which is super super easy and then

396
00:18:05,840 --> 00:18:07,520
my edit controller was not too bad the

397
00:18:07,520 --> 00:18:09,140
only kind of weird thing was to keep the

398
00:18:09,140 --> 00:18:11,120
stuff on the left up to date I had to do

399
00:18:11,120 --> 00:18:13,820
pub/sub so I edit the thing publishing

400
00:18:13,820 --> 00:18:16,280
event comes back up and then I just

401
00:18:16,280 --> 00:18:18,710
refresh all the contacts from the server

402
00:18:18,710 --> 00:18:20,600
there'd be a much better way to do that

403
00:18:20,600 --> 00:18:23,600
I'm sure but angular didn't really

404
00:18:23,600 --> 00:18:25,880
direct me on how to do something like

405
00:18:25,880 --> 00:18:30,350
that so I had to go for it myself all

406
00:18:30,350 --> 00:18:33,230
right so next up we have polymer polymer

407
00:18:33,230 --> 00:18:34,970
if you're not familiar with it is

408
00:18:34,970 --> 00:18:38,890
basically a partially a polyfill for

409
00:18:38,890 --> 00:18:40,910
using the new stuff that's coming out in

410
00:18:40,910 --> 00:18:47,420
the web so web components mostly from

411
00:18:47,420 --> 00:18:49,250
their website polymer puts elements back

412
00:18:49,250 --> 00:18:50,960
at the center of web development you can

413
00:18:50,960 --> 00:18:52,190
create your own HTML elements and

414
00:18:52,190 --> 00:18:53,930
compose them into complete complex

415
00:18:53,930 --> 00:18:55,430
applications that are scalable and

416
00:18:55,430 --> 00:18:59,810
maintainable data they don't do anything

417
00:18:59,810 --> 00:19:01,670
for data you're on your own routing they

418
00:19:01,670 --> 00:19:03,410
don't do anything for outing and do

419
00:19:03,410 --> 00:19:06,020
anything for project stuff complex

420
00:19:06,020 --> 00:19:07,280
applications that are scalable and

421
00:19:07,280 --> 00:19:12,960
maintainable with just elements it's me

422
00:19:12,970 --> 00:19:16,040
anyway surrendering everything is an

423
00:19:16,040 --> 00:19:17,840
element it actually uses the shadow down

424
00:19:17,840 --> 00:19:19,580
when available which is super weird for

425
00:19:19,580 --> 00:19:21,620
your CSS because if you like have some

426
00:19:21,620 --> 00:19:23,410
class names on your elements in

427
00:19:23,410 --> 00:19:26,210
application elements you have to import

428
00:19:26,210 --> 00:19:28,060
that CSS to every single one of those

429
00:19:28,060 --> 00:19:31,250
elements for it to apply they two-way

430
00:19:31,250 --> 00:19:33,740
bind the properties so if you pass in a

431
00:19:33,740 --> 00:19:35,690
property to an element and then you

432
00:19:35,690 --> 00:19:36,980
change the outside of that element

433
00:19:36,980 --> 00:19:38,510
somewhere it's going to stay up to date

434
00:19:38,510 --> 00:19:40,070
in the element and vice versa if you

435
00:19:40,070 --> 00:19:41,420
change that property inside the element

436
00:19:41,420 --> 00:19:43,010
outside the element is gonna stay up to

437
00:19:43,010 --> 00:19:45,500
date and it's just declarative this is

438
00:19:45,500 --> 00:19:46,550
that and you're done

439
00:19:46,550 --> 00:19:48,990
you have published properties so you

440
00:19:48,990 --> 00:19:50,640
have more granular control of what the

441
00:19:50,640 --> 00:19:53,580
outside world can pass in just like

442
00:19:53,580 --> 00:19:55,350
normal elements they don't respond to

443
00:19:55,350 --> 00:19:58,440
some types of attributes and a really

444
00:19:58,440 --> 00:20:00,090
nice mustache syntax for content and

445
00:20:00,090 --> 00:20:02,130
attributes you just drop in the

446
00:20:02,130 --> 00:20:04,260
mustaches into anywhere in the template

447
00:20:04,260 --> 00:20:07,680
and they will work user interaction use

448
00:20:07,680 --> 00:20:09,600
a declarative events just like the other

449
00:20:09,600 --> 00:20:12,210
ones so far and they just map to methods

450
00:20:12,210 --> 00:20:13,650
on the component definition so very

451
00:20:13,650 --> 00:20:16,290
similar of good distinction is polymer

452
00:20:16,290 --> 00:20:19,110
versus the platform so the lowest layer

453
00:20:19,110 --> 00:20:20,700
of polymer is platform jeaious and that

454
00:20:20,700 --> 00:20:22,080
contains all the libraries that are the

455
00:20:22,080 --> 00:20:24,150
polyfills

456
00:20:24,150 --> 00:20:26,910
but then polymer itself has like some

457
00:20:26,910 --> 00:20:28,770
stuff on top of that so when you're

458
00:20:28,770 --> 00:20:30,630
doing polymer you're not actually like

459
00:20:30,630 --> 00:20:32,550
doing the future of the web web

460
00:20:32,550 --> 00:20:35,070
components you've got that but you also

461
00:20:35,070 --> 00:20:37,560
are using a polymer library built on top

462
00:20:37,560 --> 00:20:39,420
of it so it's not exactly what's going

463
00:20:39,420 --> 00:20:41,400
to be a web component ship

464
00:20:41,400 --> 00:20:44,790
I think HTML imports is one of the most

465
00:20:44,790 --> 00:20:47,580
interesting parts of all of this you

466
00:20:47,580 --> 00:20:49,410
think about bringing bootstrap into your

467
00:20:49,410 --> 00:20:52,680
application or any sort of library that

468
00:20:52,680 --> 00:20:56,220
has CSS and JavaScript with HTML imports

469
00:20:56,220 --> 00:20:58,110
this is what it would be to bring

470
00:20:58,110 --> 00:20:59,460
bootstrap into your app and you're done

471
00:20:59,460 --> 00:21:01,920
because that bootstrap HTML file could

472
00:21:01,920 --> 00:21:03,540
have the CSS and it could have the

473
00:21:03,540 --> 00:21:06,030
JavaScript all your dependencies become

474
00:21:06,030 --> 00:21:09,060
declarative HTML knows how to load HTML

475
00:21:09,060 --> 00:21:10,500
it knows how to load JavaScript and it

476
00:21:10,500 --> 00:21:14,160
knows how to load CSS and so it's

477
00:21:14,160 --> 00:21:15,540
actually I'll playing around with this

478
00:21:15,540 --> 00:21:16,920
and it was it was a ton of fun to be

479
00:21:16,920 --> 00:21:18,330
able to just make an HTML file and

480
00:21:18,330 --> 00:21:22,020
import it and you don't need a build but

481
00:21:22,020 --> 00:21:23,360
you could throw a build at it of course

482
00:21:23,360 --> 00:21:31,050
let's look at the polymer code so here's

483
00:21:31,050 --> 00:21:34,650
all my so you have a polymer element so

484
00:21:34,650 --> 00:21:38,430
I got to import my stuff bring in

485
00:21:38,430 --> 00:21:41,130
contacting it those are elements that I

486
00:21:41,130 --> 00:21:42,540
use inside of here you define your

487
00:21:42,540 --> 00:21:44,580
template like I said here with each one

488
00:21:44,580 --> 00:21:45,900
of these I had to import this style

489
00:21:45,900 --> 00:21:49,110
sheet which felt kind of annoying but it

490
00:21:49,110 --> 00:21:50,850
worked fine a little bit like angular

491
00:21:50,850 --> 00:21:52,740
here template repeat this will repeat

492
00:21:52,740 --> 00:21:55,860
something in there my routing I had no

493
00:21:55,860 --> 00:21:57,660
idea what to do for routing so I did

494
00:21:57,660 --> 00:21:59,640
this total hack where I said

495
00:21:59,640 --> 00:22:01,950
hidden if the route isn't index and then

496
00:22:01,950 --> 00:22:03,480
I'll show it and this one's hidden if

497
00:22:03,480 --> 00:22:07,770
it's not contact addy addy looked at my

498
00:22:07,770 --> 00:22:09,630
code last night and he didn't make any

499
00:22:09,630 --> 00:22:11,250
changes with the routing so I guess I

500
00:22:11,250 --> 00:22:15,600
did an okay job I don't know here is a

501
00:22:15,600 --> 00:22:17,010
hundred lines of stuff that I had to

502
00:22:17,010 --> 00:22:20,430
write that it didn't provide for me so I

503
00:22:20,430 --> 00:22:22,980
made a little xhr thing I had to make my

504
00:22:22,980 --> 00:22:25,770
own router which is not too bad I just

505
00:22:25,770 --> 00:22:28,680
made a really quick little junky one and

506
00:22:28,680 --> 00:22:31,440
then a contacts tour to fetch and deal

507
00:22:31,440 --> 00:22:33,900
with my API so hundred lines of my own

508
00:22:33,900 --> 00:22:36,290
code and then inside of each of these

509
00:22:36,290 --> 00:22:41,040
you have your polymer elements and as

510
00:22:41,040 --> 00:22:42,600
you can see my app element I set up my

511
00:22:42,600 --> 00:22:47,220
router etc so it's kind of fun that one

512
00:22:47,220 --> 00:22:49,290
felt the strangest of all of them to

513
00:22:49,290 --> 00:22:51,720
build for me anyway but I'm really

514
00:22:51,720 --> 00:22:54,990
excited about polymer ember the whole

515
00:22:54,990 --> 00:22:57,240
rainbow this is the one I'm most

516
00:22:57,240 --> 00:22:59,100
familiar with I use this all the time

517
00:22:59,100 --> 00:23:00,330
and I'm actually pretty involved with

518
00:23:00,330 --> 00:23:03,360
ember very simple marketing it

519
00:23:03,360 --> 00:23:04,920
incorporates common idioms so you can

520
00:23:04,920 --> 00:23:06,530
focus on what makes your app special

521
00:23:06,530 --> 00:23:09,540
here's why Tom created it you know the

522
00:23:09,540 --> 00:23:10,940
browser is getting competitive

523
00:23:10,940 --> 00:23:12,900
developers didn't have the tools or even

524
00:23:12,900 --> 00:23:14,370
sometimes the vocabulary to take

525
00:23:14,370 --> 00:23:17,310
advantage of that what does it solve

526
00:23:17,310 --> 00:23:20,100
manages complexity as the size of your

527
00:23:20,100 --> 00:23:22,170
application and the team building it

528
00:23:22,170 --> 00:23:24,570
increases so get rid of boilerplate

529
00:23:24,570 --> 00:23:27,270
pushing the right direction it provides

530
00:23:27,270 --> 00:23:29,160
correct answers for your questions

531
00:23:29,160 --> 00:23:33,300
instead of being on your own it's most

532
00:23:33,300 --> 00:23:36,990
excited about the router and the router

533
00:23:36,990 --> 00:23:40,320
is awesome common misconceptions

534
00:23:40,320 --> 00:23:43,080
documentation is hard it's actually very

535
00:23:43,080 --> 00:23:44,790
well documented now getting started is

536
00:23:44,790 --> 00:23:46,830
hard it's not nearly as hard as it used

537
00:23:46,830 --> 00:23:48,750
to be and in some cases super easy to

538
00:23:48,750 --> 00:23:50,610
get started

539
00:23:50,610 --> 00:23:54,950
favorite website is Viacom using ember I

540
00:23:54,950 --> 00:23:56,970
run out of time so I'm going to cruise

541
00:23:56,970 --> 00:23:58,410
through the sales pitch there so routing

542
00:23:58,410 --> 00:23:59,820
this is are going to the best part of

543
00:23:59,820 --> 00:24:03,390
the app you can have nested routes and

544
00:24:03,390 --> 00:24:06,870
those couple - nested views and so doing

545
00:24:06,870 --> 00:24:07,740
a master-detail

546
00:24:07,740 --> 00:24:09,270
and then doing a master-detail inside of

547
00:24:09,270 --> 00:24:11,910
there is the very same you don't have to

548
00:24:11,910 --> 00:24:13,100
change anything we're in all

549
00:24:13,100 --> 00:24:14,900
the other code examples that I had to do

550
00:24:14,900 --> 00:24:16,460
one more level I would have had to

551
00:24:16,460 --> 00:24:20,090
change all my architecture routes have a

552
00:24:20,090 --> 00:24:22,070
ton of a ton of functionality you can

553
00:24:22,070 --> 00:24:24,230
pause retry cancel transitions you get

554
00:24:24,230 --> 00:24:26,559
declarative links to other places and

555
00:24:26,559 --> 00:24:28,820
from experience it is a lot harder to

556
00:24:28,820 --> 00:24:32,049
break the URL than to support it number

557
00:24:32,049 --> 00:24:33,260
rendering

558
00:24:33,260 --> 00:24:34,730
it's got bound templates it's actually

559
00:24:34,730 --> 00:24:41,510
very much like polymer yeah sometimes it

560
00:24:41,510 --> 00:24:43,070
can be a little bit slow with handlebars

561
00:24:43,070 --> 00:24:44,450
but HTML bars coming out it's gonna make

562
00:24:44,450 --> 00:24:47,929
it a lot faster user interaction same as

563
00:24:47,929 --> 00:24:49,190
some of the other ones you got the

564
00:24:49,190 --> 00:24:51,380
declarative events in your HTML that

565
00:24:51,380 --> 00:24:53,480
mapped to actions on your controllers

566
00:24:53,480 --> 00:24:56,870
and views and routes but you also get

567
00:24:56,870 --> 00:24:59,890
impaired of viewing component events so

568
00:24:59,890 --> 00:25:02,059
if you need to drop down to that level

569
00:25:02,059 --> 00:25:04,039
sometimes it's a lot more convenient or

570
00:25:04,039 --> 00:25:05,780
just a better place to do your events

571
00:25:05,780 --> 00:25:07,400
imperative ly rather than always having

572
00:25:07,400 --> 00:25:10,190
them in your templates also event

573
00:25:10,190 --> 00:25:12,049
handlers are free in ember you can add a

574
00:25:12,049 --> 00:25:13,730
thousand of them and it's not an expense

575
00:25:13,730 --> 00:25:15,770
because everything's just delegated so

576
00:25:15,770 --> 00:25:17,210
there's one click handler for the entire

577
00:25:17,210 --> 00:25:21,679
app data amber data is a separate live

578
00:25:21,679 --> 00:25:24,620
live library so you not to use it but

579
00:25:24,620 --> 00:25:26,690
it's got model serialize and adapter so

580
00:25:26,690 --> 00:25:30,260
that you can custom so you can connect

581
00:25:30,260 --> 00:25:33,500
any sort of API into ember data be able

582
00:25:33,500 --> 00:25:35,360
to serialize how you need to be able to

583
00:25:35,360 --> 00:25:37,309
talk to some service with an adapter how

584
00:25:37,309 --> 00:25:39,169
you need to it's also got an in-memory

585
00:25:39,169 --> 00:25:41,179
cache so when you ask for the same for

586
00:25:41,179 --> 00:25:43,039
an object by some ID you get that same

587
00:25:43,039 --> 00:25:44,780
object every single time you ask for it

588
00:25:44,780 --> 00:25:46,700
which makes keeping things up-to-date

589
00:25:46,700 --> 00:25:50,539
easy and the ships with two adapters

590
00:25:50,539 --> 00:25:51,440
that a lot of people can use

591
00:25:51,440 --> 00:25:55,010
out-of-the-box project stuff ember CLI

592
00:25:55,010 --> 00:25:56,210
it's the thing that creates a

593
00:25:56,210 --> 00:25:57,890
boilerplate project for you gives you

594
00:25:57,890 --> 00:26:00,650
prescribe file organization and tests

595
00:26:00,650 --> 00:26:02,360
build deploy tools generators lots of

596
00:26:02,360 --> 00:26:05,000
stuff so amber cares about all the

597
00:26:05,000 --> 00:26:10,860
things so let's look at the amber code

598
00:26:10,870 --> 00:26:14,150
number was the shortest one that's a

599
00:26:14,150 --> 00:26:16,309
assault on fifty-three lines of code and

600
00:26:16,309 --> 00:26:19,970
if you look inside of here everything is

601
00:26:19,970 --> 00:26:22,250
actually just very declarative I just

602
00:26:22,250 --> 00:26:24,230
say here's my host for my rest service

603
00:26:24,230 --> 00:26:27,169
here are that she beats on my model

604
00:26:27,169 --> 00:26:29,460
here on my routes I have a contact route

605
00:26:29,460 --> 00:26:31,019
in an edit route and they mapped to

606
00:26:31,019 --> 00:26:32,929
these paths

607
00:26:32,929 --> 00:26:35,460
mber is unique in that it tells you how

608
00:26:35,460 --> 00:26:38,730
to provide data to your templates so

609
00:26:38,730 --> 00:26:40,679
like it like tom was saying in that

610
00:26:40,679 --> 00:26:42,389
quote like it's giving us a vocabulary

611
00:26:42,389 --> 00:26:45,960
about these kinds of things sent in your

612
00:26:45,960 --> 00:26:47,279
contact route I just tell it find that

613
00:26:47,279 --> 00:26:50,070
contact and in these two routes here

614
00:26:50,070 --> 00:26:51,570
contact an edit route I'm going to get

615
00:26:51,570 --> 00:26:53,279
the same object in both of them

616
00:26:53,279 --> 00:26:56,549
and then just a little action here to

617
00:26:56,549 --> 00:26:58,590
save it'll say if in a transition to a

618
00:26:58,590 --> 00:27:01,289
different route so amber had everything

619
00:27:01,289 --> 00:27:07,470
that I needed to build this UI in

620
00:27:07,470 --> 00:27:09,629
structure we call developing with ember

621
00:27:09,629 --> 00:27:13,139
whiplash driven development it gives you

622
00:27:13,139 --> 00:27:15,570
so much and you go so fast for two weeks

623
00:27:15,570 --> 00:27:18,360
and you forget that like this isn't just

624
00:27:18,360 --> 00:27:22,769
how your life is and then BAM you hit

625
00:27:22,769 --> 00:27:25,499
something and you get extra angry at

626
00:27:25,499 --> 00:27:27,769
ember because you were going so fast

627
00:27:27,769 --> 00:27:30,179
where if you're going a normal speed you

628
00:27:30,179 --> 00:27:35,789
wouldn't get so angry at it so react

629
00:27:35,789 --> 00:27:38,669
this is a new I guess it's like a year

630
00:27:38,669 --> 00:27:41,820
old now right most people are using

631
00:27:41,820 --> 00:27:44,279
react for the V and MVC it uses a Dom

632
00:27:44,279 --> 00:27:47,759
diff for high performance but you can

633
00:27:47,759 --> 00:27:49,259
also do service under a drink because of

634
00:27:49,259 --> 00:27:51,480
this Dom diff and instead of having two

635
00:27:51,480 --> 00:27:53,249
way binding it has a one-way reactive

636
00:27:53,249 --> 00:27:55,710
data flow so data just flows down

637
00:27:55,710 --> 00:27:57,779
through your app and the goal is there

638
00:27:57,779 --> 00:28:01,779
to make your app easier to reason about

639
00:28:01,789 --> 00:28:05,610
Pete is saying basically that it was

640
00:28:05,610 --> 00:28:06,600
really hard to set up all those

641
00:28:06,600 --> 00:28:08,399
observers so they wanted to do it

642
00:28:08,399 --> 00:28:09,629
automatically and they ended up with

643
00:28:09,629 --> 00:28:12,960
react I'll let you use plain old

644
00:28:12,960 --> 00:28:14,669
JavaScript to express your UI at any

645
00:28:14,669 --> 00:28:16,409
point in time rather than some in this

646
00:28:16,409 --> 00:28:18,720
initial state and then update that state

647
00:28:18,720 --> 00:28:23,369
as things change most excited about the

648
00:28:23,369 --> 00:28:25,139
composition and that render is treated

649
00:28:25,139 --> 00:28:27,690
like a black box for me personally it

650
00:28:27,690 --> 00:28:29,639
has felt a lot like server-side

651
00:28:29,639 --> 00:28:31,740
rendering where you get a request you

652
00:28:31,740 --> 00:28:32,340
get some data

653
00:28:32,340 --> 00:28:34,259
you build HTML and then you're done and

654
00:28:34,259 --> 00:28:36,119
then you're out you don't have like this

655
00:28:36,119 --> 00:28:37,830
I set up this house of cards and now I

656
00:28:37,830 --> 00:28:39,450
pulled out this piece

657
00:28:39,450 --> 00:28:40,889
oh no the whole thing fell apart just

658
00:28:40,889 --> 00:28:43,740
refresh and then it's back to normal so

659
00:28:43,740 --> 00:28:45,690
they're trying to get rid of that key

660
00:28:45,690 --> 00:28:48,720
value observation state web of things

661
00:28:48,720 --> 00:28:51,389
with react a couple common

662
00:28:51,389 --> 00:28:53,639
misconceptions JSX is the least

663
00:28:53,639 --> 00:28:55,769
interesting part of react JSX is

664
00:28:55,769 --> 00:28:58,679
basically xml in your javascript rather

665
00:28:58,679 --> 00:29:00,779
than javascript in your template you go

666
00:29:00,779 --> 00:29:03,630
the other way I love using JSX

667
00:29:03,630 --> 00:29:05,639
it's a harmless declarative language

668
00:29:05,639 --> 00:29:07,019
dump it into the imperative one feels

669
00:29:07,019 --> 00:29:09,570
great the virtual Dom is about treating

670
00:29:09,570 --> 00:29:11,039
your render like a black box it's not

671
00:29:11,039 --> 00:29:14,639
about performance it's favorite website

672
00:29:14,639 --> 00:29:17,090
the uses is facebook.com/ of course

673
00:29:17,090 --> 00:29:21,269
wants to keep his job here's a sales

674
00:29:21,269 --> 00:29:23,179
pitch expression UI at any point in time

675
00:29:23,179 --> 00:29:24,990
data buying has problems with

676
00:29:24,990 --> 00:29:27,299
composition and react is the most

677
00:29:27,299 --> 00:29:29,389
expressive way to build user interfaces

678
00:29:29,389 --> 00:29:31,409
data doesn't give you anything you're on

679
00:29:31,409 --> 00:29:32,820
your own routing doesn't give you

680
00:29:32,820 --> 00:29:36,659
anything project stuff nothing rendering

681
00:29:36,659 --> 00:29:38,639
is it's just it's such a different

682
00:29:38,639 --> 00:29:39,929
paradigm I encourage you guys to go

683
00:29:39,929 --> 00:29:42,179
there all of you to go try it out and

684
00:29:42,179 --> 00:29:43,320
play with it it's one of the things

685
00:29:43,320 --> 00:29:44,880
where if you read about it it's not

686
00:29:44,880 --> 00:29:46,679
quite the same as actually experiencing

687
00:29:46,679 --> 00:29:48,269
it I can tell you about some really

688
00:29:48,269 --> 00:29:49,860
delicious salsa that my wife and I make

689
00:29:49,860 --> 00:29:52,380
but until you actually taste it you

690
00:29:52,380 --> 00:29:56,560
won't really know what I'm talking about

691
00:29:56,570 --> 00:30:02,580
our tikka masala though is awful but

692
00:30:02,580 --> 00:30:04,230
everything feels like input/output right

693
00:30:04,230 --> 00:30:05,370
it feels like functions you want to

694
00:30:05,370 --> 00:30:07,950
build some sort of SVG icon you make a

695
00:30:07,950 --> 00:30:09,299
function that returns some XML and

696
00:30:09,299 --> 00:30:11,820
you're done this is actually really good

697
00:30:11,820 --> 00:30:16,620
right here a very good example of how to

698
00:30:16,620 --> 00:30:17,549
express your UI

699
00:30:17,549 --> 00:30:20,669
you've got props that come in you have

700
00:30:20,669 --> 00:30:22,470
these things that make elements that go

701
00:30:22,470 --> 00:30:24,690
out filter it sort of slice that map but

702
00:30:24,690 --> 00:30:27,990
return some divs and you're done so it's

703
00:30:27,990 --> 00:30:34,299
pretty interesting

704
00:30:34,309 --> 00:30:35,960
and user inaction declarative dislike

705
00:30:35,960 --> 00:30:39,460
everything else so some of my thoughts

706
00:30:39,460 --> 00:30:41,660
amber and angular obviously give you the

707
00:30:41,660 --> 00:30:44,690
most and you don't have to read a whole

708
00:30:44,690 --> 00:30:48,080
lot of your own code so if you don't

709
00:30:48,080 --> 00:30:49,760
want to be writing a bunch of your own

710
00:30:49,760 --> 00:30:51,710
stuff then you probably want to pick one

711
00:30:51,710 --> 00:30:54,470
of those if you want to do other things

712
00:30:54,470 --> 00:30:56,320
and you enjoy writing your own things

713
00:30:56,320 --> 00:30:58,160
those other things are great options

