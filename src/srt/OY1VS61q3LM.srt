1
00:00:34,430 --> 00:00:37,760

so we've been talking about if you

2
00:00:37,760 --> 00:00:40,760
follow the Yui theater about your staff

3
00:00:40,760 --> 00:00:43,070
rounds on both sides and today this

4
00:00:43,070 --> 00:00:45,230
morning later clock we release some code

5
00:00:45,230 --> 00:00:47,150
and I thought I'll explain your little

6
00:00:47,150 --> 00:00:49,940
bit well while we've done it and what it

7
00:00:49,940 --> 00:00:52,940
is and have questions are the M probably

8
00:00:52,940 --> 00:00:55,220
find interesting and the basic

9
00:00:55,220 --> 00:00:57,860
assumption is that you know we think

10
00:00:57,860 --> 00:00:59,870
that the web is broken and we are the

11
00:00:59,870 --> 00:01:01,430
first ones that actually are breaking

12
00:01:01,430 --> 00:01:04,040
the web these are an example of the

13
00:01:04,040 --> 00:01:06,700
apple front page rendering Indonesia

14
00:01:06,700 --> 00:01:08,899
it's actually running something that's

15
00:01:08,899 --> 00:01:10,790
called core is some machine learning

16
00:01:10,790 --> 00:01:12,410
statistical analyses that allows you to

17
00:01:12,410 --> 00:01:14,149
optimize for what gets shown it's a

18
00:01:14,149 --> 00:01:16,190
little today modulating the top that

19
00:01:16,190 --> 00:01:17,960
shows 16 stories for the case of

20
00:01:17,960 --> 00:01:20,869
Indonesia and they're optimized to show

21
00:01:20,869 --> 00:01:22,250
the ones that are better for the user

22
00:01:22,250 --> 00:01:24,229
has a little arrows in the bottom that

23
00:01:24,229 --> 00:01:26,630
allows you to flip through them now when

24
00:01:26,630 --> 00:01:28,070
you access run Indonesia from a real

25
00:01:28,070 --> 00:01:30,320
internet cafe minute 384 kilobit per

26
00:01:30,320 --> 00:01:33,350
second this is what you see for about 20

27
00:01:33,350 --> 00:01:35,570
seconds so the page will load up after

28
00:01:35,570 --> 00:01:38,450
seven eight seconds and for another 12

29
00:01:38,450 --> 00:01:40,340
to 15 seconds you're looking at a pace

30
00:01:40,340 --> 00:01:41,780
that you can actually click on you

31
00:01:41,780 --> 00:01:43,340
cannot rotate through the images and the

32
00:01:43,340 --> 00:01:46,549
ad is not showing why is that because

33
00:01:46,549 --> 00:01:49,580
somebody forgot that sometimes

34
00:01:49,580 --> 00:01:53,150
JavaScript doesn't run another one these

35
00:01:53,150 --> 00:01:55,400
time in the United States that's yahoo

36
00:01:55,400 --> 00:01:58,580
movies running at home a good broadband

37
00:01:58,580 --> 00:02:01,520
connection it loads a beautiful Jumba

38
00:02:01,520 --> 00:02:05,180
trying order the call and an ad when you

39
00:02:05,180 --> 00:02:09,890
connect on a 3g network again after 23

40
00:02:09,890 --> 00:02:12,620
seconds this is what you get a page that

41
00:02:12,620 --> 00:02:15,110
is barely usable so I'm putting

42
00:02:15,110 --> 00:02:17,329
ourselves at ya poo but actually I could

43
00:02:17,329 --> 00:02:18,500
go around the web doing the same

44
00:02:18,500 --> 00:02:20,299
experiment i'll show you that when you

45
00:02:20,299 --> 00:02:21,920
connect on bad networks and mobile

46
00:02:21,920 --> 00:02:24,230
networks things just basically don't

47
00:02:24,230 --> 00:02:26,269
work so the lesson learning is that

48
00:02:26,269 --> 00:02:27,980
regardless of what you think and you

49
00:02:27,980 --> 00:02:30,500
know this is not any more than my

50
00:02:30,500 --> 00:02:33,260
website does need javascript doesn't

51
00:02:33,260 --> 00:02:34,760
need javascript let's assume for a

52
00:02:34,760 --> 00:02:36,019
minute that your website actually need

53
00:02:36,019 --> 00:02:37,760
javascript is that you should always

54
00:02:37,760 --> 00:02:39,620
always always assume that your website

55
00:02:39,620 --> 00:02:41,660
will have to run without javascript

56
00:02:41,660 --> 00:02:45,210
enable on the client

57
00:02:45,220 --> 00:02:47,260
my dog is that actually we should call

58
00:02:47,260 --> 00:02:49,600
these you know the node.js calm section

59
00:02:49,600 --> 00:02:53,080
of J's conf so why is this let me

60
00:02:53,080 --> 00:02:55,600
explain a little bit so if you look at

61
00:02:55,600 --> 00:02:57,550
it 40 years of innovation that happened

62
00:02:57,550 --> 00:03:02,110
from 1972 2010 CPU power density

63
00:03:02,110 --> 00:03:03,760
transistor density has increased by

64
00:03:03,760 --> 00:03:06,190
let's say a factor of a million and I'm

65
00:03:06,190 --> 00:03:08,830
probably being optimistic here but let's

66
00:03:08,830 --> 00:03:10,630
say there is a million storage density

67
00:03:10,630 --> 00:03:12,100
has increased by a factor of a hundred

68
00:03:12,100 --> 00:03:14,680
thousand so when you actually look at

69
00:03:14,680 --> 00:03:16,930
are these phones the amount of

70
00:03:16,930 --> 00:03:18,820
innovation that happens every 18 month

71
00:03:18,820 --> 00:03:20,170
is incredible now when you look at

72
00:03:20,170 --> 00:03:22,480
networks in other words that have only

73
00:03:22,480 --> 00:03:24,820
increased something between 10,000 and a

74
00:03:24,820 --> 00:03:26,200
thousand depends really how you actually

75
00:03:26,200 --> 00:03:28,930
counting so there are a lot of issues

76
00:03:28,930 --> 00:03:31,000
here when you work in a networks like in

77
00:03:31,000 --> 00:03:32,380
Indonesia the rest of the world were you

78
00:03:32,380 --> 00:03:35,080
know it in Silicon Valley writer having

79
00:03:35,080 --> 00:03:36,640
the best network connection you have one

80
00:03:36,640 --> 00:03:38,830
anywhere in the u.s. packet loss is an

81
00:03:38,830 --> 00:03:41,260
issue and there are things like slow

82
00:03:41,260 --> 00:03:43,270
start and the window size and TCP that

83
00:03:43,270 --> 00:03:44,620
actually affect things when they ran out

84
00:03:44,620 --> 00:03:48,459
sort of a good network so as a result

85
00:03:48,459 --> 00:03:50,290
connected devices are only partially

86
00:03:50,290 --> 00:03:51,640
connected and this is this thing that

87
00:03:51,640 --> 00:03:53,440
you might get two bars on your phone and

88
00:03:53,440 --> 00:03:54,880
you might get two bars in your tablet

89
00:03:54,880 --> 00:03:56,620
your gun on a train you're basically

90
00:03:56,620 --> 00:03:59,440
even at home on a 3g connection or even

91
00:03:59,440 --> 00:04:01,690
in a 4g LTE connection you think i

92
00:04:01,690 --> 00:04:03,160
should be connected but actually things

93
00:04:03,160 --> 00:04:04,900
don't work you either don't get a page

94
00:04:04,900 --> 00:04:06,540
you get a page that you cannot click on

95
00:04:06,540 --> 00:04:08,140
that's what we call impartially

96
00:04:08,140 --> 00:04:12,760
connected so as a whole you know we

97
00:04:12,760 --> 00:04:14,470
should actually understand that reach

98
00:04:14,470 --> 00:04:16,840
ability is actually spory and you know

99
00:04:16,840 --> 00:04:19,209
when you run on an apple iOS with

100
00:04:19,209 --> 00:04:20,769
Objective C you get this thing called

101
00:04:20,769 --> 00:04:22,600
reachability API that allows you to know

102
00:04:22,600 --> 00:04:25,180
how am I connected but when you run in a

103
00:04:25,180 --> 00:04:27,300
web browser how do you actually do that

104
00:04:27,300 --> 00:04:30,610
so another example of these I'm actually

105
00:04:30,610 --> 00:04:32,140
to make concrete is the reason that

106
00:04:32,140 --> 00:04:34,090
Indonesia homepage wasn't actually not

107
00:04:34,090 --> 00:04:37,090
working is because the beginning all the

108
00:04:37,090 --> 00:04:38,800
assets that download to the brass are

109
00:04:38,800 --> 00:04:41,470
actually small like we actually optimize

110
00:04:41,470 --> 00:04:44,860
things to be like 3k for k7k those are

111
00:04:44,860 --> 00:04:46,510
things that feed really well with in a

112
00:04:46,510 --> 00:04:48,580
packet they get to a browser but you

113
00:04:48,580 --> 00:04:50,290
start getting to those larger package

114
00:04:50,290 --> 00:04:51,970
that's a lot of retransmission has to go

115
00:04:51,970 --> 00:04:55,000
on those networks and you know 100 k is

116
00:04:55,000 --> 00:04:57,390
no 10 times think

117
00:04:57,390 --> 00:05:00,340
so the sex second thing is that mobile

118
00:05:00,340 --> 00:05:01,990
is actually important and hopefully

119
00:05:01,990 --> 00:05:03,970
that's not a surprise here but let me

120
00:05:03,970 --> 00:05:04,900
actually give you a number that

121
00:05:04,900 --> 00:05:06,520
surprised me yesterday there six billion

122
00:05:06,520 --> 00:05:09,040
mobile subscriber in the world and 277

123
00:05:09,040 --> 00:05:11,470
mobile Internet users in China as

124
00:05:11,470 --> 00:05:13,870
sixty-six percent of mobile users at say

125
00:05:13,870 --> 00:05:15,310
hello to actually think about it that

126
00:05:15,310 --> 00:05:16,510
the u.s. is probably going to get to

127
00:05:16,510 --> 00:05:19,180
these states in no time now mobile web

128
00:05:19,180 --> 00:05:21,880
web is no desktop web and you know if

129
00:05:21,880 --> 00:05:23,440
you actually connect with you know

130
00:05:23,440 --> 00:05:24,490
actually we seen it too it right that

131
00:05:24,490 --> 00:05:26,470
you can bring the mobile interference

132
00:05:26,470 --> 00:05:29,220
between different networks is constant

133
00:05:29,220 --> 00:05:31,600
electrons fly much better than copper

134
00:05:31,600 --> 00:05:34,180
that they do over there and that's just

135
00:05:34,180 --> 00:05:35,890
going to be a reality in at 10,000

136
00:05:35,890 --> 00:05:37,660
factor of innovation several orders of

137
00:05:37,660 --> 00:05:39,430
magnitude slower and cpu is going to be

138
00:05:39,430 --> 00:05:41,050
constant and true for the next years to

139
00:05:41,050 --> 00:05:43,990
come and this is not just latency this

140
00:05:43,990 --> 00:05:47,040
is batteries power is whatever you want

141
00:05:47,040 --> 00:05:49,630
and i said we saw the thing if you know

142
00:05:49,630 --> 00:05:51,010
if i can get one thing away from you

143
00:05:51,010 --> 00:05:54,370
guys is mobile web is not desktop web

144
00:05:54,370 --> 00:05:57,250
and we have innovated a lot on the

145
00:05:57,250 --> 00:05:59,770
application layer on the web there's a

146
00:05:59,770 --> 00:06:01,090
lot of work that has to happen in the

147
00:06:01,090 --> 00:06:03,790
layers 427 to make the mobile web

148
00:06:03,790 --> 00:06:08,470
actually interesting so recapping let's

149
00:06:08,470 --> 00:06:09,880
make sure that you know you design

150
00:06:09,880 --> 00:06:11,440
things of this never javascript in the

151
00:06:11,440 --> 00:06:14,020
browser and in most things you know

152
00:06:14,020 --> 00:06:15,400
that's called to improve vision in

153
00:06:15,400 --> 00:06:16,570
husband and we've been talking about

154
00:06:16,570 --> 00:06:18,730
this for a long time you know since the

155
00:06:18,730 --> 00:06:20,500
days where people started showing only

156
00:06:20,500 --> 00:06:22,750
Ranson msie or only runs on netscape

157
00:06:22,750 --> 00:06:24,940
navigator and we started saying no no

158
00:06:24,940 --> 00:06:26,200
there's such a thing you know you start

159
00:06:26,200 --> 00:06:27,580
with a basic and then you start adding

160
00:06:27,580 --> 00:06:31,780
on top of it now the reality is the

161
00:06:31,780 --> 00:06:33,310
things are done just don't work that way

162
00:06:33,310 --> 00:06:36,010
and we keep building parallel realities

163
00:06:36,010 --> 00:06:38,440
these actually from Nicholas I Cassidy

164
00:06:38,440 --> 00:06:40,690
de took a couple of weeks ago Arab Ajax

165
00:06:40,690 --> 00:06:43,540
and he showed an electric toothbrush it

166
00:06:43,540 --> 00:06:45,250
was a great analogy with progressive

167
00:06:45,250 --> 00:06:48,760
enhancement should be so an electric

168
00:06:48,760 --> 00:06:51,070
toothbrush is a toothbrush if you run

169
00:06:51,070 --> 00:06:52,840
out of electricity still works as a

170
00:06:52,840 --> 00:06:58,780
toothbrush so never assume that you know

171
00:06:58,780 --> 00:07:02,110
the path the developers take to do

172
00:07:02,110 --> 00:07:04,030
progressive enhancement is the hardest

173
00:07:04,030 --> 00:07:06,580
path actually is the opposite when

174
00:07:06,580 --> 00:07:08,600
people actually have to do progression

175
00:07:08,600 --> 00:07:10,600
by writing the code twice or three times

176
00:07:10,600 --> 00:07:12,950
well you end up with with this case of

177
00:07:12,950 --> 00:07:16,910
it just doesn't happen so there is these

178
00:07:16,910 --> 00:07:18,110
things that are we call in a wall

179
00:07:18,110 --> 00:07:19,520
between the client and the server and

180
00:07:19,520 --> 00:07:22,010
this is this paradigm that the code that

181
00:07:22,010 --> 00:07:24,890
you write is different so let me give

182
00:07:24,890 --> 00:07:28,370
you a very quick example I'll just be a

183
00:07:28,370 --> 00:07:30,380
let's say that you did a link on a page

184
00:07:30,380 --> 00:07:32,570
you generate the page using in Ruby on

185
00:07:32,570 --> 00:07:35,570
Rails you fit amount of post you create

186
00:07:35,570 --> 00:07:38,930
a little template to show the post is

187
00:07:38,930 --> 00:07:41,060
shown as links and they say okay I'm

188
00:07:41,060 --> 00:07:42,920
done I have it and now let me add some

189
00:07:42,920 --> 00:07:45,470
Ajax on top of it so you are at an event

190
00:07:45,470 --> 00:07:47,840
handler you catch the event you do an

191
00:07:47,840 --> 00:07:49,640
age ice call you update your inner HTML

192
00:07:49,640 --> 00:07:53,000
on the dorm and now you change your

193
00:07:53,000 --> 00:07:55,550
handler to have two paths one for the

194
00:07:55,550 --> 00:07:59,780
data call and one for the HTML code so

195
00:07:59,780 --> 00:08:02,150
this is called duplication at the end of

196
00:08:02,150 --> 00:08:03,830
a in this case it's very small amount of

197
00:08:03,830 --> 00:08:04,970
code duplication Maurice code

198
00:08:04,970 --> 00:08:07,340
duplication with timelines and time

199
00:08:07,340 --> 00:08:09,290
pressure and developer sometimes has

200
00:08:09,290 --> 00:08:13,040
been lazy we skip this so the lesson is

201
00:08:13,040 --> 00:08:16,130
really with Ajax never accepted because

202
00:08:16,130 --> 00:08:17,660
in mobile networks you're going to fail

203
00:08:17,660 --> 00:08:20,690
and your pages will fail so what are we

204
00:08:20,690 --> 00:08:22,580
doing about that remove the application

205
00:08:22,580 --> 00:08:24,410
we do that through server-side

206
00:08:24,410 --> 00:08:27,260
JavaScript and we found that finally

207
00:08:27,260 --> 00:08:29,060
with node.js we actually could do that

208
00:08:29,060 --> 00:08:30,920
scale I'll give you actually a number

209
00:08:30,920 --> 00:08:32,710
we're running part of our mobile search

210
00:08:32,710 --> 00:08:35,780
using this framework on node.js servers

211
00:08:35,780 --> 00:08:37,520
we're getting about twenty to thirty

212
00:08:37,520 --> 00:08:40,400
percent higher throughput or lower

213
00:08:40,400 --> 00:08:41,810
latency depends how you want to measure

214
00:08:41,810 --> 00:08:44,240
it with eighty percent more unique

215
00:08:44,240 --> 00:08:45,980
visitors on the pages compared to our

216
00:08:45,980 --> 00:08:50,330
baseline in PHP and that's search so if

217
00:08:50,330 --> 00:08:52,100
you work for us and search it probably

218
00:08:52,100 --> 00:08:55,040
works for pretty much everybody so we

219
00:08:55,040 --> 00:08:56,660
need to make client-side JavaScript on

220
00:08:56,660 --> 00:08:58,910
server side JavaScript equivalent how do

221
00:08:58,910 --> 00:09:03,200
we do it we study with Yui 3 Yui 3 for

222
00:09:03,200 --> 00:09:04,880
25 years I've already been running on

223
00:09:04,880 --> 00:09:06,350
server-side and client-side actually

224
00:09:06,350 --> 00:09:07,910
runs across environments so that's a

225
00:09:07,910 --> 00:09:10,550
great place to start so that's it'll

226
00:09:10,550 --> 00:09:13,550
work so the basic assumption is that you

227
00:09:13,550 --> 00:09:15,830
have a browser the abstraction the

228
00:09:15,830 --> 00:09:20,180
browser exposed to you is adult and to

229
00:09:20,180 --> 00:09:21,500
access the Dom you basically

230
00:09:21,500 --> 00:09:23,300
ramming language is called JavaScript

231
00:09:23,300 --> 00:09:25,730
and then you write some code let's we

232
00:09:25,730 --> 00:09:28,070
call the client stuff so you end up with

233
00:09:28,070 --> 00:09:29,600
one stack of things which is the client

234
00:09:29,600 --> 00:09:32,180
stuff then you do another one which is

235
00:09:32,180 --> 00:09:33,980
the server and you start with another

236
00:09:33,980 --> 00:09:36,350
thing called not yet okay fantastic now

237
00:09:36,350 --> 00:09:37,810
have another run times instead of

238
00:09:37,810 --> 00:09:40,760
instead of reducing my complexity i have

239
00:09:40,760 --> 00:09:43,910
a new browser called no DOJ's but in

240
00:09:43,910 --> 00:09:45,350
this case instead of a dorm i have an

241
00:09:45,350 --> 00:09:48,650
HTTP later and I still have jazz now

242
00:09:48,650 --> 00:09:50,570
instead of J's I have v8 and I have all

243
00:09:50,570 --> 00:09:52,280
these things that I can learn about

244
00:09:52,280 --> 00:09:55,760
running my code faster just for v8 so

245
00:09:55,760 --> 00:09:58,880
you end up with server stuff and your

246
00:09:58,880 --> 00:10:00,290
client stuff is not the same as your

247
00:10:00,290 --> 00:10:02,000
server stuff so programming language by

248
00:10:02,000 --> 00:10:03,770
itself is not enough to actually get

249
00:10:03,770 --> 00:10:09,620
your coat okay just know it's not enough

250
00:10:09,620 --> 00:10:11,300
to get your code executing both sides

251
00:10:11,300 --> 00:10:13,700
it's good it's a necessary requirement

252
00:10:13,700 --> 00:10:17,630
but it's not enough so relation the

253
00:10:17,630 --> 00:10:18,980
issue when you think about this problem

254
00:10:18,980 --> 00:10:21,590
is that the web the layer 7 protocol

255
00:10:21,590 --> 00:10:23,150
that carries the data between the server

256
00:10:23,150 --> 00:10:25,340
and the client is carrying Bates and

257
00:10:25,340 --> 00:10:27,020
those beats are representation of a

258
00:10:27,020 --> 00:10:30,110
string but when you step out and you

259
00:10:30,110 --> 00:10:31,550
look at the browser the browser is

260
00:10:31,550 --> 00:10:33,140
operating on domes you can still operate

261
00:10:33,140 --> 00:10:34,370
in strength is mainly a don't

262
00:10:34,370 --> 00:10:35,690
representation and the server is

263
00:10:35,690 --> 00:10:37,100
operating the strings and sometimes you

264
00:10:37,100 --> 00:10:39,620
can create a dump representation so you

265
00:10:39,620 --> 00:10:41,150
end up thinking what is more efficient

266
00:10:41,150 --> 00:10:43,340
here shall I bring the dorm onto the

267
00:10:43,340 --> 00:10:45,830
server side or shall I bean bring the

268
00:10:45,830 --> 00:10:47,300
strings on to the server side basically

269
00:10:47,300 --> 00:10:50,120
the typical question shall I bring build

270
00:10:50,120 --> 00:10:52,070
things out of a template insert them

271
00:10:52,070 --> 00:10:54,230
into them or shall I bring the JSON

272
00:10:54,230 --> 00:10:55,490
representation of the client on the

273
00:10:55,490 --> 00:10:57,770
server side so what we've done actually

274
00:10:57,770 --> 00:11:01,520
we we chose to bring the template in and

275
00:11:01,520 --> 00:11:03,200
the JSON representation to the client

276
00:11:03,200 --> 00:11:04,910
side because of the serialization caused

277
00:11:04,910 --> 00:11:06,800
that was happening between the both it

278
00:11:06,800 --> 00:11:11,180
was significantly more performing we

279
00:11:11,180 --> 00:11:13,370
went to choose a serious set aside done

280
00:11:13,370 --> 00:11:14,930
at the end of the day you have to

281
00:11:14,930 --> 00:11:16,610
construct a Dom you allocated a lot of

282
00:11:16,610 --> 00:11:18,500
member in the server but you need to

283
00:11:18,500 --> 00:11:20,570
serialize the tool to get that data back

284
00:11:20,570 --> 00:11:22,160
to decline and then the client has to

285
00:11:22,160 --> 00:11:23,840
reconstruct another dorm and he sort is

286
00:11:23,840 --> 00:11:26,510
gone on to a note and reflow and

287
00:11:26,510 --> 00:11:31,070
recalculate so we pick Jason we pick

288
00:11:31,070 --> 00:11:33,620
some templates to transfer that JSON in

289
00:11:33,620 --> 00:11:35,329
our case we're picking mustache

290
00:11:35,329 --> 00:11:38,209
and we we done is we say you can drive

291
00:11:38,209 --> 00:11:40,879
server-side only logic you can write

292
00:11:40,879 --> 00:11:42,860
client-side only load to you can run

293
00:11:42,860 --> 00:11:45,350
common logic the client side is what we

294
00:11:45,350 --> 00:11:46,850
call these binders that allow you to

295
00:11:46,850 --> 00:11:49,670
isolate the dome event and the dome

296
00:11:49,670 --> 00:11:52,939
insertion into a little bit of code so

297
00:11:52,939 --> 00:11:54,649
we'd essentially rather than bringing

298
00:11:54,649 --> 00:11:56,059
the client to server a ring that

299
00:11:56,059 --> 00:11:57,829
Dominator cetera bringing the severn to

300
00:11:57,829 --> 00:11:59,929
a client so we have these little thing

301
00:11:59,929 --> 00:12:01,759
called remote proxy that runs from the

302
00:12:01,759 --> 00:12:03,379
client that simulates basically how the

303
00:12:03,379 --> 00:12:07,069
seller how to operate the interesting

304
00:12:07,069 --> 00:12:08,179
thing about this if you look at

305
00:12:08,179 --> 00:12:09,769
applications like lifestyle and it

306
00:12:09,769 --> 00:12:10,970
fielder is that we're actually building

307
00:12:10,970 --> 00:12:13,519
for the iPad we're actually leveraging

308
00:12:13,519 --> 00:12:15,739
that the mobile device storage wiimote

309
00:12:15,739 --> 00:12:18,199
leveraging the cpu and we're able to

310
00:12:18,199 --> 00:12:19,999
shift where we call publications which

311
00:12:19,999 --> 00:12:22,160
are groups of modes from the client to

312
00:12:22,160 --> 00:12:25,309
the server because as a whole we

313
00:12:25,309 --> 00:12:26,869
basically similar in a note DOJ's

314
00:12:26,869 --> 00:12:30,910
environment on the clock we are

315
00:12:30,910 --> 00:12:33,019
basically falling back onto the server

316
00:12:33,019 --> 00:12:36,319
when the client doesn't work so when we

317
00:12:36,319 --> 00:12:38,209
have expensive publications with a lot

318
00:12:38,209 --> 00:12:41,749
of data a lot of calls what we are in we

319
00:12:41,749 --> 00:12:43,220
can basically instrument the code and

320
00:12:43,220 --> 00:12:45,199
say well your code is actually doing a

321
00:12:45,199 --> 00:12:47,629
lot of data calls from a client remember

322
00:12:47,629 --> 00:12:49,639
these the mobile device the network's

323
00:12:49,639 --> 00:12:51,319
flow is actually better you make one

324
00:12:51,319 --> 00:12:53,419
call to the server from the server use

325
00:12:53,419 --> 00:12:55,459
our pipes fetch their resources assemble

326
00:12:55,459 --> 00:12:57,470
that response in the server give it back

327
00:12:57,470 --> 00:12:59,809
to the client the client has a bunch of

328
00:12:59,809 --> 00:13:01,489
links the user can interact with the

329
00:13:01,489 --> 00:13:04,160
page at that point and then later on 18

330
00:13:04,160 --> 00:13:05,569
or 20 seconds later you're going to get

331
00:13:05,569 --> 00:13:07,249
the JavaScript loaded at the bottom of

332
00:13:07,249 --> 00:13:08,360
the page and then you can start

333
00:13:08,360 --> 00:13:10,069
interacting with the page so that whole

334
00:13:10,069 --> 00:13:11,829
flow basically enables us to construct

335
00:13:11,829 --> 00:13:15,919
web wonder you Sybil for declined and

336
00:13:15,919 --> 00:13:18,589
later on web 20 pages a little bit down

337
00:13:18,589 --> 00:13:24,410
the line so let me dive into what

338
00:13:24,410 --> 00:13:26,779
emerged it is so the basic thing is what

339
00:13:26,779 --> 00:13:29,149
we call a model mojito is a mobile view

340
00:13:29,149 --> 00:13:31,100
controller framework is you know very

341
00:13:31,100 --> 00:13:34,399
standard you can use lethal or more is

342
00:13:34,399 --> 00:13:36,110
based on a plug-in model you are things

343
00:13:36,110 --> 00:13:38,629
into it so the very basic thing that we

344
00:13:38,629 --> 00:13:40,220
add is a model and our abstraction here

345
00:13:40,220 --> 00:13:42,199
has been you know object relational

346
00:13:42,199 --> 00:13:43,879
mapping is not a great idea when you

347
00:13:43,879 --> 00:13:45,069
running on the web

348
00:13:45,069 --> 00:13:48,379
and our basic constructs are thought

349
00:13:48,379 --> 00:13:51,889
that yql is a great interface it's a

350
00:13:51,889 --> 00:13:55,579
great dsl for getting your data one of

351
00:13:55,579 --> 00:13:57,259
the reasons for that is that things like

352
00:13:57,259 --> 00:13:59,720
index DB or sequel I'd are available in

353
00:13:59,720 --> 00:14:02,600
1.7 or two billion devices out there so

354
00:14:02,600 --> 00:14:05,209
you can always assume as an API that

355
00:14:05,209 --> 00:14:07,670
your your your application is going to

356
00:14:07,670 --> 00:14:09,259
get access to sequel if it doesn't get

357
00:14:09,259 --> 00:14:11,569
access to sequel through the actual

358
00:14:11,569 --> 00:14:13,160
device you get at it gets access to

359
00:14:13,160 --> 00:14:15,199
sequel through a YQL interface in the

360
00:14:15,199 --> 00:14:17,540
club or Qali you which is another one

361
00:14:17,540 --> 00:14:20,269
from for an evening so as a concept you

362
00:14:20,269 --> 00:14:22,490
basically layer these wide or yql which

363
00:14:22,490 --> 00:14:24,319
basically abstracts am I talking locally

364
00:14:24,319 --> 00:14:25,790
to sequel light or am I talking to

365
00:14:25,790 --> 00:14:28,430
remote into YQL and then you have a

366
00:14:28,430 --> 00:14:31,009
callback those in the data back so I'll

367
00:14:31,009 --> 00:14:32,540
ignore the controller for a minute you

368
00:14:32,540 --> 00:14:33,949
just apply some moose test and what you

369
00:14:33,949 --> 00:14:35,930
can say is either use things like media

370
00:14:35,930 --> 00:14:38,470
queries to adopt your template or

371
00:14:38,470 --> 00:14:40,639
ideally if you want to do more precise

372
00:14:40,639 --> 00:14:42,110
things because an iphone is really not a

373
00:14:42,110 --> 00:14:45,740
tablet you'll have different templates

374
00:14:45,740 --> 00:14:47,860
then the controller level is very

375
00:14:47,860 --> 00:14:50,720
basically a very simple Yui module you

376
00:14:50,720 --> 00:14:52,339
access the namespace that you just did

377
00:14:52,339 --> 00:14:55,879
for the module behind it you get if the

378
00:14:55,879 --> 00:14:58,250
photos from the gallery and when your

379
00:14:58,250 --> 00:15:01,610
callback triggers essentially you can

380
00:15:01,610 --> 00:15:03,680
pass the data and whatever manipulation

381
00:15:03,680 --> 00:15:05,420
you want back into the template that we

382
00:15:05,420 --> 00:15:08,120
saw a minute ago and now this code you

383
00:15:08,120 --> 00:15:10,519
can basically decide these bit runs in

384
00:15:10,519 --> 00:15:12,199
the server these bits runs in a client

385
00:15:12,199 --> 00:15:13,790
or you just make it common rise in both

386
00:15:13,790 --> 00:15:17,899
places so on the action context which is

387
00:15:17,899 --> 00:15:19,339
how do we actually make this thing is

388
00:15:19,339 --> 00:15:21,680
actually the secret of of mojito and

389
00:15:21,680 --> 00:15:26,569
it's a multi-dimensional it's a

390
00:15:26,569 --> 00:15:28,220
multinational data structure that allows

391
00:15:28,220 --> 00:15:30,170
you to store for example things like

392
00:15:30,170 --> 00:15:32,029
device class and you'll have multiple

393
00:15:32,029 --> 00:15:33,769
device classes or you can define things

394
00:15:33,769 --> 00:15:35,839
like speed and you say i'm on a fast

395
00:15:35,839 --> 00:15:38,029
network i'm gonna slow network so that

396
00:15:38,029 --> 00:15:40,399
when a user actually roams and changes

397
00:15:40,399 --> 00:15:41,959
from being at a Wi-Fi connection inside

398
00:15:41,959 --> 00:15:43,490
the room to mean outside on a 3g network

399
00:15:43,490 --> 00:15:45,829
your application can detected and the

400
00:15:45,829 --> 00:15:47,480
action context gets passed between

401
00:15:47,480 --> 00:15:50,420
client and server other things that you

402
00:15:50,420 --> 00:15:51,860
can do is the typical things with you

403
00:15:51,860 --> 00:15:53,959
know mo define days to be request adding

404
00:15:53,959 --> 00:15:54,680
removing

405
00:15:54,680 --> 00:15:58,070
p 7c essays and so forth so all of these

406
00:15:58,070 --> 00:15:59,990
modes basically they become a mojit

407
00:15:59,990 --> 00:16:02,210
library and the motif library is

408
00:16:02,210 --> 00:16:04,130
available to the mochi engine and

409
00:16:04,130 --> 00:16:06,380
modular engine gets the dispatcher this

410
00:16:06,380 --> 00:16:08,720
patch is basically a router it will find

411
00:16:08,720 --> 00:16:10,399
out for that resource are you trying to

412
00:16:10,399 --> 00:16:12,560
add to execute notice that you want to

413
00:16:12,560 --> 00:16:15,920
run and then each of each runtime binds

414
00:16:15,920 --> 00:16:17,720
into this so this is what is common for

415
00:16:17,720 --> 00:16:20,029
both run times we then doing the climb

416
00:16:20,029 --> 00:16:21,589
is that you know you have your dumb

417
00:16:21,589 --> 00:16:23,690
abstraction you write your binders

418
00:16:23,690 --> 00:16:25,490
that's what binds the dumb event and

419
00:16:25,490 --> 00:16:29,510
they don't template onto the execution

420
00:16:29,510 --> 00:16:31,339
and that goes to that remote proxy that

421
00:16:31,339 --> 00:16:32,899
abstracts with you run on the client

422
00:16:32,899 --> 00:16:35,029
server and on the server side is very

423
00:16:35,029 --> 00:16:37,430
similar you have HTTPS an abstraction we

424
00:16:37,430 --> 00:16:40,310
actually are using node.js and expressed

425
00:16:40,310 --> 00:16:42,020
and if you want to modify this to be it

426
00:16:42,020 --> 00:16:43,850
requires what you do is you add more

427
00:16:43,850 --> 00:16:47,360
middle way and that's basically the

428
00:16:47,360 --> 00:16:51,529
picture for mojito so I want to make

429
00:16:51,529 --> 00:16:53,600
sure I'm quickly because I think we're

430
00:16:53,600 --> 00:16:57,800
randomly relate so I want to you know I

431
00:16:57,800 --> 00:16:59,240
said we actually announcer this morning

432
00:16:59,240 --> 00:17:02,420
I want to tell you that the code is

433
00:17:02,420 --> 00:17:05,449
available on github it's a bsd license

434
00:17:05,449 --> 00:17:09,079
like yui is it solves the one problem

435
00:17:09,079 --> 00:17:10,970
which is putting emphasis on the mobile

436
00:17:10,970 --> 00:17:13,250
web and the web is not the same as

437
00:17:13,250 --> 00:17:17,750
mobile web it helps you fulfill the

438
00:17:17,750 --> 00:17:19,220
promise that your staff runs from both

439
00:17:19,220 --> 00:17:21,350
sides and as i say that's not just being

440
00:17:21,350 --> 00:17:23,959
javascript you need javascript and

441
00:17:23,959 --> 00:17:26,569
something to help you run both sides and

442
00:17:26,569 --> 00:17:28,820
this is one of them we hope that people

443
00:17:28,820 --> 00:17:31,250
find it interesting and being an express

444
00:17:31,250 --> 00:17:32,960
on the server side and being on Yui on

445
00:17:32,960 --> 00:17:34,130
the client side I think it's going to be

446
00:17:34,130 --> 00:17:38,870
interesting I think my ass would be you

447
00:17:38,870 --> 00:17:40,760
know let's stop creating those single

448
00:17:40,760 --> 00:17:43,490
page html5 apps that don't run without

449
00:17:43,490 --> 00:17:46,250
JavaScript because that's just we're

450
00:17:46,250 --> 00:17:47,540
going to look at in five years from now

451
00:17:47,540 --> 00:17:49,070
the same way that we looked at Netscape

452
00:17:49,070 --> 00:17:52,970
Navigator msie Wars back in 2005 you

453
00:17:52,970 --> 00:17:56,270
know why Norah the-- wind up there and

454
00:17:56,270 --> 00:17:57,559
to give you a little bit about the

455
00:17:57,559 --> 00:17:59,350
future this is just the beginning right

456
00:17:59,350 --> 00:18:02,809
what I think the vision that we have at

457
00:18:02,809 --> 00:18:06,380
least that i dream about is it's a world

458
00:18:06,380 --> 00:18:07,580
where

459
00:18:07,580 --> 00:18:09,380
no if you actually abstract this a

460
00:18:09,380 --> 00:18:10,610
little bit what you're doing is the

461
00:18:10,610 --> 00:18:12,050
little application that you've written

462
00:18:12,050 --> 00:18:14,330
can actually go to the server can come

463
00:18:14,330 --> 00:18:15,890
back to the client and it's an

464
00:18:15,890 --> 00:18:17,870
optimization you can make us a developer

465
00:18:17,870 --> 00:18:19,430
s of how much for your car runs on the

466
00:18:19,430 --> 00:18:21,770
client around some server now imagine

467
00:18:21,770 --> 00:18:23,330
that if you have access to the content

468
00:18:23,330 --> 00:18:26,360
of the CDM to the edge network what if

469
00:18:26,360 --> 00:18:28,040
you could postpone and change the

470
00:18:28,040 --> 00:18:30,080
authenticity of the caching that happens

471
00:18:30,080 --> 00:18:32,360
in that layer what if you could assemble

472
00:18:32,360 --> 00:18:34,610
things in that later now what if you

473
00:18:34,610 --> 00:18:38,570
could power your CPU or your network on

474
00:18:38,570 --> 00:18:40,010
your device because you close to your

475
00:18:40,010 --> 00:18:42,590
laptop so particular page is executing a

476
00:18:42,590 --> 00:18:44,270
lot of JavaScript what if you could

477
00:18:44,270 --> 00:18:45,950
actually use your laptop that is next to

478
00:18:45,950 --> 00:18:47,510
it or if you could enter your car will

479
00:18:47,510 --> 00:18:50,480
you found and leverage the display in

480
00:18:50,480 --> 00:18:51,950
the car delivers the phone they just

481
00:18:51,950 --> 00:18:53,450
enter the car and these all these things

482
00:18:53,450 --> 00:18:54,860
have to do with the technology refresh

483
00:18:54,860 --> 00:18:56,540
cycle people change their phone a break

484
00:18:56,540 --> 00:18:58,970
in 18 months people change their car LED

485
00:18:58,970 --> 00:19:02,180
TVs every three years right so mojito is

486
00:19:02,180 --> 00:19:04,220
just a first step cocktails as a whole

487
00:19:04,220 --> 00:19:05,990
we're going to deliver what are these

488
00:19:05,990 --> 00:19:08,150
things all these things the target is to

489
00:19:08,150 --> 00:19:10,730
really allow the code to flow between

490
00:19:10,730 --> 00:19:12,500
all these players and eventually to

491
00:19:12,500 --> 00:19:14,600
really enable that if I have a laptop

492
00:19:14,600 --> 00:19:16,280
and phone I want the code to just

493
00:19:16,280 --> 00:19:17,810
basically ship between them and find out

494
00:19:17,810 --> 00:19:19,880
where do I have the best battery where

495
00:19:19,880 --> 00:19:21,710
do I have best cpu where do I have the

496
00:19:21,710 --> 00:19:26,090
business work so the charisma github I

497
00:19:26,090 --> 00:19:28,160
encourage you to you know go and check

498
00:19:28,160 --> 00:19:31,100
it out lonette fork it to whatever you

499
00:19:31,100 --> 00:19:33,380
want with it hopefully you'll find it

500
00:19:33,380 --> 00:19:35,810
interesting there's extensive

501
00:19:35,810 --> 00:19:38,240
documentation you need to know a little

502
00:19:38,240 --> 00:19:40,100
bit about why you I but not a lot about

503
00:19:40,100 --> 00:19:43,130
Yui so hopefully you'll find it

504
00:19:43,130 --> 00:19:46,370
interesting and to give you more context

505
00:19:46,370 --> 00:19:48,860
and two very encouraged you should have

506
00:19:48,860 --> 00:19:52,610
a little car that had a mojito beach and

507
00:19:52,610 --> 00:19:54,590
a palm tree we're giving out t-shirts

508
00:19:54,590 --> 00:19:56,920
there if you just go with your cart

509
00:19:56,920 --> 00:19:59,480
there are free drinks between now and

510
00:19:59,480 --> 00:20:01,490
five o'clock as many as you like no just

511
00:20:01,490 --> 00:20:04,040
wander mojitos the bar is going to be

512
00:20:04,040 --> 00:20:06,800
open tomorrow too we have some Yahoo

513
00:20:06,800 --> 00:20:08,990
developers that are going to be there to

514
00:20:08,990 --> 00:20:10,430
answer your questions and you know if

515
00:20:10,430 --> 00:20:14,000
you're interested in playing we have two

516
00:20:14,000 --> 00:20:15,530
bundles cocktails that I have in this

517
00:20:15,530 --> 00:20:17,420
graph here better basically is our

518
00:20:17,420 --> 00:20:19,080
hosting platform for motive

519
00:20:19,080 --> 00:20:21,690
so if you run mojito applications you

520
00:20:21,690 --> 00:20:23,820
want to run on the app infrastructure we

521
00:20:23,820 --> 00:20:25,380
make it available for you during the

522
00:20:25,380 --> 00:20:27,600
conference so you can basically play

523
00:20:27,600 --> 00:20:29,100
with it you should have gotten a little

524
00:20:29,100 --> 00:20:31,980
app ID on your carts and your new bags

525
00:20:31,980 --> 00:20:34,830
on tomorrow that's another talk by

526
00:20:34,830 --> 00:20:36,870
Julien Lecomte who is going to be

527
00:20:36,870 --> 00:20:38,490
talking about shaker which is one of the

528
00:20:38,490 --> 00:20:40,590
plugins that extends mojito and there

529
00:20:40,590 --> 00:20:41,850
are many of those plugins that are going

