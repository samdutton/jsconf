1
00:00:09,010 --> 00:00:12,940

College a scarf Argentina

2
00:00:12,950 --> 00:00:15,769
so i'm here to talk today about web

3
00:00:15,769 --> 00:00:18,260
modules and you're kind of like wow what

4
00:00:18,260 --> 00:00:19,279
does that mean right kind of a vague

5
00:00:19,279 --> 00:00:21,939
term and you're you wouldn't be totally

6
00:00:21,939 --> 00:00:24,500
incorrect if you check on Google it's a

7
00:00:24,500 --> 00:00:27,680
not a totally unclaimed name so what web

8
00:00:27,680 --> 00:00:30,369
module is am I here to talk about today

9
00:00:30,369 --> 00:00:34,640
not not this one not the python library

10
00:00:34,640 --> 00:00:37,640
either and I mean Java has a special

11
00:00:37,640 --> 00:00:39,350
place in all of our hearts but i'm not

12
00:00:39,350 --> 00:00:42,649
talking about java Taylor this is jae's

13
00:00:42,649 --> 00:00:45,530
conf up after all so I'm talking about

14
00:00:45,530 --> 00:00:49,750
web modules and specifically mpm modules

15
00:00:49,750 --> 00:00:55,160
designed for web browser usage so

16
00:00:55,160 --> 00:00:57,890
automatically created this github

17
00:00:57,890 --> 00:01:00,079
organization web modules and it's

18
00:01:00,079 --> 00:01:03,050
basically just a collection of common

19
00:01:03,050 --> 00:01:05,600
j/s JavaScript modules that are intended

20
00:01:05,600 --> 00:01:08,149
for use in the browser so if it's

21
00:01:08,149 --> 00:01:09,649
something generic that can also run in

22
00:01:09,649 --> 00:01:13,729
ojs it probably doesn't belong there but

23
00:01:13,729 --> 00:01:16,520
we're also trying to maintain a certain

24
00:01:16,520 --> 00:01:18,049
level of coding standards and sort of

25
00:01:18,049 --> 00:01:22,700
like a development philosophy of us at

26
00:01:22,700 --> 00:01:23,420
this point they're kind of more

27
00:01:23,420 --> 00:01:25,130
guidelines because we're still working

28
00:01:25,130 --> 00:01:27,710
on complying 100% with these guidelines

29
00:01:27,710 --> 00:01:31,009
yeah these standards but hopefully with

30
00:01:31,009 --> 00:01:31,999
some more time we'll be able get all

31
00:01:31,999 --> 00:01:35,509
that in so basically every module should

32
00:01:35,509 --> 00:01:38,090
be very small very focused on one single

33
00:01:38,090 --> 00:01:44,990
task using browserify for bundling so

34
00:01:44,990 --> 00:01:50,270
you hopefully off mode with that on the

35
00:01:50,270 --> 00:01:52,549
github repository name should match the

36
00:01:52,549 --> 00:01:59,599
NPM module name and I'm read me a

37
00:01:59,599 --> 00:02:02,319
markdown file is preferable of course

38
00:02:02,319 --> 00:02:06,439
and then unit tests which might be a

39
00:02:06,439 --> 00:02:08,869
little bit more out of the norm for for

40
00:02:08,869 --> 00:02:12,230
client-side kid and then with a cloud

41
00:02:12,230 --> 00:02:14,840
testing enabled via sauce labs and we'll

42
00:02:14,840 --> 00:02:17,660
talk about that a little bit so small

43
00:02:17,660 --> 00:02:20,840
and focus right in a perfect world you'd

44
00:02:20,840 --> 00:02:22,670
only export a single function which we

45
00:02:22,670 --> 00:02:24,349
do by setting module exports to function

46
00:02:24,349 --> 00:02:25,290
reference

47
00:02:25,290 --> 00:02:27,329
and this helps enforce the small and

48
00:02:27,329 --> 00:02:31,079
focused design philosophy and so one

49
00:02:31,079 --> 00:02:33,090
good example of that would be the node

50
00:02:33,090 --> 00:02:37,769
contains web module and that's it in its

51
00:02:37,769 --> 00:02:39,530
entirety right there so small

52
00:02:39,530 --> 00:02:42,599
self-contained focused but this is

53
00:02:42,599 --> 00:02:44,939
basically actually a polyfill for the

54
00:02:44,939 --> 00:02:49,859
node contains WWDC method with you know

55
00:02:49,859 --> 00:02:55,590
compatibility for internet explorer but

56
00:02:55,590 --> 00:02:57,299
polyfills are also a great piece case

57
00:02:57,299 --> 00:03:01,439
but like i just said actually but always

58
00:03:01,439 --> 00:03:03,590
try to just probably fill the smallest

59
00:03:03,590 --> 00:03:05,790
you know piece of the puzzle that you

60
00:03:05,790 --> 00:03:09,840
need to and so another good example

61
00:03:09,840 --> 00:03:13,609
would be the progress event module which

62
00:03:13,609 --> 00:03:15,900
which which implements the progress

63
00:03:15,900 --> 00:03:19,019
event constructor to return a progress

64
00:03:19,019 --> 00:03:20,669
object like you'd use with xml

65
00:03:20,669 --> 00:03:23,970
httprequest or things like that but then

66
00:03:23,970 --> 00:03:26,010
of course support for things like

67
00:03:26,010 --> 00:03:28,769
Internet Explorer which the unit test

68
00:03:28,769 --> 00:03:35,159
can verify so if a module has an inverse

69
00:03:35,159 --> 00:03:37,979
of whatever it's doing you should not

70
00:03:37,979 --> 00:03:39,629
implement that in the same repository do

71
00:03:39,629 --> 00:03:41,699
that in a new repository you know keep

72
00:03:41,699 --> 00:03:43,229
things isolated if you think separated

73
00:03:43,229 --> 00:03:51,090
keeps tests focused that way too and so

74
00:03:51,090 --> 00:03:53,609
a good example of that is wrap range and

75
00:03:53,609 --> 00:03:55,229
unwrap range so they're two different

76
00:03:55,229 --> 00:03:57,239
modules but they do the inverse of each

77
00:03:57,239 --> 00:04:00,989
other basically so wrap range I'm not

78
00:04:00,989 --> 00:04:02,280
showing it here but you pass in a range

79
00:04:02,280 --> 00:04:06,810
and a dom dom element name and so then

80
00:04:06,810 --> 00:04:08,729
it would wrap the selection with abby

81
00:04:08,729 --> 00:04:11,189
node set pretty simple and then the

82
00:04:11,189 --> 00:04:19,109
inverse unwrap hola guys come and so you

83
00:04:19,109 --> 00:04:20,159
could see how you could use these

84
00:04:20,159 --> 00:04:21,989
together to implement something like a

85
00:04:21,989 --> 00:04:25,740
bold command in an editor and text

86
00:04:25,740 --> 00:04:29,039
editor and so I mentioned we're using

87
00:04:29,039 --> 00:04:31,409
browser ified hopefully you're familiar

88
00:04:31,409 --> 00:04:32,759
with that and that allows us to use the

89
00:04:32,759 --> 00:04:35,810
common j/s code and it also has

90
00:04:35,810 --> 00:04:37,590
transforms and things like that which

91
00:04:37,590 --> 00:04:39,090
I'm not a huge fan of

92
00:04:39,090 --> 00:04:41,760
like to i do like compiled two languages

93
00:04:41,760 --> 00:04:44,190
and using them with browserify i just

94
00:04:44,190 --> 00:04:49,740
like to compile ahead of time sauce so

95
00:04:49,740 --> 00:04:52,320
soon browserify other bundlers night

96
00:04:52,320 --> 00:04:54,180
work you know component or required yes

97
00:04:54,180 --> 00:04:56,940
things like that but not really put you

98
00:04:56,940 --> 00:05:00,189
know our biggest priority at the moment

99
00:05:00,199 --> 00:05:07,650
and there's a wizard so as our

100
00:05:07,650 --> 00:05:10,410
convention you know we try to pick a

101
00:05:10,410 --> 00:05:13,080
name that is available on NPM so that's

102
00:05:13,080 --> 00:05:15,450
one of the first steps is picking out

103
00:05:15,450 --> 00:05:18,479
the name so this helps users find the

104
00:05:18,479 --> 00:05:21,120
repository which happens quite a lot it

105
00:05:21,120 --> 00:05:24,500
seems npm I wish would enforce the

106
00:05:24,500 --> 00:05:27,180
repository field more than it currently

107
00:05:27,180 --> 00:05:29,880
does but so as a result you end up

108
00:05:29,880 --> 00:05:32,100
wondering where the hell the repository

109
00:05:32,100 --> 00:05:37,740
is and so at this point in the NPM

110
00:05:37,740 --> 00:05:39,270
registry I mean there's a lot of modules

111
00:05:39,270 --> 00:05:41,940
on there now i mean i i'm not i couldnt

112
00:05:41,940 --> 00:05:43,050
even give an accurate number but in the

113
00:05:43,050 --> 00:05:46,620
tens of thousands i'm pretty sure and a

114
00:05:46,620 --> 00:05:49,200
lot of the good names are taken or a lot

115
00:05:49,200 --> 00:05:50,880
of the single word names are taken out

116
00:05:50,880 --> 00:05:53,370
which i should say and so as a result

117
00:05:53,370 --> 00:05:56,160
almost all of our web modules i think

118
00:05:56,160 --> 00:05:59,520
with the exception of one is hyphenated

119
00:05:59,520 --> 00:06:01,440
you know we had to be good to figure out

120
00:06:01,440 --> 00:06:04,410
a name that uses two words basically but

121
00:06:04,410 --> 00:06:05,520
this ends up working out decently

122
00:06:05,520 --> 00:06:09,750
because we get a nice noun piping verb

123
00:06:09,750 --> 00:06:12,630
convention and so there's a little bit

124
00:06:12,630 --> 00:06:17,610
consistency consistency there so github

125
00:06:17,610 --> 00:06:21,349
wrap range and then NPM same name

126
00:06:21,349 --> 00:06:27,690
everybody's happy so hopefully this goes

127
00:06:27,690 --> 00:06:29,099
without saying but I'm gonna say it

128
00:06:29,099 --> 00:06:32,940
anyway always add the readme file if

129
00:06:32,940 --> 00:06:35,160
you're looking through the modules and

130
00:06:35,160 --> 00:06:36,270
the organization are now you might be

131
00:06:36,270 --> 00:06:37,410
like a but this one doesn't have a

132
00:06:37,410 --> 00:06:39,720
readme and so yes yes that's one of the

133
00:06:39,720 --> 00:06:41,340
that's one of the guidelines we're still

134
00:06:41,340 --> 00:06:47,760
trying to get fully compliant with it'd

135
00:06:47,760 --> 00:06:49,890
be good to have the NPM installation

136
00:06:49,890 --> 00:06:52,229
instructions which I mean if you're

137
00:06:52,229 --> 00:06:53,640
following the convention it should just

138
00:06:53,640 --> 00:06:55,950
be the same as the repository name but

139
00:06:55,950 --> 00:06:57,659
sorry is good to have it in the readme

140
00:06:57,659 --> 00:07:01,409
as well a usage example is always good

141
00:07:01,409 --> 00:07:05,070
to just like a little quick showing of

142
00:07:05,070 --> 00:07:07,620
how how how the API works and I mean

143
00:07:07,620 --> 00:07:09,599
honestly if if the module is as simple

144
00:07:09,599 --> 00:07:11,190
and focus as it should be it's a quick

145
00:07:11,190 --> 00:07:12,180
example should be all that's really

146
00:07:12,180 --> 00:07:16,320
needed right but nonetheless sometimes

147
00:07:16,320 --> 00:07:18,289
you might also want to generate api docs

148
00:07:18,289 --> 00:07:21,000
using you know Jo stock comments in line

149
00:07:21,000 --> 00:07:23,190
or something like that we find that the

150
00:07:23,190 --> 00:07:27,090
docs do X command line tool it's um it's

151
00:07:27,090 --> 00:07:30,599
an MPN also from TJ Holloway check does

152
00:07:30,599 --> 00:07:36,570
a pretty decent job of that but more

153
00:07:36,570 --> 00:07:38,520
importantly we like to have the readme

154
00:07:38,520 --> 00:07:44,400
because we add the we can add the Travis

155
00:07:44,400 --> 00:07:46,800
CI and sauce labs build badges and we

156
00:07:46,800 --> 00:07:49,440
can see a granular output of which

157
00:07:49,440 --> 00:07:53,130
browsers are failing if any and all so

158
00:07:53,130 --> 00:07:55,200
Travis just gives a basic overall

159
00:07:55,200 --> 00:07:57,300
everyone pass Trevor and failed but it's

160
00:07:57,300 --> 00:08:03,150
good to have that in there too so it

161
00:08:03,150 --> 00:08:07,469
brings us on to the clab testing we use

162
00:08:07,469 --> 00:08:11,580
a command line tool called zool which

163
00:08:11,580 --> 00:08:15,990
combines browserify mocha travis CI the

164
00:08:15,990 --> 00:08:18,810
service and sauce labs so it's kind of a

165
00:08:18,810 --> 00:08:21,539
hodgepodge but in the end you get to

166
00:08:21,539 --> 00:08:24,030
execute your browser tests using a

167
00:08:24,030 --> 00:08:27,740
browser Phi in the cloud you know using

168
00:08:27,740 --> 00:08:32,730
arbitrary web browsers

169
00:08:32,740 --> 00:08:37,279
and in the package.json file the npm

170
00:08:37,279 --> 00:08:39,680
test command will be set up to run to

171
00:08:39,680 --> 00:08:44,750
execute zool and there's the repository

172
00:08:44,750 --> 00:08:49,040
for it if you want to check that up if

173
00:08:49,040 --> 00:08:52,130
you don't get the reference there is no

174
00:08:52,130 --> 00:09:01,010
Dana only Zuul ghostbusters so Travis CI

175
00:09:01,010 --> 00:09:04,550
is a part of the equation here Travis CI

176
00:09:04,550 --> 00:09:07,610
ends up invoking sauce labs when when

177
00:09:07,610 --> 00:09:08,870
you set up your commit hooks like that

178
00:09:08,870 --> 00:09:14,930
and so you need to enable that from

179
00:09:14,930 --> 00:09:17,839
github for each repository a little bit

180
00:09:17,839 --> 00:09:19,250
of a pain but you know there could be

181
00:09:19,250 --> 00:09:23,630
could be more annoyances the zoo leaky

182
00:09:23,630 --> 00:09:25,910
has a good page on explaining how to set

183
00:09:25,910 --> 00:09:30,160
up Travis CI but it basically involves

184
00:09:30,160 --> 00:09:35,300
creating a sauce labs account and like

185
00:09:35,300 --> 00:09:36,949
encrypt you know travis has a way of

186
00:09:36,949 --> 00:09:38,690
encrypting environment variables so you

187
00:09:38,690 --> 00:09:40,430
can encrypt your username and your in

188
00:09:40,430 --> 00:09:44,209
your authentication key and then it

189
00:09:44,209 --> 00:09:48,399
knows which repository you're accessing

190
00:09:48,399 --> 00:09:50,839
so there's an example of what Travis

191
00:09:50,839 --> 00:09:52,970
TI's matrix will look like it's a little

192
00:09:52,970 --> 00:09:55,490
blurry but you were specifying the

193
00:09:55,490 --> 00:09:58,190
browser name browser version and in a

194
00:09:58,190 --> 00:09:59,990
matrix style and a couple tests or

195
00:09:59,990 --> 00:10:02,089
failing there so we'd want to go in

196
00:10:02,089 --> 00:10:10,260
there and clean that up right

197
00:10:10,270 --> 00:10:12,280
so you'll need to create a sauce labs

198
00:10:12,280 --> 00:10:15,970
account there's free ones they're called

199
00:10:15,970 --> 00:10:22,240
open sauce and you you uh you can you

200
00:10:22,240 --> 00:10:23,380
can basically create as many of those as

201
00:10:23,380 --> 00:10:27,310
you want so zool integrates the sauce

202
00:10:27,310 --> 00:10:28,930
labs like i said by checking the

203
00:10:28,930 --> 00:10:32,290
environment variable and so somewhat

204
00:10:32,290 --> 00:10:35,530
annoying but you have to create a new

205
00:10:35,530 --> 00:10:37,840
sauce labs account for every module

206
00:10:37,840 --> 00:10:40,810
created I'm gonna have to like finger

207
00:10:40,810 --> 00:10:42,460
support on that pretty soon or something

208
00:10:42,460 --> 00:10:44,980
but it's a little a little annoying my

209
00:10:44,980 --> 00:10:48,190
one password looks like this by now so

210
00:10:48,190 --> 00:10:50,400
it's kind of it's kind of a ridiculous

211
00:10:50,400 --> 00:10:51,880
hopefully they'll make that process

212
00:10:51,880 --> 00:11:00,250
easier soon so then I course hopefully

213
00:11:00,250 --> 00:11:04,230
in the end you get nice all greens and

214
00:11:04,230 --> 00:11:06,610
then you're like okay my module is

215
00:11:06,610 --> 00:11:08,500
stable and I can use it in the

216
00:11:08,500 --> 00:11:11,410
application now if not then you know

217
00:11:11,410 --> 00:11:14,680
you'd be able to go to Travis CI and see

218
00:11:14,680 --> 00:11:16,420
the output see exactly what errors were

219
00:11:16,420 --> 00:11:18,670
thrown and then hopefully can figure it

220
00:11:18,670 --> 00:11:20,200
out from there Internet Explorer it was

221
00:11:20,200 --> 00:11:22,390
really terrible eras so usually it

222
00:11:22,390 --> 00:11:25,390
requires a little more digging but then

223
00:11:25,390 --> 00:11:27,730
you commit something else try to fix it

224
00:11:27,730 --> 00:11:34,930
and hope for greens again right so

225
00:11:34,930 --> 00:11:36,460
please check out the organization check

226
00:11:36,460 --> 00:11:38,920
the codes and patches and hopefully some

227
00:11:38,920 --> 00:11:41,950
of these these ideals rub off on you and

