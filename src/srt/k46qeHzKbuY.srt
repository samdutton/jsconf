1
00:00:00,700 --> 00:00:06,160

[Applause]

2
00:00:06,170 --> 00:00:08,790
so last year my colleagues and I did

3
00:00:08,790 --> 00:00:11,130
something pretty exciting using only the

4
00:00:11,130 --> 00:00:12,809
browser a little bit of JavaScript and

5
00:00:12,809 --> 00:00:15,690
something called the Web Audio API we

6
00:00:15,690 --> 00:00:18,270
were able to decipher brain waves now

7
00:00:18,270 --> 00:00:19,710
that sounds a little pretty a little bit

8
00:00:19,710 --> 00:00:22,260
sensational but it's mostly true so

9
00:00:22,260 --> 00:00:23,609
today I'd like to tell you the story of

10
00:00:23,609 --> 00:00:25,140
our journey through the lows and highs

11
00:00:25,140 --> 00:00:27,119
of web audio on a quest to decipher

12
00:00:27,119 --> 00:00:30,090
brain waves in the browser so this is

13
00:00:30,090 --> 00:00:32,160
story of discovery it's about finding

14
00:00:32,160 --> 00:00:34,110
out what the web can offer it's a story

15
00:00:34,110 --> 00:00:36,059
of exploration about pushing the

16
00:00:36,059 --> 00:00:38,670
boundaries of web technologies to differ

17
00:00:38,670 --> 00:00:41,700
to make a difference and last it's well

18
00:00:41,700 --> 00:00:43,260
it's a story that has a really cool demo

19
00:00:43,260 --> 00:00:46,770
at the end so stay tuned but before I

20
00:00:46,770 --> 00:00:48,719
can tell you that story have to tell you

21
00:00:48,719 --> 00:00:51,239
this one so my name is Braden Moore I'm

22
00:00:51,239 --> 00:00:52,800
a full-stack developer at an Australian

23
00:00:52,800 --> 00:00:55,590
medical technology startup called C R so

24
00:00:55,590 --> 00:00:57,600
C R provides Australia's largest

25
00:00:57,600 --> 00:00:59,760
epilepsy management and diagnostic

26
00:00:59,760 --> 00:01:01,410
service in fact the tagline of our

27
00:01:01,410 --> 00:01:03,899
corporate website is epileptic diagnosis

28
00:01:03,899 --> 00:01:06,000
made easy now I didn't know anything

29
00:01:06,000 --> 00:01:07,380
about epilepsy before I started working

30
00:01:07,380 --> 00:01:10,049
at C R and I guess that's kind of true

31
00:01:10,049 --> 00:01:11,880
for a lot of people so let me give you

32
00:01:11,880 --> 00:01:14,100
some of the facts so epilepsy is a

33
00:01:14,100 --> 00:01:15,689
chronic condition that affects over 6

34
00:01:15,689 --> 00:01:18,060
million people worldwide now the

35
00:01:18,060 --> 00:01:19,860
symptoms of EPs can vary from person to

36
00:01:19,860 --> 00:01:21,869
person but could range from loss of

37
00:01:21,869 --> 00:01:23,460
awareness loss of bodily control to

38
00:01:23,460 --> 00:01:26,280
full-body seizures now these events can

39
00:01:26,280 --> 00:01:28,409
vary in frequency summer times happening

40
00:01:28,409 --> 00:01:30,270
multiple times a day up to once a month

41
00:01:30,270 --> 00:01:32,280
or even just as rare as once a year but

42
00:01:32,280 --> 00:01:33,810
the results can be devastating

43
00:01:33,810 --> 00:01:36,659
regardless and there's no known cure for

44
00:01:36,659 --> 00:01:38,939
all types of epilepsy but with their

45
00:01:38,939 --> 00:01:40,500
diagnosis some of the symptoms can be

46
00:01:40,500 --> 00:01:44,009
treated so the way that epilepsy

47
00:01:44,009 --> 00:01:46,079
diagnose is by reviewing a patient's

48
00:01:46,079 --> 00:01:48,180
brain waves in what's called an EEG or

49
00:01:48,180 --> 00:01:50,610
electroencephalogram so each of these

50
00:01:50,610 --> 00:01:52,979
traces they represent the electoral

51
00:01:52,979 --> 00:01:55,049
signals from certain parts of a

52
00:01:55,049 --> 00:01:56,219
patient's brain captured using

53
00:01:56,219 --> 00:01:58,649
electrodes on the head so a clinical

54
00:01:58,649 --> 00:02:00,689
team uses EEG just like these to help

55
00:02:00,689 --> 00:02:03,240
provide a diagnosis now the service that

56
00:02:03,240 --> 00:02:04,320
we offer to see it looks like this

57
00:02:04,320 --> 00:02:06,299
patient comes to our clinics where they

58
00:02:06,299 --> 00:02:07,590
get connected with his electrodes to

59
00:02:07,590 --> 00:02:09,539
monitor their brainwaves over the next

60
00:02:09,539 --> 00:02:11,340
seven days we send them home they can

61
00:02:11,340 --> 00:02:12,510
live their life in a comfort of their

62
00:02:12,510 --> 00:02:13,890
own home while being monitored

63
00:02:13,890 --> 00:02:15,569
then after that time they come back to

64
00:02:15,569 --> 00:02:17,850
our clinic they get disconnected and

65
00:02:17,850 --> 00:02:20,610
then we spent a few weeks looking

66
00:02:20,610 --> 00:02:22,140
through our data and looking for

67
00:02:22,140 --> 00:02:23,900
something that might give us a diagnosis

68
00:02:23,900 --> 00:02:26,280
so we've got seven days with the data

69
00:02:26,280 --> 00:02:27,630
what is it that the scientists are

70
00:02:27,630 --> 00:02:29,400
looking for well look sometimes they're

71
00:02:29,400 --> 00:02:30,540
looking for the obvious they're looking

72
00:02:30,540 --> 00:02:31,680
for something like these minute long

73
00:02:31,680 --> 00:02:33,030
seizures that are pretty easy to capture

74
00:02:33,030 --> 00:02:35,190
on tape but if these are very rare

75
00:02:35,190 --> 00:02:36,690
events happening once a month or even

76
00:02:36,690 --> 00:02:37,800
once a year it's not guaranteed that

77
00:02:37,800 --> 00:02:39,660
will capture that during the seven days

78
00:02:39,660 --> 00:02:41,459
of getting wanted so more often they're

79
00:02:41,459 --> 00:02:42,510
looking for something a bit smaller

80
00:02:42,510 --> 00:02:43,890
they're looking for something like a

81
00:02:43,890 --> 00:02:46,470
needle in a haystack well in epilepsy

82
00:02:46,470 --> 00:02:47,670
there's something called the

83
00:02:47,670 --> 00:02:49,800
characteristic signal of epilepsy which

84
00:02:49,800 --> 00:02:51,630
is called a spike wave so it's these

85
00:02:51,630 --> 00:02:54,630
little spikes and little waves that

86
00:02:54,630 --> 00:02:56,760
around half a second long each and so

87
00:02:56,760 --> 00:02:57,690
while a patient might only have a

88
00:02:57,690 --> 00:02:59,640
seizure once a month they might have

89
00:02:59,640 --> 00:03:02,340
dozens of these little spike waves every

90
00:03:02,340 --> 00:03:04,260
day and so it's these needle and

91
00:03:04,260 --> 00:03:05,459
haystack so they're scientists are

92
00:03:05,459 --> 00:03:07,050
looking for in fact you're looking at a

93
00:03:07,050 --> 00:03:09,150
whole kind of run of little spike waves

94
00:03:09,150 --> 00:03:12,239
right there okay that's great but what

95
00:03:12,239 --> 00:03:13,769
does a web developer have to do with it

96
00:03:13,769 --> 00:03:15,720
I mentioned before that our clinical

97
00:03:15,720 --> 00:03:17,580
team gets this data and then they start

98
00:03:17,580 --> 00:03:18,690
reviewing it but that's not the full

99
00:03:18,690 --> 00:03:21,750
story like every second Plattner company

100
00:03:21,750 --> 00:03:22,920
these days we have our own cloud

101
00:03:22,920 --> 00:03:26,430
platform and it's a platform for secure

102
00:03:26,430 --> 00:03:28,110
management of storage and review of

103
00:03:28,110 --> 00:03:30,660
medical data so and one of the powerful

104
00:03:30,660 --> 00:03:32,459
things about this platform is it allows

105
00:03:32,459 --> 00:03:35,220
a clinical team to upload this EEG brain

106
00:03:35,220 --> 00:03:37,739
wave data and then review it anywhere at

107
00:03:37,739 --> 00:03:40,530
anytime or through a browser one of the

108
00:03:40,530 --> 00:03:42,200
major technical challenges of this

109
00:03:42,200 --> 00:03:44,250
building this platform is the ability to

110
00:03:44,250 --> 00:03:46,440
view or they start on the platform so to

111
00:03:46,440 --> 00:03:47,910
tackle this problem we've built

112
00:03:47,910 --> 00:03:49,500
something that's very creatively called

113
00:03:49,500 --> 00:03:52,590
our viewer to view the data an Emmy

114
00:03:52,590 --> 00:03:54,360
because it's hard and it looks something

115
00:03:54,360 --> 00:03:57,060
like this in fact it looks exactly like

116
00:03:57,060 --> 00:03:58,320
this this is a screen shot I just took

117
00:03:58,320 --> 00:04:00,660
you know a few minutes ago and so it's

118
00:04:00,660 --> 00:04:02,880
this data viewer that our clinical team

119
00:04:02,880 --> 00:04:05,130
uses to review these seven days worth of

120
00:04:05,130 --> 00:04:05,549
data

121
00:04:05,549 --> 00:04:08,250
and to label events and to eventually

122
00:04:08,250 --> 00:04:11,220
deliver a diagnosis one of the big

123
00:04:11,220 --> 00:04:13,500
challenges in getting us scientists to

124
00:04:13,500 --> 00:04:16,320
move from traditional so one of the big

125
00:04:16,320 --> 00:04:17,459
challenges sorry that we face in splat

126
00:04:17,459 --> 00:04:19,109
form is getting neurophysiologists as

127
00:04:19,109 --> 00:04:20,880
they called to move from traditional

128
00:04:20,880 --> 00:04:23,370
desktop based software's into a cloud

129
00:04:23,370 --> 00:04:25,960
platform now

130
00:04:25,960 --> 00:04:28,810
they often neurophysiologist often flick

131
00:04:28,810 --> 00:04:30,220
through EEG data very quickly they're

132
00:04:30,220 --> 00:04:32,620
going for pages a second so flick flick

133
00:04:32,620 --> 00:04:33,819
flick that is looking very quickly

134
00:04:33,819 --> 00:04:35,289
through this because if you want to get

135
00:04:35,289 --> 00:04:36,610
through lots of data you don't wanna be

136
00:04:36,610 --> 00:04:39,759
spending a lot of time on each page the

137
00:04:39,759 --> 00:04:41,080
way they are able to accomplish that is

138
00:04:41,080 --> 00:04:42,310
because they're trained to look at for

139
00:04:42,310 --> 00:04:43,630
patterns they're looking for certain

140
00:04:43,630 --> 00:04:44,830
things like these spike in waves

141
00:04:44,830 --> 00:04:47,229
remember that's a half second thing in a

142
00:04:47,229 --> 00:04:48,580
10 second page that you're looking at

143
00:04:48,580 --> 00:04:50,530
for these pages per second so you're

144
00:04:50,530 --> 00:04:52,180
looking for a needle in a haystack but

145
00:04:52,180 --> 00:04:53,710
what happens when a needle doesn't look

146
00:04:53,710 --> 00:04:56,319
like a needle what happens when the EEG

147
00:04:56,319 --> 00:04:57,520
data that you're trained to look for

148
00:04:57,520 --> 00:04:59,860
doesn't look quite right well in cases

149
00:04:59,860 --> 00:05:01,449
like those those could lead to

150
00:05:01,449 --> 00:05:04,199
misdiagnosis and awful patient outcomes

151
00:05:04,199 --> 00:05:08,110
so this is our problem how can we take a

152
00:05:08,110 --> 00:05:11,400
ETA review from desktop to the browser

153
00:05:11,400 --> 00:05:14,020
so there's one particular aspect of

154
00:05:14,020 --> 00:05:16,270
displaying this EEG that's very

155
00:05:16,270 --> 00:05:17,919
important but also a little bit tricky

156
00:05:17,919 --> 00:05:20,169
and that's called signal filtering so if

157
00:05:20,169 --> 00:05:21,669
this problem of signal filtering that

158
00:05:21,669 --> 00:05:24,490
we're going to explore today so let's

159
00:05:24,490 --> 00:05:26,560
illustrate the problem on the Left

160
00:05:26,560 --> 00:05:28,810
here's some EEG data that has signal

161
00:05:28,810 --> 00:05:30,909
filters applied that's great on the

162
00:05:30,909 --> 00:05:33,400
right is that same data with filters

163
00:05:33,400 --> 00:05:35,440
turned off so clearly there's a very big

164
00:05:35,440 --> 00:05:37,570
difference between these two so why is

165
00:05:37,570 --> 00:05:39,039
this you know where we store it's still

166
00:05:39,039 --> 00:05:40,960
you know recording the brain here well

167
00:05:40,960 --> 00:05:42,849
like most electrical signals when you're

168
00:05:42,849 --> 00:05:44,460
recording something you're not just

169
00:05:44,460 --> 00:05:46,300
recording that brain activity you're

170
00:05:46,300 --> 00:05:48,190
also recording a bunch of extra noise

171
00:05:48,190 --> 00:05:50,229
and artifact so some of this noise can

172
00:05:50,229 --> 00:05:51,580
come from let's say hi if we're gonna

173
00:05:51,580 --> 00:05:53,580
see muscle contractions could come from

174
00:05:53,580 --> 00:05:57,159
like a DC drift or it can come from like

175
00:05:57,159 --> 00:05:59,050
the mains electricity noise so all of

176
00:05:59,050 --> 00:06:01,060
these things aren't brain waves but they

177
00:06:01,060 --> 00:06:04,599
still show up in this EEG so what does

178
00:06:04,599 --> 00:06:06,940
it filter after all well no it's not

179
00:06:06,940 --> 00:06:09,759
that one let me explain what a filter is

180
00:06:09,759 --> 00:06:12,009
by talking a bit about music we all like

181
00:06:12,009 --> 00:06:14,409
music so this is an audio spectrograph

182
00:06:14,409 --> 00:06:16,870
it's a visual representation of all the

183
00:06:16,870 --> 00:06:18,940
frequencies of a piece of audio like

184
00:06:18,940 --> 00:06:20,469
your favorite song at a given point in

185
00:06:20,469 --> 00:06:22,659
time so it has like low frequency is

186
00:06:22,659 --> 00:06:24,460
like the Bass & Drums mid frequencies

187
00:06:24,460 --> 00:06:26,289
like another spoken voice and maybe

188
00:06:26,289 --> 00:06:28,930
higher frequencies like wind chimes or

189
00:06:28,930 --> 00:06:30,219
pan flutes or other you know super

190
00:06:30,219 --> 00:06:32,320
common instruments that you'd hear so

191
00:06:32,320 --> 00:06:34,810
just like audio your brain wave is also

192
00:06:34,810 --> 00:06:36,159
composed of a range of different

193
00:06:36,159 --> 00:06:37,690
frequencies all happening at the same

194
00:06:37,690 --> 00:06:38,669
time

195
00:06:38,669 --> 00:06:40,590
so think about music imagine you're

196
00:06:40,590 --> 00:06:42,270
producing a song but you've got this

197
00:06:42,270 --> 00:06:43,499
kind of bass noise you're not really

198
00:06:43,499 --> 00:06:44,580
wanting in the air or there's too much

199
00:06:44,580 --> 00:06:46,560
pan-flute well one way to get rid of

200
00:06:46,560 --> 00:06:48,599
that is by filtering out like the lower

201
00:06:48,599 --> 00:06:50,039
frequencies or filtering out the higher

202
00:06:50,039 --> 00:06:53,430
frequencies and so for eg there's kind

203
00:06:53,430 --> 00:06:55,289
of three main filters we'd like to apply

204
00:06:55,289 --> 00:06:57,599
you can have a high-pass filter which is

205
00:06:57,599 --> 00:06:59,699
like this it lets everything higher than

206
00:06:59,699 --> 00:07:00,900
the filter frequency pass through

207
00:07:00,900 --> 00:07:03,389
there's a notch filter which notches or

208
00:07:03,389 --> 00:07:06,479
cuts out the the frequent range of

209
00:07:06,479 --> 00:07:08,129
frequencies and the low pass which is

210
00:07:08,129 --> 00:07:09,629
the opposite of your high pass filter

211
00:07:09,629 --> 00:07:10,800
everything lower than the filter if we

212
00:07:10,800 --> 00:07:13,080
can see passes through you can also

213
00:07:13,080 --> 00:07:14,610
combine them you can have multiple of

214
00:07:14,610 --> 00:07:16,830
these filters running at once and that's

215
00:07:16,830 --> 00:07:20,159
exactly what we'd like to do so okay how

216
00:07:20,159 --> 00:07:22,259
can we go about implementing filters in

217
00:07:22,259 --> 00:07:23,930
javascript in the browser on the cloud

218
00:07:23,930 --> 00:07:26,490
well look first could we not have a

219
00:07:26,490 --> 00:07:27,810
filter at all you know the best code is

220
00:07:27,810 --> 00:07:30,539
the code you don't have to write but now

221
00:07:30,539 --> 00:07:32,580
remember a couple of slides back with

222
00:07:32,580 --> 00:07:34,500
filtering without filtering that's it's

223
00:07:34,500 --> 00:07:35,639
kind of night and day right there so

224
00:07:35,639 --> 00:07:38,129
that's a bit of a no-go I mean how would

225
00:07:38,129 --> 00:07:40,469
have been happy with it but so could we

226
00:07:40,469 --> 00:07:42,659
write our own filter implementation well

227
00:07:42,659 --> 00:07:45,659
it's kind of a maybe and because of

228
00:07:45,659 --> 00:07:48,779
stuff like this and and this and all

229
00:07:48,779 --> 00:07:50,250
this stuff so I trained as a particle

230
00:07:50,250 --> 00:07:51,839
physicist not an electrical engineer so

231
00:07:51,839 --> 00:07:53,610
don't know too much about filtering but

232
00:07:53,610 --> 00:07:54,810
I've been told that there's a bit of

233
00:07:54,810 --> 00:07:56,699
subtleties involved in implementing a

234
00:07:56,699 --> 00:07:59,490
filter and I'm sure you could agree that

235
00:07:59,490 --> 00:08:00,750
JavaScript probably isn't the best

236
00:08:00,750 --> 00:08:02,430
language to handle you know complex

237
00:08:02,430 --> 00:08:05,129
mathematical processes so put that on

238
00:08:05,129 --> 00:08:07,199
the back burner maybe could we use a

239
00:08:07,199 --> 00:08:08,550
package you know where JavaScript

240
00:08:08,550 --> 00:08:09,539
developers after all it's what we're

241
00:08:09,539 --> 00:08:12,240
trying to do so how about this one this

242
00:08:12,240 --> 00:08:12,779
is promising

243
00:08:12,779 --> 00:08:14,430
DSP kit it's a digital signal processing

244
00:08:14,430 --> 00:08:15,659
library it seems like Inc process

245
00:08:15,659 --> 00:08:18,409
signals it is not intended to be used

246
00:08:18,409 --> 00:08:21,539
it's good Fairplay to them how about

247
00:08:21,539 --> 00:08:21,960
this one

248
00:08:21,960 --> 00:08:23,969
DSP Jas now actually this one is I think

249
00:08:23,969 --> 00:08:26,490
it's the most starred signal processing

250
00:08:26,490 --> 00:08:27,990
library in JavaScript so you thought you

251
00:08:27,990 --> 00:08:29,909
think this is probably the way to go but

252
00:08:29,909 --> 00:08:31,919
it hasn't had a meaningful update in

253
00:08:31,919 --> 00:08:36,240
nine years I mean I wasn't even coding

254
00:08:36,240 --> 00:08:37,560
nine years ago so I think of this

255
00:08:37,560 --> 00:08:39,479
happened in the web since then so maybe

256
00:08:39,479 --> 00:08:40,680
maybe that's not the way either

257
00:08:40,680 --> 00:08:43,019
so those three options are exhausted now

258
00:08:43,019 --> 00:08:45,690
what are we left with well if you've

259
00:08:45,690 --> 00:08:47,069
read the title of this talk you probably

260
00:08:47,069 --> 00:08:49,050
know what's coming next I want I won't

261
00:08:49,050 --> 00:08:55,250
leave you in suspense so introducing

262
00:08:55,260 --> 00:08:57,520
there's very quiet drum rolls that you

263
00:08:57,520 --> 00:08:59,620
could've just heard them but the Web

264
00:08:59,620 --> 00:09:02,620
Audio API so this is a Web API that's

265
00:09:02,620 --> 00:09:04,779
designed for processing audio it's

266
00:09:04,779 --> 00:09:06,430
standardized while maintained as decent

267
00:09:06,430 --> 00:09:08,230
browser support and it's gonna active

268
00:09:08,230 --> 00:09:09,880
group of contributors and users so look

269
00:09:09,880 --> 00:09:10,690
you're looking for something that works

270
00:09:10,690 --> 00:09:12,600
now Web Audio is probably the way to go

271
00:09:12,600 --> 00:09:14,980
well when I was first starting to use

272
00:09:14,980 --> 00:09:16,300
Web Audio are the Mozilla developer

273
00:09:16,300 --> 00:09:18,490
Network or mdn Doc's were invaluable and

274
00:09:18,490 --> 00:09:19,899
actually just learned at this conference

275
00:09:19,899 --> 00:09:21,700
that many of these Doc's are written by

276
00:09:21,700 --> 00:09:23,890
live GS is very own routes so big shout

277
00:09:23,890 --> 00:09:26,310
out so Ruth for helping me learn this

278
00:09:26,310 --> 00:09:28,390
but let me take you through some of the

279
00:09:28,390 --> 00:09:30,730
basic concepts here so how do you use

280
00:09:30,730 --> 00:09:32,050
the Web Audio API how to actually use it

281
00:09:32,050 --> 00:09:33,010
to process this data

282
00:09:33,010 --> 00:09:34,779
well first you create an audio context

283
00:09:34,779 --> 00:09:35,950
this is kind of the canvas where

284
00:09:35,950 --> 00:09:37,839
everything happens inside this audio

285
00:09:37,839 --> 00:09:39,670
context you create a bunch of nodes one

286
00:09:39,670 --> 00:09:41,440
of which being your input node so this

287
00:09:41,440 --> 00:09:42,790
might be an oscilloscope or this might

288
00:09:42,790 --> 00:09:44,320
be like you're feeding microphone into

289
00:09:44,320 --> 00:09:46,360
there next you can make a bunch of a fix

290
00:09:46,360 --> 00:09:48,820
nodes so you could do things like reverb

291
00:09:48,820 --> 00:09:51,100
or compression panning and many more all

292
00:09:51,100 --> 00:09:52,360
the things that you know greatly with

293
00:09:52,360 --> 00:09:53,950
audio maybe you wanna put reverb on your

294
00:09:53,950 --> 00:09:57,370
IEG just just me you could also and then

295
00:09:57,370 --> 00:09:59,200
you've got to specify the destination so

296
00:09:59,200 --> 00:10:00,370
where is this all getting output to

297
00:10:00,370 --> 00:10:01,750
conventionally that's gonna be your

298
00:10:01,750 --> 00:10:04,779
speakers alright so after you do that

299
00:10:04,779 --> 00:10:06,220
you string all those things together you

300
00:10:06,220 --> 00:10:07,600
know one two one two one and then you

301
00:10:07,600 --> 00:10:08,709
process the entire thing and there you

302
00:10:08,709 --> 00:10:11,560
go stage your process audio okay that's

303
00:10:11,560 --> 00:10:13,180
good but I might have jumped the gun a

304
00:10:13,180 --> 00:10:17,410
little bit here what does an audio api

305
00:10:17,410 --> 00:10:20,800
have to do with processing eg data like

306
00:10:20,800 --> 00:10:22,570
why why did I jump from you know

307
00:10:22,570 --> 00:10:24,790
packages and JavaScript to this well it

308
00:10:24,790 --> 00:10:26,830
all comes down to one of the effects

309
00:10:26,830 --> 00:10:28,600
nodes so the effects nodes can do really

310
00:10:28,600 --> 00:10:30,630
cool things on your data such as reverb

311
00:10:30,630 --> 00:10:33,370
compression padding it can also do

312
00:10:33,370 --> 00:10:35,920
filtering so we had that audio

313
00:10:35,920 --> 00:10:37,209
spectrograph where those filters were

314
00:10:37,209 --> 00:10:39,250
applied you know turns out filtering is

315
00:10:39,250 --> 00:10:41,110
a thing that musicians and music

316
00:10:41,110 --> 00:10:43,180
engineers actually do so it makes sense

317
00:10:43,180 --> 00:10:44,680
that they'd have really well implemented

318
00:10:44,680 --> 00:10:47,380
filters in this API so if we could

319
00:10:47,380 --> 00:10:49,930
somehow leverage these filters and use

320
00:10:49,930 --> 00:10:52,060
them for our energy filtering then we'd

321
00:10:52,060 --> 00:10:56,640
be set okay so in particular we want one

322
00:10:56,640 --> 00:10:59,320
one method that's really useful for us

323
00:10:59,320 --> 00:11:01,660
called the create IR filter method now

324
00:11:01,660 --> 00:11:03,820
quick electro engineering lesson I R

325
00:11:03,820 --> 00:11:06,269
stands for infinite impulse response

326
00:11:06,269 --> 00:11:08,139
it's all you need to know you know

327
00:11:08,139 --> 00:11:10,329
anything about it else about that but

328
00:11:10,329 --> 00:11:11,829
it's the filter you can generate with

329
00:11:11,829 --> 00:11:13,269
this crate I feel to know it crates an

330
00:11:13,269 --> 00:11:15,939
IR filter and that's super configurable

331
00:11:15,939 --> 00:11:17,109
so you can make it high pass low pass

332
00:11:17,109 --> 00:11:19,269
notch whatever you want in there so

333
00:11:19,269 --> 00:11:22,689
here's the plan first we need to make

334
00:11:22,689 --> 00:11:24,699
some way of reading or getting the web

335
00:11:24,699 --> 00:11:27,339
audio to read out EEG data once it's

336
00:11:27,339 --> 00:11:29,350
there we can process this data we can

337
00:11:29,350 --> 00:11:31,419
apply the filters and finally we output

338
00:11:31,419 --> 00:11:32,769
this back under brainwaves displayed on

339
00:11:32,769 --> 00:11:35,230
the screen cool that's all well and good

340
00:11:35,230 --> 00:11:39,040
but how exactly do you read eg with an

341
00:11:39,040 --> 00:11:42,220
audio API I'm glad that you asked you

342
00:11:42,220 --> 00:11:44,319
you asked that question because we're

343
00:11:44,319 --> 00:11:46,209
about to find out so here are the six

344
00:11:46,209 --> 00:11:48,819
steps that you need to decipher your own

345
00:11:48,819 --> 00:11:50,679
brain waves in the browser with the Web

346
00:11:50,679 --> 00:11:54,429
Audio API let's go alright entering vs

347
00:11:54,429 --> 00:11:58,209
code mode now so first we need to set up

348
00:11:58,209 --> 00:12:00,309
an audio context remember this is the

349
00:12:00,309 --> 00:12:03,009
canvas where everything happens next you

350
00:12:03,009 --> 00:12:04,720
need to you know create an audio context

351
00:12:04,720 --> 00:12:06,069
that's as simple as you know calling a

352
00:12:06,069 --> 00:12:07,359
constructor you pass in the number of

353
00:12:07,359 --> 00:12:08,619
channels the number of samples for each

354
00:12:08,619 --> 00:12:10,179
channel and your sample rate on there

355
00:12:10,179 --> 00:12:12,629
now this is an offline audio context and

356
00:12:12,629 --> 00:12:15,100
kind of this - audio context you can use

357
00:12:15,100 --> 00:12:16,809
the offline audio context in the Web

358
00:12:16,809 --> 00:12:18,519
Audio API or something called the audio

359
00:12:18,519 --> 00:12:21,160
context makes sense so the thing about

360
00:12:21,160 --> 00:12:22,660
the audio context is this is the one

361
00:12:22,660 --> 00:12:23,889
you'd usually want to use if you're

362
00:12:23,889 --> 00:12:25,389
processing audio if you're making like a

363
00:12:25,389 --> 00:12:26,739
multitrack mixer or you want to apply

364
00:12:26,739 --> 00:12:29,769
some reverb in the web that's great the

365
00:12:29,769 --> 00:12:31,689
problem with it though is that it plays

366
00:12:31,689 --> 00:12:34,230
back the audio more or less in real time

367
00:12:34,230 --> 00:12:36,730
so it's good if you actually you know

368
00:12:36,730 --> 00:12:38,860
want to apply your effects in real time

369
00:12:38,860 --> 00:12:41,049
on music but if you've got 7 days with

370
00:12:41,049 --> 00:12:43,089
an EDD artist look through you really

371
00:12:43,089 --> 00:12:44,679
don't want to be waiting you know 7 days

372
00:12:44,679 --> 00:12:46,959
for that to process so that's maybe not

373
00:12:46,959 --> 00:12:48,789
the way to go there's another type of

374
00:12:48,789 --> 00:12:50,350
offer of audio context you could use

375
00:12:50,350 --> 00:12:52,660
called the offline audio context so it's

376
00:12:52,660 --> 00:12:54,160
quite similar to the regular audio

377
00:12:54,160 --> 00:12:56,619
context except just taken directly from

378
00:12:56,619 --> 00:12:59,189
and again in contrast with a standard

379
00:12:59,189 --> 00:13:01,209
standard audio context and offer an

380
00:13:01,209 --> 00:13:02,410
audio context it doesn't render the

381
00:13:02,410 --> 00:13:04,149
audio to the device Hardware instead it

382
00:13:04,149 --> 00:13:05,829
generates it as fast as a cannon and

383
00:13:05,829 --> 00:13:08,019
outputs the result to an audio buffer

384
00:13:08,019 --> 00:13:09,660
now that sounds brilliant

385
00:13:09,660 --> 00:13:13,779
so basically audio context is slow often

386
00:13:13,779 --> 00:13:15,189
open to this super fast what we're

387
00:13:15,189 --> 00:13:16,509
trying to do so that's why we're going

388
00:13:16,509 --> 00:13:17,250
with it

389
00:13:17,250 --> 00:13:19,660
cool we've made this audio contacts next

390
00:13:19,660 --> 00:13:21,300
we have to set up our source notes

391
00:13:21,300 --> 00:13:23,620
pretty straightforward create a buffer

392
00:13:23,620 --> 00:13:25,330
source and note that these methods are

393
00:13:25,330 --> 00:13:26,830
all coming off the audio context so you

394
00:13:26,830 --> 00:13:29,110
can't actually create nodes in the web

395
00:13:29,110 --> 00:13:31,210
audio without actually being attached to

396
00:13:31,210 --> 00:13:34,570
this context next up we need to create

397
00:13:34,570 --> 00:13:37,300
and fill this audio buffer so first up

398
00:13:37,300 --> 00:13:38,830
we're going to create a buffer it's got

399
00:13:38,830 --> 00:13:40,000
the number of channel samples sample

400
00:13:40,000 --> 00:13:42,640
rate that we want go to loop over our

401
00:13:42,640 --> 00:13:44,530
channels and then for each channel I'm

402
00:13:44,530 --> 00:13:46,690
going to kind of get the channel buffer

403
00:13:46,690 --> 00:13:48,220
that I just created to remove this is

404
00:13:48,220 --> 00:13:50,890
like an empty empty audio buffer so get

405
00:13:50,890 --> 00:13:52,170
the channel buffer for that channel

406
00:13:52,170 --> 00:13:54,430
gonna iterate over all the samples and

407
00:13:54,430 --> 00:13:57,040
then right here I'm going to you know go

408
00:13:57,040 --> 00:13:58,720
to our channel buffer I'm going to fill

409
00:13:58,720 --> 00:14:01,360
that with pal EEG data which is in the

410
00:14:01,360 --> 00:14:03,970
very credibly named data array so our

411
00:14:03,970 --> 00:14:06,550
EEG data is just in an array of an array

412
00:14:06,550 --> 00:14:08,320
of floats in this data and something

413
00:14:08,320 --> 00:14:09,850
really exciting is happening here so

414
00:14:09,850 --> 00:14:11,740
right there on the left

415
00:14:11,740 --> 00:14:14,770
that's an audio buffer that's audio that

416
00:14:14,770 --> 00:14:15,910
stuff you can process through the Web

417
00:14:15,910 --> 00:14:19,330
Audio API on the right is your EEG data

418
00:14:19,330 --> 00:14:21,730
and in the middle is an equal sign so

419
00:14:21,730 --> 00:14:23,170
what you're doing is you're moving your

420
00:14:23,170 --> 00:14:25,450
EEG data into an audio buffer which

421
00:14:25,450 --> 00:14:28,150
means right now you can put filter and

422
00:14:28,150 --> 00:14:29,260
reverb and compression all this cool

423
00:14:29,260 --> 00:14:30,940
stuff that you really shouldn't do on eg

424
00:14:30,940 --> 00:14:34,780
but you can just like that that's really

425
00:14:34,780 --> 00:14:37,720
cool next you just assign you know two

426
00:14:37,720 --> 00:14:38,890
audio buffer to your source and there

427
00:14:38,890 --> 00:14:40,510
you go you've got your input you've fed

428
00:14:40,510 --> 00:14:44,680
your EG data into the Web Audio API okay

429
00:14:44,680 --> 00:14:45,970
next step we need to generate the

430
00:14:45,970 --> 00:14:50,680
filters well a bit of a bit of

431
00:14:50,680 --> 00:14:51,400
background on this

432
00:14:51,400 --> 00:14:53,740
so the create IR filter method remember

433
00:14:53,740 --> 00:14:55,900
that's kind of super configurable but

434
00:14:55,900 --> 00:14:57,760
it's super configurable in the way you

435
00:14:57,760 --> 00:14:59,440
have to provide certain what's called

436
00:14:59,440 --> 00:15:01,300
coefficients to define what the filter

437
00:15:01,300 --> 00:15:03,910
looks like now there many different

438
00:15:03,910 --> 00:15:05,260
filter types one can use and are all

439
00:15:05,260 --> 00:15:06,820
slightly different from our research we

440
00:15:06,820 --> 00:15:08,770
found out is that desktop software's

441
00:15:08,770 --> 00:15:09,880
usually use something called a

442
00:15:09,880 --> 00:15:11,590
Butterworth filter and that's you know

443
00:15:11,590 --> 00:15:13,120
pretty standard across a lot of filter

444
00:15:13,120 --> 00:15:16,540
types surprisingly you know JavaScript

445
00:15:16,540 --> 00:15:17,860
doesn't have its own generate

446
00:15:17,860 --> 00:15:19,350
Butterworth filter coefficient

447
00:15:19,350 --> 00:15:20,950
implementation so we kind of had to

448
00:15:20,950 --> 00:15:22,840
write our own which looks something like

449
00:15:22,840 --> 00:15:26,260
this and this and this and it just keeps

450
00:15:26,260 --> 00:15:27,940
going so many more pages there's one

451
00:15:27,940 --> 00:15:28,870
more page there's about two hundred

452
00:15:28,870 --> 00:15:30,259
lines of code there

453
00:15:30,259 --> 00:15:32,419
users like complex numbers and polls and

454
00:15:32,419 --> 00:15:34,459
transforms and actually ported it from

455
00:15:34,459 --> 00:15:35,720
MATLAB code one of our colleagues wrote

456
00:15:35,720 --> 00:15:38,119
into JavaScript so it's possible a bit

457
00:15:38,119 --> 00:15:40,040
messy a bit long but there you go so

458
00:15:40,040 --> 00:15:41,479
we've got our butterworth coefficients

459
00:15:41,479 --> 00:15:44,119
once we have that we can generate to the

460
00:15:44,119 --> 00:15:46,279
IR filter by passing these coefficients

461
00:15:46,279 --> 00:15:48,049
in so there you go that's you know six

462
00:15:48,049 --> 00:15:50,929
lines we have our filter nodes next up

463
00:15:50,929 --> 00:15:53,479
we need to connect the source of the

464
00:15:53,479 --> 00:15:55,549
destination so what's happening here is

465
00:15:55,549 --> 00:15:57,169
we're connecting the source to the low

466
00:15:57,169 --> 00:15:58,789
pass the low pass the high pass high

467
00:15:58,789 --> 00:16:00,949
pass to the notch not to the destination

468
00:16:00,949 --> 00:16:03,589
all the way through simple proof finally

469
00:16:03,589 --> 00:16:05,119
we need to process an app with this

470
00:16:05,119 --> 00:16:06,889
audio so we just set up this big audio

471
00:16:06,889 --> 00:16:08,479
graph as it's called now we need to

472
00:16:08,479 --> 00:16:11,809
render this audio graph so step one is

473
00:16:11,809 --> 00:16:14,239
setting what our start point is you know

474
00:16:14,239 --> 00:16:15,229
makes sense that you want to start

475
00:16:15,229 --> 00:16:16,279
processing from the start which is

476
00:16:16,279 --> 00:16:18,529
what's happening here then we need to

477
00:16:18,529 --> 00:16:20,239
call this start rendering method so this

478
00:16:20,239 --> 00:16:21,499
is on the offline audio context you can

479
00:16:21,499 --> 00:16:23,869
do this and it's super cool because it

480
00:16:23,869 --> 00:16:25,939
returns a promise which resolves to your

481
00:16:25,939 --> 00:16:29,089
process to buffer what I'm gonna do now

482
00:16:29,089 --> 00:16:30,529
is you know just initialize where the

483
00:16:30,529 --> 00:16:32,569
output data is going to go and then kind

484
00:16:32,569 --> 00:16:33,739
of do the reverse of what we did to feed

485
00:16:33,739 --> 00:16:35,239
it in gonna loop over all these channels

486
00:16:35,239 --> 00:16:37,519
get the channel buffer and get the here

487
00:16:37,519 --> 00:16:38,539
the channel buffer for those but now

488
00:16:38,539 --> 00:16:39,919
this is full of data instead of empties

489
00:16:39,919 --> 00:16:42,619
before and for some reason here this

490
00:16:42,619 --> 00:16:44,600
channel buffer is returns a typed array

491
00:16:44,600 --> 00:16:46,459
rather than a regular ol array now the

492
00:16:46,459 --> 00:16:48,289
way to convert from a typed array to a

493
00:16:48,289 --> 00:16:49,939
regular array is build a stack overflow

494
00:16:49,939 --> 00:16:51,619
and type how do I to convert from a

495
00:16:51,619 --> 00:16:52,850
typed array to a regular array and copy

496
00:16:52,850 --> 00:16:54,799
paste of the code they tell you right

497
00:16:54,799 --> 00:16:57,679
there so that's that's the simplest way

498
00:16:57,679 --> 00:17:00,649
I found it works cool now we'll return

499
00:17:00,649 --> 00:17:03,139
our process can loop data and there you

500
00:17:03,139 --> 00:17:05,389
go six steps we put our dial we've fed

501
00:17:05,389 --> 00:17:06,559
it through a filter that we process it

502
00:17:06,559 --> 00:17:11,959
this is filtered EEG data right there so

503
00:17:11,959 --> 00:17:14,059
after our six steps we're able to turn

504
00:17:14,059 --> 00:17:17,120
that to that and we've got so much

505
00:17:17,120 --> 00:17:18,679
mileage out of these these images is

506
00:17:18,679 --> 00:17:19,639
like the third time we've used at this

507
00:17:19,639 --> 00:17:22,339
talk so look you know now is what we the

508
00:17:22,339 --> 00:17:23,750
time where I would you know bring out a

509
00:17:23,750 --> 00:17:25,129
demo and show you how it all works and

510
00:17:25,129 --> 00:17:26,389
then get on a plane back to Australia

511
00:17:26,389 --> 00:17:28,459
but you know life life isn't that simple

512
00:17:28,459 --> 00:17:31,100
we there was a few kind of problems with

513
00:17:31,100 --> 00:17:32,809
this and one of the biggest problems is

514
00:17:32,809 --> 00:17:38,049
it was very slow like very very slow so

515
00:17:38,049 --> 00:17:41,629
some further now our scientists they

516
00:17:41,629 --> 00:17:44,270
want to review like four pages of data

517
00:17:44,270 --> 00:17:46,640
second so that's 250 milliseconds per

518
00:17:46,640 --> 00:17:50,390
page okay well to apply these filters it

519
00:17:50,390 --> 00:17:52,730
takes 300 milliseconds so already we're

520
00:17:52,730 --> 00:17:54,830
over budget and then you need to factor

521
00:17:54,830 --> 00:17:56,210
in you know fetching and downloading

522
00:17:56,210 --> 00:17:56,690
this data

523
00:17:56,690 --> 00:17:57,590
you're doing the filtering and then

524
00:17:57,590 --> 00:17:59,390
rendering that all then clearly you know

525
00:17:59,390 --> 00:18:01,610
you're nowhere near what we need to get

526
00:18:01,610 --> 00:18:02,330
that goal

527
00:18:02,330 --> 00:18:04,280
so this is what I call you know just

528
00:18:04,280 --> 00:18:07,010
some minor roadblocks so what's the

529
00:18:07,010 --> 00:18:09,230
problem the problem is this crate IR

530
00:18:09,230 --> 00:18:11,450
filter method you know it takes around a

531
00:18:11,450 --> 00:18:12,800
hundred milliseconds to generate a

532
00:18:12,800 --> 00:18:14,960
filter which is look reasonable because

533
00:18:14,960 --> 00:18:16,070
you have to provide these coefficients

534
00:18:16,070 --> 00:18:17,570
generate a new filter super configurable

535
00:18:17,570 --> 00:18:20,240
from scratch that's okay but you're

536
00:18:20,240 --> 00:18:21,440
doing that you know not just once but

537
00:18:21,440 --> 00:18:23,690
one two three times that's four three

538
00:18:23,690 --> 00:18:26,090
times which is you know three one

539
00:18:26,090 --> 00:18:28,460
hundred three hundred milliseconds the

540
00:18:28,460 --> 00:18:30,380
pain doesn't end there because now you

541
00:18:30,380 --> 00:18:33,680
have lots and lots of things because

542
00:18:33,680 --> 00:18:35,720
every page of data that you're looking

543
00:18:35,720 --> 00:18:37,670
at has to generate its own filters so

544
00:18:37,670 --> 00:18:39,680
one page 300 millisecond another page

545
00:18:39,680 --> 00:18:41,480
300 milliseconds so it just goes on and

546
00:18:41,480 --> 00:18:43,280
on and on so clearly this is not gonna

547
00:18:43,280 --> 00:18:46,070
work so where can we go from here well

548
00:18:46,070 --> 00:18:48,710
look we could use web workers maybe I'm

549
00:18:48,710 --> 00:18:49,640
just putting that there haven't actually

550
00:18:49,640 --> 00:18:51,800
tried it but you know even if we could

551
00:18:51,800 --> 00:18:53,780
get web workers to use web audio it

552
00:18:53,780 --> 00:18:55,160
still has the problem of the brows are

553
00:18:55,160 --> 00:18:56,690
still taking that 300 millisecond so it

554
00:18:56,690 --> 00:18:57,710
might be off the main thread but it's

555
00:18:57,710 --> 00:18:59,960
still that waiting time there use

556
00:18:59,960 --> 00:19:01,700
webassembly maybe you know rust didn't

557
00:19:01,700 --> 00:19:03,230
see those languages are far better

558
00:19:03,230 --> 00:19:04,940
suited to writing your own filter

559
00:19:04,940 --> 00:19:06,590
implementation than javascript which is

560
00:19:06,590 --> 00:19:09,500
what we talked about before but you know

561
00:19:09,500 --> 00:19:11,360
we're so close we're so close for almost

562
00:19:11,360 --> 00:19:12,650
got there we've got our data filter I

563
00:19:12,650 --> 00:19:14,210
don't want to jump ship and go to you

564
00:19:14,210 --> 00:19:15,980
know rust or C just just right now so

565
00:19:15,980 --> 00:19:18,020
maybe could you feel from the backend

566
00:19:18,020 --> 00:19:20,240
you know similar to web assembly perhaps

567
00:19:20,240 --> 00:19:21,290
there's server-side languages that are

568
00:19:21,290 --> 00:19:23,020
better at writing filtering permutations

569
00:19:23,020 --> 00:19:25,580
but there's a bit of latency in having

570
00:19:25,580 --> 00:19:27,110
to you know change the filter fetch some

571
00:19:27,110 --> 00:19:28,460
data change the filter again fetch some

572
00:19:28,460 --> 00:19:29,870
more data it's just a lot of data flow

573
00:19:29,870 --> 00:19:32,510
through maybe is this something else we

574
00:19:32,510 --> 00:19:34,730
can do all right well when you're in the

575
00:19:34,730 --> 00:19:36,110
end and so I'll tell you about a Taylor

576
00:19:36,110 --> 00:19:38,630
to filters now so what is that problem a

577
00:19:38,630 --> 00:19:41,350
problem is this the great IR filter

578
00:19:41,350 --> 00:19:44,210
filter method it's good it's super

579
00:19:44,210 --> 00:19:45,980
configurable it you know represent the

580
00:19:45,980 --> 00:19:47,180
second order filter configurable with

581
00:19:47,180 --> 00:19:48,440
several different common filter types

582
00:19:48,440 --> 00:19:50,750
but it's a bit slow to make so what's

583
00:19:50,750 --> 00:19:51,230
the solution

584
00:19:51,230 --> 00:19:54,140
well the solution is

585
00:19:54,140 --> 00:19:56,700
there's an old proverb to hide a tree

586
00:19:56,700 --> 00:19:59,040
use a forest so you know how about you

587
00:19:59,040 --> 00:20:00,720
know the je s come for the past 2019

588
00:20:00,720 --> 00:20:03,210
take on it to solve a filter problem use

589
00:20:03,210 --> 00:20:05,310
a filter alright just two notes about

590
00:20:05,310 --> 00:20:07,080
this I don't know if my my proverb

591
00:20:07,080 --> 00:20:09,450
actually makes any sense maybe not and

592
00:20:09,450 --> 00:20:12,000
secondly I thought that top when I was

593
00:20:12,000 --> 00:20:13,140
writing this I thought the top row was

594
00:20:13,140 --> 00:20:14,460
actually a super you know real ancient

595
00:20:14,460 --> 00:20:17,250
wise proverb but it turns out it's just

596
00:20:17,250 --> 00:20:20,460
from ninja boy in Pokemon emerald so

597
00:20:20,460 --> 00:20:21,720
it's just something it's stuck with me

598
00:20:21,720 --> 00:20:24,540
for 14 years but you know there you go

599
00:20:24,540 --> 00:20:28,380
so anyway filters there's another filter

600
00:20:28,380 --> 00:20:30,480
that we can actually use in Web Audio

601
00:20:30,480 --> 00:20:32,460
and it's called the by quad filter node

602
00:20:32,460 --> 00:20:34,890
now if you look if it seems like that

603
00:20:34,890 --> 00:20:36,930
description looks pretty similar to the

604
00:20:36,930 --> 00:20:38,250
one we just saw before you know you'd be

605
00:20:38,250 --> 00:20:41,150
right those are the different the two

606
00:20:41,150 --> 00:20:43,590
descriptions written the mdn Doc's give

607
00:20:43,590 --> 00:20:45,050
you a second to spot the difference

608
00:20:45,050 --> 00:20:47,340
there's not really much there so let's

609
00:20:47,340 --> 00:20:51,300
do our own kind of comparison so are

610
00:20:51,300 --> 00:20:52,470
they both do they both generate

611
00:20:52,470 --> 00:20:55,440
second-order filters yep that's good

612
00:20:55,440 --> 00:20:56,550
that's important because desktop

613
00:20:56,550 --> 00:20:58,830
software's use second-order filters can

614
00:20:58,830 --> 00:21:00,240
you create your own custom filter with

615
00:21:00,240 --> 00:21:02,760
it well yes for the IR filter know for

616
00:21:02,760 --> 00:21:04,020
the bicoid filter you kind of use what's

617
00:21:04,020 --> 00:21:06,110
given to you okay that's that's alright

618
00:21:06,110 --> 00:21:09,090
is it a Butterworth filter so remember

619
00:21:09,090 --> 00:21:10,530
we generate our own Butterworth filter

620
00:21:10,530 --> 00:21:12,600
with the create our filter method but

621
00:21:12,600 --> 00:21:14,370
for the life of me I couldn't find out

622
00:21:14,370 --> 00:21:17,040
what exact filter algorithm was used to

623
00:21:17,040 --> 00:21:19,260
create the bicoid filter and that's

624
00:21:19,260 --> 00:21:20,730
important because if something is

625
00:21:20,730 --> 00:21:21,870
filtered slightly different it's gonna

626
00:21:21,870 --> 00:21:23,160
look slightly different and it's looking

627
00:21:23,160 --> 00:21:24,510
slightly different you might not see it

628
00:21:24,510 --> 00:21:25,590
when you're flicking through four pages

629
00:21:25,590 --> 00:21:28,470
a second finally kind of the big the big

630
00:21:28,470 --> 00:21:30,240
one is the time taken to generate these

631
00:21:30,240 --> 00:21:33,600
filters so clearly the bicoid filter is

632
00:21:33,600 --> 00:21:34,890
a big winner here taking ten

633
00:21:34,890 --> 00:21:36,270
milliseconds versus the hundred

634
00:21:36,270 --> 00:21:38,940
milliseconds for the great IR filter

635
00:21:38,940 --> 00:21:41,640
note so the question still remains is

636
00:21:41,640 --> 00:21:44,370
does this filter filter the way we

637
00:21:44,370 --> 00:21:46,770
wanted to do after a bit of research we

638
00:21:46,770 --> 00:21:49,910
can say with with success yes

639
00:21:49,910 --> 00:21:52,890
so the filtered data coming out of a

640
00:21:52,890 --> 00:21:54,870
bipod filter is basically more or less

641
00:21:54,870 --> 00:21:56,700
the same as the data coming through our

642
00:21:56,700 --> 00:21:58,710
desktop software so my quad filter node

643
00:21:58,710 --> 00:21:59,870
we just works

644
00:21:59,870 --> 00:22:02,700
another big upside on this is that

645
00:22:02,700 --> 00:22:04,560
remember before we had our Butterworth

646
00:22:04,560 --> 00:22:07,440
filter code 200 lines of matlab ported

647
00:22:07,440 --> 00:22:10,080
we transforms in complex numbers well

648
00:22:10,080 --> 00:22:11,220
there's the coach a writer Butterworth

649
00:22:11,220 --> 00:22:14,160
filter a bipod filter yeah that's nine

650
00:22:14,160 --> 00:22:14,610
lines

651
00:22:14,610 --> 00:22:16,350
let's change if you you know can

652
00:22:16,350 --> 00:22:18,150
compress things a little bit so I call

653
00:22:18,150 --> 00:22:24,929
this an absolute win so success things

654
00:22:24,929 --> 00:22:27,500
are working so let me give you a demo of

655
00:22:27,500 --> 00:22:30,299
these filters actually being applied so

656
00:22:30,299 --> 00:22:33,570
that's not the way all right so right

657
00:22:33,570 --> 00:22:35,910
now we have some of our EEG data and

658
00:22:35,910 --> 00:22:37,530
this is you know usually what the

659
00:22:37,530 --> 00:22:39,419
clinicians would do and would look at so

660
00:22:39,419 --> 00:22:40,380
right now none of the filters are

661
00:22:40,380 --> 00:22:42,929
applied and usually they'd be here

662
00:22:42,929 --> 00:22:45,150
looking through this data and looks

663
00:22:45,150 --> 00:22:47,010
alright you know without a filter but

664
00:22:47,010 --> 00:22:48,390
sometimes you get really noisy parts

665
00:22:48,390 --> 00:22:49,980
like this this might be where you're you

666
00:22:49,980 --> 00:22:51,210
know muscle artifacts coming in or

667
00:22:51,210 --> 00:22:52,919
signal noise so if you're trying to

668
00:22:52,919 --> 00:22:53,909
review something in here there could be

669
00:22:53,909 --> 00:22:55,320
all these spike waves underneath this

670
00:22:55,320 --> 00:22:57,480
noise and you'd never see it so what you

671
00:22:57,480 --> 00:22:59,460
can do though is you can just turn on

672
00:22:59,460 --> 00:23:06,630
your filters yeah and right there that's

673
00:23:06,630 --> 00:23:08,250
so much easy to see this is so much

674
00:23:08,250 --> 00:23:10,679
closer to what the real EEG data looks

675
00:23:10,679 --> 00:23:12,169
like you know you can also specify

676
00:23:12,169 --> 00:23:14,220
exactly what filter you want you want to

677
00:23:14,220 --> 00:23:16,140
make a you know I forty Hertz low-pass

678
00:23:16,140 --> 00:23:19,890
you want to put a high-pass at say no

679
00:23:19,890 --> 00:23:24,760
three cool you can do that on the fly

680
00:23:24,770 --> 00:23:27,840
now right here I've got another bit of

681
00:23:27,840 --> 00:23:30,090
EEG so this is without filters applied

682
00:23:30,090 --> 00:23:32,630
let me just turn these filters on and

683
00:23:32,630 --> 00:23:35,059
what you see underneath all of this

684
00:23:35,059 --> 00:23:39,659
right here there's a spike and way so if

685
00:23:39,659 --> 00:23:40,770
you're looking at this and it's a bit

686
00:23:40,770 --> 00:23:42,450
noisy and you're flicking through page

687
00:23:42,450 --> 00:23:44,490
after page you might not see this appear

688
00:23:44,490 --> 00:23:45,840
right here but if you have these filters

689
00:23:45,840 --> 00:23:47,130
applied you'll be able to see the

690
00:23:47,130 --> 00:23:49,169
underlying epileptic signal there and be

691
00:23:49,169 --> 00:23:52,049
able to give the correct diagnosis so

692
00:23:52,049 --> 00:23:57,139
filters in the web

693
00:23:57,149 --> 00:23:59,279
all right so we've come a long way

694
00:23:59,279 --> 00:24:00,570
together we've learned a bit about

695
00:24:00,570 --> 00:24:02,999
epilepsy about EEG about brainwaves and

696
00:24:02,999 --> 00:24:04,979
how we can use the Web Audio API to the

697
00:24:04,979 --> 00:24:06,839
help decipher these brain waves now

698
00:24:06,839 --> 00:24:08,489
before I fly back home to the land of a

699
00:24:08,489 --> 00:24:10,169
great beyond let me leave you with some

700
00:24:10,169 --> 00:24:12,649
closing remarks so why does this matter

701
00:24:12,649 --> 00:24:14,879
you know why am i giving a talk about

702
00:24:14,879 --> 00:24:17,159
Web Audio and brain waves well look

703
00:24:17,159 --> 00:24:18,839
there's many kind of other better talks

704
00:24:18,839 --> 00:24:19,859
that could have been given about Web

705
00:24:19,859 --> 00:24:21,389
Audio could have taught you how to make

706
00:24:21,389 --> 00:24:22,649
your own motor track mixer and how do

707
00:24:22,649 --> 00:24:23,099
you know

708
00:24:23,099 --> 00:24:24,989
apply reverb and do these cool things

709
00:24:24,989 --> 00:24:27,869
instead I gave you this one well the

710
00:24:27,869 --> 00:24:30,570
reason is at my company seer you know we

711
00:24:30,570 --> 00:24:31,679
help we try to help people you know

712
00:24:31,679 --> 00:24:32,999
we've helped over a thousand patients

713
00:24:32,999 --> 00:24:34,589
over our last two years of operation

714
00:24:34,589 --> 00:24:36,599
we're seeing over 40 patients a week

715
00:24:36,599 --> 00:24:38,909
coming through our services and so at

716
00:24:38,909 --> 00:24:40,529
the end of the day what they want what

717
00:24:40,529 --> 00:24:42,830
these patients want is a diagnosis and

718
00:24:42,830 --> 00:24:45,839
as we saw if you don't see the right

719
00:24:45,839 --> 00:24:47,159
data you're not going to get the right

720
00:24:47,159 --> 00:24:48,479
diagnosis you don't get the right

721
00:24:48,479 --> 00:24:49,589
diagnosis you can't get the right

722
00:24:49,589 --> 00:24:51,719
treatment and you know in some small way

723
00:24:51,719 --> 00:24:53,669
the Web Audio API is actually helping

724
00:24:53,669 --> 00:24:56,940
with this so kind of technology you can

725
00:24:56,940 --> 00:24:59,099
make a difference here you know it's at

726
00:24:59,099 --> 00:25:00,269
the heart of what we're doing and it's a

727
00:25:00,269 --> 00:25:01,679
heart of what we and I mean all of us

728
00:25:01,679 --> 00:25:04,469
are kind of doing so I'm not sure that

729
00:25:04,469 --> 00:25:06,179
the riders of the Web Audio API spit

730
00:25:06,179 --> 00:25:07,859
kind of envisioned you know filters

731
00:25:07,859 --> 00:25:10,049
being used for epilepsy diagnoses but it

732
00:25:10,049 --> 00:25:12,690
is and it's getting done right here so

733
00:25:12,690 --> 00:25:14,549
take nobody can make a difference but

734
00:25:14,549 --> 00:25:16,679
it's only when you apply technology in

735
00:25:16,679 --> 00:25:18,509
the right way that really can so at the

736
00:25:18,509 --> 00:25:19,769
end of the day it's you know we're the

737
00:25:19,769 --> 00:25:21,450
ones that making the difference we get

738
00:25:21,450 --> 00:25:22,710
to choose how this technology is used

739
00:25:22,710 --> 00:25:24,330
you know we get to choose where I spend

740
00:25:24,330 --> 00:25:26,519
our time and look look we're not we're

741
00:25:26,519 --> 00:25:27,809
not all you know volunteering in foreign

742
00:25:27,809 --> 00:25:29,070
countries are working off for profits

743
00:25:29,070 --> 00:25:31,379
you know but we can still use the web

744
00:25:31,379 --> 00:25:32,969
technologies to make a difference in the

745
00:25:32,969 --> 00:25:35,549
lives of others all right on a bit of a

746
00:25:35,549 --> 00:25:37,019
lot of note I'd like to leave you with

747
00:25:37,019 --> 00:25:41,159
one more final demo so perhaps there's a

748
00:25:41,159 --> 00:25:43,529
question on everyone's mind previously

749
00:25:43,529 --> 00:25:45,749
we did this we converted brain waves to

750
00:25:45,749 --> 00:25:49,229
audio back to brain waves but what if we

751
00:25:49,229 --> 00:25:53,820
did this brain waves to audio let's

752
00:25:53,820 --> 00:25:56,549
leave it there all right well for the

753
00:25:56,549 --> 00:25:59,309
first time on on any or at least this

754
00:25:59,309 --> 00:26:01,259
particular J's comp stage I'd like to

755
00:26:01,259 --> 00:26:02,940
present to you the the symphony of the

756
00:26:02,940 --> 00:26:08,200
mind let's see how we go

757
00:26:08,210 --> 00:26:14,580
you know one house there it is alright

758
00:26:14,580 --> 00:26:16,260
I've got a super cool enable cool demo

759
00:26:16,260 --> 00:26:19,370
button here cool demo is enabled

760
00:26:19,370 --> 00:26:33,180
alright let's begin

761
00:26:33,190 --> 00:26:34,380
put on the noise

762
00:26:34,380 --> 00:26:45,740
[Music]

763
00:26:45,750 --> 00:26:47,860
like an airplane noise now it's very

764
00:26:47,860 --> 00:26:54,850
peaceful slow just got it down to

765
00:26:54,850 --> 00:27:09,000
nothing

766
00:27:09,010 --> 00:27:13,770
all right there you go

