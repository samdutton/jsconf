1
00:00:06,859 --> 00:00:12,709

reject

2
00:00:12,719 --> 00:00:17,410
okay it's working hello everyone so I

3
00:00:17,410 --> 00:00:19,840
hope you had a great lunch because it

4
00:00:19,840 --> 00:00:23,079
was really good so today I'll talk about

5
00:00:23,079 --> 00:00:26,430
ampersand J's this is basically how

6
00:00:26,430 --> 00:00:28,989
people call nan framing for non

7
00:00:28,989 --> 00:00:30,640
framework a framework which you'll see

8
00:00:30,640 --> 00:00:34,450
Norma why not first on just moment about

9
00:00:34,450 --> 00:00:37,870
me I'm senior clean site engineer and I

10
00:00:37,870 --> 00:00:40,680
seem extreme is a company made of

11
00:00:40,680 --> 00:00:43,239
exclusively remote workers we don't have

12
00:00:43,239 --> 00:00:47,379
any office anyone working in well let's

13
00:00:47,379 --> 00:00:50,140
say in a one specific place and we

14
00:00:50,140 --> 00:00:53,170
recently opened X lot which is fun to

15
00:00:53,170 --> 00:00:56,079
educate it to just help people grow

16
00:00:56,079 --> 00:01:01,179
learn new stuff we host various vers

17
00:01:01,179 --> 00:01:04,780
events like meetups in Philippines -

18
00:01:04,780 --> 00:01:08,440
let's say teach people Drupal we also

19
00:01:08,440 --> 00:01:11,470
have a fund for open source projects so

20
00:01:11,470 --> 00:01:14,890
if you have any idea for example to help

21
00:01:14,890 --> 00:01:17,830
because we're specifically trying to

22
00:01:17,830 --> 00:01:20,440
reach remote workers so if you have any

23
00:01:20,440 --> 00:01:22,570
idea how to supper them and make their

24
00:01:22,570 --> 00:01:25,180
life easier just let me know and we'll

25
00:01:25,180 --> 00:01:30,010
make it happen so I am person Jess who

26
00:01:30,010 --> 00:01:30,790
created it

27
00:01:30,790 --> 00:01:34,420
so basically this team called and yet

28
00:01:34,420 --> 00:01:39,070
and they had an idea if I guess most of

29
00:01:39,070 --> 00:01:41,770
you heard about backbone which is

30
00:01:41,770 --> 00:01:44,710
JavaScript framework but the issue is

31
00:01:44,710 --> 00:01:47,740
that it was two monolithic it was just

32
00:01:47,740 --> 00:01:50,530
one huge framework they tried to solve

33
00:01:50,530 --> 00:01:53,830
your problems and if you wanted to use

34
00:01:53,830 --> 00:01:55,920
only one part of this framework

35
00:01:55,920 --> 00:01:59,140
you just couldn't because it was just

36
00:01:59,140 --> 00:01:59,980
just one thing

37
00:01:59,980 --> 00:02:03,370
so bunch of guys from this company try

38
00:02:03,370 --> 00:02:07,300
to make the idea came with the idea how

39
00:02:07,300 --> 00:02:10,390
to solve this and they decide to split

40
00:02:10,390 --> 00:02:12,519
everything into really really small

41
00:02:12,519 --> 00:02:15,550
pieces and give you everything to use

42
00:02:15,550 --> 00:02:18,819
it's basically up to you which part to

43
00:02:18,819 --> 00:02:22,000
use how you use it and it just tries to

44
00:02:22,000 --> 00:02:22,940
solve

45
00:02:22,940 --> 00:02:27,120
really very small problems and not make

46
00:02:27,120 --> 00:02:30,600
you choose any of their solutions so

47
00:02:30,600 --> 00:02:34,410
basically I joined their team few months

48
00:02:34,410 --> 00:02:37,590
ago I guess two or three but we have

49
00:02:37,590 --> 00:02:40,470
plenty of contributors all of them are

50
00:02:40,470 --> 00:02:42,300
we are really thankful to them and if

51
00:02:42,300 --> 00:02:44,310
you want to join just let us know there

52
00:02:44,310 --> 00:02:46,590
is it's open source project for all so

53
00:02:46,590 --> 00:02:49,320
you're more than welcome

54
00:02:49,320 --> 00:02:52,500
I'd like to split this talk in two parts

55
00:02:52,500 --> 00:02:55,980
first is a brief overview of ampersand

56
00:02:55,980 --> 00:02:58,680
J's itself and then I'll move to our

57
00:02:58,680 --> 00:03:01,590
philosophy how you do things and why I

58
00:03:01,590 --> 00:03:05,280
did this in a specific way so this

59
00:03:05,280 --> 00:03:07,920
ampersand as can really the higher model

60
00:03:07,920 --> 00:03:09,690
or LC couples no framework a framework

61
00:03:09,690 --> 00:03:11,580
for building otherwise just clipped

62
00:03:11,580 --> 00:03:18,060
applications it's as as you can see from

63
00:03:18,060 --> 00:03:20,070
the first view it's nothing more than

64
00:03:20,070 --> 00:03:22,260
the smallest collections router's views

65
00:03:22,260 --> 00:03:24,330
so and basically that's all nothing

66
00:03:24,330 --> 00:03:26,910
unusual so my thing why is it different

67
00:03:26,910 --> 00:03:30,900
I will try to display knit explain it in

68
00:03:30,900 --> 00:03:33,870
a few words just bear with me for a

69
00:03:33,870 --> 00:03:35,489
moment I will walk you through all the

70
00:03:35,489 --> 00:03:39,269
basics so ampersand state this is basic

71
00:03:39,269 --> 00:03:42,350
object of everything in the framework

72
00:03:42,350 --> 00:03:46,830
it's based for every ol module that

73
00:03:46,830 --> 00:03:50,610
you'll ever use currently there is a

74
00:03:50,610 --> 00:03:54,150
object.observe in Atmos tube six that

75
00:03:54,150 --> 00:03:57,060
everyone is waiting for well it's not

76
00:03:57,060 --> 00:04:00,420
yet that that great it's pretty slow and

77
00:04:00,420 --> 00:04:03,959
it's not it's not it can be used in

78
00:04:03,959 --> 00:04:07,830
overall the browser's currently so what

79
00:04:07,830 --> 00:04:12,000
they came with is it when you use

80
00:04:12,000 --> 00:04:13,860
different data types you have three

81
00:04:13,860 --> 00:04:16,380
choices properties which are data types

82
00:04:16,380 --> 00:04:19,739
or different or basic objects which you

83
00:04:19,739 --> 00:04:23,190
simply describe whether it's a string

84
00:04:23,190 --> 00:04:26,419
number bullion diet it's up to you

85
00:04:26,419 --> 00:04:28,950
whether it's acquired what are the

86
00:04:28,950 --> 00:04:30,750
possible values all the stuff is

87
00:04:30,750 --> 00:04:33,630
basically like schema for databases but

88
00:04:33,630 --> 00:04:35,470
on the prefer decline

89
00:04:35,470 --> 00:04:41,140
second is session session is this almost

90
00:04:41,140 --> 00:04:45,160
the same like properties but it's it

91
00:04:45,160 --> 00:04:47,620
meant to be used for only one session of

92
00:04:47,620 --> 00:04:51,010
user so if you use to JSON or serialize

93
00:04:51,010 --> 00:04:52,600
or something like this or we try to

94
00:04:52,600 --> 00:04:55,360
store this model on server it won't be

95
00:04:55,360 --> 00:04:56,860
passed because it's just session

96
00:04:56,860 --> 00:04:59,910
variable and a another thing is the

97
00:04:59,910 --> 00:05:03,730
derivative which are I've never seen

98
00:05:03,730 --> 00:05:06,310
before I guess it's basically a property

99
00:05:06,310 --> 00:05:08,290
that's dependent on other property and

100
00:05:08,290 --> 00:05:11,980
it will react to changes in in this in

101
00:05:11,980 --> 00:05:13,660
properties it depends on for example

102
00:05:13,660 --> 00:05:16,510
here we have full name derivative which

103
00:05:16,510 --> 00:05:18,280
depends on first name and last name and

104
00:05:18,280 --> 00:05:21,970
every time either of those change there

105
00:05:21,970 --> 00:05:24,370
if the property will be a Miss clear

106
00:05:24,370 --> 00:05:30,370
calculated models because ampersand is

107
00:05:30,370 --> 00:05:32,980
really modular each piece is made of

108
00:05:32,980 --> 00:05:35,590
something else like a only ampersand

109
00:05:35,590 --> 00:05:38,140
state and others on the router our state

110
00:05:38,140 --> 00:05:41,200
level modules so here models are just

111
00:05:41,200 --> 00:05:43,090
mix of ampersand state and ampersand

112
00:05:43,090 --> 00:05:47,020
sink which give it ability to store

113
00:05:47,020 --> 00:05:49,720
models on the server to fetch them to

114
00:05:49,720 --> 00:05:52,830
say to destroy them and so on

115
00:05:52,830 --> 00:05:55,300
collections there are a few few types of

116
00:05:55,300 --> 00:05:56,890
collections we're in Backman forget we

117
00:05:56,890 --> 00:05:59,200
had only one you know we had a few of

118
00:05:59,200 --> 00:06:02,050
them first one is simple ampersand

119
00:06:02,050 --> 00:06:05,050
collection it does nothing only stores

120
00:06:05,050 --> 00:06:07,120
your models you know you know in one

121
00:06:07,120 --> 00:06:10,900
group and only it also has a fuse

122
00:06:10,900 --> 00:06:13,900
fefe other things like state as you said

123
00:06:13,900 --> 00:06:15,790
because understand safety space for

124
00:06:15,790 --> 00:06:17,890
everything so you can listen for changes

125
00:06:17,890 --> 00:06:20,560
of everything on everything it's just up

126
00:06:20,560 --> 00:06:22,540
to you and it also contains some

127
00:06:22,540 --> 00:06:26,680
es5 metals like reduce filter map and so

128
00:06:26,680 --> 00:06:31,210
on because ampersand is only a 9 higher

129
00:06:31,210 --> 00:06:34,900
so you can use all s 5 metals so your

130
00:06:34,900 --> 00:06:37,479
honor you go about this and other than

131
00:06:37,479 --> 00:06:39,760
this ampersand collection only those

132
00:06:39,760 --> 00:06:41,610
only some doesn't have anything

133
00:06:41,610 --> 00:06:45,400
ampersand collection is made of amber

134
00:06:45,400 --> 00:06:46,750
some collection is a collection sorry

135
00:06:46,750 --> 00:06:48,789
ampersand collection itself and there is

136
00:06:48,789 --> 00:06:51,400
a mixin which I will talk about with

137
00:06:51,400 --> 00:06:55,150
underscore metals and you can use sub

138
00:06:55,150 --> 00:06:58,810
collection for is it can create sub

139
00:06:58,810 --> 00:07:01,510
collections of of previous collection

140
00:07:01,510 --> 00:07:04,570
that will be automatically updated based

141
00:07:04,570 --> 00:07:07,990
on your own your filters for example

142
00:07:07,990 --> 00:07:11,050
here we have a base collection and on a

143
00:07:11,050 --> 00:07:13,060
sub collection would favorite widgets

144
00:07:13,060 --> 00:07:15,900
will see only data that contains

145
00:07:15,900 --> 00:07:19,140
awesome true and comparator which is

146
00:07:19,140 --> 00:07:22,240
just a way of sorting things you can add

147
00:07:22,240 --> 00:07:25,349
filters remove filters choose whether to

148
00:07:25,349 --> 00:07:29,169
you can also for example say that ok I

149
00:07:29,169 --> 00:07:32,050
want the only models that have awesome

150
00:07:32,050 --> 00:07:35,500
true but I want to listen for some other

151
00:07:35,500 --> 00:07:37,539
properties and if this properties change

152
00:07:37,539 --> 00:07:40,450
also update my sub collection and check

153
00:07:40,450 --> 00:07:42,400
whether there's something here or or

154
00:07:42,400 --> 00:07:45,640
maybe we should remove something animal

155
00:07:45,640 --> 00:07:47,349
last one is impersonal Earth collection

156
00:07:47,349 --> 00:07:51,010
which is a huge mixing of ampersand

157
00:07:51,010 --> 00:07:53,229
collection and personalized mixing which

158
00:07:53,229 --> 00:07:56,789
is which are just methods for

159
00:07:56,789 --> 00:07:59,229
persisting here your data on server and

160
00:07:59,229 --> 00:08:01,510
working with the API and the underscore

161
00:08:01,510 --> 00:08:04,000
mixing switch gives you all the

162
00:08:04,000 --> 00:08:08,620
abilities of underscore itself if used

163
00:08:08,620 --> 00:08:10,750
there plenty of use there is not only

164
00:08:10,750 --> 00:08:14,140
one like people are you see so ampersand

165
00:08:14,140 --> 00:08:17,710
V is mix of ampersand state Dom bindings

166
00:08:17,710 --> 00:08:19,479
and collection view collection is used

167
00:08:19,479 --> 00:08:22,780
here only because we wanted to let

168
00:08:22,780 --> 00:08:24,550
people render collections which is

169
00:08:24,550 --> 00:08:27,010
really like a common come on task

170
00:08:27,010 --> 00:08:29,440
without any of any other radishes and

171
00:08:29,440 --> 00:08:33,870
the bindings are the way that you can

172
00:08:33,870 --> 00:08:36,849
tell view which data from your model

173
00:08:36,849 --> 00:08:39,610
should be should be used this is could

174
00:08:39,610 --> 00:08:42,430
be compared to on go our bindings to a

175
00:08:42,430 --> 00:08:45,310
data binding but I will explain why not

176
00:08:45,310 --> 00:08:47,200
basically because it's not it's not the

177
00:08:47,200 --> 00:08:50,620
way I think what worried me okay so here

178
00:08:50,620 --> 00:08:52,570
is basically you give its template which

179
00:08:52,570 --> 00:08:54,840
is string and it can only have

180
00:08:54,840 --> 00:08:57,030
one root so one root element for for

181
00:08:57,030 --> 00:08:59,460
template you can use either stringer

182
00:08:59,460 --> 00:09:02,340
function but you don't have to recompile

183
00:09:02,340 --> 00:09:04,980
your functions your templates or place

184
00:09:04,980 --> 00:09:07,940
data in it and so on I think there are

185
00:09:07,940 --> 00:09:10,950
data hooks which will be used for for

186
00:09:10,950 --> 00:09:12,890
data bindings I will talk about and

187
00:09:12,890 --> 00:09:15,150
include listen for example for events

188
00:09:15,150 --> 00:09:18,270
and some additional thing for this view

189
00:09:18,270 --> 00:09:22,920
is that can you can register a sub views

190
00:09:22,920 --> 00:09:26,850
before which was a pretty calm coming

191
00:09:26,850 --> 00:09:28,530
think you want if you do in for example

192
00:09:28,530 --> 00:09:31,320
backbone but won't able to and

193
00:09:31,320 --> 00:09:34,560
collection view is iterative wire to

194
00:09:34,560 --> 00:09:36,960
create single view inside the inside the

195
00:09:36,960 --> 00:09:38,310
container which is also contained in

196
00:09:38,310 --> 00:09:40,020
ampersand do you but maybe you have a

197
00:09:40,020 --> 00:09:42,510
use case to render collection only you

198
00:09:42,510 --> 00:09:45,030
know ampersand views feature it's

199
00:09:45,030 --> 00:09:48,450
something like you can create a region

200
00:09:48,450 --> 00:09:51,150
it's it's normal culture from mario net

201
00:09:51,150 --> 00:09:53,700
exactly you can create a region which

202
00:09:53,700 --> 00:09:55,530
you can use to swap views inside many

203
00:09:55,530 --> 00:09:57,780
for example you can have a button with

204
00:09:57,780 --> 00:10:00,360
tabs or something like this and you can

205
00:10:00,360 --> 00:10:02,370
say that after I click this button let's

206
00:10:02,370 --> 00:10:04,740
switch this view and place new things

207
00:10:04,740 --> 00:10:07,190
inside and it will automatically

208
00:10:07,190 --> 00:10:10,800
register or all your events destroy all

209
00:10:10,800 --> 00:10:13,520
the elements clear memory and all stuff

210
00:10:13,520 --> 00:10:16,410
it's made of ampersand you as base plus

211
00:10:16,410 --> 00:10:19,200
it has just a few simple ways a few

212
00:10:19,200 --> 00:10:23,940
simple functions in can specify here how

213
00:10:23,940 --> 00:10:26,250
to how to hide this view how to show

214
00:10:26,250 --> 00:10:28,320
this video and whether you want to wait

215
00:10:28,320 --> 00:10:32,250
for before it's gone the first the first

216
00:10:32,250 --> 00:10:33,840
view are not super example you can use

217
00:10:33,840 --> 00:10:36,360
this to animate those views or set new

218
00:10:36,360 --> 00:10:38,610
title or I know maybe scroll top as you

219
00:10:38,610 --> 00:10:42,480
can see form you this thing that I

220
00:10:42,480 --> 00:10:46,250
really really like handling forms is

221
00:10:46,250 --> 00:10:49,020
it's hard it's hard basically it's it's

222
00:10:49,020 --> 00:10:51,660
really hard and the way we try to solve

223
00:10:51,660 --> 00:10:54,740
this is you can create a huge contains

224
00:10:54,740 --> 00:10:58,680
all the inputs it's it doesn't really

225
00:10:58,680 --> 00:11:00,360
care what inputs you'll place in there

226
00:11:00,360 --> 00:11:04,640
but it will handle all the all the data

227
00:11:04,640 --> 00:11:07,839
a validation if you will test

228
00:11:07,839 --> 00:11:10,420
whether you can send send it over to the

229
00:11:10,420 --> 00:11:12,790
server you can reach the call button and

230
00:11:12,790 --> 00:11:13,449
all this stuff

231
00:11:13,449 --> 00:11:17,110
it also check whether to show error

232
00:11:17,110 --> 00:11:20,110
messages for you just just just like

233
00:11:20,110 --> 00:11:21,970
that you don't have to specify anything

234
00:11:21,970 --> 00:11:26,980
and there are a few few inputs that you

235
00:11:26,980 --> 00:11:29,259
can you can choose on there's input view

236
00:11:29,259 --> 00:11:32,259
which is a simple simple input you just

237
00:11:32,259 --> 00:11:36,040
describe its label its name validation

238
00:11:36,040 --> 00:11:40,149
rules and so on our input which is

239
00:11:40,149 --> 00:11:42,399
basically the same well as input but it

240
00:11:42,399 --> 00:11:44,709
allows you to create multiple instances

241
00:11:44,709 --> 00:11:47,589
if you just want to get RI of values

242
00:11:47,589 --> 00:11:51,129
from from for example as we had with the

243
00:11:51,129 --> 00:11:53,889
example of adding shipping costs

244
00:11:53,889 --> 00:11:56,740
this is exactly the same use case where

245
00:11:56,740 --> 00:11:59,559
you can just add new weights of other

246
00:11:59,559 --> 00:12:01,720
package for example select view which

247
00:12:01,720 --> 00:12:03,910
will create select for you check box

248
00:12:03,910 --> 00:12:07,269
view and you can place all of them

249
00:12:07,269 --> 00:12:09,309
inside the form view and you will just

250
00:12:09,309 --> 00:12:11,980
they will all just play together it's up

251
00:12:11,980 --> 00:12:15,189
to you which one you choose and we are

252
00:12:15,189 --> 00:12:17,589
now on view bindings this what to talk

253
00:12:17,589 --> 00:12:22,269
about because this thing that it's hard

254
00:12:22,269 --> 00:12:22,870
to get it right

255
00:12:22,870 --> 00:12:28,959
don't - uh usually well there is a of

256
00:12:28,959 --> 00:12:30,519
course that there is rocked right now

257
00:12:30,519 --> 00:12:34,389
which only change the things that the

258
00:12:34,389 --> 00:12:36,250
change itself it doesn't render a whole

259
00:12:36,250 --> 00:12:40,120
view but what we just suffer alone is we

260
00:12:40,120 --> 00:12:42,639
have this issue recently about how do

261
00:12:42,639 --> 00:12:46,120
you tell HTML that it should be bind a

262
00:12:46,120 --> 00:12:49,660
bound in specific place so until now we

263
00:12:49,660 --> 00:12:53,529
use the rolls attribute on HTML elements

264
00:12:53,529 --> 00:12:57,339
and someone pointed out that this kind

265
00:12:57,339 --> 00:13:00,189
of exhibition because there are various

266
00:13:00,189 --> 00:13:02,980
Aria roles which are used as a role and

267
00:13:02,980 --> 00:13:06,009
if you keep to use those roles you'll

268
00:13:06,009 --> 00:13:09,009
eventually use role which is reserved

269
00:13:09,009 --> 00:13:11,769
for Aria and you will miss P break X

270
00:13:11,769 --> 00:13:14,490
ability for your for your users so

271
00:13:14,490 --> 00:13:16,660
there's a huge debate

272
00:13:16,660 --> 00:13:19,520
became the ideas like use

273
00:13:19,520 --> 00:13:22,700
the data is data bind data hook letter

274
00:13:22,700 --> 00:13:23,480
action

275
00:13:23,480 --> 00:13:26,090
rel attribute name attribute classes is

276
00:13:26,090 --> 00:13:29,060
like few a few weeks long but in the end

277
00:13:29,060 --> 00:13:32,900
we came we finished with a data hook so

278
00:13:32,900 --> 00:13:36,380
it's it's a way how we use this in HTML

279
00:13:36,380 --> 00:13:40,940
and we have a few few bindings I think

280
00:13:40,940 --> 00:13:45,350
is you can tell which things from model

281
00:13:45,350 --> 00:13:48,170
to use and in which place interview

282
00:13:48,170 --> 00:13:53,330
itself so text binding is using a text

283
00:13:53,330 --> 00:13:55,550
from from the model itself to be placed

284
00:13:55,550 --> 00:13:58,990
in the view class is using a class in

285
00:13:58,990 --> 00:14:04,550
attribute attribute is mapping you just

286
00:14:04,550 --> 00:14:07,340
say which attribute you want to match

287
00:14:07,340 --> 00:14:11,650
with which value from model and it will

288
00:14:11,650 --> 00:14:15,530
just update value are four inputs

289
00:14:15,530 --> 00:14:17,780
boolean plus and boolean attributes are

290
00:14:17,780 --> 00:14:20,450
just your interpolated value of modulus

291
00:14:20,450 --> 00:14:23,000
whether it will return true or false it

292
00:14:23,000 --> 00:14:25,670
will swap those classes or attributes

293
00:14:25,670 --> 00:14:29,720
and toggle and switch are basically the

294
00:14:29,720 --> 00:14:33,500
same but for visibility so if you're for

295
00:14:33,500 --> 00:14:37,640
example model that visible is true they

296
00:14:37,640 --> 00:14:39,710
will be visible if not they will just be

297
00:14:39,710 --> 00:14:43,520
hidden and innerhtml is placing HTML

298
00:14:43,520 --> 00:14:47,780
itself inside inside the element the

299
00:14:47,780 --> 00:14:50,060
thing that i forget to forget it all

300
00:14:50,060 --> 00:14:53,480
about is that in models in an inside

301
00:14:53,480 --> 00:14:57,350
because thanks to registering called all

302
00:14:57,350 --> 00:14:59,240
the data types because if we specify

303
00:14:59,240 --> 00:15:02,300
data type we as I said we create schema

304
00:15:02,300 --> 00:15:05,120
of some kind of some kind of and we are

305
00:15:05,120 --> 00:15:09,460
able to lock the schema by passing allow

306
00:15:09,460 --> 00:15:14,270
our values our values of luck and thanks

307
00:15:14,270 --> 00:15:17,390
to this we are able to listen we're able

308
00:15:17,390 --> 00:15:19,940
to let's say mimic object.observe

309
00:15:19,940 --> 00:15:22,490
because we can use object defined

310
00:15:22,490 --> 00:15:25,610
property which is from its es5 not es6

311
00:15:25,610 --> 00:15:29,420
and we can use either model that age for

312
00:15:29,420 --> 00:15:31,640
example to set this age or model that

313
00:15:31,640 --> 00:15:32,440
set

314
00:15:32,440 --> 00:15:35,320
as a function and no matter which we

315
00:15:35,320 --> 00:15:37,870
will choose it will always trigger

316
00:15:37,870 --> 00:15:40,720
change value because it will be

317
00:15:40,720 --> 00:15:43,690
registering or properties not writing

318
00:15:43,690 --> 00:15:47,650
then is inside an object itself in a

319
00:15:47,650 --> 00:15:50,830
router it's all same router it will just

320
00:15:50,830 --> 00:15:54,600
register your your routes and trigger

321
00:15:54,600 --> 00:15:57,190
functions according T to route your

322
00:15:57,190 --> 00:15:59,440
currently now it will handle back baton

323
00:15:59,440 --> 00:16:02,110
Fe story you can navigate you can

324
00:16:02,110 --> 00:16:05,350
redirect your your users and see and

325
00:16:05,350 --> 00:16:06,670
this is the fun part

326
00:16:06,670 --> 00:16:09,930
I like the most are the mixing so

327
00:16:09,930 --> 00:16:13,030
because the ampersand is so modular you

328
00:16:13,030 --> 00:16:15,940
can we have amber sound plus x10 which

329
00:16:15,940 --> 00:16:19,990
is um which is module for creating other

330
00:16:19,990 --> 00:16:22,180
modules let's let's call it this way

331
00:16:22,180 --> 00:16:25,450
this basically export the function that

332
00:16:25,450 --> 00:16:29,530
lets you chain prototypes of your

333
00:16:29,530 --> 00:16:32,770
subclasses effectivity can create one

334
00:16:32,770 --> 00:16:35,290
small functionality that will mix into

335
00:16:35,290 --> 00:16:37,600
other things for example let's say you

336
00:16:37,600 --> 00:16:40,780
have model which you really like but

337
00:16:40,780 --> 00:16:43,930
you're not using Earth API but real

338
00:16:43,930 --> 00:16:45,910
communication so instead of using a

339
00:16:45,910 --> 00:16:48,220
model which is made of a personal state

340
00:16:48,220 --> 00:16:50,140
and the upper side sink you can use

341
00:16:50,140 --> 00:16:52,390
ampersand State and create your own for

342
00:16:52,390 --> 00:16:55,150
example ampersand real time I think

343
00:16:55,150 --> 00:16:56,500
something like this and you can mix them

344
00:16:56,500 --> 00:16:58,960
and you'll get the same thing as

345
00:16:58,960 --> 00:17:01,390
ampersand model but with a real time

346
00:17:01,390 --> 00:17:03,160
communication and you don't have the

347
00:17:03,160 --> 00:17:05,079
polite

348
00:17:05,079 --> 00:17:08,949
it's very pollute ampersand ampersand

349
00:17:08,949 --> 00:17:11,949
model you can use it in a in the same

350
00:17:11,949 --> 00:17:14,350
way as you did before because basically

351
00:17:14,350 --> 00:17:18,360
you didn't modify the old version and

352
00:17:18,360 --> 00:17:21,040
current mix is our collection res mixes

353
00:17:21,040 --> 00:17:23,160
as I said before it contains all the

354
00:17:23,160 --> 00:17:26,079
persisting functions underscore mixing

355
00:17:26,079 --> 00:17:29,770
with all the own functionality of

356
00:17:29,770 --> 00:17:32,860
underscore don't think which is created

357
00:17:32,860 --> 00:17:36,610
about Phillip it led to this bind

358
00:17:36,610 --> 00:17:39,790
manually automatically a history all the

359
00:17:39,790 --> 00:17:42,730
all the data not by using data hoops and

360
00:17:42,730 --> 00:17:44,870
so on but all double

361
00:17:44,870 --> 00:17:48,020
rockets and it will just render render

362
00:17:48,020 --> 00:17:51,830
the view on its own and see people so

363
00:17:51,830 --> 00:17:53,809
recently started to work on ampersand

364
00:17:53,809 --> 00:17:56,600
react mix in which you can also also

365
00:17:56,600 --> 00:17:59,420
create it's just up to you you can is I

366
00:17:59,420 --> 00:18:01,520
know Amber's on flux mixing or something

367
00:18:01,520 --> 00:18:04,070
like this it's just I feel because you

368
00:18:04,070 --> 00:18:07,880
can create anything from this and last

369
00:18:07,880 --> 00:18:10,540
button please ampersand CLI it's

370
00:18:10,540 --> 00:18:12,980
addition one thing that should help you

371
00:18:12,980 --> 00:18:17,480
create am person apps if you ever use

372
00:18:17,480 --> 00:18:18,830
your money you should probably be

373
00:18:18,830 --> 00:18:21,380
familiar with uh with the concept it

374
00:18:21,380 --> 00:18:24,050
lets you start a new application you can

375
00:18:24,050 --> 00:18:26,809
say name of the application which API

376
00:18:26,809 --> 00:18:29,090
you want to use because we currently

377
00:18:29,090 --> 00:18:34,400
support happy and and Express apps it

378
00:18:34,400 --> 00:18:35,900
will create structure for you and so on

379
00:18:35,900 --> 00:18:38,090
all the configurations you have few

380
00:18:38,090 --> 00:18:40,100
configuration file which you can

381
00:18:40,100 --> 00:18:42,850
configure all your application in 5 mins

382
00:18:42,850 --> 00:18:45,410
you can burn rate form views and models

383
00:18:45,410 --> 00:18:48,830
you know just type ampersand Jen form

384
00:18:48,830 --> 00:18:51,140
and you get your four simple input view

385
00:18:51,140 --> 00:18:53,780
or something like this you can generate

386
00:18:53,780 --> 00:18:57,320
models from JSON if you have already

387
00:18:57,320 --> 00:19:00,080
pre-created API and it's pretty it

388
00:19:00,080 --> 00:19:02,300
wasn't pretty big use no the money will

389
00:19:02,300 --> 00:19:03,830
create all those models you can

390
00:19:03,830 --> 00:19:06,230
basically just send a request get all

391
00:19:06,230 --> 00:19:08,210
the JSON from the server and just place

392
00:19:08,210 --> 00:19:10,460
it in your terminal just just pipe it to

393
00:19:10,460 --> 00:19:12,679
your own personal generator and it will

394
00:19:12,679 --> 00:19:14,780
create Model Model from from this API

395
00:19:14,780 --> 00:19:17,030
and it will offers handle all the data

396
00:19:17,030 --> 00:19:18,800
types it will detect whether it's a

397
00:19:18,800 --> 00:19:22,460
number or boolean or R and so on and it

398
00:19:22,460 --> 00:19:24,679
can occur in form for most if you for

399
00:19:24,679 --> 00:19:26,720
example gonna write model let's say you

400
00:19:26,720 --> 00:19:30,320
have IP I with create user and in a

401
00:19:30,320 --> 00:19:32,540
responsive from create user you get all

402
00:19:32,540 --> 00:19:34,640
the same values as confirmation you can

403
00:19:34,640 --> 00:19:37,520
get this response create create models

404
00:19:37,520 --> 00:19:40,580
using this generator and then use the

405
00:19:40,580 --> 00:19:43,130
same model to create form for creating

406
00:19:43,130 --> 00:19:44,750
your user for example so it's too easy

407
00:19:44,750 --> 00:19:47,120
steps and you have or the create form

408
00:19:47,120 --> 00:19:50,600
and you can configure the code when you

409
00:19:50,600 --> 00:19:52,250
create your application you will get

410
00:19:52,250 --> 00:19:55,160
ampersand RC which you where you can

411
00:19:55,160 --> 00:19:57,550
specify all the default templates all

412
00:19:57,550 --> 00:19:58,960
puffs if you don't do forgetting to

413
00:19:58,960 --> 00:20:02,830
change change something and so on so

414
00:20:02,830 --> 00:20:06,160
this was about amber Sun and now why I

415
00:20:06,160 --> 00:20:08,790
created this and what's her philosophy

416
00:20:08,790 --> 00:20:12,820
Stefan talke Stefan's talk feels really

417
00:20:12,820 --> 00:20:15,940
good because he said we should scratch

418
00:20:15,940 --> 00:20:22,140
or on each and I totally I'm just I

419
00:20:22,140 --> 00:20:26,260
agree in it all because I said to build

420
00:20:26,260 --> 00:20:28,240
great products he want to use them

421
00:20:28,240 --> 00:20:30,730
yourself first so what do you want it it

422
00:20:30,730 --> 00:20:34,600
is there are always different projects

423
00:20:34,600 --> 00:20:36,670
with the different requirements so what

424
00:20:36,670 --> 00:20:41,500
you want to have is just base for let's

425
00:20:41,500 --> 00:20:44,890
say base base stuff base code base that

426
00:20:44,890 --> 00:20:47,230
you want to use and you want only those

427
00:20:47,230 --> 00:20:49,120
small those small parts those small

428
00:20:49,120 --> 00:20:51,190
blocks it's like UNIX tools of you say

429
00:20:51,190 --> 00:20:53,740
says that you should do only one thing

430
00:20:53,740 --> 00:20:56,230
and one thing well this is exactly the

431
00:20:56,230 --> 00:20:59,110
same if you want to use some other block

432
00:20:59,110 --> 00:21:02,050
for the same for the same task you can

433
00:21:02,050 --> 00:21:06,100
do this it's up to you and Henry Carr

434
00:21:06,100 --> 00:21:08,080
who I guess was first creator of

435
00:21:08,080 --> 00:21:09,790
ampersand that the first person who

436
00:21:09,790 --> 00:21:10,960
started this cell yesterday

437
00:21:10,960 --> 00:21:13,060
optimized for change it's the only

438
00:21:13,060 --> 00:21:15,250
constant and I wouldn't say better

439
00:21:15,250 --> 00:21:19,090
because he's basically right he's just

440
00:21:19,090 --> 00:21:21,850
right nothing is nothing nothing is

441
00:21:21,850 --> 00:21:22,950
constant

442
00:21:22,950 --> 00:21:25,570
other than change because everything

443
00:21:25,570 --> 00:21:28,660
will change sooner or later and it's not

444
00:21:28,660 --> 00:21:29,950
about solving a problem is how we

445
00:21:29,950 --> 00:21:31,960
approach it is if you solve a problem

446
00:21:31,960 --> 00:21:35,380
once you are more than ensure that you

447
00:21:35,380 --> 00:21:40,240
will have a slightly different but

448
00:21:40,240 --> 00:21:43,680
Indian the same problems in in your life

449
00:21:43,680 --> 00:21:47,530
as you go on so you had the thing about

450
00:21:47,530 --> 00:21:50,530
the help you think about how you solve

451
00:21:50,530 --> 00:21:52,690
this problem how we approach those

452
00:21:52,690 --> 00:21:54,040
problem not how you solve them because

453
00:21:54,040 --> 00:21:56,170
every solution will be probably

454
00:21:56,170 --> 00:21:58,150
different you have to know the way of

455
00:21:58,150 --> 00:22:01,600
solving those and it's easier to learn

456
00:22:01,600 --> 00:22:04,210
only things you need you know if you get

457
00:22:04,210 --> 00:22:08,410
one huge framework like learning curve

458
00:22:08,410 --> 00:22:11,020
big frame work is like you are here you

459
00:22:11,020 --> 00:22:13,600
know nothing and to go to the top it's

460
00:22:13,600 --> 00:22:16,300
like even straight straight to the top

461
00:22:16,300 --> 00:22:18,160
you know you have to know everything to

462
00:22:18,160 --> 00:22:21,880
even start with basic application where

463
00:22:21,880 --> 00:22:24,670
if you come to the project and you're

464
00:22:24,670 --> 00:22:27,580
asked to fix small bug or something like

465
00:22:27,580 --> 00:22:29,350
this and you know where this bug is but

466
00:22:29,350 --> 00:22:31,150
you know how it's how it works with

467
00:22:31,150 --> 00:22:34,570
other parts if we fuse amber sound you

468
00:22:34,570 --> 00:22:35,950
don't have to know these parts because

469
00:22:35,950 --> 00:22:39,130
this one module which is responsible for

470
00:22:39,130 --> 00:22:41,050
this and if you know it's API which is

471
00:22:41,050 --> 00:22:43,870
probably really really small you can fix

472
00:22:43,870 --> 00:22:45,310
this problem you can change it you can

473
00:22:45,310 --> 00:22:48,690
modify its it's it's not that hard and

474
00:22:48,690 --> 00:22:51,190
now everything is separate come on Jess

475
00:22:51,190 --> 00:22:53,920
model we use browserify for everything

476
00:22:53,920 --> 00:22:55,780
you can use webpack if you want it's up

477
00:22:55,780 --> 00:23:00,790
to you but we keep the same same way for

478
00:23:00,790 --> 00:23:03,430
some same way of doing things for every

479
00:23:03,430 --> 00:23:06,370
module and this way we are constant and

480
00:23:06,370 --> 00:23:08,320
we don't have any surprises if

481
00:23:08,320 --> 00:23:10,870
everything changes it's easy to reuse

482
00:23:10,870 --> 00:23:13,030
our code we can expertly require all the

483
00:23:13,030 --> 00:23:14,080
things

484
00:23:14,080 --> 00:23:16,330
everything is first and NPM it allows us

485
00:23:16,330 --> 00:23:19,840
to create applications so really quick

486
00:23:19,840 --> 00:23:22,690
it's like rapid prototyping if someone

487
00:23:22,690 --> 00:23:23,640
say this way

488
00:23:23,640 --> 00:23:26,260
everything should be focused at and we

489
00:23:26,260 --> 00:23:28,570
are still working on this there are few

490
00:23:28,570 --> 00:23:31,270
pieces that that are not tested but we

491
00:23:31,270 --> 00:23:34,990
will get there and now every every small

492
00:23:34,990 --> 00:23:37,030
module in a person has its own github

493
00:23:37,030 --> 00:23:42,070
repository everything and what this lets

494
00:23:42,070 --> 00:23:46,270
you do is we also had this dissing did

495
00:23:46,270 --> 00:23:46,840
this issue

496
00:23:46,840 --> 00:23:49,660
well nothing she did this case it's

497
00:23:49,660 --> 00:23:52,210
someone came in he wanted to modify one

498
00:23:52,210 --> 00:23:56,230
for small modules and everything had to

499
00:23:56,230 --> 00:23:59,820
do was just fork it change it change

500
00:23:59,820 --> 00:24:02,500
URLs in package a status that's all and

501
00:24:02,500 --> 00:24:05,890
if you for example if you change a model

502
00:24:05,890 --> 00:24:08,800
and something was dependent on it there

503
00:24:08,800 --> 00:24:11,170
is a no problem because you basically

504
00:24:11,170 --> 00:24:13,450
can link them in package JSON and they

505
00:24:13,450 --> 00:24:16,210
all upgrade like like this like you know

506
00:24:16,210 --> 00:24:19,300
nothing happened everything has separate

507
00:24:19,300 --> 00:24:21,720
issues so let's say

508
00:24:21,720 --> 00:24:24,900
have huge team and have 30 40 maybe

509
00:24:24,900 --> 00:24:28,230
modules you can with me that is hard to

510
00:24:28,230 --> 00:24:30,930
maintain them all so what's not good

511
00:24:30,930 --> 00:24:33,690
idea is to separate those small modules

512
00:24:33,690 --> 00:24:36,840
between let's say pairs of people who

513
00:24:36,840 --> 00:24:38,640
can maintain those and thanks to a

514
00:24:38,640 --> 00:24:42,590
separation of the other issues you can

515
00:24:42,590 --> 00:24:45,600
say you can keep saying because if you

516
00:24:45,600 --> 00:24:48,900
see two hundred issues it's not the best

517
00:24:48,900 --> 00:24:51,150
view but if yours if you have them

518
00:24:51,150 --> 00:24:53,760
separated it's much much easier to

519
00:24:53,760 --> 00:24:56,250
handle them and everything is separate

520
00:24:56,250 --> 00:24:59,940
life if you have something that's really

521
00:24:59,940 --> 00:25:01,290
a huge monolithic

522
00:25:01,290 --> 00:25:03,180
it's hard to change things there it's

523
00:25:03,180 --> 00:25:05,070
like working with legacy code you change

524
00:25:05,070 --> 00:25:06,960
one thing and everything can break like

525
00:25:06,960 --> 00:25:10,380
like this you never know why and if you

526
00:25:10,380 --> 00:25:13,130
use do small modules you can basically

527
00:25:13,130 --> 00:25:15,870
bump version every patch you can just

528
00:25:15,870 --> 00:25:18,390
pass version publish it to NPM and

529
00:25:18,390 --> 00:25:20,070
everything everyone is happy because

530
00:25:20,070 --> 00:25:23,550
they simply got the feedback they

531
00:25:23,550 --> 00:25:25,320
instantly get the newer and better

532
00:25:25,320 --> 00:25:29,760
version of this I mean if you if you

533
00:25:29,760 --> 00:25:32,040
would like to do this in the same way

534
00:25:32,040 --> 00:25:36,480
with a with a huge huge player MOOC I

535
00:25:36,480 --> 00:25:39,060
guess you'd run out of version numbers

536
00:25:39,060 --> 00:25:41,330
if you keep two semantic versioning

537
00:25:41,330 --> 00:25:44,460
similar later and as I said everything

538
00:25:44,460 --> 00:25:47,700
do one thing and do it well and I guess

539
00:25:47,700 --> 00:25:49,680
that everyone should keep through those

540
00:25:49,680 --> 00:25:52,670
words because we can see more and more

541
00:25:52,670 --> 00:25:55,710
libraries and frameworks that are so

542
00:25:55,710 --> 00:25:59,430
huge and so difficult to grasp that it's

543
00:25:59,430 --> 00:26:02,280
just too hard for new developers to come

544
00:26:02,280 --> 00:26:04,200
to your project or even to adjust script

545
00:26:04,200 --> 00:26:06,300
word because it's just overwhelming when

546
00:26:06,300 --> 00:26:09,060
they see so much tools so much remote so

547
00:26:09,060 --> 00:26:10,950
much libraries they just don't know

548
00:26:10,950 --> 00:26:13,920
where to put their hands in and last

549
00:26:13,920 --> 00:26:16,260
leverage existing solutions and not

550
00:26:16,260 --> 00:26:17,790
driven the wheel we have things like

551
00:26:17,790 --> 00:26:22,980
Bower and PM come on Jas require if you

552
00:26:22,980 --> 00:26:25,650
have if you have a some kind of problem

553
00:26:25,650 --> 00:26:27,870
probably any kind of problem there is

554
00:26:27,870 --> 00:26:30,840
huge chance that already someone solve

555
00:26:30,840 --> 00:26:33,929
this problem and it's available on NPM

556
00:26:33,929 --> 00:26:36,029
and because we are using browserify and

557
00:26:36,029 --> 00:26:37,649
common J's you can just grab the

558
00:26:37,649 --> 00:26:39,809
solution placing in your cold and he'll

559
00:26:39,809 --> 00:26:43,019
work just like it and because of this we

560
00:26:43,019 --> 00:26:45,539
created this page called tools and

561
00:26:45,539 --> 00:26:50,460
percentages which is H we don't already

562
00:26:50,460 --> 00:26:54,929
chosen by by us solutions for for common

563
00:26:54,929 --> 00:26:56,700
problems if you have something there's

564
00:26:56,700 --> 00:26:59,700
of course suggestion suggest a module

565
00:26:59,700 --> 00:27:02,639
link you can let us know when we will

566
00:27:02,639 --> 00:27:07,230
place this on in this index and this all

567
00:27:07,230 --> 00:27:10,230
had say we are always grateful for all

568
00:27:10,230 --> 00:27:12,509
the contributions if you want to use

569
00:27:12,509 --> 00:27:15,710
ampersand just go to ampersand J is calm

570
00:27:15,710 --> 00:27:18,299
if you want to be a part of a team just

571
00:27:18,299 --> 00:27:20,429
let us know there is huge room for

572
00:27:20,429 --> 00:27:22,440
improvements and we have plenty of space

573
00:27:22,440 --> 00:27:24,659
for new team members you are more than

574
00:27:24,659 --> 00:27:26,130
welcome thank you

575
00:27:26,130 --> 00:27:26,930
[Applause]

576
00:27:26,930 --> 00:27:31,610
[Music]

577
00:27:31,610 --> 00:27:37,210
[Applause]

578
00:27:37,210 --> 00:27:40,860
reject

