1
00:00:01,280 --> 00:00:04,220

so Firefox 45 was I think released in

2
00:00:04,220 --> 00:00:08,710
August of 2016

3
00:00:08,710 --> 00:00:12,620
2015 and we've seen a very steep decline

4
00:00:12,620 --> 00:00:15,710
in the existence of HTTP login and HCP

5
00:00:15,710 --> 00:00:17,840
page loads are also slowly going down

6
00:00:17,840 --> 00:00:21,230
from you know now from initially almost

7
00:00:21,230 --> 00:00:22,970
sixty percent to now a bit under fifty

8
00:00:22,970 --> 00:00:24,560
percent which is really good considering

9
00:00:24,560 --> 00:00:26,269
it's been such a short amount of time

10
00:00:26,269 --> 00:00:30,349
right so what if what's responsible for

11
00:00:30,349 --> 00:00:33,170
this change in my opinion it is first of

12
00:00:33,170 --> 00:00:35,030
all that browsers now start to

13
00:00:35,030 --> 00:00:38,120
aggressively flag insecure sites so if

14
00:00:38,120 --> 00:00:40,430
this is your site you probably don't

15
00:00:40,430 --> 00:00:42,260
want to have that label this will that's

16
00:00:42,260 --> 00:00:44,750
what we currently do well you know that

17
00:00:44,750 --> 00:00:46,280
one thing is what chrome current without

18
00:00:46,280 --> 00:00:47,870
the other thing is what we as Firefox

19
00:00:47,870 --> 00:00:50,570
currently do when a page has a login

20
00:00:50,570 --> 00:00:55,730
field but it's not using HTTPS we're

21
00:00:55,730 --> 00:00:58,039
flagging that because the transmission

22
00:00:58,039 --> 00:01:00,140
of these credentials would be insecure

23
00:01:00,140 --> 00:01:02,600
and so we want to warn the user hey you

24
00:01:02,600 --> 00:01:05,630
know this is not a secure website there

25
00:01:05,630 --> 00:01:07,700
has been a lot of concerns from the web

26
00:01:07,700 --> 00:01:09,409
developer community around these

27
00:01:09,409 --> 00:01:11,540
warnings we have been getting a lot of

28
00:01:11,540 --> 00:01:14,360
box by people saying don't slack my

29
00:01:14,360 --> 00:01:17,210
website as insecure we have our own

30
00:01:17,210 --> 00:01:19,250
security mechanisms we don't rely on

31
00:01:19,250 --> 00:01:25,820
HTTP and I have to say that this is the

32
00:01:25,820 --> 00:01:26,869
only thing that I can do about it like

33
00:01:26,869 --> 00:01:28,640
you know give a talk and tell people you

34
00:01:28,640 --> 00:01:30,829
know it's not that's not true you user

35
00:01:30,829 --> 00:01:32,990
data is exposed if you should spend

36
00:01:32,990 --> 00:01:35,420
anything over HTTP there's no way you

37
00:01:35,420 --> 00:01:37,939
can reliably make it secure there's no

38
00:01:37,939 --> 00:01:39,350
you know no token generation mechanism

39
00:01:39,350 --> 00:01:40,900
something that people from bring up

40
00:01:40,900 --> 00:01:43,670
nothing that you can do to replace the

41
00:01:43,670 --> 00:01:45,549
security mechanisms that HTTP provides

42
00:01:45,549 --> 00:01:48,799
so we kind of had to get a bit more

43
00:01:48,799 --> 00:01:50,540
radical and that tipped off a lot more

44
00:01:50,540 --> 00:01:52,970
people so this is what Firefox 52 now

45
00:01:52,970 --> 00:01:56,060
does when your login pages insecure it

46
00:01:56,060 --> 00:01:58,310
says logins enter here could be

47
00:01:58,310 --> 00:02:01,040
compromised if you focus a login field

48
00:02:01,040 --> 00:02:04,310
or path or a password or a user name

49
00:02:04,310 --> 00:02:08,030
field that's already pretty heavy I

50
00:02:08,030 --> 00:02:09,830
would say and we've gotten a lot of

51
00:02:09,830 --> 00:02:11,810
complaints around that people are really

52
00:02:11,810 --> 00:02:12,710
freaking out

53
00:02:12,710 --> 00:02:16,580
around this and we're not backing off

54
00:02:16,580 --> 00:02:20,330
because as I mentioned so far it's been

55
00:02:20,330 --> 00:02:22,880
pretty successful like the numbers are

56
00:02:22,880 --> 00:02:24,710
dropping and the numbers of insecure

57
00:02:24,710 --> 00:02:27,650
HTTP users are dropping and we're pretty

58
00:02:27,650 --> 00:02:29,750
satisfied another part of the story is

59
00:02:29,750 --> 00:02:35,330
that we now show what we recently

60
00:02:35,330 --> 00:02:36,980
started to show warnings in the

61
00:02:36,980 --> 00:02:38,450
developer console when you're using

62
00:02:38,450 --> 00:02:39,410
these things so if you're a developer

63
00:02:39,410 --> 00:02:42,440
and your website is insecure you get one

64
00:02:42,440 --> 00:02:43,760
of these warnings so for example for

65
00:02:43,760 --> 00:02:45,530
mixed content for insecure passwords for

66
00:02:45,530 --> 00:02:46,940
weak signature algorithm like recently

67
00:02:46,940 --> 00:02:50,600
shot one you get a warning that hey you

68
00:02:50,600 --> 00:02:52,250
know you're using something insecure

69
00:02:52,250 --> 00:02:53,660
please click it and these are the most

70
00:02:53,660 --> 00:02:58,520
popularly clicked links that lead to MDM

71
00:02:58,520 --> 00:03:00,770
and so that people can look up you know

72
00:03:00,770 --> 00:03:04,580
what's wrong on my website and can you

73
00:03:04,580 --> 00:03:06,980
know find dogs how to fix it and you can

74
00:03:06,980 --> 00:03:09,260
see that the most common ones are all

75
00:03:09,260 --> 00:03:12,470
related to HTTPS or you know insecure

76
00:03:12,470 --> 00:03:14,570
HTTP which they're the most those the

77
00:03:14,570 --> 00:03:19,940
top four and so leading people to a

78
00:03:19,940 --> 00:03:21,470
website explaining that they need to

79
00:03:21,470 --> 00:03:23,180
update HTTPS otherwise you know the

80
00:03:23,180 --> 00:03:25,220
content is Borg is really nice we need

81
00:03:25,220 --> 00:03:26,990
to present an alternative or a way to

82
00:03:26,990 --> 00:03:29,330
for people to easily upgrade to HTTPS

83
00:03:29,330 --> 00:03:31,520
without you know paying money that's

84
00:03:31,520 --> 00:03:35,810
what let's encrypt is doing it's getting

85
00:03:35,810 --> 00:03:38,360
a lot easier to obtain free HTTPS

86
00:03:38,360 --> 00:03:40,430
certificates which is something that is

87
00:03:40,430 --> 00:03:43,040
vital for this whole story to work there

88
00:03:43,040 --> 00:03:44,330
are still a lot of shared hosting

89
00:03:44,330 --> 00:03:46,790
providers and stuff where it's not as

90
00:03:46,790 --> 00:03:48,650
easy a good example which is actually

91
00:03:48,650 --> 00:03:50,360
providing my website my personal website

92
00:03:50,360 --> 00:03:55,430
from working is is github pages with

93
00:03:55,430 --> 00:03:58,520
custom domain names so that's that

94
00:03:58,520 --> 00:03:59,720
doesn't work right now which is a shame

95
00:03:59,720 --> 00:04:03,050
but it's getting more more and let's

96
00:04:03,050 --> 00:04:04,280
encrypt is definitely helping with that

97
00:04:04,280 --> 00:04:07,130
there's also clouds there which I wasn't

98
00:04:07,130 --> 00:04:08,480
even sure if I should mention it because

99
00:04:08,480 --> 00:04:10,190
there are a lot of controversies around

100
00:04:10,190 --> 00:04:13,070
cloud fair and how they use or they you

101
00:04:13,070 --> 00:04:16,220
know how they put themselves in front of

102
00:04:16,220 --> 00:04:19,460
your interior page but it's also an

103
00:04:19,460 --> 00:04:21,200
alternative if you can't use like some

104
00:04:21,200 --> 00:04:24,350
fruit for example so all right I'm done

105
00:04:24,350 --> 00:04:25,970
right so this target doesn't really have

106
00:04:25,970 --> 00:04:27,910
a lot of sense I just turn on HDS

107
00:04:27,910 --> 00:04:32,120
there's a lot more to do so you can see

108
00:04:32,120 --> 00:04:34,430
that two of the most popular warnings

109
00:04:34,430 --> 00:04:36,290
are about mixed content what is mixed

110
00:04:36,290 --> 00:04:39,470
content mixed content is basically when

111
00:04:39,470 --> 00:04:41,390
you have a secure page and you're

112
00:04:41,390 --> 00:04:44,150
linking to insecure resources from your

113
00:04:44,150 --> 00:04:47,240
from your secure page so mixed passive

114
00:04:47,240 --> 00:04:48,740
content which I would like to call the

115
00:04:48,740 --> 00:04:51,890
bad kind is when you have an image

116
00:04:51,890 --> 00:04:53,810
resource for example any kind of static

117
00:04:53,810 --> 00:04:55,940
resource that is a link through HTTP

118
00:04:55,940 --> 00:04:58,040
mixed active content is a really bad

119
00:04:58,040 --> 00:05:00,380
kind and that is when you have dynamic

120
00:05:00,380 --> 00:05:03,200
content such as a script that can

121
00:05:03,200 --> 00:05:04,669
actually alter the content of your

122
00:05:04,669 --> 00:05:07,220
website so let's sort of looking at

123
00:05:07,220 --> 00:05:09,110
mixed passive content so mixed passive

124
00:05:09,110 --> 00:05:11,390
content is fine right I mean who cares

125
00:05:11,390 --> 00:05:13,250
if I have an insecure image on my

126
00:05:13,250 --> 00:05:18,760
website what is that so yeah so this is

127
00:05:18,760 --> 00:05:21,800
this is from a talk which a colleague of

128
00:05:21,800 --> 00:05:24,890
mine Lou Crouch recently held and he

129
00:05:24,890 --> 00:05:28,729
wanted to check the the warning that

130
00:05:28,729 --> 00:05:30,830
comes up when you have mixed passive

131
00:05:30,830 --> 00:05:32,960
content on a website and what he

132
00:05:32,960 --> 00:05:35,060
accidentally found and I have to say

133
00:05:35,060 --> 00:05:37,790
that this is basically a a random URL so

134
00:05:37,790 --> 00:05:39,470
it's locked out for security reasons

135
00:05:39,470 --> 00:05:41,600
this is a random URL that he entered and

136
00:05:41,600 --> 00:05:43,430
wanted to check if they have mixed

137
00:05:43,430 --> 00:05:47,330
passive content and this is a major

138
00:05:47,330 --> 00:05:49,700
Internet service another internet

139
00:05:49,700 --> 00:05:51,669
service provider but like a major

140
00:05:51,669 --> 00:05:54,650
internet platform and he found out that

141
00:05:54,650 --> 00:05:59,000
they actually deliver so basically you

142
00:05:59,000 --> 00:06:00,620
actually have access to the cookie

143
00:06:00,620 --> 00:06:05,870
header in there mixed content images

144
00:06:05,870 --> 00:06:07,240
obviously right because the browser

145
00:06:07,240 --> 00:06:09,770
delivers that which is really critical

146
00:06:09,770 --> 00:06:11,060
for their service because you can just

147
00:06:11,060 --> 00:06:12,800
copy the cookie and then just you know

148
00:06:12,800 --> 00:06:16,490
log in as you know being any website

149
00:06:16,490 --> 00:06:19,850
embedding that thing that's kind of yeah

150
00:06:19,850 --> 00:06:23,120
not cool and so be careful with mixed as

151
00:06:23,120 --> 00:06:24,680
a content there's usually not a big

152
00:06:24,680 --> 00:06:28,100
reason to have it like in my experience

153
00:06:28,100 --> 00:06:31,980
it's not it's usually easy to get rid of

154
00:06:31,980 --> 00:06:33,540
that's how we flag makes passive content

155
00:06:33,540 --> 00:06:36,990
the warning so you get a a gray lock

156
00:06:36,990 --> 00:06:40,380
with a yellow icon and you get a warning

157
00:06:40,380 --> 00:06:42,380
in the Euro in the developer console

158
00:06:42,380 --> 00:06:44,430
mixed active content is actually pretty

159
00:06:44,430 --> 00:06:46,950
easy to avoid because browsers block it

160
00:06:46,950 --> 00:06:49,020
by default so you get a green thing

161
00:06:49,020 --> 00:06:52,020
green log and a warning that Firefox

162
00:06:52,020 --> 00:06:53,700
developer edition for example has both

163
00:06:53,700 --> 00:06:57,090
parts of this page a good way to

164
00:06:57,090 --> 00:06:58,800
differentiate between mixed answer

165
00:06:58,800 --> 00:07:00,810
convicts active content is if you ask

166
00:07:00,810 --> 00:07:02,490
yourself a question can it alter the Dom

167
00:07:02,490 --> 00:07:05,910
if yes then it makes active content the

168
00:07:05,910 --> 00:07:07,770
really bad kind but that will be blocked

169
00:07:07,770 --> 00:07:13,740
anyway so just to summarize please move

170
00:07:13,740 --> 00:07:15,390
to HTTPS I'm sure a lot of you already

171
00:07:15,390 --> 00:07:17,010
have moved to htps but if you have a

172
00:07:17,010 --> 00:07:18,510
page or something you know some

173
00:07:18,510 --> 00:07:20,370
resources you're not sure should I move

174
00:07:20,370 --> 00:07:23,760
it to HTTPS just just do HTTP is for

175
00:07:23,760 --> 00:07:25,170
dinosaurs and you know what happened to

176
00:07:25,170 --> 00:07:31,380
dinosaurs they became cute conics right

177
00:07:31,380 --> 00:07:33,780
so assume you have moved to HTTPS you

178
00:07:33,780 --> 00:07:35,700
should consider turning on the so-called

179
00:07:35,700 --> 00:07:40,170
HSTs header which is HTTP strict

180
00:07:40,170 --> 00:07:43,140
Transport Security that basically says

181
00:07:43,140 --> 00:07:45,150
all right for that length of time

182
00:07:45,150 --> 00:07:47,940
I want my website to only connect

183
00:07:47,940 --> 00:07:50,520
through HTTP or I want the browser to

184
00:07:50,520 --> 00:07:53,070
only connect to my website through HTTPS

185
00:07:53,070 --> 00:07:54,600
so if somebody for example types

186
00:07:54,600 --> 00:07:57,690
explicitly types HTTP example.com in

187
00:07:57,690 --> 00:08:00,420
their url bar they will still get routed

188
00:08:00,420 --> 00:08:02,220
to the HTTPS version because you said

189
00:08:02,220 --> 00:08:06,060
really I want this website to be routed

190
00:08:06,060 --> 00:08:08,580
through HTTPS and there's also for

191
00:08:08,580 --> 00:08:09,810
example an option to include subdomains

192
00:08:09,810 --> 00:08:14,090
and that's a pretty good reasonable

193
00:08:14,090 --> 00:08:16,890
defense against an attack called SSL

194
00:08:16,890 --> 00:08:19,700
strip or a tool called SSL strip and

195
00:08:19,700 --> 00:08:22,080
which basically exploits the fact that

196
00:08:22,080 --> 00:08:24,570
you make a single HTTP connections to

197
00:08:24,570 --> 00:08:29,730
override all your work and yeah that is

198
00:08:29,730 --> 00:08:31,110
that is pretty dangerous and that's

199
00:08:31,110 --> 00:08:32,969
pretty good security mechanism against

200
00:08:32,969 --> 00:08:36,560
it and right

201
00:08:36,560 --> 00:08:40,099
we've made our connection secure how do

202
00:08:40,099 --> 00:08:42,259
we secure a web content so this is just

203
00:08:42,259 --> 00:08:44,509
a collection of techniques that modern

204
00:08:44,509 --> 00:08:47,329
browsers offer you one thing is the same

205
00:08:47,329 --> 00:08:48,680
origin policy it's not really a

206
00:08:48,680 --> 00:08:50,629
technique for you but it's rather

207
00:08:50,629 --> 00:08:51,980
something that the browser automatically

208
00:08:51,980 --> 00:08:54,649
applies so whenever you make a request

209
00:08:54,649 --> 00:08:57,410
to something from from one domain to

210
00:08:57,410 --> 00:09:00,199
another domain that you don't own then

211
00:09:00,199 --> 00:09:02,689
it says or doesn't process not currently

212
00:09:02,689 --> 00:09:05,300
navigated to then it says eh sorry we

213
00:09:05,300 --> 00:09:09,139
can't do that this is also yeah showing

214
00:09:09,139 --> 00:09:11,990
this nice little graphics basically you

215
00:09:11,990 --> 00:09:14,149
connect to one side side a.com and then

216
00:09:14,149 --> 00:09:16,579
cite a.com in your browser wants to make

217
00:09:16,579 --> 00:09:20,809
an XML HTTP request to site be calm but

218
00:09:20,809 --> 00:09:23,209
that doesn't work so that's pretty

219
00:09:23,209 --> 00:09:26,660
annoying and but it has its uses

220
00:09:26,660 --> 00:09:30,259
so what affected by same origin policy

221
00:09:30,259 --> 00:09:32,689
why am I telling this so xhr requests

222
00:09:32,689 --> 00:09:34,610
are covered window the opener windows

223
00:09:34,610 --> 00:09:36,230
are also covered although these are not

224
00:09:36,230 --> 00:09:38,629
weak fests they're technically access to

225
00:09:38,629 --> 00:09:40,309
a different page so in case you don't

226
00:09:40,309 --> 00:09:41,829
know window open or window door current

227
00:09:41,829 --> 00:09:44,089
these are basically objects that you

228
00:09:44,089 --> 00:09:45,350
receive in a website accessible

229
00:09:45,350 --> 00:09:48,259
accessible by j/s when you were opened

230
00:09:48,259 --> 00:09:51,290
by another website that means if you are

231
00:09:51,290 --> 00:09:54,980
in an iframe and if you have been opened

232
00:09:54,980 --> 00:09:56,480
by a different tab you have access to

233
00:09:56,480 --> 00:10:00,740
these things but only or the access is

234
00:10:00,740 --> 00:10:04,100
restricted if the origin of the other

235
00:10:04,100 --> 00:10:07,459
page is different than your origin which

236
00:10:07,459 --> 00:10:12,949
is also a good thing however there's one

237
00:10:12,949 --> 00:10:15,800
thing that is not restricted by by same

238
00:10:15,800 --> 00:10:17,120
origin policy and that is for example

239
00:10:17,120 --> 00:10:20,300
forum with post method why is that lower

240
00:10:20,300 --> 00:10:23,079
case anyway so it's not protected and

241
00:10:23,079 --> 00:10:25,699
that means you have to apply your own

242
00:10:25,699 --> 00:10:27,230
security mechanisms to not fall victim

243
00:10:27,230 --> 00:10:30,769
to basically websites embedding post

244
00:10:30,769 --> 00:10:32,660
forms to your website they're just

245
00:10:32,660 --> 00:10:36,019
randomly changing things or maliciously

246
00:10:36,019 --> 00:10:37,309
changing things randomly would be nice

247
00:10:37,309 --> 00:10:41,149
right so there's a mechanism called POF

248
00:10:41,149 --> 00:10:43,429
tokens for that and also more stuff I

249
00:10:43,429 --> 00:10:44,370
didn't have

250
00:10:44,370 --> 00:10:47,399
on this page I will edit in the slides

251
00:10:47,399 --> 00:10:48,420
that are available online

252
00:10:48,420 --> 00:10:50,610
so should definitely read up on theater

253
00:10:50,610 --> 00:10:54,240
protection if you have websites that or

254
00:10:54,240 --> 00:10:58,829
api's that accept posts don't rely on

255
00:10:58,829 --> 00:11:02,249
copies that that doesn't work it's very

256
00:11:02,249 --> 00:11:04,529
easy to use to say okay

257
00:11:04,529 --> 00:11:07,439
allow everything you know I'm in I'm in

258
00:11:07,439 --> 00:11:09,509
debug mode I don't I don't care I'm just

259
00:11:09,509 --> 00:11:11,009
you know this is this is not production

260
00:11:11,009 --> 00:11:13,379
and then at some point it just rolls in

261
00:11:13,379 --> 00:11:14,699
production because it works right and

262
00:11:14,699 --> 00:11:17,339
nobody really cares about it and so

263
00:11:17,339 --> 00:11:19,620
please think about this from day one or

264
00:11:19,620 --> 00:11:22,290
make a big to-do or something that this

265
00:11:22,290 --> 00:11:24,899
is not a good thing if you aren't on a

266
00:11:24,899 --> 00:11:26,459
public API and even then you should you

267
00:11:26,459 --> 00:11:29,129
know consider the options that X control

268
00:11:29,129 --> 00:11:32,759
are in office you oh yeah if you don't

269
00:11:32,759 --> 00:11:34,170
know this is this is a header that you

270
00:11:34,170 --> 00:11:36,360
can set in your request in your response

271
00:11:36,360 --> 00:11:39,629
to basically say which origin is allowed

272
00:11:39,629 --> 00:11:45,389
to access this resource right so another

273
00:11:45,389 --> 00:11:47,790
thing that you could oh that's really

274
00:11:47,790 --> 00:11:49,860
dangerous on the web is XSS attacks

275
00:11:49,860 --> 00:11:51,839
access s is basically cross-site

276
00:11:51,839 --> 00:11:54,509
scripting so an attacker inject

277
00:11:54,509 --> 00:11:57,870
something in your page and dad is not

278
00:11:57,870 --> 00:12:00,480
properly sanitized and then that

279
00:12:00,480 --> 00:12:02,220
contains like a script that can run and

280
00:12:02,220 --> 00:12:03,870
it completely wrecks your website and

281
00:12:03,870 --> 00:12:06,389
then if you're really unlucky persistent

282
00:12:06,389 --> 00:12:07,889
in some sort of database of yours and

283
00:12:07,889 --> 00:12:09,749
then every one of your users sees it

284
00:12:09,749 --> 00:12:14,490
which is really bad a good general

285
00:12:14,490 --> 00:12:16,499
protection against this is called CSP

286
00:12:16,499 --> 00:12:19,350
now I've heard a lot from people at CSP

287
00:12:19,350 --> 00:12:21,240
is like I had on UCSB that's overkill

288
00:12:21,240 --> 00:12:23,519
and I'm I'm not sure

289
00:12:23,519 --> 00:12:25,410
CSP in my opinion is a pretty good

290
00:12:25,410 --> 00:12:28,379
technology it's just kind of a set of

291
00:12:28,379 --> 00:12:30,749
rules that define how a site may load

292
00:12:30,749 --> 00:12:33,389
resources you can set it as a header in

293
00:12:33,389 --> 00:12:35,579
in on the server side but since we're

294
00:12:35,579 --> 00:12:37,110
talking about dais I just thought I'd

295
00:12:37,110 --> 00:12:38,879
show you how to embed it as a meta tag

296
00:12:38,879 --> 00:12:41,850
and that's how you do it basically you

297
00:12:41,850 --> 00:12:43,439
have this meter tag with the boilerplate

298
00:12:43,439 --> 00:12:45,899
and then the content attribute is the

299
00:12:45,899 --> 00:12:48,779
important thing so here for example you

300
00:12:48,779 --> 00:12:51,990
say that by default is the required

301
00:12:51,990 --> 00:12:54,089
attribute default source all resources

302
00:12:54,089 --> 00:12:55,560
should only be loaded from this

303
00:12:55,560 --> 00:12:59,220
named images may be loaded from HTTP

304
00:12:59,220 --> 00:13:02,279
domains and please don't use iframes

305
00:13:02,279 --> 00:13:05,670
that's basically what you're saying cool

306
00:13:05,670 --> 00:13:08,250
side effects of content security policy

307
00:13:08,250 --> 00:13:12,390
is that it disables inline scripts by

308
00:13:12,390 --> 00:13:14,190
default unless you're specifically an

309
00:13:14,190 --> 00:13:16,950
asset which is really bad idea so any

310
00:13:16,950 --> 00:13:19,050
kind of XSS that injects an inline

311
00:13:19,050 --> 00:13:23,580
script is not really well it has a hard

312
00:13:23,580 --> 00:13:26,010
time because it can either load an

313
00:13:26,010 --> 00:13:27,420
external resource unless you made a big

314
00:13:27,420 --> 00:13:28,850
mistake in your content security policy

315
00:13:28,850 --> 00:13:34,020
nor can it execute JavaScript there's a

316
00:13:34,020 --> 00:13:35,820
cool way to test what content security

317
00:13:35,820 --> 00:13:38,370
policy would break on your page if you

318
00:13:38,370 --> 00:13:40,680
said the content security policy report

319
00:13:40,680 --> 00:13:42,839
only header instead which basically

320
00:13:42,839 --> 00:13:44,460
allows you to test it without breaking

321
00:13:44,460 --> 00:13:46,320
things by just logging everything that

322
00:13:46,320 --> 00:13:48,600
you would that constitute a policy would

323
00:13:48,600 --> 00:13:52,460
have blocked if it were actually running

324
00:13:52,460 --> 00:13:56,010
in related to that is another really

325
00:13:56,010 --> 00:13:58,200
cool feature of CSP it allows you to

326
00:13:58,200 --> 00:14:01,200
record violations of the content

327
00:14:01,200 --> 00:14:03,839
security policy so if you specify a

328
00:14:03,839 --> 00:14:05,910
report URI in your content security

329
00:14:05,910 --> 00:14:08,970
policy you can set a URL where we just

330
00:14:08,970 --> 00:14:12,060
send all violations - which is my

331
00:14:12,060 --> 00:14:14,130
personal opinion really cool and there's

332
00:14:14,130 --> 00:14:16,020
even a service on HUD that supports just

333
00:14:16,020 --> 00:14:17,940
you know you signing up and getting all

334
00:14:17,940 --> 00:14:19,620
these reports called report your ID at

335
00:14:19,620 --> 00:14:21,990
i/o which which is also awesome because

336
00:14:21,990 --> 00:14:23,910
you can you know you can even have run

337
00:14:23,910 --> 00:14:25,560
in all report only mode and just you

338
00:14:25,560 --> 00:14:27,089
know check what would have been violated

339
00:14:27,089 --> 00:14:28,680
because website can be pretty complex so

340
00:14:28,680 --> 00:14:33,450
I can understand that how can I make

341
00:14:33,450 --> 00:14:34,770
sure that the third-party content I

342
00:14:34,770 --> 00:14:35,970
receive has not been changed on the

343
00:14:35,970 --> 00:14:39,390
server this is a common problem with if

344
00:14:39,390 --> 00:14:41,130
you have a CDN for example well it's not

345
00:14:41,130 --> 00:14:42,209
a common problem because most of the

346
00:14:42,209 --> 00:14:43,290
ends are pretty secure but it's a

347
00:14:43,290 --> 00:14:45,750
problem that many people think about

348
00:14:45,750 --> 00:14:48,990
when they use CDN so how can I actually

349
00:14:48,990 --> 00:14:52,260
trust that the CDN is delivering me the

350
00:14:52,260 --> 00:14:54,870
right script the right content I just

351
00:14:54,870 --> 00:14:56,670
you know I'm not downloading jquery from

352
00:14:56,670 --> 00:14:58,050
one of these popular to the ends but

353
00:14:58,050 --> 00:15:00,990
what happens to the internet if that CDN

354
00:15:00,990 --> 00:15:03,089
is compromised and jquery includes

355
00:15:03,089 --> 00:15:04,050
malicious code now

356
00:15:04,050 --> 00:15:06,660
that'd be horrible that's why a lot of

357
00:15:06,660 --> 00:15:09,160
CND's on their home pages now

358
00:15:09,160 --> 00:15:10,930
if you want to include things with a

359
00:15:10,930 --> 00:15:13,240
script tag now include this integrity

360
00:15:13,240 --> 00:15:15,879
attribute by default the integrity

361
00:15:15,879 --> 00:15:18,339
attribute on a script allows you to

362
00:15:18,339 --> 00:15:21,730
specify hey the the original source that

363
00:15:21,730 --> 00:15:24,480
I looked at had this hash digest

364
00:15:24,480 --> 00:15:28,779
basically you know this hash and I want

365
00:15:28,779 --> 00:15:31,209
to always receive content with this hash

366
00:15:31,209 --> 00:15:34,990
in the future if it does match your

367
00:15:34,990 --> 00:15:37,540
browser please don't allow it that's a

368
00:15:37,540 --> 00:15:40,629
pretty cool technology to prevent it

369
00:15:40,629 --> 00:15:42,069
doesn't have to be the city and even but

370
00:15:42,069 --> 00:15:44,680
like prevent any kind of tampering with

371
00:15:44,680 --> 00:15:46,629
the original source that you were

372
00:15:46,629 --> 00:15:48,879
downloading

373
00:15:48,879 --> 00:15:51,610
yeah the cross-origin thing is that

374
00:15:51,610 --> 00:15:53,800
basically that's a course attribute for

375
00:15:53,800 --> 00:15:57,970
for scripts for script tags and there's

376
00:15:57,970 --> 00:16:00,879
even a cool website called as RI hash

377
00:16:00,879 --> 00:16:02,290
the rogue which you can just use to

378
00:16:02,290 --> 00:16:03,819
generate the hash easily we don't even

379
00:16:03,819 --> 00:16:05,829
have to like go into the command line or

380
00:16:05,829 --> 00:16:11,500
anything okay so we've made our web

381
00:16:11,500 --> 00:16:15,639
content secure let's go another step up

382
00:16:15,639 --> 00:16:18,430
and talk about securing access to

383
00:16:18,430 --> 00:16:21,420
privileged device api's which is a

384
00:16:21,420 --> 00:16:24,269
relatively new thing I would say there's

385
00:16:24,269 --> 00:16:27,880
only a couple of AP is right now third

386
00:16:27,880 --> 00:16:30,279
or you know device storage there's some

387
00:16:30,279 --> 00:16:33,069
geolocation web notifications microphone

388
00:16:33,069 --> 00:16:36,310
camera pointer log and the screen

389
00:16:36,310 --> 00:16:38,860
sharing sounds like a lot but if you

390
00:16:38,860 --> 00:16:40,120
imagine the possibilities that devices

391
00:16:40,120 --> 00:16:41,620
like you know your computer or your

392
00:16:41,620 --> 00:16:43,360
phone have it's still you know still

393
00:16:43,360 --> 00:16:45,160
there's still a lot to add we could you

394
00:16:45,160 --> 00:16:47,800
know have raw TCP sockets bluetooth USB

395
00:16:47,800 --> 00:16:52,410
whatever all these things sound pretty

396
00:16:52,410 --> 00:16:56,100
dangerous to just expose by default like

397
00:16:56,100 --> 00:16:58,329
you know if you just give a website

398
00:16:58,329 --> 00:17:00,610
you're you know default permission to

399
00:17:00,610 --> 00:17:03,399
access the camera for for any user that

400
00:17:03,399 --> 00:17:05,350
that's just really bad because you know

401
00:17:05,350 --> 00:17:07,809
you could just record anyone without

402
00:17:07,809 --> 00:17:10,959
them really having a choice about it so

403
00:17:10,959 --> 00:17:13,360
we need some kind of permission system

404
00:17:13,360 --> 00:17:17,049
for the web to allow users to have a

405
00:17:17,049 --> 00:17:19,059
choice whether they want the website to

406
00:17:19,059 --> 00:17:20,659
be able to

407
00:17:20,659 --> 00:17:22,309
athletics is to the privileged API or

408
00:17:22,309 --> 00:17:26,689
not unfortunately so this is something

409
00:17:26,689 --> 00:17:28,339
that my team has worked on recently and

410
00:17:28,339 --> 00:17:31,519
we found that the web platform isn't

411
00:17:31,519 --> 00:17:34,009
really it wasn't really built with the

412
00:17:34,009 --> 00:17:35,239
permission system of mine or wasn't

413
00:17:35,239 --> 00:17:38,029
really ever build with the fact in mind

414
00:17:38,029 --> 00:17:40,879
that you can easily get access to like a

415
00:17:40,879 --> 00:17:43,009
lot of limited technologies that are

416
00:17:43,009 --> 00:17:46,580
only that can be very detrimental to the

417
00:17:46,580 --> 00:17:49,609
user privacy and security and that kind

418
00:17:49,609 --> 00:17:51,979
of mirrors in how the spec is written

419
00:17:51,979 --> 00:17:54,499
usually so it says user agent must

420
00:17:54,499 --> 00:17:57,200
acquire permissions through a user

421
00:17:57,200 --> 00:18:00,409
interface thank you that's very helpful

422
00:18:00,409 --> 00:18:06,109
and it's it's not really expect out how

423
00:18:06,109 --> 00:18:07,669
the permission the whole permission

424
00:18:07,669 --> 00:18:09,529
thing works so there are different ways

425
00:18:09,529 --> 00:18:11,210
for example to get permissions for

426
00:18:11,210 --> 00:18:15,169
different technologies you can you can

427
00:18:15,169 --> 00:18:19,309
get a camera or video that's the same

428
00:18:19,309 --> 00:18:21,349
thing camera or audio or screen share

429
00:18:21,349 --> 00:18:22,909
permissions by calling navigator dot

430
00:18:22,909 --> 00:18:24,799
media devices get user media and just

431
00:18:24,799 --> 00:18:26,029
you know specifying what you want to

432
00:18:26,029 --> 00:18:28,820
have this has lots of options and then

433
00:18:28,820 --> 00:18:30,619
that returns a promise and when the user

434
00:18:30,619 --> 00:18:32,899
allows the permission you get a promise

435
00:18:32,899 --> 00:18:35,659
back what the promise will not reject it

436
00:18:35,659 --> 00:18:38,960
and then fortifications that's a compute

437
00:18:38,960 --> 00:18:40,009
of a thing right so you call

438
00:18:40,009 --> 00:18:41,779
notification dot because permission and

439
00:18:41,779 --> 00:18:43,960
then again that's a promise and

440
00:18:43,960 --> 00:18:47,359
geolocation doesn't even take promise or

441
00:18:47,359 --> 00:18:48,859
doesn't even return a promise but it

442
00:18:48,859 --> 00:18:50,690
just has a callback function which you

443
00:18:50,690 --> 00:18:53,090
could pass and then you just you know

444
00:18:53,090 --> 00:18:56,570
get if there is a if the user has said

445
00:18:56,570 --> 00:18:58,659
okay the website can have my geolocation

446
00:18:58,659 --> 00:19:01,399
it's inconsistent but that's not even

447
00:19:01,399 --> 00:19:03,739
even the worst part of it is the worst

448
00:19:03,739 --> 00:19:05,299
part is actually that there's not a

449
00:19:05,299 --> 00:19:08,779
consistent API there just isn't to get

450
00:19:08,779 --> 00:19:11,359
information about whether you already

451
00:19:11,359 --> 00:19:13,999
have permission or not whether you saw

452
00:19:13,999 --> 00:19:16,279
present I think for geolocation there's

453
00:19:16,279 --> 00:19:18,559
no way to do that right now except using

454
00:19:18,559 --> 00:19:20,419
the permissions API which is like a

455
00:19:20,419 --> 00:19:22,129
draft that is only implemented by

456
00:19:22,129 --> 00:19:25,549
Firefox and it was at some point

457
00:19:25,549 --> 00:19:27,109
implement by Chrome but I'm not sure if

458
00:19:27,109 --> 00:19:28,989
a folder or not because it's not very

459
00:19:28,989 --> 00:19:31,159
popular it's not really gaining traction

460
00:19:31,159 --> 00:19:33,440
which is a bit of a

461
00:19:33,440 --> 00:19:35,120
and something that we as browsers I

462
00:19:35,120 --> 00:19:39,860
think should work on so also the the UI

463
00:19:39,860 --> 00:19:42,080
for it is also kind of different and so

464
00:19:42,080 --> 00:19:43,910
this excellent thing that we worked on

465
00:19:43,910 --> 00:19:47,210
recently to get Firefox in line with the

466
00:19:47,210 --> 00:19:49,970
other browsers in terms of UI so if you

467
00:19:49,970 --> 00:19:52,550
as a website request permission right

468
00:19:52,550 --> 00:19:56,000
now expect to have your users expect

469
00:19:56,000 --> 00:19:57,880
your users to have really different

470
00:19:57,880 --> 00:20:02,110
experiences around different browsers so

471
00:20:02,110 --> 00:20:04,430
currently this is actually not accurate

472
00:20:04,430 --> 00:20:06,530
for the like the screen shows on the

473
00:20:06,530 --> 00:20:08,360
very left the the screen shows for

474
00:20:08,360 --> 00:20:10,460
firefox and that's actually not accurate

475
00:20:10,460 --> 00:20:12,650
right now for 61 that's coming in 50

476
00:20:12,650 --> 00:20:14,810
then for 52 that coming in 53 which is

477
00:20:14,810 --> 00:20:17,570
out in a couple of weeks and the old

478
00:20:17,570 --> 00:20:21,050
version was for example not model so we

479
00:20:21,050 --> 00:20:24,200
converged them to be all modal and that

480
00:20:24,200 --> 00:20:25,760
the user can't dismiss them and in the

481
00:20:25,760 --> 00:20:27,080
old firefox you could dismiss it and

482
00:20:27,080 --> 00:20:29,090
then the website which is forever wait

483
00:20:29,090 --> 00:20:31,340
on the callback or the other other

484
00:20:31,340 --> 00:20:34,610
promise to arrive and not at any point

485
00:20:34,610 --> 00:20:35,870
get a reject the promise of the user

486
00:20:35,870 --> 00:20:40,130
just dismissed it it's it's very

487
00:20:40,130 --> 00:20:43,160
different around remembering permission

488
00:20:43,160 --> 00:20:44,810
so you have to be really careful if you

489
00:20:44,810 --> 00:20:48,350
request information that it's a pretty

490
00:20:48,350 --> 00:20:49,820
good permission request because most

491
00:20:49,820 --> 00:20:51,800
browsers are pretty strict about if you

492
00:20:51,800 --> 00:20:53,860
can ask a second time

493
00:20:53,860 --> 00:20:56,000
Firefox has the concept of temporary

494
00:20:56,000 --> 00:21:00,620
permissions now which basically blocks a

495
00:21:00,620 --> 00:21:03,650
permission for the duration of the tap

496
00:21:03,650 --> 00:21:06,590
lifetime until you navigate away so that

497
00:21:06,590 --> 00:21:09,380
websites don't continually spam with a

498
00:21:09,380 --> 00:21:10,730
permission request hey you sure you

499
00:21:10,730 --> 00:21:11,990
don't want to get notifications okay you

500
00:21:11,990 --> 00:21:16,340
said no again please please and Safari

501
00:21:16,340 --> 00:21:18,860
and chrome are for me personally a bit

502
00:21:18,860 --> 00:21:20,570
harder to understand but they do similar

503
00:21:20,570 --> 00:21:23,360
things like they if you continually ask

504
00:21:23,360 --> 00:21:25,730
for permission it doesn't work like you

505
00:21:25,730 --> 00:21:26,870
can't just spam the user with

506
00:21:26,870 --> 00:21:29,240
permissions which is a good thing

507
00:21:29,240 --> 00:21:32,210
because permissions have been pretty

508
00:21:32,210 --> 00:21:36,380
annoying recently so there are the

509
00:21:36,380 --> 00:21:37,670
features that are exposed to permissions

510
00:21:37,670 --> 00:21:38,720
are super powerful

511
00:21:38,720 --> 00:21:41,060
that's why malicious websites have a big

512
00:21:41,060 --> 00:21:43,750
interest in getting these permission

513
00:21:43,750 --> 00:21:47,710
and are employing tactics to basically

514
00:21:47,710 --> 00:21:50,169
get the permission from the user

515
00:21:50,169 --> 00:21:52,330
eventually by just nagging them or

516
00:21:52,330 --> 00:21:54,070
through tricking them into clicking it

517
00:21:54,070 --> 00:21:56,590
so one example of this is if you have

518
00:21:56,590 --> 00:21:59,140
such a permission problems a website and

519
00:21:59,140 --> 00:22:04,240
hire folks used to spawn a window on top

520
00:22:04,240 --> 00:22:07,090
of the permission and have a click

521
00:22:07,090 --> 00:22:09,100
target approximately whether your K

522
00:22:09,100 --> 00:22:10,690
button is that that actually happened

523
00:22:10,690 --> 00:22:13,120
and then when the user hubber did it

524
00:22:13,120 --> 00:22:16,240
went away and then you I don't know some

525
00:22:16,240 --> 00:22:18,070
people probably instinctively clicked it

526
00:22:18,070 --> 00:22:19,240
and then they granted the permission and

527
00:22:19,240 --> 00:22:20,799
then they found of geolocation I don't

528
00:22:20,799 --> 00:22:24,220
know why why the website was doing that

529
00:22:24,220 --> 00:22:26,169
but we had to implement the fix that

530
00:22:26,169 --> 00:22:27,640
basically as soon as the window is

531
00:22:27,640 --> 00:22:29,919
focused the window that sponsor

532
00:22:29,919 --> 00:22:31,750
permission prompt is focused the

533
00:22:31,750 --> 00:22:33,789
permission prompt can't be clicked for

534
00:22:33,789 --> 00:22:37,330
like two seconds or something so there

535
00:22:37,330 --> 00:22:41,200
are a lot of abusive permission costs

536
00:22:41,200 --> 00:22:43,659
and that's why browsers will start to

537
00:22:43,659 --> 00:22:45,309
penalize intrusive and surprising

538
00:22:45,309 --> 00:22:47,799
permission problems so chromium has an

539
00:22:47,799 --> 00:22:51,610
intent to implement and I think that

540
00:22:51,610 --> 00:22:53,380
that's linked to intend to prove and

541
00:22:53,380 --> 00:22:55,809
blocking permissions after you denied

542
00:22:55,809 --> 00:22:57,610
for the third time completely like

543
00:22:57,610 --> 00:23:00,760
permanently for your website and the

544
00:23:00,760 --> 00:23:02,470
link bug that is linked there from

545
00:23:02,470 --> 00:23:05,049
Firefox is the the concept of

546
00:23:05,049 --> 00:23:07,059
implementing temporary permissions to

547
00:23:07,059 --> 00:23:10,809
vlog when you've already said no so this

548
00:23:10,809 --> 00:23:12,309
is a really bad example just to give you

549
00:23:12,309 --> 00:23:13,659
a really bad example of you know how you

550
00:23:13,659 --> 00:23:16,570
shouldn't do things this is basically

551
00:23:16,570 --> 00:23:19,480
t-mobile the t-mobile home page which as

552
00:23:19,480 --> 00:23:22,510
soon as you browse it offers you hey Ken

553
00:23:22,510 --> 00:23:24,360
t-mobile come access your location

554
00:23:24,360 --> 00:23:26,679
you're like I think they use it for

555
00:23:26,679 --> 00:23:28,480
their store search or something but

556
00:23:28,480 --> 00:23:31,330
you're like why why would you do that

557
00:23:31,330 --> 00:23:34,270
and it's pretty obvious that most users

558
00:23:34,270 --> 00:23:38,230
will either say no or will be confused

559
00:23:38,230 --> 00:23:39,820
and say yes something which is also not

560
00:23:39,820 --> 00:23:43,179
something that we want so there is work

561
00:23:43,179 --> 00:23:45,940
to prevent this stuff ongoing which

562
00:23:45,940 --> 00:23:49,059
would probably look like following if a

563
00:23:49,059 --> 00:23:51,789
user did not cause an action for example

564
00:23:51,789 --> 00:23:53,130
click a button

565
00:23:53,130 --> 00:23:56,250
you may not on the permission prompts so

566
00:23:56,250 --> 00:23:59,370
we call it is handling user input

567
00:23:59,370 --> 00:24:03,210
basically that prevents spawning things

568
00:24:03,210 --> 00:24:05,060
right away and it also prevents spawning

569
00:24:05,060 --> 00:24:07,170
without any user interaction it's only

570
00:24:07,170 --> 00:24:11,820
you know it's a limited kind of check

571
00:24:11,820 --> 00:24:14,100
but at least you can prevent this from

572
00:24:14,100 --> 00:24:20,730
happening so a good technologies

573
00:24:20,730 --> 00:24:24,500
to pre prompt we pumped give the user

574
00:24:24,500 --> 00:24:28,320
context it tells them you know hey

575
00:24:28,320 --> 00:24:30,780
here's this message but we would really

576
00:24:30,780 --> 00:24:32,340
like to be able to alert you in the

577
00:24:32,340 --> 00:24:33,990
future when you receive more messages

578
00:24:33,990 --> 00:24:36,390
would you like to us to be able to

579
00:24:36,390 --> 00:24:40,230
notify you on your desktop whenever your

580
00:24:40,230 --> 00:24:41,880
browser's minimize or close or whatever

581
00:24:41,880 --> 00:24:45,810
and the user then make much more able to

582
00:24:45,810 --> 00:24:47,580
make a conscious choice about allowing

583
00:24:47,580 --> 00:24:51,630
or not allowing the permission prompt so

584
00:24:51,630 --> 00:24:53,520
this is a good example slack I think

585
00:24:53,520 --> 00:24:55,380
it's a pretty good examples slack says

586
00:24:55,380 --> 00:24:56,730
you know slack needs to Commission to

587
00:24:56,730 --> 00:24:58,170
enable there some notifications if you

588
00:24:58,170 --> 00:24:59,520
click the X they don't show this thing

589
00:24:59,520 --> 00:25:01,410
again if you click on enable desktop

590
00:25:01,410 --> 00:25:02,910
notifications they show the permission

591
00:25:02,910 --> 00:25:05,430
prompt or they ask the browser to show

592
00:25:05,430 --> 00:25:08,760
the permission from folder and another

593
00:25:08,760 --> 00:25:10,890
good example is whatsapp web it's they

594
00:25:10,890 --> 00:25:12,690
do that in a similar way notifications

595
00:25:12,690 --> 00:25:14,100
are usually pretty pretty good example

596
00:25:14,100 --> 00:25:17,430
of this so they say you know you can get

597
00:25:17,430 --> 00:25:19,020
notified when you get new messages click

598
00:25:19,020 --> 00:25:21,150
here and then they show the permission

599
00:25:21,150 --> 00:25:22,530
problem and the user can then make a

600
00:25:22,530 --> 00:25:25,080
choice and I think it's no coincidence

601
00:25:25,080 --> 00:25:27,260
that these two companies do that I think

602
00:25:27,260 --> 00:25:31,320
they use the testing reveals that this

603
00:25:31,320 --> 00:25:32,820
results in a much higher rate of

604
00:25:32,820 --> 00:25:35,700
acceptance from users - so do it for

605
00:25:35,700 --> 00:25:37,880
yourself because you want your users to

606
00:25:37,880 --> 00:25:40,410
accept your notification permission

607
00:25:40,410 --> 00:25:42,390
problems but also do it because browsers

608
00:25:42,390 --> 00:25:45,050
will likely force you to do it so

609
00:25:45,050 --> 00:25:47,460
another thing that we will probably do

610
00:25:47,460 --> 00:25:49,530
soon around what permission problems is

611
00:25:49,530 --> 00:25:51,480
which restrict permission forms for my

612
00:25:51,480 --> 00:25:54,300
frames because iframes are nasty to

613
00:25:54,300 --> 00:25:57,600
manage in browser UI so what if you you

614
00:25:57,600 --> 00:26:02,299
know so

615
00:26:02,309 --> 00:26:04,379
it's so the browser your eyes is pretty

616
00:26:04,379 --> 00:26:06,809
limited around security so you you know

617
00:26:06,809 --> 00:26:07,950
you want to put it in the main UI of the

618
00:26:07,950 --> 00:26:09,059
browser but you only have so much space

619
00:26:09,059 --> 00:26:12,299
in your browser Chrome so and you don't

620
00:26:12,299 --> 00:26:13,950
want to pack it with all the details

621
00:26:13,950 --> 00:26:15,450
around all your iframes that you've

622
00:26:15,450 --> 00:26:19,679
embedded around your permissions and

623
00:26:19,679 --> 00:26:20,909
whether they can open pop-ups and

624
00:26:20,909 --> 00:26:23,549
whatever so a rather easy solution to

625
00:26:23,549 --> 00:26:27,059
this is to just say iframes can spawn

626
00:26:27,059 --> 00:26:30,239
permission problems and if I were you

627
00:26:30,239 --> 00:26:33,080
and you are for example running a

628
00:26:33,080 --> 00:26:35,489
notification service embedding it with

629
00:26:35,489 --> 00:26:38,729
an iframe please ask them to migrate

630
00:26:38,729 --> 00:26:40,349
away from iframes because Chrome will

631
00:26:40,349 --> 00:26:41,429
soon duplicate it and we're also

632
00:26:41,429 --> 00:26:44,339
thinking about it all right yeah the

633
00:26:44,339 --> 00:26:45,989
serve the classical you know with great

634
00:26:45,989 --> 00:26:47,729
power comes great responsibility

635
00:26:47,729 --> 00:26:51,210
where permissions and and device

636
00:26:51,210 --> 00:26:54,629
capabilities is a really dangerous thing

637
00:26:54,629 --> 00:26:56,249
but it can also be used for great things

638
00:26:56,249 --> 00:26:58,799
like web RUC live chat screen sharing

639
00:26:58,799 --> 00:27:04,739
and an location access alright that kind

640
00:27:04,739 --> 00:27:08,129
of concludes the oh wait okay this is

641
00:27:08,129 --> 00:27:10,399
this these pages are completely broken

642
00:27:10,399 --> 00:27:13,229
so that kind of concludes our tour

643
00:27:13,229 --> 00:27:17,429
around secure web site just to give you

644
00:27:17,429 --> 00:27:19,320
another quick summary of what we what we

645
00:27:19,320 --> 00:27:21,330
talked about so I would really like to

646
00:27:21,330 --> 00:27:22,979
ask you to make sure that all your

647
00:27:22,979 --> 00:27:25,109
connections are secure through HTTPS

648
00:27:25,109 --> 00:27:26,940
please take care of your mixed content

649
00:27:26,940 --> 00:27:28,529
because that's also really dangerous and

650
00:27:28,529 --> 00:27:32,149
may break your website Sinan HSTs header

651
00:27:32,149 --> 00:27:35,429
we worry off cross origin restrictions

652
00:27:35,429 --> 00:27:39,929
when developing and be wary when you

653
00:27:39,929 --> 00:27:41,580
know allowing for sergeant access to

654
00:27:41,580 --> 00:27:45,299
your own ap is have a CSP just to just

655
00:27:45,299 --> 00:27:47,039
to deny the inline script notation of

656
00:27:47,039 --> 00:27:48,989
inline scripts nowadays just feel I deny

657
00:27:48,989 --> 00:27:50,849
your inline scripts on your website have

658
00:27:50,849 --> 00:27:54,389
a CSP and this is for some reason the

659
00:27:54,389 --> 00:27:57,029
rest is not this place but I'm another

660
00:27:57,029 --> 00:28:03,009
thing that you should absolutely do is

661
00:28:03,019 --> 00:28:09,539
well basically what do we talk about

662
00:28:09,549 --> 00:28:12,700
to some remember all more stuff secure

663
00:28:12,700 --> 00:28:13,809
access to device privilege we talked

664
00:28:13,809 --> 00:28:15,639
about this basically browsers are

665
00:28:15,639 --> 00:28:18,999
limiting the way that websites can

666
00:28:18,999 --> 00:28:21,940
access device capabilities and you

667
00:28:21,940 --> 00:28:24,039
should be careful when asking for

668
00:28:24,039 --> 00:28:25,989
permission because browsers are much

669
00:28:25,989 --> 00:28:27,580
more restrictive or will be much more

670
00:28:27,580 --> 00:28:29,889
restrictive thinking you know about the

671
00:28:29,889 --> 00:28:32,679
user experience and and users are much

672
00:28:32,679 --> 00:28:34,059
more prone to deny if you don't give

673
00:28:34,059 --> 00:28:37,570
proper context in your morning's right

674
00:28:37,570 --> 00:28:39,100
that's me

675
00:28:39,100 --> 00:28:41,799
I will move on and you can have

676
00:28:41,799 --> 00:28:59,570
questions yeah go ahead

677
00:28:59,580 --> 00:29:02,559
right right so this is planet like all

678
00:29:02,559 --> 00:29:04,899
business plan is not am i working with

679
00:29:04,899 --> 00:29:06,580
of it's not an official statement of

