1
00:00:10,820 --> 00:00:13,799

hi everyone good morning it's good to be

2
00:00:13,799 --> 00:00:14,969
here glad to see so many of you here

3
00:00:14,969 --> 00:00:18,570
after last night that's awesome you know

4
00:00:18,570 --> 00:00:20,550
flightiness talk getting function with

5
00:00:20,550 --> 00:00:25,259
fab unless you are a German speaker than

6
00:00:25,259 --> 00:00:27,660
I guess this would be a title unless you

7
00:00:27,660 --> 00:00:31,740
are a German JavaScript ER in which case

8
00:00:31,740 --> 00:00:35,220
this would be the title so hopefully

9
00:00:35,220 --> 00:00:36,629
that should educate you on where we're

10
00:00:36,629 --> 00:00:40,079
going here getting social with fab my

11
00:00:40,079 --> 00:00:42,780
name is jet Schmidt yeah name is German

12
00:00:42,780 --> 00:00:44,370
but that's where it ends my dad's dad's

13
00:00:44,370 --> 00:00:45,989
that is German that's an awkward

14
00:00:45,989 --> 00:00:47,760
conversation you're a lot so that's been

15
00:00:47,760 --> 00:00:51,149
fun but I'm not I'm a hobbyist

16
00:00:51,149 --> 00:00:52,949
programmer actually translate computer

17
00:00:52,949 --> 00:00:55,559
manuals for living so most of my

18
00:00:55,559 --> 00:00:58,289
language stuff is natural but I really

19
00:00:58,289 --> 00:01:00,269
do enjoy programming and I have a kind

20
00:01:00,269 --> 00:01:01,859
of a weird flavor that I'd like to share

21
00:01:01,859 --> 00:01:05,160
with you I love functions do you guys

22
00:01:05,160 --> 00:01:09,090
love functions functions are seriously

23
00:01:09,090 --> 00:01:10,500
awesome to the best part of JavaScript

24
00:01:10,500 --> 00:01:13,619
do you think do you think does note love

25
00:01:13,619 --> 00:01:19,069
functions yeah all right fire up node

26
00:01:19,069 --> 00:01:28,670
and type that guess what it doesn't

27
00:01:28,680 --> 00:01:30,840
I mean Brian are you here because

28
00:01:30,840 --> 00:01:36,920
seriously that is a WTF but seriously

29
00:01:36,920 --> 00:01:40,110
basically I think you know you be

30
00:01:40,110 --> 00:01:41,580
further like you know javascript is you

31
00:01:41,580 --> 00:01:43,440
know the father is seeing a mother

32
00:01:43,440 --> 00:01:45,620
scheme and you know Brendan Eich is the

33
00:01:45,620 --> 00:01:48,780
Midwife I guess and so it's really you

34
00:01:48,780 --> 00:01:51,720
know a lot of the see parts of it are in

35
00:01:51,720 --> 00:01:53,610
there but there's not a lot of scheme i

36
00:01:53,610 --> 00:01:55,050
like the scheme parts and so we're going

37
00:01:55,050 --> 00:01:57,630
to talk about that I'm going to talk to

38
00:01:57,630 --> 00:01:58,770
you about the problem that has been

39
00:01:58,770 --> 00:02:01,410
talked Tim Caswell talked about it

40
00:02:01,410 --> 00:02:02,940
actually the next speaker tom is going

41
00:02:02,940 --> 00:02:04,680
to talk about the same problem that

42
00:02:04,680 --> 00:02:06,869
exists in kind of this non-blocking

43
00:02:06,869 --> 00:02:10,170
environment I have one just one hack I'm

44
00:02:10,170 --> 00:02:11,670
going to share with you that can make

45
00:02:11,670 --> 00:02:13,709
your code a lot easier that you can

46
00:02:13,709 --> 00:02:15,060
apply that is very functionally oriented

47
00:02:15,060 --> 00:02:16,320
and I'm gonna show you what you can do

48
00:02:16,320 --> 00:02:18,739
with that hack so what is the problem

49
00:02:18,739 --> 00:02:21,750
look at this here's the current schedule

50
00:02:21,750 --> 00:02:23,880
for our block right here and if you if

51
00:02:23,880 --> 00:02:26,880
you guys could go to jays compu / 2010 /

52
00:02:26,880 --> 00:02:29,930
speakers HTML and search for spaghetti

53
00:02:29,930 --> 00:02:32,400
you'll get two hits the presentation

54
00:02:32,400 --> 00:02:34,019
before mine in the presentation after

55
00:02:34,019 --> 00:02:36,180
mine and I to i'm going to talk about

56
00:02:36,180 --> 00:02:38,130
spaghetti code so but if they are non

57
00:02:38,130 --> 00:02:39,989
blocking what looks to you like this

58
00:02:39,989 --> 00:02:42,900
actually runs like this right which is

59
00:02:42,900 --> 00:02:45,690
why non-blocking code is the position

60
00:02:45,690 --> 00:02:48,630
absolute of JavaScript you know all of a

61
00:02:48,630 --> 00:02:50,459
sudden you know you had no concept of

62
00:02:50,459 --> 00:02:52,590
time it was just order but now we have

63
00:02:52,590 --> 00:02:54,150
this concept of time it's just like with

64
00:02:54,150 --> 00:02:56,760
CSS you know everything you know no two

65
00:02:56,760 --> 00:02:58,260
blocks could occupy the same space but

66
00:02:58,260 --> 00:03:00,480
all sudden you have Z index and like you

67
00:03:00,480 --> 00:03:01,950
know it's like just like for you know

68
00:03:01,950 --> 00:03:03,570
CSS book that's kind of a one of the

69
00:03:03,570 --> 00:03:04,470
things they get around I feel like

70
00:03:04,470 --> 00:03:06,320
non-blocking you the same thing for us

71
00:03:06,320 --> 00:03:09,830
so if the code don't block you must call

72
00:03:09,830 --> 00:03:13,920
it rhymes in German in a German accent

73
00:03:13,920 --> 00:03:16,980
at least and so basically I feel like

74
00:03:16,980 --> 00:03:20,220
developers have two choices you could

75
00:03:20,220 --> 00:03:22,470
take the blue pill or the red pill you

76
00:03:22,470 --> 00:03:26,130
can abstract it or attack it with with

77
00:03:26,130 --> 00:03:29,250
this kind of code and so to to kind of

78
00:03:29,250 --> 00:03:31,680
update to a more modern movie reference

79
00:03:31,680 --> 00:03:34,520
you can have someone else do it for you

80
00:03:34,520 --> 00:03:37,640
or you can do it yourself right and so

81
00:03:37,640 --> 00:03:38,920
let's talk about these two choices

82
00:03:38,920 --> 00:03:42,350
abstracting it there are a bunch of

83
00:03:42,350 --> 00:03:45,590
things that people use I'm not one of

84
00:03:45,590 --> 00:03:47,660
them but you know basically if you want

85
00:03:47,660 --> 00:03:49,070
to maintain this illusion that you live

86
00:03:49,070 --> 00:03:51,350
in this synchronous blocking world there

87
00:03:51,350 --> 00:03:53,800
are libraries that will help you do that

88
00:03:53,800 --> 00:03:56,750
but it's not easy you know because you

89
00:03:56,750 --> 00:03:59,180
really have to rewrite this code and so

90
00:03:59,180 --> 00:04:00,740
the guy who really explained it best

91
00:04:00,740 --> 00:04:03,920
does anyone know this is its Jeremy

92
00:04:03,920 --> 00:04:06,550
ashkenaz he is the guy who wrote

93
00:04:06,550 --> 00:04:09,650
coffeescript which is awesome and so

94
00:04:09,650 --> 00:04:11,960
there was a there was actually a branch

95
00:04:11,960 --> 00:04:14,120
of coffee script that called defer and

96
00:04:14,120 --> 00:04:15,170
they basically like let's have this

97
00:04:15,170 --> 00:04:16,910
thing called it for its keyword and then

98
00:04:16,910 --> 00:04:18,290
we'll rewrite your job your coffee

99
00:04:18,290 --> 00:04:19,700
script into code that actually handles

100
00:04:19,700 --> 00:04:21,410
it into you it's just totally you know

101
00:04:21,410 --> 00:04:23,720
you don't actually see all this mess

102
00:04:23,720 --> 00:04:25,940
that's happening and Jeremy said this he

103
00:04:25,940 --> 00:04:27,290
basically says you can't do it and

104
00:04:27,290 --> 00:04:28,970
maintain the one-to-one mapping you

105
00:04:28,970 --> 00:04:30,560
don't have debugging someone else's like

106
00:04:30,560 --> 00:04:32,390
machine generated code that's no good

107
00:04:32,390 --> 00:04:35,240
and so and so he basically gave that

108
00:04:35,240 --> 00:04:39,050
branch the bots the X because he looked

109
00:04:39,050 --> 00:04:41,870
at it and to function like this and then

110
00:04:41,870 --> 00:04:43,070
basically when it was rewritten by

111
00:04:43,070 --> 00:04:45,160
status stratified chance return to this

112
00:04:45,160 --> 00:04:47,300
right and so like you don't want to you

113
00:04:47,300 --> 00:04:48,230
don't have to pluck that I don't know

114
00:04:48,230 --> 00:04:50,660
about that so I think the best option is

115
00:04:50,660 --> 00:04:53,030
take the red pill and attack it but then

116
00:04:53,030 --> 00:04:58,940
you know you get this you know code that

117
00:04:58,940 --> 00:05:01,190
turns into this and you know that

118
00:05:01,190 --> 00:05:03,580
spaghetti code on less you're a German

119
00:05:03,580 --> 00:05:05,450
JavaScript ER you would call it Spence

120
00:05:05,450 --> 00:05:07,180
the code

121
00:05:07,180 --> 00:05:10,419
or if you know if you're Tom you called

122
00:05:10,419 --> 00:05:12,820
a pyramid I'd like to refer to it given

123
00:05:12,820 --> 00:05:14,350
the current movie reference as a Cobb

124
00:05:14,350 --> 00:05:17,770
salad and so we're going to try to see

125
00:05:17,770 --> 00:05:19,150
how we can avoid that because the

126
00:05:19,150 --> 00:05:21,729
abstractions with these generated

127
00:05:21,729 --> 00:05:24,030
frameworks are leaky ER than this venue

128
00:05:24,030 --> 00:05:26,680
in the rain you know you have this pre

129
00:05:26,680 --> 00:05:28,030
compilation step which is annoying

130
00:05:28,030 --> 00:05:29,110
because then you're not dealing with

131
00:05:29,110 --> 00:05:30,400
your actual code and that makes

132
00:05:30,400 --> 00:05:32,350
debugging really hard but then if you do

133
00:05:32,350 --> 00:05:33,460
it yourself then you get these like

134
00:05:33,460 --> 00:05:35,350
nested callbacks you have all the

135
00:05:35,350 --> 00:05:37,600
shadowing and worse so we want to kind

136
00:05:37,600 --> 00:05:40,090
of avoid that by using functions

137
00:05:40,090 --> 00:05:41,650
functions are going to save us here so

138
00:05:41,650 --> 00:05:43,990
here's the hack ready take a look at

139
00:05:43,990 --> 00:05:45,220
this code same could you saw earlier

140
00:05:45,220 --> 00:05:46,870
we're gonna get rid of those because we

141
00:05:46,870 --> 00:05:48,940
don't need those I don't need those if

142
00:05:48,940 --> 00:05:51,840
you use let you will but all right so

143
00:05:51,840 --> 00:05:56,080
are you ready here it is one hack we're

144
00:05:56,080 --> 00:05:57,280
not going to change any characters on

145
00:05:57,280 --> 00:05:59,259
the screen here's all we're going to do

146
00:05:59,259 --> 00:06:04,750
is this that's it you're done all right

147
00:06:04,750 --> 00:06:06,280
cool did you miss that ready here it

148
00:06:06,280 --> 00:06:10,599
again oh then awesome what happened all

149
00:06:10,599 --> 00:06:12,039
right well we accidentally the whole

150
00:06:12,039 --> 00:06:16,180
execution stack right instead of letting

151
00:06:16,180 --> 00:06:18,610
the interpreter decide when stuff would

152
00:06:18,610 --> 00:06:21,430
get executed we did right and so let's

153
00:06:21,430 --> 00:06:22,539
take a look at what actually happened

154
00:06:22,539 --> 00:06:23,500
there people know what's going on here

155
00:06:23,500 --> 00:06:24,669
when they see this code right well

156
00:06:24,669 --> 00:06:26,409
basically the first perp set of friends

157
00:06:26,409 --> 00:06:27,760
we don't need that's the function that

158
00:06:27,760 --> 00:06:30,039
gets called right everything after it

159
00:06:30,039 --> 00:06:32,830
gets passed to that function right so

160
00:06:32,830 --> 00:06:34,630
this setup that's like another function

161
00:06:34,630 --> 00:06:36,729
reference that gets passed and now you

162
00:06:36,729 --> 00:06:38,199
could have a closure that would return

163
00:06:38,199 --> 00:06:40,659
in this case a function in it s because

164
00:06:40,659 --> 00:06:42,220
it represents the state of that function

165
00:06:42,220 --> 00:06:43,479
being called after it was given that

166
00:06:43,479 --> 00:06:45,610
argument right so we can just keep doing

167
00:06:45,610 --> 00:06:46,780
this right you can just load this thing

168
00:06:46,780 --> 00:06:51,009
up with all of these functions right all

169
00:06:51,009 --> 00:06:52,570
right so now let's talk about this thing

170
00:06:52,570 --> 00:06:56,229
right here what is that well it's seen

171
00:06:56,229 --> 00:06:58,300
all the execution stack after it and it

172
00:06:58,300 --> 00:07:00,460
could potentially resume evaluation when

173
00:07:00,460 --> 00:07:05,440
invoked what do we call that anyone what

174
00:07:05,440 --> 00:07:07,870
do we call that it's called a

175
00:07:07,870 --> 00:07:10,210
continuation exactly so basically a

176
00:07:10,210 --> 00:07:11,919
continuation is basically you're running

177
00:07:11,919 --> 00:07:14,409
some code and you stop right and you you

178
00:07:14,409 --> 00:07:15,789
have some sort of object that you could

179
00:07:15,789 --> 00:07:17,529
then reify and then continue execution

180
00:07:17,529 --> 00:07:19,539
so that's we just created a continuation

181
00:07:19,539 --> 00:07:20,289
and then we did it you

182
00:07:20,289 --> 00:07:21,939
streams which is kind of cool we

183
00:07:21,939 --> 00:07:24,819
streamed all of those functions into

184
00:07:24,819 --> 00:07:25,899
this one function streams are very

185
00:07:25,899 --> 00:07:28,210
important as you know malta works on you

186
00:07:28,210 --> 00:07:30,369
know streamy streams or streams are

187
00:07:30,369 --> 00:07:31,809
pretty important I think they're they're

188
00:07:31,809 --> 00:07:33,369
pretty they're going to be a pretty

189
00:07:33,369 --> 00:07:34,689
important data type especially for node

190
00:07:34,689 --> 00:07:35,619
going forward if you'll get all the work

191
00:07:35,619 --> 00:07:38,559
and note it's all around streams so but

192
00:07:38,559 --> 00:07:39,639
streams I mean if they're not an easy

193
00:07:39,639 --> 00:07:41,499
concept for everyone but they're we've

194
00:07:41,499 --> 00:07:43,419
seen them before does anyone know what

195
00:07:43,419 --> 00:07:46,409
what we filled these two spaces in with

196
00:07:46,409 --> 00:07:53,529
any guesses streams are two beer as a

197
00:07:53,529 --> 00:07:56,339
raise are two more beer yes right now

198
00:07:56,339 --> 00:07:58,539
streams at a time as a razor a space

199
00:07:58,539 --> 00:08:01,149
that's it a stream is an array in time

200
00:08:01,149 --> 00:08:02,709
instead of accessing it in memory in

201
00:08:02,709 --> 00:08:05,529
space you get it in time right so it's

202
00:08:05,529 --> 00:08:06,430
like literally just a different

203
00:08:06,430 --> 00:08:08,830
dimension just like we have the idea of

204
00:08:08,830 --> 00:08:10,930
you know CSS position absolute is space

205
00:08:10,930 --> 00:08:12,729
whereas non-blocking code is time it's

206
00:08:12,729 --> 00:08:15,189
the same thing so these two look very

207
00:08:15,189 --> 00:08:17,319
very similar and they should because in

208
00:08:17,319 --> 00:08:18,459
the first in it you're passing it

209
00:08:18,459 --> 00:08:19,869
basically in a right ah it's an

210
00:08:19,869 --> 00:08:21,279
arguments object I know but it's

211
00:08:21,279 --> 00:08:22,779
basically an array in the second one

212
00:08:22,779 --> 00:08:24,189
you're actually sending things to it

213
00:08:24,189 --> 00:08:25,629
multiple times as long as it returns

214
00:08:25,629 --> 00:08:27,849
something to keep listening right so

215
00:08:27,849 --> 00:08:28,569
what's the difference between these two

216
00:08:28,569 --> 00:08:30,219
things well arrays are fast streams are

217
00:08:30,219 --> 00:08:32,860
small you know when you usually have

218
00:08:32,860 --> 00:08:34,149
such a framework that kind of abstracts

219
00:08:34,149 --> 00:08:35,469
it the first thing to go in like a

220
00:08:35,469 --> 00:08:36,909
framework that does like web stuff is

221
00:08:36,909 --> 00:08:39,490
dreams they just buffer everything right

222
00:08:39,490 --> 00:08:40,750
so what ends up happening is you have to

223
00:08:40,750 --> 00:08:42,219
handle these huge bodies that's bad for

224
00:08:42,219 --> 00:08:43,750
memory so arrays are fast cuz you've

225
00:08:43,750 --> 00:08:44,889
accessed everything's already in memory

226
00:08:44,889 --> 00:08:46,720
but streams are small small is important

227
00:08:46,720 --> 00:08:47,740
because small means a small memory

228
00:08:47,740 --> 00:08:49,899
footprint so arrays are eager everything

229
00:08:49,899 --> 00:08:51,699
has to be there once dreams are lazy you

230
00:08:51,699 --> 00:08:53,589
can kind of get it over time whether run

231
00:08:53,589 --> 00:08:55,240
is called immediately synchronously

232
00:08:55,240 --> 00:08:56,829
after a rather clean up is called

233
00:08:56,829 --> 00:08:58,600
immediately asynchrony after run or like

234
00:08:58,600 --> 00:09:00,160
five minutes later does not matter as

235
00:09:00,160 --> 00:09:02,410
long as that state is preserved it's a

236
00:09:02,410 --> 00:09:04,149
raise or sink they're all their streams

237
00:09:04,149 --> 00:09:06,279
are but does they do not have to be but

238
00:09:06,279 --> 00:09:08,439
they can be a sink so that's kind of an

239
00:09:08,439 --> 00:09:09,639
important thing and that's it that's

240
00:09:09,639 --> 00:09:11,889
back okay so what's the upshot from this

241
00:09:11,889 --> 00:09:15,490
well I've developed a framework called

242
00:09:15,490 --> 00:09:17,139
fab which basically takes care of that

243
00:09:17,139 --> 00:09:18,970
that kind of exploits this kind of

244
00:09:18,970 --> 00:09:22,209
streaming and so basically it love

245
00:09:22,209 --> 00:09:24,040
functions it's a functional framework

246
00:09:24,040 --> 00:09:26,350
and so it's basically originally modeled

247
00:09:26,350 --> 00:09:28,200
on jquery

248
00:09:28,200 --> 00:09:29,730
this is not true anymore but basically

249
00:09:29,730 --> 00:09:31,710
what I looked at you know you know

250
00:09:31,710 --> 00:09:33,900
jQuery is traversing over the Dom we

251
00:09:33,900 --> 00:09:40,350
have routing / URLs yes oh really sorry

252
00:09:40,350 --> 00:09:42,360
all right anyway any questions thank you

253
00:09:42,360 --> 00:09:46,840
for that every to that any questions I

254
00:09:46,850 --> 00:09:50,190
feel like I've been scolded by my German

255
00:09:50,190 --> 00:09:55,890
school teacher so my mom told me to slow

256
00:09:55,890 --> 00:09:59,130
down dude tragedy where he was where he

257
00:09:59,130 --> 00:10:01,560
would traverse over Dom you route / URLs

258
00:10:01,560 --> 00:10:04,800
where you would manipulate a Dom you

259
00:10:04,800 --> 00:10:06,990
respond to calls to your web server

260
00:10:06,990 --> 00:10:08,370
where you would have UI events you have

261
00:10:08,370 --> 00:10:10,110
HTTP verbs so I'm like that's kind of

262
00:10:10,110 --> 00:10:11,870
cool map so let's take this you ah this

263
00:10:11,870 --> 00:10:14,780
dsl you guys already know probably

264
00:10:14,780 --> 00:10:16,950
unless you're Rebecca and then you would

265
00:10:16,950 --> 00:10:20,070
replace it just kidding scoop you would

266
00:10:20,070 --> 00:10:21,270
replace it with this it's like these are

267
00:10:21,270 --> 00:10:22,710
come on the same thing right and so I

268
00:10:22,710 --> 00:10:24,630
was like that's kind of cool cool thing

269
00:10:24,630 --> 00:10:25,830
so that's how fab started there is

270
00:10:25,830 --> 00:10:28,770
actually fab is find and bind because I

271
00:10:28,770 --> 00:10:30,870
basically co-opted those two jquery

272
00:10:30,870 --> 00:10:34,770
methods all right so but jquery wasn't

273
00:10:34,770 --> 00:10:35,760
really cutting it for me didn't really

274
00:10:35,760 --> 00:10:37,970
match right jquery have this huge DOM

275
00:10:37,970 --> 00:10:41,370
everything is synchronous you know in

276
00:10:41,370 --> 00:10:43,770
terms of manipulating the chain I like

277
00:10:43,770 --> 00:10:44,640
the chain but I didn't like the

278
00:10:44,640 --> 00:10:47,250
synchrony so I got inspiration somewhere

279
00:10:47,250 --> 00:10:52,590
else and that was UNIX so unix chaining

280
00:10:52,590 --> 00:10:55,560
basically looks like this right so I'm

281
00:10:55,560 --> 00:10:57,030
not a UNIX guy I'm just kind of faking

282
00:10:57,030 --> 00:10:59,460
it here but the idea is that you know

283
00:10:59,460 --> 00:11:01,470
every every little program you have as

284
00:11:01,470 --> 00:11:03,570
an input as an output right and so

285
00:11:03,570 --> 00:11:05,340
that's really cool for frameworks if you

286
00:11:05,340 --> 00:11:06,390
look for the frameworks that are really

287
00:11:06,390 --> 00:11:07,740
cool like for example look where rails

288
00:11:07,740 --> 00:11:09,360
went look we're so not sure when they

289
00:11:09,360 --> 00:11:11,850
all went to rack right because rack is

290
00:11:11,850 --> 00:11:13,500
good for middle where everyone's going

291
00:11:13,500 --> 00:11:15,120
to middle where it makes sense the thing

292
00:11:15,120 --> 00:11:17,430
about fab the entire thing is middle

293
00:11:17,430 --> 00:11:19,440
where you saw those streaming functions

294
00:11:19,440 --> 00:11:22,200
fab uses that and those basically every

295
00:11:22,200 --> 00:11:25,230
function every app is middleware that

296
00:11:25,230 --> 00:11:26,940
operates on a stream even the app

297
00:11:26,940 --> 00:11:29,010
definition itself there's no difference

298
00:11:29,010 --> 00:11:33,240
between a app and a response a app is

299
00:11:33,240 --> 00:11:34,500
just a response that hasn't been

300
00:11:34,500 --> 00:11:36,270
evaluated completely yet right so you

301
00:11:36,270 --> 00:11:37,620
stream things some of those things are

302
00:11:37,620 --> 00:11:38,620
functions that you would then

303
00:11:38,620 --> 00:11:41,050
later so there were a bunch of things

304
00:11:41,050 --> 00:11:45,060
how am i doing that time i doing okay

305
00:11:45,060 --> 00:11:49,020
1230 i started 20 15 I can do okay I

306
00:11:49,020 --> 00:11:51,550
want boilerplate I want to keep it as

307
00:11:51,550 --> 00:11:53,680
small as possible I want it to be

308
00:11:53,680 --> 00:11:55,660
natural nope no compilation step I

309
00:11:55,660 --> 00:11:57,550
wanted to be JavaScript I don't want to

310
00:11:57,550 --> 00:11:58,990
write some other language some franken

311
00:11:58,990 --> 00:12:00,970
language I want it to be consistent I

312
00:12:00,970 --> 00:12:02,890
don't want you know like kind of

313
00:12:02,890 --> 00:12:03,910
different classes of things I want

314
00:12:03,910 --> 00:12:05,560
everything to be a function I want it to

315
00:12:05,560 --> 00:12:08,140
be clean no global pollution an

316
00:12:08,140 --> 00:12:09,940
ambiguous no mandatory magic the first

317
00:12:09,940 --> 00:12:12,280
thing frameworks do to solve an abstract

318
00:12:12,280 --> 00:12:13,720
away problem is give you all these likes

319
00:12:13,720 --> 00:12:16,360
play methods everywhere that make it

320
00:12:16,360 --> 00:12:17,920
really easy to pick up but really hard

321
00:12:17,920 --> 00:12:19,510
to scale I want to avoid that so if

322
00:12:19,510 --> 00:12:21,580
you're this magic it's yours no shared

323
00:12:21,580 --> 00:12:22,690
state that's obviously a functional

324
00:12:22,690 --> 00:12:24,130
programming thing can't be synchronous

325
00:12:24,130 --> 00:12:26,590
of course very low side effect ver gala

326
00:12:26,590 --> 00:12:28,450
therrien I don't like the system of well

327
00:12:28,450 --> 00:12:29,950
there's apps and then there's your

328
00:12:29,950 --> 00:12:31,870
plugins I want those all to be on the

329
00:12:31,870 --> 00:12:33,370
same level and I want it to be

330
00:12:33,370 --> 00:12:35,170
composable so you should be able to

331
00:12:35,170 --> 00:12:36,460
create apps and those apps should go

332
00:12:36,460 --> 00:12:39,160
into other apps so fab is two things

333
00:12:39,160 --> 00:12:41,830
okay the first thing is fab as a pattern

334
00:12:41,830 --> 00:12:45,190
every single fab app every single one

335
00:12:45,190 --> 00:12:49,630
looks like this okay take a while for

336
00:12:49,630 --> 00:12:51,070
this decision it's really not that hard

337
00:12:51,070 --> 00:12:52,960
basically the idea is you have a

338
00:12:52,960 --> 00:12:54,460
function every function the first thing

339
00:12:54,460 --> 00:12:56,440
it does it takes a call back that's the

340
00:12:56,440 --> 00:12:57,250
function it's going to write it to

341
00:12:57,250 --> 00:12:59,470
answer to okay then it returns another

342
00:12:59,470 --> 00:13:01,600
function that is going to listen to

343
00:13:01,600 --> 00:13:03,700
everything they come subsequently right

344
00:13:03,700 --> 00:13:06,190
until it hears nothing right and then

345
00:13:06,190 --> 00:13:08,080
it's like okay I'm done so usually what

346
00:13:08,080 --> 00:13:09,910
happens at this end step you here at

347
00:13:09,910 --> 00:13:11,200
they see right there it'll actually

348
00:13:11,200 --> 00:13:13,960
return the original right function

349
00:13:13,960 --> 00:13:16,390
passed in 1st right when it sees the end

350
00:13:16,390 --> 00:13:19,330
it gives control back to whatever was

351
00:13:19,330 --> 00:13:21,340
before it does that make sense the idea

352
00:13:21,340 --> 00:13:23,200
here is you're using callbacks to pass

353
00:13:23,200 --> 00:13:26,410
data asynchronously and you're using

354
00:13:26,410 --> 00:13:29,620
return to pass control synchronously

355
00:13:29,620 --> 00:13:31,330
right so you're passing control

356
00:13:31,330 --> 00:13:33,790
synchronously and so fab is also a

357
00:13:33,790 --> 00:13:36,160
library right so it's basically a

358
00:13:36,160 --> 00:13:37,600
library of just all of its a flat

359
00:13:37,600 --> 00:13:38,830
library if you go actually the git

360
00:13:38,830 --> 00:13:40,270
repository it's literally just a flat

361
00:13:40,270 --> 00:13:41,620
list of all of these functions there's

362
00:13:41,620 --> 00:13:43,630
no hierarchy at all each one could be

363
00:13:43,630 --> 00:13:45,460
put anywhere so what are these video

364
00:13:45,460 --> 00:13:46,750
notes these libraries so like I really

365
00:13:46,750 --> 00:13:48,310
like this units philosophy of keeping it

366
00:13:48,310 --> 00:13:50,490
small so literally f

367
00:13:50,490 --> 00:13:52,200
zipping which you know only is to show

368
00:13:52,200 --> 00:13:54,570
not so much how small it is but I think

369
00:13:54,570 --> 00:13:55,620
it's the most canonical way of

370
00:13:55,620 --> 00:13:57,060
representing of sorry comparing two

371
00:13:57,060 --> 00:13:58,980
libraries this is the size of each of

372
00:13:58,980 --> 00:14:00,330
these functions each of these apps I

373
00:14:00,330 --> 00:14:02,580
mean this is one of the few frameworks

374
00:14:02,580 --> 00:14:04,529
that you actually might even you know

375
00:14:04,529 --> 00:14:06,839
enter json' cake probably not you would

376
00:14:06,839 --> 00:14:08,010
probably takes a bunch stuff out of it

377
00:14:08,010 --> 00:14:11,220
but everything is very small and so I

378
00:14:11,220 --> 00:14:13,230
guess the only thing left to do given

379
00:14:13,230 --> 00:14:16,350
that I didn't complete my slides

380
00:14:16,350 --> 00:14:19,020
entirely is to show you how it works and

381
00:14:19,020 --> 00:14:20,040
so there's going to be some live coding

382
00:14:20,040 --> 00:14:21,240
addition we're going to build a nap

383
00:14:21,240 --> 00:14:22,709
right here so I'm going to roll up my

384
00:14:22,709 --> 00:14:25,320
sleeves and we're going to switch over

385
00:14:25,320 --> 00:14:27,990
to text Wrangler because that's how I

386
00:14:27,990 --> 00:14:32,550
roll any questions well I'm really gonna

387
00:14:32,550 --> 00:14:34,579
sleep

388
00:14:34,579 --> 00:14:36,329
alright cool let's get out of this

389
00:14:36,329 --> 00:14:41,760
keynote hell okay cool here is a text

390
00:14:41,760 --> 00:14:44,100
editor okay cool so what does it look

391
00:14:44,100 --> 00:14:46,500
like well it looks like this everything

392
00:14:46,500 --> 00:14:47,820
is nap every app is on the same level

393
00:14:47,820 --> 00:14:49,110
including your rep you know like a lot

394
00:14:49,110 --> 00:14:50,399
of times you would have a library and

395
00:14:50,399 --> 00:14:51,810
you would have an app and the app

396
00:14:51,810 --> 00:14:53,700
requires the library and it does it's

397
00:14:53,700 --> 00:14:55,350
tough the thing is your apps are also

398
00:14:55,350 --> 00:14:57,089
libraries right everything's gonna wear

399
00:14:57,089 --> 00:14:58,829
so basically everything is looks the

400
00:14:58,829 --> 00:15:03,750
same so we're going to use this yeah I'm

401
00:15:03,750 --> 00:15:05,390
sorry I should really fix up man

402
00:15:05,390 --> 00:15:07,649
everything here on my screen it's like

403
00:15:07,649 --> 00:15:11,790
weirdly fat like I'm looking at Sun woo

404
00:15:11,790 --> 00:15:17,700
music video hold on it's that it's that

405
00:15:17,700 --> 00:15:19,350
ok that's probably a little small but

406
00:15:19,350 --> 00:15:23,970
we'll see what it work it's a so far ok

407
00:15:23,970 --> 00:15:27,029
um alright so you've seen this pattern

408
00:15:27,029 --> 00:15:28,350
before I'm not a huge fan of this to be

409
00:15:28,350 --> 00:15:33,199
honest function

410
00:15:33,209 --> 00:15:37,800
um alright cool so exports because we're

411
00:15:37,800 --> 00:15:39,990
going to basically co-opt exports should

412
00:15:39,990 --> 00:15:41,579
be asynchronous it should be a function

413
00:15:41,579 --> 00:15:43,110
it shouldn't be assigning something

414
00:15:43,110 --> 00:15:45,689
honestly not a fan but whatever I will

415
00:15:45,689 --> 00:15:47,369
yield for that system and implement it

416
00:15:47,369 --> 00:15:50,610
myself so basically we're going to do

417
00:15:50,610 --> 00:15:53,429
this we're going to return exports and

418
00:15:53,429 --> 00:15:55,019
we're gonna call it with our app what

419
00:15:55,019 --> 00:15:56,309
are we going to do well it's just going

420
00:15:56,309 --> 00:15:58,889
to say hello ok cool that's a wrap all

421
00:15:58,889 --> 00:16:01,050
right you can really start small it's

422
00:16:01,050 --> 00:16:03,059
not a huge thing right so all this app

423
00:16:03,059 --> 00:16:04,350
gets is this exports thing and it just

424
00:16:04,350 --> 00:16:05,670
so basically gets a pipe and you're

425
00:16:05,670 --> 00:16:07,759
right to it ok cool so if we ran this

426
00:16:07,759 --> 00:16:19,350
hello that I want to see that ok we just

427
00:16:19,350 --> 00:16:20,999
ran a nap all right you see what happen

428
00:16:20,999 --> 00:16:23,639
yay that's cool right so fab is not

429
00:16:23,639 --> 00:16:25,670
necessarily a web framework if thank you

430
00:16:25,670 --> 00:16:28,170
fab is not necessarily a web framework

431
00:16:28,170 --> 00:16:29,999
right at web is just a part of it so

432
00:16:29,999 --> 00:16:33,119
let's actually do some web and to do

433
00:16:33,119 --> 00:16:36,059
that we gotta we gotta imports and stuff

434
00:16:36,059 --> 00:16:38,369
and again same thing I don't think

435
00:16:38,369 --> 00:16:39,720
require should be synchronous and it

436
00:16:39,720 --> 00:16:41,369
requires a synchronous but you know a

437
00:16:41,369 --> 00:16:42,480
lot of people who are much smarter than

438
00:16:42,480 --> 00:16:45,240
me disagree so that's ok but I'm gonna

439
00:16:45,240 --> 00:16:48,420
do it myself so basically you get two

440
00:16:48,420 --> 00:16:50,309
things here actually i lied one is

441
00:16:50,309 --> 00:16:51,779
imports imports basically wraps required

442
00:16:51,779 --> 00:16:53,279
but it makes it a synchronous I don't

443
00:16:53,279 --> 00:16:54,360
think I don't want a synchronous

444
00:16:54,360 --> 00:16:55,740
necessarily because I need it to be

445
00:16:55,740 --> 00:16:57,839
somewhere else in Bangladesh when I get

446
00:16:57,839 --> 00:16:59,459
the file I just want to use one API for

447
00:16:59,459 --> 00:17:01,519
everything that's why I believe in

448
00:17:01,519 --> 00:17:04,529
asynchronous this thing is really feel

449
00:17:04,529 --> 00:17:11,169
like a Backstreet Boy alright cool so

450
00:17:11,179 --> 00:17:15,529
almost you almost had me so let's import

451
00:17:15,529 --> 00:17:20,100
stuff we're gonna use function not

452
00:17:20,100 --> 00:17:22,589
function this time alright cool so let's

453
00:17:22,589 --> 00:17:27,240
put this in your yay ok so that's that's

454
00:17:27,240 --> 00:17:28,770
actually does the same exact thing which

455
00:17:28,770 --> 00:17:30,090
is imported nothing in this case right

456
00:17:30,090 --> 00:17:32,399
so now we're going to import let's see

457
00:17:32,399 --> 00:17:35,179
well what do we need to run a web server

458
00:17:35,179 --> 00:17:37,289
we need like a listener well first of

459
00:17:37,289 --> 00:17:38,520
all we need to actually run this

460
00:17:38,520 --> 00:17:39,510
function this actually is not running

461
00:17:39,510 --> 00:17:40,770
it's just literally sending something

462
00:17:40,770 --> 00:17:41,880
right so we're in need something called

463
00:17:41,880 --> 00:17:44,460
run we're also going to need a no

464
00:17:44,460 --> 00:17:47,010
no listen right because basically we

465
00:17:47,010 --> 00:17:48,090
want note to be able to listen to stuff

466
00:17:48,090 --> 00:17:49,440
this is a huge hack by the way I love

467
00:17:49,440 --> 00:17:50,850
this do you guys know what's going on

468
00:17:50,850 --> 00:17:53,100
here I'm basically taking your call and

469
00:17:53,100 --> 00:17:54,900
this is optional so don't get too upset

470
00:17:54,900 --> 00:17:56,970
about it I'm basically taking your call

471
00:17:56,970 --> 00:17:58,800
back and to stringing it and sucking out

472
00:17:58,800 --> 00:18:00,840
your arguments and looking at those

473
00:18:00,840 --> 00:18:03,090
strings then going required myself but

474
00:18:03,090 --> 00:18:04,830
that's totally optional after right here

475
00:18:04,830 --> 00:18:06,630
you could put arguments and do it

476
00:18:06,630 --> 00:18:09,480
explicitly but i think it's myself ok

477
00:18:09,480 --> 00:18:10,920
cool so now what we're going to do is

478
00:18:10,920 --> 00:18:13,040
they're actually going to return run and

479
00:18:13,040 --> 00:18:15,270
then so run basically just evaluate the

480
00:18:15,270 --> 00:18:17,160
stream and so the first thing we do here

481
00:18:17,160 --> 00:18:20,390
in the stream is we do node oops sorry

482
00:18:20,390 --> 00:18:23,940
jquery sorry node listen we're going to

483
00:18:23,940 --> 00:18:29,170
listen on a port my favorite port

484
00:18:29,180 --> 00:18:32,810
sorry and then actually here so the

485
00:18:32,810 --> 00:18:34,880
thing is we we don't export it so we're

486
00:18:34,880 --> 00:18:36,170
actually gonna leave so run it's just

487
00:18:36,170 --> 00:18:37,340
another function the first thing it

488
00:18:37,340 --> 00:18:40,070
takes is is its call back right but

489
00:18:40,070 --> 00:18:41,330
there's no we don't to actually send to

490
00:18:41,330 --> 00:18:43,070
the standard out so we're actually leave

491
00:18:43,070 --> 00:18:44,840
that blank and then so we have this

492
00:18:44,840 --> 00:18:45,740
thing here and this is kind of cool

493
00:18:45,740 --> 00:18:47,090
because it looks like Marco but it's not

494
00:18:47,090 --> 00:18:49,760
it's pure JavaScript and so we're gonna

495
00:18:49,760 --> 00:19:02,690
run this hello yay web server oh alright

496
00:19:02,690 --> 00:19:03,890
cool and this is actually going to get a

497
00:19:03,890 --> 00:19:06,410
little bit messy so I think what I'm

498
00:19:06,410 --> 00:19:11,030
gonna do is put this down here this is

499
00:19:11,030 --> 00:19:15,190
for Isaac thank you alright cool so

500
00:19:15,190 --> 00:19:17,090
right so we're going to we're gonna pull

501
00:19:17,090 --> 00:19:17,930
some more stuff so we have all this

502
00:19:17,930 --> 00:19:19,040
library of these tiny functions so

503
00:19:19,040 --> 00:19:20,810
what's the first thing you want to do in

504
00:19:20,810 --> 00:19:23,780
a web framework we have okay with web

505
00:19:23,780 --> 00:19:25,160
servers just returning hello what else

506
00:19:25,160 --> 00:19:30,920
do we want to do yeah like a root okay

507
00:19:30,920 --> 00:19:32,510
cool we have that it's a tiny app it's

508
00:19:32,510 --> 00:19:35,840
called root thank you check is coming

509
00:19:35,840 --> 00:19:37,550
and so let's root so what does it look

510
00:19:37,550 --> 00:19:39,410
like I don't want to create a lot again

511
00:19:39,410 --> 00:19:40,640
what am I claims about these web

512
00:19:40,640 --> 00:19:41,780
frameworks is they all create like their

513
00:19:41,780 --> 00:19:43,370
own special syntax you have a syntax for

514
00:19:43,370 --> 00:19:45,140
matching strings it's called red X ok

515
00:19:45,140 --> 00:19:48,530
Reeve that and so here's I'm going to do

516
00:19:48,530 --> 00:19:50,300
I'm going to wrote and I'm going to do

517
00:19:50,300 --> 00:19:52,670
it on this is going to have to met this

518
00:19:52,670 --> 00:19:59,370
is going to have to match the root path

519
00:19:59,380 --> 00:20:04,470
all right cool all right

520
00:20:04,480 --> 00:20:07,090
right that's a block okay and then if it

521
00:20:07,090 --> 00:20:11,290
doesn't match we will return not found

522
00:20:11,290 --> 00:20:19,150
and that will status for oki all right

523
00:20:19,150 --> 00:20:20,350
does everyone understand what's going on

524
00:20:20,350 --> 00:20:24,549
here all right should be pretty easy it

525
00:20:24,549 --> 00:20:27,370
looks to us I've invented this it looks

526
00:20:27,370 --> 00:20:29,169
like it's indented it's it's not Python

527
00:20:29,169 --> 00:20:31,390
indentation is meaningless each app is

528
00:20:31,390 --> 00:20:33,220
responsible for knowing what happens

529
00:20:33,220 --> 00:20:34,750
here's what Rupe does when root is

530
00:20:34,750 --> 00:20:36,340
called it's like give me a stream give

531
00:20:36,340 --> 00:20:37,660
me a stream give me a stream right

532
00:20:37,660 --> 00:20:39,760
actually I did this wrong I Paul does

533
00:20:39,760 --> 00:20:41,830
it's like give me a stream until it sees

534
00:20:41,830 --> 00:20:46,240
stop this should be out here right until

535
00:20:46,240 --> 00:20:48,460
it sees stop and then it says okay

536
00:20:48,460 --> 00:20:49,900
everything that I just got in that

537
00:20:49,900 --> 00:20:51,640
stream if it matches I'm going to I'm

538
00:20:51,640 --> 00:20:53,290
going to reify that stream if it doesn't

539
00:20:53,290 --> 00:20:54,400
match i'm going to refi the next dream

540
00:20:54,400 --> 00:20:56,440
so if this worked properly what should

541
00:20:56,440 --> 00:20:59,260
happen now when we read this oops we

542
00:20:59,260 --> 00:21:02,710
reboot this thing is that I still get

543
00:21:02,710 --> 00:21:03,970
hello but if I take some weary path like

544
00:21:03,970 --> 00:21:06,640
it not found okay is that cool they're

545
00:21:06,640 --> 00:21:10,059
gonna get that really really all right

546
00:21:10,059 --> 00:21:11,320
you want to see the source it's really

547
00:21:11,320 --> 00:21:13,570
that bad it's earlier than others not so

548
00:21:13,570 --> 00:21:20,590
bad so what does we do all right well

549
00:21:20,590 --> 00:21:23,650
basically this is it we have something

550
00:21:23,650 --> 00:21:24,940
called stream stream just basically

551
00:21:24,940 --> 00:21:26,919
takes a stream and saves it you can

552
00:21:26,919 --> 00:21:29,470
replay it later so get a stream we're

553
00:21:29,470 --> 00:21:30,940
going to call that yes get another

554
00:21:30,940 --> 00:21:32,020
stream we're going to call that no

555
00:21:32,020 --> 00:21:34,480
return a nap right which is just a

556
00:21:34,480 --> 00:21:37,120
function that gets evaluated that looks

557
00:21:37,120 --> 00:21:39,250
for that URL if you have a pattern in

558
00:21:39,250 --> 00:21:41,530
there it'll it'll capture that and store

559
00:21:41,530 --> 00:21:43,750
that in the head and sorry like hit URL

560
00:21:43,750 --> 00:21:46,000
that whatever and if not it'll actually

561
00:21:46,000 --> 00:21:48,730
just keep it alittle just I'm sorry if

562
00:21:48,730 --> 00:21:49,960
it doesn't match it'll go to the second

563
00:21:49,960 --> 00:21:53,470
stream so going back here I guess we

564
00:21:53,470 --> 00:21:56,230
have five minutes left so that worked

565
00:21:56,230 --> 00:21:58,960
alright cool so we routed what else do

566
00:21:58,960 --> 00:22:01,330
we do in a nap well let's for example if

567
00:22:01,330 --> 00:22:03,910
we want to say like hello we wanted to

568
00:22:03,910 --> 00:22:05,200
say like a name like if you want to say

569
00:22:05,200 --> 00:22:07,270
hello mean you could capture something

570
00:22:07,270 --> 00:22:09,160
there and so all that would look like is

571
00:22:09,160 --> 00:22:13,810
basically

572
00:22:13,820 --> 00:22:15,510
actually you know what let's do HTML

573
00:22:15,510 --> 00:22:18,660
first HTML actually you know I'm going

574
00:22:18,660 --> 00:22:19,500
to slide back because I'm only five

575
00:22:19,500 --> 00:22:20,460
minutes left I'm going to tell you about

576
00:22:20,460 --> 00:22:23,970
HTML I have an HTML ideas about HTML

577
00:22:23,970 --> 00:22:26,010
template is like the literally the

578
00:22:26,010 --> 00:22:28,350
biggest thing and the node modules it's

579
00:22:28,350 --> 00:22:29,610
like the biggest less after databases

580
00:22:29,610 --> 00:22:30,780
right it's huge there's a zillion

581
00:22:30,780 --> 00:22:32,040
templates and they all do it differently

582
00:22:32,040 --> 00:22:35,250
and I'm not a huge fan of any of them so

583
00:22:35,250 --> 00:22:37,410
i created my own it's called fab market

584
00:22:37,410 --> 00:22:44,640
language and so all right so all right

585
00:22:44,640 --> 00:22:45,960
so if you created a template what would

586
00:22:45,960 --> 00:22:47,130
it look like mustache is awesome i

587
00:22:47,130 --> 00:22:48,870
really like mustache a lot of like you

588
00:22:48,870 --> 00:22:50,940
know the power of rustics what's it

589
00:22:50,940 --> 00:22:54,000
called but basically here's I I think it

590
00:22:54,000 --> 00:22:56,580
Maps pretty well ok we have HTML we have

591
00:22:56,580 --> 00:23:01,130
JavaScript right so like are you with me

592
00:23:01,130 --> 00:23:08,520
all right good okay all right sure okay

593
00:23:08,520 --> 00:23:12,020
sure close that and your contents and

594
00:23:12,020 --> 00:23:21,870
close that okay these are identical

595
00:23:21,880 --> 00:23:24,460
okay that's a win I think cuz it's like

596
00:23:24,460 --> 00:23:25,660
you don't have to learn anything I have

597
00:23:25,660 --> 00:23:27,340
to learn that like you know since I

598
00:23:27,340 --> 00:23:29,050
means this and it's like I don't want to

599
00:23:29,050 --> 00:23:30,870
reinvent pearl in the template engine

600
00:23:30,870 --> 00:23:34,120
and so basically what your HTML app

601
00:23:34,120 --> 00:23:38,320
looks like is this right take a pipe

602
00:23:38,320 --> 00:23:41,170
right the open tag push everything

603
00:23:41,170 --> 00:23:42,400
through as long as there's data when

604
00:23:42,400 --> 00:23:44,530
data ends all right push the close tag

605
00:23:44,530 --> 00:23:46,480
that's it's really easy there's a

606
00:23:46,480 --> 00:23:47,590
special case in this that I'm not

607
00:23:47,590 --> 00:23:51,010
showing here for I'm sorry I'd like your

608
00:23:51,010 --> 00:23:53,670
argument what you call those attributes

609
00:23:53,670 --> 00:23:56,500
but that's basically it you know all

610
00:23:56,500 --> 00:23:58,480
right right the div return this function

611
00:23:58,480 --> 00:24:01,120
if there's data right it return read

612
00:24:01,120 --> 00:24:04,750
really back when data ends right there

613
00:24:04,750 --> 00:24:07,390
okay cool and so basically what we can

614
00:24:07,390 --> 00:24:09,630
do here at this point is import HTML

615
00:24:09,630 --> 00:24:13,120
right and so and here's you guys this is

616
00:24:13,120 --> 00:24:16,480
where you might deport with me all right

617
00:24:16,480 --> 00:24:18,370
you see we're doing here is the

618
00:24:18,370 --> 00:24:19,780
namespace all this thing is a namespace

619
00:24:19,780 --> 00:24:21,550
for each element but what that means is

620
00:24:21,550 --> 00:24:22,840
we can do like really cool stuff left

621
00:24:22,840 --> 00:24:25,390
except actually what we can do this we

622
00:24:25,390 --> 00:24:26,620
can actually put this around the route

623
00:24:26,620 --> 00:24:28,180
we can put this here so we can go you

624
00:24:28,180 --> 00:24:35,980
know HTML body you know ID equals you

625
00:24:35,980 --> 00:24:41,020
know James Jaya school and then mmm

626
00:24:41,020 --> 00:24:44,470
that's here actually whole what I do

627
00:24:44,470 --> 00:24:46,060
hope that this year to you right we want

628
00:24:46,060 --> 00:24:47,320
this not found to be in there so

629
00:24:47,320 --> 00:24:48,820
basically instead of having a router in

630
00:24:48,820 --> 00:24:50,650
front of your app your router is your

631
00:24:50,650 --> 00:24:51,820
appt your router is just another app in

632
00:24:51,820 --> 00:24:53,200
this chain you can route anywhere you

633
00:24:53,200 --> 00:24:55,060
mean of course you can abused this and

634
00:24:55,060 --> 00:24:57,520
your code can look like PHP but you

635
00:24:57,520 --> 00:24:58,750
don't have to i mean you could you could

636
00:24:58,750 --> 00:24:59,860
put it wherever you want but the idea is

637
00:24:59,860 --> 00:25:03,480
that it's super easy to get started oh

638
00:25:03,480 --> 00:25:09,720
man get there whoo there it is right

639
00:25:09,720 --> 00:25:13,390
there's enough phone okay HTML and again

640
00:25:13,390 --> 00:25:15,520
this entire thing is asynchronous this

641
00:25:15,520 --> 00:25:16,870
think it's it forever okay check this

642
00:25:16,870 --> 00:25:18,100
out how much done

643
00:25:18,100 --> 00:25:20,980
am I done I got two minutes check this

644
00:25:20,980 --> 00:25:25,600
out I have something called sleep what

645
00:25:25,600 --> 00:25:29,289
do you think this does is it synchronous

646
00:25:29,289 --> 00:25:32,350
who thinks at synchronous you guys know

647
00:25:32,350 --> 00:25:35,500
me so well all right cool let's put it

648
00:25:35,500 --> 00:25:39,059
right here I want to sleep for a second

649
00:25:39,059 --> 00:25:41,410
that's pretty dangerous right but no

650
00:25:41,410 --> 00:25:43,360
what is sleep do as soon as it's called

651
00:25:43,360 --> 00:25:44,980
it gets a stream of everything that's

652
00:25:44,980 --> 00:25:47,200
left and it saves that and it's like it

653
00:25:47,200 --> 00:25:48,429
does its thing and when it's over it

654
00:25:48,429 --> 00:25:49,840
just replace it right and you can do

655
00:25:49,840 --> 00:25:51,130
that because you've all the state in

656
00:25:51,130 --> 00:25:52,900
your application is in this chain that

657
00:25:52,900 --> 00:25:54,340
function knows exactly what's happening

658
00:25:54,340 --> 00:25:55,360
and that's the benefit of using the

659
00:25:55,360 --> 00:25:59,679
style and so if this works i havenít

660
00:25:59,679 --> 00:26:05,090
winner yet this should take a while

661
00:26:05,100 --> 00:26:07,480
right and so actually you can keep doing

662
00:26:07,480 --> 00:26:10,419
that so I can just go like Bam Bam Bam

663
00:26:10,419 --> 00:26:12,630
Bam and then what I can do is actually

664
00:26:12,630 --> 00:26:14,830
let's see if this works I can go over

665
00:26:14,830 --> 00:26:21,030
here and go do this I hope this works oh

666
00:26:21,030 --> 00:26:24,070
I'm sorry did it oh I didn't I yeah if I

667
00:26:24,070 --> 00:26:31,940
forget what we started

668
00:26:31,950 --> 00:26:34,480
right that's for free you didn't have to

669
00:26:34,480 --> 00:26:36,040
do any sort of marshalling of anything

670
00:26:36,040 --> 00:26:37,330
like that's kind of cool right it's just

671
00:26:37,330 --> 00:26:39,340
just as long as you can you know control

672
00:26:39,340 --> 00:26:40,540
yourself enough to conform to this kind

673
00:26:40,540 --> 00:26:43,990
of spec stuff like that is easy and that

674
00:26:43,990 --> 00:26:47,190
you sound you slide again fast forward

675
00:26:47,190 --> 00:27:03,480
through this is it thank you

