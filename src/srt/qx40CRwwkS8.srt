1
00:00:15,309 --> 00:00:18,939

first of all out of curiosity from the

2
00:00:18,939 --> 00:00:21,160
audience who knows what reader giasses

3
00:00:21,160 --> 00:00:24,820
you can return who doesn't know what

4
00:00:24,820 --> 00:00:32,079
trilogy is - okay like anyway like

5
00:00:32,079 --> 00:00:33,600
everything introduction for those guys

6
00:00:33,600 --> 00:00:36,160
but then I were gonna dazzle it into

7
00:00:36,160 --> 00:00:38,140
technical stuff but hopefully people are

8
00:00:38,140 --> 00:00:41,289
gonna be able to follow with all this

9
00:00:41,289 --> 00:00:44,320
so 330s is a it's a library which aims

10
00:00:44,320 --> 00:00:48,370
to make the process of 3d concentrated

11
00:00:48,370 --> 00:00:52,800
fatigue concentrate on create a 3 a 2

12
00:00:52,800 --> 00:00:58,780
for the web much easier the color is the

13
00:00:58,780 --> 00:01:01,319
way it has been built the core is not

14
00:01:01,319 --> 00:01:04,059
attached to the runner so we have the

15
00:01:04,059 --> 00:01:06,850
same scene graph in one side some of the

16
00:01:06,850 --> 00:01:08,920
abilities but you can plug any vendor

17
00:01:08,920 --> 00:01:11,320
that you want you can render that data

18
00:01:11,320 --> 00:01:14,409
in whichever one you want these are ours

19
00:01:14,409 --> 00:01:16,450
they have like a WebGL room their

20
00:01:16,450 --> 00:01:18,640
cameras render as we hear and the dumb

21
00:01:18,640 --> 00:01:20,920
renderer whichever you is you when I add

22
00:01:20,920 --> 00:01:23,200
another one issues after you is

23
00:01:23,200 --> 00:01:26,050
obviously written in JavaScript we have

24
00:01:26,050 --> 00:01:27,940
some tools written in Python which is

25
00:01:27,940 --> 00:01:29,890
mainly for like building the library and

26
00:01:29,890 --> 00:01:31,480
minifying and compressing and things

27
00:01:31,480 --> 00:01:34,260
like that we also have like a nodejs

28
00:01:34,260 --> 00:01:37,150
builder but we really haven't really

29
00:01:37,150 --> 00:01:39,520
used it too much house house it's

30
00:01:39,520 --> 00:01:40,780
awesome

31
00:01:40,780 --> 00:01:42,820
github and it's released under the MIT

32
00:01:42,820 --> 00:01:47,850
license so this is this was you can see

33
00:01:47,850 --> 00:01:50,520
this was like a state of the art of

34
00:01:50,520 --> 00:01:53,170
canvas render like through the Jade like

35
00:01:53,170 --> 00:01:55,150
two years ago like we were able to have

36
00:01:55,150 --> 00:01:57,490
like a cube with different colors on its

37
00:01:57,490 --> 00:02:00,460
face and with a fake shadow which is a

38
00:02:00,460 --> 00:02:05,260
plain even like even two years ago I

39
00:02:05,260 --> 00:02:06,520
think Thomas

40
00:02:06,520 --> 00:02:08,319
canvas it on its own but the canvas API

41
00:02:08,319 --> 00:02:11,200
didn't really have anything like no one

42
00:02:11,200 --> 00:02:12,730
had really done much stuff with it so

43
00:02:12,730 --> 00:02:14,980
even if with this implicit like people

44
00:02:14,980 --> 00:02:16,450
were like impressed with it for some

45
00:02:16,450 --> 00:02:19,360
reason I like you know in the past or

46
00:02:19,360 --> 00:02:23,410
something shortly after we had like I

47
00:02:23,410 --> 00:02:28,269
had that thing that keeps hitting weak

48
00:02:28,269 --> 00:02:30,040
we started doing this project they would

49
00:02:30,040 --> 00:02:33,280
in a downtown that it served like a

50
00:02:33,280 --> 00:02:35,680
excuse for like improving the the canvas

51
00:02:35,680 --> 00:02:37,090
renderer a lot like we had to add a lot

52
00:02:37,090 --> 00:02:37,840
of features to it

53
00:02:37,840 --> 00:02:41,469
even even if the actual music video that

54
00:02:41,469 --> 00:02:44,290
we did we didn't use it that much we

55
00:02:44,290 --> 00:02:45,849
were only is it for like some birds on

56
00:02:45,849 --> 00:02:48,159
the homepage and some trees on some

57
00:02:48,159 --> 00:02:51,250
putts but it was really really useful

58
00:02:51,250 --> 00:02:52,959
like he was really like a Kickstarter

59
00:02:52,959 --> 00:02:55,000
for the camera we had we had like so

60
00:02:55,000 --> 00:02:58,510
many features thanks to this in the same

61
00:02:58,510 --> 00:03:01,389
way we did this I think was six months

62
00:03:01,389 --> 00:03:04,419
after that we work on these another

63
00:03:04,419 --> 00:03:07,359
music video that in the same way it

64
00:03:07,359 --> 00:03:09,310
itself as a key it's good excuse for

65
00:03:09,310 --> 00:03:11,139
like implementing lots of features to

66
00:03:11,139 --> 00:03:16,989
the render and this is more or less how

67
00:03:16,989 --> 00:03:21,280
it is where we are now this is some this

68
00:03:21,280 --> 00:03:23,290
is some notes about this raffinate so

69
00:03:23,290 --> 00:03:25,000
this is the graph of comets and github

70
00:03:25,000 --> 00:03:27,909
and as you can see this was small as a

71
00:03:27,909 --> 00:03:31,030
pea Oh mm mm um when I was may put it on

72
00:03:31,030 --> 00:03:33,040
github you can see more or less my

73
00:03:33,040 --> 00:03:35,530
enthusiasm how he was going down a

74
00:03:35,530 --> 00:03:38,260
little bit but I think this is more or

75
00:03:38,260 --> 00:03:40,840
less when we were working on the

76
00:03:40,840 --> 00:03:43,209
wouldn't wouldn't something website and

77
00:03:43,209 --> 00:03:45,609
then there's a gap which is you know you

78
00:03:45,609 --> 00:03:47,379
finish a project and then you retire for

79
00:03:47,379 --> 00:03:50,769
like maybe some weeks and then this is

80
00:03:50,769 --> 00:03:53,560
when a also qualia joining and solitude

81
00:03:53,560 --> 00:03:56,769
submitted some commits and it's created

82
00:03:56,769 --> 00:04:00,220
like interesting phenomenon that we

83
00:04:00,220 --> 00:04:02,919
somehow found ourselves like fighting to

84
00:04:02,919 --> 00:04:06,009
see who was committing most under to the

85
00:04:06,009 --> 00:04:10,090
library and it kind of from then on we

86
00:04:10,090 --> 00:04:11,709
had the same pattern now it was more

87
00:04:11,709 --> 00:04:13,780
less here like we were working on this

88
00:04:13,780 --> 00:04:16,150
wrong website on than we did the first

89
00:04:16,150 --> 00:04:18,400
like the base code and we put in more

90
00:04:18,400 --> 00:04:20,109
and more features and then another gap

91
00:04:20,109 --> 00:04:21,940
which is like another project and then

92
00:04:21,940 --> 00:04:24,460
from then on it's like more random this

93
00:04:24,460 --> 00:04:26,110
is from then on it was this like

94
00:04:26,110 --> 00:04:28,479
community driven enough development I

95
00:04:28,479 --> 00:04:30,250
use it doesn't really depend and a

96
00:04:30,250 --> 00:04:32,259
slightly just more like people whatever

97
00:04:32,259 --> 00:04:34,210
they come in and they use put some

98
00:04:34,210 --> 00:04:35,470
comments and then we just try to see

99
00:04:35,470 --> 00:04:37,870
where we're gonna go with this so up

100
00:04:37,870 --> 00:04:40,270
until now they were like about

101
00:04:40,270 --> 00:04:44,979
140 contributors about 4,000 commits

102
00:04:44,979 --> 00:04:47,690
55,000 lines of code

103
00:04:47,690 --> 00:04:50,330
the library minified is about 100 whites

104
00:04:50,330 --> 00:04:54,110
and gzipped it's about 100 kilobytes

105
00:04:54,110 --> 00:04:56,509
which is something I somehow care about

106
00:04:56,509 --> 00:04:59,150
I always wanted know I'd say was like a

107
00:04:59,150 --> 00:05:01,099
good limit to have as a g-sib library to

108
00:05:01,099 --> 00:05:04,220
don't go higher than 100 Kuwait's would

109
00:05:04,220 --> 00:05:05,810
we keep fighting and we are all

110
00:05:05,810 --> 00:05:08,569
determining 95-99 and no it's somehow

111
00:05:08,569 --> 00:05:12,219
interesting but we'll see how it goes

112
00:05:12,219 --> 00:05:15,409
it features a really really really bad

113
00:05:15,409 --> 00:05:18,650
accomodation this is the first complain

114
00:05:18,650 --> 00:05:21,440
from everyone that comes in it also like

115
00:05:21,440 --> 00:05:23,900
from time to time we get some classical

116
00:05:23,900 --> 00:05:25,520
developers the turbulence a like I'll be

117
00:05:25,520 --> 00:05:26,629
surprised that you guys don't have any

118
00:05:26,629 --> 00:05:29,960
any taste at all and this is because we

119
00:05:29,960 --> 00:05:32,060
have like about at this point we have

120
00:05:32,060 --> 00:05:36,620
but 175 examples those examples really

121
00:05:36,620 --> 00:05:40,669
serve as a kind of unit test like in

122
00:05:40,669 --> 00:05:42,050
whenever we change the feature in

123
00:05:42,050 --> 00:05:46,490
Reverse feature a feature we check those

124
00:05:46,490 --> 00:05:47,900
examples of the relevant that are using

125
00:05:47,900 --> 00:05:49,430
that feature we see we've written

126
00:05:49,430 --> 00:05:51,680
something and at the same time those

127
00:05:51,680 --> 00:05:53,719
examples we keep them updated all the

128
00:05:53,719 --> 00:05:56,620
time on like even in the dev channel

129
00:05:56,620 --> 00:06:00,440
brandish they're all the time updated so

130
00:06:00,440 --> 00:06:02,180
you want to learn how something is wrong

131
00:06:02,180 --> 00:06:03,860
again you only had to go to the examples

132
00:06:03,860 --> 00:06:07,490
and see see how this we also make sure

133
00:06:07,490 --> 00:06:10,659
that the the repository doesn't have any

134
00:06:10,659 --> 00:06:13,580
dependencies so you can just download

135
00:06:13,580 --> 00:06:16,129
the whole repository I mean you can

136
00:06:16,129 --> 00:06:17,509
start hacking around you can display

137
00:06:17,509 --> 00:06:20,000
with all this and but you need to bear

138
00:06:20,000 --> 00:06:21,650
in mind that if you are like and always

139
00:06:21,650 --> 00:06:24,830
if you're using from you need to execute

140
00:06:24,830 --> 00:06:26,690
wrong with the allow file access man

141
00:06:26,690 --> 00:06:28,610
files you know that you'll be able to

142
00:06:28,610 --> 00:06:31,000
see some of the demos because it loads

143
00:06:31,000 --> 00:06:36,139
3d meshes with JSON or other formats if

144
00:06:36,139 --> 00:06:39,139
you have any questions or you to play

145
00:06:39,139 --> 00:06:41,270
with that this is also we recently move

146
00:06:41,270 --> 00:06:42,680
all the questions from the github we

147
00:06:42,680 --> 00:06:45,080
move them to a stack overflow and so far

148
00:06:45,080 --> 00:06:48,649
seems like some people is helping rot in

149
00:06:48,649 --> 00:06:50,449
there like some there's some people that

150
00:06:50,449 --> 00:06:52,490
try to help the people whenever they

151
00:06:52,490 --> 00:06:53,340
have some

152
00:06:53,340 --> 00:06:55,110
some problems and so we have a three

153
00:06:55,110 --> 00:06:58,700
three today's as a channel on freenode

154
00:06:58,700 --> 00:07:03,570
so this is how the API is currently I'm

155
00:07:03,570 --> 00:07:05,400
not gonna get dive or like detailed

156
00:07:05,400 --> 00:07:08,070
whole theme but you know as a part of

157
00:07:08,070 --> 00:07:10,170
the reason that we don't have like a

158
00:07:10,170 --> 00:07:13,260
good documentation is because we having

159
00:07:13,260 --> 00:07:14,700
like moving a little bit the API we have

160
00:07:14,700 --> 00:07:16,350
username and some things and it's you

161
00:07:16,350 --> 00:07:17,940
know it is it's also laziness but it

162
00:07:17,940 --> 00:07:20,340
takes some time to change the API and

163
00:07:20,340 --> 00:07:22,620
also update the documentation and we

164
00:07:22,620 --> 00:07:25,860
don't want to put comments and let's

165
00:07:25,860 --> 00:07:29,720
talk about that and okay so this is how

166
00:07:29,720 --> 00:07:32,940
like how you create a camera nowadays we

167
00:07:32,940 --> 00:07:34,200
have mainly two terminals like

168
00:07:34,200 --> 00:07:36,570
perspective camera graphical cameras

169
00:07:36,570 --> 00:07:39,780
different kind of transformations the

170
00:07:39,780 --> 00:07:42,630
view then you create a like a sin which

171
00:07:42,630 --> 00:07:45,450
is what you're gonna be like you can

172
00:07:45,450 --> 00:07:48,030
just think about it in a film in a film

173
00:07:48,030 --> 00:07:49,380
way just assume what you're gonna be

174
00:07:49,380 --> 00:07:51,930
putting all the stuff on that we create

175
00:07:51,930 --> 00:07:55,140
like a cue geometry we load the texture

176
00:07:55,140 --> 00:07:57,420
we have some utilities so like this will

177
00:07:57,420 --> 00:08:00,600
do all the edges are loading and

178
00:08:00,600 --> 00:08:05,220
everything new image and it will then

179
00:08:05,220 --> 00:08:07,050
which we use that texture which is

180
00:08:07,050 --> 00:08:10,530
pretty much like a gift like you can

181
00:08:10,530 --> 00:08:13,200
load in any website and we create a

182
00:08:13,200 --> 00:08:16,290
material using that texture and we then

183
00:08:16,290 --> 00:08:17,700
create like a mesh that was going to use

184
00:08:17,700 --> 00:08:18,990
the geometry that weakly with the cube

185
00:08:18,990 --> 00:08:21,180
with my children and we add that to the

186
00:08:21,180 --> 00:08:25,680
scene because we're using this foam

187
00:08:25,680 --> 00:08:28,260
material if we don't have any light in

188
00:08:28,260 --> 00:08:30,030
the scene we're not gonna see it so we

189
00:08:30,030 --> 00:08:31,320
need to put a light in the scene and in

190
00:08:31,320 --> 00:08:33,240
this case we are copying the position

191
00:08:33,240 --> 00:08:35,520
from the camera into the light so it's

192
00:08:35,520 --> 00:08:37,620
gonna look like you're pointing the

193
00:08:37,620 --> 00:08:40,020
light into what you're seeing and then

194
00:08:40,020 --> 00:08:41,610
finally we create a renderer in this

195
00:08:41,610 --> 00:08:43,500
case we're creating a WebGL renderer

196
00:08:43,500 --> 00:08:46,590
which we are enabling entirely so it

197
00:08:46,590 --> 00:08:49,890
looks that's nicer and the only way to

198
00:08:49,890 --> 00:08:52,650
the only connection to the Dom in this

199
00:08:52,650 --> 00:08:54,930
case is like every render has a dump

200
00:08:54,930 --> 00:08:56,700
limit inside which is just like a canvas

201
00:08:56,700 --> 00:08:59,130
and you can add that as a function of

202
00:08:59,130 --> 00:09:01,680
any node or any part on the Dom you can

203
00:09:01,680 --> 00:09:03,480
also pass a canvas that you've really

204
00:09:03,480 --> 00:09:05,490
created to the constructor but this is

205
00:09:05,490 --> 00:09:07,090
the usual way that we usually do it

206
00:09:07,090 --> 00:09:09,730
and then for an amazing we recommend

207
00:09:09,730 --> 00:09:12,160
using requestanimationframe and in this

208
00:09:12,160 --> 00:09:16,420
case we're just like changing the

209
00:09:16,420 --> 00:09:18,310
rotation on the X and the y-axis and

210
00:09:18,310 --> 00:09:21,040
every frame we are after that we're just

211
00:09:21,040 --> 00:09:23,530
rendering the dot scene from that camera

212
00:09:23,530 --> 00:09:25,810
so we end up with this super amazing

213
00:09:25,810 --> 00:09:30,580
cube super amazing straight and you see

214
00:09:30,580 --> 00:09:33,640
do you kind of see what's the difference

215
00:09:33,640 --> 00:09:35,050
with all these like I'm the first one

216
00:09:35,050 --> 00:09:36,670
but I'd like really really like a big

217
00:09:36,670 --> 00:09:39,220
fan of vanilla J's but you want to see

218
00:09:39,220 --> 00:09:41,530
how what's the code for doing this cube

219
00:09:41,530 --> 00:09:44,470
created with WebGL like this money like

220
00:09:44,470 --> 00:09:47,470
this you know it's some trailer like you

221
00:09:47,470 --> 00:09:48,940
get all this uniforms you create all

222
00:09:48,940 --> 00:09:52,180
this ending the texture I think done

223
00:09:52,180 --> 00:09:55,660
that is the cute like here you define

224
00:09:55,660 --> 00:10:02,050
all the vertices even more all these all

225
00:10:02,050 --> 00:10:06,760
these all the drawing stuff and this is

226
00:10:06,760 --> 00:10:08,560
even considering that that code is

227
00:10:08,560 --> 00:10:13,070
already using some utilities for doing

228
00:10:13,080 --> 00:10:16,570
so next is show a little bit some of the

229
00:10:16,570 --> 00:10:17,740
things that we have been working for the

230
00:10:17,740 --> 00:10:23,320
last year thank you so here is a scene

231
00:10:23,320 --> 00:10:25,060
that we will be able to render it with

232
00:10:25,060 --> 00:10:27,760
WebGL entire from some time ago maybe

233
00:10:27,760 --> 00:10:29,650
maybe a year ago and it looks pretty

234
00:10:29,650 --> 00:10:32,490
decent there are three dynamic lights

235
00:10:32,490 --> 00:10:35,920
func illumination specular highlights

236
00:10:35,920 --> 00:10:38,590
and I went mapping but the question is

237
00:10:38,590 --> 00:10:40,210
can we do better like a lot of times

238
00:10:40,210 --> 00:10:42,160
people and see they see that geo then

239
00:10:42,160 --> 00:10:43,660
was they're telling it's looking like

240
00:10:43,660 --> 00:10:45,400
rendering from the 80s are from the 90s

241
00:10:45,400 --> 00:10:48,670
and the answer is yes of course we can

242
00:10:48,670 --> 00:10:52,500
look to the eternal inspiration for the

243
00:10:52,500 --> 00:10:54,100
advancement of the computer graphics

244
00:10:54,100 --> 00:10:56,890
which are computer games so we use some

245
00:10:56,890 --> 00:10:59,140
techniques from the computer game

246
00:10:59,140 --> 00:11:03,490
developers such as using gamma corrected

247
00:11:03,490 --> 00:11:07,120
rendering pipeline replacing a dog

248
00:11:07,120 --> 00:11:08,620
shading what else is more physically

249
00:11:08,620 --> 00:11:11,550
based rendering or for example using

250
00:11:11,550 --> 00:11:14,340
nice-looking but cheap Trender

251
00:11:14,340 --> 00:11:16,030
approximation of the subsurface

252
00:11:16,030 --> 00:11:18,010
scattering for example used in half-life

253
00:11:18,010 --> 00:11:20,769
2 by using wraparound lighting

254
00:11:20,769 --> 00:11:25,779
here is how this thing can look when we

255
00:11:25,779 --> 00:11:28,300
use exactly the same scene but we are

256
00:11:28,300 --> 00:11:30,720
using more advanced rendering models

257
00:11:30,720 --> 00:11:33,360
it's running at a 60 frames per second

258
00:11:33,360 --> 00:11:39,579
it's looking much more realistic now if

259
00:11:39,579 --> 00:11:41,949
you play games a lot of times people are

260
00:11:41,949 --> 00:11:44,589
complaining that the textures are not

261
00:11:44,589 --> 00:11:45,399
looking okay

262
00:11:45,399 --> 00:11:47,799
and often the trouble is not the quality

263
00:11:47,799 --> 00:11:50,259
of the images but is how the textures

264
00:11:50,259 --> 00:11:51,519
are being interpreted on the graphics

265
00:11:51,519 --> 00:11:53,980
card people are complaining that

266
00:11:53,980 --> 00:11:56,709
textures are looking blurry here how we

267
00:11:56,709 --> 00:11:58,480
can improve this

268
00:11:58,480 --> 00:12:00,309
fortunately WebGL standard has

269
00:12:00,309 --> 00:12:02,860
mechanisms how to be getting newer

270
00:12:02,860 --> 00:12:05,920
features via WebGL extensions and here

271
00:12:05,920 --> 00:12:07,869
we try to evolve our render to be

272
00:12:07,869 --> 00:12:09,910
incorporating new features that are

273
00:12:09,910 --> 00:12:12,910
available in the WebGL as soon as they

274
00:12:12,910 --> 00:12:15,249
as they become practical to be used for

275
00:12:15,249 --> 00:12:17,529
example anisotropic filtering for having

276
00:12:17,529 --> 00:12:19,629
a nicer and crisper textures just

277
00:12:19,629 --> 00:12:22,389
recently landed in the stable browsers

278
00:12:22,389 --> 00:12:27,910
so we modified our texture uploading

279
00:12:27,910 --> 00:12:29,559
algorithm to be able to use and is a

280
00:12:29,559 --> 00:12:31,029
tropic filter in K for example you can

281
00:12:31,029 --> 00:12:33,309
see on the on the right side is all the

282
00:12:33,309 --> 00:12:35,769
way of using trial and error filtering

283
00:12:35,769 --> 00:12:38,350
then if you check how is the texture

284
00:12:38,350 --> 00:12:40,569
changing positive are the horrors in

285
00:12:40,569 --> 00:12:43,089
there is getting blurriness well if you

286
00:12:43,089 --> 00:12:45,249
use anisotropic filtering the textures

287
00:12:45,249 --> 00:12:46,209
stay sharp

288
00:12:46,209 --> 00:12:47,709
exactly the same image but it looks much

289
00:12:47,709 --> 00:12:49,240
better when we use more advanced

290
00:12:49,240 --> 00:12:53,799
filtering now another very how to be

291
00:12:53,799 --> 00:12:56,920
getting higher visual quality of the

292
00:12:56,920 --> 00:12:58,720
rendered images is to be adding more

293
00:12:58,720 --> 00:13:00,429
surface details and here we take

294
00:13:00,429 --> 00:13:02,259
advantage of another of the WebGL

295
00:13:02,259 --> 00:13:04,899
extension it was coming quite recently

296
00:13:04,899 --> 00:13:07,480
to the stable browser is to be using

297
00:13:07,480 --> 00:13:09,249
standard array it's extensions which

298
00:13:09,249 --> 00:13:11,439
allow us to be doing high quality but

299
00:13:11,439 --> 00:13:15,309
mapping this is example like what we

300
00:13:15,309 --> 00:13:17,799
have been able to do like state of the

301
00:13:17,799 --> 00:13:22,149
art of 3js rendering one and a half year

302
00:13:22,149 --> 00:13:24,069
ago with both me and we to do we have

303
00:13:24,069 --> 00:13:26,259
been trying to make it look as good as

304
00:13:26,259 --> 00:13:27,309
possible and that's what we have been

305
00:13:27,309 --> 00:13:29,470
able to do but with more modern

306
00:13:29,470 --> 00:13:31,869
techniques that's what we are able to

307
00:13:31,869 --> 00:13:34,460
achieve in the browser running

308
00:13:34,460 --> 00:13:45,620
60 frames-per-second very high detail

309
00:13:45,630 --> 00:13:47,950
exactly the same model just use more

310
00:13:47,950 --> 00:13:49,450
advanced techniques and also browsers

311
00:13:49,450 --> 00:13:50,649
have been catching up and they've been

312
00:13:50,649 --> 00:13:53,110
adding more features so you just have to

313
00:13:53,110 --> 00:13:59,529
wait and future will come now it's

314
00:13:59,529 --> 00:14:01,600
important to be able not to be having

315
00:14:01,600 --> 00:14:03,910
images that look nice but also we want

316
00:14:03,910 --> 00:14:06,310
to be running as fast as possible and if

317
00:14:06,310 --> 00:14:08,290
you already have a WebGL that is running

318
00:14:08,290 --> 00:14:10,630
directly on the on the graphics card we

319
00:14:10,630 --> 00:14:12,480
are able to take the advantage of

320
00:14:12,480 --> 00:14:15,040
hardware acceleration not just for the

321
00:14:15,040 --> 00:14:16,839
computation of the shading but also we

322
00:14:16,839 --> 00:14:19,779
can try to upload computation of the

323
00:14:19,779 --> 00:14:21,730
simulations to the graphics card and

324
00:14:21,730 --> 00:14:23,589
here we use another of the recent

325
00:14:23,589 --> 00:14:25,980
features that we are able to pass

326
00:14:25,980 --> 00:14:28,360
floating point textures which we can use

327
00:14:28,360 --> 00:14:31,149
to pass the data to the graphics card in

328
00:14:31,149 --> 00:14:33,339
an efficient way so for example it's

329
00:14:33,339 --> 00:14:35,890
useful for particle simulations there if

330
00:14:35,890 --> 00:14:37,390
you have been doing particle simulation

331
00:14:37,390 --> 00:14:38,649
just on the JavaScript we have been able

332
00:14:38,649 --> 00:14:40,620
to have like tens of thousands of

333
00:14:40,620 --> 00:14:43,839
particles here with folding post

334
00:14:43,839 --> 00:14:45,670
textures we can have a million particles

335
00:14:45,670 --> 00:14:48,070
running on the GPU CPU is almost squired

336
00:14:48,070 --> 00:14:50,170
it's just put the shaders on the GPU and

337
00:14:50,170 --> 00:14:51,550
then everything is done in the graphics

338
00:14:51,550 --> 00:15:01,940
card

339
00:15:01,950 --> 00:15:04,750
another simulation that we can offload

340
00:15:04,750 --> 00:15:07,570
to the graphics card is animation of the

341
00:15:07,570 --> 00:15:09,040
characters so for example we are having

342
00:15:09,040 --> 00:15:11,380
hardware accelerated scaling where

343
00:15:11,380 --> 00:15:13,390
either we can be having like a lot of

344
00:15:13,390 --> 00:15:16,320
very simple characters it's it's about

345
00:15:16,320 --> 00:15:20,050
400 buffaloes which are animated

346
00:15:20,050 --> 00:15:23,980
entirely on the GPU or we can try to

347
00:15:23,980 --> 00:15:26,200
have the less but much higher quality

348
00:15:26,200 --> 00:15:30,670
characters with high details which you

349
00:15:30,670 --> 00:15:36,720
probably familiar from

350
00:15:36,730 --> 00:15:39,040
it's again right there at the 60

351
00:15:39,040 --> 00:15:40,660
frames-per-second running in your

352
00:15:40,660 --> 00:15:46,540
browser now it's it's important but to

353
00:15:46,540 --> 00:15:48,160
be having nice images and running fast

354
00:15:48,160 --> 00:15:50,200
but if you want to be doing more

355
00:15:50,200 --> 00:15:52,870
complicated applications you are going

356
00:15:52,870 --> 00:15:54,730
to want to be putting more and more data

357
00:15:54,730 --> 00:15:56,680
inside so for example when we have been

358
00:15:56,680 --> 00:15:58,690
starting we have been doing almost

359
00:15:58,690 --> 00:16:00,100
everything was having a representation

360
00:16:00,100 --> 00:16:02,650
of the other models in the JavaScript

361
00:16:02,650 --> 00:16:04,750
down to the things like every vertex was

362
00:16:04,750 --> 00:16:08,260
JavaScript object but we soon we found

363
00:16:08,260 --> 00:16:10,510
out that this takes really really a lot

364
00:16:10,510 --> 00:16:13,300
of memory so we tried to be using more

365
00:16:13,300 --> 00:16:15,850
efficient memory representation of the

366
00:16:15,850 --> 00:16:18,190
geometries and for example we are using

367
00:16:18,190 --> 00:16:19,770
just type at our eyes that we

368
00:16:19,770 --> 00:16:21,730
initialized from the from the JavaScript

369
00:16:21,730 --> 00:16:25,030
but once we upload it to the GPU then we

370
00:16:25,030 --> 00:16:26,170
can just completely forget about the

371
00:16:26,170 --> 00:16:28,060
JavaScript part and then we are able to

372
00:16:28,060 --> 00:16:31,600
get crazy savings on the memory both on

373
00:16:31,600 --> 00:16:33,550
the memory and on the initialization

374
00:16:33,550 --> 00:16:37,690
time of the other models here is the

375
00:16:37,690 --> 00:16:41,340
example of 160,000 geometries that it

376
00:16:41,340 --> 00:16:43,990
initializes instantly and and it's also

377
00:16:43,990 --> 00:16:45,880
running fast because the layout in the

378
00:16:45,880 --> 00:16:47,710
memories is more friendly for the for

379
00:16:47,710 --> 00:16:54,760
the graphics card now a big part of the

380
00:16:54,760 --> 00:16:58,930
of the models is not just geometries but

381
00:16:58,930 --> 00:17:01,060
also the textures if you are doing

382
00:17:01,060 --> 00:17:02,530
classical web developments you are

383
00:17:02,530 --> 00:17:04,210
mostly concerned with the sizes of the

384
00:17:04,210 --> 00:17:06,430
of the textures which are going over the

385
00:17:06,430 --> 00:17:08,920
wire but if we are doing 3d graphics

386
00:17:08,920 --> 00:17:11,320
programming no matter how small is your

387
00:17:11,320 --> 00:17:14,140
JPEG or PNG or gif it's going to be

388
00:17:14,140 --> 00:17:16,510
expanded to the full sized image on the

389
00:17:16,510 --> 00:17:18,280
graphics card memory and very soon you

390
00:17:18,280 --> 00:17:20,260
are going to be running out of the GPU

391
00:17:20,260 --> 00:17:22,720
memory so for this game industry

392
00:17:22,720 --> 00:17:25,560
developed compressed textures which are

393
00:17:25,560 --> 00:17:27,520
uploaded compressed to the to the

394
00:17:27,520 --> 00:17:29,160
graphics card but then they are

395
00:17:29,160 --> 00:17:31,480
uncompressed directly just in the time

396
00:17:31,480 --> 00:17:33,100
when vendor they are going to be used

397
00:17:33,100 --> 00:17:35,530
for the rendering so for this we have it

398
00:17:35,530 --> 00:17:36,930
just very recently

399
00:17:36,930 --> 00:17:38,830
implementing support for compressed

400
00:17:38,830 --> 00:17:41,290
textures we don't have yet any a nice

401
00:17:41,290 --> 00:17:44,980
beautiful demo but you can get quite a

402
00:17:44,980 --> 00:17:48,160
large savings on the GPU memory card

403
00:17:48,160 --> 00:17:49,840
which means that in the future you will

404
00:17:49,840 --> 00:17:50,500
be able to put

405
00:17:50,500 --> 00:17:54,040
more each Vitra warts under the WebGL

406
00:17:54,040 --> 00:17:58,690
applications now it's important not just

407
00:17:58,690 --> 00:18:02,050
the sizes that are being on the runtime

408
00:18:02,050 --> 00:18:03,970
but it's also important the sizes of the

409
00:18:03,970 --> 00:18:06,220
models that are going over the internet

410
00:18:06,220 --> 00:18:09,580
it's if you check in with our games even

411
00:18:09,580 --> 00:18:11,640
simple indie games are like hundreds

412
00:18:11,640 --> 00:18:15,940
megabytes gigabytes so if you are used

413
00:18:15,940 --> 00:18:17,290
to the web that you click on the

414
00:18:17,290 --> 00:18:18,880
something and it's immediately available

415
00:18:18,880 --> 00:18:20,800
it wouldn't work if we would have a

416
00:18:20,800 --> 00:18:23,650
large sizes of the models and here we

417
00:18:23,650 --> 00:18:25,990
have been trying various approaches

418
00:18:25,990 --> 00:18:29,500
where we started from the simple JSON

419
00:18:29,500 --> 00:18:31,330
and here you have been quite lucky

420
00:18:31,330 --> 00:18:33,370
because a whole web stack is made to be

421
00:18:33,370 --> 00:18:36,460
to be working with the gzip so so we

422
00:18:36,460 --> 00:18:38,650
never actually have to be looking on the

423
00:18:38,650 --> 00:18:40,120
side of the uncompressed model because

424
00:18:40,120 --> 00:18:41,710
anyway if you are saying you are going

425
00:18:41,710 --> 00:18:44,020
to be using gzip for transferring all

426
00:18:44,020 --> 00:18:47,910
your data but even here if we are using

427
00:18:47,910 --> 00:18:51,820
the data formats that are knowing about

428
00:18:51,820 --> 00:18:53,470
what's inside the data we know that

429
00:18:53,470 --> 00:18:54,970
these are vertices and we can we can

430
00:18:54,970 --> 00:18:57,550
truncate some of the precision and it's

431
00:18:57,550 --> 00:18:59,350
still going to be looking okay and we

432
00:18:59,350 --> 00:19:01,030
are able to get like five times smaller

433
00:19:01,030 --> 00:19:05,950
gzip sizes here is for example this is a

434
00:19:05,950 --> 00:19:07,090
model that that we have been speaking

435
00:19:07,090 --> 00:19:08,830
about and it's its high detail model

436
00:19:08,830 --> 00:19:12,040
that that itself is similarly sized like

437
00:19:12,040 --> 00:19:14,860
if it would have a1 PNG just just be the

438
00:19:14,860 --> 00:19:18,280
screenshot of the of the image and for

439
00:19:18,280 --> 00:19:20,500
example this is a fairly detailed model

440
00:19:20,500 --> 00:19:23,560
that post geometry and and and the

441
00:19:23,560 --> 00:19:24,880
textures we have we have a Becky

442
00:19:24,880 --> 00:19:27,880
illumination this is 700 kilobytes and

443
00:19:27,880 --> 00:19:32,890
you see that it's not instantly and here

444
00:19:32,890 --> 00:19:35,530
Ricardo will tell about what's next in

445
00:19:35,530 --> 00:19:41,110
the pipeline so most of those things

446
00:19:41,110 --> 00:19:42,550
that he has been talking about those

447
00:19:42,550 --> 00:19:44,500
those that that those things are already

448
00:19:44,500 --> 00:19:46,570
like on the library you can use that is

449
00:19:46,570 --> 00:19:48,130
not something that is works magically

450
00:19:48,130 --> 00:19:50,410
but you have holes or you can you have

451
00:19:50,410 --> 00:19:53,050
API to use all these stuff some of the

452
00:19:53,050 --> 00:19:55,150
things that we have been experimenting

453
00:19:55,150 --> 00:19:58,870
with has been like more renders like

454
00:19:58,870 --> 00:20:01,480
this there is people that still rely on

455
00:20:01,480 --> 00:20:04,240
cameras render because WebGL is still

456
00:20:04,240 --> 00:20:05,800
an explorer this little listen welcome

457
00:20:05,800 --> 00:20:08,020
likes if I is not enabled by default or

458
00:20:08,020 --> 00:20:10,660
like iOS it doesn't work at all so those

459
00:20:10,660 --> 00:20:12,160
people still want to have some 3d

460
00:20:12,160 --> 00:20:14,440
graphics on the web so they use the

461
00:20:14,440 --> 00:20:15,700
cameras renderer and Department the

462
00:20:15,700 --> 00:20:19,270
cameras render is it just is a hack on

463
00:20:19,270 --> 00:20:21,400
top of each other like for doing like

464
00:20:21,400 --> 00:20:23,230
many things like we do like really crazy

465
00:20:23,230 --> 00:20:24,640
things that you will be laughing for

466
00:20:24,640 --> 00:20:28,870
today's the problem the problem with

467
00:20:28,870 --> 00:20:31,179
that is that for instance canvas the

468
00:20:31,179 --> 00:20:34,860
canvas API the cameras vector API has

469
00:20:34,860 --> 00:20:38,170
unserious enabled by default and there

470
00:20:38,170 --> 00:20:40,150
is no way to disable that that creates

471
00:20:40,150 --> 00:20:43,420
problems like the when you throw two

472
00:20:43,420 --> 00:20:46,150
polygons you will see like a line in

473
00:20:46,150 --> 00:20:48,429
between it like if it was Y from a

474
00:20:48,429 --> 00:20:50,230
solution for that what we do is expand

475
00:20:50,230 --> 00:20:52,150
each polygon like a little it's a

476
00:20:52,150 --> 00:20:54,820
overlapped so we're talking with some of

477
00:20:54,820 --> 00:20:57,309
the people that cannot define that can

478
00:20:57,309 --> 00:20:59,559
expect like would see if it was possible

479
00:20:59,559 --> 00:21:02,530
to reuse like the the WebGL stacked in

480
00:21:02,530 --> 00:21:06,220
the same way that you can enable or

481
00:21:06,220 --> 00:21:07,929
disable actually see it but they use

482
00:21:07,929 --> 00:21:09,220
tell me like oh what's the use case and

483
00:21:09,220 --> 00:21:10,929
I was showing like ideas when heart is a

484
00:21:10,929 --> 00:21:12,640
3d stuff and they Tommy argue it will

485
00:21:12,640 --> 00:21:17,140
WebGL for that okay so at that point I

486
00:21:17,140 --> 00:21:19,330
were like okay so what's what's what's

487
00:21:19,330 --> 00:21:20,710
the solution of what what kind of thing

488
00:21:20,710 --> 00:21:22,000
to come which felt like this one I was

489
00:21:22,000 --> 00:21:24,970
wondering like is it possible to what do

490
00:21:24,970 --> 00:21:27,160
we happen if we still use the cameras

491
00:21:27,160 --> 00:21:29,710
run ever with canvas API but we don't

492
00:21:29,710 --> 00:21:32,890
use the vector of API we used like they

493
00:21:32,890 --> 00:21:35,140
much data API so you get a buffer you

494
00:21:35,140 --> 00:21:36,790
get a like a type array which is just

495
00:21:36,790 --> 00:21:38,770
like all the pixels in the buffer and

496
00:21:38,770 --> 00:21:40,870
you draw the triangle speaks of a pixel

497
00:21:40,870 --> 00:21:42,880
like no it's it sounds crazy but this is

498
00:21:42,880 --> 00:21:45,550
how the 3d was done 20 years ago say you

499
00:21:45,550 --> 00:21:48,640
know I was just curious to see how it

500
00:21:48,640 --> 00:21:49,900
was gonna be him how he was gonna be

501
00:21:49,900 --> 00:21:53,700
performin or not so the output is not

502
00:21:53,700 --> 00:21:56,620
exactly the same because I happen the

503
00:21:56,620 --> 00:21:58,450
problem with this kind of render is that

504
00:21:58,450 --> 00:21:59,650
it takes some time to implement the

505
00:21:59,650 --> 00:22:03,610
features but this is how it was the kind

506
00:22:03,610 --> 00:22:05,350
of thing that you can do with cameras

507
00:22:05,350 --> 00:22:07,450
renderer like in this foot in this case

508
00:22:07,450 --> 00:22:08,710
I don't know you can see which will go

509
00:22:08,710 --> 00:22:12,970
to the light so so in this case it's

510
00:22:12,970 --> 00:22:14,679
technically the same thing as in the

511
00:22:14,679 --> 00:22:17,330
other demo even if they looks different

512
00:22:17,330 --> 00:22:20,570
we're just trading triangles and we're

513
00:22:20,570 --> 00:22:24,110
doing a crazy big map and doing three

514
00:22:24,110 --> 00:22:25,460
pixels and then somehow it's carrying

515
00:22:25,460 --> 00:22:27,110
that and we're using that as for like

516
00:22:27,110 --> 00:22:29,240
painting each triangle with different

517
00:22:29,240 --> 00:22:32,149
colors on each corner and this is you

518
00:22:32,149 --> 00:22:35,240
know six frames of second and in this

519
00:22:35,240 --> 00:22:37,970
machine which is pretty powerful sorry

520
00:22:37,970 --> 00:22:40,130
and these are on an iPad this is about

521
00:22:40,130 --> 00:22:43,190
one frame per second so what we have now

522
00:22:43,190 --> 00:22:45,620
is just this one which is the technique

523
00:22:45,620 --> 00:22:47,149
is the same thing again it doesn't look

524
00:22:47,149 --> 00:22:48,470
the same but the bottleneck it's not

525
00:22:48,470 --> 00:22:50,149
unpack relating the light the bottleneck

526
00:22:50,149 --> 00:22:53,120
is on rendering those triangles and we

527
00:22:53,120 --> 00:22:54,799
can see that this one is 60 frames per

528
00:22:54,799 --> 00:22:57,649
second which is quite an improvement the

529
00:22:57,649 --> 00:22:59,510
problem with this is that we don't we

530
00:22:59,510 --> 00:23:01,520
cannot well we can do until this in the

531
00:23:01,520 --> 00:23:08,020
long term but I wouldn't want to do that

532
00:23:08,020 --> 00:23:11,179
but the thing is on an iPad the p1 as I

533
00:23:11,179 --> 00:23:12,559
said it was one frame per second and

534
00:23:12,559 --> 00:23:14,990
these girls are like about 10 frames per

535
00:23:14,990 --> 00:23:17,990
second it's still not good enough

536
00:23:17,990 --> 00:23:20,330
like it just tends 10 frames per second

537
00:23:20,330 --> 00:23:21,860
but you know Alice is just all or

538
00:23:21,860 --> 00:23:23,360
something that maybe they improve the

539
00:23:23,360 --> 00:23:26,270
separate performance and we'll see where

540
00:23:26,270 --> 00:23:27,350
it goes but at least we have some

541
00:23:27,350 --> 00:23:30,470
options this is of course this is not

542
00:23:30,470 --> 00:23:33,799
something that really I can make it that

543
00:23:33,799 --> 00:23:37,039
fast like when I'm lucky that German

544
00:23:37,039 --> 00:23:39,980
Geico well a demo seeing I called Rick

545
00:23:39,980 --> 00:23:42,890
helped a lot to make this the way the

546
00:23:42,890 --> 00:23:46,100
render is done and also there's a lava

547
00:23:46,100 --> 00:23:48,919
lake eater of that help on making that

548
00:23:48,919 --> 00:23:50,929
II didn't like to making that's like

549
00:23:50,929 --> 00:23:52,730
double check the cuts to make it that it

550
00:23:52,730 --> 00:23:54,140
to make sure that it was running fast

551
00:23:54,140 --> 00:23:57,470
and so we're gonna be developing this a

552
00:23:57,470 --> 00:23:58,820
little bit and then hopefully at some

553
00:23:58,820 --> 00:24:01,429
point we'll be able to have like render

554
00:24:01,429 --> 00:24:04,340
that is feature tool features the

555
00:24:04,340 --> 00:24:06,049
cameras render and you can use you have

556
00:24:06,049 --> 00:24:08,809
an option but so far this is all we have

557
00:24:08,809 --> 00:24:12,529
right now then another renderer we

558
00:24:12,529 --> 00:24:15,490
didn't have enough is the CSS 3d render

559
00:24:15,490 --> 00:24:18,679
which I don't know if any of you have

560
00:24:18,679 --> 00:24:20,870
play with the CSS 3d but it's a little

561
00:24:20,870 --> 00:24:23,029
bit like kind of WebGL in a way you have

562
00:24:23,029 --> 00:24:25,460
to all do all your mattress is native

563
00:24:25,460 --> 00:24:27,200
mattresses all the transformations and

564
00:24:27,200 --> 00:24:28,909
rotations and it can be a little bit

565
00:24:28,909 --> 00:24:29,630
like

566
00:24:29,630 --> 00:24:31,050
cumbersome so

567
00:24:31,050 --> 00:24:33,210
at some at some point I was wondering

568
00:24:33,210 --> 00:24:34,559
what it will happen in for what what

569
00:24:34,559 --> 00:24:35,670
about doing him and early through the

570
00:24:35,670 --> 00:24:36,960
year so you only do the same thing like

571
00:24:36,960 --> 00:24:38,670
it's create a plane and add it in the

572
00:24:38,670 --> 00:24:39,840
scene and then just move the camera

573
00:24:39,840 --> 00:24:46,410
around so this is what we had so far so

574
00:24:46,410 --> 00:24:49,290
the closing of this is that although

575
00:24:49,290 --> 00:24:51,330
such as iframes that are loading like

576
00:24:51,330 --> 00:24:53,760
some effects from my website for as you

577
00:24:53,760 --> 00:24:57,929
can see it's still interactive so that's

578
00:24:57,929 --> 00:25:00,990
something in instance that even with

579
00:25:00,990 --> 00:25:03,600
WebGL you are not you cannot do easily

580
00:25:03,600 --> 00:25:05,429
because you cannot use the website as a

581
00:25:05,429 --> 00:25:09,270
texture for a module but uh you know

582
00:25:09,270 --> 00:25:11,130
with CSS 3d you can use do this these

583
00:25:11,130 --> 00:25:19,770
kind of hugs

584
00:25:19,780 --> 00:25:23,150
so it's again it's a is really limited

585
00:25:23,150 --> 00:25:27,980
actually maybe I can other you can see

586
00:25:27,980 --> 00:25:31,340
anything I could just creating these

587
00:25:31,340 --> 00:25:33,110
css3 the illustrating an object that you

588
00:25:33,110 --> 00:25:36,050
just add a div into it and then we do

589
00:25:36,050 --> 00:25:38,090
other like that the render will do all

590
00:25:38,090 --> 00:25:41,810
the you so much it is for you it's so

591
00:25:41,810 --> 00:25:44,450
it's really limited to whatever you can

592
00:25:44,450 --> 00:25:46,430
do with dips but you know there is still

593
00:25:46,430 --> 00:25:47,990
like you know like like the sequel is

594
00:25:47,990 --> 00:25:51,050
lay them on ugly so someone to go from

595
00:25:51,050 --> 00:25:52,520
Google that you can release enough stuff

596
00:25:52,520 --> 00:25:54,580
but without having to deal with css3 the

597
00:25:54,580 --> 00:25:56,630
syntax we can use move the camera around

598
00:25:56,630 --> 00:26:02,270
and you think about it and so far for

599
00:26:02,270 --> 00:26:05,360
the last few years we have been doing a

600
00:26:05,360 --> 00:26:08,090
lot of work like kind of creating

601
00:26:08,090 --> 00:26:10,240
resources and and and doing a lot of

602
00:26:10,240 --> 00:26:13,820
code that basically makes the developers

603
00:26:13,820 --> 00:26:16,880
happy have we Google have we we had all

604
00:26:16,880 --> 00:26:19,130
the artists on the side like without

605
00:26:19,130 --> 00:26:20,900
being able to do anything because the

606
00:26:20,900 --> 00:26:23,330
artists won't be able to to play with

607
00:26:23,330 --> 00:26:25,810
all these unless they learn to code so

608
00:26:25,810 --> 00:26:29,420
for the last some months we have started

609
00:26:29,420 --> 00:26:33,650
doing an editor for all this so so the

610
00:26:33,650 --> 00:26:35,930
way one of the the main benefit of this

611
00:26:35,930 --> 00:26:42,320
is that what you see here this is what

612
00:26:42,320 --> 00:26:44,510
you see here this is already the WebGL

613
00:26:44,510 --> 00:26:46,700
render so you can already preview how

614
00:26:46,700 --> 00:26:48,200
how your model is you know look in this

615
00:26:48,200 --> 00:26:53,360
thing so for instance let's see we can

616
00:26:53,360 --> 00:26:58,070
load anyone any model that all the all

617
00:26:58,070 --> 00:26:59,810
the formats that we support like we have

618
00:26:59,810 --> 00:27:01,610
like an obj loader we have like a colada

619
00:27:01,610 --> 00:27:02,900
loader you can use the rock and out them

620
00:27:02,900 --> 00:27:08,720
and we can load us as much as we can and

621
00:27:08,720 --> 00:27:10,760
here you can start playing with the the

622
00:27:10,760 --> 00:27:13,190
usual kind of API in a visual way like

623
00:27:13,190 --> 00:27:15,320
like the three three years API turn

624
00:27:15,320 --> 00:27:19,940
instance you can load the color you can

625
00:27:19,940 --> 00:27:27,770
use light which of course it doesn't

626
00:27:27,770 --> 00:27:29,990
look too really thick

627
00:27:29,990 --> 00:27:33,560
but we have this specular map which does

628
00:27:33,560 --> 00:27:37,550
all the magic for us here and now we

629
00:27:37,550 --> 00:27:39,710
have something which you would look at

630
00:27:39,710 --> 00:27:41,120
the head it looks a little more

631
00:27:41,120 --> 00:27:57,830
realistic and we enable it you know you

632
00:27:57,830 --> 00:28:00,650
can salute like tweak more or less how

633
00:28:00,650 --> 00:28:11,990
you want it to look and let's see the

634
00:28:11,990 --> 00:28:14,630
thing of those color Pickers is that on

635
00:28:14,630 --> 00:28:16,280
Windows they are not real time but on

636
00:28:16,280 --> 00:28:18,560
OSX and chrome wise they are real time

637
00:28:18,560 --> 00:28:19,940
so you can be change the color on you

638
00:28:19,940 --> 00:28:23,410
see it on the model real in real time

639
00:28:23,410 --> 00:28:25,880
but I guess at some point I will just do

640
00:28:25,880 --> 00:28:28,760
our own widget cities works in any

641
00:28:28,760 --> 00:28:30,770
platform so the cool thing of this is

642
00:28:30,770 --> 00:28:33,290
that the artist can just come here use

643
00:28:33,290 --> 00:28:34,910
tweak all those you know it's like like

644
00:28:34,910 --> 00:28:35,630
unity3d

645
00:28:35,630 --> 00:28:38,300
kind of thing just load up the models

646
00:28:38,300 --> 00:28:40,610
put all the materials and all the other

647
00:28:40,610 --> 00:28:43,400
you know just to really see control how

648
00:28:43,400 --> 00:28:49,220
how you want it to look and then we

649
00:28:49,220 --> 00:28:50,960
still have to add these like then you

650
00:28:50,960 --> 00:28:53,390
will be able to export these or you can

651
00:28:53,390 --> 00:28:54,860
just compose the scene and use X for

652
00:28:54,860 --> 00:28:57,350
this for the for the programmer and the

653
00:28:57,350 --> 00:29:00,080
parameter is gonna be like adjacent load

654
00:29:00,080 --> 00:29:01,280
and it's gonna look exactly like the

655
00:29:01,280 --> 00:29:06,260
artist wanted oh yeah

656
00:29:06,260 --> 00:29:10,180
and of course this is right into the

657
00:29:10,180 --> 00:29:12,350
repository so this means that this is

658
00:29:12,350 --> 00:29:15,800
also MIT license so it will be like

659
00:29:15,800 --> 00:29:17,690
interesting like this this I can see

660
00:29:17,690 --> 00:29:20,330
this being as a good base for someone if

661
00:29:20,330 --> 00:29:22,160
someone wants to be like like a game

662
00:29:22,160 --> 00:29:24,110
like they are building a game and they

663
00:29:24,110 --> 00:29:25,520
want to have like a level a level editor

664
00:29:25,520 --> 00:29:27,950
they can use hack around it the tool and

665
00:29:27,950 --> 00:29:29,780
two dependents that they want to do

666
00:29:29,780 --> 00:29:31,460
whatever you want to do and at the same

667
00:29:31,460 --> 00:29:33,920
time if someone wants to add a pile at

668
00:29:33,920 --> 00:29:36,020
the bottom so they can use how to encode

669
00:29:36,020 --> 00:29:39,710
editor that executes some you can just

670
00:29:39,710 --> 00:29:41,330
hide whatever you want and add some sins

671
00:29:41,330 --> 00:29:43,250
of the some objects to the scene you can

672
00:29:43,250 --> 00:29:45,890
saturating like procedural sins and you

673
00:29:45,890 --> 00:29:47,780
can just play with it visually with what

674
00:29:47,780 --> 00:29:50,960
you are creating and yeah we think we

675
00:29:50,960 --> 00:29:54,080
think it has a lot of potential and we

676
00:29:54,080 --> 00:29:56,840
really are curious to see you know weird

677
00:29:56,840 --> 00:29:58,160
in the same way like in the same way

678
00:29:58,160 --> 00:29:59,600
that we build like footage as we were

679
00:29:59,600 --> 00:30:02,150
not sure I mean we we build it because

680
00:30:02,150 --> 00:30:04,280
we donate it but then people come in and

681
00:30:04,280 --> 00:30:05,510
they say oh what about having this like

682
00:30:05,510 --> 00:30:07,580
art that's interesting but the same

683
00:30:07,580 --> 00:30:08,900
thing here like what is building because

684
00:30:08,900 --> 00:30:13,660
we think it's something that we need and

685
00:30:13,660 --> 00:30:16,310
we'll see how people solve it like how

686
00:30:16,310 --> 00:30:18,020
people what they suggest and how the

687
00:30:18,020 --> 00:30:24,040
whole thing evolves so with that over

688
00:30:24,040 --> 00:30:45,940
that's it thank you very much

689
00:30:45,950 --> 00:30:47,820
we have any questions

690
00:30:47,820 --> 00:30:50,970
oh my gosh why'd you have to be over

691
00:30:50,970 --> 00:31:00,110
there

692
00:31:00,120 --> 00:31:02,590
can because you said at the beginning

693
00:31:02,590 --> 00:31:05,800
that the whole library is about 400 K

694
00:31:05,800 --> 00:31:09,490
right the minified bill okay and but can

695
00:31:09,490 --> 00:31:11,920
we like build it without for example

696
00:31:11,920 --> 00:31:14,680
canvas and dam renderer only WebGL stuff

697
00:31:14,680 --> 00:31:17,140
and it will be smaller yeah there if you

698
00:31:17,140 --> 00:31:19,740
go to the what is a folder called tools

699
00:31:19,740 --> 00:31:24,220
tools where we have the Python build and

700
00:31:24,220 --> 00:31:27,550
it includes some JSON files that though

701
00:31:27,550 --> 00:31:29,950
you can just run the Builder using any

702
00:31:29,950 --> 00:31:31,540
other JSON files and though JSON files

703
00:31:31,540 --> 00:31:33,190
are just the files the list of files

704
00:31:33,190 --> 00:31:35,530
that you wanna include is there isn't

705
00:31:35,530 --> 00:31:38,980
wiki or some of the wenching like when

706
00:31:38,980 --> 00:31:40,360
you are doing the list which one goes

707
00:31:40,360 --> 00:31:47,960
first but you can just try thank you

708
00:31:47,970 --> 00:31:52,810
well oh man my mind is blown thank you

