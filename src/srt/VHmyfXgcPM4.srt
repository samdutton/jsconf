1
00:00:15,290 --> 00:00:18,920

I work at boku where I do JavaScript

2
00:00:18,920 --> 00:00:20,690
development and stuff and we've been

3
00:00:20,690 --> 00:00:23,000
stickering everywhere with lots of Bob's

4
00:00:23,000 --> 00:00:24,950
if you want some bob thicker come talk

5
00:00:24,950 --> 00:00:27,410
to me it's a little bit about me because

6
00:00:27,410 --> 00:00:28,670
you might not have heard of me before

7
00:00:28,670 --> 00:00:30,770
I'm a programmer I've been programming

8
00:00:30,770 --> 00:00:34,160
since I've been nine and all is great

9
00:00:34,160 --> 00:00:35,899
and my kind of my focus has been data

10
00:00:35,899 --> 00:00:38,120
visualization and I've been working a

11
00:00:38,120 --> 00:00:39,890
little bit on my own and this year with

12
00:00:39,890 --> 00:00:42,800
the guardian newspaper interactive team

13
00:00:42,800 --> 00:00:44,540
where we've been working on some open

14
00:00:44,540 --> 00:00:46,010
source libraries and some interactive

15
00:00:46,010 --> 00:00:48,470
pieces for the Guardian and what we

16
00:00:48,470 --> 00:00:50,810
realized when we started working on data

17
00:00:50,810 --> 00:00:52,820
visualization open libraries is that

18
00:00:52,820 --> 00:00:55,520
most of our work kind of all the snags

19
00:00:55,520 --> 00:00:57,770
were hitting had to do with data and so

20
00:00:57,770 --> 00:00:59,360
the first library we actually released

21
00:00:59,360 --> 00:01:01,280
had to do with data management on the

22
00:01:01,280 --> 00:01:03,440
client side and this talk was kind of

23
00:01:03,440 --> 00:01:04,879
born I realized that what I really want

24
00:01:04,879 --> 00:01:07,250
to talk about is that you can indeed do

25
00:01:07,250 --> 00:01:09,079
data crunching in your browser and so on

26
00:01:09,079 --> 00:01:12,350
and so really want to talk a little bit

27
00:01:12,350 --> 00:01:14,329
about what is we currently do a data I

28
00:01:14,329 --> 00:01:16,520
would say most of what we do has to do

29
00:01:16,520 --> 00:01:18,590
with this crud space you know we create

30
00:01:18,590 --> 00:01:20,900
records and we update them and we modify

31
00:01:20,900 --> 00:01:23,090
them and and delete them and whatever I

32
00:01:23,090 --> 00:01:25,250
did see no me toque really exciting and

33
00:01:25,250 --> 00:01:27,320
that's great but there's all these other

34
00:01:27,320 --> 00:01:28,700
things that we could be doing right we

35
00:01:28,700 --> 00:01:30,740
could be with all this data that we're

36
00:01:30,740 --> 00:01:32,479
gathering we could actually be computing

37
00:01:32,479 --> 00:01:34,220
various metrics not just for our own

38
00:01:34,220 --> 00:01:36,530
analytics but even for our users and

39
00:01:36,530 --> 00:01:39,320
even more we can give our users filtered

40
00:01:39,320 --> 00:01:40,700
views that have to do with the things

41
00:01:40,700 --> 00:01:43,010
that they care about right and so the

42
00:01:43,010 --> 00:01:43,880
reason I'm here is because I think

43
00:01:43,880 --> 00:01:46,010
that's kind of the awesome zone where we

44
00:01:46,010 --> 00:01:47,750
can combine all these practices that

45
00:01:47,750 --> 00:01:49,520
we've had for many years I have to do

46
00:01:49,520 --> 00:01:52,310
with crud apps but join them with some

47
00:01:52,310 --> 00:01:55,760
more data heavy processing to create

48
00:01:55,760 --> 00:01:58,549
this awesome square right there and so

49
00:01:58,549 --> 00:02:01,580
why client-side a because their browsers

50
00:02:01,580 --> 00:02:05,030
can handle it right if any of you are

51
00:02:05,030 --> 00:02:07,369
done writing apps for IE which I'm sure

52
00:02:07,369 --> 00:02:10,039
all of you are deep down inside then you

53
00:02:10,039 --> 00:02:11,900
know how powerful or modern browsers are

54
00:02:11,900 --> 00:02:13,310
and you can do so much with them so

55
00:02:13,310 --> 00:02:15,650
that's pretty cool and I would say if

56
00:02:15,650 --> 00:02:17,239
you're doing a lot of computations that

57
00:02:17,239 --> 00:02:19,129
have to do with the specific users that

58
00:02:19,129 --> 00:02:20,840
are visiting your systems it's much

59
00:02:20,840 --> 00:02:22,549
easier if we do it on the client you

60
00:02:22,549 --> 00:02:24,200
have to cash less you have to process

61
00:02:24,200 --> 00:02:26,959
less and you're not taking up all those

62
00:02:26,959 --> 00:02:29,030
valuable computing resources so

63
00:02:29,030 --> 00:02:30,530
maybe you can serve more connections or

64
00:02:30,530 --> 00:02:33,560
maybe you can just have more CPU cycles

65
00:02:33,560 --> 00:02:36,260
to do whatever with so yeah browsers

66
00:02:36,260 --> 00:02:39,830
right so before I talk about the various

67
00:02:39,830 --> 00:02:41,060
libraries you can use because that's

68
00:02:41,060 --> 00:02:41,930
what we're going to do today I'm going

69
00:02:41,930 --> 00:02:43,250
to talk a little bit about three

70
00:02:43,250 --> 00:02:44,600
different libraries that have to do a

71
00:02:44,600 --> 00:02:46,610
data crunching including one that had

72
00:02:46,610 --> 00:02:48,920
co-authored with the Guardian folks but

73
00:02:48,920 --> 00:02:50,930
two other ones that are very good at

74
00:02:50,930 --> 00:02:52,850
what they do but before we get to that I

75
00:02:52,850 --> 00:02:54,410
want to talk about how we actually treat

76
00:02:54,410 --> 00:02:56,810
data it's very meta right so so

77
00:02:56,810 --> 00:02:58,250
traditionally we think about data as

78
00:02:58,250 --> 00:03:00,530
rows of Records if anybody's use sequel

79
00:03:00,530 --> 00:03:02,510
or even no sequel whatever call it a

80
00:03:02,510 --> 00:03:04,040
document and the end of the day what you

81
00:03:04,040 --> 00:03:05,930
have is this collection of properties or

82
00:03:05,930 --> 00:03:08,209
dimensions that all combined into us

83
00:03:08,209 --> 00:03:10,880
into this collection of rows right so

84
00:03:10,880 --> 00:03:12,350
something like that right that's what we

85
00:03:12,350 --> 00:03:14,540
expect to have in a client we have this

86
00:03:14,540 --> 00:03:16,519
array of objects with names and

87
00:03:16,519 --> 00:03:18,709
properties and whatever and that's

88
00:03:18,709 --> 00:03:20,810
really great when you are iterating over

89
00:03:20,810 --> 00:03:22,310
things right when you're iterating over

90
00:03:22,310 --> 00:03:23,660
all those objects and you're displaying

91
00:03:23,660 --> 00:03:25,040
them and a list so you're rendering

92
00:03:25,040 --> 00:03:27,650
something all is great but it's really

93
00:03:27,650 --> 00:03:28,880
bad if you're trying to figure out

94
00:03:28,880 --> 00:03:29,930
something about a specific property

95
00:03:29,930 --> 00:03:32,690
right so for example i have this age

96
00:03:32,690 --> 00:03:34,220
property maybe i want to get an average

97
00:03:34,220 --> 00:03:36,049
of it well the first thing i have to do

98
00:03:36,049 --> 00:03:38,269
is iterate over all my records and grab

99
00:03:38,269 --> 00:03:40,070
that age property right that's pretty

100
00:03:40,070 --> 00:03:43,280
wasteful so an alternative way for us to

101
00:03:43,280 --> 00:03:46,130
do this is to actually look at column

102
00:03:46,130 --> 00:03:48,260
wise databases right so in a column wise

103
00:03:48,260 --> 00:03:50,180
representation of your data what you

104
00:03:50,180 --> 00:03:52,430
actually have is you have every single

105
00:03:52,430 --> 00:03:54,530
data type every dimension every column

106
00:03:54,530 --> 00:03:56,900
whatever in its own structure right and

107
00:03:56,900 --> 00:03:59,030
the only thing binding these together as

108
00:03:59,030 --> 00:04:01,430
a row is the actual index position of

109
00:04:01,430 --> 00:04:03,620
those values right so here's the same

110
00:04:03,620 --> 00:04:05,660
data that we just represented an

111
00:04:05,660 --> 00:04:08,000
object's but in this column wise store

112
00:04:08,000 --> 00:04:09,890
right so the first array is the name

113
00:04:09,890 --> 00:04:11,810
property and it's just the names of

114
00:04:11,810 --> 00:04:13,820
whatever we're looking at and the second

115
00:04:13,820 --> 00:04:15,859
array is a specific type at these all

116
00:04:15,859 --> 00:04:18,229
happen to be heroes and then the bottom

117
00:04:18,229 --> 00:04:20,419
one is just those aged numbers right and

118
00:04:20,419 --> 00:04:22,460
now the great part is that I just have

119
00:04:22,460 --> 00:04:24,680
an array right so I can do a lot of

120
00:04:24,680 --> 00:04:26,900
things to it just from the native array

121
00:04:26,900 --> 00:04:29,090
implementation or if I really want I can

122
00:04:29,090 --> 00:04:31,750
go ahead and use underscore or whatever

123
00:04:31,750 --> 00:04:33,979
textually process that but at the very

124
00:04:33,979 --> 00:04:36,200
least I have all these data types all

125
00:04:36,200 --> 00:04:38,800
these data fragments in in single arrays

126
00:04:38,800 --> 00:04:41,599
so this talks can have a lot of code

127
00:04:41,599 --> 00:04:42,150
which is

128
00:04:42,150 --> 00:04:43,770
cool if you have Wi-Fi access which

129
00:04:43,770 --> 00:04:46,110
comes and goes feel free to check it out

130
00:04:46,110 --> 00:04:50,100
I Ross slit / client-side data is the

131
00:04:50,100 --> 00:04:51,210
repo there's a lot of different

132
00:04:51,210 --> 00:04:54,420
libraries covered there because client

133
00:04:54,420 --> 00:04:56,040
data is awesome and I'd like to talk

134
00:04:56,040 --> 00:04:59,070
about all of it if I could but and the

135
00:04:59,070 --> 00:05:00,540
examples I'll show today will be there

136
00:05:00,540 --> 00:05:02,670
too but you know feel free to ask me at

137
00:05:02,670 --> 00:05:04,590
any point about anything else there or

138
00:05:04,590 --> 00:05:06,180
call me out if I make a mistake I'm all

139
00:05:06,180 --> 00:05:09,270
for that so you may have noticed various

140
00:05:09,270 --> 00:05:10,860
names I'm throwing around I thought that

141
00:05:10,860 --> 00:05:12,090
would be really nice to have a theme for

142
00:05:12,090 --> 00:05:14,460
today's talk and because we're a bunch

143
00:05:14,460 --> 00:05:16,530
of nerds I thought superheroes and

144
00:05:16,530 --> 00:05:19,050
villains would be kind of cool so I went

145
00:05:19,050 --> 00:05:21,000
ahead to this website called superhero

146
00:05:21,000 --> 00:05:23,790
DB where people have a lot of time on

147
00:05:23,790 --> 00:05:26,370
their hands go and spend inordinate

148
00:05:26,370 --> 00:05:28,860
amount of time classifying superheroes

149
00:05:28,860 --> 00:05:30,240
and villains right I don't even know

150
00:05:30,240 --> 00:05:32,460
where they get stuff but I scraped it so

151
00:05:32,460 --> 00:05:34,830
I'm very happy so I just wanna I know

152
00:05:34,830 --> 00:05:36,390
it's pretty small but I just want to go

153
00:05:36,390 --> 00:05:37,500
over a couple of properties because

154
00:05:37,500 --> 00:05:38,910
we're going to use them later down the

155
00:05:38,910 --> 00:05:41,250
road so this is the profile for Batman

156
00:05:41,250 --> 00:05:42,870
it's actually the piece of profile for

157
00:05:42,870 --> 00:05:46,620
Batman and he's got various capabilities

158
00:05:46,620 --> 00:05:49,140
like his intelligence or strength or

159
00:05:49,140 --> 00:05:51,390
speed so his intelligence is it maxed

160
00:05:51,390 --> 00:05:53,220
out at one point oh very exciting so

161
00:05:53,220 --> 00:05:54,090
we're going to look at some of those

162
00:05:54,090 --> 00:05:56,370
capabilities and he's got some

163
00:05:56,370 --> 00:05:57,990
attributes about his height and weight

164
00:05:57,990 --> 00:06:00,120
which you know is pretty basic turns out

165
00:06:00,120 --> 00:06:02,370
he's 188 centimeters tall never knew

166
00:06:02,370 --> 00:06:06,000
that and last but not least he has some

167
00:06:06,000 --> 00:06:08,280
superpowers so actually every single one

168
00:06:08,280 --> 00:06:11,480
of these records has about over 170

169
00:06:11,480 --> 00:06:13,920
superpowers and their binary attributes

170
00:06:13,920 --> 00:06:16,230
so they're either set to 1 or 0 1 if

171
00:06:16,230 --> 00:06:18,270
they have it 0 if they don't and we're

172
00:06:18,270 --> 00:06:19,650
going to look at these superpowers later

173
00:06:19,650 --> 00:06:21,450
down the road because it's kind of

174
00:06:21,450 --> 00:06:23,880
exciting so if you want to look at more

175
00:06:23,880 --> 00:06:26,130
the data there's a data folder in that

176
00:06:26,130 --> 00:06:27,780
repo where you can look for it just

177
00:06:27,780 --> 00:06:30,420
heroes JSON or just villains or all of

178
00:06:30,420 --> 00:06:32,040
them combined and there's a type

179
00:06:32,040 --> 00:06:34,140
property so feel free to build cool

180
00:06:34,140 --> 00:06:36,750
stuff on top of that and let me know so

181
00:06:36,750 --> 00:06:38,160
we're going to start off and look at

182
00:06:38,160 --> 00:06:40,440
rows of data I'm going to look at one

183
00:06:40,440 --> 00:06:42,090
library that does rows of data and two

184
00:06:42,090 --> 00:06:44,400
libraries to do that very good at

185
00:06:44,400 --> 00:06:47,400
handling columns of data and the first

186
00:06:47,400 --> 00:06:48,480
one I wanted to call out was called

187
00:06:48,480 --> 00:06:52,770
taffy DB so taffy DB is very database

188
00:06:52,770 --> 00:06:54,750
like and that records are JSON objects

189
00:06:54,750 --> 00:06:55,650
so again that

190
00:06:55,650 --> 00:06:58,259
polite showed you early on it has very

191
00:06:58,259 --> 00:07:00,419
very rich selection language so I'll

192
00:07:00,419 --> 00:07:02,610
show some examples and that I would say

193
00:07:02,610 --> 00:07:04,080
is the strength of this library and that

194
00:07:04,080 --> 00:07:05,820
you can make almost sequel like queries

195
00:07:05,820 --> 00:07:07,590
you can and you can or you can check for

196
00:07:07,590 --> 00:07:10,949
existence or undefined our Nan's and

197
00:07:10,949 --> 00:07:12,300
kind of change those together as you

198
00:07:12,300 --> 00:07:14,940
wish so there's also a library called

199
00:07:14,940 --> 00:07:17,430
JSON select I'm not going to go over but

200
00:07:17,430 --> 00:07:20,639
it has kind of various CSS style syntax

201
00:07:20,639 --> 00:07:22,830
for selecting properties out of your

202
00:07:22,830 --> 00:07:24,690
JSON structures so feel free to look at

203
00:07:24,690 --> 00:07:27,750
that but i'll talk about taffy taffy

204
00:07:27,750 --> 00:07:30,090
supports saving some local storage which

205
00:07:30,090 --> 00:07:31,860
is pretty exciting and it does have sort

206
00:07:31,860 --> 00:07:34,050
of a built-in extension mechanism if you

207
00:07:34,050 --> 00:07:36,570
will it doesn't have any updates no

208
00:07:36,570 --> 00:07:38,760
events rather so if you are updating

209
00:07:38,760 --> 00:07:40,710
your data and you want to have a binding

210
00:07:40,710 --> 00:07:42,150
to that data because maybe your view

211
00:07:42,150 --> 00:07:44,250
needs to update or so on if you're used

212
00:07:44,250 --> 00:07:45,960
to MVC frameworks that kind of do all

213
00:07:45,960 --> 00:07:48,060
that wiring for you that won't be there

214
00:07:48,060 --> 00:07:49,830
you'll be on it'll be on you to kind of

215
00:07:49,830 --> 00:07:51,990
wire that stuff together and it has some

216
00:07:51,990 --> 00:07:53,400
templating support which doesn't mean

217
00:07:53,400 --> 00:07:54,539
much because you can just throw an

218
00:07:54,539 --> 00:07:56,160
object into any templating engine these

219
00:07:56,160 --> 00:07:59,550
days so but here's an example of me

220
00:07:59,550 --> 00:08:01,440
wanting to find all the male heroes the

221
00:08:01,440 --> 00:08:03,449
female heroes and unknown gender heroes

222
00:08:03,449 --> 00:08:05,699
that have height right so the first

223
00:08:05,699 --> 00:08:08,400
thing I do is I create this database by

224
00:08:08,400 --> 00:08:10,530
calling taffie the function with my

225
00:08:10,530 --> 00:08:13,979
array of objects and then I go ahead and

226
00:08:13,979 --> 00:08:15,840
find the male heroes by saying find me

227
00:08:15,840 --> 00:08:18,060
all the heroes that have the gender male

228
00:08:18,060 --> 00:08:21,360
the type hero and then the height cm

229
00:08:21,360 --> 00:08:23,490
property is not undefined because for

230
00:08:23,490 --> 00:08:25,409
some heroes that value is undefined and

231
00:08:25,409 --> 00:08:27,840
then I do the same thing for my female

232
00:08:27,840 --> 00:08:29,789
heroes and then here's an example of an

233
00:08:29,789 --> 00:08:32,459
and that's kind of cool i say that type

234
00:08:32,459 --> 00:08:33,690
of be here on the height is not

235
00:08:33,690 --> 00:08:35,459
undefined and then the gender is not

236
00:08:35,459 --> 00:08:37,740
male and is not female so you can sort

237
00:08:37,740 --> 00:08:40,020
of pass this array of objects so it's

238
00:08:40,020 --> 00:08:41,130
pretty cool and you can do a lot of

239
00:08:41,130 --> 00:08:44,550
things in terms of querying or data and

240
00:08:44,550 --> 00:08:45,420
so it's that we'll look at an example

241
00:08:45,420 --> 00:08:48,300
right so I was very curious as to

242
00:08:48,300 --> 00:08:51,000
whether certain capabilities appear

243
00:08:51,000 --> 00:08:53,610
together or not so if I'm faster and I

244
00:08:53,610 --> 00:08:56,279
also better combat or not so if you want

245
00:08:56,279 --> 00:08:57,810
look at the code the example is under

246
00:08:57,810 --> 00:09:00,540
taffy the under staffy dashdb space

247
00:09:00,540 --> 00:09:02,850
competencies that HTML and there's a

248
00:09:02,850 --> 00:09:04,230
chance bin that's slightly out of date

249
00:09:04,230 --> 00:09:08,459
but so what we want to do first really

250
00:09:08,459 --> 00:09:09,120
are

251
00:09:09,120 --> 00:09:11,550
pretty much the only taffy part of this

252
00:09:11,550 --> 00:09:13,920
of this example is to find all the

253
00:09:13,920 --> 00:09:15,330
heroes that have all the competencies

254
00:09:15,330 --> 00:09:16,830
defined right because the last thing we

255
00:09:16,830 --> 00:09:19,410
want is to be comparing ones that have

256
00:09:19,410 --> 00:09:21,450
some don't have some so this is me

257
00:09:21,450 --> 00:09:23,700
really pretty much to sue my query I go

258
00:09:23,700 --> 00:09:25,260
ahead and I say give me the six that I'd

259
00:09:25,260 --> 00:09:28,050
shown you and make sure that they are

260
00:09:28,050 --> 00:09:30,150
not undefined right so and then the rest

261
00:09:30,150 --> 00:09:32,760
of this is actually a bunch of d3 code

262
00:09:32,760 --> 00:09:34,500
which I'm not going to go over even

263
00:09:34,500 --> 00:09:35,430
though pulsed I don't want to talk about

264
00:09:35,430 --> 00:09:38,310
visualizing big data not going to do

265
00:09:38,310 --> 00:09:40,620
that to you guys but here's an example

266
00:09:40,620 --> 00:09:42,779
of what that built right so what that

267
00:09:42,779 --> 00:09:44,640
did is it selected all the superheroes I

268
00:09:44,640 --> 00:09:45,930
have all those abilities and then I

269
00:09:45,930 --> 00:09:47,760
built this very slowly scatter plot

270
00:09:47,760 --> 00:09:49,950
where I can say oh how does my power

271
00:09:49,950 --> 00:09:51,480
compared my power well that's a stupid

272
00:09:51,480 --> 00:09:53,220
question but how does intelligence

273
00:09:53,220 --> 00:09:55,020
comparator our right so it looks like

274
00:09:55,020 --> 00:09:57,900
just about all the heroes are clustered

275
00:09:57,900 --> 00:09:59,460
and kind of the mid-range intelligence

276
00:09:59,460 --> 00:10:02,250
and so on and so forth I don't know how

277
00:10:02,250 --> 00:10:04,230
they have to do with combat also not not

278
00:10:04,230 --> 00:10:06,690
that different but it looks like most

279
00:10:06,690 --> 00:10:08,610
superheroes are kind of on the slow end

280
00:10:08,610 --> 00:10:10,800
so that's kind of interesting right so

281
00:10:10,800 --> 00:10:15,839
that's a quick example of taffy and you

282
00:10:15,839 --> 00:10:16,860
know let me know later if you have any

283
00:10:16,860 --> 00:10:19,050
questions about that and the next

284
00:10:19,050 --> 00:10:21,420
library I want to talk about is cross

285
00:10:21,420 --> 00:10:24,180
filter so I used III a bunch in my work

286
00:10:24,180 --> 00:10:26,580
and it was written by a really great guy

287
00:10:26,580 --> 00:10:29,430
and Mike Michael Bostock who writes a

288
00:10:29,430 --> 00:10:32,040
lot of amazing dataviz and he's also

289
00:10:32,040 --> 00:10:33,660
written this library crawl called cross

290
00:10:33,660 --> 00:10:36,240
filter which has to do with dealing with

291
00:10:36,240 --> 00:10:37,830
high dimensional data so it is

292
00:10:37,830 --> 00:10:40,380
incredibly fast because it uses type

293
00:10:40,380 --> 00:10:42,720
arrays very heavily the thing it doesn't

294
00:10:42,720 --> 00:10:44,550
do very well is actually deal with

295
00:10:44,550 --> 00:10:47,370
incomplete or messy data before I get

296
00:10:47,370 --> 00:10:48,570
into that I want to show just an example

297
00:10:48,570 --> 00:10:50,850
of how you would use cross filter so

298
00:10:50,850 --> 00:10:52,380
again you would sort of call the cross

299
00:10:52,380 --> 00:10:54,930
filter function and pass it your array

300
00:10:54,930 --> 00:10:57,510
of objects in case case heroes and then

301
00:10:57,510 --> 00:10:58,350
what you do is you build these

302
00:10:58,350 --> 00:11:00,150
dimensions a dimension is really just

303
00:11:00,150 --> 00:11:02,370
the cash right we've all created cash

304
00:11:02,370 --> 00:11:04,350
objects was just an object with a key

305
00:11:04,350 --> 00:11:06,779
and then either an array of our objects

306
00:11:06,779 --> 00:11:09,300
or just single objects the same thing is

307
00:11:09,300 --> 00:11:11,160
done by cross filter except he calls it

308
00:11:11,160 --> 00:11:13,620
a dimension and so and they can be a

309
00:11:13,620 --> 00:11:14,970
little more flexible and that you can

310
00:11:14,970 --> 00:11:17,100
actually you know combine them in

311
00:11:17,100 --> 00:11:18,329
whatever way you want by using this

312
00:11:18,329 --> 00:11:20,970
callback function so in this case I'm

313
00:11:20,970 --> 00:11:22,649
really just creating a dimension on the

314
00:11:22,649 --> 00:11:24,149
intelligence property right because we

315
00:11:24,149 --> 00:11:25,769
really what I want to do is be very

316
00:11:25,769 --> 00:11:27,899
quickly able to get all the heroes of

317
00:11:27,899 --> 00:11:30,660
intelligence Oh point 75 or something

318
00:11:30,660 --> 00:11:33,119
right so once i have my dimension builds

319
00:11:33,119 --> 00:11:34,800
the next thing i can do is actually call

320
00:11:34,800 --> 00:11:36,749
a filter so i'm going to say okay give

321
00:11:36,749 --> 00:11:39,569
me all give me a filter that only gets

322
00:11:39,569 --> 00:11:42,809
me the here is between 0 and 0.25 right

323
00:11:42,809 --> 00:11:44,639
so that creates a filtering and then

324
00:11:44,639 --> 00:11:46,290
actually go and get the top records so

325
00:11:46,290 --> 00:11:49,559
dot top infinity really clear API not

326
00:11:49,559 --> 00:11:51,749
and you know what I'm done I have to

327
00:11:51,749 --> 00:11:53,819
clear my filtering again so that's an

328
00:11:53,819 --> 00:11:55,679
example of using cross filter and

329
00:11:55,679 --> 00:11:56,879
there's all sorts of additional things

330
00:11:56,879 --> 00:11:58,730
you can do on top of that you can group

331
00:11:58,730 --> 00:12:01,410
things so for example here what I've

332
00:12:01,410 --> 00:12:02,910
really done is I made a group right I

333
00:12:02,910 --> 00:12:04,410
said I'll give me the group of things in

334
00:12:04,410 --> 00:12:07,259
between these brackets but there's

335
00:12:07,259 --> 00:12:08,970
actual kind of a contract for that call

336
00:12:08,970 --> 00:12:12,600
the group so I mentioned typed arrays a

337
00:12:12,600 --> 00:12:13,740
little bit now i'll talk about them

338
00:12:13,740 --> 00:12:15,360
because territories are really really

339
00:12:15,360 --> 00:12:17,579
cool they allow you to very quickly

340
00:12:17,579 --> 00:12:19,649
manipulate rob binary data because what

341
00:12:19,649 --> 00:12:21,269
you start off with is just an array

342
00:12:21,269 --> 00:12:22,829
buffer and then you kind of say oh I'm

343
00:12:22,829 --> 00:12:24,629
going to look at it at 8-bit chunks or

344
00:12:24,629 --> 00:12:27,240
at 16-bit chunks or whatever and it's

345
00:12:27,240 --> 00:12:29,220
nice because they initialize by default

346
00:12:29,220 --> 00:12:31,559
20 instead of undefined which is what

347
00:12:31,559 --> 00:12:32,850
traditional JavaScript arrays

348
00:12:32,850 --> 00:12:34,860
initialized to which is really fun if

349
00:12:34,860 --> 00:12:37,740
you've ever done data things and it's

350
00:12:37,740 --> 00:12:39,329
nice because you can share buffers you

351
00:12:39,329 --> 00:12:40,920
can have multiple views applied to the

352
00:12:40,920 --> 00:12:43,199
same array buffer and if you know the

353
00:12:43,199 --> 00:12:44,610
dimensions of your data if you know

354
00:12:44,610 --> 00:12:46,230
you're only going to look at values from

355
00:12:46,230 --> 00:12:49,230
0 to 255 that's great because you can

356
00:12:49,230 --> 00:12:51,800
have a really small memory footprint but

357
00:12:51,800 --> 00:12:54,779
the problem with typed arrays is that

358
00:12:54,779 --> 00:12:56,639
just about anything that doesn't conform

359
00:12:56,639 --> 00:12:59,399
within the dimensions you specified is

360
00:12:59,399 --> 00:13:01,740
going to turn into a zero so an an an

361
00:13:01,740 --> 00:13:04,319
undefined string or even the value that

362
00:13:04,319 --> 00:13:06,350
is outside the range right so here I'm

363
00:13:06,350 --> 00:13:10,319
defining an unsigned 8-bit integer array

364
00:13:10,319 --> 00:13:12,029
and what that means is I can fit value

365
00:13:12,029 --> 00:13:14,939
from 0 until 255 into it and what

366
00:13:14,939 --> 00:13:16,529
happens when I put a value outside that

367
00:13:16,529 --> 00:13:19,319
range for example 258 what I actually

368
00:13:19,319 --> 00:13:21,329
get is the number two because it's kind

369
00:13:21,329 --> 00:13:23,100
of just roll over it just does not have

370
00:13:23,100 --> 00:13:25,319
enough bits to fit that data so you have

371
00:13:25,319 --> 00:13:27,389
to be very careful because you're not

372
00:13:27,389 --> 00:13:29,009
actually going to know that this is not

373
00:13:29,009 --> 00:13:30,660
going to throw an error right and the

374
00:13:30,660 --> 00:13:34,529
same happens in cross filter if you put

375
00:13:34,529 --> 00:13:36,089
through data and you don't filter it

376
00:13:36,089 --> 00:13:36,630
appropriately

377
00:13:36,630 --> 00:13:38,130
don't clean it up appropriately or it

378
00:13:38,130 --> 00:13:40,470
has kind of little pitfalls it's not

379
00:13:40,470 --> 00:13:41,970
going to air out what you are going to

380
00:13:41,970 --> 00:13:45,150
get is slightly wrong answers so you

381
00:13:45,150 --> 00:13:47,190
might get a filtration of 100 records

382
00:13:47,190 --> 00:13:48,720
and two of those records don't actually

383
00:13:48,720 --> 00:13:51,300
belong and as someone who spent like two

384
00:13:51,300 --> 00:13:53,070
days debugging stuff like that it's

385
00:13:53,070 --> 00:13:55,860
really not fun so so typed arrays kind

386
00:13:55,860 --> 00:13:59,280
of yay kind of nay and so but

387
00:13:59,280 --> 00:14:01,050
nonetheless crossroads is very cool so I

388
00:14:01,050 --> 00:14:02,430
actually thought okay now we looked a

389
00:14:02,430 --> 00:14:04,800
little bit at these competencies now I'm

390
00:14:04,800 --> 00:14:06,090
very curious to see how they're actually

391
00:14:06,090 --> 00:14:07,440
distributed right so I want to look at

392
00:14:07,440 --> 00:14:09,540
the histograms hopefully focused on what

393
00:14:09,540 --> 00:14:11,400
those are so if you want to look at the

394
00:14:11,400 --> 00:14:13,590
code it's under cross filter / visual

395
00:14:13,590 --> 00:14:17,870
data HTML and we're going to look at the

396
00:14:17,870 --> 00:14:21,180
all that does not very complicated what

397
00:14:21,180 --> 00:14:23,130
I do is I for every single competency I

398
00:14:23,130 --> 00:14:24,720
take all the values for all my heroes

399
00:14:24,720 --> 00:14:27,480
and then I bend them in this case in 27

400
00:14:27,480 --> 00:14:31,380
bins randomly selected number and I just

401
00:14:31,380 --> 00:14:33,120
try to kind of aggregate to see how many

402
00:14:33,120 --> 00:14:35,310
i have in each in each grouping so for

403
00:14:35,310 --> 00:14:37,350
example you can see my intelligence very

404
00:14:37,350 --> 00:14:39,830
Gaussian distributed that's good to know

405
00:14:39,830 --> 00:14:42,540
combat almost so not so much and

406
00:14:42,540 --> 00:14:45,180
durability for some reason just a lot in

407
00:14:45,180 --> 00:14:47,340
the extremes and then kind of strength

408
00:14:47,340 --> 00:14:49,650
is all over the place for most part and

409
00:14:49,650 --> 00:14:51,390
definitely a lot more slower heroes and

410
00:14:51,390 --> 00:14:53,370
villains then pass one so kind of

411
00:14:53,370 --> 00:14:55,890
interesting but we can look very quickly

412
00:14:55,890 --> 00:14:58,530
at the code that put that together so

413
00:14:58,530 --> 00:15:00,630
I'm gonna zoom out a little bit

414
00:15:00,630 --> 00:15:02,130
hopefully you guys can see these screens

415
00:15:02,130 --> 00:15:06,150
are so tiny so the first thing we're

416
00:15:06,150 --> 00:15:08,220
going to do and this again is not really

417
00:15:08,220 --> 00:15:09,960
cross filter this is me using underscore

418
00:15:09,960 --> 00:15:12,210
because again I'm trying to first reduce

419
00:15:12,210 --> 00:15:15,060
my data to make sure i only have records

420
00:15:15,060 --> 00:15:16,680
that aren't going to break cross filter

421
00:15:16,680 --> 00:15:19,200
so here i just iterate over all of them

422
00:15:19,200 --> 00:15:20,760
and make sure they're not undefined or

423
00:15:20,760 --> 00:15:23,400
nan and then only get those those

424
00:15:23,400 --> 00:15:25,740
records um but then what I really do is

425
00:15:25,740 --> 00:15:27,060
for every competency I build this

426
00:15:27,060 --> 00:15:30,000
dimension and then I go and I fetch my

427
00:15:30,000 --> 00:15:32,280
records and I get my mins in the max the

428
00:15:32,280 --> 00:15:33,900
other nice thing across filter does when

429
00:15:33,900 --> 00:15:35,400
you build a dimensions is it sorts it

430
00:15:35,400 --> 00:15:38,010
for you so if you have numbers the max

431
00:15:38,010 --> 00:15:39,240
is always going to be the first record

432
00:15:39,240 --> 00:15:40,770
and the men is always going to be the

433
00:15:40,770 --> 00:15:43,440
bottom record so that's exciting and

434
00:15:43,440 --> 00:15:45,870
then I go and I kind of built my my bins

435
00:15:45,870 --> 00:15:47,370
that I talked about kind of that first

436
00:15:47,370 --> 00:15:49,170
example and then here I do the actual

437
00:15:49,170 --> 00:15:50,070
grouping

438
00:15:50,070 --> 00:15:51,660
and I fetch my records and I do the

439
00:15:51,660 --> 00:15:54,000
little sparkline chart so not very

440
00:15:54,000 --> 00:15:56,670
complicated but again very handy and if

441
00:15:56,670 --> 00:15:57,930
you look at some of the examples across

442
00:15:57,930 --> 00:15:59,340
filter there's a lot of cross

443
00:15:59,340 --> 00:16:02,100
coordination stuff that that he does you

444
00:16:02,100 --> 00:16:03,750
know it's not inherent cross filter it's

445
00:16:03,750 --> 00:16:06,990
just a cool demo so but that that's

446
00:16:06,990 --> 00:16:08,190
cross filter and if you have any

447
00:16:08,190 --> 00:16:10,620
questions do talk to me about that and

448
00:16:10,620 --> 00:16:12,330
then the last library I want to talk

449
00:16:12,330 --> 00:16:14,310
about is the one that I'd written with

450
00:16:14,310 --> 00:16:16,200
the Guardian folks with Alex crawl if

451
00:16:16,200 --> 00:16:18,450
any of you know him and it's a part of a

452
00:16:18,450 --> 00:16:19,950
bigger project called the miso project

453
00:16:19,950 --> 00:16:21,600
where we're trying to build libraries

454
00:16:21,600 --> 00:16:24,690
for enabling interactive visualization

455
00:16:24,690 --> 00:16:27,450
and interactive media JavaScript

456
00:16:27,450 --> 00:16:30,930
development stuff so I'm i really love

457
00:16:30,930 --> 00:16:32,670
dataviz and i want to help people write

458
00:16:32,670 --> 00:16:34,410
it and especially in journalism where

459
00:16:34,410 --> 00:16:35,790
they don't have time and not have

460
00:16:35,790 --> 00:16:37,050
developed personally don't have budget

461
00:16:37,050 --> 00:16:39,090
and they don't have anything really um

462
00:16:39,090 --> 00:16:43,290
so they're running on a dime so we build

463
00:16:43,290 --> 00:16:46,170
data set to kind of try and cover the

464
00:16:46,170 --> 00:16:48,980
entire workflow of data management so

465
00:16:48,980 --> 00:16:52,770
this is kind of a transient FSA but not

466
00:16:52,770 --> 00:16:54,780
really in that what you start with is

467
00:16:54,780 --> 00:16:57,120
you fetch your data and fetching a data

468
00:16:57,120 --> 00:16:59,010
most of the time is really simple right

469
00:16:59,010 --> 00:17:00,720
because all you have to do is make an

470
00:17:00,720 --> 00:17:02,430
AJAX request for a JSON file well

471
00:17:02,430 --> 00:17:03,900
sometimes it's more complicated

472
00:17:03,900 --> 00:17:05,820
sometimes you're going over WebSockets

473
00:17:05,820 --> 00:17:07,740
sometimes you actually want to do

474
00:17:07,740 --> 00:17:09,780
polling and sometimes you want to reset

475
00:17:09,780 --> 00:17:11,310
your data every time and sometimes you

476
00:17:11,310 --> 00:17:13,140
want it to be unique against the data

477
00:17:13,140 --> 00:17:14,820
you already have because maybe you're

478
00:17:14,820 --> 00:17:16,589
polling Twitter every second and you get

479
00:17:16,589 --> 00:17:18,750
an overlap and records right so all

480
00:17:18,750 --> 00:17:20,430
those sorts of things are really stupid

481
00:17:20,430 --> 00:17:22,439
mundane data things that nobody actually

482
00:17:22,439 --> 00:17:26,130
wants to deal with so we try to build

483
00:17:26,130 --> 00:17:27,930
into data set this idea of importers

484
00:17:27,930 --> 00:17:29,940
that really have to do with just

485
00:17:29,940 --> 00:17:31,320
fetching of your data right they don't

486
00:17:31,320 --> 00:17:33,540
do any data processing they don't do any

487
00:17:33,540 --> 00:17:35,850
data management their only job is to go

488
00:17:35,850 --> 00:17:37,290
ahead and fetch things and by default

489
00:17:37,290 --> 00:17:39,180
you know they just go make a JSON

490
00:17:39,180 --> 00:17:42,360
request an AJAX request for whatever

491
00:17:42,360 --> 00:17:45,000
type of file but practically speaking

492
00:17:45,000 --> 00:17:46,980
you can kind of write your own we've

493
00:17:46,980 --> 00:17:48,780
written our own so we have one for

494
00:17:48,780 --> 00:17:51,090
example for google spreadsheets because

495
00:17:51,090 --> 00:17:53,130
that's a commonly used data store in

496
00:17:53,130 --> 00:17:55,620
journalism and also a really easy way to

497
00:17:55,620 --> 00:17:57,690
pull up your data in and a really hard

498
00:17:57,690 --> 00:18:00,510
place to get your data out of so if

499
00:18:00,510 --> 00:18:02,130
you've ever tried

500
00:18:02,130 --> 00:18:04,170
then the next step is really parsing it

501
00:18:04,170 --> 00:18:06,710
right so again if I just have my data

502
00:18:06,710 --> 00:18:09,360
pre-formatted into arrays of objects

503
00:18:09,360 --> 00:18:10,950
that's awesome but most of the time

504
00:18:10,950 --> 00:18:13,410
that's not going to happen and so what

505
00:18:13,410 --> 00:18:15,420
we do is we have things like comma

506
00:18:15,420 --> 00:18:17,850
delimited parsers and and Google

507
00:18:17,850 --> 00:18:19,650
spreadsheet parsers which is absolutely

508
00:18:19,650 --> 00:18:22,710
the most horrible format and whatever

509
00:18:22,710 --> 00:18:24,990
other parser is you really want so if

510
00:18:24,990 --> 00:18:26,460
somebody wants to write an XML parser

511
00:18:26,460 --> 00:18:28,560
please do we don't so we're not going to

512
00:18:28,560 --> 00:18:31,560
and then once you do what the parsers

513
00:18:31,560 --> 00:18:32,970
really do is they combine all the data

514
00:18:32,970 --> 00:18:35,100
into this unified format that data set

515
00:18:35,100 --> 00:18:37,350
actually uses and from there on you can

516
00:18:37,350 --> 00:18:38,640
do a bunch of different things you can

517
00:18:38,640 --> 00:18:41,010
compute various values you can filter

518
00:18:41,010 --> 00:18:42,600
the data and whatever way you want and

519
00:18:42,600 --> 00:18:44,700
you can derive new data sets out of that

520
00:18:44,700 --> 00:18:46,620
data and the nice thing that you can

521
00:18:46,620 --> 00:18:47,850
kind of once you do one of those

522
00:18:47,850 --> 00:18:49,650
operations you can do the rest so for

523
00:18:49,650 --> 00:18:52,140
example a selection from the data set is

524
00:18:52,140 --> 00:18:54,780
actually another data set to be more

525
00:18:54,780 --> 00:18:56,160
specific it's something called a date of

526
00:18:56,160 --> 00:18:58,920
you and that it's immutable because it's

527
00:18:58,920 --> 00:19:00,660
not supposed to be mutable it's tied to

528
00:19:00,660 --> 00:19:02,670
your original data but the nice thing by

529
00:19:02,670 --> 00:19:04,170
doing it that way is that we can offer

530
00:19:04,170 --> 00:19:08,010
things like event coordination so doona

531
00:19:08,010 --> 00:19:10,410
sets available both in nodejs and on the

532
00:19:10,410 --> 00:19:13,020
client side and we've piped hundreds of

533
00:19:13,020 --> 00:19:15,120
thousands of tweets through it in node

534
00:19:15,120 --> 00:19:16,680
and it didn't break which was the

535
00:19:16,680 --> 00:19:18,960
happiest day of my life ever not really

536
00:19:18,960 --> 00:19:21,930
and as I mentioned it comes a lot of

537
00:19:21,930 --> 00:19:24,150
importers and parsers importers and

538
00:19:24,150 --> 00:19:26,430
parsers for common data sources and

539
00:19:26,430 --> 00:19:27,810
structures and we're definitely taking

540
00:19:27,810 --> 00:19:30,450
contributions for that and it has this

541
00:19:30,450 --> 00:19:32,370
idea of a vented views so once you have

542
00:19:32,370 --> 00:19:34,500
a selection from your data set or maybe

543
00:19:34,500 --> 00:19:35,940
a selection from a selection from a

544
00:19:35,940 --> 00:19:38,010
selection doesn't really matter you can

545
00:19:38,010 --> 00:19:39,810
enable synchronization between them with

546
00:19:39,810 --> 00:19:42,060
just a little flag and what it does is

547
00:19:42,060 --> 00:19:44,250
whenever you add or remove or update

548
00:19:44,250 --> 00:19:45,930
records it's going to pipe that those

549
00:19:45,930 --> 00:19:48,690
events to those to those views so

550
00:19:48,690 --> 00:19:51,290
because really nice if you have various

551
00:19:51,290 --> 00:19:53,850
visualizations or other views built on

552
00:19:53,850 --> 00:19:55,530
top of selections you're not responsible

553
00:19:55,530 --> 00:19:58,050
for propagating those changes yourself

554
00:19:58,050 --> 00:19:59,610
you can just kind of enable that in the

555
00:19:59,610 --> 00:20:01,920
data set and it'll you know trigger the

556
00:20:01,920 --> 00:20:03,990
events you're expecting and then it has

557
00:20:03,990 --> 00:20:05,910
some common math functions mins Max's

558
00:20:05,910 --> 00:20:08,490
means whatever we're always writing more

559
00:20:08,490 --> 00:20:10,530
as people asked for them and some

560
00:20:10,530 --> 00:20:11,940
derived functions and by derive that

561
00:20:11,940 --> 00:20:13,830
mean things like group eyes or count

562
00:20:13,830 --> 00:20:15,149
buys or

563
00:20:15,149 --> 00:20:17,309
some of those slightly more complex

564
00:20:17,309 --> 00:20:19,499
sequel type things that come at the end

565
00:20:19,499 --> 00:20:22,379
of the query after the where so we try

566
00:20:22,379 --> 00:20:24,719
to have as many of those as as people

567
00:20:24,719 --> 00:20:28,320
ask for again so here's an example for

568
00:20:28,320 --> 00:20:30,599
if I want to dry just go ahead and fetch

569
00:20:30,599 --> 00:20:33,539
my heroes from a URL I go and just say

570
00:20:33,539 --> 00:20:35,879
new me so dataset from a URL or if I

571
00:20:35,879 --> 00:20:37,529
have it locally can just use the data

572
00:20:37,529 --> 00:20:40,109
property instead and then I go ahead and

573
00:20:40,109 --> 00:20:43,109
I call heroes that fetch then so on the

574
00:20:43,109 --> 00:20:45,089
background I uses deferred if you really

575
00:20:45,089 --> 00:20:47,070
want to pass it a success or an error

576
00:20:47,070 --> 00:20:50,609
call back you can but by default we

577
00:20:50,609 --> 00:20:51,929
really want people to use the firts

578
00:20:51,929 --> 00:20:53,339
because you can chain them and do all

579
00:20:53,339 --> 00:20:55,589
sorts of great things and so all that's

580
00:20:55,589 --> 00:20:56,759
going to do is it's going to output the

581
00:20:56,759 --> 00:20:58,559
length of my data set which is I have

582
00:20:58,559 --> 00:21:03,749
570 in my data set or a slightly more

583
00:21:03,749 --> 00:21:05,700
complicated example so I go ahead and

584
00:21:05,700 --> 00:21:07,259
get my heroes that I want to count them

585
00:21:07,259 --> 00:21:08,879
by the hair color because i'm very

586
00:21:08,879 --> 00:21:11,519
curious how you know what distribution

587
00:21:11,519 --> 00:21:15,179
of hair colors are in my heroes and then

588
00:21:15,179 --> 00:21:16,710
i go ahead and actually sort them so we

589
00:21:16,710 --> 00:21:18,629
take for those of you who like use

590
00:21:18,629 --> 00:21:20,969
underscore and are and do not like the

591
00:21:20,969 --> 00:21:23,849
the sort by only taking one value

592
00:21:23,849 --> 00:21:27,109
neither do we so we we have a sort by

593
00:21:27,109 --> 00:21:29,369
function that takes both rows and then

594
00:21:29,369 --> 00:21:31,139
you can kind of define however you want

595
00:21:31,139 --> 00:21:33,089
to compare the two as long as your turn

596
00:21:33,089 --> 00:21:36,299
1 negative 1 or 0 and now we'll just go

597
00:21:36,299 --> 00:21:37,889
ahead and sort your data and then you

598
00:21:37,889 --> 00:21:38,969
know let's say we have some print

599
00:21:38,969 --> 00:21:41,460
function so we're going to get a list of

600
00:21:41,460 --> 00:21:44,789
all top hair colors turns out none is

601
00:21:44,789 --> 00:21:46,320
the most popular value and then black

602
00:21:46,320 --> 00:21:48,629
and brown turns out bald as a hair color

603
00:21:48,629 --> 00:21:51,629
I was not aware that's good to know for

604
00:21:51,629 --> 00:21:54,119
fall fashion anyway so there's a bunch

605
00:21:54,119 --> 00:21:56,639
of other examples there of data set

606
00:21:56,639 --> 00:21:58,369
things but I wanted to go over one

607
00:21:58,369 --> 00:22:02,099
before we're done called super powers so

608
00:22:02,099 --> 00:22:04,109
again I mentioned those many many super

609
00:22:04,109 --> 00:22:05,879
power properties and I thought it'd be

610
00:22:05,879 --> 00:22:07,289
fun to kind of take a look and see if

611
00:22:07,289 --> 00:22:09,929
they're related in any way so I tried to

612
00:22:09,929 --> 00:22:11,089
see if there's any clusters of

613
00:22:11,089 --> 00:22:13,919
superpowers they're used together there

614
00:22:13,919 --> 00:22:15,599
aren't so but that example is still

615
00:22:15,599 --> 00:22:16,739
there if you want to look it's called

616
00:22:16,739 --> 00:22:19,109
co-occurrence HTML but we're going to

617
00:22:19,109 --> 00:22:23,940
look at super powers HTML and it just

618
00:22:23,940 --> 00:22:26,989
has a few metrics about superpowers so

619
00:22:26,989 --> 00:22:28,790
there's a hundred and so

620
00:22:28,790 --> 00:22:31,820
24 of them total and there's about five

621
00:22:31,820 --> 00:22:34,340
pursue / hero and that's kind of the

622
00:22:34,340 --> 00:22:35,570
distribution right there there's one

623
00:22:35,570 --> 00:22:38,090
person it was 45 and I keep meaning to

624
00:22:38,090 --> 00:22:40,430
go back and see what that is and then

625
00:22:40,430 --> 00:22:42,290
there's a top ten right and these kind

626
00:22:42,290 --> 00:22:44,240
of represent how many heroes versus how

627
00:22:44,240 --> 00:22:45,830
many villains have them so it looks like

628
00:22:45,830 --> 00:22:48,230
there's a lot more super-strong villains

629
00:22:48,230 --> 00:22:49,520
and there are heroes which is kind of

630
00:22:49,520 --> 00:22:51,830
interesting my favorite is actually the

631
00:22:51,830 --> 00:22:54,260
bottom 10 because for example I didn't

632
00:22:54,260 --> 00:22:56,240
know that wishing was a superpower that

633
00:22:56,240 --> 00:22:59,900
makes me a superhero and quite a few

634
00:22:59,900 --> 00:23:01,550
other ones like or Bing I don't even

635
00:23:01,550 --> 00:23:04,280
know what orbing is so anyways just an

636
00:23:04,280 --> 00:23:05,810
example of cool things you can query out

637
00:23:05,810 --> 00:23:07,940
of your data so let's look very quickly

638
00:23:07,940 --> 00:23:11,110
at the code that put that together so um

639
00:23:11,110 --> 00:23:15,020
whoops so as I mentioned I go ahead and

640
00:23:15,020 --> 00:23:17,300
I fetch my data I just call it the fetch

641
00:23:17,300 --> 00:23:19,130
on it and then the first thing I do is I

642
00:23:19,130 --> 00:23:20,570
just need a list of all the superpowers

643
00:23:20,570 --> 00:23:22,190
so i'm using underscore for this right

644
00:23:22,190 --> 00:23:24,730
super the standard lived for javascript

645
00:23:24,730 --> 00:23:27,140
and then what i want to do is actually

646
00:23:27,140 --> 00:23:28,490
want to add them up right i want to get

647
00:23:28,490 --> 00:23:30,290
that count of how many superpowers each

648
00:23:30,290 --> 00:23:33,260
here has so in this isn't actually live

649
00:23:33,260 --> 00:23:34,820
yet but we're going to be releasing oh

650
00:23:34,820 --> 00:23:36,440
point three soon it's going to have

651
00:23:36,440 --> 00:23:38,030
computed columns which everybody has

652
00:23:38,030 --> 00:23:40,040
been asking for but it's just a way to

653
00:23:40,040 --> 00:23:41,540
make a column that you don't actually

654
00:23:41,540 --> 00:23:43,940
have the data for to begin with it's

655
00:23:43,940 --> 00:23:45,800
actually a calculation of a bunch of

656
00:23:45,800 --> 00:23:48,200
properties whatever and the nice thing

657
00:23:48,200 --> 00:23:49,700
is that stays in sync for you so if

658
00:23:49,700 --> 00:23:51,200
you're updating anything about your rows

659
00:23:51,200 --> 00:23:52,940
all your computer columns are going to

660
00:23:52,940 --> 00:23:54,260
go and recalculate for those specific

661
00:23:54,260 --> 00:23:56,480
rows so that's pretty fun so really all

662
00:23:56,480 --> 00:23:58,820
I do here is I say Oh create this column

663
00:23:58,820 --> 00:24:00,890
called SP count and it's going to be a

664
00:24:00,890 --> 00:24:03,410
number and then please just go ahead and

665
00:24:03,410 --> 00:24:04,700
add them up right I'm just doing a

666
00:24:04,700 --> 00:24:06,500
little inject here starting with 0

667
00:24:06,500 --> 00:24:08,870
basically add the zeros and ones which

668
00:24:08,870 --> 00:24:10,760
is pretty simple and then I go and

669
00:24:10,760 --> 00:24:13,100
update those little charts and so that's

670
00:24:13,100 --> 00:24:15,500
an example you know in terms of

671
00:24:15,500 --> 00:24:17,660
iterating over all my data I can just

672
00:24:17,660 --> 00:24:20,860
call dot each again very common pattern

673
00:24:20,860 --> 00:24:23,030
and this is sort of our selection

674
00:24:23,030 --> 00:24:24,680
mechanism and that you can just call dot

675
00:24:24,680 --> 00:24:26,810
where and pass in a function as long as

676
00:24:26,810 --> 00:24:28,400
it returns true that function will be

677
00:24:28,400 --> 00:24:30,350
included in your selection versus not

678
00:24:30,350 --> 00:24:32,900
right so again very basic and the rest

679
00:24:32,900 --> 00:24:35,570
is all just kind of you know HTML

680
00:24:35,570 --> 00:24:39,170
updating and stuff so that's useful data

681
00:24:39,170 --> 00:24:42,160
set in a in a really quick whirl

682
00:24:42,160 --> 00:24:43,960
and that's the one I can answer the most

683
00:24:43,960 --> 00:24:45,910
questions on if you ever need anything

684
00:24:45,910 --> 00:24:49,720
please ping me about it and I just want

685
00:24:49,720 --> 00:24:51,640
to kind of sum up a couple things that I

686
00:24:51,640 --> 00:24:52,960
learned from data crunching in the

687
00:24:52,960 --> 00:24:55,510
browsers is the first thing of course I

688
00:24:55,510 --> 00:24:56,800
think about whether you're going to most

689
00:24:56,800 --> 00:24:58,450
of your operations involve rows or

690
00:24:58,450 --> 00:25:00,940
columns because you may need both or you

691
00:25:00,940 --> 00:25:02,320
may want to optimize for one or the

692
00:25:02,320 --> 00:25:04,780
other you may have seen that I mix and

693
00:25:04,780 --> 00:25:06,250
match my libraries all the time right

694
00:25:06,250 --> 00:25:07,570
i've used underscore and just about all

695
00:25:07,570 --> 00:25:09,190
my examples because sometimes it's

696
00:25:09,190 --> 00:25:11,680
really fast but beware of iterating too

697
00:25:11,680 --> 00:25:13,780
much right if I call that filter and

698
00:25:13,780 --> 00:25:16,450
rejects and each that's three times that

699
00:25:16,450 --> 00:25:18,310
I've iterated all over all my data so

700
00:25:18,310 --> 00:25:20,140
there may be a more wise way for you to

701
00:25:20,140 --> 00:25:23,140
do that and there's a couple examples

702
00:25:23,140 --> 00:25:26,710
for underscore as well and that in that

703
00:25:26,710 --> 00:25:28,750
repository beware of premature

704
00:25:28,750 --> 00:25:31,120
optimization right so I like performance

705
00:25:31,120 --> 00:25:33,190
testing like the next guy but unless I

706
00:25:33,190 --> 00:25:34,630
know that I'm going to have two hundred

707
00:25:34,630 --> 00:25:36,580
thousand records on my client I really

708
00:25:36,580 --> 00:25:38,170
don't care because practically speaking

709
00:25:38,170 --> 00:25:39,760
when you're dealing with maybe a few

710
00:25:39,760 --> 00:25:41,440
hundred or even a few thousand records

711
00:25:41,440 --> 00:25:43,390
those performance metrics might not

712
00:25:43,390 --> 00:25:44,830
really be very accurate because they're

713
00:25:44,830 --> 00:25:46,390
going to be impacted by the load on your

714
00:25:46,390 --> 00:25:48,490
machine or other tabs are doing all the

715
00:25:48,490 --> 00:25:50,290
other JavaScript running on your page so

716
00:25:50,290 --> 00:25:52,300
they're just less consistent so as much

717
00:25:52,300 --> 00:25:54,400
as I say everybody performance test your

718
00:25:54,400 --> 00:25:56,170
code practically speaking if you know

719
00:25:56,170 --> 00:25:57,130
you're not going to deal with a lot of

720
00:25:57,130 --> 00:25:59,050
data pick the library that works the

721
00:25:59,050 --> 00:26:00,460
best for you instead of the one that

722
00:26:00,460 --> 00:26:03,040
might just like be two percent faster in

723
00:26:03,040 --> 00:26:05,590
that guy's benchmarks if you're going to

724
00:26:05,590 --> 00:26:06,850
be searching a lot through your data

725
00:26:06,850 --> 00:26:08,740
then precash it right just create those

726
00:26:08,740 --> 00:26:10,750
objects some of the libraries I showed

727
00:26:10,750 --> 00:26:12,130
allow you to do that or they allow you

728
00:26:12,130 --> 00:26:14,320
to filter things or so on but beware of

729
00:26:14,320 --> 00:26:16,120
over caching because keys also take

730
00:26:16,120 --> 00:26:18,310
space right anybody who uses I didn't

731
00:26:18,310 --> 00:26:20,020
know sequel databases like I do

732
00:26:20,020 --> 00:26:22,330
sometimes or whatever we all know that

733
00:26:22,330 --> 00:26:24,220
Keys take space and its really nice to

734
00:26:24,220 --> 00:26:25,750
structure with these really smart keys

735
00:26:25,750 --> 00:26:27,310
that you can very easily select but at

736
00:26:27,310 --> 00:26:30,220
the same time that is costly and if

737
00:26:30,220 --> 00:26:31,630
you're going to be only using a subset

738
00:26:31,630 --> 00:26:33,400
of your data be sure to filter that out

739
00:26:33,400 --> 00:26:35,740
and then act on it there's no reason to

740
00:26:35,740 --> 00:26:38,140
to have your data there if you're not

741
00:26:38,140 --> 00:26:40,750
going to be using it and don't forget to

742
00:26:40,750 --> 00:26:42,160
clean up your events right if you have

743
00:26:42,160 --> 00:26:44,380
you eyes or tied through data that have

744
00:26:44,380 --> 00:26:46,080
events and so on and so forth triggering

745
00:26:46,080 --> 00:26:48,280
then the best thing you can do is make

746
00:26:48,280 --> 00:26:50,110
sure those are outbound when you're done

747
00:26:50,110 --> 00:26:52,150
and last but not least not everything

748
00:26:52,150 --> 00:26:54,220
can be client-side right so I still do a

749
00:26:54,220 --> 00:26:55,000
lot of my data

750
00:26:55,000 --> 00:26:57,070
I in our or in the server or wherever it

751
00:26:57,070 --> 00:26:58,870
is I need to have it happen because the

752
00:26:58,870 --> 00:27:01,180
reality is most sometime idea doesn't

753
00:27:01,180 --> 00:27:02,980
start with 500 records thankfully

754
00:27:02,980 --> 00:27:04,630
there's not that many superheroes or

755
00:27:04,630 --> 00:27:07,030
villains to keep track of but the nice

756
00:27:07,030 --> 00:27:09,220
thing I can do is what I do have

757
00:27:09,220 --> 00:27:11,860
multiple you is or visualizations or

758
00:27:11,860 --> 00:27:13,750
whatnot that all require the same subset

759
00:27:13,750 --> 00:27:15,490
of data the best thing you can do is

760
00:27:15,490 --> 00:27:17,080
come up with that smaller subset and

761
00:27:17,080 --> 00:27:19,720
pipe that to the client and so that's a

762
00:27:19,720 --> 00:27:21,520
question I always get is how when do I

763
00:27:21,520 --> 00:27:23,140
know what to keep on a server would to

764
00:27:23,140 --> 00:27:24,940
keep on the client well find the

765
00:27:24,940 --> 00:27:27,040
smallest upset and pipe that back but

766
00:27:27,040 --> 00:27:28,750
when you do pipe it back it doesn't mean

767
00:27:28,750 --> 00:27:29,920
that you're then left to your own

768
00:27:29,920 --> 00:27:32,680
devices and and JavaScript basic API

769
00:27:32,680 --> 00:27:34,690
there's lots of libraries that help you

770
00:27:34,690 --> 00:27:37,480
work with your data so if you have any

771
00:27:37,480 --> 00:27:38,920
questions please do reach out to me I

772
00:27:38,920 --> 00:27:40,720
absolutely love answering things about

773
00:27:40,720 --> 00:27:42,520
client-side data and data visualization

774
00:27:42,520 --> 00:27:45,130
and a couple of like small buku things

775
00:27:45,130 --> 00:27:47,440
that are not related but if you are into

776
00:27:47,440 --> 00:27:49,660
gaming in JavaScript we're curating this

777
00:27:49,660 --> 00:27:51,790
website called build new games and if

778
00:27:51,790 --> 00:27:53,470
you want to write with us we get to pair

779
00:27:53,470 --> 00:27:55,660
speakers which is really excite us which

780
00:27:55,660 --> 00:27:57,780
is really exciting so contact me or

781
00:27:57,780 --> 00:28:01,180
email admin opoku and we've all been

782
00:28:01,180 --> 00:28:02,980
talking about functional programming and

783
00:28:02,980 --> 00:28:04,690
no programming and I'm tired of that

784
00:28:04,690 --> 00:28:06,550
argument so if you're interested in

785
00:28:06,550 --> 00:28:07,900
application control flow management

786
00:28:07,900 --> 00:28:10,120
which is really what we need just come

787
00:28:10,120 --> 00:28:12,160
chat with me for a library that we're

788
00:28:12,160 --> 00:28:14,050
alpha testing now and I'd love to give

789
00:28:14,050 --> 00:28:15,550
you access and get your opinion so

790
00:28:15,550 --> 00:28:21,460
that's that

