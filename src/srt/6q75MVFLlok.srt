1
00:00:03,070 --> 00:00:05,810

[Applause]

2
00:00:05,810 --> 00:00:08,010
well yeah thank you very much for this

3
00:00:08,010 --> 00:00:09,900
kind introduction

4
00:00:09,900 --> 00:00:12,809
so exactly this talk is called pre

5
00:00:12,809 --> 00:00:15,059
connect prefetch preload and pre wats

6
00:00:15,059 --> 00:00:17,220
an introduction to the resource ins and

7
00:00:17,220 --> 00:00:19,439
I would like to talk about why web

8
00:00:19,439 --> 00:00:21,689
performance matters at all in the first

9
00:00:21,689 --> 00:00:23,460
place so why are we are we even thinking

10
00:00:23,460 --> 00:00:26,160
about improving website speeds then I

11
00:00:26,160 --> 00:00:29,099
would like to explore explore why some

12
00:00:29,099 --> 00:00:32,840
websites load slowly and then go into

13
00:00:32,840 --> 00:00:35,430
resource hints and how you can use them

14
00:00:35,430 --> 00:00:38,250
to make your website load much faster

15
00:00:38,250 --> 00:00:41,760
than they might do currently so why

16
00:00:41,760 --> 00:00:43,829
should we care about web performance at

17
00:00:43,829 --> 00:00:47,969
all the simple answer is because it has

18
00:00:47,969 --> 00:00:50,280
shown to have a significant significant

19
00:00:50,280 --> 00:00:53,190
effect on on business results so large

20
00:00:53,190 --> 00:00:55,289
companies ran a lot of studies that

21
00:00:55,289 --> 00:00:58,980
showed exactly this so I want to show

22
00:00:58,980 --> 00:01:01,800
two of them Amazon allegedly once run a

23
00:01:01,800 --> 00:01:03,539
study where they deliberately slowed the

24
00:01:03,539 --> 00:01:05,970
websites down by only 100 milliseconds

25
00:01:05,970 --> 00:01:09,180
and they already saw a drop in sales by

26
00:01:09,180 --> 00:01:12,060
1% which is obviously kind of

27
00:01:12,060 --> 00:01:13,950
significant when you are operating on a

28
00:01:13,950 --> 00:01:17,610
scale as Amazon does and the second one

29
00:01:17,610 --> 00:01:19,680
is from another large us-based company

30
00:01:19,680 --> 00:01:21,990
there's called Google and they found out

31
00:01:21,990 --> 00:01:25,799
that 53% of users will abandon a website

32
00:01:25,799 --> 00:01:28,860
if it takes longer than 3 seconds to

33
00:01:28,860 --> 00:01:31,020
load I'm apparently a bit more patient

34
00:01:31,020 --> 00:01:32,490
because I often wait a bit longer but

35
00:01:32,490 --> 00:01:36,329
this is what they have found out but I

36
00:01:36,329 --> 00:01:39,150
think it's even more about something

37
00:01:39,150 --> 00:01:41,040
more important than business it's also

38
00:01:41,040 --> 00:01:43,799
about empathy because especially with

39
00:01:43,799 --> 00:01:46,290
those that have to endure who or network

40
00:01:46,290 --> 00:01:48,540
conditions then then we have and I think

41
00:01:48,540 --> 00:01:52,680
we ought not to take anybody's time as

42
00:01:52,680 --> 00:01:54,329
granted and we should not be wasting it

43
00:01:54,329 --> 00:01:56,340
if we can do can do better and I think

44
00:01:56,340 --> 00:01:59,040
we as web developers are the ones that

45
00:01:59,040 --> 00:02:01,700
are in the position and maybe even

46
00:02:01,700 --> 00:02:07,160
responsible to deliver fast websites I

47
00:02:07,160 --> 00:02:10,739
would like to now to go to why websites

48
00:02:10,739 --> 00:02:13,770
load slowly and in order to do that we

49
00:02:13,770 --> 00:02:13,920
need

50
00:02:13,920 --> 00:02:16,349
- no at first or talk about what

51
00:02:16,349 --> 00:02:18,660
actually is a website so usually a

52
00:02:18,660 --> 00:02:21,270
website is a small text documents that

53
00:02:21,270 --> 00:02:23,610
contains references to other small

54
00:02:23,610 --> 00:02:25,739
documents such as scripts or images or

55
00:02:25,739 --> 00:02:27,569
CSS files that also need to be

56
00:02:27,569 --> 00:02:29,730
downloaded in order for the website to

57
00:02:29,730 --> 00:02:31,560
be useful at all and this is kind of

58
00:02:31,560 --> 00:02:33,630
different - for example if you download

59
00:02:33,630 --> 00:02:36,690
one large binary file for example if you

60
00:02:36,690 --> 00:02:42,450
download download a video and in order

61
00:02:42,450 --> 00:02:45,300
to to download a website you actually

62
00:02:45,300 --> 00:02:47,970
have to send data right and if you think

63
00:02:47,970 --> 00:02:51,600
about it that data don't get it it

64
00:02:51,600 --> 00:02:53,340
doesn't get beams and has to travel and

65
00:02:53,340 --> 00:02:55,560
I would like to give an example where

66
00:02:55,560 --> 00:02:58,709
I'm in Germany and I will request a

67
00:02:58,709 --> 00:03:02,100
website in New York so and if I do this

68
00:03:02,100 --> 00:03:06,239
then there's the distance is roughly six

69
00:03:06,239 --> 00:03:08,190
thousand 100 kilometres from Hamburg to

70
00:03:08,190 --> 00:03:12,090
New York and then also 6130 kilometres

71
00:03:12,090 --> 00:03:13,769
back because I also need to get to get

72
00:03:13,769 --> 00:03:16,709
an answer right so and how fast can data

73
00:03:16,709 --> 00:03:19,290
travel so there's this thing that is

74
00:03:19,290 --> 00:03:21,120
called the speed of light and until now

75
00:03:21,120 --> 00:03:23,340
we weren't we weren't able to do

76
00:03:23,340 --> 00:03:25,709
anything that is faster than that so and

77
00:03:25,709 --> 00:03:28,620
this is around about 300 million meters

78
00:03:28,620 --> 00:03:32,190
per second but in reality data and fiber

79
00:03:32,190 --> 00:03:35,250
cable travels travels in more like 200

80
00:03:35,250 --> 00:03:38,549
million a million meters per second this

81
00:03:38,549 --> 00:03:41,760
means for one data package to go to New

82
00:03:41,760 --> 00:03:44,220
York and coming back to Hamburg it

83
00:03:44,220 --> 00:03:48,840
already takes 62 milliseconds and this

84
00:03:48,840 --> 00:03:51,690
is for only one single data package and

85
00:03:51,690 --> 00:03:55,170
I would not like to to have a look on

86
00:03:55,170 --> 00:03:57,299
what happens on the network when we are

87
00:03:57,299 --> 00:03:59,450
requesting a website or when we are

88
00:03:59,450 --> 00:04:01,769
connecting to a server so what do we

89
00:04:01,769 --> 00:04:03,510
have to do and how many round trips this

90
00:04:03,510 --> 00:04:06,660
this causes so the first thing we have

91
00:04:06,660 --> 00:04:09,380
to do is we have to kind of find out

92
00:04:09,380 --> 00:04:11,970
where we can or how we can connect to

93
00:04:11,970 --> 00:04:13,799
the server and in order to do so we need

94
00:04:13,799 --> 00:04:16,139
to ask domain name server for its IP

95
00:04:16,139 --> 00:04:17,579
address so in this case I will just

96
00:04:17,579 --> 00:04:20,340
answer again ask the DNS server hey DNS

97
00:04:20,340 --> 00:04:22,440
server I would like to go to some domain

98
00:04:22,440 --> 00:04:24,900
in this case it's def has two E and then

99
00:04:24,900 --> 00:04:26,700
the DNS server will resolve that for me

100
00:04:26,700 --> 00:04:27,750
and give me the I

101
00:04:27,750 --> 00:04:30,180
Piedras back and this already has taken

102
00:04:30,180 --> 00:04:35,340
60 62 milliseconds and then because HTTP

103
00:04:35,340 --> 00:04:38,910
uses TCP as its transportation layer we

104
00:04:38,910 --> 00:04:42,180
also have to open a TCP connection so

105
00:04:42,180 --> 00:04:43,830
and in order to do that we send a

106
00:04:43,830 --> 00:04:46,050
package and then we get as soon

107
00:04:46,050 --> 00:04:47,610
synchronization and acknowledgement

108
00:04:47,610 --> 00:04:50,640
package back which also adds another two

109
00:04:50,640 --> 00:04:53,700
round-trips to open the connection where

110
00:04:53,700 --> 00:04:57,630
we are now already at 120 124

111
00:04:57,630 --> 00:05:01,160
milliseconds but now we are in the year

112
00:05:01,160 --> 00:05:04,080
2018 and most websites are delivered

113
00:05:04,080 --> 00:05:07,020
securely which means we also have to do

114
00:05:07,020 --> 00:05:11,370
a TLS or SSL handshake which in itself

115
00:05:11,370 --> 00:05:14,160
adds another two round-trips because we

116
00:05:14,160 --> 00:05:16,530
have to kind of exchange information

117
00:05:16,530 --> 00:05:18,450
about which cipher suits are supported

118
00:05:18,450 --> 00:05:20,520
and then we need to exchange the keys

119
00:05:20,520 --> 00:05:22,890
and also the certificate and then in the

120
00:05:22,890 --> 00:05:25,350
end we can send the encrypted messages

121
00:05:25,350 --> 00:05:27,540
and like I said this already this also

122
00:05:27,540 --> 00:05:29,790
adds another two round-trips and now we

123
00:05:29,790 --> 00:05:32,190
already eight 248 in milliseconds and

124
00:05:32,190 --> 00:05:34,500
the best case conditions right so we

125
00:05:34,500 --> 00:05:36,240
didn't even account for the DNS server

126
00:05:36,240 --> 00:05:38,430
having to calculate the response or any

127
00:05:38,430 --> 00:05:40,440
routers that take up some time and this

128
00:05:40,440 --> 00:05:43,110
is a quarter of a second already and we

129
00:05:43,110 --> 00:05:46,200
also neglected one major thing that most

130
00:05:46,200 --> 00:05:48,990
or a lot of current network traffic goes

131
00:05:48,990 --> 00:05:52,290
over mobile networks which by their

132
00:05:52,290 --> 00:05:55,500
sheer nature are always add in a fixed

133
00:05:55,500 --> 00:05:58,979
amount of latency to to each data that

134
00:05:58,979 --> 00:06:00,870
is to each package that is going to be

135
00:06:00,870 --> 00:06:03,180
sent so for example for a te this as

136
00:06:03,180 --> 00:06:04,710
well as small it's only 70 milliseconds

137
00:06:04,710 --> 00:06:07,979
but if you are on on 3G which is pretty

138
00:06:07,979 --> 00:06:09,870
common and in most countries this is

139
00:06:09,870 --> 00:06:12,660
already on already between 150

140
00:06:12,660 --> 00:06:15,419
milliseconds or 400 milliseconds and on

141
00:06:15,419 --> 00:06:17,880
2g you are basically lost because it's

142
00:06:17,880 --> 00:06:20,910
almost one second for each request and

143
00:06:20,910 --> 00:06:24,180
if you if you do the math then you can

144
00:06:24,180 --> 00:06:27,540
add up for normal 3G connection to like

145
00:06:27,540 --> 00:06:29,400
to open a connection to to a web server

146
00:06:29,400 --> 00:06:32,610
it's already 1,000 milliseconds so one

147
00:06:32,610 --> 00:06:34,770
second before any data is sent at all

148
00:06:34,770 --> 00:06:37,500
and when I research this I was kind of

149
00:06:37,500 --> 00:06:39,270
impression that cannot be cannot be true

150
00:06:39,270 --> 00:06:41,729
because just seems way to match

151
00:06:41,729 --> 00:06:44,879
but then I wanna run a test on a service

152
00:06:44,879 --> 00:06:47,009
that is called webpagetest.org so if you

153
00:06:47,009 --> 00:06:48,839
don't know it yet then please look it up

154
00:06:48,839 --> 00:06:51,539
it's super awesome if you want to just

155
00:06:51,539 --> 00:06:53,939
see how your website is performing it

156
00:06:53,939 --> 00:06:55,680
has a lot of more features than only

157
00:06:55,680 --> 00:06:56,879
this waterfall chart but this is the

158
00:06:56,879 --> 00:06:59,189
waterfall chart in this case I requested

159
00:06:59,189 --> 00:06:59,969
usa.gov

160
00:06:59,969 --> 00:07:02,580
from a server in Frankfurt I think under

161
00:07:02,580 --> 00:07:06,300
3G conditions and I covered the download

162
00:07:06,300 --> 00:07:08,699
part so with this icon so what you could

163
00:07:08,699 --> 00:07:11,610
see there is only what it takes to

164
00:07:11,610 --> 00:07:13,620
connect to the website so it's DNS TCP

165
00:07:13,620 --> 00:07:17,520
and TLS and it's already 1.4 or 1.3

166
00:07:17,520 --> 00:07:20,249
seconds so it's actually it's actually

167
00:07:20,249 --> 00:07:23,520
true so now that we opened the

168
00:07:23,520 --> 00:07:25,830
connection we can happily start sending

169
00:07:25,830 --> 00:07:28,289
data in full-speed right well of course

170
00:07:28,289 --> 00:07:34,020
not doesn't work because TCP has a bunch

171
00:07:34,020 --> 00:07:37,110
of algorithms in place that protect the

172
00:07:37,110 --> 00:07:40,229
network from collapsing because you

173
00:07:40,229 --> 00:07:41,849
cannot just send data if your recipient

174
00:07:41,849 --> 00:07:43,740
does not be it's not able to handle the

175
00:07:43,740 --> 00:07:45,719
data and then you would just congest the

176
00:07:45,719 --> 00:07:47,939
entire network and it will break down so

177
00:07:47,939 --> 00:07:53,219
and one-one-one algorithm is called tcp

178
00:07:53,219 --> 00:07:55,709
slow-start and it works in the way that

179
00:07:55,709 --> 00:07:58,620
when you start sending data it only does

180
00:07:58,620 --> 00:08:00,060
it slowly so you have to send one

181
00:08:00,060 --> 00:08:01,560
package and then you have to wait to get

182
00:08:01,560 --> 00:08:03,360
one back before you can send even more

183
00:08:03,360 --> 00:08:06,209
data and this slowly increases until you

184
00:08:06,209 --> 00:08:08,520
at some point reach maximum maximum

185
00:08:08,520 --> 00:08:11,879
speed and usually this amount of data is

186
00:08:11,879 --> 00:08:14,039
14 kilobytes so if you happen to manage

187
00:08:14,039 --> 00:08:16,469
to get your entire website into those 14

188
00:08:16,469 --> 00:08:17,789
kilobytes then you have only one

189
00:08:17,789 --> 00:08:19,620
additional one trip which would be

190
00:08:19,620 --> 00:08:21,779
awesome but I don't know if anybody is

191
00:08:21,779 --> 00:08:25,319
capable of doing that nowadays so yeah

192
00:08:25,319 --> 00:08:28,319
and the thing is that when you're using

193
00:08:28,319 --> 00:08:32,069
HTTP one and not HTTP two then you have

194
00:08:32,069 --> 00:08:34,500
this tcp slow-start punishment so to

195
00:08:34,500 --> 00:08:36,149
speak for each connection that you are

196
00:08:36,149 --> 00:08:38,099
having so if you are downloading images

197
00:08:38,099 --> 00:08:40,709
five images from the same host then

198
00:08:40,709 --> 00:08:42,719
you're opening five connections and you

199
00:08:42,719 --> 00:08:45,540
have to endure' tcp slow-start for each

200
00:08:45,540 --> 00:08:48,449
of those connections and this leads to

201
00:08:48,449 --> 00:08:51,269
to the following conclusion that usually

202
00:08:51,269 --> 00:08:55,570
latency and not bandwidth causes slow

203
00:08:55,570 --> 00:08:57,760
because in this example it didn't matter

204
00:08:57,760 --> 00:09:01,600
much if I have 100 M it's 100 connection

205
00:09:01,600 --> 00:09:04,600
or 50 m 8 or 10 or 1 gigabit because we

206
00:09:04,600 --> 00:09:09,340
didn't send large data yet and engineers

207
00:09:09,340 --> 00:09:11,590
over the years came up with a lot of

208
00:09:11,590 --> 00:09:14,740
techniques to mitigate those issues and

209
00:09:14,740 --> 00:09:17,170
to decrease latency so first of all

210
00:09:17,170 --> 00:09:20,050
there is now HTTP to multiplexing which

211
00:09:20,050 --> 00:09:23,380
allows you to reuse open TCP connections

212
00:09:23,380 --> 00:09:25,600
so when you are downloading 5 images

213
00:09:25,600 --> 00:09:27,340
from the same house then only one

214
00:09:27,340 --> 00:09:29,140
connection will be used so you can

215
00:09:29,140 --> 00:09:31,390
probably download the third fourth and

216
00:09:31,390 --> 00:09:34,060
fifth image on our full speed and you

217
00:09:34,060 --> 00:09:36,340
don't and you are not subject to TCP

218
00:09:36,340 --> 00:09:39,220
slows at five times but only once then

219
00:09:39,220 --> 00:09:41,370
there is content delivery networks which

220
00:09:41,370 --> 00:09:43,900
basically try to move their servers

221
00:09:43,900 --> 00:09:45,580
closer to the users location and

222
00:09:45,580 --> 00:09:48,730
literally decreasing the distance data

223
00:09:48,730 --> 00:09:51,880
has to travel and therefore reducing

224
00:09:51,880 --> 00:09:55,600
latency and the third one is caching and

225
00:09:55,600 --> 00:09:58,120
with caching you can kind of remove

226
00:09:58,120 --> 00:09:59,890
bring the related sea down to almost

227
00:09:59,890 --> 00:10:02,740
zero because once the file is in the

228
00:10:02,740 --> 00:10:04,420
cache it will be just delivered from

229
00:10:04,420 --> 00:10:07,360
either the disk or the memory the issue

230
00:10:07,360 --> 00:10:09,700
was with with that is that it only works

231
00:10:09,700 --> 00:10:11,650
for the second request because in order

232
00:10:11,650 --> 00:10:13,120
to be able to serve it from the cache

233
00:10:13,120 --> 00:10:15,460
you somehow need to to put it there and

234
00:10:15,460 --> 00:10:18,460
that usually happens only when you when

235
00:10:18,460 --> 00:10:20,170
you see it when you download it so and

236
00:10:20,170 --> 00:10:23,260
this is where resource hints come into

237
00:10:23,260 --> 00:10:27,450
play so resource ins a kind of a way of

238
00:10:27,450 --> 00:10:30,340
predictive caching it gives you the

239
00:10:30,340 --> 00:10:32,710
ability to point the browser to

240
00:10:32,710 --> 00:10:35,470
resources such as scripts CSS files

241
00:10:35,470 --> 00:10:37,840
documents images whatever you can think

242
00:10:37,840 --> 00:10:40,570
about before the browser can even know

243
00:10:40,570 --> 00:10:42,070
that it's going to need them either for

244
00:10:42,070 --> 00:10:45,160
this same request or for a request that

245
00:10:45,160 --> 00:10:47,400
might be the next one or even two

246
00:10:47,400 --> 00:10:51,010
requests away and the best or one cool

247
00:10:51,010 --> 00:10:52,630
thing about it that implementation is

248
00:10:52,630 --> 00:10:55,510
also water is simple because usually you

249
00:10:55,510 --> 00:10:57,790
can just inject a link tag into your

250
00:10:57,790 --> 00:11:01,600
head and get going and I would now like

251
00:11:01,600 --> 00:11:04,950
to go through all of them basically and

252
00:11:04,950 --> 00:11:07,960
show what they can do for you and how

253
00:11:07,960 --> 00:11:09,370
you can use the

254
00:11:09,370 --> 00:11:12,370
some example so you can use them and I

255
00:11:12,370 --> 00:11:14,500
would like to start with preconnect

256
00:11:14,500 --> 00:11:17,020
because preconnect does all the things

257
00:11:17,020 --> 00:11:19,870
that I just mentioned it resolves the

258
00:11:19,870 --> 00:11:22,450
DNS it performs the TCP handshake and

259
00:11:22,450 --> 00:11:25,960
also does the TLS setup and I would like

260
00:11:25,960 --> 00:11:28,029
to give one concrete example for that

261
00:11:28,029 --> 00:11:31,360
and this is web fun so who has weapons

262
00:11:31,360 --> 00:11:34,440
on their website or worked on a website

263
00:11:34,440 --> 00:11:38,470
that's most so I also created a website

264
00:11:38,470 --> 00:11:43,570
I have this catch-up and I have an issue

265
00:11:43,570 --> 00:11:45,100
I have an issue so I need this platform

266
00:11:45,100 --> 00:11:47,020
because the website needs to be cute so

267
00:11:47,020 --> 00:11:50,350
I can give most the kid the kid is a new

268
00:11:50,350 --> 00:11:52,630
home but I also needed to be loading

269
00:11:52,630 --> 00:11:54,610
fast because otherwise my conversion

270
00:11:54,610 --> 00:11:58,330
will drop and I don't want that so this

271
00:11:58,330 --> 00:12:00,279
is how my my hat looks like currently

272
00:12:00,279 --> 00:12:02,950
and I have half the stylesheet

273
00:12:02,950 --> 00:12:06,160
my personal style sheet but I also have

274
00:12:06,160 --> 00:12:08,400
the Google web font style sheet and

275
00:12:08,400 --> 00:12:10,510
maybe most of you already know but I'm

276
00:12:10,510 --> 00:12:11,890
going to mention any way Google is

277
00:12:11,890 --> 00:12:14,770
offering a rather popular web service

278
00:12:14,770 --> 00:12:16,120
where you can download reference from

279
00:12:16,120 --> 00:12:18,870
which is called Google web fonts and

280
00:12:18,870 --> 00:12:22,990
here's the the web font style sheet so

281
00:12:22,990 --> 00:12:25,420
my style sheet is rather simple it only

282
00:12:25,420 --> 00:12:27,580
contains the font family in the flow

283
00:12:27,580 --> 00:12:29,110
which is the web form that I'm going to

284
00:12:29,110 --> 00:12:30,790
download and of course also the color

285
00:12:30,790 --> 00:12:35,970
Fox here because CIA and branding and

286
00:12:35,970 --> 00:12:38,860
this is the Google web font style sheet

287
00:12:38,860 --> 00:12:40,810
and it's and it's important to know that

288
00:12:40,810 --> 00:12:42,820
this is not the web font file itself

289
00:12:42,820 --> 00:12:45,430
it's only the style sheet that

290
00:12:45,430 --> 00:12:49,420
references that references the actual

291
00:12:49,420 --> 00:12:50,920
web font and you can see here it's for

292
00:12:50,920 --> 00:12:52,900
the name in the flow and then there's

293
00:12:52,900 --> 00:12:55,990
the URL that points to to the web font

294
00:12:55,990 --> 00:12:58,540
file I will come to that in a second

295
00:12:58,540 --> 00:13:01,270
when I now open my web site this is how

296
00:13:01,270 --> 00:13:04,240
the waterfall chart looks like and can

297
00:13:04,240 --> 00:13:08,740
you even see that okay awesome and so at

298
00:13:08,740 --> 00:13:10,120
first my website is downloaded so we I

299
00:13:10,120 --> 00:13:12,760
added some annotations so first DNS and

300
00:13:12,760 --> 00:13:14,529
then TCP TLS and then you see the actual

301
00:13:14,529 --> 00:13:17,230
requests happening and once my web site

302
00:13:17,230 --> 00:13:19,660
is downloaded the browser sees that I

303
00:13:19,660 --> 00:13:21,910
have embedded my my stylesheet and also

304
00:13:21,910 --> 00:13:22,710
the Google web fonts

305
00:13:22,710 --> 00:13:24,899
and then it will download both both of

306
00:13:24,899 --> 00:13:28,290
them in parallel and as you can see here

307
00:13:28,290 --> 00:13:30,660
like at the bottom only after both have

308
00:13:30,660 --> 00:13:32,190
been downloaded it will download the bed

309
00:13:32,190 --> 00:13:35,520
front itself and why is that the case

310
00:13:35,520 --> 00:13:38,610
so browsers usually tend to download as

311
00:13:38,610 --> 00:13:41,610
little data as possible to not waste any

312
00:13:41,610 --> 00:13:43,220
bandwidth so they are only downloading

313
00:13:43,220 --> 00:13:45,810
for example background images or web

314
00:13:45,810 --> 00:13:47,550
fonts when they are actually used on the

315
00:13:47,550 --> 00:13:49,770
page and in order to know if they are

316
00:13:49,770 --> 00:13:51,270
used in the page they have to download

317
00:13:51,270 --> 00:13:53,040
all the style sheets and then also and

318
00:13:53,040 --> 00:13:54,959
also the HTML and then apply the style

319
00:13:54,959 --> 00:13:56,670
sheets and check the selectors and see

320
00:13:56,670 --> 00:13:58,740
if those selectors match and then

321
00:13:58,740 --> 00:14:00,690
download the images and reference or or

322
00:14:00,690 --> 00:14:02,790
not and this is why they have to

323
00:14:02,790 --> 00:14:04,860
download both of them only then will

324
00:14:04,860 --> 00:14:07,680
download the actual headphones and as

325
00:14:07,680 --> 00:14:09,540
you can all my might be able to see it

326
00:14:09,540 --> 00:14:12,870
takes roughly 4.2 seconds to download

327
00:14:12,870 --> 00:14:16,110
the entire page under 3G conditions so

328
00:14:16,110 --> 00:14:18,240
there's one important thing about the

329
00:14:18,240 --> 00:14:22,110
Google web font API that is that the

330
00:14:22,110 --> 00:14:25,890
path is not stable so if you would if

331
00:14:25,890 --> 00:14:28,560
you were just to preload the entire font

332
00:14:28,560 --> 00:14:30,180
then it wouldn't work because it might

333
00:14:30,180 --> 00:14:32,490
change to more or in a week you cannot

334
00:14:32,490 --> 00:14:34,500
know but what is relatively low but has

335
00:14:34,500 --> 00:14:35,940
been relatively stable throughout the

336
00:14:35,940 --> 00:14:37,890
years is that it is going to be served

337
00:14:37,890 --> 00:14:40,740
from a host that is called fond stodgy

338
00:14:40,740 --> 00:14:43,500
steady calm so that hasn't changed in

339
00:14:43,500 --> 00:14:44,520
years or I don't know if it hasn't

340
00:14:44,520 --> 00:14:47,459
changed at all ever so what you can do

341
00:14:47,459 --> 00:14:51,360
is you can add a link tag to your head

342
00:14:51,360 --> 00:14:54,029
with the rel set to pre connect so and

343
00:14:54,029 --> 00:14:56,430
the atrial set to where the funds are

344
00:14:56,430 --> 00:14:58,200
going to be downloaded from and this

345
00:14:58,200 --> 00:15:00,779
will advise the browser to Otel force

346
00:15:00,779 --> 00:15:03,180
the browser basically to already connect

347
00:15:03,180 --> 00:15:06,050
against this host so doing DNS TCP

348
00:15:06,050 --> 00:15:09,180
handshake and he'll essentially and then

349
00:15:09,180 --> 00:15:10,680
there's also across originator boots

350
00:15:10,680 --> 00:15:13,320
which we ignore for now and I will come

351
00:15:13,320 --> 00:15:16,020
to this in a second as well because it's

352
00:15:16,020 --> 00:15:18,450
kinda interesting but if we if we add

353
00:15:18,450 --> 00:15:20,820
this to our hat then the resulting

354
00:15:20,820 --> 00:15:23,790
waterfall suddenly looks like this so

355
00:15:23,790 --> 00:15:25,589
again my website is downloaded and then

356
00:15:25,589 --> 00:15:28,230
it starts it downloads the both style

357
00:15:28,230 --> 00:15:30,990
sheets parallel as before but now it

358
00:15:30,990 --> 00:15:31,529
already

359
00:15:31,529 --> 00:15:34,320
connects to to the host of the of the

360
00:15:34,320 --> 00:15:36,120
web font it doesn't download it yet so

361
00:15:36,120 --> 00:15:36,460
you might

362
00:15:36,460 --> 00:15:38,350
notice the gap because it still needs to

363
00:15:38,350 --> 00:15:40,750
evaluate both CSS files in order to know

364
00:15:40,750 --> 00:15:43,030
if it's actually going to be needed but

365
00:15:43,030 --> 00:15:45,520
we already told the browser that we want

366
00:15:45,520 --> 00:15:47,530
to connect against this house which it

367
00:15:47,530 --> 00:15:49,570
does right away so that when the

368
00:15:49,570 --> 00:15:51,760
wavefront file needs to be downloaded it

369
00:15:51,760 --> 00:15:53,320
will be much much faster because you

370
00:15:53,320 --> 00:15:56,020
don't have to open the connection

371
00:15:56,020 --> 00:15:58,060
because it's already been opened and now

372
00:15:58,060 --> 00:16:01,180
it's only three seconds or 3.1 seconds

373
00:16:01,180 --> 00:16:04,000
so we got rid of more than a second of

374
00:16:04,000 --> 00:16:06,130
Patriot time by only adding this link

375
00:16:06,130 --> 00:16:09,990
tag to the head I think is kinda mazing

376
00:16:09,990 --> 00:16:12,160
quickly going back to this cross origin

377
00:16:12,160 --> 00:16:15,400
attribute so for I guess for DRM reasons

378
00:16:15,400 --> 00:16:17,470
funds Bev funds are subject to to the

379
00:16:17,470 --> 00:16:19,210
same origin policy so that you cannot

380
00:16:19,210 --> 00:16:22,180
just include reference from from anybody

381
00:16:22,180 --> 00:16:25,000
and the front face specification

382
00:16:25,000 --> 00:16:27,220
requires that funds are loaded in an

383
00:16:27,220 --> 00:16:30,310
enemy's cause mode and for some reason I

384
00:16:30,310 --> 00:16:31,630
don't know maybe some of you can answer

385
00:16:31,630 --> 00:16:34,930
this is browsers appear to maintain a

386
00:16:34,930 --> 00:16:37,300
separate pool of TCP connections for

387
00:16:37,300 --> 00:16:41,020
those kind of requests which means if

388
00:16:41,020 --> 00:16:42,850
you do not set cross origin then you

389
00:16:42,850 --> 00:16:44,800
will have two TCP connections because it

390
00:16:44,800 --> 00:16:49,390
cannot reuse the first one so let's have

391
00:16:49,390 --> 00:16:52,390
a look at the browser support so the

392
00:16:52,390 --> 00:16:54,370
browser support is actually pretty good

393
00:16:54,370 --> 00:16:58,420
it's only it's supported for is for 70%

394
00:16:58,420 --> 00:17:00,910
of users apparently already so I think

395
00:17:00,910 --> 00:17:07,510
it's safe to - already just use it the

396
00:17:07,510 --> 00:17:09,820
second one is the second resource hint

397
00:17:09,820 --> 00:17:12,760
is called DNS prefetch and it's it is

398
00:17:12,760 --> 00:17:14,950
kind of similar to how preconnect works

399
00:17:14,950 --> 00:17:17,380
but it only does the DNS resolving and

400
00:17:17,380 --> 00:17:19,560
does not open the TCP connection and

401
00:17:19,560 --> 00:17:23,740
this is mostly useful for resources that

402
00:17:23,740 --> 00:17:27,280
you will not need now but now wish where

403
00:17:27,280 --> 00:17:28,750
you don't don't know if it's going to

404
00:17:28,750 --> 00:17:31,120
happen in a second or maybe in five

405
00:17:31,120 --> 00:17:33,060
seconds or maybe even in a minute and

406
00:17:33,060 --> 00:17:35,500
one example I would like to give is

407
00:17:35,500 --> 00:17:40,480
Amazon so Amazon has this autocomplete

408
00:17:40,480 --> 00:17:41,860
feature which you might have already

409
00:17:41,860 --> 00:17:46,150
seen and this was really quick but and

410
00:17:46,150 --> 00:17:48,400
the thing is the autocomplete service

411
00:17:48,400 --> 00:17:50,260
itself does not

412
00:17:50,260 --> 00:17:52,210
live on amazon.com it actually lives on

413
00:17:52,210 --> 00:17:54,910
completion amazon.com which is a

414
00:17:54,910 --> 00:17:57,820
different host then amazon.com so if you

415
00:17:57,820 --> 00:17:59,680
where to start typing your browser would

416
00:17:59,680 --> 00:18:02,560
need to resolve this host before it can

417
00:18:02,560 --> 00:18:04,870
actually make the request and what they

418
00:18:04,870 --> 00:18:07,480
are doing is in their head they add this

419
00:18:07,480 --> 00:18:09,820
rate link tag with the relation said to

420
00:18:09,820 --> 00:18:12,520
DNS prefetch and the href said to

421
00:18:12,520 --> 00:18:14,980
completion amazon.com so as soon as you

422
00:18:14,980 --> 00:18:17,530
open their main page that's this is

423
00:18:17,530 --> 00:18:19,270
already going to be resolved and when

424
00:18:19,270 --> 00:18:20,680
you start typing it will will just

425
00:18:20,680 --> 00:18:24,340
appear in work which is cool and also

426
00:18:24,340 --> 00:18:26,740
simple and it has even better browser

427
00:18:26,740 --> 00:18:29,920
support then then pre Connect which is

428
00:18:29,920 --> 00:18:32,650
kind of interesting so what you can do

429
00:18:32,650 --> 00:18:35,380
is if you actually want preconnect but

430
00:18:35,380 --> 00:18:37,000
also want to give browsers that do not

431
00:18:37,000 --> 00:18:39,790
support reconnect but to support DNS

432
00:18:39,790 --> 00:18:42,040
prefetch at least something the DNS

433
00:18:42,040 --> 00:18:44,830
prefetch you can basically just specify

434
00:18:44,830 --> 00:18:46,960
both in one link tag and then if the

435
00:18:46,960 --> 00:18:49,180
browser supports pre connect it will

436
00:18:49,180 --> 00:18:51,880
simply use pre connect and if it does

437
00:18:51,880 --> 00:18:54,670
not but our support DNS prefetch then it

438
00:18:54,670 --> 00:19:02,080
will resort to DNS prefetch the next one

439
00:19:02,080 --> 00:19:06,370
is prefetch and prefetch allows you to

440
00:19:06,370 --> 00:19:09,460
to actually download resources but that

441
00:19:09,460 --> 00:19:11,320
you that you don't need right now but

442
00:19:11,320 --> 00:19:15,720
that you are going to need later and

443
00:19:15,720 --> 00:19:18,550
like for future for future navigations

444
00:19:18,550 --> 00:19:21,160
so and cache would supply so if you if

445
00:19:21,160 --> 00:19:23,320
you download if you prefetch a file and

446
00:19:23,320 --> 00:19:25,030
it has a cache lifetime of one hour then

447
00:19:25,030 --> 00:19:27,130
if you come back later then it will

448
00:19:27,130 --> 00:19:30,310
still be served from the cache the the

449
00:19:30,310 --> 00:19:32,470
thing to know is that prefetch files

450
00:19:32,470 --> 00:19:34,540
will not get it will not be executed so

451
00:19:34,540 --> 00:19:36,070
it's totally safe to prefetch for

452
00:19:36,070 --> 00:19:37,540
example scripts limiters they would just

453
00:19:37,540 --> 00:19:39,760
be downloaded and with a low priority

454
00:19:39,760 --> 00:19:42,040
and nothing will be done with it until

455
00:19:42,040 --> 00:19:44,050
you two need it and it would like to

456
00:19:44,050 --> 00:19:46,090
give to two examples for that as well

457
00:19:46,090 --> 00:19:49,900
so going back to my cat store maybe so

458
00:19:49,900 --> 00:19:52,690
usually an online store flow is is

459
00:19:52,690 --> 00:19:54,310
pretty clear so I have a product page

460
00:19:54,310 --> 00:19:56,830
and then I put products into my cart and

461
00:19:56,830 --> 00:19:59,080
then I go to the cart page and then from

462
00:19:59,080 --> 00:20:00,790
the cart page I go to the checkout which

463
00:20:00,790 --> 00:20:03,340
sometimes is a separate check out a

464
00:20:03,340 --> 00:20:03,910
separate

465
00:20:03,910 --> 00:20:05,890
application and then I will do I will

466
00:20:05,890 --> 00:20:08,440
give you my money there basically so

467
00:20:08,440 --> 00:20:09,880
what you can do when I'm on the cart

468
00:20:09,880 --> 00:20:12,670
page you can be pretty certain that I'm

469
00:20:12,670 --> 00:20:14,290
going to go to the checkout as well

470
00:20:14,290 --> 00:20:15,790
because if I'm already in the card why

471
00:20:15,790 --> 00:20:16,360
wouldn't I

472
00:20:16,360 --> 00:20:19,000
so you can at this point already

473
00:20:19,000 --> 00:20:22,390
prefetch the the files that your app is

474
00:20:22,390 --> 00:20:24,610
going to need for for the checkout

475
00:20:24,610 --> 00:20:26,590
experience and then just prefetch them

476
00:20:26,590 --> 00:20:28,390
and as soon as I hit this go to or

477
00:20:28,390 --> 00:20:30,130
proceed to checkout button the stuff

478
00:20:30,130 --> 00:20:32,320
will already be there and leading to

479
00:20:32,320 --> 00:20:37,500
better experience the second example is

480
00:20:37,500 --> 00:20:40,060
similar but maybe a bit different so if

481
00:20:40,060 --> 00:20:41,740
you have a login page lock in a login

482
00:20:41,740 --> 00:20:44,170
form then it's also you can also be

483
00:20:44,170 --> 00:20:46,300
pretty certain that my intent is is to

484
00:20:46,300 --> 00:20:47,980
log in and use the locked-in experience

485
00:20:47,980 --> 00:20:51,310
so why not just real Oh a prefetch the

486
00:20:51,310 --> 00:20:54,040
the assets images in scripts that you

487
00:20:54,040 --> 00:20:55,600
need for the locked experience at this

488
00:20:55,600 --> 00:20:58,120
point already because it doesn't hurt if

489
00:20:58,120 --> 00:20:59,770
you are pretty sure that that I will

490
00:20:59,770 --> 00:21:02,110
need them then you can use the bandwidth

491
00:21:02,110 --> 00:21:04,570
and just give me a better better

492
00:21:04,570 --> 00:21:08,500
experience and the browser support also

493
00:21:08,500 --> 00:21:11,170
is pretty good it got all of this got a

494
00:21:11,170 --> 00:21:12,970
lot better in recent months because in

495
00:21:12,970 --> 00:21:14,860
this case not but also safari naira

496
00:21:14,860 --> 00:21:16,930
safari started supporting we saw since

497
00:21:16,930 --> 00:21:19,480
apart from this one apparently so this

498
00:21:19,480 --> 00:21:20,470
is pretty good and this is even

499
00:21:20,470 --> 00:21:23,470
supported in IE in edge so pretty safe

500
00:21:23,470 --> 00:21:27,610
to use the last one I would like to talk

501
00:21:27,610 --> 00:21:30,790
about is also the newest one and maybe

502
00:21:30,790 --> 00:21:34,060
even the most interesting one it is

503
00:21:34,060 --> 00:21:37,060
called preload and you can use preload

504
00:21:37,060 --> 00:21:41,380
to download resources that you need for

505
00:21:41,380 --> 00:21:42,820
the current navigation for the current

506
00:21:42,820 --> 00:21:44,800
page view but that the browser cannot

507
00:21:44,800 --> 00:21:47,470
know about yet but you do know so now I

508
00:21:47,470 --> 00:21:50,170
would like to go back to my my to a bad

509
00:21:50,170 --> 00:21:54,730
font example and just briefly go go back

510
00:21:54,730 --> 00:21:57,490
to the initial initial waterfall chart

511
00:21:57,490 --> 00:22:00,310
like the first one like just to recap

512
00:22:00,310 --> 00:22:02,830
that we had to download both CSS files

513
00:22:02,830 --> 00:22:04,180
and only afterwards the webform was

514
00:22:04,180 --> 00:22:06,250
downloaded and I know I only said that

515
00:22:06,250 --> 00:22:08,380
when we are using Google Wave phones we

516
00:22:08,380 --> 00:22:11,230
cannot know the path but let's just

517
00:22:11,230 --> 00:22:12,970
pretend for this example that we can

518
00:22:12,970 --> 00:22:15,220
know the path and if you actually wanted

519
00:22:15,220 --> 00:22:16,750
to use this technique you could also

520
00:22:16,750 --> 00:22:17,590
consider

521
00:22:17,590 --> 00:22:19,960
hosting the web font yourself and be in

522
00:22:19,960 --> 00:22:23,380
control of the UL and then no no wait

523
00:22:23,380 --> 00:22:27,760
for sure and all right we got one too

524
00:22:27,760 --> 00:22:31,180
fast and sorry so and so what you can do

525
00:22:31,180 --> 00:22:33,940
is add at this link tech we've preload

526
00:22:33,940 --> 00:22:35,410
and then set it to the edge proof that

527
00:22:35,410 --> 00:22:38,050
we know pretend that we know and what

528
00:22:38,050 --> 00:22:40,270
happens then is if you look at the

529
00:22:40,270 --> 00:22:41,980
resulting waterfall chart that the web

530
00:22:41,980 --> 00:22:44,590
phone itself will be downloaded and

531
00:22:44,590 --> 00:22:46,450
parallel with all the other stuff and

532
00:22:46,450 --> 00:22:50,700
will be will be ready much much earlier

533
00:22:50,700 --> 00:22:52,840
which was kind of cool you can use it

534
00:22:52,840 --> 00:22:54,460
for for all kinds of stuff and we will

535
00:22:54,460 --> 00:22:56,290
come to to that right now because if you

536
00:22:56,290 --> 00:22:58,480
might have noticed there was this s

537
00:22:58,480 --> 00:23:02,200
attribute in here and the S attribute is

538
00:23:02,200 --> 00:23:05,590
the B crest type and you can have plenty

539
00:23:05,590 --> 00:23:07,630
of them you can use scripts for example

540
00:23:07,630 --> 00:23:09,700
if you have third-party scripts that you

541
00:23:09,700 --> 00:23:11,650
are loading by an inline script loader

542
00:23:11,650 --> 00:23:15,240
or you can have images that maybe are

543
00:23:15,240 --> 00:23:17,410
referenced as background images in your

544
00:23:17,410 --> 00:23:20,260
CSS files and you can even preload fetch

545
00:23:20,260 --> 00:23:22,900
requests which bring which gives us

546
00:23:22,900 --> 00:23:26,050
interesting interesting new stuff which

547
00:23:26,050 --> 00:23:27,610
I don't want to get into detail right

548
00:23:27,610 --> 00:23:30,730
now but why do we even have to set

549
00:23:30,730 --> 00:23:33,250
request type why do we need it so it's

550
00:23:33,250 --> 00:23:35,290
needed so that the browser can

551
00:23:35,290 --> 00:23:39,370
prioritize the request because style

552
00:23:39,370 --> 00:23:41,170
sheets might might be downloaded with a

553
00:23:41,170 --> 00:23:43,420
higher priority than images but it is

554
00:23:43,420 --> 00:23:46,210
also used to set the appropriate except

555
00:23:46,210 --> 00:23:49,360
header so that the browser sense doesn't

556
00:23:49,360 --> 00:23:51,220
request an image when you actually want

557
00:23:51,220 --> 00:23:52,750
one a script from you or from your web

558
00:23:52,750 --> 00:23:54,880
server so that you can deliver the right

559
00:23:54,880 --> 00:23:57,880
thing but it's also used to enforce the

560
00:23:57,880 --> 00:23:59,590
content security policy and if you were

561
00:23:59,590 --> 00:24:01,060
in the first talk this morning you might

562
00:24:01,060 --> 00:24:02,440
already know what it is about but

563
00:24:02,440 --> 00:24:05,260
content security basically allows you in

564
00:24:05,260 --> 00:24:07,510
this case to specify from which host you

565
00:24:07,510 --> 00:24:10,660
want to allow to download resources from

566
00:24:10,660 --> 00:24:12,280
for example you could say I only want to

567
00:24:12,280 --> 00:24:14,500
allow images to be downloaded from image

568
00:24:14,500 --> 00:24:15,460
server com

569
00:24:15,460 --> 00:24:17,650
whereas scripts should be downloaded

570
00:24:17,650 --> 00:24:20,440
from script server calm and in order to

571
00:24:20,440 --> 00:24:22,330
enforce that Google will air Google the

572
00:24:22,330 --> 00:24:26,170
browser needs to know with what kind of

573
00:24:26,170 --> 00:24:30,580
file type it is dealing with and if you

574
00:24:30,580 --> 00:24:31,300
fail

575
00:24:31,300 --> 00:24:33,790
to set a resource type or set incorrect

576
00:24:33,790 --> 00:24:35,050
one then you will have basically have

577
00:24:35,050 --> 00:24:37,630
double fetches and preload will not give

578
00:24:37,630 --> 00:24:40,040
you anything

579
00:24:40,050 --> 00:24:43,780
one other thing is there's responsive

580
00:24:43,780 --> 00:24:46,060
design so if you which is basically

581
00:24:46,060 --> 00:24:47,770
trying to make your your web app work

582
00:24:47,770 --> 00:24:50,170
across screen sizes right and oftentimes

583
00:24:50,170 --> 00:24:54,430
you need to download resources depending

584
00:24:54,430 --> 00:24:56,050
on the screen size for example the

585
00:24:56,050 --> 00:24:57,970
background image for for mobile app for

586
00:24:57,970 --> 00:24:59,650
mobile version might be a completely

587
00:24:59,650 --> 00:25:01,150
different one than the one for the

588
00:25:01,150 --> 00:25:03,700
desktop experience and usually people

589
00:25:03,700 --> 00:25:06,070
use media queries for that so you

590
00:25:06,070 --> 00:25:09,160
specify a max width and then if the max

591
00:25:09,160 --> 00:25:12,190
width of your device is in the is in

592
00:25:12,190 --> 00:25:14,050
this realm then it will download this

593
00:25:14,050 --> 00:25:16,300
and otherwise the other luckily browser

594
00:25:16,300 --> 00:25:18,130
vendors have this also in mind when they

595
00:25:18,130 --> 00:25:22,630
invented preload so you can use the

596
00:25:22,630 --> 00:25:25,060
media actually boot and in preload in

597
00:25:25,060 --> 00:25:26,770
the link tag as well and then said max

598
00:25:26,770 --> 00:25:28,720
for example the max width and then the

599
00:25:28,720 --> 00:25:30,850
browser will only download a preload

600
00:25:30,850 --> 00:25:32,830
those where the media query actually

601
00:25:32,830 --> 00:25:37,510
matches and here is the one the one

602
00:25:37,510 --> 00:25:40,270
resource in where support got

603
00:25:40,270 --> 00:25:42,700
significantly better in the last three

604
00:25:42,700 --> 00:25:44,050
months even I think so it's now

605
00:25:44,050 --> 00:25:46,980
supported in all major browsers but IE

606
00:25:46,980 --> 00:25:49,540
and it's even already in at 17

607
00:25:49,540 --> 00:25:52,240
apparently so I think it's now ready

608
00:25:52,240 --> 00:25:54,910
ready to be used and I would definitely

609
00:25:54,910 --> 00:25:59,830
look into that so and with that I'm

610
00:25:59,830 --> 00:26:02,500
almost almost finished but I would like

611
00:26:02,500 --> 00:26:05,290
to finish in this talk with two book

612
00:26:05,290 --> 00:26:07,120
recommendations so if you're interested

613
00:26:07,120 --> 00:26:10,300
in in this topic I can highly advise the

614
00:26:10,300 --> 00:26:12,670
book high performance browser networking

615
00:26:12,670 --> 00:26:15,160
by egoic this one is even available for

616
00:26:15,160 --> 00:26:17,470
free as a progressive web app on the

617
00:26:17,470 --> 00:26:21,070
internet so if we do google it and and

618
00:26:21,070 --> 00:26:23,320
read it maybe on your way home and then

619
00:26:23,320 --> 00:26:25,480
there's also an in fact basically the

620
00:26:25,480 --> 00:26:27,730
first five to ten minutes in this talk

621
00:26:27,730 --> 00:26:30,340
we're out of this book and then there's

622
00:26:30,340 --> 00:26:32,620
also HTTP the definite guide which are

623
00:26:32,620 --> 00:26:34,780
also enjoyed reading couple of years ago

624
00:26:34,780 --> 00:26:38,590
so and with that I'd like to thank you

625
00:26:38,590 --> 00:26:42,290
for listening and see you around

626
00:26:42,290 --> 00:26:44,230
thank you

