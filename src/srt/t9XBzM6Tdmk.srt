1
00:00:00,000 --> 00:00:04,190

[Applause]

2
00:00:04,190 --> 00:00:08,490
okayyyy so yeah my name is Ruben sauce

3
00:00:08,490 --> 00:00:10,290
better and here today to speak about

4
00:00:10,290 --> 00:00:13,559
fantasy machines which for those of you

5
00:00:13,559 --> 00:00:15,179
they've been here on Wednesday you

6
00:00:15,179 --> 00:00:18,000
probably been on David talk about fancy

7
00:00:18,000 --> 00:00:20,250
machines it is related it's not the same

8
00:00:20,250 --> 00:00:22,560
hopefully at the end of my talk you will

9
00:00:22,560 --> 00:00:24,900
have more insight and feel empowered

10
00:00:24,900 --> 00:00:27,630
enough to try for your own before

11
00:00:27,630 --> 00:00:29,929
starting you see we have this picture

12
00:00:29,929 --> 00:00:32,610
and at the end I'm gonna ask you if any

13
00:00:32,610 --> 00:00:35,460
on the audience know what it is don't

14
00:00:35,460 --> 00:00:36,690
answer now it's gonna be at the end

15
00:00:36,690 --> 00:00:38,309
because the talk is going to give you

16
00:00:38,309 --> 00:00:41,850
some clues about it I'm a JavaScript

17
00:00:41,850 --> 00:00:43,379
hacker I'm working as an independent

18
00:00:43,379 --> 00:00:45,149
contractor so if you need something just

19
00:00:45,149 --> 00:00:47,730
pick me out and I love capybaras is

20
00:00:47,730 --> 00:00:50,520
majestic and excellent friendly shaped

21
00:00:50,520 --> 00:00:52,680
animal if you don't know about him just

22
00:00:52,680 --> 00:00:54,600
please check out I always find someone

23
00:00:54,600 --> 00:00:56,129
in the audience that agree with me with

24
00:00:56,129 --> 00:00:58,710
it animal is the biggest rodent in the

25
00:00:58,710 --> 00:01:01,469
world and in Venezuela they eat eat it

26
00:01:01,469 --> 00:01:04,799
and another thing yeah another thing is

27
00:01:04,799 --> 00:01:06,210
that I just want to share with you this

28
00:01:06,210 --> 00:01:07,530
special moment because you see this

29
00:01:07,530 --> 00:01:09,689
t-shirt this t-shirt is from the 2015

30
00:01:09,689 --> 00:01:11,430
edition of the Jesus come for the base

31
00:01:11,430 --> 00:01:14,130
it was my first conference ever also my

32
00:01:14,130 --> 00:01:15,659
first business travel outside of my

33
00:01:15,659 --> 00:01:17,970
country and I remember being there it

34
00:01:17,970 --> 00:01:20,460
was super exciting it was when I was

35
00:01:20,460 --> 00:01:24,390
like starting ending being a junior

36
00:01:24,390 --> 00:01:26,009
developer and it was mind-blowing

37
00:01:26,009 --> 00:01:27,930
experience and I remember being there

38
00:01:27,930 --> 00:01:31,799
I'm feeling like man if ever I need I

39
00:01:31,799 --> 00:01:34,350
have the sense to give back something to

40
00:01:34,350 --> 00:01:35,850
a community I went to speak in that

41
00:01:35,850 --> 00:01:38,130
conference so I'm here four years later

42
00:01:38,130 --> 00:01:43,490
dreama chief thank you that's it no so

43
00:01:43,490 --> 00:01:45,750
thank you the organizer to the

44
00:01:45,750 --> 00:01:47,100
organization for that

45
00:01:47,100 --> 00:01:49,619
that's definitely well anyway going to a

46
00:01:49,619 --> 00:01:52,740
topic actually David he was hearing

47
00:01:52,740 --> 00:01:56,460
Wednesday he said this develop user

48
00:01:56,460 --> 00:01:58,590
interfaces is not easy in the reactor

49
00:01:58,590 --> 00:02:02,340
alley in 2017 and it was I think this is

50
00:02:02,340 --> 00:02:04,920
was this this thought of him was like

51
00:02:04,920 --> 00:02:07,020
kind of the beginning or the find steam

52
00:02:07,020 --> 00:02:09,300
machines coming back to the UI scene and

53
00:02:09,300 --> 00:02:11,280
fronting and so on and there is

54
00:02:11,280 --> 00:02:12,890
explanation for that first

55
00:02:12,890 --> 00:02:16,580
machines is a concept that started like

56
00:02:16,580 --> 00:02:18,950
in the late 60s so it's super all

57
00:02:18,950 --> 00:02:23,120
actually probably you hear about finding

58
00:02:23,120 --> 00:02:24,800
machines when you were studying software

59
00:02:24,800 --> 00:02:26,480
engineer in the university or something

60
00:02:26,480 --> 00:02:29,030
like that it's very useful if you want

61
00:02:29,030 --> 00:02:30,860
to reason about logics and they kind of

62
00:02:30,860 --> 00:02:33,320
stuff but probably you never use it in

63
00:02:33,320 --> 00:02:36,290
production like never even I don't know

64
00:02:36,290 --> 00:02:39,260
in your hobby or pet project and that's

65
00:02:39,260 --> 00:02:40,970
basically because for so long we were

66
00:02:40,970 --> 00:02:42,739
doing front-ends that they were let's

67
00:02:42,739 --> 00:02:46,459
call it simple right it was a static

68
00:02:46,459 --> 00:02:49,220
HTML with some CSS or then we have I

69
00:02:49,220 --> 00:02:51,980
don't know PHP with tweaked rendering

70
00:02:51,980 --> 00:02:54,500
engine templates whatever you get it you

71
00:02:54,500 --> 00:02:56,090
know what it means speaking about but

72
00:02:56,090 --> 00:02:59,150
now we're doing very complex foreign

73
00:02:59,150 --> 00:03:01,280
applications and these run applications

74
00:03:01,280 --> 00:03:03,170
as you know for example yesterday's

75
00:03:03,170 --> 00:03:06,890
explained soorma and Jake well you have

76
00:03:06,890 --> 00:03:09,019
web packs and roll ups and plugins and

77
00:03:09,019 --> 00:03:10,580
configurations and performance and

78
00:03:10,580 --> 00:03:12,650
latencies and different assets and

79
00:03:12,650 --> 00:03:15,200
caching is super complex we're reaching

80
00:03:15,200 --> 00:03:17,450
upon a point where we're moving a lot of

81
00:03:17,450 --> 00:03:19,850
business logics and responsibilities to

82
00:03:19,850 --> 00:03:22,040
a foreign applications and what does the

83
00:03:22,040 --> 00:03:23,980
mean is that we're generating a lot of

84
00:03:23,980 --> 00:03:26,959
box rest conditions and the sorry side

85
00:03:26,959 --> 00:03:31,760
effects and so on and we find that our

86
00:03:31,760 --> 00:03:34,180
UI it's maybe are not perfect our using

87
00:03:34,180 --> 00:03:37,400
our users follow our instructions

88
00:03:37,400 --> 00:03:41,420
blindly and this generates even even

89
00:03:41,420 --> 00:03:46,040
more VAX we have side effects and rest

90
00:03:46,040 --> 00:03:47,630
condition for example this is a race

91
00:03:47,630 --> 00:03:50,510
condition against the disk like do you

92
00:03:50,510 --> 00:03:52,579
think if I press cancel button this is

93
00:03:52,579 --> 00:03:55,040
going to stop no it won't stop never

94
00:03:55,040 --> 00:03:57,739
like this is the cancel button is just

95
00:03:57,739 --> 00:04:00,290
like a psychology thingy so you can

96
00:04:00,290 --> 00:04:02,299
smash it and release your anger it's

97
00:04:02,299 --> 00:04:05,510
only for that oh that one which is also

98
00:04:05,510 --> 00:04:07,280
I hate that one like personally I

99
00:04:07,280 --> 00:04:09,320
 hate this one this is also like

100
00:04:09,320 --> 00:04:10,880
hate this one this is also like
when you want to share something on an

101
00:04:10,880 --> 00:04:13,730
Android device and then it suddenly pops

102
00:04:13,730 --> 00:04:16,220
up your your recent chats and then you

103
00:04:16,220 --> 00:04:18,380
send a link to someone else I just hated

104
00:04:18,380 --> 00:04:21,709
this is also a race condition in this

105
00:04:21,709 --> 00:04:24,590
case against the network so the problem

106
00:04:24,590 --> 00:04:26,270
is that we're doing the fancy fur

107
00:04:26,270 --> 00:04:27,680
this is the first concert that we need

108
00:04:27,680 --> 00:04:29,270
to understand defensive programming is

109
00:04:29,270 --> 00:04:31,460
basically when what we're calling

110
00:04:31,460 --> 00:04:33,410
something we find an issue and then we

111
00:04:33,410 --> 00:04:35,720
straightaway try to fix that issue we've

112
00:04:35,720 --> 00:04:36,050
done

113
00:04:36,050 --> 00:04:38,210
as David said we don't plan ahead so

114
00:04:38,210 --> 00:04:40,370
let's see an example that probably all

115
00:04:40,370 --> 00:04:44,810
of you have experienced at some point in

116
00:04:44,810 --> 00:04:46,759
the past we're making a call

117
00:04:46,759 --> 00:04:49,819
this is react but don't don't really

118
00:04:49,819 --> 00:04:52,130
follow the the code it's just to

119
00:04:52,130 --> 00:04:54,770
exemplify so we're making a call to fix

120
00:04:54,770 --> 00:04:57,680
the user and then we render the name and

121
00:04:57,680 --> 00:05:00,860
then we also want at some point to have

122
00:05:00,860 --> 00:05:03,440
a lull instead right because I mean if I

123
00:05:03,440 --> 00:05:05,780
don't know network is slow we don't when

124
00:05:05,780 --> 00:05:07,580
the user to stay there turning on a

125
00:05:07,580 --> 00:05:10,759
blank screen and then came out so they

126
00:05:10,759 --> 00:05:13,789
Pio and say it's a but something can be

127
00:05:13,789 --> 00:05:15,770
read we need some error state and

128
00:05:15,770 --> 00:05:17,240
explain the user what happens and

129
00:05:17,240 --> 00:05:20,210
recover and make against the call so we

130
00:05:20,210 --> 00:05:22,400
start having these conditionals that

131
00:05:22,400 --> 00:05:24,800
render different things also different

132
00:05:24,800 --> 00:05:27,680
catches depending on what happens it's a

133
00:05:27,680 --> 00:05:29,599
long request so maybe we need to cancel

134
00:05:29,599 --> 00:05:32,240
at some points it has to be possible

135
00:05:32,240 --> 00:05:34,759
that you cancel so if you look closely

136
00:05:34,759 --> 00:05:37,130
while we're saying in this code like if

137
00:05:37,130 --> 00:05:41,560
you pay enough attention it's a shape

138
00:05:41,560 --> 00:05:46,580
okay and why why is a so this is

139
00:05:46,580 --> 00:05:48,500
this is really important because usually

140
00:05:48,500 --> 00:05:50,449
we start thinking about normalcy

141
00:05:50,449 --> 00:05:52,610
architecture if with you excitement on

142
00:05:52,610 --> 00:05:55,639
architecture this is not this won't

143
00:05:55,639 --> 00:05:58,789
happen or DDD or whatever is insourcing

144
00:05:58,789 --> 00:06:02,479
no no it's neither the technology like

145
00:06:02,479 --> 00:06:05,449
if you just react or angular or bu or

146
00:06:05,449 --> 00:06:08,659
circular even change technology is not

147
00:06:08,659 --> 00:06:11,030
related to that is neither the patterns

148
00:06:11,030 --> 00:06:13,340
I don't know if you are doing

149
00:06:13,340 --> 00:06:15,919
programming or not your code could be

150
00:06:15,919 --> 00:06:18,530
easier to understand or maintain but you

151
00:06:18,530 --> 00:06:20,509
are not addressing this kind of issues

152
00:06:20,509 --> 00:06:24,650
and actually that's why you are feeling

153
00:06:24,650 --> 00:06:29,050
that situation over and over for always

154
00:06:29,050 --> 00:06:31,370
right it doesn't matter the project you

155
00:06:31,370 --> 00:06:33,469
are the company you are working with or

156
00:06:33,469 --> 00:06:35,330
the team you are working with you are

157
00:06:35,330 --> 00:06:38,599
running to the situation every time the

158
00:06:38,599 --> 00:06:39,919
problem is the approach

159
00:06:39,919 --> 00:06:41,870
defensive programming is also known as

160
00:06:41,870 --> 00:06:44,750
bottom-up approach which is basically

161
00:06:44,750 --> 00:06:47,620
that we're facing one problem at a time

162
00:06:47,620 --> 00:06:51,319
every time the problem like reaches

163
00:06:51,319 --> 00:06:54,800
right so when we are doing bottom-up

164
00:06:54,800 --> 00:06:56,360
approaches is difficult for us to

165
00:06:56,360 --> 00:06:58,280
understand at the end what's the code is

166
00:06:58,280 --> 00:06:59,659
difficult to maintain is difficult to

167
00:06:59,659 --> 00:07:03,229
make changes there is out of its cases

168
00:07:03,229 --> 00:07:05,000
that we are not considering there is

169
00:07:05,000 --> 00:07:06,949
sort of mutation that we are starting to

170
00:07:06,949 --> 00:07:09,590
do it's really easy I'm prone to start

171
00:07:09,590 --> 00:07:11,569
doing some hacks around the code which

172
00:07:11,569 --> 00:07:14,779
is no good it's also difficult to test

173
00:07:14,779 --> 00:07:16,430
of course if you don't understand

174
00:07:16,430 --> 00:07:18,229
something it's going to be difficult to

175
00:07:18,229 --> 00:07:22,279
test also our code is not going to be

176
00:07:22,279 --> 00:07:23,930
pure most of the times because with

177
00:07:23,930 --> 00:07:27,469
those mutations well and we have these

178
00:07:27,469 --> 00:07:29,900
complex setups for testing I have seen

179
00:07:29,900 --> 00:07:32,000
projects small projects with ensign

180
00:07:32,000 --> 00:07:33,979
configurations longer than the actual

181
00:07:33,979 --> 00:07:35,870
project and I'm not joking this is

182
00:07:35,870 --> 00:07:38,389
something I've seen which is obviously a

183
00:07:38,389 --> 00:07:40,189
cough the smell is difficult in Haines

184
00:07:40,189 --> 00:07:43,940
obviously if you can test something it's

185
00:07:43,940 --> 00:07:45,949
also like dangerous thing hence you

186
00:07:45,949 --> 00:07:48,469
don't know if the testing is working it

187
00:07:48,469 --> 00:07:49,819
generates out of bugs and gonna make

188
00:07:49,819 --> 00:07:52,550
this I mean like a lot a lot of facts

189
00:07:52,550 --> 00:07:55,639
right we don't want a spaghetti code in

190
00:07:55,639 --> 00:07:57,440
case you don't notice we have a lot of

191
00:07:57,440 --> 00:08:00,490
posters around this venue that say so

192
00:08:00,490 --> 00:08:02,870
and refactoring is also going to be very

193
00:08:02,870 --> 00:08:04,789
difficult because we don't know what

194
00:08:04,789 --> 00:08:07,940
exactly we have to change so at the end

195
00:08:07,940 --> 00:08:09,259
you are gonna feel like this pooch

196
00:08:09,259 --> 00:08:11,509
reminder that you are just fixing one

197
00:08:11,509 --> 00:08:13,339
fire after the other and you're more

198
00:08:13,339 --> 00:08:16,330
like a fireman rather than a developer

199
00:08:16,330 --> 00:08:18,939
so what's the solution

200
00:08:18,939 --> 00:08:21,319
so the top-down approach which actually

201
00:08:21,319 --> 00:08:24,500
makes a lot of sense um the top-down

202
00:08:24,500 --> 00:08:26,569
approach is basically that you have this

203
00:08:26,569 --> 00:08:29,750
abstract concept and bu of your product

204
00:08:29,750 --> 00:08:32,449
and every time you have a problem you go

205
00:08:32,449 --> 00:08:36,169
back to that abstract definition and

206
00:08:36,169 --> 00:08:38,870
then analyze it from then and later on

207
00:08:38,870 --> 00:08:42,099
you implement it you stop reacting

208
00:08:42,099 --> 00:08:46,459
that's a pun and and basically how does

209
00:08:46,459 --> 00:08:47,899
this looks because so far everything is

210
00:08:47,899 --> 00:08:49,430
super abstract it looks like that it's a

211
00:08:49,430 --> 00:08:51,670
user flow or a diagram or whatever so

212
00:08:51,670 --> 00:08:53,640
this is a

213
00:08:53,640 --> 00:08:57,150
seen on a blog or whatever what you have

214
00:08:57,150 --> 00:08:59,130
like different states and transitions

215
00:08:59,130 --> 00:09:01,530
and you can be in the landing page and

216
00:09:01,530 --> 00:09:03,990
then you move to block but please and

217
00:09:03,990 --> 00:09:05,430
then from that you can click go to a

218
00:09:05,430 --> 00:09:07,320
blog whatever and then for example is

219
00:09:07,320 --> 00:09:09,060
interesting that the definition here

220
00:09:09,060 --> 00:09:11,880
that at the very right have the contact

221
00:09:11,880 --> 00:09:13,830
form and you see two are responding the

222
00:09:13,830 --> 00:09:15,390
contact form that means that there is

223
00:09:15,390 --> 00:09:18,360
only two ways to reach that page this is

224
00:09:18,360 --> 00:09:21,320
what we are doing when we reason about

225
00:09:21,320 --> 00:09:24,810
with a top-down approach from the

226
00:09:24,810 --> 00:09:29,610
abstract point of view so if this is so

227
00:09:29,610 --> 00:09:32,520
this is important because this is a

228
00:09:32,520 --> 00:09:34,860
common language for humans we can

229
00:09:34,860 --> 00:09:37,380
understand this as a developer's product

230
00:09:37,380 --> 00:09:39,840
owners can understand these designers

231
00:09:39,840 --> 00:09:41,730
can understand this our stakeholders can

232
00:09:41,730 --> 00:09:43,830
understand this so if this is a human

233
00:09:43,830 --> 00:09:45,780
language and we as developers basically

234
00:09:45,780 --> 00:09:48,210
what we do is translate human language

235
00:09:48,210 --> 00:09:50,460
the technical language of any kind then

236
00:09:50,460 --> 00:09:52,460
find some machines technical language

237
00:09:52,460 --> 00:09:55,170
first the machine is basically the

238
00:09:55,170 --> 00:09:58,350
easiest and more logic implementation of

239
00:09:58,350 --> 00:10:01,080
his user flows so what defines the

240
00:10:01,080 --> 00:10:03,420
machine super easy it's deterministic

241
00:10:03,420 --> 00:10:05,130
finds a machine or accept 30 minutes

242
00:10:05,130 --> 00:10:06,750
find the state machine is akin to pull

243
00:10:06,750 --> 00:10:10,230
not really this was me the first time as

244
00:10:10,230 --> 00:10:13,080
the definition I first sometimes I read

245
00:10:13,080 --> 00:10:14,400
some things and he could understand

246
00:10:14,400 --> 00:10:16,950
anything so I asked one of my friends

247
00:10:16,950 --> 00:10:20,190
who's math scientist to give me a hand

248
00:10:20,190 --> 00:10:23,460
and basically I think it's easier if we

249
00:10:23,460 --> 00:10:25,050
reason about in a language though I

250
00:10:25,050 --> 00:10:26,730
guess we are understanding here which is

251
00:10:26,730 --> 00:10:29,280
JavaScript so Sigma is the input

252
00:10:29,280 --> 00:10:30,990
alphabet is basically a dictionary it

253
00:10:30,990 --> 00:10:33,150
could be representing like that it's an

254
00:10:33,150 --> 00:10:37,220
object with keys we had seen this before

255
00:10:37,220 --> 00:10:42,270
the s is early stage the this is super

256
00:10:42,270 --> 00:10:43,890
nos that you can represent that like

257
00:10:43,890 --> 00:10:45,660
whatever you want in this case is an

258
00:10:45,660 --> 00:10:48,270
object where the keys matches the

259
00:10:48,270 --> 00:10:50,130
dictionary and then inside you have an

260
00:10:50,130 --> 00:10:51,990
object with whatever you want it doesn't

261
00:10:51,990 --> 00:10:53,850
matter what's inside is your state

262
00:10:53,850 --> 00:10:56,370
definition so this will depend on your

263
00:10:56,370 --> 00:10:58,230
business logics and your project

264
00:10:58,230 --> 00:11:01,490
whatsoever S sub 0 is the initial state

265
00:11:01,490 --> 00:11:04,680
okay easy the only important thing is

266
00:11:04,680 --> 00:11:06,460
that it has to be part of the States

267
00:11:06,460 --> 00:11:09,430
obviously and then Delta is a transition

268
00:11:09,430 --> 00:11:10,900
is how you move from one state to the

269
00:11:10,900 --> 00:11:13,030
other in this example for example the

270
00:11:13,030 --> 00:11:16,960
state is defined which means that one

271
00:11:16,960 --> 00:11:19,780
state only half a transition but another

272
00:11:19,780 --> 00:11:21,460
state there is no multiple states

273
00:11:21,460 --> 00:11:23,350
otherwise we will be doing something

274
00:11:23,350 --> 00:11:25,840
like machine from the current state I

275
00:11:25,840 --> 00:11:28,120
give you an action and then you give me

276
00:11:28,120 --> 00:11:30,580
back what's going to be the next day and

277
00:11:30,580 --> 00:11:32,740
there is a fine state machine that's it

278
00:11:32,740 --> 00:11:36,670
so the thing on the top is our like very

279
00:11:36,670 --> 00:11:41,350
easy simple short fine state machine

280
00:11:41,350 --> 00:11:43,240
this will be a turnstile like in the

281
00:11:43,240 --> 00:11:45,190
underground right you know we have this

282
00:11:45,190 --> 00:11:46,500
machine that moves from lock to unlock

283
00:11:46,500 --> 00:11:48,580
initially it's locked because we don't

284
00:11:48,580 --> 00:11:52,660
want the earthly word go for free and

285
00:11:52,660 --> 00:11:54,310
then we have the transition to move from

286
00:11:54,310 --> 00:11:55,960
one state to the other this is in these

287
00:11:55,960 --> 00:11:58,210
cases in JavaScript it's an object in

288
00:11:58,210 --> 00:12:00,130
Tepes clip could be a rapport or so in

289
00:12:00,130 --> 00:12:02,650
c-sharp or in Python it's it's called a

290
00:12:02,650 --> 00:12:06,580
tuple and in PHP in its be the call for

291
00:12:06,580 --> 00:12:07,750
help

292
00:12:07,750 --> 00:12:11,800
so way easier to reason about okay so so

293
00:12:11,800 --> 00:12:13,840
far we understand more or less the math

294
00:12:13,840 --> 00:12:16,480
concepts how does this looks in software

295
00:12:16,480 --> 00:12:19,240
engineering so let's see the anatomy of

296
00:12:19,240 --> 00:12:22,060
our example of a fetch request

297
00:12:22,060 --> 00:12:24,190
so usually you represent the ladies

298
00:12:24,190 --> 00:12:25,990
fancy machines you have initial state

299
00:12:25,990 --> 00:12:28,690
most of the times it's either my friends

300
00:12:28,690 --> 00:12:31,180
machine is doing nothing I have

301
00:12:31,180 --> 00:12:34,440
different states so we so far we see as

302
00:12:34,440 --> 00:12:36,790
subservient Ischl state and all these

303
00:12:36,790 --> 00:12:40,600
states yes we have some events or

304
00:12:40,600 --> 00:12:42,550
actions to move around the different

305
00:12:42,550 --> 00:12:44,650
states and then we have the two stations

306
00:12:44,650 --> 00:12:47,380
right you can be a needle after the

307
00:12:47,380 --> 00:12:49,600
action fetch will move to fetching and

308
00:12:49,600 --> 00:12:51,460
then there's two different actions and

309
00:12:51,460 --> 00:12:53,110
may happen and we end up in two

310
00:12:53,110 --> 00:12:55,000
different states this is something that

311
00:12:55,000 --> 00:12:58,480
can be like improve and it could be like

312
00:12:58,480 --> 00:13:00,430
super complex and then you move to state

313
00:13:00,430 --> 00:13:03,250
charts words and the kind of stuff that

314
00:13:03,250 --> 00:13:04,690
we are not going to look at that in this

315
00:13:04,690 --> 00:13:06,820
topic because I only have 25 minutes but

316
00:13:06,820 --> 00:13:10,630
definitely check it out later on that's

317
00:13:10,630 --> 00:13:12,610
it we know how are the mathematical

318
00:13:12,610 --> 00:13:14,770
definitions on the origin we know how

319
00:13:14,770 --> 00:13:16,930
this looks like for us so for engineers

320
00:13:16,930 --> 00:13:19,010
the only thing that we are missing

321
00:13:19,010 --> 00:13:20,990
are the three key features of feinstein

322
00:13:20,990 --> 00:13:23,440
machine first of all is deterministic

323
00:13:23,440 --> 00:13:25,580
which basically means that it's

324
00:13:25,580 --> 00:13:28,100
predictable and this is one of the most

325
00:13:28,100 --> 00:13:29,540
important features of the finite state

326
00:13:29,540 --> 00:13:32,810
machines and what gives you the benefit

327
00:13:32,810 --> 00:13:35,690
of being bug free this basically means

328
00:13:35,690 --> 00:13:38,240
that even the current state and an

329
00:13:38,240 --> 00:13:41,450
action I can predict what's going to be

330
00:13:41,450 --> 00:13:43,370
the next state and this is super

331
00:13:43,370 --> 00:13:47,180
powerful because you won't find rabbit

332
00:13:47,180 --> 00:13:49,340
holes or dead ends in your products

333
00:13:49,340 --> 00:13:50,900
anymore since everything is going to be

334
00:13:50,900 --> 00:13:54,140
defined is that how to get there is the

335
00:13:54,140 --> 00:13:56,860
what's coming next is you can put your

336
00:13:56,860 --> 00:13:59,420
hoops not as in react loops just like

337
00:13:59,420 --> 00:14:02,330
normal hoops and actions and data values

338
00:14:02,330 --> 00:14:04,040
everything goes because it's

339
00:14:04,040 --> 00:14:05,290
deterministic

340
00:14:05,290 --> 00:14:07,850
it's an automata which means it's a

341
00:14:07,850 --> 00:14:11,390
predetermined sequence so another way of

342
00:14:11,390 --> 00:14:13,610
written about this always happens in the

343
00:14:13,610 --> 00:14:16,190
same single way always acts in the same

344
00:14:16,190 --> 00:14:18,110
way let's say for example that the

345
00:14:18,110 --> 00:14:20,060
easiest example is a semaphore right in

346
00:14:20,060 --> 00:14:21,890
like in the streets you have this to the

347
00:14:21,890 --> 00:14:24,290
right for the cars and pedestrians it

348
00:14:24,290 --> 00:14:26,570
goes from red to green from green to

349
00:14:26,570 --> 00:14:29,180
yellow and then integrate I think and we

350
00:14:29,180 --> 00:14:31,700
want this to be always in that way we

351
00:14:31,700 --> 00:14:34,550
want this to be an isolated system not

352
00:14:34,550 --> 00:14:36,110
depending anything else city lights

353
00:14:36,110 --> 00:14:38,030
don't depend usually on the cars or

354
00:14:38,030 --> 00:14:40,610
pedestrians or whatsoever and we want

355
00:14:40,610 --> 00:14:43,220
this to work always in the same way

356
00:14:43,220 --> 00:14:45,560
because otherwise people will die this

357
00:14:45,560 --> 00:14:47,320
is bad we don't want people that

358
00:14:47,320 --> 00:14:51,610
basically and finally it's fine it and

359
00:14:51,610 --> 00:14:53,840
maybe it's not the most important thing

360
00:14:53,840 --> 00:14:56,120
is actually pretty obvious but this is

361
00:14:56,120 --> 00:14:57,440
important because we also have to

362
00:14:57,440 --> 00:15:00,500
infinity machines which are completely

363
00:15:00,500 --> 00:15:02,120
different and it doesn't it's a

364
00:15:02,120 --> 00:15:04,910
different topic but this is what makes

365
00:15:04,910 --> 00:15:07,280
possible that the finest the machines

366
00:15:07,280 --> 00:15:10,280
are this common language between non

367
00:15:10,280 --> 00:15:12,050
technical and technical people because

368
00:15:12,050 --> 00:15:14,360
we can do user flows and everything else

369
00:15:14,360 --> 00:15:15,490
that we saw before

370
00:15:15,490 --> 00:15:18,560
so basically science the machine is a

371
00:15:18,560 --> 00:15:20,210
pure assistant I can only be in one of a

372
00:15:20,210 --> 00:15:22,190
set of predefined stage this is me right

373
00:15:22,190 --> 00:15:23,750
now actually it's me 10 months ago

374
00:15:23,750 --> 00:15:25,580
because that was the first time I said

375
00:15:25,580 --> 00:15:30,380
but it works there's all types of things

376
00:15:30,380 --> 00:15:32,510
I see a lot of

377
00:15:32,510 --> 00:15:34,970
poker faces but it's fine because they

378
00:15:34,970 --> 00:15:36,019
think I'm going to be the first speaker

379
00:15:36,019 --> 00:15:39,199
doing some demo because I believe I'd

380
00:15:39,199 --> 00:15:42,649
like to live in danger so basically you

381
00:15:42,649 --> 00:15:49,279
can see my demo now yes so this is the

382
00:15:49,279 --> 00:15:50,959
application is very simple it's this

383
00:15:50,959 --> 00:15:52,399
example that I show you before the

384
00:15:52,399 --> 00:15:54,709
fetching things we fetch for users and

385
00:15:54,709 --> 00:15:57,829
then we're under the name right and now

386
00:15:57,829 --> 00:16:00,380
it's not working which is important I'm

387
00:16:00,380 --> 00:16:02,120
gonna spell you why but you can see that

388
00:16:02,120 --> 00:16:04,070
it start with the state IDO when they

389
00:16:04,070 --> 00:16:06,230
want to fetch something you moves to

390
00:16:06,230 --> 00:16:07,820
fetching and then you start searching

391
00:16:07,820 --> 00:16:13,070
and for example the fetching state

392
00:16:13,070 --> 00:16:16,490
doesn't have an action for fetch right

393
00:16:16,490 --> 00:16:20,240
so this is reflected in the UI that you

394
00:16:20,240 --> 00:16:23,240
cannot press the button again and this

395
00:16:23,240 --> 00:16:24,740
is when you start seeing the benefits

396
00:16:24,740 --> 00:16:29,360
and the back free feature of the file is

397
00:16:29,360 --> 00:16:32,959
a machine from that point if you want to

398
00:16:32,959 --> 00:16:35,810
know more move to the David talk of

399
00:16:35,810 --> 00:16:38,810
honor of Wednesday because his was about

400
00:16:38,810 --> 00:16:39,230
it

401
00:16:39,230 --> 00:16:45,840
and how this does how this looks

402
00:16:45,850 --> 00:16:49,990
can all you read it like in the end I

403
00:16:49,990 --> 00:16:55,250
see positive feedback oh so basically

404
00:16:55,250 --> 00:17:00,970
our machine is this thing here that's it

405
00:17:00,970 --> 00:17:03,920
it's a simple JavaScript object as I

406
00:17:03,920 --> 00:17:05,569
told you there is nothing else in this

407
00:17:05,569 --> 00:17:08,240
case I'm not using any library or

408
00:17:08,240 --> 00:17:08,839
nothing like that

409
00:17:08,839 --> 00:17:10,520
I'm gonna share with you the code later

410
00:17:10,520 --> 00:17:13,280
on so you can hide it around but I

411
00:17:13,280 --> 00:17:15,169
wanted to implement something like very

412
00:17:15,169 --> 00:17:17,600
nice and simple just using vanilla

413
00:17:17,600 --> 00:17:20,270
JavaScript and react for rendering so

414
00:17:20,270 --> 00:17:22,040
you can get all the concepts and don't

415
00:17:22,040 --> 00:17:24,530
get viruses but any library but this

416
00:17:24,530 --> 00:17:26,150
probably is something that I won't use

417
00:17:26,150 --> 00:17:27,709
for production applications but the

418
00:17:27,709 --> 00:17:29,900
concept of the machine being something

419
00:17:29,900 --> 00:17:31,760
completely isolated and independent is

420
00:17:31,760 --> 00:17:34,549
important so my machine has an initial

421
00:17:34,549 --> 00:17:37,490
state has some states if you are in ego

422
00:17:37,490 --> 00:17:40,640
you can move to fetching you get all all

423
00:17:40,640 --> 00:17:44,059
all the things and then here's the

424
00:17:44,059 --> 00:17:45,250
rendering right

425
00:17:45,250 --> 00:17:46,780
I have a normal reactor plication

426
00:17:46,780 --> 00:17:49,750
there's the thing as my main my takes

427
00:17:49,750 --> 00:17:51,340
render from machine this is what the

428
00:17:51,340 --> 00:17:53,110
title like but bear with me it works and

429
00:17:53,110 --> 00:17:55,419
I've render different components

430
00:17:55,419 --> 00:17:56,380
depending on the stage you are

431
00:17:56,380 --> 00:17:58,210
everything is pretty obvious actually

432
00:17:58,210 --> 00:17:59,770
it's super simple right

433
00:17:59,770 --> 00:18:02,049
why this doesn't work in because we're

434
00:18:02,049 --> 00:18:04,510
still missing one concept which is which

435
00:18:04,510 --> 00:18:07,299
are the Commons the Commons is a thing

436
00:18:07,299 --> 00:18:12,280
or concept of work to connect your is

437
00:18:12,280 --> 00:18:15,429
like the look for you finds the machine

438
00:18:15,429 --> 00:18:16,990
like you have to defines the machine

439
00:18:16,990 --> 00:18:18,520
which contains your transition business

440
00:18:18,520 --> 00:18:21,100
logics and so on and so forth maybe your

441
00:18:21,100 --> 00:18:22,929
data whatever and then you want to plug

442
00:18:22,929 --> 00:18:24,909
this to something like for example food

443
00:18:24,909 --> 00:18:28,240
react so you can do whatever you want

444
00:18:28,240 --> 00:18:29,890
with your friends the machine otherwise

445
00:18:29,890 --> 00:18:32,710
is just a bunch of declarations the

446
00:18:32,710 --> 00:18:35,049
commands is this thing that connects you

447
00:18:35,049 --> 00:18:38,230
frenched the machine with the for

448
00:18:38,230 --> 00:18:41,650
example the rendering service and it

449
00:18:41,650 --> 00:18:43,480
also the wondered resistor the side

450
00:18:43,480 --> 00:18:45,429
effects so the side effects is the

451
00:18:45,429 --> 00:18:47,770
actually the the most important thing

452
00:18:47,770 --> 00:18:49,059
and the most complex things to change

453
00:18:49,059 --> 00:18:51,309
the machines because you probably have

454
00:18:51,309 --> 00:18:53,470
this semaphore as we mentioned before

455
00:18:53,470 --> 00:18:54,789
but the semaphore is doing nothing

456
00:18:54,789 --> 00:18:57,010
that's why it's so easy but actually now

457
00:18:57,010 --> 00:18:59,020
we have an application that I defined

458
00:18:59,020 --> 00:19:00,460
that they want to move to wheedle to

459
00:19:00,460 --> 00:19:02,260
fetching and then to success or failure

460
00:19:02,260 --> 00:19:04,960
but they want to do something when this

461
00:19:04,960 --> 00:19:07,120
is doing fetching in this case it wants

462
00:19:07,120 --> 00:19:08,470
to fetch the user this is how you

463
00:19:08,470 --> 00:19:11,260
connect you finds the machine when the

464
00:19:11,260 --> 00:19:13,330
action is on fetching what's the action

465
00:19:13,330 --> 00:19:17,020
or wait is this action we're tweaking

466
00:19:17,020 --> 00:19:19,049
the action here so it's in my definition

467
00:19:19,049 --> 00:19:21,220
that I say when you're in the state

468
00:19:21,220 --> 00:19:24,630
fetching trigger the action fetching

469
00:19:24,630 --> 00:19:27,159
difficult aiming and in here I'm

470
00:19:27,159 --> 00:19:30,520
registering okay so in this case when

471
00:19:30,520 --> 00:19:33,970
you listen to the fetching action do

472
00:19:33,970 --> 00:19:36,370
this side effect and if you notice we

473
00:19:36,370 --> 00:19:38,289
are fetching and then we are also doing

474
00:19:38,289 --> 00:19:40,630
the transition here to move to the next

475
00:19:40,630 --> 00:19:45,130
one okay this is this is how you connect

476
00:19:45,130 --> 00:19:48,600
the parts so if we go back to the demo

477
00:19:48,600 --> 00:19:51,280
hopefully no one no one is breaking my

478
00:19:51,280 --> 00:19:54,789
Wi-Fi yeah it works cool

479
00:19:54,789 --> 00:19:57,490
so please see and the cool part of these

480
00:19:57,490 --> 00:19:58,669
is that you

481
00:19:58,669 --> 00:20:00,440
cannot break it it doesn't matter if you

482
00:20:00,440 --> 00:20:02,330
click licked like a madman here you

483
00:20:02,330 --> 00:20:04,669
cannot break it because every state has

484
00:20:04,669 --> 00:20:06,889
its own actions and different

485
00:20:06,889 --> 00:20:09,320
propagations and so on so hopefully it's

486
00:20:09,320 --> 00:20:18,230
clear what we see now yes the commands

487
00:20:18,230 --> 00:20:20,299
which are the side effects manager which

488
00:20:20,299 --> 00:20:21,739
is kind of the most important part and

489
00:20:21,739 --> 00:20:24,529
actually if you feel like you like what

490
00:20:24,529 --> 00:20:26,869
I'm telling you today and you go outside

491
00:20:26,869 --> 00:20:28,909
to the while and look for some libraries

492
00:20:28,909 --> 00:20:30,649
you will notice that most of the

493
00:20:30,649 --> 00:20:32,239
libraries basically focus on that part

494
00:20:32,239 --> 00:20:34,519
because it's the important one so well

495
00:20:34,519 --> 00:20:37,039
I'm just sorry that's that's like that's

496
00:20:37,039 --> 00:20:38,720
important thing what's the cool thing

497
00:20:38,720 --> 00:20:41,149
that we saw so far is that we don't have

498
00:20:41,149 --> 00:20:43,220
conditions remember our example and your

499
00:20:43,220 --> 00:20:44,749
example in the render for example we

500
00:20:44,749 --> 00:20:46,909
have this if the state is earlier than

501
00:20:46,909 --> 00:20:50,090
rendered these otherwise vendor that if

502
00:20:50,090 --> 00:20:54,139
I'm in a state fetching and you press

503
00:20:54,139 --> 00:20:56,570
cancel then change the state and go back

504
00:20:56,570 --> 00:20:58,429
those are all the conditions that will

505
00:20:58,429 --> 00:21:00,379
generate bugs in your application but

506
00:21:00,379 --> 00:21:01,700
when you're working with fancy machines

507
00:21:01,700 --> 00:21:03,889
you do not have conditions are old what

508
00:21:03,889 --> 00:21:06,379
we have is the for example in my

509
00:21:06,379 --> 00:21:08,210
implementation is a switch case which

510
00:21:08,210 --> 00:21:11,179
are not on well it's conditional that is

511
00:21:11,179 --> 00:21:14,539
not I don't remember the name in flicks

512
00:21:14,539 --> 00:21:16,159
operator I think it's an it wherever you

513
00:21:16,159 --> 00:21:17,899
get it will have the conditions like

514
00:21:17,899 --> 00:21:20,149
usually like an even an LS and depending

515
00:21:20,149 --> 00:21:22,909
on that do so Yallah Yallah Yallah so

516
00:21:22,909 --> 00:21:24,649
you can have freeze conditions also

517
00:21:24,649 --> 00:21:26,179
remember the first examples and the face

518
00:21:26,179 --> 00:21:28,009
the first gifts you don't run into the

519
00:21:28,009 --> 00:21:31,249
kind of issues let's see also what we

520
00:21:31,249 --> 00:21:32,989
have if you have a find a steam machine

521
00:21:32,989 --> 00:21:36,769
like this one it's a bit clumsy to move

522
00:21:36,769 --> 00:21:41,210
little silos my cursor now here it is so

523
00:21:41,210 --> 00:21:44,419
what we have also see the rendering part

524
00:21:44,419 --> 00:21:48,109
see thus those components right loading

525
00:21:48,109 --> 00:21:50,779
user error main text everything and

526
00:21:50,779 --> 00:21:54,139
getting them from here and this

527
00:21:54,139 --> 00:21:56,239
component is imported from components

528
00:21:56,239 --> 00:22:00,429
and is that file look at that because

529
00:22:00,429 --> 00:22:02,690
basically here what we're doing is I'm

530
00:22:02,690 --> 00:22:04,639
in an environment called web this is

531
00:22:04,639 --> 00:22:06,769
just an example but I'm an environment

532
00:22:06,769 --> 00:22:09,320
called web so give me my web components

533
00:22:09,320 --> 00:22:12,050
since your business logic

534
00:22:12,050 --> 00:22:14,930
actions data everything is the couple

535
00:22:14,930 --> 00:22:17,000
this is that the world is the couple

536
00:22:17,000 --> 00:22:19,580
from everything else you can just plug

537
00:22:19,580 --> 00:22:21,410
and play whatever system you want here

538
00:22:21,410 --> 00:22:23,300
you will say all you will say also know

539
00:22:23,300 --> 00:22:26,750
this is react environment but maybe I

540
00:22:26,750 --> 00:22:28,880
want to react environment when you're in

541
00:22:28,880 --> 00:22:31,460
a very low latency a high latency

542
00:22:31,460 --> 00:22:33,110
network for example as some explained

543
00:22:33,110 --> 00:22:35,750
yesterday right why don't can you move

544
00:22:35,750 --> 00:22:37,850
to different components and the end it

545
00:22:37,850 --> 00:22:39,380
doesn't really matter your business

546
00:22:39,380 --> 00:22:41,510
logic is completely isolated it will be

547
00:22:41,510 --> 00:22:43,310
also a problem that we have the Metro a

548
00:22:43,310 --> 00:22:45,560
native community which is quite big and

549
00:22:45,560 --> 00:22:48,170
it's how to reduce components and logics

550
00:22:48,170 --> 00:22:50,300
well just user finds the Machine and

551
00:22:50,300 --> 00:22:52,490
here you say my environment is native so

552
00:22:52,490 --> 00:22:54,560
give me my react needed components this

553
00:22:54,560 --> 00:22:57,160
will work perfectly no issue at all

554
00:22:57,160 --> 00:23:00,200
another option is to look at that from

555
00:23:00,200 --> 00:23:02,750
the other way around and what does that

556
00:23:02,750 --> 00:23:04,910
mean is that you can have your for

557
00:23:04,910 --> 00:23:06,530
example react web application that

558
00:23:06,530 --> 00:23:08,900
fetches you find the same machine to a

559
00:23:08,900 --> 00:23:11,660
server don't loss did this JSON that

560
00:23:11,660 --> 00:23:13,490
defines a machine and then everything

561
00:23:13,490 --> 00:23:16,940
works so if you want to do and you go

562
00:23:16,940 --> 00:23:19,730
have like your let's say for example our

563
00:23:19,730 --> 00:23:21,590
registration for write all the

564
00:23:21,590 --> 00:23:22,520
components are the same

565
00:23:22,520 --> 00:23:24,440
everything is done by your design system

566
00:23:24,440 --> 00:23:26,510
for example and then it's just about

567
00:23:26,510 --> 00:23:29,510
even a pro turner will change a JSON

568
00:23:29,510 --> 00:23:31,430
file to define a different transition

569
00:23:31,430 --> 00:23:32,900
and this will be automatically applied

570
00:23:32,900 --> 00:23:36,170
to all your clients which is super

571
00:23:36,170 --> 00:23:40,160
powerful so what we saw right now is

572
00:23:40,160 --> 00:23:42,590
that another benefit it was just a

573
00:23:42,590 --> 00:23:45,950
couple which is super important thing

574
00:23:45,950 --> 00:23:48,050
and one of the main benefits I try this

575
00:23:48,050 --> 00:23:50,030
simple action in the company was working

576
00:23:50,030 --> 00:23:52,640
before for any different we are web and

577
00:23:52,640 --> 00:23:56,930
it works smoothly and then for me one of

578
00:23:56,930 --> 00:23:58,610
the things that I liked the most is the

579
00:23:58,610 --> 00:24:01,100
testing that's gonna show you this is

580
00:24:01,100 --> 00:24:06,230
best we have around a 70% coverage what

581
00:24:06,230 --> 00:24:08,140
yours you are not seeing it

582
00:24:08,140 --> 00:24:14,060
sorry sorry yes sorry this is the test

583
00:24:14,060 --> 00:24:18,440
ok there is around 70% coverage not 70

584
00:24:18,440 --> 00:24:20,810
but close to that but the cool part is

585
00:24:20,810 --> 00:24:22,700
not the coverage and that everything

586
00:24:22,700 --> 00:24:25,340
passes the cool part is that this

587
00:24:25,340 --> 00:24:26,660
all the testing that I have in my

588
00:24:26,660 --> 00:24:28,670
application nothing else there is

589
00:24:28,670 --> 00:24:30,890
absolutely no other file for testing

590
00:24:30,890 --> 00:24:33,950
because remember that I told you is

591
00:24:33,950 --> 00:24:36,200
deterministic and it's an automata that

592
00:24:36,200 --> 00:24:38,090
means that you can just in this case for

593
00:24:38,090 --> 00:24:40,310
example we are starting the our

594
00:24:40,310 --> 00:24:42,620
application in different states of our

595
00:24:42,620 --> 00:24:45,890
machine it's it important so it doesn't

596
00:24:45,890 --> 00:24:47,690
matter what happened before if I'm in

597
00:24:47,690 --> 00:24:49,490
the state failure

598
00:24:49,490 --> 00:24:53,660
I don't need B my application to pass

599
00:24:53,660 --> 00:24:56,120
through evil and fetching if I start on

600
00:24:56,120 --> 00:24:57,860
error it's going to be error every time

601
00:24:57,860 --> 00:25:00,500
so I can just do this well this is the

602
00:25:00,500 --> 00:25:02,090
Uniting limitation but I can just go

603
00:25:02,090 --> 00:25:04,460
through all the different states of my

604
00:25:04,460 --> 00:25:06,620
friend state machine and do a snapshot

605
00:25:06,620 --> 00:25:09,470
testing and you just don't believe me

606
00:25:09,470 --> 00:25:12,230
watch it by yourself this is a snapshot

607
00:25:12,230 --> 00:25:14,360
so basically what's doing is like you

608
00:25:14,360 --> 00:25:16,190
are in needle so there is like the let's

609
00:25:16,190 --> 00:25:18,080
do search you remember the application

610
00:25:18,080 --> 00:25:20,060
before we are in fetching the eyes the

611
00:25:20,060 --> 00:25:23,750
searching button success and you're so

612
00:25:23,750 --> 00:25:27,710
far and so forth so this this is the

613
00:25:27,710 --> 00:25:35,600
testing and finally the last part is

614
00:25:35,600 --> 00:25:38,180
that I can break my application whatever

615
00:25:38,180 --> 00:25:40,070
I want so that was the caution is it

616
00:25:40,070 --> 00:25:43,130
okay you seen this nice so I can break

617
00:25:43,130 --> 00:25:44,510
my application whatever they want like

618
00:25:44,510 --> 00:25:48,320
and like for example here I guess this

619
00:25:48,320 --> 00:25:52,910
works so good no so it's very difficult

620
00:25:52,910 --> 00:25:56,300
because there is a lot of latency okay

621
00:25:56,300 --> 00:25:58,550
this will work I guess if not excuse me

622
00:25:58,550 --> 00:26:04,400
so yeah it's broken why because we

623
00:26:04,400 --> 00:26:05,810
define in our application that is

624
00:26:05,810 --> 00:26:07,340
something goes wrong you just basically

625
00:26:07,340 --> 00:26:09,320
go to their or state it doesn't matter

626
00:26:09,320 --> 00:26:11,570
like how this happens so we are just

627
00:26:11,570 --> 00:26:13,400
throwing our I wrote like anyway

628
00:26:13,400 --> 00:26:15,380
anywhere and this will break it is it

629
00:26:15,380 --> 00:26:17,780
will go here for example this something

630
00:26:17,780 --> 00:26:19,490
you can connect very easily and very

631
00:26:19,490 --> 00:26:21,200
smoothly with the react bound ever

632
00:26:21,200 --> 00:26:23,450
boundaries and it will be super smooth

633
00:26:23,450 --> 00:26:28,100
the transitions so I don't know about

634
00:26:28,100 --> 00:26:31,310
you but first time I try was like this

635
00:26:31,310 --> 00:26:33,620
is magic

636
00:26:33,620 --> 00:26:37,580
I really there is this there is these

637
00:26:37,580 --> 00:26:39,550
two things for me at least

638
00:26:39,550 --> 00:26:42,110
that are super good benefits first of

639
00:26:42,110 --> 00:26:45,350
all you basically consider all the edge

640
00:26:45,350 --> 00:26:47,600
cases corner cases and everything of

641
00:26:47,600 --> 00:26:50,300
your application once you end up doing

642
00:26:50,300 --> 00:26:50,900
this

643
00:26:50,900 --> 00:26:54,200
user flow or diagram whatsoever this is

644
00:26:54,200 --> 00:26:56,000
everything you got which is very useful

645
00:26:56,000 --> 00:26:57,950
for you as a developer implementing it

646
00:26:57,950 --> 00:27:02,180
but it's also very useful for your I

647
00:27:02,180 --> 00:27:04,070
don't know how to call it and you're

648
00:27:04,070 --> 00:27:05,630
just gonna give you an example so you

649
00:27:05,630 --> 00:27:08,000
and your company something's broken pro

650
00:27:08,000 --> 00:27:10,310
turner comes by and say hey this is not

651
00:27:10,310 --> 00:27:11,930
working as expected and you start this

652
00:27:11,930 --> 00:27:13,850
conversation oh no this is what you

653
00:27:13,850 --> 00:27:16,340
asked me for you've been there yeah I

654
00:27:16,340 --> 00:27:18,620
can see in your faces so now it's gonna

655
00:27:18,620 --> 00:27:21,110
be like no see the diagram you didn't

656
00:27:21,110 --> 00:27:23,630
define it so it's fine let's gonna fix

657
00:27:23,630 --> 00:27:26,330
it and we all know what happened before

658
00:27:26,330 --> 00:27:29,210
and what's the evolution and the second

659
00:27:29,210 --> 00:27:30,740
part at least for me that I was really

660
00:27:30,740 --> 00:27:32,690
impressed was the testing part because I

661
00:27:32,690 --> 00:27:34,880
don't like to do testing and I don't

662
00:27:34,880 --> 00:27:36,680
know a lot of people that really loves

663
00:27:36,680 --> 00:27:38,690
doing testing is something that we do

664
00:27:38,690 --> 00:27:40,610
because we know it's needed it's not

665
00:27:40,610 --> 00:27:41,930
something that we do because we love it

666
00:27:41,930 --> 00:27:49,630
it's basically like it eating healthy so

667
00:27:49,630 --> 00:27:54,320
yes for the end I want to show you some

668
00:27:54,320 --> 00:27:56,900
resources I'm I'm gonna share with you

669
00:27:56,900 --> 00:27:59,270
the slides like in five minutes on

670
00:27:59,270 --> 00:28:02,300
Twitter but if you have to check one

671
00:28:02,300 --> 00:28:05,480
just please go to the ex State Library

672
00:28:05,480 --> 00:28:08,860
from from David this is simply good and

673
00:28:08,860 --> 00:28:11,150
well this is the book that David also

674
00:28:11,150 --> 00:28:12,770
recommended the constructing the UA with

675
00:28:12,770 --> 00:28:14,630
state charts it's a ton of the original

676
00:28:14,630 --> 00:28:17,390
one but then you have also the the last

677
00:28:17,390 --> 00:28:19,540
one the stitchers with github dot you

678
00:28:19,540 --> 00:28:24,560
there is a lot of resources in there and

679
00:28:24,560 --> 00:28:26,360
also real wall examples because at the

680
00:28:26,360 --> 00:28:27,920
end what I want with this talk is that

681
00:28:27,920 --> 00:28:31,250
you feel empowered to do your own vs

682
00:28:31,250 --> 00:28:32,930
code telemetry for example which is so

683
00:28:32,930 --> 00:28:34,430
complex thing is when you share your

684
00:28:34,430 --> 00:28:36,740
connection with another fella in a

685
00:28:36,740 --> 00:28:38,150
different part of the wall and you can

686
00:28:38,150 --> 00:28:39,800
see how your you type in how is he

687
00:28:39,800 --> 00:28:42,200
typing and so on it's a fancy machine

688
00:28:42,200 --> 00:28:46,790
and then also does anyone knows what it

689
00:28:46,790 --> 00:28:50,240
is

690
00:28:50,250 --> 00:28:53,769
correct Marsh Robert it was kinda easy

691
00:28:53,769 --> 00:28:55,510
if you've been hearing Wednesday because

692
00:28:55,510 --> 00:28:58,179
they'd be the spoil my my picture that

693
00:28:58,179 --> 00:29:00,100
but this is this is a really good

694
00:29:00,100 --> 00:29:02,049
example and for all of you that were in

695
00:29:02,049 --> 00:29:03,039
here on Wednesday

696
00:29:03,039 --> 00:29:05,710
basically the marsh robber was was

697
00:29:05,710 --> 00:29:07,090
because it's working already

698
00:29:07,090 --> 00:29:09,519
I find the same machine so I guess that

699
00:29:09,519 --> 00:29:11,799
is the best software engineers in the

700
00:29:11,799 --> 00:29:15,039
world decided that they are going to

701
00:29:15,039 --> 00:29:17,049
invest the gazillion billion trillion

702
00:29:17,049 --> 00:29:19,330
whatever of dollars to send a

703
00:29:19,330 --> 00:29:22,299
robot to another planet you only have

704
00:29:22,299 --> 00:29:24,580
one shot and you cannot it up and

705
00:29:24,580 --> 00:29:27,220
they pick up the fancy machines to do so

706
00:29:27,220 --> 00:29:30,880
I get that's the best real-world example

707
00:29:30,880 --> 00:29:34,000
you can have that's basically it

708
00:29:34,000 --> 00:29:35,679
remember I'm independent contractor if

709
00:29:35,679 --> 00:29:38,110
you need a fighter you can call me thank

710
00:29:38,110 --> 00:29:39,450
you

