1
00:00:06,690 --> 00:00:11,799

so hello my name is a Karen farzam I'm

2
00:00:11,799 --> 00:00:14,709
coming from hong kong at french you can

3
00:00:14,709 --> 00:00:18,850
tell after two seconds usually so i'm

4
00:00:18,850 --> 00:00:21,400
the co-founder of a startup school w hub

5
00:00:21,400 --> 00:00:23,410
which is a platform for startups and i'm

6
00:00:23,410 --> 00:00:25,720
also the co-founder of a woman who code

7
00:00:25,720 --> 00:00:28,119
in in hong kong to promote gender

8
00:00:28,119 --> 00:00:31,150
diversity in web development but

9
00:00:31,150 --> 00:00:33,970
actually i see a lot of woman here so i

10
00:00:33,970 --> 00:00:41,500
think it's really great so well done so

11
00:00:41,500 --> 00:00:43,750
i'm going to talk to you about HTTP to

12
00:00:43,750 --> 00:00:46,630
and how to unlearn your optimization

13
00:00:46,630 --> 00:00:53,290
skills so HTTP hypertext Transfer

14
00:00:53,290 --> 00:00:56,230
Protocol basically it's a foundation for

15
00:00:56,230 --> 00:00:59,430
data communication it's the most use

16
00:00:59,430 --> 00:01:03,489
protocol over the web today it's been

17
00:01:03,489 --> 00:01:08,200
first released in 1991 and then we went

18
00:01:08,200 --> 00:01:11,679
to like two versions and in 1999 through

19
00:01:11,679 --> 00:01:15,850
HTTP 1.1 and then you don't know why but

20
00:01:15,850 --> 00:01:19,060
it's like 16 years later we're talking

21
00:01:19,060 --> 00:01:22,810
about HTTP two so 16 years in like tech

22
00:01:22,810 --> 00:01:26,020
is like one century right so I'm going

23
00:01:26,020 --> 00:01:29,229
to explain you why it's released now the

24
00:01:29,229 --> 00:01:32,729
foundation of it and how you can use it

25
00:01:32,729 --> 00:01:38,229
so in 1999 the web look like this if

26
00:01:38,229 --> 00:01:39,969
some of you can remember I'm not even

27
00:01:39,969 --> 00:01:44,289
sure and today it looks like this so not

28
00:01:44,289 --> 00:01:46,389
only is a design hice change but other

29
00:01:46,389 --> 00:01:48,369
stuff as well actually I was also

30
00:01:48,369 --> 00:01:51,189
looking at Google in 1999 and if you

31
00:01:51,189 --> 00:01:53,619
check it it hasn't changed so I just

32
00:01:53,619 --> 00:01:57,489
remove it from the examples so not only

33
00:01:57,489 --> 00:02:00,520
the design has changed but also the

34
00:02:00,520 --> 00:02:03,579
requests and ends up a load so if you if

35
00:02:03,579 --> 00:02:05,560
you look at the chart you can see that

36
00:02:05,560 --> 00:02:08,440
the total transfer size grew like

37
00:02:08,440 --> 00:02:11,110
drastically and also the total of

38
00:02:11,110 --> 00:02:13,290
requests

39
00:02:13,290 --> 00:02:16,989
so basically with the number of requests

40
00:02:16,989 --> 00:02:19,810
adding up we also see that the website

41
00:02:19,810 --> 00:02:23,170
are getting really really slow and also

42
00:02:23,170 --> 00:02:26,049
because the round-trip time is really

43
00:02:26,049 --> 00:02:31,150
high so basically at the web developer

44
00:02:31,150 --> 00:02:34,319
it's like okay what can we do to reduce

45
00:02:34,319 --> 00:02:37,359
HTTP requests right all our hacks are

46
00:02:37,359 --> 00:02:42,400
based around this so currently like

47
00:02:42,400 --> 00:02:45,730
websites are like this and we want it to

48
00:02:45,730 --> 00:02:48,519
be more like turbo right because what is

49
00:02:48,519 --> 00:02:50,440
important is for it to be like super

50
00:02:50,440 --> 00:02:56,379
fast so currently all of us are using

51
00:02:56,379 --> 00:03:00,489
HTTP 1.1 and we are using it but instead

52
00:03:00,489 --> 00:03:02,200
of like fixing what's wrong we're using

53
00:03:02,200 --> 00:03:04,959
a lot of workarounds so let's go through

54
00:03:04,959 --> 00:03:09,909
them first we have sprinting so this is

55
00:03:09,909 --> 00:03:12,790
like really bad right it's like putting

56
00:03:12,790 --> 00:03:15,370
images together in order to select just

57
00:03:15,370 --> 00:03:18,310
one so it's really bad for caching it's

58
00:03:18,310 --> 00:03:20,049
really bad when you need to change one

59
00:03:20,049 --> 00:03:23,319
it's really bad to access it but still

60
00:03:23,319 --> 00:03:29,530
it improve the speed of the website then

61
00:03:29,530 --> 00:03:33,970
we have this horrible line which doesn't

62
00:03:33,970 --> 00:03:36,400
look like anything you cannot even say

63
00:03:36,400 --> 00:03:39,549
what this image is about so it's like

64
00:03:39,549 --> 00:03:41,979
super bad but still even like Facebook

65
00:03:41,979 --> 00:03:43,840
use it to cook to their website so they

66
00:03:43,840 --> 00:03:47,769
must be a reason we also have in lining

67
00:03:47,769 --> 00:03:50,379
which is you all know it like really bad

68
00:03:50,379 --> 00:03:54,900
but we still use it for some cases and

69
00:03:54,900 --> 00:03:56,829
another thing that we have is

70
00:03:56,829 --> 00:03:59,199
concatenation okay it's like we have all

71
00:03:59,199 --> 00:04:01,930
this javascript file all the CSS file

72
00:04:01,930 --> 00:04:04,239
and after we put them all together in

73
00:04:04,239 --> 00:04:06,639
order to reduce the number of HTTP

74
00:04:06,639 --> 00:04:09,220
requests and we're using a lot of tools

75
00:04:09,220 --> 00:04:12,579
in order to make it like all together

76
00:04:12,579 --> 00:04:14,979
but the thing is that when you think

77
00:04:14,979 --> 00:04:17,229
about it it's like when you download one

78
00:04:17,229 --> 00:04:19,269
page you need to download the whole

79
00:04:19,269 --> 00:04:22,570
website coding right so it's not really

80
00:04:22,570 --> 00:04:24,520
efficient and when you think about

81
00:04:24,520 --> 00:04:25,490
caching it's like

82
00:04:25,490 --> 00:04:27,979
you update just one line of code you

83
00:04:27,979 --> 00:04:31,099
need to refresh everything so actually

84
00:04:31,099 --> 00:04:36,740
we're not using like what HTTP really

85
00:04:36,740 --> 00:04:39,740
have to offer always TCP have to offer

86
00:04:39,740 --> 00:04:43,250
as well it's really inefficient and when

87
00:04:43,250 --> 00:04:46,550
we learn to code even as learning it's

88
00:04:46,550 --> 00:04:49,099
like okay you learn to do this so it's

89
00:04:49,099 --> 00:04:51,139
part of web development all these

90
00:04:51,139 --> 00:04:55,940
workarounds then we have Charlotte so

91
00:04:55,940 --> 00:04:58,610
basically with HTTP is like we're going

92
00:04:58,610 --> 00:05:00,800
to limit the number of requests

93
00:05:00,800 --> 00:05:04,099
connection that you can do but as it's

94
00:05:04,099 --> 00:05:06,949
not fast enough we increase the number

95
00:05:06,949 --> 00:05:10,310
of hosts so everything that we do is

96
00:05:10,310 --> 00:05:13,130
just hacks and when you're looking at

97
00:05:13,130 --> 00:05:16,069
the data which is the other graph the

98
00:05:16,069 --> 00:05:19,039
green one that you see is that all the

99
00:05:19,039 --> 00:05:20,990
unnecessary data that you are actually

100
00:05:20,990 --> 00:05:24,080
downloaded to websites because you want

101
00:05:24,080 --> 00:05:26,389
to make it faster so it's not also

102
00:05:26,389 --> 00:05:28,340
server friendly because you're using a

103
00:05:28,340 --> 00:05:30,830
lot of them with that you actually don't

104
00:05:30,830 --> 00:05:36,080
need so yeah when you think about it

105
00:05:36,080 --> 00:05:41,389
it's bad it's just super bad so what can

106
00:05:41,389 --> 00:05:46,449
we do so they said okay let's fix HTTP

107
00:05:46,449 --> 00:05:49,310
so they're what they're trying to do is

108
00:05:49,310 --> 00:05:55,340
to make a protocol that is rdt sensitive

109
00:05:55,340 --> 00:05:58,099
less already sensitive obviously and

110
00:05:58,099 --> 00:06:02,229
also to fix a head of line blocking and

111
00:06:02,229 --> 00:06:05,330
to stop the needs to making that many

112
00:06:05,330 --> 00:06:10,099
requests and also to keep everything

113
00:06:10,099 --> 00:06:13,250
because obviously as HTTP is the most

114
00:06:13,250 --> 00:06:16,250
used protocol they cannot change it and

115
00:06:16,250 --> 00:06:18,289
change the way it works right it's more

116
00:06:18,289 --> 00:06:20,030
about changing how it proceeds the data

117
00:06:20,030 --> 00:06:22,250
because we need to keep like the same

118
00:06:22,250 --> 00:06:24,680
API the same everything the same URL

119
00:06:24,680 --> 00:06:27,319
like nothing needs to change for the

120
00:06:27,319 --> 00:06:29,630
user it's just for the web developers

121
00:06:29,630 --> 00:06:36,680
that it needs to change so 2015 16 years

122
00:06:36,680 --> 00:06:37,650
later

123
00:06:37,650 --> 00:06:42,080
welcome to http too so what is it about

124
00:06:42,080 --> 00:06:46,460
so who is behind basically it's like the

125
00:06:46,460 --> 00:06:52,380
IETF which is HTTP beast group so a lot

126
00:06:52,380 --> 00:06:54,389
of developer and other type of people

127
00:06:54,389 --> 00:06:57,889
and where does HTTP to come from

128
00:06:57,889 --> 00:07:01,949
actually in 2012 Google decided to

129
00:07:01,949 --> 00:07:04,500
relieve speedy so speedy was a way to

130
00:07:04,500 --> 00:07:09,060
download like faster and it got actually

131
00:07:09,060 --> 00:07:13,169
a lot of traction so the IETF decided to

132
00:07:13,169 --> 00:07:17,220
base HTTP two on speedy but it's not

133
00:07:17,220 --> 00:07:19,229
done by like Google anymore it's really

134
00:07:19,229 --> 00:07:21,030
independent because people like kind of

135
00:07:21,030 --> 00:07:25,560
worried about this and in may 2015

136
00:07:25,560 --> 00:07:29,729
finally easy RFC was released RFC is

137
00:07:29,729 --> 00:07:31,229
kind of a weird word because it means

138
00:07:31,229 --> 00:07:33,599
requests for comments but actually it's

139
00:07:33,599 --> 00:07:35,880
already released so I find it kind of

140
00:07:35,880 --> 00:07:39,810
strange and speedy is actually disabled

141
00:07:39,810 --> 00:07:45,240
now so you cannot use it anymore so what

142
00:07:45,240 --> 00:07:51,300
is HTTP to HTTPS a binary protocol so at

143
00:07:51,300 --> 00:07:53,340
the web developer you might find it

144
00:07:53,340 --> 00:07:55,050
really useful that it's only text

145
00:07:55,050 --> 00:07:57,630
because it's really easy to check all

146
00:07:57,630 --> 00:07:59,520
the answers and everything but when you

147
00:07:59,520 --> 00:08:01,530
think about it the fact that it's going

148
00:08:01,530 --> 00:08:03,810
to be binary make it's more compact and

149
00:08:03,810 --> 00:08:08,729
efficient and it also prevent from like

150
00:08:08,729 --> 00:08:13,380
crime attacks on the websites so that's

151
00:08:13,380 --> 00:08:16,199
actually good and it reduces also all

152
00:08:16,199 --> 00:08:18,930
the errors due to the text that it can

153
00:08:18,930 --> 00:08:20,400
brings because you have a lot of space

154
00:08:20,400 --> 00:08:22,470
coma and all these kind of things so

155
00:08:22,470 --> 00:08:24,870
it's actually difficult to parse and to

156
00:08:24,870 --> 00:08:27,150
know like when it ends and when it

157
00:08:27,150 --> 00:08:29,849
finish so with the binary it's going to

158
00:08:29,849 --> 00:08:34,620
be more efficient now we are talking

159
00:08:34,620 --> 00:08:37,680
about header compression when you're

160
00:08:37,680 --> 00:08:39,659
looking at the header that you have

161
00:08:39,659 --> 00:08:41,550
actually you have a lot of redundant

162
00:08:41,550 --> 00:08:46,130
data so now you have edge back and this

163
00:08:46,130 --> 00:08:49,550
will actually reduce the header for like

164
00:08:49,550 --> 00:08:52,070
sixty six percent which is really huge

165
00:08:52,070 --> 00:08:54,530
because now you don't have any

166
00:08:54,530 --> 00:08:58,220
compression at all so it's actually very

167
00:08:58,220 --> 00:09:01,880
good so and as you can see it's even

168
00:09:01,880 --> 00:09:03,860
better than than speedy so it's really

169
00:09:03,860 --> 00:09:06,080
based on it but they really improve it

170
00:09:06,080 --> 00:09:09,440
after it like zoom one or two years have

171
00:09:09,440 --> 00:09:13,910
been working on top of it so now also

172
00:09:13,910 --> 00:09:16,670
you're going to have priorities in the

173
00:09:16,670 --> 00:09:21,050
requests using weights and dependency so

174
00:09:21,050 --> 00:09:24,350
basically you're requesting for websites

175
00:09:24,350 --> 00:09:26,780
what it can do is that it can identify

176
00:09:26,780 --> 00:09:30,080
where you are on the dome and depending

177
00:09:30,080 --> 00:09:32,390
on where you are it requesting priority

178
00:09:32,390 --> 00:09:36,170
what you can see so basically it's going

179
00:09:36,170 --> 00:09:39,380
to ask for HTML first then CSS sends the

180
00:09:39,380 --> 00:09:42,530
images and you can put weights on each

181
00:09:42,530 --> 00:09:44,810
of these requests and based on this

182
00:09:44,810 --> 00:09:47,270
you're going to receive them in advance

183
00:09:47,270 --> 00:09:50,630
and this will also remove the head of

184
00:09:50,630 --> 00:09:53,540
line blocking because you won't need to

185
00:09:53,540 --> 00:09:56,000
wait for the request to be finished in

186
00:09:56,000 --> 00:09:58,460
order to have the rest basically it's

187
00:09:58,460 --> 00:10:03,800
like you you're ordering something and

188
00:10:03,800 --> 00:10:07,100
it gets much much faster and also the

189
00:10:07,100 --> 00:10:10,760
thing is that you can also stop the

190
00:10:10,760 --> 00:10:15,320
request even when you have it so now you

191
00:10:15,320 --> 00:10:16,760
have something that is actually very

192
00:10:16,760 --> 00:10:20,480
cool which is the server push it's like

193
00:10:20,480 --> 00:10:23,570
you at you ask your server for requests

194
00:10:23,570 --> 00:10:26,630
and then the server will anticipate what

195
00:10:26,630 --> 00:10:28,400
you need afterwards and it will give it

196
00:10:28,400 --> 00:10:30,860
to you so when you think about an

197
00:10:30,860 --> 00:10:32,990
analogy it's like imagine you're in a

198
00:10:32,990 --> 00:10:35,600
restaurant okay so yours a brother and

199
00:10:35,600 --> 00:10:40,130
then the kitchen is the server and then

200
00:10:40,130 --> 00:10:42,710
your protocol are the wetter so in the

201
00:10:42,710 --> 00:10:44,780
first version of HTTP you would order a

202
00:10:44,780 --> 00:10:46,190
sandwich and then you will have your

203
00:10:46,190 --> 00:10:48,800
waiter com go to the kitchen come back

204
00:10:48,800 --> 00:10:50,840
with the bread go to the kitchen come

205
00:10:50,840 --> 00:10:53,180
back with a ham and then you know with

206
00:10:53,180 --> 00:10:55,390
the cheese and everything then you have

207
00:10:55,390 --> 00:10:57,180
HTTP 1.1

208
00:10:57,180 --> 00:10:59,010
and then instead of having like one

209
00:10:59,010 --> 00:11:01,980
wetter you could have for waiters okay

210
00:11:01,980 --> 00:11:04,800
so each one of them will go and come

211
00:11:04,800 --> 00:11:06,630
with something and they will stay at

212
00:11:06,630 --> 00:11:08,970
your table until everything is there

213
00:11:08,970 --> 00:11:10,860
when you think about like the number of

214
00:11:10,860 --> 00:11:12,060
weathers you need that's not very

215
00:11:12,060 --> 00:11:16,530
efficient so now with HTTP two it's like

216
00:11:16,530 --> 00:11:18,690
you asked for a sandwich you have one

217
00:11:18,690 --> 00:11:20,370
waiter because you only have one

218
00:11:20,370 --> 00:11:22,590
connection it goes to the kitchen she

219
00:11:22,590 --> 00:11:24,540
comes back with your sandwich and she

220
00:11:24,540 --> 00:11:27,510
even brings you the coffee it's awesome

221
00:11:27,510 --> 00:11:30,330
right and you can even say no I don't

222
00:11:30,330 --> 00:11:32,160
want the coffee and it's like you don't

223
00:11:32,160 --> 00:11:35,370
have to pay for it so it's really really

224
00:11:35,370 --> 00:11:42,120
powerful then you have multiplexing so

225
00:11:42,120 --> 00:11:44,580
multiplexing is like this little train

226
00:11:44,580 --> 00:11:47,700
but that you see so all the streams are

227
00:11:47,700 --> 00:11:52,380
divided into like headers and data so

228
00:11:52,380 --> 00:11:55,080
you send the streams and when it comes

229
00:11:55,080 --> 00:11:56,760
back it comes it can come back in

230
00:11:56,760 --> 00:11:59,070
different order and your browser will

231
00:11:59,070 --> 00:12:02,220
know where to put it and to reassemble

232
00:12:02,220 --> 00:12:05,250
dips so it's great because if something

233
00:12:05,250 --> 00:12:07,380
is blocking or is taking more bands with

234
00:12:07,380 --> 00:12:09,870
it can actually get the other one in

235
00:12:09,870 --> 00:12:12,450
priority so that's all the problem that

236
00:12:12,450 --> 00:12:18,300
we use to have with HTTP 1.1 so in terms

237
00:12:18,300 --> 00:12:21,270
of implementation actually most of us

238
00:12:21,270 --> 00:12:24,000
didn't know it but it's already there in

239
00:12:24,000 --> 00:12:26,690
terms of browser and in terms of server

240
00:12:26,690 --> 00:12:31,190
for Firefox and Chrome it's actually

241
00:12:31,190 --> 00:12:34,890
enabled by default so you might already

242
00:12:34,890 --> 00:12:37,920
use it without knowing to and in terms

243
00:12:37,920 --> 00:12:39,780
of server a lot of them are supporting

244
00:12:39,780 --> 00:12:44,340
it so when you look at the web actually

245
00:12:44,340 --> 00:12:46,410
you have more requests that have been

246
00:12:46,410 --> 00:12:49,680
that are done in HTTP to right now

247
00:12:49,680 --> 00:12:53,040
rather than HTTP 1.0 so it's getting

248
00:12:53,040 --> 00:12:59,490
there really fast so basically for

249
00:12:59,490 --> 00:13:02,730
normal humans it's really good it's

250
00:13:02,730 --> 00:13:05,310
going to be faster which means a better

251
00:13:05,310 --> 00:13:06,360
user experience

252
00:13:06,360 --> 00:13:09,029
which means like more attention on your

253
00:13:09,029 --> 00:13:11,040
website you know everything that comes

254
00:13:11,040 --> 00:13:13,470
with it everything that we want and for

255
00:13:13,470 --> 00:13:16,079
developers that's going to change a

256
00:13:16,079 --> 00:13:18,450
little bit first of all we'll need to

257
00:13:18,450 --> 00:13:20,790
like unlearn everything that we've

258
00:13:20,790 --> 00:13:22,649
learned to do we will need to rebuild

259
00:13:22,649 --> 00:13:24,570
our website to change how it's made to

260
00:13:24,570 --> 00:13:26,790
make it more functional because actually

261
00:13:26,790 --> 00:13:28,829
the thing is that all the hacks that

262
00:13:28,829 --> 00:13:31,529
we've been doing when you're using HTTP

263
00:13:31,529 --> 00:13:35,040
two it's actually slowing it so you

264
00:13:35,040 --> 00:13:37,320
actually really need to remove it and to

265
00:13:37,320 --> 00:13:40,200
stop all this concatenation sharding and

266
00:13:40,200 --> 00:13:43,380
everything that we say before so you

267
00:13:43,380 --> 00:13:47,310
really need to remove it and maybe what

268
00:13:47,310 --> 00:13:49,589
we will need to do is to have a special

269
00:13:49,589 --> 00:13:52,050
request for HTTP one and a special one

270
00:13:52,050 --> 00:13:56,579
for HTTP to the thing is that HTTP two

271
00:13:56,579 --> 00:13:59,130
works like a different language what

272
00:13:59,130 --> 00:14:00,839
will happen it's like the server will

273
00:14:00,839 --> 00:14:02,850
come back and say hey do you speak HTTP

274
00:14:02,850 --> 00:14:05,339
two and if the browser saying no then it

275
00:14:05,339 --> 00:14:08,220
will just give you the default one so

276
00:14:08,220 --> 00:14:10,769
actually you don't really need to notice

277
00:14:10,769 --> 00:14:20,190
it so go and explore HTTP to thank you

278
00:14:20,190 --> 00:14:27,750
very much hey my name is Jacques dodgy

279
00:14:27,750 --> 00:14:29,820
so i have a question like when browser

280
00:14:29,820 --> 00:14:32,370
makes a request so you say the server

281
00:14:32,370 --> 00:14:35,820
will anticipate and even if i ask for a

282
00:14:35,820 --> 00:14:37,800
sangwich it will bring me a coffee right

283
00:14:37,800 --> 00:14:41,459
so how it is guessing that what else I

284
00:14:41,459 --> 00:14:44,880
might require with that request how is

285
00:14:44,880 --> 00:14:47,220
it guessing that it's a HTTP to know how

286
00:14:47,220 --> 00:14:51,089
it is give like if I asked for HTML but

287
00:14:51,089 --> 00:14:53,610
you said that it might anticipate that I

288
00:14:53,610 --> 00:14:56,190
might require the CSS file as well and

289
00:14:56,190 --> 00:14:58,829
it will send the CSS together yeah it

290
00:14:58,829 --> 00:15:01,500
will so how it will guess that what else

291
00:15:01,500 --> 00:15:03,600
I require because you will set it up

292
00:15:03,600 --> 00:15:05,130
actually you will have all your

293
00:15:05,130 --> 00:15:07,110
priorities and everything so the circle

294
00:15:07,110 --> 00:15:08,730
will know so that's how it's going to be

295
00:15:08,730 --> 00:15:11,010
able to anticipate it so you kind of

296
00:15:11,010 --> 00:15:13,740
need to configure it how much is

297
00:15:13,740 --> 00:15:15,279
deployed now and what

298
00:15:15,279 --> 00:15:17,410
that kind of time frame for uptake do

299
00:15:17,410 --> 00:15:20,889
you think so basically in in terms of

300
00:15:20,889 --> 00:15:24,850
browser I think about sixty percent of

301
00:15:24,850 --> 00:15:28,959
the bra so supported right now and in

302
00:15:28,959 --> 00:15:32,610
terms of deployment among the top ten

303
00:15:32,610 --> 00:15:36,399
thousand websites it's supported around

304
00:15:36,399 --> 00:15:39,749
I think it's fifteen or twenty percent

305
00:15:39,749 --> 00:15:45,550
so it's actually pretty big yeah you say

306
00:15:45,550 --> 00:15:47,920
that we need to remove some of the hacks

307
00:15:47,920 --> 00:15:50,829
that we're executing today to speed up

308
00:15:50,829 --> 00:15:53,199
things in HTTP one can you give some

309
00:15:53,199 --> 00:15:55,749
specific examples of the actual hacks

310
00:15:55,749 --> 00:15:58,149
that that you would expect us to remove

311
00:15:58,149 --> 00:16:00,009
all the ones that I said at the

312
00:16:00,009 --> 00:16:01,120
beginning it's Friday like

313
00:16:01,120 --> 00:16:03,069
congratulations browserify anymore don't

314
00:16:03,069 --> 00:16:05,800
use concatenation yeah yes so so that's

315
00:16:05,800 --> 00:16:07,779
where it comes like kind of complicated

316
00:16:07,779 --> 00:16:09,819
because you also need to check on your

317
00:16:09,819 --> 00:16:12,160
website if your user are using HTTP two

318
00:16:12,160 --> 00:16:14,620
or HTTP one in order to kind of guess

319
00:16:14,620 --> 00:16:15,999
which one you need to implement as well

320
00:16:15,999 --> 00:16:17,740
right you need to run a test to see what

321
00:16:17,740 --> 00:16:19,990
your users are are doing right now if

322
00:16:19,990 --> 00:16:21,610
you're mainly implemented in China and

323
00:16:21,610 --> 00:16:24,910
they are using IA for like old version

324
00:16:24,910 --> 00:16:26,949
you obviously won't be implementing it

325
00:16:26,949 --> 00:16:30,339
so I read a lot about the discussions

326
00:16:30,339 --> 00:16:32,050
that's been going on is how do you

327
00:16:32,050 --> 00:16:34,809
actually set up something how do you

328
00:16:34,809 --> 00:16:37,300
load your project being able to respond

329
00:16:37,300 --> 00:16:40,120
in HTTP 1.1 with all the hacks that

330
00:16:40,120 --> 00:16:42,279
we've been doing and how to upload it to

331
00:16:42,279 --> 00:16:46,569
be able to do HTTP to and that's not

332
00:16:46,569 --> 00:16:49,899
really clear gotcha okay when do you

333
00:16:49,899 --> 00:16:52,149
think HTTP you will be like the major

334
00:16:52,149 --> 00:16:55,319
thing and the way like a pacing 1.1

335
00:16:55,319 --> 00:16:58,029
because of meeting at it's like not

336
00:16:58,029 --> 00:17:00,910
supported by a lot of still not

337
00:17:00,910 --> 00:17:04,569
supported by like tom cat oh yeah i

338
00:17:04,569 --> 00:17:06,459
think there are a lot of developments to

339
00:17:06,459 --> 00:17:08,079
be made but when you think about the

340
00:17:08,079 --> 00:17:10,120
fact that it's only being released in

341
00:17:10,120 --> 00:17:13,059
May which is like what four or five

342
00:17:13,059 --> 00:17:17,289
months ago I think the gross can be like

343
00:17:17,289 --> 00:17:20,380
super fast so people are really talking

344
00:17:20,380 --> 00:17:22,959
about next year being a major change in

345
00:17:22,959 --> 00:17:25,620
it but

346
00:17:25,620 --> 00:17:29,550
is that we'll still need to use HTTP 1.1

347
00:17:29,550 --> 00:17:31,680
a lot so the real question is like how

