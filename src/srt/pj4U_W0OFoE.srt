1
00:00:37,650 --> 00:00:39,370

hi everybody

2
00:00:39,370 --> 00:00:42,400
how's it going I am so excited to be

3
00:00:42,400 --> 00:00:46,420
here um see old friends new friends I've

4
00:00:46,420 --> 00:00:48,250
met today and future friends on the

5
00:00:48,250 --> 00:00:49,420
beach

6
00:00:49,420 --> 00:00:51,820
I almost got well I did get emotional on

7
00:00:51,820 --> 00:00:53,590
the CSS comp stage I promise I'm not

8
00:00:53,590 --> 00:00:54,640
gonna like cry or anything like that

9
00:00:54,640 --> 00:00:56,770
because I'm I actually have something

10
00:00:56,770 --> 00:00:58,990
really serious to talk about and that's

11
00:00:58,990 --> 00:01:01,900
sorting all day yesterday people would

12
00:01:01,900 --> 00:01:02,890
come up to me and they're like what are

13
00:01:02,890 --> 00:01:05,110
you gonna talk about it is comfy it's

14
00:01:05,110 --> 00:01:09,429
like literally in the schedule and I

15
00:01:09,429 --> 00:01:10,869
don't I don't lie on schedules I don't

16
00:01:10,869 --> 00:01:13,929
lie ever but I'm so sorting sorting is

17
00:01:13,929 --> 00:01:15,939
something that I love to talk about I

18
00:01:15,939 --> 00:01:18,700
love sorting algorithms it's something I

19
00:01:18,700 --> 00:01:21,219
studied a lot and so I'm really happy to

20
00:01:21,219 --> 00:01:23,109
be here at my first days comm talk

21
00:01:23,109 --> 00:01:26,740
talking to you about this dynamic and

22
00:01:26,740 --> 00:01:29,740
exciting subject and it's something that

23
00:01:29,740 --> 00:01:32,679
I've been doing my entire life even

24
00:01:32,679 --> 00:01:35,049
before I became a programmer because

25
00:01:35,049 --> 00:01:37,240
yeah I'm a programmer I'm going that out

26
00:01:37,240 --> 00:01:39,939
there I used to sort my my Lego

27
00:01:39,939 --> 00:01:43,420
collection by colors and form factor oh

28
00:01:43,420 --> 00:01:47,979
the irony I collected trolls and I

29
00:01:47,979 --> 00:01:50,499
sorted them by like hair color and

30
00:01:50,499 --> 00:01:55,209
outfits and stuff like that money we all

31
00:01:55,209 --> 00:01:59,859
sort money this is my real money we sort

32
00:01:59,859 --> 00:02:01,899
our family members by how much money

33
00:02:01,899 --> 00:02:03,729
they give us during our eighth grade

34
00:02:03,729 --> 00:02:08,670
graduation that's not my real family and

35
00:02:08,670 --> 00:02:12,340
arrays get it arrays

36
00:02:12,340 --> 00:02:16,319
oh I'm sorry I'm sorry

37
00:02:16,319 --> 00:02:22,510
so arrays are something that we most

38
00:02:22,510 --> 00:02:23,890
commonly use how many people here have

39
00:02:23,890 --> 00:02:25,480
never dealt with an array in their

40
00:02:25,480 --> 00:02:30,840
JavaScript programming so arrays

41
00:02:30,840 --> 00:02:33,310
everyone goes to Anton and ask him about

42
00:02:33,310 --> 00:02:37,720
Jay s hints later on after the show so

43
00:02:37,720 --> 00:02:39,340
arrays are the most popular data

44
00:02:39,340 --> 00:02:41,049
structure in computer science and you

45
00:02:41,049 --> 00:02:42,640
might be thinking that like most things

46
00:02:42,640 --> 00:02:44,470
that I say I've made it up on the fly

47
00:02:44,470 --> 00:02:46,030
but it's true and I did a lot of

48
00:02:46,030 --> 00:02:48,190
research after lunch today

49
00:02:48,190 --> 00:02:51,130
and if you see on brainy quote which is

50
00:02:51,130 --> 00:02:53,140
a site with quotes on it you search

51
00:02:53,140 --> 00:02:56,140
array there are quite a few quotes that

52
00:02:56,140 --> 00:02:58,840
are literally about arrays there's two

53
00:02:58,840 --> 00:03:01,870
whole pages of them and two might seem

54
00:03:01,870 --> 00:03:04,810
like a small number but if you search

55
00:03:04,810 --> 00:03:07,000
another data structure on fond of linked

56
00:03:07,000 --> 00:03:09,670
lists there are no results for that so

57
00:03:09,670 --> 00:03:13,060
like nobody cares about linked lists and

58
00:03:13,060 --> 00:03:15,489
even stranger than that since linked

59
00:03:15,489 --> 00:03:17,319
lists are pretty prominent is that like

60
00:03:17,319 --> 00:03:19,720
on this page M&M is considered a popular

61
00:03:19,720 --> 00:03:24,000
author which i think is a pretty funny

62
00:03:24,000 --> 00:03:27,430
but you're not here to write here to

63
00:03:27,430 --> 00:03:28,959
talk about M&M you're not here to see

64
00:03:28,959 --> 00:03:33,130
M&M you're here to see me so my name is

65
00:03:33,130 --> 00:03:37,150
Jennifer and I am finally okay to admit

66
00:03:37,150 --> 00:03:40,209
that I am a JavaScript developer wait

67
00:03:40,209 --> 00:03:43,720
list off my shoulders um I am an open

68
00:03:43,720 --> 00:03:46,150
web engineer at boku I work with Adam

69
00:03:46,150 --> 00:03:47,380
and a bunch of other cool people that

70
00:03:47,380 --> 00:03:52,690
are here today and we do a lot of open

71
00:03:52,690 --> 00:03:54,720
source development work in the community

72
00:03:54,720 --> 00:03:57,880
consulting and education and education

73
00:03:57,880 --> 00:04:00,130
is really important to me and I really

74
00:04:00,130 --> 00:04:04,209
do enjoy bringing new topics and getting

75
00:04:04,209 --> 00:04:06,819
more people into development and so I'm

76
00:04:06,819 --> 00:04:09,669
gonna talk to you about sorting and

77
00:04:09,669 --> 00:04:11,139
what's the harm in it and that's the

78
00:04:11,139 --> 00:04:13,419
title of my talk and talk about how we

79
00:04:13,419 --> 00:04:16,139
can sanitize inputs for more optimized

80
00:04:16,139 --> 00:04:19,930
JavaScript so sorting what is sorting

81
00:04:19,930 --> 00:04:22,960
you know it's when you arrange objects

82
00:04:22,960 --> 00:04:25,780
of some sort you know into a or

83
00:04:25,780 --> 00:04:27,250
depending on whether you wanted

84
00:04:27,250 --> 00:04:29,080
ascending or descending or by some

85
00:04:29,080 --> 00:04:33,880
certain taxonomy and last month I spoke

86
00:04:33,880 --> 00:04:36,310
at Empire jeaious and I gave you know a

87
00:04:36,310 --> 00:04:39,310
not as serious talk is this about the

88
00:04:39,310 --> 00:04:41,170
computational complexities of sorting

89
00:04:41,170 --> 00:04:43,450
algorithms implemented in JavaScript and

90
00:04:43,450 --> 00:04:45,340
I think it went really well I had a lot

91
00:04:45,340 --> 00:04:46,780
of people come up to me or like oh you

92
00:04:46,780 --> 00:04:48,250
know I'm studying computer science like

93
00:04:48,250 --> 00:04:51,040
you did and and I really you know like

94
00:04:51,040 --> 00:04:52,750
to see algorithms implemented in

95
00:04:52,750 --> 00:04:55,600
JavaScript it's more applicable than dry

96
00:04:55,600 --> 00:04:59,140
you know pseudocode but then I felt bad

97
00:04:59,140 --> 00:05:02,110
because I realized that sorting it's

98
00:05:02,110 --> 00:05:04,090
kind of messed up so what we're going to

99
00:05:04,090 --> 00:05:07,500
do is talk about not sorting arrays

100
00:05:07,500 --> 00:05:10,930
sorry I I opened up LinkedIn today by

101
00:05:10,930 --> 00:05:14,169
accident and wait this is Dara Singh

102
00:05:14,169 --> 00:05:17,919
okay there we go so arrays what are

103
00:05:17,919 --> 00:05:20,890
arrays it's a systematic arrangement of

104
00:05:20,890 --> 00:05:24,490
objects here's an example of an array of

105
00:05:24,490 --> 00:05:28,750
integers 7:10 and 1 and we have this

106
00:05:28,750 --> 00:05:32,440
nifty sort function that we can call on

107
00:05:32,440 --> 00:05:35,050
it which will actually not sort the

108
00:05:35,050 --> 00:05:38,200
array well it does support the array it

109
00:05:38,200 --> 00:05:40,900
sorts it lexicographically the first

110
00:05:40,900 --> 00:05:42,700
column int n is 1 and that comes before

111
00:05:42,700 --> 00:05:45,550
7 so technically it does that but still

112
00:05:45,550 --> 00:05:49,419
like that's kind of ridiculous and you

113
00:05:49,419 --> 00:05:51,790
can according to the atmosphere you can

114
00:05:51,790 --> 00:05:54,550
you have to give a compare function and

115
00:05:54,550 --> 00:05:57,190
you can basically tell the computer how

116
00:05:57,190 --> 00:06:01,360
to sort the array and when you give that

117
00:06:01,360 --> 00:06:04,450
that compare function it does it which

118
00:06:04,450 --> 00:06:06,340
is like that's fine but like that's a

119
00:06:06,340 --> 00:06:09,490
lot of work for me and then if you take

120
00:06:09,490 --> 00:06:16,810
this example who here like sports anyway

121
00:06:16,810 --> 00:06:21,640
so sports ball so like I was born in New

122
00:06:21,640 --> 00:06:23,650
York I followed New York sports um and

123
00:06:23,650 --> 00:06:25,020
so the Knicks and nets are two

124
00:06:25,020 --> 00:06:28,000
basketball teams I've heard and if you

125
00:06:28,000 --> 00:06:31,419
take this array of strings and you call

126
00:06:31,419 --> 00:06:34,510
the sort function on it like yeah it

127
00:06:34,510 --> 00:06:37,000
does return that same ray cuz already

128
00:06:37,000 --> 00:06:39,090
sorted lots of new graphical II but

129
00:06:39,090 --> 00:06:40,740
like on what planet would the Knicks

130
00:06:40,740 --> 00:06:43,380
come before the Nets honestly they're

131
00:06:43,380 --> 00:06:46,410
like five behind the nets in the ranking

132
00:06:46,410 --> 00:06:51,240
so if I like decides to change sort to

133
00:06:51,240 --> 00:06:55,169
sort by a best team I get an error that

134
00:06:55,169 --> 00:06:57,440
sort of a best team is not a function

135
00:06:57,440 --> 00:07:02,790
which is like messed up so this is

136
00:07:02,790 --> 00:07:04,650
something I discovered after I talked at

137
00:07:04,650 --> 00:07:08,250
the last conference and that sorting is

138
00:07:08,250 --> 00:07:10,350
is broken which is not surprising

139
00:07:10,350 --> 00:07:12,150
because it's a social construct and most

140
00:07:12,150 --> 00:07:14,580
social constructs are broken so for one

141
00:07:14,580 --> 00:07:18,000
it doesn't sort right we have to do all

142
00:07:18,000 --> 00:07:19,470
of the work we have to tell the computer

143
00:07:19,470 --> 00:07:21,180
how to do things and like what's the

144
00:07:21,180 --> 00:07:22,620
point of computers if you have to tell

145
00:07:22,620 --> 00:07:26,580
them how I don't know also they're way

146
00:07:26,580 --> 00:07:28,850
too many algorithms to choose from

147
00:07:28,850 --> 00:07:31,560
there's just so many of them and there's

148
00:07:31,560 --> 00:07:33,720
always new ones coming it reminds me of

149
00:07:33,720 --> 00:07:35,419
like one time I went to this tea salon

150
00:07:35,419 --> 00:07:38,910
in my town I live in Montclair New

151
00:07:38,910 --> 00:07:40,919
Jersey I'm going to Jersey City soon and

152
00:07:40,919 --> 00:07:42,510
there's a tea salon there as well and

153
00:07:42,510 --> 00:07:43,889
when you walk in there's like five

154
00:07:43,889 --> 00:07:45,990
hundred types of tea and you go to the

155
00:07:45,990 --> 00:07:47,460
counter and it's completely overwhelming

156
00:07:47,460 --> 00:07:50,580
and the lady the carrier will say like

157
00:07:50,580 --> 00:07:53,070
what kind tea do you want and I go like

158
00:07:53,070 --> 00:07:55,470
oh like the best tea I guess and then

159
00:07:55,470 --> 00:07:56,849
they laugh at you cause like how are

160
00:07:56,849 --> 00:07:58,349
they supposed to know what the best tea

161
00:07:58,349 --> 00:08:00,270
is for you and that's the same problem

162
00:08:00,270 --> 00:08:02,610
that we have with sorting algorithms

163
00:08:02,610 --> 00:08:04,800
there's just so many of them fortunately

164
00:08:04,800 --> 00:08:07,979
this is the only part in web development

165
00:08:07,979 --> 00:08:10,560
where we have that paradox of choice and

166
00:08:10,560 --> 00:08:13,050
that's with sorting algorithms but uh

167
00:08:13,050 --> 00:08:16,530
and then like if you think that all

168
00:08:16,530 --> 00:08:18,930
these listed here are the same sorting

169
00:08:18,930 --> 00:08:20,400
algorithm they just have different names

170
00:08:20,400 --> 00:08:22,349
for some reason but they're all the same

171
00:08:22,349 --> 00:08:23,849
so we also have to deal with the paradox

172
00:08:23,849 --> 00:08:26,280
of choice of names for a single sorting

173
00:08:26,280 --> 00:08:27,720
algorithm that's actually based off a

174
00:08:27,720 --> 00:08:29,849
bubble sort which if you know what

175
00:08:29,849 --> 00:08:31,440
bubble sort is you probably should never

176
00:08:31,440 --> 00:08:32,339
be using it

177
00:08:32,339 --> 00:08:34,080
unless you're teaching people why they

178
00:08:34,080 --> 00:08:37,229
should never be using it so we have

179
00:08:37,229 --> 00:08:39,330
people who are developing algorithms

180
00:08:39,330 --> 00:08:40,919
because they don't understand the other

181
00:08:40,919 --> 00:08:42,570
ones and they're not sure which ones

182
00:08:42,570 --> 00:08:43,950
they want and now we just keep doing

183
00:08:43,950 --> 00:08:45,959
more and more algorithms and it's kind

184
00:08:45,959 --> 00:08:47,520
of a nightmare so I'm thinking like we

185
00:08:47,520 --> 00:08:51,390
need to like stop sorting completely

186
00:08:51,390 --> 00:08:54,780
um because sorting if you don't sort

187
00:08:54,780 --> 00:08:56,490
then you don't have to deal with like a

188
00:08:56,490 --> 00:08:57,930
lack of efficiency when you're using

189
00:08:57,930 --> 00:08:59,460
sorting algorithms I have nested

190
00:08:59,460 --> 00:09:01,350
for-loops you're you know you're dealing

191
00:09:01,350 --> 00:09:03,360
with quadratic orders and that's like

192
00:09:03,360 --> 00:09:05,100
tons and tons of operations and there

193
00:09:05,100 --> 00:09:07,020
are some sorting algorithms where if you

194
00:09:07,020 --> 00:09:08,490
want to sort a phonebook with it

195
00:09:08,490 --> 00:09:10,620
it will literally last hundreds of

196
00:09:10,620 --> 00:09:13,020
lifetimes nobody will see it sorted so

197
00:09:13,020 --> 00:09:14,370
we can get rid of that by just not

198
00:09:14,370 --> 00:09:16,890
sorting it and also if we put the work

199
00:09:16,890 --> 00:09:19,770
on our users and require them to sort

200
00:09:19,770 --> 00:09:22,800
for us we are making them smarter and I

201
00:09:22,800 --> 00:09:24,120
feel like we're not really giving our

202
00:09:24,120 --> 00:09:25,560
users the benefit of the doubt I've

203
00:09:25,560 --> 00:09:28,500
never had I've never seen or heard of

204
00:09:28,500 --> 00:09:30,570
any issue where a user was not able to

205
00:09:30,570 --> 00:09:33,690
use a certain technology so I think we

206
00:09:33,690 --> 00:09:37,670
should sort of give them that um so I

207
00:09:37,670 --> 00:09:40,980
looked at a bunch of these I guess these

208
00:09:40,980 --> 00:09:43,530
only JavaScript projects that and I

209
00:09:43,530 --> 00:09:45,870
wanted to see if other libraries and

210
00:09:45,870 --> 00:09:49,050
frameworks and tool sets and whatever

211
00:09:49,050 --> 00:09:50,820
you guys want to call your thing so you

212
00:09:50,820 --> 00:09:52,170
can't compete against the other ones

213
00:09:52,170 --> 00:09:54,330
that are already out I wanted to see how

214
00:09:54,330 --> 00:09:56,130
they were handling this problem with

215
00:09:56,130 --> 00:09:58,440
sorting and if any of them were giving

216
00:09:58,440 --> 00:10:02,250
some sort of method or you know to allow

217
00:10:02,250 --> 00:10:04,440
people to not have to sort and they

218
00:10:04,440 --> 00:10:07,140
didn't so I had created jorts sort which

219
00:10:07,140 --> 00:10:08,910
is a framework for sorting ambitious web

220
00:10:08,910 --> 00:10:14,910
applications

221
00:10:14,920 --> 00:10:17,360
thank you have a good rest of your

222
00:10:17,360 --> 00:10:26,540
conference so yep I don't get black hole

223
00:10:26,540 --> 00:10:31,700
Sun this time so I'm just releasing this

224
00:10:31,700 --> 00:10:34,160
exclusively here at JSC um for all of

225
00:10:34,160 --> 00:10:36,770
you I've never shown to anybody I kind

226
00:10:36,770 --> 00:10:38,990
of got worried because my friend Stanley

227
00:10:38,990 --> 00:10:43,040
Twitter user a but sandal made this joke

228
00:10:43,040 --> 00:10:46,310
and then my dad tweeted about it and I

229
00:10:46,310 --> 00:10:53,260
was like don't blow up my spot dad so

230
00:10:53,260 --> 00:10:55,520
George sort solves the three hardest

231
00:10:55,520 --> 00:10:57,500
problems in computer science one sorting

232
00:10:57,500 --> 00:10:59,990
sucks I've already proven that web apps

233
00:10:59,990 --> 00:11:02,120
are slow I think a lot of the talks

234
00:11:02,120 --> 00:11:04,160
about performance at both CSS content

235
00:11:04,160 --> 00:11:06,980
AHS comp have shown that things get slow

236
00:11:06,980 --> 00:11:12,760
and also users aren't smart as us and um

237
00:11:12,760 --> 00:11:15,170
but like you're probably thinking like

238
00:11:15,170 --> 00:11:16,460
Jen you just said that there's like a

239
00:11:16,460 --> 00:11:18,650
million like algorithms but jorts or

240
00:11:18,650 --> 00:11:20,450
isn't a sorting algorithm it's a sorting

241
00:11:20,450 --> 00:11:27,710
tool set so let's take this complicated

242
00:11:27,710 --> 00:11:29,630
application as an example I have an

243
00:11:29,630 --> 00:11:31,700
array called my array what's those same

244
00:11:31,700 --> 00:11:33,770
three numbers which you'll probably

245
00:11:33,770 --> 00:11:36,260
encounter a lot in your apps we have a

246
00:11:36,260 --> 00:11:38,600
function that we want to call and all it

247
00:11:38,600 --> 00:11:40,910
does is it says this will alert sorted

248
00:11:40,910 --> 00:11:42,440
items and then it will go through each

249
00:11:42,440 --> 00:11:44,540
item and print it out and then we call

250
00:11:44,540 --> 00:11:45,380
our functions

251
00:11:45,380 --> 00:11:47,570
there's no sorting in this so it's super

252
00:11:47,570 --> 00:11:49,730
efficient but like let's say and I'm

253
00:11:49,730 --> 00:11:56,300
gonna do some live code in here look at

254
00:11:56,300 --> 00:11:57,740
all that was fast

255
00:11:57,740 --> 00:11:59,900
so first it's a little small but it'll

256
00:11:59,900 --> 00:12:01,670
say this will alert sorted items and

257
00:12:01,670 --> 00:12:06,230
then it's was one ten and seven that's

258
00:12:06,230 --> 00:12:08,570
not sorted like why didn't it sort well

259
00:12:08,570 --> 00:12:09,980
we didn't have the sorting function

260
00:12:09,980 --> 00:12:12,380
inside of it I was kind of hoping that

261
00:12:12,380 --> 00:12:14,660
my array would already come to me sorted

262
00:12:14,660 --> 00:12:19,150
and that's the problem it's embarrassing

263
00:12:19,150 --> 00:12:21,970
but like so if

264
00:12:21,970 --> 00:12:27,250
uh mr. DeMarco earlier gave a really

265
00:12:27,250 --> 00:12:29,439
interesting talk on algorithms as well

266
00:12:29,439 --> 00:12:32,199
and and I figured I'd throw some

267
00:12:32,199 --> 00:12:34,959
pseudocode and to impress you as well so

268
00:12:34,959 --> 00:12:37,120
would I look basically the concept of

269
00:12:37,120 --> 00:12:38,980
jour is if the array is sorted then

270
00:12:38,980 --> 00:12:41,319
awesome if not yell at the user because

271
00:12:41,319 --> 00:12:43,000
it's their responsibility to give a

272
00:12:43,000 --> 00:12:46,560
sorted array and so here it is in

273
00:12:46,560 --> 00:12:48,850
JavaScript so you just listen if else

274
00:12:48,850 --> 00:12:51,250
statement and you call George sort my

275
00:12:51,250 --> 00:12:54,579
array and if it is sorted then awesome

276
00:12:54,579 --> 00:12:56,379
if not then you just throw a jour error

277
00:12:56,379 --> 00:13:00,819
at them so using an app will finally be

278
00:13:00,819 --> 00:13:02,740
a two-way street it'll be really dynamic

279
00:13:02,740 --> 00:13:05,170
the users can interact by providing

280
00:13:05,170 --> 00:13:08,170
their own input that is sorted which is

281
00:13:08,170 --> 00:13:10,029
really awesome and it's actually not a

282
00:13:10,029 --> 00:13:12,370
new concept because - in two ways we're

283
00:13:12,370 --> 00:13:14,079
web 2.0 came from so this is like

284
00:13:14,079 --> 00:13:18,069
next-level stuff happening also your app

285
00:13:18,069 --> 00:13:20,470
will only work if the input is sorted so

286
00:13:20,470 --> 00:13:21,370
you don't have to worry about that

287
00:13:21,370 --> 00:13:24,610
embarrassment from my early example no

288
00:13:24,610 --> 00:13:27,250
sorting no problem so you're probably

289
00:13:27,250 --> 00:13:29,410
wondering what's under the hood of

290
00:13:29,410 --> 00:13:31,199
George Soros

291
00:13:31,199 --> 00:13:37,970
this is short-sword ladies and gentlemen

292
00:13:37,980 --> 00:13:41,410
joints art is a function it takes an

293
00:13:41,410 --> 00:13:44,259
array it sorts the array it compares it

294
00:13:44,259 --> 00:13:46,269
to the original one if they are the same

295
00:13:46,269 --> 00:13:49,209
it says true if they're not the same it

296
00:13:49,209 --> 00:13:52,340
returns false

297
00:13:52,350 --> 00:13:59,230
it's literally JavaScript it's not magic

298
00:13:59,230 --> 00:14:01,050
it's abstraction

299
00:14:01,050 --> 00:14:04,149
what is abstraction being a master's in

300
00:14:04,149 --> 00:14:09,249
computer science to know that so lot of

301
00:14:09,249 --> 00:14:11,259
people out there are gonna be like Oh

302
00:14:11,259 --> 00:14:13,600
Jen like technically you're still

303
00:14:13,600 --> 00:14:16,329
sorting and I'm a hater and one day I'm

304
00:14:16,329 --> 00:14:17,559
gonna chocolate ice cream on my dad

305
00:14:17,559 --> 00:14:19,869
weren't Neapolitan examples of a look I

306
00:14:19,869 --> 00:14:21,790
wrote short sort so you didn't have to

307
00:14:21,790 --> 00:14:24,220
so honestly you should be thanking me

308
00:14:24,220 --> 00:14:30,420
right now so you might be thinking like

309
00:14:30,420 --> 00:14:33,879
this has got to be a joke and you're all

310
00:14:33,879 --> 00:14:39,959
laughing but and let me put some music

311
00:14:39,959 --> 00:14:42,879
the satire have a professionally made

312
00:14:42,879 --> 00:14:46,600
logo I don't think so

313
00:14:46,600 --> 00:14:50,019
sorting algorithms don't have logos the

314
00:14:50,019 --> 00:14:52,679
satire of a professionally made website

315
00:14:52,679 --> 00:14:57,759
that's a real site let me take let me

316
00:14:57,759 --> 00:15:01,420
show you jor taught technology we have

317
00:15:01,420 --> 00:15:03,610
the logo up on top and this site has the

318
00:15:03,610 --> 00:15:05,499
three things that you need to look for

319
00:15:05,499 --> 00:15:12,829
in a website parallax

320
00:15:12,839 --> 00:15:18,850
Tech shadow and smooth scrolling to show

321
00:15:18,850 --> 00:15:23,740
off the parallax and as a bonus I

322
00:15:23,740 --> 00:15:26,230
embedded a gist so you can copy and

323
00:15:26,230 --> 00:15:32,529
paste the code so let's talk performance

324
00:15:32,529 --> 00:15:34,630
cuz that's really like the issue at hand

325
00:15:34,630 --> 00:15:39,130
here it can be on one line minified and

326
00:15:39,130 --> 00:15:40,990
you're probably thinking like Oh any

327
00:15:40,990 --> 00:15:43,000
code to be minified on one line but like

328
00:15:43,000 --> 00:15:49,300
my library minified is 30 lines it's

329
00:15:49,300 --> 00:15:51,490
super lame short sword is 4 kilobytes

330
00:15:51,490 --> 00:15:57,470
embers like more than 4 kilobytes so

331
00:15:57,480 --> 00:16:00,190
like you probably want to you're

332
00:16:00,190 --> 00:16:01,839
probably saying like let's see the j/s

333
00:16:01,839 --> 00:16:05,230
perf gen so here I have a snippet of

334
00:16:05,230 --> 00:16:07,300
code with sorting and just to show you

335
00:16:07,300 --> 00:16:09,100
that sorting is less efficient than not

336
00:16:09,100 --> 00:16:11,770
sorting with that same array we call

337
00:16:11,770 --> 00:16:13,450
sort and we alert the array and then

338
00:16:13,450 --> 00:16:16,480
this is the code without sorting one

339
00:16:16,480 --> 00:16:17,529
less line of code

340
00:16:17,529 --> 00:16:19,660
could you imagine sorting 5 million

341
00:16:19,660 --> 00:16:21,339
things that's like five million lines of

342
00:16:21,339 --> 00:16:23,250
code that you've just saved yourselves

343
00:16:23,250 --> 00:16:30,700
so here's a JSP 86% slower when you have

344
00:16:30,700 --> 00:16:32,680
code with sorting than you do without

345
00:16:32,680 --> 00:16:37,900
sorting 86% guess who was born 12 years

346
00:16:37,900 --> 00:16:44,070
before 1986 this guy

347
00:16:44,080 --> 00:16:47,720
so we need to spend more time sorting

348
00:16:47,720 --> 00:16:52,610
out our lives than we do our arrays need

349
00:16:52,610 --> 00:16:56,300
to spend more time Jordan so you're

350
00:16:56,300 --> 00:16:57,620
probably thinking like wow this is

351
00:16:57,620 --> 00:17:00,470
really groundbreaking stuff it's it's

352
00:17:00,470 --> 00:17:02,570
all alive for you to use today Gorge

353
00:17:02,570 --> 00:17:04,610
technology but what does that mean for

354
00:17:04,610 --> 00:17:06,350
the future of sorting what are we gonna

355
00:17:06,350 --> 00:17:08,180
do with all these algorithms can you

356
00:17:08,180 --> 00:17:10,280
throw algorithms in the garbage can you

357
00:17:10,280 --> 00:17:12,050
set them on fire do we have to go back

358
00:17:12,050 --> 00:17:15,110
to our past code or we're sorting and it

359
00:17:15,110 --> 00:17:18,410
you actively fix it all I don't know you

360
00:17:18,410 --> 00:17:21,440
can do whatever you want my main concern

361
00:17:21,440 --> 00:17:23,270
is what is the future of jorts sort and

362
00:17:23,270 --> 00:17:25,130
that's testing this I've been tested

363
00:17:25,130 --> 00:17:32,300
this at all so that is jorts sort you

364
00:17:32,300 --> 00:17:34,400
can see it all on georgia tech nology

