1
00:00:10,810 --> 00:00:14,720

yeah thanks before I start we seen some

2
00:00:14,720 --> 00:00:16,070
pretty amazing Talk's today already

3
00:00:16,070 --> 00:00:19,520
right I don't have any drinks for you

4
00:00:19,520 --> 00:00:24,529
and no robots oh cool yeah I see some

5
00:00:24,529 --> 00:00:28,580
some water would be nice but anyway so I

6
00:00:28,580 --> 00:00:30,650
do have something else just before we

7
00:00:30,650 --> 00:00:33,890
start because I brought my camera to

8
00:00:33,890 --> 00:00:37,130
yesterday's party and so I have a little

9
00:00:37,130 --> 00:00:39,920
sneak peek for you guys anyone hasn't

10
00:00:39,920 --> 00:00:53,400
knocked in there one you slept no wait

11
00:00:53,410 --> 00:00:57,670
damn it

12
00:00:57,680 --> 00:01:05,100
so it's to direct him that was some nice

13
00:01:05,100 --> 00:01:09,600
games I guess it's hard to see but it

14
00:01:09,600 --> 00:01:12,119
gets better once I managed to switch the

15
00:01:12,119 --> 00:01:22,649
video not sure the things i just copied

16
00:01:22,649 --> 00:01:24,630
the video into the browser window and

17
00:01:24,630 --> 00:01:35,399
now if it is stuck somehow i'm sick as I

18
00:01:35,399 --> 00:01:40,410
yeah just one more which I think was

19
00:01:40,410 --> 00:01:51,990
nice

20
00:01:52,000 --> 00:02:03,270
we turn on the lights sorry tom see here

21
00:02:03,280 --> 00:02:09,739
but yeah so we had a good time so did

22
00:02:09,739 --> 00:02:14,600
Tom and um now i'll restart my browser

23
00:02:14,600 --> 00:02:39,500
and start with the talk

24
00:02:39,510 --> 00:02:50,620
no too much

25
00:02:50,630 --> 00:02:55,430
sorry okay and then um so yeah let's get

26
00:02:55,430 --> 00:02:57,320
to the talk and let's call the start

27
00:02:57,320 --> 00:02:59,860
this talk is called not your unittest

28
00:02:59,860 --> 00:03:01,820
which means it's not about unit testing

29
00:03:01,820 --> 00:03:04,790
but I come to this in a second my name

30
00:03:04,790 --> 00:03:09,230
is Alex I'm a programmer and I do a lot

31
00:03:09,230 --> 00:03:11,420
of Ruby and also more and more

32
00:03:11,420 --> 00:03:14,900
JavaScript and I'm a big fan of actually

33
00:03:14,900 --> 00:03:18,500
uh just you know I work for and owned a

34
00:03:18,500 --> 00:03:20,180
company and the name caught up stream

35
00:03:20,180 --> 00:03:23,720
media and I also run a co-working space

36
00:03:23,720 --> 00:03:25,700
which many of you have seen already

37
00:03:25,700 --> 00:03:27,860
because that was the place other days

38
00:03:27,860 --> 00:03:30,080
come people went under days before the

39
00:03:30,080 --> 00:03:33,470
conference that office somewhere there

40
00:03:33,470 --> 00:03:37,160
so let's talk is about something called

41
00:03:37,160 --> 00:03:39,950
BDD with just the quick hands who knows

42
00:03:39,950 --> 00:03:52,930
what that is huh sorry ok so BDD is

43
00:03:52,930 --> 00:03:58,070
behavior driven development oh sorry

44
00:03:58,070 --> 00:04:02,360
you're a hard to and so yeah anyway so

45
00:04:02,360 --> 00:04:04,790
what is behavioral development met a lot

46
00:04:04,790 --> 00:04:07,640
of things do some some random quotes

47
00:04:07,640 --> 00:04:09,650
about it it's kind of a evolution of TDD

48
00:04:09,650 --> 00:04:11,720
which is test-driven development it's

49
00:04:11,720 --> 00:04:13,240
about getting the words right and

50
00:04:13,240 --> 00:04:15,050
communicating with the business side of

51
00:04:15,050 --> 00:04:17,989
things and writing software that matters

52
00:04:17,989 --> 00:04:20,959
and I'm so what does it all mean right I

53
00:04:20,959 --> 00:04:23,270
mean this is kind of the business side

54
00:04:23,270 --> 00:04:26,240
of the whole thing so it's all about

55
00:04:26,240 --> 00:04:29,060
coding or not just about coding but also

56
00:04:29,060 --> 00:04:31,580
about business but since we're a

57
00:04:31,580 --> 00:04:33,320
programming conference here i'm going to

58
00:04:33,320 --> 00:04:35,780
talk about the coding stuff and so the

59
00:04:35,780 --> 00:04:37,280
question here is what's in it for us

60
00:04:37,280 --> 00:04:40,000
code is not just for the business and

61
00:04:40,000 --> 00:04:42,890
what i want to show you today is a few

62
00:04:42,890 --> 00:04:46,030
things that we can we can benefit from

63
00:04:46,030 --> 00:04:49,570
BDD and that's you can improve your

64
00:04:49,570 --> 00:04:51,710
design process the way you design your

65
00:04:51,710 --> 00:04:55,130
software you can have less bugs in your

66
00:04:55,130 --> 00:04:56,870
software which i guess is always good

67
00:04:56,870 --> 00:05:00,169
and you can use some cool new tools with

68
00:05:00,169 --> 00:05:02,300
well then again have you with the other

69
00:05:02,300 --> 00:05:06,919
two so in December last year I started

70
00:05:06,919 --> 00:05:11,240
little side project side project called

71
00:05:11,240 --> 00:05:16,219
a robot which was intended to add me run

72
00:05:16,219 --> 00:05:17,870
my my co-working space because I hate

73
00:05:17,870 --> 00:05:20,090
accounting and all that stuff so I just

74
00:05:20,090 --> 00:05:21,529
wanted to make that a bit easier for me

75
00:05:21,529 --> 00:05:24,669
and I'm actually I need to switch my

76
00:05:24,669 --> 00:05:26,960
resolution again concert just isn't

77
00:05:26,960 --> 00:05:37,409
working here sorry

78
00:05:37,419 --> 00:05:43,010
that's the correct yep

79
00:05:43,020 --> 00:05:46,210
sorry about that

80
00:05:46,220 --> 00:05:48,710
and so I started that little project and

81
00:05:48,710 --> 00:05:51,980
I had a bunch of ideas which are bees so

82
00:05:51,980 --> 00:05:53,360
I wanted to like automate some

83
00:05:53,360 --> 00:05:56,480
accounting and other things and so how

84
00:05:56,480 --> 00:05:59,450
do i turn that into software right I

85
00:05:59,450 --> 00:06:02,630
just had some few ideas and how would I

86
00:06:02,630 --> 00:06:04,220
start and turn it into something that

87
00:06:04,220 --> 00:06:06,860
works and there's a few approaches to

88
00:06:06,860 --> 00:06:09,620
this one has called the functional

89
00:06:09,620 --> 00:06:12,170
specification document which kind of

90
00:06:12,170 --> 00:06:13,940
means you sit down for a few months and

91
00:06:13,940 --> 00:06:16,130
write some documentation about your

92
00:06:16,130 --> 00:06:18,860
software and then you at some point

93
00:06:18,860 --> 00:06:23,030
start coding according to the

94
00:06:23,030 --> 00:06:24,560
documentation but then that's outdated

95
00:06:24,560 --> 00:06:26,840
already and so let's called the

96
00:06:26,840 --> 00:06:28,190
waterfall model and that doesn't make a

97
00:06:28,190 --> 00:06:30,680
lot of sense to me also my company has

98
00:06:30,680 --> 00:06:32,630
the name edgell in it so I'm kind of not

99
00:06:32,630 --> 00:06:35,150
allowed to use it anyways and so there's

100
00:06:35,150 --> 00:06:37,160
another approach which is called inside

101
00:06:37,160 --> 00:06:40,970
out by the way the feature I'm

102
00:06:40,970 --> 00:06:42,410
discussing years now the payment

103
00:06:42,410 --> 00:06:44,660
tracking so co workers in the co-working

104
00:06:44,660 --> 00:06:46,460
space if you know don't know what its

105
00:06:46,460 --> 00:06:49,790
basis so people can rent a desk and then

106
00:06:49,790 --> 00:06:51,230
I pay for it every month and so I need

107
00:06:51,230 --> 00:06:53,480
to make sure they actually pay me and

108
00:06:53,480 --> 00:06:55,190
track who is paid me and who hasn't so

109
00:06:55,190 --> 00:06:57,710
that's kind of the thing we're going to

110
00:06:57,710 --> 00:07:01,520
develop now and so this inside-out is

111
00:07:01,520 --> 00:07:02,900
kind of program as favorite approach

112
00:07:02,900 --> 00:07:04,940
because I'm you get to do all the

113
00:07:04,940 --> 00:07:07,640
interesting stuff first so you kind of

114
00:07:07,640 --> 00:07:09,860
design your database schema if you have

115
00:07:09,860 --> 00:07:12,680
one or a few database replacement you

116
00:07:12,680 --> 00:07:14,270
can check out some for plugins and you

117
00:07:14,270 --> 00:07:16,280
know methods and all that stuff

118
00:07:16,280 --> 00:07:18,560
algorithms that really is kind of

119
00:07:18,560 --> 00:07:21,080
interesting program is right and so you

120
00:07:21,080 --> 00:07:25,100
could come up with a few models so like

121
00:07:25,100 --> 00:07:26,810
okay I'm going to need users and

122
00:07:26,810 --> 00:07:28,850
memberships and something in this

123
00:07:28,850 --> 00:07:30,680
application and you say okay I need some

124
00:07:30,680 --> 00:07:34,340
methods on those and you kind of start

125
00:07:34,340 --> 00:07:36,200
coding from the bottom you think okay I

126
00:07:36,200 --> 00:07:37,370
need this and descendants in this

127
00:07:37,370 --> 00:07:39,140
youngin I just start building up and

128
00:07:39,140 --> 00:07:41,120
when I'm done I just put a user

129
00:07:41,120 --> 00:07:48,899
interface on top

130
00:07:48,909 --> 00:07:52,969
the problem with that is that it might

131
00:07:52,969 --> 00:07:56,479
end up like this so there's a certain

132
00:07:56,479 --> 00:07:59,149
disconnect right to get my tanning

133
00:07:59,149 --> 00:08:02,659
better so you start from this this kind

134
00:08:02,659 --> 00:08:03,949
of description oh I need payment

135
00:08:03,949 --> 00:08:06,800
tracking which is way at the top or if

136
00:08:06,800 --> 00:08:08,239
you will from the left side of the

137
00:08:08,239 --> 00:08:09,860
bridge and then you have your

138
00:08:09,860 --> 00:08:11,209
implementation coming from the other

139
00:08:11,209 --> 00:08:14,529
side and then they kind of need to

140
00:08:14,529 --> 00:08:17,119
connect in the middle and you just hope

141
00:08:17,119 --> 00:08:19,550
that'll all work out but it's really

142
00:08:19,550 --> 00:08:21,319
hard to do this because you're working

143
00:08:21,319 --> 00:08:23,839
from the other side and so there's

144
00:08:23,839 --> 00:08:25,580
another approach you can do and that's

145
00:08:25,580 --> 00:08:27,589
called outside in and that's actually

146
00:08:27,589 --> 00:08:31,309
encouraged by BDD people and how it

147
00:08:31,309 --> 00:08:33,649
works is that you start with a feature

148
00:08:33,649 --> 00:08:37,789
description and that's kind of a it has

149
00:08:37,789 --> 00:08:41,329
a little formalized format and so how it

150
00:08:41,329 --> 00:08:44,060
looks as you stop with this kind of

151
00:08:44,060 --> 00:08:47,209
first describing the feature and sort of

152
00:08:47,209 --> 00:08:50,660
the business benefits and what it's

153
00:08:50,660 --> 00:08:52,310
supposed to do for your business and the

154
00:08:52,310 --> 00:08:55,100
business is there to make money and so

155
00:08:55,100 --> 00:08:58,459
the benefit should always kind of end up

156
00:08:58,459 --> 00:09:00,860
in making money or saving money for the

157
00:09:00,860 --> 00:09:03,949
business but that's the business side as

158
00:09:03,949 --> 00:09:05,209
I said so we're not going to worry about

159
00:09:05,209 --> 00:09:08,079
that too much instead we're starting

160
00:09:08,079 --> 00:09:11,899
with giving it some context and that

161
00:09:11,899 --> 00:09:13,790
works like this and so you're saying

162
00:09:13,790 --> 00:09:15,170
okay I want to check those payments now

163
00:09:15,170 --> 00:09:18,920
and suppose I have a new coworker and he

164
00:09:18,920 --> 00:09:21,410
hasn't paid me anything yet and then I

165
00:09:21,410 --> 00:09:23,269
say okay so in my system that I want to

166
00:09:23,269 --> 00:09:26,899
test now there's a co-working space and

167
00:09:26,899 --> 00:09:29,060
my software so i said this give them a

168
00:09:29,060 --> 00:09:30,860
run a co-working space co-op which is

169
00:09:30,860 --> 00:09:34,069
spacer on and then okay yeah i guess i

170
00:09:34,069 --> 00:09:35,660
should be locked into into some kind of

171
00:09:35,660 --> 00:09:38,980
management console so that i can can

172
00:09:38,980 --> 00:09:42,589
mark that person is paid or not paid and

173
00:09:42,589 --> 00:09:44,959
then I needed an example co-workers so

174
00:09:44,959 --> 00:09:48,920
we have Joe a year and this is kind of

175
00:09:48,920 --> 00:09:52,310
the context of my test case and next I'm

176
00:09:52,310 --> 00:09:55,329
going to need some event so what happens

177
00:09:55,329 --> 00:09:58,100
that looks like this so I say okay you

178
00:09:58,100 --> 00:10:00,019
there's a page or a list of

179
00:10:00,019 --> 00:10:02,239
coworker somewhere so I go to that list

180
00:10:02,239 --> 00:10:04,819
and i click on Joe's name and then I

181
00:10:04,819 --> 00:10:07,489
click on the current months which in

182
00:10:07,489 --> 00:10:10,339
this case is sep tember and I press

183
00:10:10,339 --> 00:10:12,709
payment received that's what I want the

184
00:10:12,709 --> 00:10:14,059
interaction with the software to be

185
00:10:14,059 --> 00:10:17,360
right and then at last I want some

186
00:10:17,360 --> 00:10:20,929
outcome and in this case that as soon as

187
00:10:20,929 --> 00:10:22,429
I first that button the page should say

188
00:10:22,429 --> 00:10:26,319
okay now he's paid me everything's cool

189
00:10:26,319 --> 00:10:32,110
and so that is I you start BDD with a

190
00:10:32,110 --> 00:10:35,089
high-level feature description that kind

191
00:10:35,089 --> 00:10:37,040
of describes what you want your software

192
00:10:37,040 --> 00:10:41,899
to do in natural language which is

193
00:10:41,899 --> 00:10:42,980
really nice because it's easy to

194
00:10:42,980 --> 00:10:46,549
understand and also as it happens to be

195
00:10:46,549 --> 00:10:49,970
this is a pretty nice starting point for

196
00:10:49,970 --> 00:10:53,779
our implementation because we can run

197
00:10:53,779 --> 00:10:57,259
this even though its natural language

198
00:10:57,259 --> 00:11:00,920
there's a tool called cucumber how many

199
00:11:00,920 --> 00:11:04,819
people know click amber you're not too

200
00:11:04,819 --> 00:11:10,399
many good Sookie comer you can see it

201
00:11:10,399 --> 00:11:12,949
here ready so the black thing is

202
00:11:12,949 --> 00:11:15,709
supposed to be a shell so I typed in

203
00:11:15,709 --> 00:11:19,490
cucumber and then this features / trike

204
00:11:19,490 --> 00:11:21,379
payments feature that's the file i put

205
00:11:21,379 --> 00:11:23,660
my description in and when i run this

206
00:11:23,660 --> 00:11:26,209
it's going to tell me Oh undefined step

207
00:11:26,209 --> 00:11:29,240
and it gives me some of this example

208
00:11:29,240 --> 00:11:32,149
down there which i can paste into my

209
00:11:32,149 --> 00:11:35,990
editor right here and so what this does

210
00:11:35,990 --> 00:11:39,980
is it Maps natural language to code and

211
00:11:39,980 --> 00:11:42,319
as you can see here so it has given and

212
00:11:42,319 --> 00:11:43,910
unless a regular expression that matches

213
00:11:43,910 --> 00:11:47,029
I run a co-working space and then quotes

214
00:11:47,029 --> 00:11:50,649
and a matching group and cucumber will

215
00:11:50,649 --> 00:11:53,089
match every line and that in that

216
00:11:53,089 --> 00:11:55,819
feature a description to those steps and

217
00:11:55,819 --> 00:12:01,339
then it'll pass the matching groups into

218
00:12:01,339 --> 00:12:03,439
the function i give here so here it says

219
00:12:03,439 --> 00:12:05,779
function name so i get the name which in

220
00:12:05,779 --> 00:12:08,179
this case would be co-op and then i can

221
00:12:08,179 --> 00:12:10,450
run some code so in this case i want to

222
00:12:10,450 --> 00:12:11,860
if my co-working space in my database

223
00:12:11,860 --> 00:12:14,920
that I can set up my test scenario with

224
00:12:14,920 --> 00:12:18,820
my software and then next step I'm

225
00:12:18,820 --> 00:12:21,820
logged in so I need to do some set some

226
00:12:21,820 --> 00:12:24,040
cookie or something whichever my web

227
00:12:24,040 --> 00:12:26,560
framework prize or actually go and fill

228
00:12:26,560 --> 00:12:35,540
out the form or do basic auth whatever

229
00:12:35,550 --> 00:12:39,520
it's another step given a co-worker so I

230
00:12:39,520 --> 00:12:43,110
saved that guy to the database as well

231
00:12:43,110 --> 00:12:47,320
and then s also what's this line when I

232
00:12:47,320 --> 00:12:49,060
go to the list of co-workers and that's

233
00:12:49,060 --> 00:12:51,130
actually a predefined step in cucumber

234
00:12:51,130 --> 00:12:54,340
and you can map sort of descriptions of

235
00:12:54,340 --> 00:12:57,370
pages so the list of coworkers and you

236
00:12:57,370 --> 00:12:59,860
can map that to an actual URL in your

237
00:12:59,860 --> 00:13:02,740
application so in this case I'm at the

238
00:13:02,740 --> 00:13:05,320
list of coworkers to look a host /

239
00:13:05,320 --> 00:13:09,240
co-workers and so run run it again and

240
00:13:09,240 --> 00:13:11,860
it looks a bit better because now we are

241
00:13:11,860 --> 00:13:16,510
in red green land and we can see a few

242
00:13:16,510 --> 00:13:18,340
things are working already so I can I

243
00:13:18,340 --> 00:13:20,710
kind of create that co-working space and

244
00:13:20,710 --> 00:13:22,540
I'm like in now and there's this

245
00:13:22,540 --> 00:13:27,160
coworker Joe and then at the fourth line

246
00:13:27,160 --> 00:13:30,340
it says I can't go to that is a

247
00:13:30,340 --> 00:13:31,360
coworker's because it doesn't exist

248
00:13:31,360 --> 00:13:33,940
right and so what we have here now is a

249
00:13:33,940 --> 00:13:36,400
failing test which is awesome because

250
00:13:36,400 --> 00:13:41,350
now we can do TDD s / v DD and we do

251
00:13:41,350 --> 00:13:43,510
that by kind of moving and now remember

252
00:13:43,510 --> 00:13:45,010
we're doing outside in so we're on the

253
00:13:45,010 --> 00:13:47,530
outside now we're moving one step in and

254
00:13:47,530 --> 00:13:50,290
one step in in this case would be kind

255
00:13:50,290 --> 00:13:53,260
of the HTTP layer interface so so kind

256
00:13:53,260 --> 00:13:56,710
of your web app controller whatever

257
00:13:56,710 --> 00:14:00,070
level and so since we're testing we're

258
00:14:00,070 --> 00:14:01,540
not implementing that yet where were

259
00:14:01,540 --> 00:14:05,170
writing a you test case and this is our

260
00:14:05,170 --> 00:14:09,190
pseudocode so but it should kind of work

261
00:14:09,190 --> 00:14:11,260
like this right um so you could use

262
00:14:11,260 --> 00:14:13,780
something like Val stairs or jasmine

263
00:14:13,780 --> 00:14:18,250
also to write this test and so now will

264
00:14:18,250 --> 00:14:20,960
encode level and we're writing a test so

265
00:14:20,960 --> 00:14:22,790
it says here it should load all the

266
00:14:22,790 --> 00:14:26,390
co-workers so we are kind of yeah just

267
00:14:26,390 --> 00:14:28,010
implementing some some tests that a

268
00:14:28,010 --> 00:14:29,750
checks if the database is being asked

269
00:14:29,750 --> 00:14:31,550
for the co-workers then there's another

270
00:14:31,550 --> 00:14:34,520
one that checks that the response that

271
00:14:34,520 --> 00:14:37,490
comes back is actually a success so the

272
00:14:37,490 --> 00:14:40,880
state is 200 and then we have that and

273
00:14:40,880 --> 00:14:43,310
then we implement that which will

274
00:14:43,310 --> 00:14:45,530
probably look something like this if

275
00:14:45,530 --> 00:14:48,140
you're using a space or something else

276
00:14:48,140 --> 00:14:51,770
not really that interesting here and so

277
00:14:51,770 --> 00:14:57,050
we run that again and so yeah well once

278
00:14:57,050 --> 00:14:59,420
again on that list of coworkers and

279
00:14:59,420 --> 00:15:01,250
still doesn't work we have the page now

280
00:15:01,250 --> 00:15:02,840
but there's them some around the

281
00:15:02,840 --> 00:15:05,480
database so what to fix that as well and

282
00:15:05,480 --> 00:15:08,450
there's a view missing in the database

283
00:15:08,450 --> 00:15:10,100
so I'm I need to write a test for that

284
00:15:10,100 --> 00:15:13,100
as well run it again and now that works

285
00:15:13,100 --> 00:15:16,610
and then the next step failed so i want

286
00:15:16,610 --> 00:15:18,320
to click on Joe's name and that doesn't

287
00:15:18,320 --> 00:15:20,540
work and so I keep going right i mean

288
00:15:20,540 --> 00:15:23,830
you get the idea it's just normal TDD

289
00:15:23,830 --> 00:15:32,150
test fail pass and so on so yeah that is

290
00:15:32,150 --> 00:15:34,010
that's kind of the outside-in thing so

291
00:15:34,010 --> 00:15:36,740
you start with the feature description

292
00:15:36,740 --> 00:15:38,690
you describe what you want your software

293
00:15:38,690 --> 00:15:40,700
to do oh oh you want to interact with it

294
00:15:40,700 --> 00:15:42,830
and when you've got that it's pretty

295
00:15:42,830 --> 00:15:44,540
much filling out the blanks right you're

296
00:15:44,540 --> 00:15:47,120
just running the tests and it tells you

297
00:15:47,120 --> 00:15:49,310
what to do next oh this isn't working ok

298
00:15:49,310 --> 00:15:53,480
right it has for it fix it next and also

299
00:15:53,480 --> 00:15:55,340
what's pretty cool is that you know when

300
00:15:55,340 --> 00:15:57,140
you're done because as soon as

301
00:15:57,140 --> 00:16:00,010
everything's green you can stop coding

302
00:16:00,010 --> 00:16:03,080
instead of just keep working on and on

303
00:16:03,080 --> 00:16:06,410
and on and just adding stuff you have a

304
00:16:06,410 --> 00:16:09,050
clear goal where to go all right and

305
00:16:09,050 --> 00:16:11,870
when you're done and so what that means

306
00:16:11,870 --> 00:16:13,520
is that you're the design you're going

307
00:16:13,520 --> 00:16:15,740
to come up with is probably a very

308
00:16:15,740 --> 00:16:18,980
simple solution that just does what the

309
00:16:18,980 --> 00:16:22,920
future describes are not anything else

310
00:16:22,930 --> 00:16:26,900
also a nice side effect of that is that

311
00:16:26,900 --> 00:16:28,340
you have a pretty good test coverage

312
00:16:28,340 --> 00:16:31,560
since you're writing your test first

313
00:16:31,560 --> 00:16:34,890
you're literally literally not writing

314
00:16:34,890 --> 00:16:37,770
any untested code so I was a failing

315
00:16:37,770 --> 00:16:41,000
test before you're implementing it and

316
00:16:41,000 --> 00:16:43,680
so you also have those kind of multiple

317
00:16:43,680 --> 00:16:45,420
levels of confidence in your code

318
00:16:45,420 --> 00:16:47,460
because you still have those unit tests

319
00:16:47,460 --> 00:16:49,740
that you know from from traditional TDD

320
00:16:49,740 --> 00:16:52,320
by the way how many people here do tests

321
00:16:52,320 --> 00:17:05,880
first f you okay so yeah so you have

322
00:17:05,880 --> 00:17:07,770
those if you do it and then you also

323
00:17:07,770 --> 00:17:09,420
have these kind of high level tests as

324
00:17:09,420 --> 00:17:11,579
well these cucumbers and Aereo's and

325
00:17:11,579 --> 00:17:13,770
that tell you that you're different

326
00:17:13,770 --> 00:17:15,480
layers still work together because I

327
00:17:15,480 --> 00:17:17,280
mean a unit has only tests like one

328
00:17:17,280 --> 00:17:19,110
method of one object but what you really

329
00:17:19,110 --> 00:17:21,959
need if you have like a spec that web

330
00:17:21,959 --> 00:17:23,910
apps have you need to make sure that

331
00:17:23,910 --> 00:17:26,040
your different layers to fit together so

332
00:17:26,040 --> 00:17:28,920
yeah the database maybe observer and

333
00:17:28,920 --> 00:17:31,350
then HTML and client-side code and all

334
00:17:31,350 --> 00:17:35,370
that I'm just getting back to this

335
00:17:35,370 --> 00:17:43,110
example that we saw here you might have

336
00:17:43,110 --> 00:17:45,570
noticed we're clicking on a link here

337
00:17:45,570 --> 00:17:50,970
and so how does it do that right it

338
00:17:50,970 --> 00:17:55,710
clicks on links so it can and so the

339
00:17:55,710 --> 00:17:58,620
answer how that works as there's a bunch

340
00:17:58,620 --> 00:18:01,400
of cool tools now so we're at the next

341
00:18:01,400 --> 00:18:04,110
section of my talk and those tools are

342
00:18:04,110 --> 00:18:07,560
or can be these so first of all what you

343
00:18:07,560 --> 00:18:10,010
can do of course is just parse HTML

344
00:18:10,010 --> 00:18:14,820
using some XML parser find the link and

345
00:18:14,820 --> 00:18:19,140
then pass out the hof and do that what

346
00:18:19,140 --> 00:18:20,970
you can also do is use a headless

347
00:18:20,970 --> 00:18:24,630
browser like for example htmlunit that

348
00:18:24,630 --> 00:18:27,690
is a written in java and it's sort of a

349
00:18:27,690 --> 00:18:30,660
complete browser without the GUI so you

350
00:18:30,660 --> 00:18:32,190
can run it from the shell and tell it

351
00:18:32,190 --> 00:18:36,690
what you do and it works kind of well it

352
00:18:36,690 --> 00:18:40,320
has a few quirks and bugs in but you can

353
00:18:40,320 --> 00:18:41,730
work with that and if that doesn't work

354
00:18:41,730 --> 00:18:43,160
or you need extra

355
00:18:43,160 --> 00:18:46,730
our extra testing awesomeness you can

356
00:18:46,730 --> 00:18:50,150
actually use a real browser for example

357
00:18:50,150 --> 00:18:54,170
selenium is a tool that allows you to

358
00:18:54,170 --> 00:18:57,380
run or to script browsers behavior so

359
00:18:57,380 --> 00:19:00,530
you can tell a browser from your test

360
00:19:00,530 --> 00:19:02,900
what you do click on that link hover

361
00:19:02,900 --> 00:19:05,840
over here do that and it'll do that and

362
00:19:05,840 --> 00:19:08,470
you can run a surgeon's against that and

363
00:19:08,470 --> 00:19:14,120
yeah test your app and there's a little

364
00:19:14,120 --> 00:19:16,550
problem with these tools are the most

365
00:19:16,550 --> 00:19:18,110
sophisticated they get that would slower

366
00:19:18,110 --> 00:19:19,910
it is so running a selenium test takes

367
00:19:19,910 --> 00:19:24,320
ages versus just passing HTML obviously

368
00:19:24,320 --> 00:19:26,420
is much faster because it's just in

369
00:19:26,420 --> 00:19:30,290
process right on the other hand you get

370
00:19:30,290 --> 00:19:32,330
much more features if you're running a

371
00:19:32,330 --> 00:19:34,250
real browser because you can also test

372
00:19:34,250 --> 00:19:36,620
for browser compatibility issues and

373
00:19:36,620 --> 00:19:38,420
that kind of stuff if you're using that

374
00:19:38,420 --> 00:19:41,570
and if you're only using that headless

375
00:19:41,570 --> 00:19:45,080
browser it's just well it's not the real

376
00:19:45,080 --> 00:19:47,180
thing right so if the reader browser may

377
00:19:47,180 --> 00:19:48,460
have to be different from this one and

378
00:19:48,460 --> 00:19:53,330
your test one catch it and so you kind

379
00:19:53,330 --> 00:19:54,500
of want to use these three altogether

380
00:19:54,500 --> 00:19:56,510
depending on which scenario we have you

381
00:19:56,510 --> 00:19:59,030
if you have a text you need to use at

382
00:19:59,030 --> 00:20:00,620
least the headless browser if you just

383
00:20:00,620 --> 00:20:02,990
have static HTML you can you see in the

384
00:20:02,990 --> 00:20:06,290
inline HTML parser and so the good news

385
00:20:06,290 --> 00:20:09,740
is there is a tool called capybara how

386
00:20:09,740 --> 00:20:14,510
many people know that okay so capybara

387
00:20:14,510 --> 00:20:24,710
is pretty cool because it allows you so

388
00:20:24,710 --> 00:20:26,990
the tool to run all these others so it's

389
00:20:26,990 --> 00:20:28,970
kind of an abstraction that runs all

390
00:20:28,970 --> 00:20:32,750
these inside of cucumber the downside

391
00:20:32,750 --> 00:20:34,220
for you guys is that it's written in

392
00:20:34,220 --> 00:20:38,290
Ruby if that is a problem for for anyone

393
00:20:38,290 --> 00:20:41,600
so the step definitions that i showed

394
00:20:41,600 --> 00:20:43,820
you actually are not really true because

395
00:20:43,820 --> 00:20:45,380
you're going to be writing ruby and

396
00:20:45,380 --> 00:20:49,160
those which looks a bit different it

397
00:20:49,160 --> 00:20:52,850
should be readable right and so yeah

398
00:20:52,850 --> 00:20:55,030
what you can do is just

399
00:20:55,030 --> 00:20:58,960
um tag the scenario here you can see at

400
00:20:58,960 --> 00:21:03,610
javascript and then fiddle run in a

401
00:21:03,610 --> 00:21:07,540
browser and so yeah full psych testing

402
00:21:07,540 --> 00:21:09,280
which means you can test anything you

403
00:21:09,280 --> 00:21:10,930
want client-side server site as a matter

404
00:21:10,930 --> 00:21:15,340
the app is well tested and you have no

405
00:21:15,340 --> 00:21:19,890
more bugs of course at least not so many

406
00:21:19,890 --> 00:21:24,100
so back to my little project I was lucky

407
00:21:24,100 --> 00:21:26,230
man so my initial idea was I would be

408
00:21:26,230 --> 00:21:28,570
spending about four weeks on it cuz i

409
00:21:28,570 --> 00:21:30,340
was just using it for myself to make my

410
00:21:30,340 --> 00:21:32,320
own life easier right and so it would be

411
00:21:32,320 --> 00:21:34,330
really simple and I wouldn't add much

412
00:21:34,330 --> 00:21:37,450
and would be cool turns out I was

413
00:21:37,450 --> 00:21:40,870
totally wrong on that cuz we started

414
00:21:40,870 --> 00:21:42,250
offering that to other spaces as a

415
00:21:42,250 --> 00:21:45,580
service and instead of four weeks and

416
00:21:45,580 --> 00:21:47,440
not eight months almost full time and

417
00:21:47,440 --> 00:21:49,330
that and we've had a tons of new

418
00:21:49,330 --> 00:21:51,550
features and had to change some designs

419
00:21:51,550 --> 00:21:53,910
and then swapped out code code and the

420
00:21:53,910 --> 00:21:58,600
the code base and so we drew a lot

421
00:21:58,600 --> 00:22:01,420
bigger than it was intended to be and

422
00:22:01,420 --> 00:22:04,750
for that kind of changing software unit

423
00:22:04,750 --> 00:22:05,770
tests don't really help you anymore

424
00:22:05,770 --> 00:22:09,370
because I mean you still need them but

425
00:22:09,370 --> 00:22:11,590
as I said you're not you're not covering

426
00:22:11,590 --> 00:22:14,080
the interaction between your layers and

427
00:22:14,080 --> 00:22:16,060
those tests so if you're changing my

428
00:22:16,060 --> 00:22:18,190
lair the unit tests on that layer are

429
00:22:18,190 --> 00:22:19,510
still working and also on the others

430
00:22:19,510 --> 00:22:21,520
what your software's are broken so you

431
00:22:21,520 --> 00:22:24,430
still need to test that and so what you

432
00:22:24,430 --> 00:22:28,930
really need is a field of cucumbers AKA

433
00:22:28,930 --> 00:22:32,320
cucumber test suite and so the advantage

434
00:22:32,320 --> 00:22:34,120
that you get here is that it's totally

435
00:22:34,120 --> 00:22:35,410
implementation independence in the

436
00:22:35,410 --> 00:22:37,660
sexual language that means it's very

437
00:22:37,660 --> 00:22:41,170
stable you can literally literally swept

438
00:22:41,170 --> 00:22:43,050
swap out your entire code base and

439
00:22:43,050 --> 00:22:45,760
replace it with something else and those

440
00:22:45,760 --> 00:22:48,130
tests are still the same which means you

441
00:22:48,130 --> 00:22:50,440
can run the new software against the

442
00:22:50,440 --> 00:22:52,030
same test and so make sure that you

443
00:22:52,030 --> 00:22:54,640
didn't break anything and so that was

444
00:22:54,640 --> 00:22:57,390
pretty cool for that kind of stuff um

445
00:22:57,390 --> 00:23:01,810
yeah it's a huge safety net three

446
00:23:01,810 --> 00:23:04,530
minutes okay so big safety net and

447
00:23:04,530 --> 00:23:06,360
my character effect or everything I need

448
00:23:06,360 --> 00:23:08,750
and this way I can keep my coat clean

449
00:23:08,750 --> 00:23:11,040
extensible maintainable that wouldn't

450
00:23:11,040 --> 00:23:12,450
have been possible without those tests I

451
00:23:12,450 --> 00:23:14,190
would keep breaking stuff again and

452
00:23:14,190 --> 00:23:16,530
again and so on this way I must have a

453
00:23:16,530 --> 00:23:19,170
nice picture yeah I can avoid the Aggies

454
00:23:19,170 --> 00:23:23,010
spaghetti monster I need to be quick now

455
00:23:23,010 --> 00:23:28,680
so M tools just to recap cucumber allows

456
00:23:28,680 --> 00:23:30,210
you to write tests a natural language

457
00:23:30,210 --> 00:23:32,250
and any right of step definitions which

458
00:23:32,250 --> 00:23:34,860
is to map the natural language to the

459
00:23:34,860 --> 00:23:37,560
implementation capybara is a written

460
00:23:37,560 --> 00:23:39,600
Ruby allows you to drive all these tools

461
00:23:39,600 --> 00:23:41,790
I can run your tests and different

462
00:23:41,790 --> 00:23:43,320
environments from browsers to just

463
00:23:43,320 --> 00:23:46,340
impresses whatever you want you can use

464
00:23:46,340 --> 00:23:50,070
those kind of BDD unit testing tools

465
00:23:50,070 --> 00:23:53,280
like those yes to test your code on a

466
00:23:53,280 --> 00:23:57,300
unit level and there are three main

467
00:23:57,300 --> 00:23:59,670
benefits from doing this first of all

468
00:23:59,670 --> 00:24:01,410
you have this outside in approach which

469
00:24:01,410 --> 00:24:04,860
means it drives the design process which

470
00:24:04,860 --> 00:24:06,570
makes a design simpler and it helps you

471
00:24:06,570 --> 00:24:09,150
to focus on what's important and what

472
00:24:09,150 --> 00:24:10,800
you need and when you're done and you

473
00:24:10,800 --> 00:24:12,750
know that you have that massive test

474
00:24:12,750 --> 00:24:17,430
suit which is great and only also it's

475
00:24:17,430 --> 00:24:19,380
just not unit test but also these

476
00:24:19,380 --> 00:24:21,570
cucumber test that tests your your

477
00:24:21,570 --> 00:24:25,590
layers in the interactions yeah what I

478
00:24:25,590 --> 00:24:27,300
just said and also these tools allow you

479
00:24:27,300 --> 00:24:28,440
to test the whole stack including

480
00:24:28,440 --> 00:24:30,150
client-side JavaScript source ID

481
00:24:30,150 --> 00:24:34,860
everything that gives you the confidence

482
00:24:34,860 --> 00:24:36,900
to refactor your code so you can keep it

483
00:24:36,900 --> 00:24:40,170
clean and avoid the spaghetti monster

484
00:24:40,170 --> 00:24:45,660
and that's it pretty much things how

485
00:24:45,660 --> 00:24:50,850
much time I Drive left it's not over

486
00:24:50,850 --> 00:24:55,530
yeah so anyway um thanks that's my talk

487
00:24:55,530 --> 00:24:57,450
that's a bunch of things and also this

488
00:24:57,450 --> 00:24:59,340
one on the bottom it's an actual open

489
00:24:59,340 --> 00:25:00,450
source project where you can see all

490
00:25:00,450 --> 00:25:02,490
that really works got them was a bit

491
00:25:02,490 --> 00:25:09,500
upside right now question what

492
00:25:09,510 --> 00:25:16,600
written that's what the no I didn't

493
00:25:16,600 --> 00:25:22,270
paint that that was her anyway and since

494
00:25:22,270 --> 00:25:23,520
I'm running out of time one last thing

495
00:25:23,520 --> 00:25:28,780
who feels like this honestly okay come

496
00:25:28,780 --> 00:25:32,260
on know if you do just one piece of

497
00:25:32,260 --> 00:25:34,630
advice for you stop writing shitty test

498
00:25:34,630 --> 00:25:36,040
that's the only way you're going to

499
00:25:36,040 --> 00:25:38,050
start testing you know never going to

500
00:25:38,050 --> 00:25:39,640
start being good at it from the start

501
00:25:39,640 --> 00:25:42,010
just write it they're gonna suck delete

502
00:25:42,010 --> 00:25:44,020
them write better tests get better at it

