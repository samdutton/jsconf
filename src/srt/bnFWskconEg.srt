1
00:00:38,640 --> 00:00:42,790

hello good morning a little early for

2
00:00:42,790 --> 00:00:44,170
those of us who came from the west coast

3
00:00:44,170 --> 00:00:46,720
or further timezone so thank you for all

4
00:00:46,720 --> 00:00:49,540
being here this is jas comp if you're

5
00:00:49,540 --> 00:00:51,850
not sure if you're not in not supposed

6
00:00:51,850 --> 00:00:53,079
to be in Jas calm please leave now

7
00:00:53,079 --> 00:00:54,880
there's the door you still have time to

8
00:00:54,880 --> 00:00:57,130
get out before we unleash the drones too

9
00:00:57,130 --> 00:01:00,370
late so I am dead program in the real

10
00:01:00,370 --> 00:01:01,989
world my name is ron evans but that's

11
00:01:01,989 --> 00:01:04,600
not very important right now I'm the

12
00:01:04,600 --> 00:01:07,659
ringleader of hybrid group so this other

13
00:01:07,659 --> 00:01:10,420
guy here is a DS ankush also known as

14
00:01:10,420 --> 00:01:12,280
Adrian's ankush in the real world but

15
00:01:12,280 --> 00:01:14,470
most interestingly he's the serious

16
00:01:14,470 --> 00:01:16,600
programming guy at hybrid group so that

17
00:01:16,600 --> 00:01:18,250
means he does all the work and I take

18
00:01:18,250 --> 00:01:21,310
all the credit which is nice that's a

19
00:01:21,310 --> 00:01:24,190
joke or is it we'll discuss that later

20
00:01:24,190 --> 00:01:26,860
it's about so we're with the hybrid

21
00:01:26,860 --> 00:01:28,210
group were a software development

22
00:01:28,210 --> 00:01:30,070
company based in Los Angeles California

23
00:01:30,070 --> 00:01:33,159
home of the flying space robots that is

24
00:01:33,159 --> 00:01:34,960
not a joke if you're a fan of either the

25
00:01:34,960 --> 00:01:36,850
jet propulsion laboratory or SpaceX you

26
00:01:36,850 --> 00:01:38,549
know I'm not actually making this up

27
00:01:38,549 --> 00:01:40,960
we're also the creators of kids Ruby

28
00:01:40,960 --> 00:01:43,900
which is an award-winning free and open

29
00:01:43,900 --> 00:01:45,670
source tool to teach kids programming

30
00:01:45,670 --> 00:01:48,490
but that's not very important we're here

31
00:01:48,490 --> 00:01:54,490
to talk about javascript robotics this

32
00:01:54,490 --> 00:01:57,580
is Maria I thought was a lecturer but I

33
00:01:57,580 --> 00:01:59,710
was confusing my mythologies amarilla

34
00:01:59,710 --> 00:02:01,810
she's the leader of a robot proletarian

35
00:02:01,810 --> 00:02:03,400
revolution but that's a whole separate

36
00:02:03,400 --> 00:02:07,119
talk let's talk about that the future is

37
00:02:07,119 --> 00:02:10,689
already here but it's not very evenly

38
00:02:10,689 --> 00:02:13,060
distributed at least that's what the

39
00:02:13,060 --> 00:02:15,340
author and futurist william gibson's

40
00:02:15,340 --> 00:02:17,950
it's really true isn't it when was the

41
00:02:17,950 --> 00:02:19,390
last time you went to an apple store you

42
00:02:19,390 --> 00:02:21,879
can buy drones there you can even buy

43
00:02:21,879 --> 00:02:26,290
robots at best buy there is a lot of

44
00:02:26,290 --> 00:02:29,950
amazing hardware happening but the

45
00:02:29,950 --> 00:02:31,900
software has not really kept up with the

46
00:02:31,900 --> 00:02:33,970
hardware even though you can buy all

47
00:02:33,970 --> 00:02:35,610
these cool and interesting devices

48
00:02:35,610 --> 00:02:38,260
there's no easy way to hook them all up

49
00:02:38,260 --> 00:02:40,150
to do something useful that's why we

50
00:02:40,150 --> 00:02:44,410
created Cylon jas Cylon Jas is a

51
00:02:44,410 --> 00:02:47,349
JavaScript framework for robotics

52
00:02:47,349 --> 00:02:49,810
physical computing and the Internet of

53
00:02:49,810 --> 00:02:52,209
Things or as i like to call it the real

54
00:02:52,209 --> 00:02:54,010
world web except that doesn't flow off

55
00:02:54,010 --> 00:02:56,680
the tongue so it supports multiple

56
00:02:56,680 --> 00:02:59,349
hardware devices different hardware

57
00:02:59,349 --> 00:03:01,840
devices and multiple different hardware

58
00:03:01,840 --> 00:03:05,709
devices at the same time so cool this is

59
00:03:05,709 --> 00:03:07,569
all thanks to the amazing concurrency

60
00:03:07,569 --> 00:03:10,150
that we can have via nodejs and the v8

61
00:03:10,150 --> 00:03:13,780
engine so Cylon j/s makes programming

62
00:03:13,780 --> 00:03:18,220
devices as easy as web development well

63
00:03:18,220 --> 00:03:20,049
you're going web development easy yes it

64
00:03:20,049 --> 00:03:22,569
is really easy compared to the sad old

65
00:03:22,569 --> 00:03:26,930
days of the 90s when we all use gopher

66
00:03:26,940 --> 00:03:29,019
thank you thank you for the history

67
00:03:29,019 --> 00:03:33,340
buffs so what programming devices has

68
00:03:33,340 --> 00:03:35,769
just been really too hard and so Cylon

69
00:03:35,769 --> 00:03:37,269
jess is a framework designed to make

70
00:03:37,269 --> 00:03:39,340
that as easy as web applications are

71
00:03:39,340 --> 00:03:42,940
today so it has a built-in API because

72
00:03:42,940 --> 00:03:44,620
of course without an API you can't

73
00:03:44,620 --> 00:03:45,849
program your internets over the

74
00:03:45,849 --> 00:03:47,530
intertubes and that's no good you need

75
00:03:47,530 --> 00:03:50,139
robotic internet control devices right

76
00:03:50,139 --> 00:03:53,650
it has test-driven robotics built-in we

77
00:03:53,650 --> 00:03:55,060
think this is really important I know

78
00:03:55,060 --> 00:03:57,489
that some people claim TDD is dead I

79
00:03:57,489 --> 00:04:00,340
think they're a little confused if

80
00:04:00,340 --> 00:04:03,370
Toyota for example yes I own Prius if

81
00:04:03,370 --> 00:04:04,930
Toyota they have only used test-driven

82
00:04:04,930 --> 00:04:06,730
robotics as part of their brake system

83
00:04:06,730 --> 00:04:11,500
just imagine if GE or GM you know GM

84
00:04:11,500 --> 00:04:13,299
with their ignition system I mean

85
00:04:13,299 --> 00:04:15,819
there's a lot of examples where people

86
00:04:15,819 --> 00:04:17,289
do hardware based development and their

87
00:04:17,289 --> 00:04:19,720
idea of testing is flip on the switch

88
00:04:19,720 --> 00:04:22,000
and then step back hoping that it

89
00:04:22,000 --> 00:04:24,640
doesn't bite you on the way it's kind of

90
00:04:24,640 --> 00:04:26,530
dangerous so test-driven robotics and

91
00:04:26,530 --> 00:04:28,870
the command line interface

92
00:04:28,870 --> 00:04:31,780
because CLI is the new API you don't

93
00:04:31,780 --> 00:04:34,030
want to be using GUI tools to program

94
00:04:34,030 --> 00:04:35,380
your devices or they get them started

95
00:04:35,380 --> 00:04:37,420
you want to be able to use a command

96
00:04:37,420 --> 00:04:38,860
line interface to do all the normal

97
00:04:38,860 --> 00:04:41,050
things that you would do fact we have a

98
00:04:41,050 --> 00:04:43,540
name for this we call it robot ops it's

99
00:04:43,540 --> 00:04:45,670
DevOps for robotics we have a whole

100
00:04:45,670 --> 00:04:47,440
separate website for this at robot ops

101
00:04:47,440 --> 00:04:50,470
com our CLI is actually a separate set

102
00:04:50,470 --> 00:04:52,060
of tools from our robotics framework

103
00:04:52,060 --> 00:04:53,920
it's called Gort you can check that out

104
00:04:53,920 --> 00:04:56,620
at Gortat I oh so Gortat I 0 for the CLI

105
00:04:56,620 --> 00:04:59,830
tools robot ops com for DevOps for

106
00:04:59,830 --> 00:05:02,410
robotics but let's get to the actual

107
00:05:02,410 --> 00:05:03,940
demo you guys ready to see some real

108
00:05:03,940 --> 00:05:08,890
robotic devices yeah oh hell yeah so

109
00:05:08,890 --> 00:05:11,130
we're going to start with the canonical

110
00:05:11,130 --> 00:05:14,530
microcontroller the Arduino so the

111
00:05:14,530 --> 00:05:16,540
Arduino is a very very simple

112
00:05:16,540 --> 00:05:18,100
microcontroller you can buy them

113
00:05:18,100 --> 00:05:20,350
everywhere radioshack even sells them

114
00:05:20,350 --> 00:05:22,690
yes the shack is back if you need parts

115
00:05:22,690 --> 00:05:25,810
go there so here's a very simple example

116
00:05:25,810 --> 00:05:29,290
of a Cylon program so the first thing we

117
00:05:29,290 --> 00:05:32,950
do is we say var Cylon requires Cylon

118
00:05:32,950 --> 00:05:34,930
which as everybody here probably uses

119
00:05:34,930 --> 00:05:36,970
notice how you bring in the main Cylon

120
00:05:36,970 --> 00:05:40,690
module then we declare our robot Cylon

121
00:05:40,690 --> 00:05:43,750
has a declarative syntax as opposed to

122
00:05:43,750 --> 00:05:46,210
an imperative one so you define the

123
00:05:46,210 --> 00:05:47,950
things that you're going to use and then

124
00:05:47,950 --> 00:05:50,800
they just work so we say our salon robot

125
00:05:50,800 --> 00:05:54,760
has a connection to an arduino using the

126
00:05:54,760 --> 00:05:58,960
fermata adapter on pork dev TTYL ACM 0

127
00:05:58,960 --> 00:06:00,610
which if you're using Linux is your

128
00:06:00,610 --> 00:06:03,070
default serial port so we have a single

129
00:06:03,070 --> 00:06:05,430
connection then we have a single device

130
00:06:05,430 --> 00:06:09,880
which is this led which is using the LED

131
00:06:09,880 --> 00:06:13,360
driver on pin 13 and then the work that

132
00:06:13,360 --> 00:06:15,190
we're going to do the work that we're

133
00:06:15,190 --> 00:06:18,010
going to do is every one second we're

134
00:06:18,010 --> 00:06:20,410
going to my dot LED table which will

135
00:06:20,410 --> 00:06:22,870
cause the led to flash on and off and

136
00:06:22,870 --> 00:06:25,330
then last we tell the robot to start up

137
00:06:25,330 --> 00:06:27,460
so we see here the three important

138
00:06:27,460 --> 00:06:30,130
conceptual ideas behind Cylon j/s the

139
00:06:30,130 --> 00:06:32,470
first one is connections which are using

140
00:06:32,470 --> 00:06:34,480
the adapter pattern which is a software

141
00:06:34,480 --> 00:06:36,490
design pattern similar to the way that

142
00:06:36,490 --> 00:06:39,190
object relational map to use different

143
00:06:39,190 --> 00:06:41,080
kinds of database back-end engines

144
00:06:41,080 --> 00:06:42,560
without changing your

145
00:06:42,560 --> 00:06:44,870
ode Cylon jess allows you to use

146
00:06:44,870 --> 00:06:47,270
hardware devices different hardware

147
00:06:47,270 --> 00:06:49,520
devices but using the same code by

148
00:06:49,520 --> 00:06:52,030
changing the adapter and then the driver

149
00:06:52,030 --> 00:06:54,350
we're using the double adapter pattern

150
00:06:54,350 --> 00:06:56,630
so we have adapters for our connections

151
00:06:56,630 --> 00:06:57,950
and then we have separate ones for

152
00:06:57,950 --> 00:06:59,840
drivers so the code for an LED is

153
00:06:59,840 --> 00:07:01,220
exactly the same whether you're running

154
00:07:01,220 --> 00:07:02,660
it on the BeagleBone black or a

155
00:07:02,660 --> 00:07:06,770
raspberry pi or an arduino so here's our

156
00:07:06,770 --> 00:07:12,290
some video and so we have here the

157
00:07:12,290 --> 00:07:14,750
arduino and it's plugged in to the

158
00:07:14,750 --> 00:07:17,290
largest LED that we could find

159
00:07:17,290 --> 00:07:22,430
conveniently and so what an adrian runs

160
00:07:22,430 --> 00:07:25,250
the code here it's going to be

161
00:07:25,250 --> 00:07:27,020
communicating using the serial interface

162
00:07:27,020 --> 00:07:29,960
and yes it is blinking gratuitous

163
00:07:29,960 --> 00:07:34,729
applause applause for a two thousand

164
00:07:34,729 --> 00:07:38,360
five hundred dollar lamp so it's using

165
00:07:38,360 --> 00:07:40,820
the fermata protocol which is running on

166
00:07:40,820 --> 00:07:42,590
the microcontroller itself this is the

167
00:07:42,590 --> 00:07:44,540
same way that Johnny Five and a lot of

168
00:07:44,540 --> 00:07:47,390
other similar robotics tools work it's

169
00:07:47,390 --> 00:07:49,190
actually communicating from the computer

170
00:07:49,190 --> 00:07:51,440
to the microcontroller via serial

171
00:07:51,440 --> 00:07:53,660
interface so let's look at another

172
00:07:53,660 --> 00:07:56,270
device the tehsil who here is hard of

173
00:07:56,270 --> 00:08:01,160
the tehsil alright so Tesla is a

174
00:08:01,160 --> 00:08:03,770
JavaScript powered microcontroller you

175
00:08:03,770 --> 00:08:05,570
actually run JavaScript that's been

176
00:08:05,570 --> 00:08:08,320
compiled into Lua on the device itself

177
00:08:08,320 --> 00:08:10,460
so we brought one of those let's take a

178
00:08:10,460 --> 00:08:12,260
look at the code the code looks almost

179
00:08:12,260 --> 00:08:15,350
exactly the same as the Arduino okay we

180
00:08:15,350 --> 00:08:17,930
once again we declare Cylon we say our

181
00:08:17,930 --> 00:08:20,060
Cylon robot this time the connection is

182
00:08:20,060 --> 00:08:23,630
to a tehsil using the tehsil adapter but

183
00:08:23,630 --> 00:08:25,160
otherwise it's exactly the same we're

184
00:08:25,160 --> 00:08:27,500
still using the LED device the work that

185
00:08:27,500 --> 00:08:29,240
we're doing is exactly the same every

186
00:08:29,240 --> 00:08:32,289
one second we're going to my LED toggle

187
00:08:32,289 --> 00:08:35,180
so will not everyone has actually have a

188
00:08:35,180 --> 00:08:36,349
chance to look at one of these little

189
00:08:36,349 --> 00:08:40,390
guys there i believe shipping on monday

190
00:08:40,390 --> 00:08:45,050
that's what the email said so so this is

191
00:08:45,050 --> 00:08:48,080
the tussle it's plugged in to exactly

192
00:08:48,080 --> 00:08:50,410
the same bread board with the same Led

193
00:08:50,410 --> 00:08:52,580
you know because we're trying to save

194
00:08:52,580 --> 00:08:54,520
money

195
00:08:54,520 --> 00:08:57,080
also you know mercury led there's a lot

196
00:08:57,080 --> 00:08:59,090
of nasty chemicals in your electronics

197
00:08:59,090 --> 00:08:59,980
don't just throw them in the trash

198
00:08:59,980 --> 00:09:02,480
properly recycle them all right moving

199
00:09:02,480 --> 00:09:05,120
on so we're going to run the exact same

200
00:09:05,120 --> 00:09:07,910
code and this time however we're going

201
00:09:07,910 --> 00:09:10,010
to compile the Cylon code and it's going

202
00:09:10,010 --> 00:09:12,860
to execute right on the tehsil itself so

203
00:09:12,860 --> 00:09:14,630
example 1 we were on the computer

204
00:09:14,630 --> 00:09:16,820
talking to a microcontroller example 2

205
00:09:16,820 --> 00:09:18,230
with the tassel we're going to do the

206
00:09:18,230 --> 00:09:25,410
exact same thing and yes tehsil blink

207
00:09:25,420 --> 00:09:28,280
okay see now we're down to much more

208
00:09:28,280 --> 00:09:31,460
reasonably cost flashing lamp yeah just

209
00:09:31,460 --> 00:09:34,010
so just so you know the previous example

210
00:09:34,010 --> 00:09:36,200
with the Arduino my computer was

211
00:09:36,200 --> 00:09:38,930
communicating to the Arduino through the

212
00:09:38,930 --> 00:09:40,760
serial interface this one the code is

213
00:09:40,760 --> 00:09:42,560
actually running on the board itself so

214
00:09:42,560 --> 00:09:44,720
with silent jsu can actually write your

215
00:09:44,720 --> 00:09:46,460
firmware that runs on this

216
00:09:46,460 --> 00:09:48,320
microcontroller itself so you don't need

217
00:09:48,320 --> 00:09:50,150
a computer at all for this so the only

218
00:09:50,150 --> 00:09:52,010
reason why I'm plugged into this is for

219
00:09:52,010 --> 00:09:54,470
power so if i had a battery pack or

220
00:09:54,470 --> 00:09:56,390
something this could be completely

221
00:09:56,390 --> 00:09:58,100
isolated somewhere with the firmware

222
00:09:58,100 --> 00:09:59,720
running written in silent jeaious

223
00:09:59,720 --> 00:10:02,060
somewhere doing something controlling

224
00:10:02,060 --> 00:10:05,270
some led somewhere exactly somewhere in

225
00:10:05,270 --> 00:10:09,110
the world and LED is blinking alright so

226
00:10:09,110 --> 00:10:10,790
now let's move on to the BeagleBone

227
00:10:10,790 --> 00:10:13,250
black so the BeagleBone black is a

228
00:10:13,250 --> 00:10:15,350
single board system on chip linux

229
00:10:15,350 --> 00:10:17,990
microcomputer it's very similar to a

230
00:10:17,990 --> 00:10:21,110
Raspberry Pi but better if better is

231
00:10:21,110 --> 00:10:23,240
defined as more processor more memory

232
00:10:23,240 --> 00:10:25,790
and more capabilities so the BeagleBone

233
00:10:25,790 --> 00:10:28,070
black we have Cylon j/s running on there

234
00:10:28,070 --> 00:10:30,110
let's look at the code should look

235
00:10:30,110 --> 00:10:31,580
exactly like the code you've already

236
00:10:31,580 --> 00:10:33,440
soon right in this case once again

237
00:10:33,440 --> 00:10:35,570
require Cylon we're making a connection

238
00:10:35,570 --> 00:10:37,700
this time using the BeagleBone adapter

239
00:10:37,700 --> 00:10:40,460
and once again the same our friend the

240
00:10:40,460 --> 00:10:42,740
LED driver but we named the pin a little

241
00:10:42,740 --> 00:10:45,110
differently and Cylon Jess we have

242
00:10:45,110 --> 00:10:46,910
mappings so that whatever is labeled on

243
00:10:46,910 --> 00:10:48,650
the board is what you use in your code

244
00:10:48,650 --> 00:10:50,570
so no more looking through data sheets

245
00:10:50,570 --> 00:10:52,089
trying to figure out the mysteries of

246
00:10:52,089 --> 00:10:54,740
naming and it turns out this one is 43

247
00:10:54,740 --> 00:10:56,720
but that one's actually p to underscore

248
00:10:56,720 --> 00:11:00,230
12 or in this case p 9 underscore 12 so

249
00:11:00,230 --> 00:11:01,970
we make it a lot easier for you to just

250
00:11:01,970 --> 00:11:04,100
look at how it's labeled write the code

251
00:11:04,100 --> 00:11:05,510
the same way plug it in and it should

252
00:11:05,510 --> 00:11:07,939
just work let's just take a quick look

253
00:11:07,939 --> 00:11:10,220
is again the tehsil code here is the

254
00:11:10,220 --> 00:11:14,919
arduino code so arduino code tussle code

255
00:11:14,919 --> 00:11:18,049
beaglebone black code same basic code

256
00:11:18,049 --> 00:11:19,699
just with little tiny tweaks you see a

257
00:11:19,699 --> 00:11:22,459
pattern selling the form alright so

258
00:11:22,459 --> 00:11:23,869
let's take a little look at the

259
00:11:23,869 --> 00:11:26,359
BeagleBone it looks very much like all

260
00:11:26,359 --> 00:11:28,879
these boards tend to look it's a surface

261
00:11:28,879 --> 00:11:31,009
mount components with some heathers the

262
00:11:31,009 --> 00:11:32,929
BeagleBone black has I believe 68

263
00:11:32,929 --> 00:11:35,539
digital i/o lines that can be used for

264
00:11:35,539 --> 00:11:38,839
general purpose i 0 for analog for i

265
00:11:38,839 --> 00:11:41,149
square c which a lot of devices like

266
00:11:41,149 --> 00:11:43,909
lcds and accelerometers and other things

267
00:11:43,909 --> 00:11:47,299
use and so adrian is going to tell us

268
00:11:47,299 --> 00:11:51,589
what you're going to do allow me to

269
00:11:51,589 --> 00:11:56,089
explain so so we have no Jas running on

270
00:11:56,089 --> 00:11:58,579
this beaglebone black so this computer

271
00:11:58,579 --> 00:12:00,679
this is actually a full fledge ARM based

272
00:12:00,679 --> 00:12:03,199
linux computer so these two previous

273
00:12:03,199 --> 00:12:06,079
examples this Arduino is a

274
00:12:06,079 --> 00:12:07,339
microcontroller that we are

275
00:12:07,339 --> 00:12:09,409
communicating with over a serial

276
00:12:09,409 --> 00:12:11,859
interface remotely controlling the pins

277
00:12:11,859 --> 00:12:15,289
this tehsil is a microcontroller that

278
00:12:15,289 --> 00:12:17,149
runs java script directly on the board

279
00:12:17,149 --> 00:12:19,489
so this has no operating system just

280
00:12:19,489 --> 00:12:22,129
running pure code this is a full linux

281
00:12:22,129 --> 00:12:24,739
computer which are writing a Cylon

282
00:12:24,739 --> 00:12:27,859
program that runs on the computer so you

283
00:12:27,859 --> 00:12:30,789
know it's three different use cases for

284
00:12:30,789 --> 00:12:33,739
how you control pans and that sort of

285
00:12:33,739 --> 00:12:36,169
thing so let's run this program really

286
00:12:36,169 --> 00:12:41,119
quick he's SSH tin and so he's actually

287
00:12:41,119 --> 00:12:44,029
executing the code on the BeagleBone

288
00:12:44,029 --> 00:12:46,489
black itself or you would be if it hit

289
00:12:46,489 --> 00:12:50,629
run this is how you know it's real and

290
00:12:50,629 --> 00:13:08,190
it blinks yes

291
00:13:08,200 --> 00:13:12,550
all right hello I'm going to do a

292
00:13:12,550 --> 00:13:14,800
karaoke song not just kidding all right

293
00:13:14,800 --> 00:13:17,200
so this is the perfect time for the

294
00:13:17,200 --> 00:13:20,110
choose your own Hardware adventure yes

295
00:13:20,110 --> 00:13:21,790
choose your own Hardware adventure

296
00:13:21,790 --> 00:13:23,680
because we came provisioned with all

297
00:13:23,680 --> 00:13:25,630
sorts of awesome gear from our wonderful

298
00:13:25,630 --> 00:13:26,890
friends in case you're wondering how we

299
00:13:26,890 --> 00:13:28,960
got so much of it so this is your

300
00:13:28,960 --> 00:13:31,930
opportunity to get some of this so to

301
00:13:31,930 --> 00:13:35,020
win a sphero 2.0 to win the spirit two

302
00:13:35,020 --> 00:13:37,180
point oh just go on the Twitterverse and

303
00:13:37,180 --> 00:13:41,710
tweet go Sphero and Cylon Jas okay so go

304
00:13:41,710 --> 00:13:43,060
straight on silent yes if you want to

305
00:13:43,060 --> 00:13:45,010
win a sparrow two point oh if you want

306
00:13:45,010 --> 00:13:47,800
to win a pebble smartwatch tweet pebble

307
00:13:47,800 --> 00:13:51,580
and Cylon Jas and if you want to win a

308
00:13:51,580 --> 00:13:55,200
BeagleBone black tweet beagleboard org

309
00:13:55,200 --> 00:13:57,790
kind of long eagle board oregon's hi

310
00:13:57,790 --> 00:14:00,940
lenge so those twitter names again to

311
00:14:00,940 --> 00:14:02,650
win the Sphero tweet ghost Pharaoh and

312
00:14:02,650 --> 00:14:05,650
Solange is to win a pebble tweet pebble

313
00:14:05,650 --> 00:14:07,870
and Solange is or to win a BeagleBone

314
00:14:07,870 --> 00:14:10,900
black tweet beagleboard org and Solange

315
00:14:10,900 --> 00:14:14,050
ass all right on with the show spero

316
00:14:14,050 --> 00:14:17,800
plus leap motion alright so a bunch of

317
00:14:17,800 --> 00:14:19,990
people have seen the Sphero it's a very

318
00:14:19,990 --> 00:14:22,330
cool we call it the Minimum Viable robot

319
00:14:22,330 --> 00:14:25,870
it is a toy it looks like a toy it is in

320
00:14:25,870 --> 00:14:28,750
fact a toy but it does have a few

321
00:14:28,750 --> 00:14:30,880
interesting characteristics one of them

322
00:14:30,880 --> 00:14:32,650
in has input it has a built-in

323
00:14:32,650 --> 00:14:34,180
accelerometer so we can detect

324
00:14:34,180 --> 00:14:36,520
collisions the other it is that it has

325
00:14:36,520 --> 00:14:38,770
two different forms of output one is

326
00:14:38,770 --> 00:14:40,930
that it can roll around it has a

327
00:14:40,930 --> 00:14:43,390
built-in accelerometer as I mentioned so

328
00:14:43,390 --> 00:14:45,400
it can auto stabilize the same way as a

329
00:14:45,400 --> 00:14:47,140
segue or a myth or some other kinds of

330
00:14:47,140 --> 00:14:49,300
robotic devices and it can change the

331
00:14:49,300 --> 00:14:52,900
color of its built-in RGB LED so let's

332
00:14:52,900 --> 00:14:54,100
take a look the code here is a little

333
00:14:54,100 --> 00:14:55,960
bit more complicated we can see now an

334
00:14:55,960 --> 00:14:57,550
example of using two different devices

335
00:14:57,550 --> 00:14:59,620
at the same time so we have two

336
00:14:59,620 --> 00:15:01,600
connections we have the leap motion

337
00:15:01,600 --> 00:15:03,850
connection and then the Sphero

338
00:15:03,850 --> 00:15:07,030
connection so the leap motion the leap

339
00:15:07,030 --> 00:15:09,700
motion is a gestural controller that

340
00:15:09,700 --> 00:15:12,010
plugs directly into your computer and

341
00:15:12,010 --> 00:15:13,900
then allows you through its built-in

342
00:15:13,900 --> 00:15:17,380
camera and infrared projector to figure

343
00:15:17,380 --> 00:15:19,030
out where your hands are positioned and

344
00:15:19,030 --> 00:15:21,440
use those as a way without any wire

345
00:15:21,440 --> 00:15:23,960
at all to control some kind of device so

346
00:15:23,960 --> 00:15:27,230
it puts out to data via web sockets and

347
00:15:27,230 --> 00:15:28,310
so you can see here's the poor that's

348
00:15:28,310 --> 00:15:30,680
running on then the Sphero the squirrel

349
00:15:30,680 --> 00:15:32,780
work it's a Bluetooth device but we're

350
00:15:32,780 --> 00:15:35,360
using a Bluetooth to serial connection

351
00:15:35,360 --> 00:15:38,360
so again our old friend this case it's

352
00:15:38,360 --> 00:15:41,390
RF calm 0 which is the typical port used

353
00:15:41,390 --> 00:15:44,090
by Linux again if you're doing robotics

354
00:15:44,090 --> 00:15:45,170
and you're not using Linux you're

355
00:15:45,170 --> 00:15:46,970
probably doing it wrong but that's a

356
00:15:46,970 --> 00:15:48,770
whole another rant so then we have two

357
00:15:48,770 --> 00:15:50,660
devices the leap motion and the Sphero

358
00:15:50,660 --> 00:15:52,670
then the work that we're going to do

359
00:15:52,670 --> 00:15:54,530
we're going to turn on the tail light of

360
00:15:54,530 --> 00:15:55,910
the sparrow so we could tell which way

361
00:15:55,910 --> 00:15:57,800
it is pointing or pointing away from

362
00:15:57,800 --> 00:16:02,120
then here is our event syntax it looks

363
00:16:02,120 --> 00:16:04,190
exactly like the kind of event syntax

364
00:16:04,190 --> 00:16:05,780
that you've seen as a no developer

365
00:16:05,780 --> 00:16:09,080
because in fact it is so on my leap

366
00:16:09,080 --> 00:16:12,110
motion dot on hand we grab that data

367
00:16:12,110 --> 00:16:14,300
from the hand and we scale it using some

368
00:16:14,300 --> 00:16:15,800
of our built-in scaling functions since

369
00:16:15,800 --> 00:16:17,600
you have to do a lot of scaling when

370
00:16:17,600 --> 00:16:19,760
you're moving from for example the leap

371
00:16:19,760 --> 00:16:21,320
motion to a servo or something of that

372
00:16:21,320 --> 00:16:24,560
sort so we scale the hand x and y

373
00:16:24,560 --> 00:16:27,710
coordinates to something that the Sphero

374
00:16:27,710 --> 00:16:30,530
can use then every one second we're

375
00:16:30,530 --> 00:16:32,930
going to roll the Sphero or we're going

376
00:16:32,930 --> 00:16:34,370
to sorry we're going to set the color to

377
00:16:34,370 --> 00:16:37,340
a random color then every point 01

378
00:16:37,340 --> 00:16:39,650
seconds we're going to look at that data

379
00:16:39,650 --> 00:16:41,540
from the leap motion and decide which

380
00:16:41,540 --> 00:16:43,400
direction the roll around in the reason

381
00:16:43,400 --> 00:16:44,780
we have to do this is we need some way

382
00:16:44,780 --> 00:16:46,880
to manage the concurrency the leap

383
00:16:46,880 --> 00:16:48,890
motion puts out data a lot faster

384
00:16:48,890 --> 00:16:50,660
because you can wave your hands very

385
00:16:50,660 --> 00:16:52,580
quickly and they could detect that a lot

386
00:16:52,580 --> 00:16:55,430
more quickly then the physical device

387
00:16:55,430 --> 00:16:57,620
can respond in this case the Sphero and

388
00:16:57,620 --> 00:17:02,270
then last we Cylon dot start so let's go

389
00:17:02,270 --> 00:17:09,470
back to my camera so we was this way we

390
00:17:09,470 --> 00:17:13,819
can kind of see both his hand so he's

391
00:17:13,819 --> 00:17:20,819
waving his hand okay that's better

392
00:17:20,829 --> 00:17:33,399
look ma just a hand this is really fun

393
00:17:33,399 --> 00:17:36,159
oh we by the way we have a table in the

394
00:17:36,159 --> 00:17:39,190
makerspace area along with the node BOTS

395
00:17:39,190 --> 00:17:41,110
team and the node rockets team and the

396
00:17:41,110 --> 00:17:43,059
bunch of other cool people so what if

397
00:17:43,059 --> 00:17:45,070
your are wandering around and you're

398
00:17:45,070 --> 00:17:46,480
bored of the hallway track and you just

399
00:17:46,480 --> 00:17:48,399
don't have the attention span you know

400
00:17:48,399 --> 00:17:49,899
come on in there we have lots of parts

401
00:17:49,899 --> 00:17:54,220
and you can play with this stuff we have

402
00:17:54,220 --> 00:17:55,690
a leap motion that each person could use

403
00:17:55,690 --> 00:17:57,309
but you can't keep them or else working

404
00:17:57,309 --> 00:18:02,139
to get in big trouble all right so Spiro

405
00:18:02,139 --> 00:18:05,500
plus robo so we're going to show

406
00:18:05,500 --> 00:18:06,669
something completely different now with

407
00:18:06,669 --> 00:18:09,880
this Pharaoh who here knows Conway's

408
00:18:09,880 --> 00:18:15,010
Game of Life all right so only a few

409
00:18:15,010 --> 00:18:17,620
mathemagical people so a brief

410
00:18:17,620 --> 00:18:20,019
description so there was this guy named

411
00:18:20,019 --> 00:18:22,659
John Conway not John Connor that's a

412
00:18:22,659 --> 00:18:25,360
fictional character John Conway John

413
00:18:25,360 --> 00:18:27,820
Conway a man completely obsessed with

414
00:18:27,820 --> 00:18:30,549
mathemagic specifically he keeps looking

415
00:18:30,549 --> 00:18:32,230
at these flocks of seagulls and he knows

416
00:18:32,230 --> 00:18:33,970
seagulls are not especially intelligent

417
00:18:33,970 --> 00:18:35,620
and yet they fly in these amazing

418
00:18:35,620 --> 00:18:37,690
formations he can't stop thinking about

419
00:18:37,690 --> 00:18:40,029
it like off mathematicians and he sits

420
00:18:40,029 --> 00:18:42,100
down with a piece of paper and thanks

421
00:18:42,100 --> 00:18:43,899
really hard and solves a problem that

422
00:18:43,899 --> 00:18:45,639
problem becomes a whole new field of

423
00:18:45,639 --> 00:18:47,769
mathematics that we call cellular

424
00:18:47,769 --> 00:18:50,620
automata or more popularly artificial

425
00:18:50,620 --> 00:18:53,860
life so he makes this game known

426
00:18:53,860 --> 00:18:55,779
popularly as conway's game of life and

427
00:18:55,779 --> 00:18:56,789
it's normally played on graph paper

428
00:18:56,789 --> 00:18:59,260
which I highly recommend you go out and

429
00:18:59,260 --> 00:19:00,610
get the pad a graph paper because it's

430
00:19:00,610 --> 00:19:03,010
an amazing tool for creativity all good

431
00:19:03,010 --> 00:19:05,260
ideas start on graph paper you don't

432
00:19:05,260 --> 00:19:06,669
have to stay within the lines you can

433
00:19:06,669 --> 00:19:08,320
just know they're there and it makes you

434
00:19:08,320 --> 00:19:10,659
feel nice all right so Conway's Game of

435
00:19:10,659 --> 00:19:13,149
Life these little circles ourselves and

436
00:19:13,149 --> 00:19:16,450
the squares are an absence of cells so

437
00:19:16,450 --> 00:19:19,389
each one of them follows the same basic

438
00:19:19,389 --> 00:19:22,179
set of three rules so the first rule is

439
00:19:22,179 --> 00:19:26,620
if you're RSL and you have less than two

440
00:19:26,620 --> 00:19:28,840
neighbors you die because of loneliness

441
00:19:28,840 --> 00:19:31,870
if you have exactly two other neighbors

442
00:19:31,870 --> 00:19:33,760
then a new cell is born

443
00:19:33,760 --> 00:19:35,980
into an empty square and if you have

444
00:19:35,980 --> 00:19:37,600
three neighbors then you die from

445
00:19:37,600 --> 00:19:40,180
overpopulation so with these same basic

446
00:19:40,180 --> 00:19:41,920
three sets of rules you go through each

447
00:19:41,920 --> 00:19:43,480
one of the squares and depending on

448
00:19:43,480 --> 00:19:44,980
whether it has a cell or not you apply

449
00:19:44,980 --> 00:19:47,740
these rules so first move would look

450
00:19:47,740 --> 00:19:49,840
like this and the second one would look

451
00:19:49,840 --> 00:19:53,290
like this so we thought it'd be really

452
00:19:53,290 --> 00:19:56,350
cool to create conway's game of life but

453
00:19:56,350 --> 00:19:59,410
with robots just take anything in the

454
00:19:59,410 --> 00:20:01,060
universe and add with robots and see

455
00:20:01,060 --> 00:20:03,250
whether it does it's kind of fun so but

456
00:20:03,250 --> 00:20:04,900
we realize that we're going to be a few

457
00:20:04,900 --> 00:20:06,970
changes we'd have to make first of all

458
00:20:06,970 --> 00:20:08,950
we don't have a really fast 3d printer

459
00:20:08,950 --> 00:20:10,450
that can create news Pharaoh's on the

460
00:20:10,450 --> 00:20:11,800
fly in case you're wondering how we get

461
00:20:11,800 --> 00:20:15,130
new ones to be born working on that also

462
00:20:15,130 --> 00:20:18,370
they have no eyes they can only detect

463
00:20:18,370 --> 00:20:20,680
collisions by way of the built-in

464
00:20:20,680 --> 00:20:23,080
accelerometer so because we are all

465
00:20:23,080 --> 00:20:25,660
family use something called an inverse

466
00:20:25,660 --> 00:20:27,760
Fourier transform which basically allows

467
00:20:27,760 --> 00:20:30,220
us to take a slice of time and then

468
00:20:30,220 --> 00:20:32,140
using the number of collisions we detect

469
00:20:32,140 --> 00:20:34,180
within that slice of time we create a

470
00:20:34,180 --> 00:20:36,070
number which corresponds to the

471
00:20:36,070 --> 00:20:37,600
approximate number of neighbors all

472
00:20:37,600 --> 00:20:39,360
right you guys got that cool moving on

473
00:20:39,360 --> 00:20:42,730
so here's the code so what we're going

474
00:20:42,730 --> 00:20:44,410
to do is we're going to run five

475
00:20:44,410 --> 00:20:47,170
sphero's which we've named Thelma Louise

476
00:20:47,170 --> 00:20:50,560
grace Ada and Mary but Mary is supposed

477
00:20:50,560 --> 00:20:52,360
to be Missy which stands for Missy

478
00:20:52,360 --> 00:20:55,210
Cummings first a female fighter pilot in

479
00:20:55,210 --> 00:20:57,160
the United States Navy and an associate

480
00:20:57,160 --> 00:20:58,930
professor of human-machine interfaces

481
00:20:58,930 --> 00:21:03,340
and I believe Duke anyway so each one of

482
00:21:03,340 --> 00:21:05,110
these Pharaoh's is going to be running

483
00:21:05,110 --> 00:21:07,150
the exact same code so let's see what

484
00:21:07,150 --> 00:21:10,390
that code is so our Conway robot we have

485
00:21:10,390 --> 00:21:12,340
a connection and a device which we're

486
00:21:12,340 --> 00:21:14,110
going to fill in the port number when we

487
00:21:14,110 --> 00:21:18,310
start them all up then they're born when

488
00:21:18,310 --> 00:21:19,570
they're born we set the number of

489
00:21:19,570 --> 00:21:22,990
contacts and age 20 they have life and

490
00:21:22,990 --> 00:21:25,000
they have movement so when they move

491
00:21:25,000 --> 00:21:26,700
they move around in a random direction

492
00:21:26,700 --> 00:21:28,720
that's a little bit different there is

493
00:21:28,720 --> 00:21:31,060
no randomness in the original Conway

494
00:21:31,060 --> 00:21:33,610
game but we're very random people so we

495
00:21:33,610 --> 00:21:35,560
thought it'd be fun so when they come to

496
00:21:35,560 --> 00:21:37,240
life they are alive and they turn green

497
00:21:37,240 --> 00:21:40,060
when they die they stop moving and they

498
00:21:40,060 --> 00:21:42,850
turn red if they have enough contacts

499
00:21:42,850 --> 00:21:45,400
then they can stay alive so when one of

500
00:21:45,400 --> 00:21:47,399
these robots has its birthday

501
00:21:47,399 --> 00:21:49,409
we tell it happy birthday if it has

502
00:21:49,409 --> 00:21:52,830
enough contacts and it's not alive

503
00:21:52,830 --> 00:21:54,869
meaning already dead it comes back to

504
00:21:54,869 --> 00:21:59,210
life zombie mode zombie robots it's real

505
00:21:59,210 --> 00:22:01,379
otherwise they die if they don't have

506
00:22:01,379 --> 00:22:03,570
enough contacts and so then the work

507
00:22:03,570 --> 00:22:08,969
that we do is we connect start detecting

508
00:22:08,969 --> 00:22:11,729
collisions we detect them and we keep

509
00:22:11,729 --> 00:22:14,399
this counters every three seconds we

510
00:22:14,399 --> 00:22:16,589
move if we're still alive every ten

511
00:22:16,589 --> 00:22:18,779
seconds we have a birthday so life is

512
00:22:18,779 --> 00:22:20,940
hard short and spherical in Faeryland

513
00:22:20,940 --> 00:22:23,309
and then we're going to start out for

514
00:22:23,309 --> 00:22:24,719
each one of the bots that we declared

515
00:22:24,719 --> 00:22:27,779
initially in that first array we're

516
00:22:27,779 --> 00:22:29,820
going to go through and we're going to

517
00:22:29,820 --> 00:22:32,099
see here's a new conway robot we're

518
00:22:32,099 --> 00:22:33,330
going to tell it which port and what

519
00:22:33,330 --> 00:22:34,409
name it has and then we're going to

520
00:22:34,409 --> 00:22:36,899
start it out and then this line here

521
00:22:36,899 --> 00:22:39,359
we're going to turn on Cylon j/s is

522
00:22:39,359 --> 00:22:42,839
built in API it has an express jsapi

523
00:22:42,839 --> 00:22:45,149
built right in and we also have a single

524
00:22:45,149 --> 00:22:47,149
page web app built using angularjs

525
00:22:47,149 --> 00:22:50,489
called Robo so similar to the way your

526
00:22:50,489 --> 00:22:52,739
router has an admin page that's just

527
00:22:52,739 --> 00:22:54,989
built right in we have Robo built right

528
00:22:54,989 --> 00:22:57,179
into all of the Cylon Jas code that you

529
00:22:57,179 --> 00:22:59,519
write that way you can test to see only

530
00:22:59,519 --> 00:23:01,409
my case my code is not working but why

531
00:23:01,409 --> 00:23:03,389
that's the interesting question we can

532
00:23:03,389 --> 00:23:04,769
go in and we can use Robo to figure that

533
00:23:04,769 --> 00:23:13,619
out so first of all what's is the rather

534
00:23:13,619 --> 00:23:17,580
still armed it says its own wee brother

535
00:23:17,580 --> 00:23:20,099
on Wi-Fi something to do with not trust

536
00:23:20,099 --> 00:23:26,969
in conference Wi-Fi can't imagine you

537
00:23:26,969 --> 00:23:29,759
doc disconnected you didn't pay your

538
00:23:29,759 --> 00:23:36,629
AT&T bill it says it's my mifi oh I

539
00:23:36,629 --> 00:23:41,940
didn't pay my bill what's now it's back

540
00:23:41,940 --> 00:23:46,469
on oh well we saw the ATT cell tower

541
00:23:46,469 --> 00:23:48,389
here it's in a truck that's parked

542
00:23:48,389 --> 00:23:51,539
Connor on the back 40 this is not the

543
00:23:51,539 --> 00:23:53,609
joke we can show it to you later if you

544
00:23:53,609 --> 00:23:55,499
don't believe us what if you want

545
00:23:55,499 --> 00:23:58,559
cellular signal just kind of wait don't

546
00:23:58,559 --> 00:24:00,930
move all right

547
00:24:00,930 --> 00:24:04,300
he's going to connect you'll know that

548
00:24:04,300 --> 00:24:06,100
they're connected because they stop

549
00:24:06,100 --> 00:24:11,360
flashing we take on the sustained color

550
00:24:11,370 --> 00:24:20,140
standing by their thinking think think

551
00:24:20,140 --> 00:24:29,860
think think

552
00:24:29,870 --> 00:24:31,920
just imagine when you're in orbit and

553
00:24:31,920 --> 00:24:33,990
you're waiting like we're waiting

554
00:24:33,990 --> 00:24:41,070
houston we're standing by yeah exactly

555
00:24:41,070 --> 00:24:43,230
45 minutes later when you ping Mars and

556
00:24:43,230 --> 00:24:47,310
your it didn't work hmm 45 minutes later

557
00:24:47,310 --> 00:24:50,100
you ping Mars again that's weird it

558
00:24:50,100 --> 00:24:54,630
worked this time all right well four out

559
00:24:54,630 --> 00:24:58,220
of five all right they're rolling around

560
00:24:58,220 --> 00:25:00,090
they're looking for love in all the

561
00:25:00,090 --> 00:25:03,240
wrong places they need to clogged with

562
00:25:03,240 --> 00:25:05,580
each other actually with anything some

563
00:25:05,580 --> 00:25:06,990
people have said how do you tell when

564
00:25:06,990 --> 00:25:08,550
they only collide with each other and

565
00:25:08,550 --> 00:25:10,590
not the walls well a wall is a sphere of

566
00:25:10,590 --> 00:25:13,410
Taurus Pharaoh and it's going to restart

567
00:25:13,410 --> 00:25:25,340
it really quick okay okay

568
00:25:25,350 --> 00:25:34,899
standing by

569
00:25:34,909 --> 00:25:37,220
the death star explodes that's a very

570
00:25:37,220 --> 00:25:39,169
interesting question he asked when does

571
00:25:39,169 --> 00:25:42,019
the death star explode that brings up

572
00:25:42,019 --> 00:25:44,950
the question was it contractor failure

573
00:25:44,950 --> 00:25:49,369
or were they partisans who inserted a

574
00:25:49,369 --> 00:25:51,139
design flaw intentionally we could

575
00:25:51,139 --> 00:25:53,989
discuss this at the bar later but I'm

576
00:25:53,989 --> 00:25:55,639
original trilogy for life keep that in

577
00:25:55,639 --> 00:26:07,669
mind almost there we're going to go to

578
00:26:07,669 --> 00:26:08,899
the next demo if you don't get it this

579
00:26:08,899 --> 00:26:12,679
time I'm getting bored I mean I don't

580
00:26:12,679 --> 00:26:16,639
got all day so little to do so much time

581
00:26:16,639 --> 00:26:24,229
wait strike that reverse it yes not that

582
00:26:24,229 --> 00:26:27,590
that one didn't count do not look at the

583
00:26:27,590 --> 00:26:35,419
Sphero behind the curtain something's

584
00:26:35,419 --> 00:26:40,340
not going alright I'm ready to move on

585
00:26:40,340 --> 00:26:46,009
to the next mo well they're not playing

586
00:26:46,009 --> 00:26:48,259
well with each other actually we have

587
00:26:48,259 --> 00:26:50,479
nothing to do with this game there is no

588
00:26:50,479 --> 00:26:54,889
human robot yet alright so let's move on

589
00:26:54,889 --> 00:26:57,049
to the next demo if you want to see the

590
00:26:57,049 --> 00:26:58,820
Conway's Game of Life is Pharaoh's come

591
00:26:58,820 --> 00:27:00,979
find this in the hackerspace alright

592
00:27:00,979 --> 00:27:04,129
let's get into some drones because since

593
00:27:04,129 --> 00:27:05,960
we didn't have the swirls working not

594
00:27:05,960 --> 00:27:07,639
having the drones working will be so

595
00:27:07,639 --> 00:27:11,570
much more interesting so we have support

596
00:27:11,570 --> 00:27:14,179
for the ar.drone thanks to the hard work

597
00:27:14,179 --> 00:27:16,789
of the node copter team which we wrap

598
00:27:16,789 --> 00:27:18,559
around like many of the library's we use

599
00:27:18,559 --> 00:27:20,059
if you haven't noticed we support all

600
00:27:20,059 --> 00:27:22,159
the same hardware plus a lot more it's

601
00:27:22,159 --> 00:27:23,539
because we are standing on the shoulders

602
00:27:23,539 --> 00:27:26,899
of giants not on their toes so we're

603
00:27:26,899 --> 00:27:30,340
going to show an AR drone with opencv a

604
00:27:30,340 --> 00:27:35,359
ps3 controller and the neuro sky so what

605
00:27:35,359 --> 00:27:37,489
is this all about so the ar.drone it's

606
00:27:37,489 --> 00:27:39,529
the popular parrot ar.drone that if

607
00:27:39,529 --> 00:27:40,729
you've been to a node copter you've

608
00:27:40,729 --> 00:27:42,259
early flown we're going to be using

609
00:27:42,259 --> 00:27:45,589
opencv which is an open source computer

610
00:27:45,589 --> 00:27:47,389
vision package that is very very

611
00:27:47,389 --> 00:27:48,440
commonly used for

612
00:27:48,440 --> 00:27:50,090
things like facial recognition or edge

613
00:27:50,090 --> 00:27:52,040
detection we're going to fly it around

614
00:27:52,040 --> 00:27:54,890
with a ps3 controller which we're using

615
00:27:54,890 --> 00:27:57,500
I believe we're using a library that was

616
00:27:57,500 --> 00:28:00,410
partly created by Andrew despot and then

617
00:28:00,410 --> 00:28:02,450
we're going to use the neuro sky

618
00:28:02,450 --> 00:28:06,140
brainwave r either we're not going to

619
00:28:06,140 --> 00:28:09,350
fly the drone with the brain that would

620
00:28:09,350 --> 00:28:10,970
not be a very good idea because most

621
00:28:10,970 --> 00:28:12,830
people do not have enough brain control

622
00:28:12,830 --> 00:28:14,800
to even fly without the brain controller

623
00:28:14,800 --> 00:28:17,810
instead we're going to monitor the brain

624
00:28:17,810 --> 00:28:21,260
waves of our pilot and if he gets really

625
00:28:21,260 --> 00:28:25,310
nervous will know all right so put that

626
00:28:25,310 --> 00:28:26,990
on here let's take a look at some code

627
00:28:26,990 --> 00:28:29,390
while he's getting ready so once again

628
00:28:29,390 --> 00:28:31,670
VAR Cylon requires Cylon that's how

629
00:28:31,670 --> 00:28:32,930
everything starts out and then we

630
00:28:32,930 --> 00:28:34,820
dynamically include the modules that are

631
00:28:34,820 --> 00:28:36,320
needed for whatever Hardware you're

632
00:28:36,320 --> 00:28:38,660
using in this case we're using three

633
00:28:38,660 --> 00:28:40,880
connections we have a connection to open

634
00:28:40,880 --> 00:28:43,760
CV we have a connection to the DualShock

635
00:28:43,760 --> 00:28:46,640
3 joystick and we have a connection to

636
00:28:46,640 --> 00:28:49,640
the ar.drone itself then we have four

637
00:28:49,640 --> 00:28:53,000
devices the first one is the matrix not

638
00:28:53,000 --> 00:28:54,350
the matrix you're thinking of this is

639
00:28:54,350 --> 00:28:56,450
the matrix that's used by opencv for its

640
00:28:56,450 --> 00:29:00,950
optical recognition then after that we

641
00:29:00,950 --> 00:29:02,720
have the window so that we can actually

642
00:29:02,720 --> 00:29:05,090
see with the drone sees we have the

643
00:29:05,090 --> 00:29:07,430
controller for the do shock 3 and then

644
00:29:07,430 --> 00:29:08,990
we have the drone itself flight

645
00:29:08,990 --> 00:29:11,270
commander so we can control it so we

646
00:29:11,270 --> 00:29:12,590
have a little helper the validate our

647
00:29:12,590 --> 00:29:14,750
pitch so we don't flip over then the

648
00:29:14,750 --> 00:29:17,210
work that we're going to do is we're

649
00:29:17,210 --> 00:29:19,700
going to grab the data and we're going

650
00:29:19,700 --> 00:29:22,160
to show it on the screen okay so every

651
00:29:22,160 --> 00:29:25,010
time we get a new PNG file from the

652
00:29:25,010 --> 00:29:26,600
camera we're going to display it inside

653
00:29:26,600 --> 00:29:28,670
of the window then based on the

654
00:29:28,670 --> 00:29:30,020
different controller we're going to

655
00:29:30,020 --> 00:29:31,730
either take off if you press the square

656
00:29:31,730 --> 00:29:34,130
if you press the triangle will hover if

657
00:29:34,130 --> 00:29:38,440
you press X will land etc then every 0

658
00:29:38,440 --> 00:29:41,750
so if you ever use set interval you

659
00:29:41,750 --> 00:29:43,820
probably wondered at its API because

660
00:29:43,820 --> 00:29:45,350
it's really confusing we didn't like it

661
00:29:45,350 --> 00:29:47,180
so we wrote our own little helper around

662
00:29:47,180 --> 00:29:49,880
it every 0 does something as quick as it

663
00:29:49,880 --> 00:29:53,060
can but asynchronously so every 0 we're

664
00:29:53,060 --> 00:29:55,010
going to grab the joystick info and then

665
00:29:55,010 --> 00:29:57,700
based on whether you put it left-right

666
00:29:57,700 --> 00:30:00,170
turning or pitch or y'all we're going to

667
00:30:00,170 --> 00:30:01,149
change those

668
00:30:01,149 --> 00:30:03,129
then some similar fashion we're going to

669
00:30:03,129 --> 00:30:05,589
do the same thing for the rotation and

670
00:30:05,589 --> 00:30:07,779
then if we lose control we're going to

671
00:30:07,779 --> 00:30:10,269
hover now here's the code for the narrow

672
00:30:10,269 --> 00:30:12,820
sky headset we're running another little

673
00:30:12,820 --> 00:30:14,739
separate Cylon program we're just

674
00:30:14,739 --> 00:30:16,389
grabbing the neuro sky data and then

675
00:30:16,389 --> 00:30:18,489
we're going to log it so let's see if

676
00:30:18,489 --> 00:30:23,889
this works here oh wait I got to run my

677
00:30:23,889 --> 00:30:34,820
code

678
00:30:34,830 --> 00:30:37,870
okay there's Adrienne's brain on

679
00:30:37,870 --> 00:30:43,720
JavaScript so we could tell if he's

680
00:30:43,720 --> 00:30:46,240
getting really nervous the door is right

681
00:30:46,240 --> 00:30:48,700
there under the tables works the battery

682
00:30:48,700 --> 00:30:50,650
life of the ar.drone is maybe seven to

683
00:30:50,650 --> 00:30:53,680
12 minutes of full flight good to know

684
00:30:53,680 --> 00:31:15,870
right and this way we can kind of see

685
00:31:15,880 --> 00:31:23,480
not we really are standing by standing

686
00:31:23,480 --> 00:31:34,970
by

687
00:31:34,980 --> 00:31:40,679
standing by yeah everyone turn off your

688
00:31:40,679 --> 00:31:53,629
Wi-Fi just kidding

689
00:31:53,639 --> 00:32:08,590
banking working working working

690
00:32:08,600 --> 00:32:14,420
uh-huh let's go see what his brain has

691
00:32:14,420 --> 00:32:19,190
been doing this whole time looks kind of

692
00:32:19,190 --> 00:32:26,780
erratic bro so now you're trying to

693
00:32:26,780 --> 00:32:28,430
decide should i watch the drawn or watch

694
00:32:28,430 --> 00:32:42,360
his brain

695
00:32:42,370 --> 00:32:44,020
there is a lot of interference in your

696
00:32:44,020 --> 00:32:52,059
brain or the drone if it crashes into

697
00:32:52,059 --> 00:33:00,680
you we're really sorry

698
00:33:00,690 --> 00:33:08,860
so Cylon ps3 AR Drone and neuro sky ooh

699
00:33:08,870 --> 00:33:11,580
no humans were injured alright we have

700
00:33:11,580 --> 00:33:12,990
one last demo and then we got to get out

701
00:33:12,990 --> 00:33:13,890
of here because there's a lot of other

702
00:33:13,890 --> 00:33:15,150
cool people doing a lot of other cool

703
00:33:15,150 --> 00:33:17,790
things so now we're going to show you

704
00:33:17,790 --> 00:33:19,950
the mother of all demos we're going to

705
00:33:19,950 --> 00:33:22,020
show you a pebble watch that's featuring

706
00:33:22,020 --> 00:33:23,730
our to controlling an AR Drone with

707
00:33:23,730 --> 00:33:26,130
opencv doing facial recognition then

708
00:33:26,130 --> 00:33:27,900
controlling some sparrows and the digits

709
00:33:27,900 --> 00:33:29,900
park running on the drone itself in

710
00:33:29,900 --> 00:33:35,460
other words are too so let's explain

711
00:33:35,460 --> 00:33:38,070
very briefly so what is r2 r2 is the

712
00:33:38,070 --> 00:33:39,870
same idea Cylons yes but it's written in

713
00:33:39,870 --> 00:33:41,940
Ruby we call it Ruby on robots because

714
00:33:41,940 --> 00:33:43,980
we love many languages so we're going to

715
00:33:43,980 --> 00:33:46,080
use our to communicating with a pebble

716
00:33:46,080 --> 00:33:48,480
smartwatch here's the code same exact

717
00:33:48,480 --> 00:33:50,520
idea as what you saw we don't have time

718
00:33:50,520 --> 00:33:51,630
to go through the whole thing but it's

719
00:33:51,630 --> 00:33:52,920
the same basic idea of what you already

720
00:33:52,920 --> 00:33:55,530
saw but in Ruby same design software

721
00:33:55,530 --> 00:33:57,990
architectural design pattern in this

722
00:33:57,990 --> 00:33:59,130
case we're going to detect when the

723
00:33:59,130 --> 00:34:00,540
button pushes and then we're going to

724
00:34:00,540 --> 00:34:02,100
start the whole thing off using the API

725
00:34:02,100 --> 00:34:05,190
alright so then we're going to

726
00:34:05,190 --> 00:34:07,470
communicate with our drones running

727
00:34:07,470 --> 00:34:09,900
Cylon j/s in this case we're going to be

728
00:34:09,900 --> 00:34:11,850
doing the facial recognition part so

729
00:34:11,850 --> 00:34:14,220
that's why we need the matrix again so

730
00:34:14,220 --> 00:34:16,380
we're going to look at your face and if

731
00:34:16,380 --> 00:34:18,420
it's recognized based on a generic human

732
00:34:18,420 --> 00:34:22,380
face so any human will work basically

733
00:34:22,380 --> 00:34:25,410
when we detect that face if we detect a

734
00:34:25,410 --> 00:34:27,270
phase we're going to send an API command

735
00:34:27,270 --> 00:34:30,360
to another microcontroller that's

736
00:34:30,360 --> 00:34:32,820
running on the drone itself so we have a

737
00:34:32,820 --> 00:34:35,130
very very small little USB powered

738
00:34:35,130 --> 00:34:36,600
microcontroller called the digits park

739
00:34:36,600 --> 00:34:38,130
which is plugged into the USB port

740
00:34:38,130 --> 00:34:41,070
that's on the ar.drone and we have this

741
00:34:41,070 --> 00:34:43,320
led plugged into the top of it attached

742
00:34:43,320 --> 00:34:45,300
via either electrical or duct tape

743
00:34:45,300 --> 00:34:48,210
depending on what was available so um

744
00:34:48,210 --> 00:34:50,310
when it detects that it's going to send

745
00:34:50,310 --> 00:34:51,960
a command that we're going to flash the

746
00:34:51,960 --> 00:34:54,360
LED on the top of the drone so when it's

747
00:34:54,360 --> 00:34:56,010
looking at a human than the detects it

748
00:34:56,010 --> 00:34:58,920
the LED will start to blink the sphero's

749
00:34:58,920 --> 00:35:02,790
will start to go crazy and you will be

750
00:35:02,790 --> 00:35:05,610
able to see a green outline around the

751
00:35:05,610 --> 00:35:07,680
human face through our Universal video

752
00:35:07,680 --> 00:35:10,740
adapter and so we're controlling the

753
00:35:10,740 --> 00:35:12,750
we're actually running code on the

754
00:35:12,750 --> 00:35:14,610
ar.drone itself it's actually

755
00:35:14,610 --> 00:35:16,560
board linux computer of its own and

756
00:35:16,560 --> 00:35:18,780
we're using go bot which is our go

757
00:35:18,780 --> 00:35:21,840
language framework so we're basically we

758
00:35:21,840 --> 00:35:24,530
have our two is going to tell the Cylons

759
00:35:24,530 --> 00:35:28,050
to command go bot if everything goes

760
00:35:28,050 --> 00:35:31,230
well and here's a some go code if you

761
00:35:31,230 --> 00:35:32,910
haven't looked at go this is the go code

762
00:35:32,910 --> 00:35:33,960
that we're running on the ar.drone

763
00:35:33,960 --> 00:35:37,470
itself that's basically it's that same

764
00:35:37,470 --> 00:35:40,230
blink that you saw before but now

765
00:35:40,230 --> 00:35:42,930
implemented in go and communicating with

766
00:35:42,930 --> 00:35:52,800
the digis park all right so now he's

767
00:35:52,800 --> 00:35:56,190
waking them up everything all at once in

768
00:35:56,190 --> 00:36:01,520
one massive demo what could go wrong

769
00:36:01,520 --> 00:36:03,720
nothing could go wrong especially if

770
00:36:03,720 --> 00:36:04,740
you're sitting in the back you're pretty

771
00:36:04,740 --> 00:36:14,250
safe normally we choose a volunteer /

772
00:36:14,250 --> 00:36:18,870
test subject / target but now that we

773
00:36:18,870 --> 00:36:20,460
can start it all off through the pebble

774
00:36:20,460 --> 00:36:21,990
that means he gets to be both the

775
00:36:21,990 --> 00:36:29,650
serious programmer and human subject a

776
00:36:29,660 --> 00:36:31,890
human subject it sounds really nice

777
00:36:31,890 --> 00:36:34,620
you've got humanity you are the point of

778
00:36:34,620 --> 00:36:37,760
the whole thing how can you complain

779
00:36:37,760 --> 00:36:46,210
it's all about you ma'am

780
00:36:46,220 --> 00:36:48,869
how many devices can we use all at once

781
00:36:48,869 --> 00:36:50,250
we could probably add a few more but we

782
00:36:50,250 --> 00:36:53,760
don't have enough time like we're losing

783
00:36:53,760 --> 00:36:58,140
devices rapidly device attrition you

784
00:36:58,140 --> 00:36:59,579
started out with like 40 and you end up

785
00:36:59,579 --> 00:37:10,829
with 3 there could only be one think

786
00:37:10,829 --> 00:37:16,130
think think think think

787
00:37:16,140 --> 00:37:20,940
all right let's do this do you need me

788
00:37:20,940 --> 00:37:22,740
to increase the screen size when it runs

789
00:37:22,740 --> 00:37:32,580
ok all right so you get in front of the

790
00:37:32,580 --> 00:37:37,150
drone you get between me and the drone

791
00:37:37,160 --> 00:37:51,600
all right

792
00:37:51,610 --> 00:37:56,720
goes

793
00:37:56,730 --> 00:38:04,830
where's the video there are this oh it

794
00:38:04,830 --> 00:38:06,240
would spotted somebody else behind you

795
00:38:06,240 --> 00:38:10,390
quick throw yourself between him and it

796
00:38:10,400 --> 00:38:13,050
so you see the light on top is flashing

797
00:38:13,050 --> 00:38:14,490
every time that you see the green square

798
00:38:14,490 --> 00:38:16,880
because when it recognizes a face

799
00:38:16,880 --> 00:38:26,220
friendly or otherwise we're stripping

800
00:38:26,220 --> 00:38:38,160
the humans in this room alright the

801
00:38:38,160 --> 00:38:44,880
mother of all robotics demos what's that

802
00:38:44,880 --> 00:38:47,190
fun you guys have fun did you enjoy that

803
00:38:47,190 --> 00:38:51,000
I certainly did thank you so join the

804
00:38:51,000 --> 00:38:54,420
robot evolution not revolution that

805
00:38:54,420 --> 00:38:55,770
those usually don't work but the

806
00:38:55,770 --> 00:38:57,180
evolution seems to work fairly well

807
00:38:57,180 --> 00:39:00,390
given our current status so join us

808
00:39:00,390 --> 00:39:03,510
solange is calm or Cylon j/s on Twitter

809
00:39:03,510 --> 00:39:06,810
are two dot IO or are two I owe on

810
00:39:06,810 --> 00:39:10,380
twitter if you prefer Ruby go bot I 0 or

811
00:39:10,380 --> 00:39:12,780
go bot I oh if you'd like to explore the

812
00:39:12,780 --> 00:39:14,610
exciting world of concurrency in the go

813
00:39:14,610 --> 00:39:56,390
programming language thank you very much

