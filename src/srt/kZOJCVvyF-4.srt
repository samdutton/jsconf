1
00:00:11,139 --> 00:00:13,630

hello everyone it's great to be here

2
00:00:13,630 --> 00:00:16,279
even though I was already introduced I

3
00:00:16,279 --> 00:00:18,650
feel I should introduce myself to you hi

4
00:00:18,650 --> 00:00:22,250
I'm Lea here's a fun fact you might not

5
00:00:22,250 --> 00:00:23,119
know about me

6
00:00:23,119 --> 00:00:25,100
I'm originally from Greece and

7
00:00:25,100 --> 00:00:27,550
specifically from the island of lesbos

8
00:00:27,550 --> 00:00:29,359
which technically makes me

9
00:00:29,359 --> 00:00:31,490
geographically lesbian probably one of

10
00:00:31,490 --> 00:00:35,030
the very few you'll ever meet in other

11
00:00:35,030 --> 00:00:37,549
news I like making stuff you might have

12
00:00:37,549 --> 00:00:40,159
used some of my work most all of it is

13
00:00:40,159 --> 00:00:43,220
on github I'm an invited expert in the

14
00:00:43,220 --> 00:00:46,040
CSS working group my day job is doing

15
00:00:46,040 --> 00:00:47,360
HCI research at MIT

16
00:00:47,360 --> 00:00:50,140
HCI is just a fancy term for usability

17
00:00:50,140 --> 00:00:54,049
and I've written a book people like it

18
00:00:54,049 --> 00:00:57,799
on Amazon and actually there is a it's

19
00:00:57,799 --> 00:00:59,479
one of the prizes for the competition

20
00:00:59,479 --> 00:01:02,689
afterwards so go to the competition and

21
00:01:02,689 --> 00:01:06,650
you might win one of them so CSS

22
00:01:06,650 --> 00:01:09,020
variables not to be confused with sass

23
00:01:09,020 --> 00:01:10,790
or less variables completely different

24
00:01:10,790 --> 00:01:14,630
things so the first ever CSS variable we

25
00:01:14,630 --> 00:01:16,820
probably got was current color it came

26
00:01:16,820 --> 00:01:18,860
from SVG and by now it's supported

27
00:01:18,860 --> 00:01:21,110
everywhere the way it worked is it

28
00:01:21,110 --> 00:01:23,660
always resolves to the value of color so

29
00:01:23,660 --> 00:01:26,600
if I change the color property here the

30
00:01:26,600 --> 00:01:28,400
color the the current color and the

31
00:01:28,400 --> 00:01:31,880
gradient changes as well however even

32
00:01:31,880 --> 00:01:33,260
though this is great this was great

33
00:01:33,260 --> 00:01:35,600
before we got native CSS variables and

34
00:01:35,600 --> 00:01:36,710
we could hack a lot of things with

35
00:01:36,710 --> 00:01:39,020
current color as you can imagine it's

36
00:01:39,020 --> 00:01:42,620
very very limited so CSS variables are

37
00:01:42,620 --> 00:01:45,409
kind of an expansion of this concept

38
00:01:45,409 --> 00:01:48,020
it's like current color on steroids CSS

39
00:01:48,020 --> 00:01:49,580
variables are basically custom

40
00:01:49,580 --> 00:01:51,140
properties that start with a double dash

41
00:01:51,140 --> 00:01:56,690
like this and we used we refer to them

42
00:01:56,690 --> 00:02:00,820
like this and we can use them everywhere

43
00:02:00,820 --> 00:02:02,990
so basically I can replicate the

44
00:02:02,990 --> 00:02:04,659
functionality of current color like that

45
00:02:04,659 --> 00:02:08,479
before I move on I'm sure you might be

46
00:02:08,479 --> 00:02:12,069
thinking this is a terrible syntax a

47
00:02:12,069 --> 00:02:15,650
double dash that is disgusting why not

48
00:02:15,650 --> 00:02:16,790
just use the dollar or

49
00:02:16,790 --> 00:02:21,500
the up sign like less and sass so there

50
00:02:21,500 --> 00:02:24,049
are two reasons for this the first is

51
00:02:24,049 --> 00:02:26,420
that we want people to be able to use

52
00:02:26,420 --> 00:02:28,430
less and sass variables and CSS

53
00:02:28,430 --> 00:02:30,620
variables as you'll see the stock CSS

54
00:02:30,620 --> 00:02:31,939
variables do a lot of things you cannot

55
00:02:31,939 --> 00:02:34,790
do with less and sass variables so the

56
00:02:34,790 --> 00:02:37,099
idea is you keep using your preprocessor

57
00:02:37,099 --> 00:02:40,069
of choice for the things you can do with

58
00:02:40,069 --> 00:02:42,170
preprocessor variables and you use CSS

59
00:02:42,170 --> 00:02:43,849
variables for the things you cannot do

60
00:02:43,849 --> 00:02:47,000
with sass so because the syntax is

61
00:02:47,000 --> 00:02:48,859
different you can use the dollar

62
00:02:48,859 --> 00:02:50,629
variables of sass and you can use the -

63
00:02:50,629 --> 00:02:53,299
- variables of CSS and they both work

64
00:02:53,299 --> 00:02:55,970
together just great you could even have

65
00:02:55,970 --> 00:02:59,780
a dollar blue sass variable and set it

66
00:02:59,780 --> 00:03:02,480
aside and set the CSS variable with it

67
00:03:02,480 --> 00:03:04,519
and it would just work so you might be

68
00:03:04,519 --> 00:03:05,810
thinking okay I understand that the

69
00:03:05,810 --> 00:03:09,709
syntax had to be different but why does

70
00:03:09,709 --> 00:03:13,129
it have to be so ugly so the other

71
00:03:13,129 --> 00:03:15,739
reason is we wanted something that is

72
00:03:15,739 --> 00:03:18,819
compatible with existing CSS parsers and

73
00:03:18,819 --> 00:03:21,590
CSS properties can only contain letters

74
00:03:21,590 --> 00:03:24,889
and dashes so we needed something that a

75
00:03:24,889 --> 00:03:27,440
can be parsed by existing parsers and B

76
00:03:27,440 --> 00:03:29,060
will not clash with any properties we

77
00:03:29,060 --> 00:03:31,069
define in the future and that's where

78
00:03:31,069 --> 00:03:33,319
the double dash comes from essentially

79
00:03:33,319 --> 00:03:36,290
it the inspiration for it was the the

80
00:03:36,290 --> 00:03:39,530
prefixed properties like - WebKit - it's

81
00:03:39,530 --> 00:03:41,870
basically and a prefixed property with

82
00:03:41,870 --> 00:03:48,680
an empty prefix through story so after

83
00:03:48,680 --> 00:03:51,440
this little parenthesis you might be

84
00:03:51,440 --> 00:03:53,780
thinking okay you replicated current

85
00:03:53,780 --> 00:03:55,430
color with CSS variables but I could I

86
00:03:55,430 --> 00:03:57,979
can do that with current color and have

87
00:03:57,979 --> 00:04:00,019
wider browser support so why are you CSS

88
00:04:00,019 --> 00:04:02,180
variables useful why should I care let's

89
00:04:02,180 --> 00:04:05,689
define another property corners and we

90
00:04:05,689 --> 00:04:11,290
can go here and say 100% minus whatever

91
00:04:11,290 --> 00:04:16,880
value corners has and now I have made

92
00:04:16,880 --> 00:04:18,409
another custom property that controls

93
00:04:18,409 --> 00:04:21,229
the size of these corners that I can use

94
00:04:21,229 --> 00:04:23,720
anywhere and you might be thinking okay

95
00:04:23,720 --> 00:04:25,130
in this in this case you could just

96
00:04:25,130 --> 00:04:28,550
write 20 pixels right there or 1m or

97
00:04:28,550 --> 00:04:30,529
whatever but you

98
00:04:30,529 --> 00:04:32,079
haven't really gained anything right

99
00:04:32,079 --> 00:04:35,779
however when I say anywhere I mean

100
00:04:35,779 --> 00:04:38,239
anywhere I can take this corners

101
00:04:38,239 --> 00:04:41,269
declaration and put it in an inline

102
00:04:41,269 --> 00:04:46,939
style and it still works and since I can

103
00:04:46,939 --> 00:04:48,949
put it in an inline style I could also

104
00:04:48,949 --> 00:04:50,599
set this with JavaScript and actually

105
00:04:50,599 --> 00:04:52,219
the last section of this talk is exactly

106
00:04:52,219 --> 00:04:53,869
about this all the cool things we can do

107
00:04:53,869 --> 00:04:55,399
when we combine CSS variables with

108
00:04:55,399 --> 00:04:56,989
JavaScript because that's the biggest

109
00:04:56,989 --> 00:04:59,239
difference of CSS variables and sass

110
00:04:59,239 --> 00:05:02,389
variable CSS variables are live they can

111
00:05:02,389 --> 00:05:04,669
be updated at any point even by a pseudo

112
00:05:04,669 --> 00:05:07,519
class or JavaScript or inline Styles

113
00:05:07,519 --> 00:05:13,069
anything so beyond the syntax of the

114
00:05:13,069 --> 00:05:14,959
double dash to define the variable and

115
00:05:14,959 --> 00:05:17,029
the VAR function to call it there's also

116
00:05:17,029 --> 00:05:20,209
another thing which is the full-back

117
00:05:20,209 --> 00:05:26,449
value let's say deep pink here and let's

118
00:05:26,449 --> 00:05:31,789
give this black or whatever and this

119
00:05:31,789 --> 00:05:34,759
fallback is applied when the variable is

120
00:05:34,759 --> 00:05:38,269
not set which is also useful and we'll

121
00:05:38,269 --> 00:05:41,329
see some caveats later on this talk so

122
00:05:41,329 --> 00:05:42,860
the first takeaway is that CSS variables

123
00:05:42,860 --> 00:05:45,259
work exactly like normal CSS properties

124
00:05:45,259 --> 00:05:47,479
in fact the spec for it for them it's

125
00:05:47,479 --> 00:05:49,549
not called CSS variable variables it's

126
00:05:49,549 --> 00:05:51,949
called CSS custom properties for

127
00:05:51,949 --> 00:05:53,569
cascading variables yeah it's kind of a

128
00:05:53,569 --> 00:05:59,149
long title so here's a simple HTML

129
00:05:59,149 --> 00:06:02,089
structure just six divs three parent

130
00:06:02,089 --> 00:06:06,529
tips and three child dibs and here I

131
00:06:06,529 --> 00:06:09,049
mean I'm using I'm setting a dash dash

132
00:06:09,049 --> 00:06:11,389
outline variable on the first one just

133
00:06:11,389 --> 00:06:14,389
this outer div the white one and I'm

134
00:06:14,389 --> 00:06:16,639
also saying that everywhere that the

135
00:06:16,639 --> 00:06:19,039
outline variable is set set the outline

136
00:06:19,039 --> 00:06:21,349
property to that so you might have

137
00:06:21,349 --> 00:06:23,839
noticed that even though the inner div

138
00:06:23,839 --> 00:06:26,599
doesn't have any dash dash outline set

139
00:06:26,599 --> 00:06:29,929
it still gets an outline and the reason

140
00:06:29,929 --> 00:06:32,719
is that CSS variables are inherited

141
00:06:32,719 --> 00:06:35,899
properties which is useful in many cases

142
00:06:35,899 --> 00:06:37,729
for example you can set them on the HTML

143
00:06:37,729 --> 00:06:39,889
element and access them from any element

144
00:06:39,889 --> 00:06:42,589
but in some cases you might not want

145
00:06:42,589 --> 00:06:43,820
this behavior

146
00:06:43,820 --> 00:06:46,670
for that you can use the universal

147
00:06:46,670 --> 00:06:50,350
selector and set them to initial and

148
00:06:50,350 --> 00:06:52,670
because inheritance always has lower

149
00:06:52,670 --> 00:06:55,970
precedence than explicitly referencing

150
00:06:55,970 --> 00:06:57,320
the element even with the zero

151
00:06:57,320 --> 00:07:00,620
specificity of the star selector then if

152
00:07:00,620 --> 00:07:02,780
you haven't set the outline variable

153
00:07:02,780 --> 00:07:05,450
explicitly on the element then it will

154
00:07:05,450 --> 00:07:07,670
just be initial which means no value

155
00:07:07,670 --> 00:07:09,770
which means this declaration is not

156
00:07:09,770 --> 00:07:14,390
applied so the second takeaway is that

157
00:07:14,390 --> 00:07:16,400
CSS variables are inherited properties

158
00:07:16,400 --> 00:07:18,650
but you can change that so you get you

159
00:07:18,650 --> 00:07:20,300
get the best of both worlds there is a

160
00:07:20,300 --> 00:07:23,960
default but you can change it so you

161
00:07:23,960 --> 00:07:26,210
might be thinking ah I couldn't think of

162
00:07:26,210 --> 00:07:28,190
a cool use case for variables I have

163
00:07:28,190 --> 00:07:29,990
this image folder and I have these

164
00:07:29,990 --> 00:07:32,660
complicated backgrounds and maybe I can

165
00:07:32,660 --> 00:07:35,420
use variables to set my background image

166
00:07:35,420 --> 00:07:39,590
so you might try something like this for

167
00:07:39,590 --> 00:07:44,060
your first attempt and then you might

168
00:07:44,060 --> 00:07:46,790
think hmmm how do I concatenate a

169
00:07:46,790 --> 00:07:48,800
variable with a string maybe I should

170
00:07:48,800 --> 00:07:50,690
drive it's the same thing I do with the

171
00:07:50,690 --> 00:07:52,400
content property which is placing the

172
00:07:52,400 --> 00:07:55,070
strings next to each other so you try

173
00:07:55,070 --> 00:07:58,130
something like this and you're

174
00:07:58,130 --> 00:07:59,900
disappointed to find it doesn't really

175
00:07:59,900 --> 00:08:02,810
work so at this point we're like okay

176
00:08:02,810 --> 00:08:05,330
let's let's explore this maybe we should

177
00:08:05,330 --> 00:08:07,070
try something else maybe we should put

178
00:08:07,070 --> 00:08:13,130
the entire URL here and just put var

179
00:08:13,130 --> 00:08:16,700
inside the URL here and maybe that will

180
00:08:16,700 --> 00:08:20,060
work nope that doesn't work either so at

181
00:08:20,060 --> 00:08:22,160
this point we're kind of desperate and

182
00:08:22,160 --> 00:08:23,540
we're like ok I'm gonna put the entire

183
00:08:23,540 --> 00:08:25,430
URL in here that that must work right

184
00:08:25,430 --> 00:08:28,480
this must work nope

185
00:08:28,480 --> 00:08:32,630
why is this so these are three different

186
00:08:32,630 --> 00:08:36,800
issues with three different reasons the

187
00:08:36,800 --> 00:08:38,780
first one that we tried is a CSS

188
00:08:38,780 --> 00:08:40,729
limitation we currently cannot

189
00:08:40,729 --> 00:08:41,919
concatenate strings

190
00:08:41,919 --> 00:08:44,810
the content property is an exception

191
00:08:44,810 --> 00:08:46,550
it's defined that in the content

192
00:08:46,550 --> 00:08:48,110
property you can put strings next to

193
00:08:48,110 --> 00:08:49,760
each other and they're concatenated it's

194
00:08:49,760 --> 00:08:51,890
not a CSS wide thing we will probably

195
00:08:51,890 --> 00:08:54,070
eventually get some syntax to do this

196
00:08:54,070 --> 00:08:58,070
but right now we don't have any

197
00:08:58,070 --> 00:09:01,140
the second one that we tried is a CSS

198
00:09:01,140 --> 00:09:04,710
bug the URL function is very peculiar it

199
00:09:04,710 --> 00:09:06,840
has very weird parsing rules one of

200
00:09:06,840 --> 00:09:08,850
which is that if you see a closing

201
00:09:08,850 --> 00:09:12,060
parenthesis then the whole thing is

202
00:09:12,060 --> 00:09:13,950
terminated so it does not really

203
00:09:13,950 --> 00:09:15,540
understand variables it was written

204
00:09:15,540 --> 00:09:17,850
before variables and it's an exception

205
00:09:17,850 --> 00:09:19,830
you can use variables in any other CSS

206
00:09:19,830 --> 00:09:21,510
function we've seen them in the

207
00:09:21,510 --> 00:09:24,000
beginning in radial gradient but not in

208
00:09:24,000 --> 00:09:26,250
the URL function this will also be

209
00:09:26,250 --> 00:09:27,600
solved eventually but right now you

210
00:09:27,600 --> 00:09:31,110
can't and the last one is a chrome bug

211
00:09:31,110 --> 00:09:32,850
I'm using Chrome for this presentation

212
00:09:32,850 --> 00:09:37,260
and it has a bug so and the actual bug

213
00:09:37,260 --> 00:09:40,890
is it's not that it doesn't understand

214
00:09:40,890 --> 00:09:42,720
URLs in variables is that it doesn't

215
00:09:42,720 --> 00:09:45,570
understand relative URLs in variables so

216
00:09:45,570 --> 00:09:50,370
if I go here and copy my URL and put it

217
00:09:50,370 --> 00:09:54,180
here it works if I make it absolute go

218
00:09:54,180 --> 00:09:56,580
figure well actually there I can explain

219
00:09:56,580 --> 00:10:00,180
this issue in a bit more detail so the

220
00:10:00,180 --> 00:10:03,270
reason that chrome has this bug and it

221
00:10:03,270 --> 00:10:05,250
works on Firefox but not in some edge

222
00:10:05,250 --> 00:10:07,170
cases is that it's actually under

223
00:10:07,170 --> 00:10:09,830
specified how browsers should resolve

224
00:10:09,830 --> 00:10:14,640
you a relative URLs in variables and you

225
00:10:14,640 --> 00:10:16,650
might be thinking well what is there to

226
00:10:16,650 --> 00:10:18,150
resolve it's pretty obvious what should

227
00:10:18,150 --> 00:10:21,000
happen yes if all your CSS is in one

228
00:10:21,000 --> 00:10:22,470
file it's pretty obvious what should

229
00:10:22,470 --> 00:10:25,470
happen but what happens if you have your

230
00:10:25,470 --> 00:10:27,510
variable declarations all over the place

231
00:10:27,510 --> 00:10:29,790
if you have one CSS with some variables

232
00:10:29,790 --> 00:10:32,040
another CSS that calls these variables

233
00:10:32,040 --> 00:10:34,560
and the third CSS that calls variables

234
00:10:34,560 --> 00:10:37,620
from the second one so do these

235
00:10:37,620 --> 00:10:40,260
variables resolve relative to to a B or

236
00:10:40,260 --> 00:10:44,490
C and actually this is this is debated

237
00:10:44,490 --> 00:10:47,940
in the CSS working group right now so if

238
00:10:47,940 --> 00:10:50,250
you go to that github issue if you have

239
00:10:50,250 --> 00:10:52,530
an opinion on this because basically

240
00:10:52,530 --> 00:10:54,720
what should happen based on the current

241
00:10:54,720 --> 00:10:56,370
definition of CSS is that variables

242
00:10:56,370 --> 00:10:58,590
resolve based on the place where you

243
00:10:58,590 --> 00:11:01,650
call them which is C but some people

244
00:11:01,650 --> 00:11:03,660
have said maybe this is not very useful

245
00:11:03,660 --> 00:11:06,060
so if you have an opinion please come

246
00:11:06,060 --> 00:11:09,420
and tell us keep in mind that most

247
00:11:09,420 --> 00:11:10,510
people in the CSS

248
00:11:10,510 --> 00:11:12,160
are not actually web developers so they

249
00:11:12,160 --> 00:11:13,630
have no idea what web developers

250
00:11:13,630 --> 00:11:19,240
actually want so input is very useful so

251
00:11:19,240 --> 00:11:21,329
right now until these issues are sold

252
00:11:21,329 --> 00:11:24,610
CSS variables + URL equals chocolate ice

253
00:11:24,610 --> 00:11:29,620
cream some more WT apps because this is

254
00:11:29,620 --> 00:11:34,199
CSS after all an empty value is invalid

255
00:11:34,199 --> 00:11:37,779
- - foo colon semicolon is invalid

256
00:11:37,779 --> 00:11:40,060
that's not a WTF that's pretty expected

257
00:11:40,060 --> 00:11:42,550
what might not be expected it is that

258
00:11:42,550 --> 00:11:45,399
this is valid and the value of foo is is

259
00:11:45,399 --> 00:11:50,740
a space character also lowercase foo is

260
00:11:50,740 --> 00:11:52,420
different than uppercase foo CSS

261
00:11:52,420 --> 00:11:54,490
variables are case sensitive unlike any

262
00:11:54,490 --> 00:12:01,029
other CSS property yeah so I mentioned

263
00:12:01,029 --> 00:12:01,839
fullbacks

264
00:12:01,839 --> 00:12:05,050
earlier which is the second parameter to

265
00:12:05,050 --> 00:12:06,760
the VAR function and you might be

266
00:12:06,760 --> 00:12:10,029
thinking wait a second CSS is cascading

267
00:12:10,029 --> 00:12:12,430
stylesheets after all isn't the Cascade

268
00:12:12,430 --> 00:12:14,670
supposed to provide a fallback like

269
00:12:14,670 --> 00:12:17,529
can't I just specify a declaration

270
00:12:17,529 --> 00:12:19,899
before the one with the var and that's

271
00:12:19,899 --> 00:12:25,420
my fallback not quite so this the

272
00:12:25,420 --> 00:12:28,180
fallback is applied not when not when

273
00:12:28,180 --> 00:12:29,800
the browser doesn't understand variables

274
00:12:29,800 --> 00:12:31,029
but when the browser understands

275
00:12:31,029 --> 00:12:35,230
variables but they are not set so as you

276
00:12:35,230 --> 00:12:37,089
might imagine if the browser doesn't

277
00:12:37,089 --> 00:12:38,709
understand variables at all the VAR

278
00:12:38,709 --> 00:12:41,230
function is invalid so the second

279
00:12:41,230 --> 00:12:44,019
declaration is ignored and the first one

280
00:12:44,019 --> 00:12:46,930
is in effect so if there's no series as

281
00:12:46,930 --> 00:12:49,720
variable supports the entire background

282
00:12:49,720 --> 00:12:54,970
will be read however if the browser does

283
00:12:54,970 --> 00:12:58,839
support CSS variables but accent color

284
00:12:58,839 --> 00:13:01,569
is not set anywhere or it's set to its

285
00:13:01,569 --> 00:13:03,490
initial value explicitly like - there's

286
00:13:03,490 --> 00:13:07,180
accent color initial then we get orange

287
00:13:07,180 --> 00:13:11,110
and of course if we set accent color to

288
00:13:11,110 --> 00:13:12,819
a specific color we get that one

289
00:13:12,819 --> 00:13:14,199
otherwise variables would be pretty

290
00:13:14,199 --> 00:13:15,000
useless

291
00:13:15,000 --> 00:13:17,470
so if accent colors yellow green we get

292
00:13:17,470 --> 00:13:20,890
yellow green so here's the thing what if

293
00:13:20,890 --> 00:13:24,519
we set accent color but we set it not

294
00:13:24,519 --> 00:13:26,319
but to something nonsensical for the

295
00:13:26,319 --> 00:13:29,470
background property what if we set it to

296
00:13:29,470 --> 00:13:33,100
I don't know 42 degrees which is

297
00:13:33,100 --> 00:13:36,970
completely useless in backgrounds what

298
00:13:36,970 --> 00:13:37,690
happens then

299
00:13:37,690 --> 00:13:41,740
how many think it's gonna be red raise

300
00:13:41,740 --> 00:13:43,240
your hands how many think it's gonna be

301
00:13:43,240 --> 00:13:48,100
red nobody correct how many think it's

302
00:13:48,100 --> 00:13:54,420
gonna be orange if you shake hands there

303
00:13:54,420 --> 00:13:57,329
that's a good guess but it's not correct

304
00:13:57,329 --> 00:14:01,079
the actual color we will get is

305
00:14:01,079 --> 00:14:05,680
transparent which may seem completely

306
00:14:05,680 --> 00:14:09,069
crazy but hear me there there's a reason

307
00:14:09,069 --> 00:14:11,920
and the reason is we cannot get of

308
00:14:11,920 --> 00:14:13,480
course we cannot get red by the time

309
00:14:13,480 --> 00:14:15,189
we've gone to the second declaration the

310
00:14:15,189 --> 00:14:16,540
browser has already thrown away the

311
00:14:16,540 --> 00:14:20,259
first one we can't get red we can't get

312
00:14:20,259 --> 00:14:23,110
orange because accent color is actually

313
00:14:23,110 --> 00:14:25,810
said we have a value for it what happens

314
00:14:25,810 --> 00:14:29,230
is that the second declaration becomes

315
00:14:29,230 --> 00:14:31,779
what we say invalid that computed value

316
00:14:31,779 --> 00:14:35,470
time and this means we we have thrown

317
00:14:35,470 --> 00:14:38,380
away all other declarations by then we

318
00:14:38,380 --> 00:14:40,149
cannot use them we cannot fall back to

319
00:14:40,149 --> 00:14:42,399
red we cannot fall back to orange what

320
00:14:42,399 --> 00:14:44,259
do we do we go to our initial value

321
00:14:44,259 --> 00:14:47,220
which for background is transparent for

322
00:14:47,220 --> 00:14:50,610
the color property would be black for

323
00:14:50,610 --> 00:14:53,110
you know if for border would be known

324
00:14:53,110 --> 00:14:55,300
every property has an initial value we

325
00:14:55,300 --> 00:14:59,310
jump back to that so forth take away

326
00:14:59,310 --> 00:15:01,630
invalid that computed value time is a

327
00:15:01,630 --> 00:15:04,540
new concept that we defined when we

328
00:15:04,540 --> 00:15:07,470
defined variables and it means initial

329
00:15:07,470 --> 00:15:09,759
it's exactly the same as the keyword

330
00:15:09,759 --> 00:15:15,040
initial so oh and these fullbacks is

331
00:15:15,040 --> 00:15:17,079
something we can also daisy chain the

332
00:15:17,079 --> 00:15:19,870
fallback for color one can be color two

333
00:15:19,870 --> 00:15:22,269
and the fallback for color two could be

334
00:15:22,269 --> 00:15:30,220
color three and so on also

335
00:15:30,220 --> 00:15:33,380
you might think if especially if you're

336
00:15:33,380 --> 00:15:34,700
coming from a prop from a programming

337
00:15:34,700 --> 00:15:37,399
background you might try to do something

338
00:15:37,399 --> 00:15:40,490
like this in the second day of the one

339
00:15:40,490 --> 00:15:44,540
that's inverted maybe I want its size to

340
00:15:44,540 --> 00:15:49,700
be one and bigger so I do something like

341
00:15:49,700 --> 00:15:56,600
this for size plus 1 M and I'm like why

342
00:15:56,600 --> 00:16:00,470
doesn't this work instead of getting 9ms

343
00:16:00,470 --> 00:16:03,920
I got either something very small or no

344
00:16:03,920 --> 00:16:05,810
height it's like no height has been said

345
00:16:05,810 --> 00:16:08,570
at all what's happening here so the

346
00:16:08,570 --> 00:16:10,850
thing is CSS is declarative there is no

347
00:16:10,850 --> 00:16:13,700
instruction order for a given state and

348
00:16:13,700 --> 00:16:17,360
a given element appropriately only has

349
00:16:17,360 --> 00:16:20,000
one value you cannot have this is the

350
00:16:20,000 --> 00:16:22,040
value of the property before this

351
00:16:22,040 --> 00:16:23,450
instruction or after this instruction

352
00:16:23,450 --> 00:16:25,399
there is no such thing there is no such

353
00:16:25,399 --> 00:16:30,740
concept of instruction order so actually

354
00:16:30,740 --> 00:16:33,680
because because every property needs to

355
00:16:33,680 --> 00:16:36,050
have one value it's not possible for it

356
00:16:36,050 --> 00:16:38,839
to be both its previous value and its

357
00:16:38,839 --> 00:16:41,200
value plus 1 M that's just nonsensical

358
00:16:41,200 --> 00:16:45,230
so in case such cycles are detected and

359
00:16:45,230 --> 00:16:47,209
this is a very trivial cycle you might

360
00:16:47,209 --> 00:16:49,550
also have cycles like a refers to B in B

361
00:16:49,550 --> 00:16:51,140
refers to a and so on

362
00:16:51,140 --> 00:16:54,200
if such cycles are detected it's exactly

363
00:16:54,200 --> 00:16:56,720
the same thing as if the variable was

364
00:16:56,720 --> 00:16:58,610
set with initial value and if the

365
00:16:58,610 --> 00:17:00,230
variable is set to its initial value

366
00:17:00,230 --> 00:17:02,990
this is also set to its initial value

367
00:17:02,990 --> 00:17:04,429
because this has this doesn't have a

368
00:17:04,429 --> 00:17:07,179
fallback and its initial value is also

369
00:17:07,179 --> 00:17:10,250
so it's exactly the same as if we

370
00:17:10,250 --> 00:17:12,800
haven't specified any height for that

371
00:17:12,800 --> 00:17:17,660
element so fifth takeaway cycles make it

372
00:17:17,660 --> 00:17:19,610
make variables invalid at computed value

373
00:17:19,610 --> 00:17:24,620
time so here is a small trick question

374
00:17:24,620 --> 00:17:26,780
there so let's see how many have been

375
00:17:26,780 --> 00:17:30,740
paying attention so far so the last two

376
00:17:30,740 --> 00:17:32,840
lines are exactly what you've seen in

377
00:17:32,840 --> 00:17:34,790
the previous example when I explained

378
00:17:34,790 --> 00:17:35,660
for bucks

379
00:17:35,660 --> 00:17:38,809
background red and then background var

380
00:17:38,809 --> 00:17:40,400
accent color with a fallback of orange

381
00:17:40,400 --> 00:17:42,410
and then we have to accent color

382
00:17:42,410 --> 00:17:43,640
declarations

383
00:17:43,640 --> 00:17:46,130
one that sets it to a nonsensical value

384
00:17:46,130 --> 00:17:50,000
and one that sets it to itself so how

385
00:17:50,000 --> 00:17:51,590
many think that the result is gonna be

386
00:17:51,590 --> 00:17:55,530
read show of hands

387
00:17:55,540 --> 00:17:59,170
nobody correct it's not gonna be read

388
00:17:59,170 --> 00:18:04,220
how many think it's gonna be orange once

389
00:18:04,220 --> 00:18:09,020
I found their second a few hands and you

390
00:18:09,020 --> 00:18:11,950
are correct it is orange

391
00:18:11,950 --> 00:18:17,120
why why why did this happen so remember

392
00:18:17,120 --> 00:18:19,250
before we said that if it's fits

393
00:18:19,250 --> 00:18:20,570
forty-two degrees we will get

394
00:18:20,570 --> 00:18:22,100
transparent because it's invalid that

395
00:18:22,100 --> 00:18:23,780
computed value time and it goes back to

396
00:18:23,780 --> 00:18:25,820
initial which is transparent the thing

397
00:18:25,820 --> 00:18:29,240
is right now the value of accent color

398
00:18:29,240 --> 00:18:32,450
is itself which means it computes to

399
00:18:32,450 --> 00:18:35,930
initial because it's a cycle the first

400
00:18:35,930 --> 00:18:38,240
declaration is actually red hearing it's

401
00:18:38,240 --> 00:18:41,660
completely ignored the second one

402
00:18:41,660 --> 00:18:43,610
overrides it so it's as if it wasn't

403
00:18:43,610 --> 00:18:45,290
there so the trick here is that the

404
00:18:45,290 --> 00:18:47,150
second declaration is exactly the same

405
00:18:47,150 --> 00:18:50,200
as if we said accent color initial and

406
00:18:50,200 --> 00:18:52,370
because accent color is set to its

407
00:18:52,370 --> 00:18:54,860
initial value we get the fallback which

408
00:18:54,860 --> 00:18:57,380
is orange because that's when the that's

409
00:18:57,380 --> 00:19:01,190
when the fallback is applied of course

410
00:19:01,190 --> 00:19:02,900
if the second declaration is not there

411
00:19:02,900 --> 00:19:05,660
we get transparent which I find kind of

412
00:19:05,660 --> 00:19:08,690
ironic we get the fallback when we have

413
00:19:08,690 --> 00:19:11,270
an invalid declaration there but when we

414
00:19:11,270 --> 00:19:14,990
don't have it we get transparent I think

415
00:19:14,990 --> 00:19:18,140
that was kind of interesting so I know

416
00:19:18,140 --> 00:19:19,970
that at sample at this point many of you

417
00:19:19,970 --> 00:19:21,470
might be thinking okay oh this is cool

418
00:19:21,470 --> 00:19:23,210
but what somebody please think of

419
00:19:23,210 --> 00:19:25,000
browser support

420
00:19:25,000 --> 00:19:27,710
how many browsers really support CSS

421
00:19:27,710 --> 00:19:29,300
variable surely it's not many it's

422
00:19:29,300 --> 00:19:31,640
probably just Chrome right I've heard

423
00:19:31,640 --> 00:19:34,850
this from so many people actually it is

424
00:19:34,850 --> 00:19:37,340
not just Chrome it's every single

425
00:19:37,340 --> 00:19:43,610
browser except edge and actually even

426
00:19:43,610 --> 00:19:44,960
though I know that you might be thinking

427
00:19:44,960 --> 00:19:46,850
oh god why are these Microsoft guys

428
00:19:46,850 --> 00:19:48,650
spoiling my life continuously I hate

429
00:19:48,650 --> 00:19:50,870
them I want to change from being a web

430
00:19:50,870 --> 00:19:52,550
developer and go raise farm animals

431
00:19:52,550 --> 00:19:55,730
because of Microsoft don't think that

432
00:19:55,730 --> 00:19:56,710
way

433
00:19:56,710 --> 00:19:58,779
has changed they're actually quite nice

434
00:19:58,779 --> 00:20:00,880
now they're trying to support standards

435
00:20:00,880 --> 00:20:02,649
they actually support some standards

436
00:20:02,649 --> 00:20:03,850
that other browsers don't and

437
00:20:03,850 --> 00:20:06,429
specifically about CSS variables they

438
00:20:06,429 --> 00:20:09,370
have announced that it's in development

439
00:20:09,370 --> 00:20:11,080
and it will be in the next version of

440
00:20:11,080 --> 00:20:14,799
edge so very very soon every single

441
00:20:14,799 --> 00:20:18,090
browser will support CSS variables and

442
00:20:18,090 --> 00:20:21,309
of course until then we have a lot of

443
00:20:21,309 --> 00:20:24,429
tools at our disposal we have the

444
00:20:24,429 --> 00:20:26,440
Cascade as usual background red

445
00:20:26,440 --> 00:20:29,200
background var which we can always use

446
00:20:29,200 --> 00:20:31,809
to provide for bugs we have app supports

447
00:20:31,809 --> 00:20:35,080
which as you can see here is supported

448
00:20:35,080 --> 00:20:37,169
by every single browser including edge

449
00:20:37,169 --> 00:20:41,440
since that's 13 so if you want to apply

450
00:20:41,440 --> 00:20:43,480
some different CSS for browsers that

451
00:20:43,480 --> 00:20:46,029
support CSS variables and some different

452
00:20:46,029 --> 00:20:48,340
CSS for browsers that don't you can use

453
00:20:48,340 --> 00:20:51,399
the app supports rule and any CSS

454
00:20:51,399 --> 00:20:53,620
variable and any value works there so I

455
00:20:53,620 --> 00:20:57,070
just news - - CSS : variables just to

456
00:20:57,070 --> 00:20:58,600
remind myself what this is about

457
00:20:58,600 --> 00:21:01,600
and of course you can also use the not

458
00:21:01,600 --> 00:21:05,440
keyword to apply some CSS to browsers

459
00:21:05,440 --> 00:21:09,039
that do not support CSS variables and of

460
00:21:09,039 --> 00:21:10,570
course as you can see here this is red

461
00:21:10,570 --> 00:21:12,789
now because Chrome does support CSS

462
00:21:12,789 --> 00:21:14,590
variables so it's ignoring the entire at

463
00:21:14,590 --> 00:21:20,470
supports block another interesting thing

464
00:21:20,470 --> 00:21:22,539
about variables and especially a

465
00:21:22,539 --> 00:21:24,850
difference that CSS variables have from

466
00:21:24,850 --> 00:21:27,429
SAS variables so or less variables let's

467
00:21:27,429 --> 00:21:28,990
assume that every time I say SAS I mean

468
00:21:28,990 --> 00:21:30,659
less as well I'm not trying to like show

469
00:21:30,659 --> 00:21:35,620
preferences there so in this case we

470
00:21:35,620 --> 00:21:40,960
have a div that is sized 33 V H sorry 33

471
00:21:40,960 --> 00:21:45,250
V W horizontally 33 V H vertically which

472
00:21:45,250 --> 00:21:46,960
basically means it has exactly the same

473
00:21:46,960 --> 00:21:49,510
aspect ratios the viewport and it's one

474
00:21:49,510 --> 00:21:53,649
third of the viewport so we might be we

475
00:21:53,649 --> 00:21:56,399
might think I don't like repeating this

476
00:21:56,399 --> 00:21:59,110
33 like what if I want to set it to 30

477
00:21:59,110 --> 00:22:01,020
and I have to do it twice

478
00:22:01,020 --> 00:22:04,570
that's not very dry right so I want to

479
00:22:04,570 --> 00:22:08,799
set a variable that says size and I set

480
00:22:08,799 --> 00:22:10,029
it to

481
00:22:10,029 --> 00:22:14,840
so then I go here when I save our size

482
00:22:14,840 --> 00:22:21,830
be a VW and var size be age and then I

483
00:22:21,830 --> 00:22:24,669
look at what I've done and I'm like what

484
00:22:24,669 --> 00:22:27,130
suddenly nothing works anymore

485
00:22:27,130 --> 00:22:29,840
so the reason this doesn't work is that

486
00:22:29,840 --> 00:22:32,029
variable values are basically token

487
00:22:32,029 --> 00:22:33,890
lists the browser doesn't see this as a

488
00:22:33,890 --> 00:22:36,110
string that says 30 that it we can just

489
00:22:36,110 --> 00:22:37,900
put next to V 8bw

490
00:22:37,900 --> 00:22:43,760
it sees it as a number and then it sees

491
00:22:43,760 --> 00:22:47,360
VW as an identifier so essentially for

492
00:22:47,360 --> 00:22:50,120
the browser it based it resolves exactly

493
00:22:50,120 --> 00:22:52,880
the same as this which is an invalid

494
00:22:52,880 --> 00:22:55,640
value so width width and height are

495
00:22:55,640 --> 00:22:58,100
invalid at computed value time actually

496
00:22:58,100 --> 00:22:59,659
not even a computed value time they're

497
00:22:59,659 --> 00:23:05,270
invalid values and you just get their

498
00:23:05,270 --> 00:23:08,960
initial values which is Auto so what can

499
00:23:08,960 --> 00:23:12,220
we do in this case what we can do is

500
00:23:12,220 --> 00:23:16,250
it's a little more syntax but we can use

501
00:23:16,250 --> 00:23:21,760
calc and multiply the number with one VW

502
00:23:21,760 --> 00:23:29,140
and of course here let me copy this and

503
00:23:29,140 --> 00:23:32,840
here we multiply with 1 vh yes it's a

504
00:23:32,840 --> 00:23:35,149
little more syntax than SAS but that's

505
00:23:35,149 --> 00:23:36,350
what you get when you have live

506
00:23:36,350 --> 00:23:37,929
variables that have structure to them

507
00:23:37,929 --> 00:23:42,640
it's not just old spitting out strings

508
00:23:42,640 --> 00:23:45,830
you might think what if I try to save

509
00:23:45,830 --> 00:23:49,760
myself at least one calc so what if I

510
00:23:49,760 --> 00:23:54,260
say 30 VW here so I set the width to

511
00:23:54,260 --> 00:23:58,909
just var size and then here I go and

512
00:23:58,909 --> 00:24:02,330
divide it by 1 VW and I see that this

513
00:24:02,330 --> 00:24:06,320
doesn't work why doesn't it work I would

514
00:24:06,320 --> 00:24:09,169
expect it to work 30 VW divided by 1 VW

515
00:24:09,169 --> 00:24:12,529
it's like elementary school maths the

516
00:24:12,529 --> 00:24:15,260
reason it doesn't work is that dividing

517
00:24:15,260 --> 00:24:18,080
by lengths is not supported in calc yet

518
00:24:18,080 --> 00:24:20,330
and the reason it's not supported is

519
00:24:20,330 --> 00:24:22,700
that when we specified calc the

520
00:24:22,700 --> 00:24:24,530
whole concept of something being invalid

521
00:24:24,530 --> 00:24:26,120
that computed value time did not exist

522
00:24:26,120 --> 00:24:30,280
yet so we were like but what if the

523
00:24:30,280 --> 00:24:32,840
denominator ends up being zero and then

524
00:24:32,840 --> 00:24:34,700
what do we do in that case its division

525
00:24:34,700 --> 00:24:37,160
by zero and we couldn't make it invalid

526
00:24:37,160 --> 00:24:38,420
that computed value time because the

527
00:24:38,420 --> 00:24:40,610
concept didn't exist so we can only

528
00:24:40,610 --> 00:24:45,080
divide by numbers so take away if you

529
00:24:45,080 --> 00:24:46,610
have a number in a variable you can

530
00:24:46,610 --> 00:24:48,440
always convert it to any unit you want

531
00:24:48,440 --> 00:24:51,110
by just multiplying with one and that

532
00:24:51,110 --> 00:24:53,780
unit in calc but if you have a unit

533
00:24:53,780 --> 00:24:57,050
there is absolutely no way to convert it

534
00:24:57,050 --> 00:24:59,810
to a number you just can't do this maybe

535
00:24:59,810 --> 00:25:01,400
you can do it of course you can do it

536
00:25:01,400 --> 00:25:02,510
with JavaScript you can do everything

537
00:25:02,510 --> 00:25:04,910
with JavaScript but with CSS there is

538
00:25:04,910 --> 00:25:08,300
just no way to do this so which brings

539
00:25:08,300 --> 00:25:10,940
us to our six takeaway you should use

540
00:25:10,940 --> 00:25:14,030
variables for pure data not CSS values

541
00:25:14,030 --> 00:25:16,730
only use variables for CSS values if

542
00:25:16,730 --> 00:25:18,050
it's something very quick that you've

543
00:25:18,050 --> 00:25:21,740
defined like in this specific rule and

544
00:25:21,740 --> 00:25:24,050
you're just gonna use it in there but in

545
00:25:24,050 --> 00:25:26,360
most cases just use variables for pure

546
00:25:26,360 --> 00:25:28,610
data you can do anything to pure data if

547
00:25:28,610 --> 00:25:30,380
it's just numbers you can always convert

548
00:25:30,380 --> 00:25:32,330
them to anything you want if it seems as

549
00:25:32,330 --> 00:25:34,520
values like 10 pixels you can't really

550
00:25:34,520 --> 00:25:38,690
do very much so many how many of you

551
00:25:38,690 --> 00:25:43,260
have used CSS animations or transitions

552
00:25:43,270 --> 00:25:46,070
about half the rest of you should

553
00:25:46,070 --> 00:25:48,680
definitely try them out they're very

554
00:25:48,680 --> 00:25:52,190
cool so those of you that have tried

555
00:25:52,190 --> 00:25:54,800
using CSS transitions and animations

556
00:25:54,800 --> 00:25:58,070
might be thinking at this point hmm CSS

557
00:25:58,070 --> 00:25:59,840
variables are cool you know what would

558
00:25:59,840 --> 00:26:02,090
be even cooler CSS variables and

559
00:26:02,090 --> 00:26:04,700
animations you might be a bit

560
00:26:04,700 --> 00:26:09,020
disappointed so here I have an animation

561
00:26:09,020 --> 00:26:11,000
very simple animation going from yellow

562
00:26:11,000 --> 00:26:15,530
to blue and I'm thinking what if instead

563
00:26:15,530 --> 00:26:18,160
of animating background color I say

564
00:26:18,160 --> 00:26:23,650
background color is the BG variable and

565
00:26:23,650 --> 00:26:26,210
here instead of setting background color

566
00:26:26,210 --> 00:26:31,760
we set the BG variable it should work

567
00:26:31,760 --> 00:26:33,500
right conceptually it should work I'm

568
00:26:33,500 --> 00:26:35,000
animating this value and background

569
00:26:35,000 --> 00:26:36,330
color is always set to this

570
00:26:36,330 --> 00:26:39,710
in this values live why doesn't it work

571
00:26:39,710 --> 00:26:42,929
so the reason it doesn't work is that

572
00:26:42,929 --> 00:26:45,149
even though variables are token streams

573
00:26:45,149 --> 00:26:47,610
and they're lightly parse the browser

574
00:26:47,610 --> 00:26:49,590
kind of pretends that it doesn't exactly

575
00:26:49,590 --> 00:26:51,899
know what type they are so they're like

576
00:26:51,899 --> 00:26:53,730
the browser is like oh I don't I don't

577
00:26:53,730 --> 00:26:56,880
really know how to interpolate this so

578
00:26:56,880 --> 00:26:59,279
nothing really happens actually there's

579
00:26:59,279 --> 00:27:01,409
also a browser bug in play here what

580
00:27:01,409 --> 00:27:03,539
should happen is that you should see

581
00:27:03,539 --> 00:27:07,320
yellow and blue abruptly going from one

582
00:27:07,320 --> 00:27:08,820
to the other with no transition you

583
00:27:08,820 --> 00:27:10,679
shouldn't be seeing transparent that's

584
00:27:10,679 --> 00:27:15,149
that's a bug but you wouldn't be seeing

585
00:27:15,149 --> 00:27:23,760
a transition sadly so this is the actual

586
00:27:23,760 --> 00:27:25,950
quote from the spec from anybody who is

587
00:27:25,950 --> 00:27:28,860
into that CSS variables can even be

588
00:27:28,860 --> 00:27:30,720
transitioned or animated but since the

589
00:27:30,720 --> 00:27:32,309
UI has no way to interpret their

590
00:27:32,309 --> 00:27:35,190
contents they always use the flips at

591
00:27:35,190 --> 00:27:37,350
50% behavior that is used for any other

592
00:27:37,350 --> 00:27:38,580
pair of values that can't be

593
00:27:38,580 --> 00:27:41,549
intelligently interpolated so this is

594
00:27:41,549 --> 00:27:43,350
also what it's supposed to happen when

595
00:27:43,350 --> 00:27:45,600
you use display for example in your key

596
00:27:45,600 --> 00:27:47,700
frames or any property that doesn't have

597
00:27:47,700 --> 00:27:50,070
a defined interpolation many browsers

598
00:27:50,070 --> 00:27:51,960
don't actually follow that so it's kind

599
00:27:51,960 --> 00:27:55,470
of a mess right now but yeah at this

600
00:27:55,470 --> 00:27:58,559
point CSS variables + animations equals

601
00:27:58,559 --> 00:28:03,480
chocolate ice cream of course Oh in the

602
00:28:03,480 --> 00:28:05,360
future you'll be able to define what

603
00:28:05,360 --> 00:28:08,429
type your variables are by using

604
00:28:08,429 --> 00:28:14,399
javascript so you'll define a CSS

605
00:28:14,399 --> 00:28:17,820
property a CSS variable in your CSS you

606
00:28:17,820 --> 00:28:22,019
will animate it with a CSS animation but

607
00:28:22,019 --> 00:28:23,669
to tell the browser how to animate it

608
00:28:23,669 --> 00:28:26,610
you'll have to use JavaScript okay

609
00:28:26,610 --> 00:28:33,990
that makes sense so one thing is even

610
00:28:33,990 --> 00:28:35,639
though you cannot animate the variables

611
00:28:35,639 --> 00:28:38,340
themselves you can use variables in key

612
00:28:38,340 --> 00:28:40,830
frames so if instead of having yellow

613
00:28:40,830 --> 00:28:45,799
and 0ca I wanted to have color 1 and

614
00:28:45,799 --> 00:28:49,440
color 2 and this would also be defined

615
00:28:49,440 --> 00:28:51,779
in the root element or whatever because

616
00:28:51,779 --> 00:28:59,789
they inherit so let me copy this and I

617
00:28:59,789 --> 00:29:03,659
can go to my animation here now returned

618
00:29:03,659 --> 00:29:05,519
it to its original state and now I'm

619
00:29:05,519 --> 00:29:11,250
gonna use variables in it as you can see

620
00:29:11,250 --> 00:29:13,279
this works just fine

621
00:29:13,279 --> 00:29:15,990
so using variable references and

622
00:29:15,990 --> 00:29:17,610
animation keyframes is fine

623
00:29:17,610 --> 00:29:20,549
it's animating the actual variables that

624
00:29:20,549 --> 00:29:26,519
you can't do also you here's here's

625
00:29:26,519 --> 00:29:28,110
something that might baffle you at first

626
00:29:28,110 --> 00:29:29,730
it did buffle me when I first discovered

627
00:29:29,730 --> 00:29:33,389
it so here is a transition when I'm

628
00:29:33,389 --> 00:29:35,519
clicking on the slide notice the active

629
00:29:35,519 --> 00:29:38,039
pseudo-class there when I'm clicking on

630
00:29:38,039 --> 00:29:40,620
the slide it turns blue because of the

631
00:29:40,620 --> 00:29:43,470
second pseudo class and I'm using CSS

632
00:29:43,470 --> 00:29:50,149
transitions for that but what if I said

633
00:29:50,149 --> 00:29:58,169
background VAR color and then I said

634
00:29:58,169 --> 00:30:04,500
colored here through yellow and color

635
00:30:04,500 --> 00:30:08,190
here to blue as you can see this

636
00:30:08,190 --> 00:30:13,440
actually does animate so when I first

637
00:30:13,440 --> 00:30:17,070
came across this I tweeted so it turns

638
00:30:17,070 --> 00:30:19,799
out we can use CSS variables in

639
00:30:19,799 --> 00:30:21,779
transitions but not animations this is

640
00:30:21,779 --> 00:30:25,259
very weird and I got a reply I think by

641
00:30:25,259 --> 00:30:28,169
table Atkins that basically what's

642
00:30:28,169 --> 00:30:30,779
happening in this case is that it's not

643
00:30:30,779 --> 00:30:33,029
the variable that is animate there is

644
00:30:33,029 --> 00:30:35,340
transitioning it's that the change of

645
00:30:35,340 --> 00:30:37,889
the variable is triggering a transition

646
00:30:37,889 --> 00:30:40,799
in background so if I restrict my

647
00:30:40,799 --> 00:30:43,679
transition here and I say only

648
00:30:43,679 --> 00:30:45,570
transition the color the darkest color

649
00:30:45,570 --> 00:30:47,909
property there's no transition anymore

650
00:30:47,909 --> 00:30:49,500
because that's not the actual transition

651
00:30:49,500 --> 00:30:52,649
I'm seeing if I change it to background

652
00:30:52,649 --> 00:30:55,230
color now I get my transition back

653
00:30:55,230 --> 00:30:56,700
because that's the property that is

654
00:30:56,700 --> 00:31:00,920
actually transitioning

655
00:31:00,930 --> 00:31:06,360
so now that I've discussed the basic

656
00:31:06,360 --> 00:31:08,590
syntax of variables some common use

657
00:31:08,590 --> 00:31:10,870
cases this is probably one of the most

658
00:31:10,870 --> 00:31:13,210
basic components that we all use but

659
00:31:13,210 --> 00:31:15,580
when I say in this slide pretty much

660
00:31:15,580 --> 00:31:17,620
extends to every component including web

661
00:31:17,620 --> 00:31:19,600
components but this is probably the

662
00:31:19,600 --> 00:31:21,720
simplest one ever it's just a button

663
00:31:21,720 --> 00:31:25,510
it's a flat design button so the the

664
00:31:25,510 --> 00:31:27,550
border is the same color as the text and

665
00:31:27,550 --> 00:31:29,530
then when I hover over it the border

666
00:31:29,530 --> 00:31:31,090
color becomes the background color and

667
00:31:31,090 --> 00:31:33,540
same here and I have a pink variation

668
00:31:33,540 --> 00:31:34,780
whoops

669
00:31:34,780 --> 00:31:38,320
with the pink class where I define

670
00:31:38,320 --> 00:31:41,920
different colors so that when I hover

671
00:31:41,920 --> 00:31:44,260
over it and everything it every color

672
00:31:44,260 --> 00:31:45,820
that was black in the previous one is

673
00:31:45,820 --> 00:31:48,490
now pink and as you can see I had to

674
00:31:48,490 --> 00:31:50,730
basically define my colors three times

675
00:31:50,730 --> 00:31:54,280
on every variation so how can CSS

676
00:31:54,280 --> 00:31:57,930
variables help with that I can define a

677
00:31:57,930 --> 00:32:01,960
color variable and set the color

678
00:32:01,960 --> 00:32:07,570
property to that variable and I can set

679
00:32:07,570 --> 00:32:10,600
it here as well and here as well and now

680
00:32:10,600 --> 00:32:15,610
I can go here and just set the dash dash

681
00:32:15,610 --> 00:32:17,650
Cola variable and we get rid of all this

682
00:32:17,650 --> 00:32:19,570
code and it just works exactly the same

683
00:32:19,570 --> 00:32:23,170
way even more importantly I don't need

684
00:32:23,170 --> 00:32:25,120
to have predefined variations anymore I

685
00:32:25,120 --> 00:32:28,870
can ditch this altogether and I can go

686
00:32:28,870 --> 00:32:36,850
here and I can say this and I can have

687
00:32:36,850 --> 00:32:39,220
infinite variations and of course I

688
00:32:39,220 --> 00:32:40,180
don't have to do it with an inline style

689
00:32:40,180 --> 00:32:42,130
but say this is a more complicated

690
00:32:42,130 --> 00:32:43,690
component and I've released it to the

691
00:32:43,690 --> 00:32:45,370
public and people want to skin it I

692
00:32:45,370 --> 00:32:47,140
don't need to provide predefined

693
00:32:47,140 --> 00:32:48,580
variations for them they can just set a

694
00:32:48,580 --> 00:32:50,860
color property and set it to whatever

695
00:32:50,860 --> 00:32:54,070
color they want which means both smaller

696
00:32:54,070 --> 00:32:56,080
CSS and more flexibility for people

697
00:32:56,080 --> 00:32:58,660
using the component and also it's not

698
00:32:58,660 --> 00:33:00,070
just about greater flexibility and

699
00:33:00,070 --> 00:33:01,540
smaller CSS it's also about

700
00:33:01,540 --> 00:33:03,880
encapsulation encapsulation is a concept

701
00:33:03,880 --> 00:33:06,600
from software engineering which means

702
00:33:06,600 --> 00:33:09,700
basically that people using a component

703
00:33:09,700 --> 00:33:12,550
don't have to know how it works

704
00:33:12,550 --> 00:33:13,720
internally and they can

705
00:33:13,720 --> 00:33:15,880
they can use it and its internal

706
00:33:15,880 --> 00:33:18,820
implementation can change and they don't

707
00:33:18,820 --> 00:33:19,980
have to change their code

708
00:33:19,980 --> 00:33:23,380
so notice how the background just

709
00:33:23,380 --> 00:33:26,380
abruptly changes when I hover what if I

710
00:33:26,380 --> 00:33:29,500
wanted to use a transition and I wanted

711
00:33:29,500 --> 00:33:33,130
to say instead of using a background on

712
00:33:33,130 --> 00:33:36,220
hover I want to use a book a book shadow

713
00:33:36,220 --> 00:33:42,850
an inset box shadow with no blur and a

714
00:33:42,850 --> 00:33:46,480
spread of one and instead has to be

715
00:33:46,480 --> 00:33:50,640
after the color right so as you can see

716
00:33:50,640 --> 00:33:53,490
and let's restrict this to book shadow

717
00:33:53,490 --> 00:33:57,190
so as you can see now I've changed how

718
00:33:57,190 --> 00:34:00,070
the cacao the hover works and if it was

719
00:34:00,070 --> 00:34:02,410
if I was using if people use it seeming

720
00:34:02,410 --> 00:34:04,060
my component had to override my

721
00:34:04,060 --> 00:34:06,160
declarations I would need to notify

722
00:34:06,160 --> 00:34:07,690
every single one of them that actually I

723
00:34:07,690 --> 00:34:09,340
changed how the component works and now

724
00:34:09,340 --> 00:34:11,110
you don't override the background you

725
00:34:11,110 --> 00:34:12,430
override the book shadow and they would

726
00:34:12,430 --> 00:34:15,340
have to repeat my book shadow now their

727
00:34:15,340 --> 00:34:18,310
existing code works notes no notice how

728
00:34:18,310 --> 00:34:19,990
I themed the second button by just

729
00:34:19,990 --> 00:34:22,570
saying color blue it still works even

730
00:34:22,570 --> 00:34:24,370
though I changed how the button

731
00:34:24,370 --> 00:34:29,110
component is implemented so it's take

732
00:34:29,110 --> 00:34:31,000
away CSS variables enable theming

733
00:34:31,000 --> 00:34:33,460
independent of CSS structure which i

734
00:34:33,460 --> 00:34:35,860
think is very important especially if

735
00:34:35,860 --> 00:34:37,960
you're you're using third-party

736
00:34:37,960 --> 00:34:40,090
components or your developer your

737
00:34:40,090 --> 00:34:41,680
JavaScript developer and your CSS

738
00:34:41,680 --> 00:34:46,210
developer at different people also one

739
00:34:46,210 --> 00:34:47,920
last thing you might be you might not

740
00:34:47,920 --> 00:34:49,840
you might have noticed that I I set the

741
00:34:49,840 --> 00:34:51,160
color to black here

742
00:34:51,160 --> 00:34:52,870
this means that everybody theming my

743
00:34:52,870 --> 00:34:55,840
component has to override this with

744
00:34:55,840 --> 00:34:57,640
their own color declaration which is

745
00:34:57,640 --> 00:35:00,580
easy if my component is just a tag but

746
00:35:00,580 --> 00:35:05,560
if it's like button dot my components

747
00:35:05,560 --> 00:35:08,670
don't my framework whatever you know

748
00:35:08,670 --> 00:35:11,380
some weird selector like that they would

749
00:35:11,380 --> 00:35:13,150
need to have something with was at least

750
00:35:13,150 --> 00:35:14,800
the same specificity and it gets really

751
00:35:14,800 --> 00:35:18,430
messy so it's actually better if I

752
00:35:18,430 --> 00:35:24,190
provide a fallback like this but then I

753
00:35:24,190 --> 00:35:25,630
have to repeat the fallback three times

754
00:35:25,630 --> 00:35:26,320
with

755
00:35:26,320 --> 00:35:32,590
kind of not dry it's very wet we enjoy

756
00:35:32,590 --> 00:35:36,880
typing it stands for so you might be

757
00:35:36,880 --> 00:35:38,530
thinking the whole point of variables it

758
00:35:38,530 --> 00:35:40,150
is to reduce repetition now you're

759
00:35:40,150 --> 00:35:42,370
repeating this fall back like multiple

760
00:35:42,370 --> 00:35:45,580
times one thing you can do is use

761
00:35:45,580 --> 00:35:49,120
variables for that as well let you can

762
00:35:49,120 --> 00:35:51,520
define a different variable whose value

763
00:35:51,520 --> 00:35:57,870
is this and then instead of using this

764
00:35:57,870 --> 00:36:00,940
Kolar coma black everywhere you can just

765
00:36:00,940 --> 00:36:04,210
use this internal variable and when you

766
00:36:04,210 --> 00:36:05,740
release your component you just tell

767
00:36:05,740 --> 00:36:07,540
people you don't tell people about -

768
00:36:07,540 --> 00:36:08,980
there's color if they don't see your

769
00:36:08,980 --> 00:36:10,690
code they don't know about it if they

770
00:36:10,690 --> 00:36:11,770
say you're cold well they're on their

771
00:36:11,770 --> 00:36:14,470
own and you just tell them if you want

772
00:36:14,470 --> 00:36:16,030
to change the color of the component use

773
00:36:16,030 --> 00:36:18,100
that color it's kind of like private

774
00:36:18,100 --> 00:36:21,990
variables but by convention instead of

775
00:36:21,990 --> 00:36:24,850
actual private variables which is

776
00:36:24,850 --> 00:36:26,500
basically what JavaScript had for ages

777
00:36:26,500 --> 00:36:30,310
so I guess it's fine so the ninth

778
00:36:30,310 --> 00:36:32,680
takeaway is that default default values

779
00:36:32,680 --> 00:36:34,330
are possible and yes I totally made up

780
00:36:34,330 --> 00:36:36,910
this term default default values but I'm

781
00:36:36,910 --> 00:36:40,540
convinced it will catch on so you can

782
00:36:40,540 --> 00:36:42,520
define another variable and set it to

783
00:36:42,520 --> 00:36:44,290
your your public variable with a

784
00:36:44,290 --> 00:36:48,940
fallback another huge use for CSS

785
00:36:48,940 --> 00:36:51,370
variables is responsive design there's

786
00:36:51,370 --> 00:36:54,730
often a gutter variable and then people

787
00:36:54,730 --> 00:36:56,770
set margins and padding's related to

788
00:36:56,770 --> 00:36:59,410
that and now you can have a media query

789
00:36:59,410 --> 00:37:01,420
that just changes this one variable and

790
00:37:01,420 --> 00:37:02,920
you don't have to change anything in the

791
00:37:02,920 --> 00:37:05,560
rest of your design this is of course

792
00:37:05,560 --> 00:37:08,470
this is a very simple case of this it's

793
00:37:08,470 --> 00:37:10,690
only using it in one place but you can

794
00:37:10,690 --> 00:37:13,090
still see how when I resize the window

795
00:37:13,090 --> 00:37:15,100
at some point I get the smaller gutter

796
00:37:15,100 --> 00:37:20,620
size

797
00:37:20,630 --> 00:37:23,000
and of course there the common use cases

798
00:37:23,000 --> 00:37:26,720
that you use SAS variables for these are

799
00:37:26,720 --> 00:37:28,610
kind of obvious so I don't think they're

800
00:37:28,610 --> 00:37:30,050
particularly interesting you can always

801
00:37:30,050 --> 00:37:35,840
use SAS for them still so it's I think

802
00:37:35,840 --> 00:37:38,750
these are kind of implied so the fence

803
00:37:38,750 --> 00:37:40,340
takeaways the CSS variables make

804
00:37:40,340 --> 00:37:45,650
responsive design easier so after the

805
00:37:45,650 --> 00:37:47,600
common use cases let's see some cool use

806
00:37:47,600 --> 00:37:51,830
cases prefixed properties are one are

807
00:37:51,830 --> 00:37:54,380
one of them sure many people use

808
00:37:54,380 --> 00:37:56,300
autoprefixer Zoar prefix free or

809
00:37:56,300 --> 00:37:58,430
something like that but these days were

810
00:37:58,430 --> 00:37:59,990
moving towards not having that many

811
00:37:59,990 --> 00:38:01,640
prefix properties so it's kind of

812
00:38:01,640 --> 00:38:03,590
overkill often to use another prefix

813
00:38:03,590 --> 00:38:06,050
surfer like this one property so CSS

814
00:38:06,050 --> 00:38:09,890
variables can help with that let's so

815
00:38:09,890 --> 00:38:12,320
you can use the universal selector use

816
00:38:12,320 --> 00:38:13,670
the trick I mentioned earlier about

817
00:38:13,670 --> 00:38:16,970
canceling inheritance which is setting

818
00:38:16,970 --> 00:38:20,570
the variable to initial and then you set

819
00:38:20,570 --> 00:38:21,890
both of the properties you want to

820
00:38:21,890 --> 00:38:25,310
replace with that variable and now I can

821
00:38:25,310 --> 00:38:29,660
use that variable everywhere and it

822
00:38:29,660 --> 00:38:31,760
works exactly the same as the normal

823
00:38:31,760 --> 00:38:38,030
clip path property so let's try doing a

824
00:38:38,030 --> 00:38:41,930
clip path here a polygon let's hope this

825
00:38:41,930 --> 00:38:43,010
works

826
00:38:43,010 --> 00:38:44,960
because writing a clip path on stage is

827
00:38:44,960 --> 00:38:48,320
kind of tricky than 50-percent

828
00:38:48,320 --> 00:38:52,100
horizontal and 100% vertical I'm trying

829
00:38:52,100 --> 00:38:56,720
to do a diamond like a rhombus shape and

830
00:38:56,720 --> 00:38:59,870
then zero horizontal and 50% variable

831
00:38:59,870 --> 00:39:02,720
okay that is it that's it it worked and

832
00:39:02,720 --> 00:39:05,360
now I can apply it on any of these tips

833
00:39:05,360 --> 00:39:06,880
I want you can see it's not

834
00:39:06,880 --> 00:39:10,730
inadvertently inherited I can apply it

835
00:39:10,730 --> 00:39:12,200
the same clip paths everywhere basically

836
00:39:12,200 --> 00:39:14,210
works exactly the same as the normal

837
00:39:14,210 --> 00:39:16,700
clip path the only caveat is that you

838
00:39:16,700 --> 00:39:19,190
cannot animate it which is a pretty big

839
00:39:19,190 --> 00:39:21,020
one because clip animated clip paths are

840
00:39:21,020 --> 00:39:22,160
pretty awesome but if you don't need

841
00:39:22,160 --> 00:39:25,670
animation that could be a solution so

842
00:39:25,670 --> 00:39:27,650
CSS variables enable you to set multiple

843
00:39:27,650 --> 00:39:31,420
properties at once if you use this trick

844
00:39:31,420 --> 00:39:33,650
also CSS variable

845
00:39:33,650 --> 00:39:35,660
unable you to set property shortcuts

846
00:39:35,660 --> 00:39:38,660
kind of like mix-ins with only one

847
00:39:38,660 --> 00:39:41,630
property so in this case I wanted to

848
00:39:41,630 --> 00:39:46,520
have a purple shadow and only define the

849
00:39:46,520 --> 00:39:51,079
X Y in the XY and blur of Ambler offsets

850
00:39:51,079 --> 00:39:52,640
instead of having to define the color

851
00:39:52,640 --> 00:39:55,220
every time so I used the same trick for

852
00:39:55,220 --> 00:39:56,839
canceling inheritance you'll see it in

853
00:39:56,839 --> 00:40:00,079
all of these demos and I say I set box

854
00:40:00,079 --> 00:40:01,700
shadow to whatever the value of purple

855
00:40:01,700 --> 00:40:04,369
shadow is if it's defined plus Rebecca

856
00:40:04,369 --> 00:40:06,410
purple because I wanted the color to

857
00:40:06,410 --> 00:40:08,420
always be Rebecca purple and then I can

858
00:40:08,420 --> 00:40:12,799
provide only the extra parts that are

859
00:40:12,799 --> 00:40:17,270
missing oh of course like I could always

860
00:40:17,270 --> 00:40:24,380
do something like this instead and here

861
00:40:24,380 --> 00:40:31,190
specify poke shadow with four of this

862
00:40:31,190 --> 00:40:33,920
color it's two ways to do the same thing

863
00:40:33,920 --> 00:40:35,750
and which ones better depends on your

864
00:40:35,750 --> 00:40:38,089
specific use case and how big this part

865
00:40:38,089 --> 00:40:41,690
is and it you should use critical

866
00:40:41,690 --> 00:40:43,279
thinking and decide what's better for

867
00:40:43,279 --> 00:40:47,200
your specific use case but it's

868
00:40:47,200 --> 00:40:49,369
interesting to keep in mind that CSS

869
00:40:49,369 --> 00:40:51,440
variables let you create single property

870
00:40:51,440 --> 00:40:53,390
mix-ins like shortcuts to properties

871
00:40:53,390 --> 00:40:55,130
what programmers would call function

872
00:40:55,130 --> 00:40:57,380
carrying in a way like it's kind of

873
00:40:57,380 --> 00:40:59,270
similar to function carry property

874
00:40:59,270 --> 00:41:04,490
carrying CSS variables also lets you

875
00:41:04,490 --> 00:41:06,529
create your own long hands like poke

876
00:41:06,529 --> 00:41:09,500
shadow is a property that just has that

877
00:41:09,500 --> 00:41:11,299
we only have box shadow we don't have

878
00:41:11,299 --> 00:41:13,490
box shadow XY blur spread all those

879
00:41:13,490 --> 00:41:15,950
separately but we can hack it with CSS

880
00:41:15,950 --> 00:41:18,170
variables so here I've defined all this

881
00:41:18,170 --> 00:41:20,119
property all these variables I've set

882
00:41:20,119 --> 00:41:22,220
book shadow to all these variables

883
00:41:22,220 --> 00:41:24,500
all of them have fall backs notice that

884
00:41:24,500 --> 00:41:26,630
in this one the fallback is actually a

885
00:41:26,630 --> 00:41:31,250
whitespace character except blur which

886
00:41:31,250 --> 00:41:34,369
means I have to set at least blur and

887
00:41:34,369 --> 00:41:37,130
then I can set all the other ones so

888
00:41:37,130 --> 00:41:39,589
let's set it to 10 pixels and then let's

889
00:41:39,589 --> 00:41:43,339
get box shadow color set it to blue I

890
00:41:43,339 --> 00:41:45,650
don't know something let's make this

891
00:41:45,650 --> 00:41:46,460
bigger

892
00:41:46,460 --> 00:41:57,680
okay and then on let's say on hover this

893
00:41:57,680 --> 00:42:01,130
I think I've run into a small bug with

894
00:42:01,130 --> 00:42:06,160
my editor let's hope this works

895
00:42:06,160 --> 00:42:16,790
book shadow color red and it works so

896
00:42:16,790 --> 00:42:18,470
you can see how I was able to override

897
00:42:18,470 --> 00:42:20,450
the call only the color of the book

898
00:42:20,450 --> 00:42:22,369
shadow without having to override all

899
00:42:22,369 --> 00:42:24,950
the other parameters so Thirteen's take

900
00:42:24,950 --> 00:42:26,839
away CSS variables enable you to create

901
00:42:26,839 --> 00:42:32,660
custom long hands and also you know how

902
00:42:32,660 --> 00:42:34,040
it's really on knowing how every time if

903
00:42:34,040 --> 00:42:35,570
even if you just want to prepare a

904
00:42:35,570 --> 00:42:37,820
little text some text somewhere and

905
00:42:37,820 --> 00:42:39,980
nothing more you have to write an entire

906
00:42:39,980 --> 00:42:43,400
rule well you don't have to you can just

907
00:42:43,400 --> 00:42:47,240
set a prepend variable and then you can

908
00:42:47,240 --> 00:42:49,430
set a before rule on the universal

909
00:42:49,430 --> 00:42:53,119
selector this is implied and the content

910
00:42:53,119 --> 00:42:55,609
is the value of the prepend variable

911
00:42:55,609 --> 00:42:57,530
which means if the prepend variables not

912
00:42:57,530 --> 00:42:59,330
set we don't get anything as you can see

913
00:42:59,330 --> 00:43:04,400
right now but if you want you can set

914
00:43:04,400 --> 00:43:07,280
prepend to some value like let's say

915
00:43:07,280 --> 00:43:11,900
Yolo and you get that text without

916
00:43:11,900 --> 00:43:13,609
having to write a whole new rule like

917
00:43:13,609 --> 00:43:15,770
you could have other CSS properties here

918
00:43:15,770 --> 00:43:19,930
and of course this also works from an

919
00:43:19,930 --> 00:43:24,260
inline style as well if this is for the

920
00:43:24,260 --> 00:43:27,230
cases where this is useful so CSS

921
00:43:27,230 --> 00:43:28,940
variables also enable you to kind of

922
00:43:28,940 --> 00:43:30,740
define your own properties in some cases

923
00:43:30,740 --> 00:43:34,670
which i think is cool so CSS variables

924
00:43:34,670 --> 00:43:38,030
aren't just useful for with HTML they're

925
00:43:38,030 --> 00:43:42,050
also useful with SVG here is a pair of

926
00:43:42,050 --> 00:43:45,560
eyes this is the SVG used to define them

927
00:43:45,560 --> 00:43:47,960
it's okay if you don't understand it the

928
00:43:47,960 --> 00:43:53,030
main thing to understand is that is I've

929
00:43:53,030 --> 00:43:56,150
assigned the class of iris to the actual

930
00:43:56,150 --> 00:43:58,170
iris here

931
00:43:58,170 --> 00:44:00,930
and I've applied some CSS to it and and

932
00:44:00,930 --> 00:44:02,849
I can change the CSS and have the eyes

933
00:44:02,849 --> 00:44:07,079
move however this is these are kind of

934
00:44:07,079 --> 00:44:08,849
arbitrary values if I want the eyes to

935
00:44:08,849 --> 00:44:10,769
look all the way there well all the way

936
00:44:10,769 --> 00:44:14,849
here it's 25 pixels and if I want them

937
00:44:14,849 --> 00:44:16,799
to look although all the other way all

938
00:44:16,799 --> 00:44:20,670
the way there it's 75 pixels which is

939
00:44:20,670 --> 00:44:22,859
kind of a weird value to remember so

940
00:44:22,859 --> 00:44:26,130
instead I can use a CSS variable which

941
00:44:26,130 --> 00:44:30,210
goes from 0 to 1 and use calc here and

942
00:44:30,210 --> 00:44:35,190
say if it's from 25 pixels to 75 so plus

943
00:44:35,190 --> 00:44:37,829
50 pixels multiplied by the value of the

944
00:44:37,829 --> 00:44:43,710
look variable and now I can move the

945
00:44:43,710 --> 00:44:47,130
variable from 0 to 1 and it just works

946
00:44:47,130 --> 00:44:57,089
so CSS variables + SVG equals love CSS

947
00:44:57,089 --> 00:44:58,680
variables and JavaScript are also very

948
00:44:58,680 --> 00:45:02,670
interesting combination you can use the

949
00:45:02,670 --> 00:45:05,630
normal methods that we already have to

950
00:45:05,630 --> 00:45:10,950
get in set CSS variables how many of

951
00:45:10,950 --> 00:45:12,390
your chrome are not comfortable with

952
00:45:12,390 --> 00:45:15,779
javascript by the way how many of you

953
00:45:15,779 --> 00:45:19,170
are comfortable with javascript how many

954
00:45:19,170 --> 00:45:20,460
of you did not raise your hands in any

955
00:45:20,460 --> 00:45:25,140
of the two questions anyway for those of

956
00:45:25,140 --> 00:45:26,190
you that are not comfortable with

957
00:45:26,190 --> 00:45:28,349
JavaScript I promise that the code in

958
00:45:28,349 --> 00:45:30,150
this section is very short and I will I

959
00:45:30,150 --> 00:45:31,500
will explain it as I go

960
00:45:31,500 --> 00:45:37,680
so get property value lets you get the

961
00:45:37,680 --> 00:45:39,809
value of the of whatever CSS property

962
00:45:39,809 --> 00:45:42,029
you pass into it from the end line style

963
00:45:42,029 --> 00:45:44,519
if it's if your property is not

964
00:45:44,519 --> 00:45:46,109
necessarily on the end line style you

965
00:45:46,109 --> 00:45:48,779
can use get computed style with the same

966
00:45:48,779 --> 00:45:51,750
function name and to set the variable on

967
00:45:51,750 --> 00:45:53,130
the inline style you can use set

968
00:45:53,130 --> 00:45:55,710
property why is it set property and get

969
00:45:55,710 --> 00:45:57,900
property value I have no idea I think it

970
00:45:57,900 --> 00:46:02,240
should be get property but who knows and

971
00:46:02,240 --> 00:46:05,369
just with these few functions we can do

972
00:46:05,369 --> 00:46:07,950
really cool things for example this is

973
00:46:07,950 --> 00:46:10,230
setting one event listener to on the

974
00:46:10,230 --> 00:46:11,480
mousemove event

975
00:46:11,480 --> 00:46:13,430
every time I move the mouse it's setting

976
00:46:13,430 --> 00:46:15,770
to CSS variables on the root element on

977
00:46:15,770 --> 00:46:18,590
the HTML element Mouse X and Mouse y and

978
00:46:18,590 --> 00:46:23,840
their values are go from 0 to 1 and they

979
00:46:23,840 --> 00:46:25,430
reflect how much I've moved my cursor

980
00:46:25,430 --> 00:46:27,590
relative to the viewport width and the

981
00:46:27,590 --> 00:46:29,780
viewport height so let's see how I could

982
00:46:29,780 --> 00:46:32,869
use this here I have a simple radial

983
00:46:32,869 --> 00:46:36,980
gradient in the center and I can replace

984
00:46:36,980 --> 00:46:40,480
the static 50 percent with 100 percent x

985
00:46:40,480 --> 00:46:44,330
mouse X and you can see that now it

986
00:46:44,330 --> 00:46:46,820
moves with my cursor horizontally and I

987
00:46:46,820 --> 00:46:51,410
can even do this vertically and now it

988
00:46:51,410 --> 00:46:54,380
moves with my cursor and I can change my

989
00:46:54,380 --> 00:46:58,070
gradient and I I don't have to change my

990
00:46:58,070 --> 00:47:01,340
JavaScript because my variables are

991
00:47:01,340 --> 00:47:02,869
generic enough that I can just transform

992
00:47:02,869 --> 00:47:05,060
them as I need in my CSS which is

993
00:47:05,060 --> 00:47:07,190
excellent if the CSS developer and the

994
00:47:07,190 --> 00:47:08,660
JavaScript developer different people

995
00:47:08,660 --> 00:47:10,070
because you don't have to go to the

996
00:47:10,070 --> 00:47:12,530
JavaScript developer and say hey I

997
00:47:12,530 --> 00:47:15,500
actually changed my mind could you like

998
00:47:15,500 --> 00:47:17,990
make a small change there and they're

999
00:47:17,990 --> 00:47:21,560
like bloody hell you keep doing this I'm

1000
00:47:21,560 --> 00:47:23,630
so fed up with you you designers you

1001
00:47:23,630 --> 00:47:26,359
keep changing you keep changing your

1002
00:47:26,359 --> 00:47:29,210
mind and I can't do this anymore no no

1003
00:47:29,210 --> 00:47:31,310
more of that you just know the developer

1004
00:47:31,310 --> 00:47:34,070
to set some basic CSS variables and you

1005
00:47:34,070 --> 00:47:36,020
use them in your CSS as you see fit and

1006
00:47:36,020 --> 00:47:37,520
if they're generic enough you can use

1007
00:47:37,520 --> 00:47:39,740
them in multiple cases here I've used

1008
00:47:39,740 --> 00:47:43,280
them for a gradient remember this I can

1009
00:47:43,280 --> 00:47:45,050
actually change this variable to Mouse X

1010
00:47:45,050 --> 00:47:47,180
and now the eyes move with my mouse

1011
00:47:47,180 --> 00:47:50,359
cursor and it's exactly the same

1012
00:47:50,359 --> 00:47:51,859
variable I didn't have to check to write

1013
00:47:51,859 --> 00:47:55,730
any new JavaScript code for this also I

1014
00:47:55,730 --> 00:47:59,210
can now use the values of inputs in my

1015
00:47:59,210 --> 00:48:01,670
CSS if I just you if I just write a few

1016
00:48:01,670 --> 00:48:03,410
lines of JavaScript that set a value

1017
00:48:03,410 --> 00:48:07,850
variable on every input element so

1018
00:48:07,850 --> 00:48:10,480
here's a slider it has a gradient on it

1019
00:48:10,480 --> 00:48:12,710
it's just an input type equals range

1020
00:48:12,710 --> 00:48:15,020
there is a bit styled and it has this

1021
00:48:15,020 --> 00:48:16,490
gradient on it and the gradient is

1022
00:48:16,490 --> 00:48:20,500
static but I can change it to be dynamic

1023
00:48:20,500 --> 00:48:23,060
so the values of the slider is zero to a

1024
00:48:23,060 --> 00:48:25,200
hundred so I will multiply one

1025
00:48:25,200 --> 00:48:29,400
percent with the value of the slider and

1026
00:48:29,400 --> 00:48:31,380
now you can see that as I move the

1027
00:48:31,380 --> 00:48:34,230
slider the gradient moves which can be

1028
00:48:34,230 --> 00:48:36,500
very useful for some styled sliders and

1029
00:48:36,500 --> 00:48:39,930
this doesn't look very nice but I'm sure

1030
00:48:39,930 --> 00:48:41,760
the designers among you can come up with

1031
00:48:41,760 --> 00:48:45,270
a lot more interesting use cases also

1032
00:48:45,270 --> 00:48:47,490
I'm sure you've seen all these

1033
00:48:47,490 --> 00:48:49,950
containers that scroll and you and they

1034
00:48:49,950 --> 00:48:51,510
do cool things as you scroll they show

1035
00:48:51,510 --> 00:48:53,220
progress bars and things like that you

1036
00:48:53,220 --> 00:48:55,170
can just have a scrolling class go over

1037
00:48:55,170 --> 00:48:56,400
all the elements with the scrolling

1038
00:48:56,400 --> 00:48:59,940
class add an S scroll event and then set

1039
00:48:59,940 --> 00:49:02,430
the scroll variable that is how much

1040
00:49:02,430 --> 00:49:04,650
have you scrolled and it goes from 0 to

1041
00:49:04,650 --> 00:49:08,310
1 again and you can use it here I have a

1042
00:49:08,310 --> 00:49:10,560
linear gradient nothing happens if I

1043
00:49:10,560 --> 00:49:12,330
scroll right now but I can change this

1044
00:49:12,330 --> 00:49:21,900
20% to calc 100% x 4 scroll I'm trying

1045
00:49:21,900 --> 00:49:25,440
to go a bit fast because of way ran out

1046
00:49:25,440 --> 00:49:29,540
of time but I hope you guys are enjoying

1047
00:49:29,540 --> 00:49:33,750
so as you can see now I if I scroll I

1048
00:49:33,750 --> 00:49:36,660
get this background progress bar and

1049
00:49:36,660 --> 00:49:39,270
again with the same variable I can do a

1050
00:49:39,270 --> 00:49:42,440
huge range of things if I want to change

1051
00:49:42,440 --> 00:49:48,120
the the background and make it red and

1052
00:49:48,120 --> 00:49:51,420
only at the top I can do that I can even

1053
00:49:51,420 --> 00:49:54,990
go and say actually I want the

1054
00:49:54,990 --> 00:50:00,350
background to be a color and HSL color

1055
00:50:00,350 --> 00:50:09,900
whose hue changes from 0 to 360 not

1056
00:50:09,900 --> 00:50:14,220
serially 50% lightness depending on how

1057
00:50:14,220 --> 00:50:18,750
much I've scrolled which is kind of

1058
00:50:18,750 --> 00:50:22,850
crazy but I mean the sky's the limit

1059
00:50:22,850 --> 00:50:26,730
so the last takeaway is that CSS

1060
00:50:26,730 --> 00:50:28,290
variables are a revolution for

1061
00:50:28,290 --> 00:50:32,060
separation of style and behavior CSS

1062
00:50:32,060 --> 00:50:34,650
developers and JavaScript developers can

1063
00:50:34,650 --> 00:50:37,310
work in the in their preferred way and

1064
00:50:37,310 --> 00:50:39,080
ss variables basically define an API

1065
00:50:39,080 --> 00:50:42,200
between the CSS code and the JavaScript

1066
00:50:42,200 --> 00:50:45,440
code so one of the arguments that react

1067
00:50:45,440 --> 00:50:47,870
people often used for moving all the CSS

1068
00:50:47,870 --> 00:50:50,780
code to JavaScript is that CSS is not

1069
00:50:50,780 --> 00:50:53,510
flexible enough and you cannot have CSS

1070
00:50:53,510 --> 00:50:55,730
response to like scroll events and

1071
00:50:55,730 --> 00:50:59,120
resize events and input events and all

1072
00:50:59,120 --> 00:51:01,610
sorts of things well now you can and you

1073
00:51:01,610 --> 00:51:03,200
don't have to move your presentation to

1074
00:51:03,200 --> 00:51:05,240
JavaScript to achieve it you can just

1075
00:51:05,240 --> 00:51:09,950
set CSS variables so you can keep your

1076
00:51:09,950 --> 00:51:12,230
style where it belongs and you can keep

1077
00:51:12,230 --> 00:51:13,730
your behavior where it belongs and

1078
00:51:13,730 --> 00:51:17,630
everyone's happy so these are the URLs

1079
00:51:17,630 --> 00:51:23,150
of the specs and one last slide about

1080
00:51:23,150 --> 00:51:24,550
what's coming in the future

1081
00:51:24,550 --> 00:51:27,680
mix-ins and variables are not the future

1082
00:51:27,680 --> 00:51:29,750
by the way this is variables are the

1083
00:51:29,750 --> 00:51:31,550
present every browser supports them

1084
00:51:31,550 --> 00:51:34,040
except edge which is coming

1085
00:51:34,040 --> 00:51:36,050
mix-ins are the future because they only

1086
00:51:36,050 --> 00:51:39,950
have chrome support right now you define

1087
00:51:39,950 --> 00:51:42,320
mix-ins basically by a variable whose

1088
00:51:42,320 --> 00:51:43,790
value is multiple decorative

1089
00:51:43,790 --> 00:51:46,340
declarations I can add a border here for

1090
00:51:46,340 --> 00:51:49,850
example and then you call it with an at

1091
00:51:49,850 --> 00:51:52,730
apply rule which is useful for things

1092
00:51:52,730 --> 00:51:55,370
that are static mix-ins sadly it's not

1093
00:51:55,370 --> 00:51:56,960
very useful for things that need

1094
00:51:56,960 --> 00:51:59,810
variables because if I use a variable

1095
00:51:59,810 --> 00:52:04,190
here for example let's say color and I

1096
00:52:04,190 --> 00:52:07,610
set the variable here to let's say

1097
00:52:07,610 --> 00:52:09,980
orange I get as you can see nothing

1098
00:52:09,980 --> 00:52:12,560
changes the variable is resolved based

1099
00:52:12,560 --> 00:52:14,480
on the calling scope which is here which

1100
00:52:14,480 --> 00:52:16,250
is kind of useless because why would you

1101
00:52:16,250 --> 00:52:18,230
declare your variables well you've where

1102
00:52:18,230 --> 00:52:21,080
you've declared your mixin but still

1103
00:52:21,080 --> 00:52:23,300
it's it's it's something for example it

1104
00:52:23,300 --> 00:52:24,950
would be useful for clear fix or all

1105
00:52:24,950 --> 00:52:28,280
these mixes that don't really change so

1106
00:52:28,280 --> 00:52:30,110
that's about it thank you very much I

1107
00:52:30,110 --> 00:52:33,060
hope you enjoy it

1108
00:52:33,070 --> 00:52:42,030
you

