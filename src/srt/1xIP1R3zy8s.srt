1
00:00:05,530 --> 00:00:09,920

thanks everyone coming out I

2
00:00:09,930 --> 00:00:11,520
that I was recently working on that I

3
00:00:11,520 --> 00:00:14,010
was meant to solve a lot of like the

4
00:00:14,010 --> 00:00:16,200
nitty-gritty annoying stuff that I have

5
00:00:16,200 --> 00:00:17,610
to deal with on a day-to-day basis when

6
00:00:17,610 --> 00:00:20,130
it comes to making projects go live so

7
00:00:20,130 --> 00:00:21,570
one of the gentlemen here asked me you

8
00:00:21,570 --> 00:00:23,340
know what is the dsl what does dsl stand

9
00:00:23,340 --> 00:00:26,370
for its domain specific language so what

10
00:00:26,370 --> 00:00:29,850
I saw to do was write a custom language

11
00:00:29,850 --> 00:00:32,070
that could describe and solve the

12
00:00:32,070 --> 00:00:34,050
problems that I was facing on like day

13
00:00:34,050 --> 00:00:37,290
to day basis so this all began with a

14
00:00:37,290 --> 00:00:43,620
realization that i had that dad but this

15
00:00:43,620 --> 00:00:46,050
is a villain programming is fun but

16
00:00:46,050 --> 00:00:52,040
deployment it's not so much fun this is

17
00:00:52,040 --> 00:00:54,270
when it comes to making a project go

18
00:00:54,270 --> 00:00:56,399
live i found myself constantly running

19
00:00:56,399 --> 00:00:58,170
into the same things again and again i

20
00:00:58,170 --> 00:01:00,600
would zip up the project i'll copy

21
00:01:00,600 --> 00:01:03,120
remotely i would ssh into the remote

22
00:01:03,120 --> 00:01:05,940
machine somewhere unzip it run a setup

23
00:01:05,940 --> 00:01:08,399
script do a health check and then repeat

24
00:01:08,399 --> 00:01:10,500
and it got to the point where i just

25
00:01:10,500 --> 00:01:12,500
thought to myself what if I could just

26
00:01:12,500 --> 00:01:16,320
automate all of this so I thought about

27
00:01:16,320 --> 00:01:19,409
the problem a lot and I came to a

28
00:01:19,409 --> 00:01:23,490
solution that had two main pieces one is

29
00:01:23,490 --> 00:01:25,680
a background process running on the

30
00:01:25,680 --> 00:01:29,070
remote machine that would it would hook

31
00:01:29,070 --> 00:01:31,170
into native file system events and then

32
00:01:31,170 --> 00:01:33,659
one a change event was fired it would

33
00:01:33,659 --> 00:01:35,939
look at a file that was recently added

34
00:01:35,939 --> 00:01:39,270
search for a zip file unzip it and then

35
00:01:39,270 --> 00:01:42,060
run a setup script the reason you would

36
00:01:42,060 --> 00:01:43,350
need to have something remotely is

37
00:01:43,350 --> 00:01:45,330
because without it you would have to do

38
00:01:45,330 --> 00:01:47,040
a lot of manual things you'd have to ssh

39
00:01:47,040 --> 00:01:49,650
directly in and run all the commands

40
00:01:49,650 --> 00:01:52,110
which is something I'm sure many of you

41
00:01:52,110 --> 00:01:53,490
have already done but I wanted to avoid

42
00:01:53,490 --> 00:01:55,890
doing it because I just thought it was a

43
00:01:55,890 --> 00:01:58,619
pain and as a developer I try to make my

44
00:01:58,619 --> 00:02:01,170
life as easy as possible and as lazy as

45
00:02:01,170 --> 00:02:03,150
possible so that's kind of where this

46
00:02:03,150 --> 00:02:06,299
came from the second part is the setup

47
00:02:06,299 --> 00:02:08,190
script itself which is basically a list

48
00:02:08,190 --> 00:02:11,850
of instructions that would unbundle the

49
00:02:11,850 --> 00:02:14,130
project and get it up and running so

50
00:02:14,130 --> 00:02:16,500
just real quickly the demon process

51
00:02:16,500 --> 00:02:20,820
itself for it to be consistent I thought

52
00:02:20,820 --> 00:02:22,560
that the best way to do it was to have a

53
00:02:22,560 --> 00:02:23,400
landing zone

54
00:02:23,400 --> 00:02:25,230
then call a landing zone a directory

55
00:02:25,230 --> 00:02:28,530
that was watched and whenever a file was

56
00:02:28,530 --> 00:02:32,099
added it would look for a zip file unzip

57
00:02:32,099 --> 00:02:34,860
it and then run the setup script a set

58
00:02:34,860 --> 00:02:36,510
of script is where the dsl actually

59
00:02:36,510 --> 00:02:38,310
comes in and it's where i decided to

60
00:02:38,310 --> 00:02:42,180
have a little fun so this is the good

61
00:02:42,180 --> 00:02:44,939
stuff now i could have easily placed a

62
00:02:44,939 --> 00:02:46,319
shell script into the packaging call

63
00:02:46,319 --> 00:02:48,000
today but i saw this as an opportunity

64
00:02:48,000 --> 00:02:50,269
to write my own language and I took it

65
00:02:50,269 --> 00:02:58,069
for science so why even do this at all

66
00:02:58,069 --> 00:03:01,470
why even like constructed dsl is because

67
00:03:01,470 --> 00:03:03,150
every project I would ever need to work

68
00:03:03,150 --> 00:03:04,620
on would require a different setup a

69
00:03:04,620 --> 00:03:06,569
different environment different entry

70
00:03:06,569 --> 00:03:08,819
point so why not come up with a way to

71
00:03:08,819 --> 00:03:11,700
extract all that way so I came up with

72
00:03:11,700 --> 00:03:16,049
this is a very simple language now I'm

73
00:03:16,049 --> 00:03:18,530
not going to spend time going into the

74
00:03:18,530 --> 00:03:20,790
everything into the structure everything

75
00:03:20,790 --> 00:03:22,230
about the structure and implementation

76
00:03:22,230 --> 00:03:24,209
of computer programming computer

77
00:03:24,209 --> 00:03:25,709
programming languages because there are

78
00:03:25,709 --> 00:03:28,109
literally entire libraries folder things

79
00:03:28,109 --> 00:03:31,470
that I don't know but what I do know for

80
00:03:31,470 --> 00:03:34,709
sure is that to transform any language

81
00:03:34,709 --> 00:03:36,299
to run on a machine you need a compiler

82
00:03:36,299 --> 00:03:40,290
so I wrote myself a toy compiler to make

83
00:03:40,290 --> 00:03:41,849
sure that this language ran and did what

84
00:03:41,849 --> 00:03:45,090
I wanted it to do so just to take you

85
00:03:45,090 --> 00:03:47,730
through some of the basics so dave told

86
00:03:47,730 --> 00:03:49,260
me that a lot of you guys are mid-level

87
00:03:49,260 --> 00:03:50,549
and beyond so i don't i'm not going to

88
00:03:50,549 --> 00:03:52,229
spend too much time on like the

89
00:03:52,229 --> 00:03:53,489
nitty-gritty of what's going on but

90
00:03:53,489 --> 00:03:56,340
every compiler has three basic parts and

91
00:03:56,340 --> 00:03:58,739
you have the lexer the parser and the

92
00:03:58,739 --> 00:04:01,859
evaluator the lexer is usually broken up

93
00:04:01,859 --> 00:04:03,479
into something called a scanner and a

94
00:04:03,479 --> 00:04:05,639
tokenizer but depending on which

95
00:04:05,639 --> 00:04:08,040
distribution in which library or which

96
00:04:08,040 --> 00:04:10,079
compiler you're using sometimes the

97
00:04:10,079 --> 00:04:11,280
things are merged together sometimes

98
00:04:11,280 --> 00:04:14,340
they're not I chose to write a separate

99
00:04:14,340 --> 00:04:16,139
scanner and a separate tokenizer and

100
00:04:16,139 --> 00:04:17,400
i'll go into what these things actually

101
00:04:17,400 --> 00:04:21,180
do I know so the scanner is what breaks

102
00:04:21,180 --> 00:04:25,349
the body of language into into lexemes

103
00:04:25,349 --> 00:04:27,960
which are the basic building blocks of a

104
00:04:27,960 --> 00:04:30,950
languages syntax so just as an example

105
00:04:30,950 --> 00:04:34,169
you have just a snippet from the setup

106
00:04:34,169 --> 00:04:35,129
script that I have

107
00:04:35,129 --> 00:04:37,649
a task called task name and then its

108
00:04:37,649 --> 00:04:40,919
commands so the leg seems there would be

109
00:04:40,919 --> 00:04:43,709
just the string literal text and task

110
00:04:43,709 --> 00:04:48,869
name colon left parentheses a newline

111
00:04:48,869 --> 00:04:50,639
character and then whatever the sooner

112
00:04:50,639 --> 00:04:53,909
shell script was the tokenizer reads

113
00:04:53,909 --> 00:04:56,939
each like semen adds metadata and this

114
00:04:56,939 --> 00:04:58,800
metadata is what corresponds to the

115
00:04:58,800 --> 00:05:02,219
actual grammar of the language this is

116
00:05:02,219 --> 00:05:04,229
important because the form that a

117
00:05:04,229 --> 00:05:06,300
language takes and its structure are

118
00:05:06,300 --> 00:05:10,169
actually two different things like try

119
00:05:10,169 --> 00:05:11,399
to come up with a good example for this

120
00:05:11,399 --> 00:05:13,709
and so if I was to use the English

121
00:05:13,709 --> 00:05:16,349
sentence I went to the store english

122
00:05:16,349 --> 00:05:19,139
grammar would break it down as subject

123
00:05:19,139 --> 00:05:23,939
verb object so if I was to break it up

124
00:05:23,939 --> 00:05:26,999
into lexemes the lexemes would be I went

125
00:05:26,999 --> 00:05:29,459
and then to the store whereas the

126
00:05:29,459 --> 00:05:31,069
metadata attached to them would be I

127
00:05:31,069 --> 00:05:35,729
comma subject went comma verb and to the

128
00:05:35,729 --> 00:05:38,249
store comma object so that's how you see

129
00:05:38,249 --> 00:05:40,740
the grammar tied to the individual

130
00:05:40,740 --> 00:05:43,979
lexemes and this becomes important later

131
00:05:43,979 --> 00:05:46,289
on when you parse them into a meaningful

132
00:05:46,289 --> 00:05:50,099
structure because the tokens don't

133
00:05:50,099 --> 00:05:52,050
actually have any meaning by themselves

134
00:05:52,050 --> 00:05:53,879
they only have meaning in the context of

135
00:05:53,879 --> 00:05:56,699
other tokens so there's this kind of

136
00:05:56,699 --> 00:05:59,339
like just alt aspect to something that I

137
00:05:59,339 --> 00:06:00,539
found really cool when I was writing

138
00:06:00,539 --> 00:06:03,479
this now the parser is what provides

139
00:06:03,479 --> 00:06:05,789
that context it takes the tokens and

140
00:06:05,789 --> 00:06:07,800
derives what program is called semantic

141
00:06:07,800 --> 00:06:11,490
meaning and without I'm trying to throw

142
00:06:11,490 --> 00:06:15,110
as little jargon at you as possible but

143
00:06:15,110 --> 00:06:18,029
basically this is like what I was saying

144
00:06:18,029 --> 00:06:20,309
before that each token can only have

145
00:06:20,309 --> 00:06:22,529
real value when interpreted in the

146
00:06:22,529 --> 00:06:26,789
context of other tokens so the parser

147
00:06:26,789 --> 00:06:28,139
behaves more or less like a state

148
00:06:28,139 --> 00:06:29,339
machine which is something I'm about to

149
00:06:29,339 --> 00:06:31,889
go into but just to see now I totally

150
00:06:31,889 --> 00:06:33,149
understand if I just throw a bunch of

151
00:06:33,149 --> 00:06:34,469
code at you like it won't really make

152
00:06:34,469 --> 00:06:37,110
any sense so please feel free to ask me

153
00:06:37,110 --> 00:06:38,669
to clarify any of this stuff afterward

154
00:06:38,669 --> 00:06:40,709
I'm trying to do the best kind of tie

155
00:06:40,709 --> 00:06:42,179
together the project that I build and

156
00:06:42,179 --> 00:06:43,259
things that would make sense the

157
00:06:43,259 --> 00:06:45,899
presentation now the same machine is

158
00:06:45,899 --> 00:06:47,579
what actually constructs the context and

159
00:06:47,579 --> 00:06:47,840
this

160
00:06:47,840 --> 00:06:50,150
an example of the same machine now there

161
00:06:50,150 --> 00:06:52,040
are third-party libraries that make a

162
00:06:52,040 --> 00:06:55,970
state graph and basically why this is

163
00:06:55,970 --> 00:06:58,190
important because you could have two

164
00:06:58,190 --> 00:07:01,580
different lexemes of the same type just

165
00:07:01,580 --> 00:07:04,160
to show you an example if I was to go to

166
00:07:04,160 --> 00:07:06,710
the example of the language right here

167
00:07:06,710 --> 00:07:09,830
like you'll see that task name and echo

168
00:07:09,830 --> 00:07:12,020
are both strings but they have different

169
00:07:12,020 --> 00:07:14,000
meaning in that task name is declaring a

170
00:07:14,000 --> 00:07:17,750
task and echo is a component of a task

171
00:07:17,750 --> 00:07:20,180
and the way you can differentiate that

172
00:07:20,180 --> 00:07:22,639
is through the state whereas as the

173
00:07:22,639 --> 00:07:24,979
parser is parsing this file the state

174
00:07:24,979 --> 00:07:26,600
changes when it encounters this left

175
00:07:26,600 --> 00:07:27,950
parenthesis and that's just one example

176
00:07:27,950 --> 00:07:30,740
of how the state graph allows you to

177
00:07:30,740 --> 00:07:33,650
build a complex contextual structure

178
00:07:33,650 --> 00:07:38,960
from small building blocks so the last

179
00:07:38,960 --> 00:07:41,389
part of this is the evaluator which

180
00:07:41,389 --> 00:07:45,020
takes the syntax tree which is right

181
00:07:45,020 --> 00:07:47,840
here and evaluates it into actual

182
00:07:47,840 --> 00:07:49,310
meaningful code that can be run by the

183
00:07:49,310 --> 00:07:52,520
machine now most compilers transform the

184
00:07:52,520 --> 00:07:54,770
language of native machine code that

185
00:07:54,770 --> 00:07:56,479
much was overkill for what I was doing I

186
00:07:56,479 --> 00:07:57,830
really just wanted a wrapper for shell

187
00:07:57,830 --> 00:08:00,770
scripts so the evaluator it takes this

188
00:08:00,770 --> 00:08:03,500
syntax tree and just runs it as a

189
00:08:03,500 --> 00:08:05,270
combination of selling of shell scripts

190
00:08:05,270 --> 00:08:07,010
in order and i'm going to show you an

191
00:08:07,010 --> 00:08:11,419
example of that right now so i'm not

192
00:08:11,419 --> 00:08:13,190
sure if you guys can see this can you

193
00:08:13,190 --> 00:08:19,580
guys see it no you go about now tell me

194
00:08:19,580 --> 00:08:22,580
to stop

195
00:08:22,590 --> 00:08:24,790
how many of you were able to see my

196
00:08:24,790 --> 00:08:28,120
slides there about get that that's okay

197
00:08:28,120 --> 00:08:30,550
so I was like this is rich either really

198
00:08:30,550 --> 00:08:32,050
deep where people cannot understand what

199
00:08:32,050 --> 00:08:35,140
I'm saying okay well if you have any

200
00:08:35,140 --> 00:08:36,820
questions anything oh I hope you can

201
00:08:36,820 --> 00:08:39,780
hear me at least please ask questions

202
00:08:39,780 --> 00:08:43,120
but anyway this is the setup script you

203
00:08:43,120 --> 00:08:45,730
can see very simple syntax you declare

204
00:08:45,730 --> 00:08:47,770
using the colon and then you put the

205
00:08:47,770 --> 00:08:50,320
body of the Declaration inside the curly

206
00:08:50,320 --> 00:08:52,600
brackets you can invoke any task by

207
00:08:52,600 --> 00:08:55,480
using a semicolon so this is a basic one

208
00:08:55,480 --> 00:08:59,440
where just echoes two lines it runs NPM

209
00:08:59,440 --> 00:09:02,970
install it goes another line it runs a

210
00:09:02,970 --> 00:09:06,190
setup JS file and then prints a little

211
00:09:06,190 --> 00:09:07,450
line to the console so let's see what

212
00:09:07,450 --> 00:09:10,090
actually happens here can you guys you

213
00:09:10,090 --> 00:09:20,650
think cool don't don't cheat we go boom

214
00:09:20,650 --> 00:09:24,430
there we go now npm failed because the

215
00:09:24,430 --> 00:09:26,890
package Jace I don't think is valid but

216
00:09:26,890 --> 00:09:28,870
when you can see is that it printed

217
00:09:28,870 --> 00:09:30,940
these lives to the console and you see

218
00:09:30,940 --> 00:09:32,140
this line right here where it says it

219
00:09:32,140 --> 00:09:35,680
worked this is actually a line inside

220
00:09:35,680 --> 00:09:40,150
the project boom which on its surface

221
00:09:40,150 --> 00:09:41,710
it's like yeah this is really simple but

222
00:09:41,710 --> 00:09:43,630
this is this is something that could be

223
00:09:43,630 --> 00:09:45,190
uploaded to any machine anywhere in the

224
00:09:45,190 --> 00:09:46,840
world and the script would be run

225
00:09:46,840 --> 00:09:49,360
without ever having to SSH into this

226
00:09:49,360 --> 00:09:50,770
machine without ever having to do

227
00:09:50,770 --> 00:09:52,870
anything manually the language of the

228
00:09:52,870 --> 00:09:54,610
compiler take care of all this stuff for

229
00:09:54,610 --> 00:09:58,630
you I've managed to use this to great

230
00:09:58,630 --> 00:10:01,840
success and it helped me be as lazy as

231
00:10:01,840 --> 00:10:03,280
possible when I was programming which is

232
00:10:03,280 --> 00:10:07,210
great so that is my entire process from

233
00:10:07,210 --> 00:10:09,820
beginning to end so you might be asking

234
00:10:09,820 --> 00:10:13,230
like again like why would you do this

235
00:10:13,230 --> 00:10:17,050
well one course for fun too you could

236
00:10:17,050 --> 00:10:18,730
say you could say doctor could be used

237
00:10:18,730 --> 00:10:20,440
for something like this and dr. I'm a

238
00:10:20,440 --> 00:10:22,270
big fan of Doctor I use it at work and

239
00:10:22,270 --> 00:10:25,510
at home all the time but I found dr. and

240
00:10:25,510 --> 00:10:27,910
production to be kind of unstable the

241
00:10:27,910 --> 00:10:29,050
doctor demon shuts down randomly

242
00:10:29,050 --> 00:10:31,750
sometimes once you opt in a doctor you

243
00:10:31,750 --> 00:10:33,939
opt into dr. machine and dr. Campos

244
00:10:33,939 --> 00:10:37,149
dr. swarm and all the stuff which isn't

245
00:10:37,149 --> 00:10:40,109
terrible but it's also not a reason to

246
00:10:40,109 --> 00:10:42,369
completely ignore a side project like

247
00:10:42,369 --> 00:10:44,709
this because you could run the demon

248
00:10:44,709 --> 00:10:46,749
process right alongside dr. inside the

249
00:10:46,749 --> 00:10:48,099
container and have it do all the stuff

250
00:10:48,099 --> 00:10:51,009
that are already knows yeah ship it is

251
00:10:51,009 --> 00:10:52,809
another library I've used in the past so

252
00:10:52,809 --> 00:10:55,989
JavaScript ssh client you can do

253
00:10:55,989 --> 00:10:57,519
anything that you could do with normal

254
00:10:57,519 --> 00:10:59,499
ssh but you still have to do it manually

255
00:10:59,499 --> 00:11:01,259
which is something i was trying to avoid

256
00:11:01,259 --> 00:11:03,759
and if there are others please let me

257
00:11:03,759 --> 00:11:04,929
know i'm always looking for ways to

258
00:11:04,929 --> 00:11:11,499
improve right now sorry there's still a

259
00:11:11,499 --> 00:11:12,729
couple things that I have to do to make

260
00:11:12,729 --> 00:11:15,159
this a complete project one is having a

261
00:11:15,159 --> 00:11:17,919
proper recursive grammar what that means

262
00:11:17,919 --> 00:11:20,109
is having a grammar that can refer to

263
00:11:20,109 --> 00:11:24,069
its own components an example of this

264
00:11:24,069 --> 00:11:26,859
was if you were to define a task in

265
00:11:26,859 --> 00:11:29,769
terms of strings string would be one

266
00:11:29,769 --> 00:11:32,199
component and then a task declaration

267
00:11:32,199 --> 00:11:35,889
would be parentheses plus string +

268
00:11:35,889 --> 00:11:37,689
parentheses that way it kind of refers

269
00:11:37,689 --> 00:11:41,829
to itself that is something that every

270
00:11:41,829 --> 00:11:43,539
proper programming language has or

271
00:11:43,539 --> 00:11:44,799
something that I'm probably going to

272
00:11:44,799 --> 00:11:46,989
build out at some point built-in

273
00:11:46,989 --> 00:11:49,449
commands as I was using this kind of

274
00:11:49,449 --> 00:11:50,529
wish there was a way to set the

275
00:11:50,529 --> 00:11:52,749
environment just by using a command like

276
00:11:52,749 --> 00:11:55,239
set the environment to node 5.4 or

277
00:11:55,239 --> 00:11:58,989
something like that and lastly a client

278
00:11:58,989 --> 00:12:01,209
to talk to the demon process that way

279
00:12:01,209 --> 00:12:02,319
you know whether everything has worked

280
00:12:02,319 --> 00:12:04,359
because if you have to SSH into figure

281
00:12:04,359 --> 00:12:05,919
out everything happened then kind of

282
00:12:05,919 --> 00:12:10,059
defeats the entire purpose but yeah

283
00:12:10,059 --> 00:12:12,159
there's a lot more stuff to do and if

284
00:12:12,159 --> 00:12:13,779
there's anything else that you think

285
00:12:13,779 --> 00:12:15,369
needs to be added please fork the

286
00:12:15,369 --> 00:12:17,349
project or get in touch with me I'd love

287
00:12:17,349 --> 00:12:18,399
to hear anything that you guys have to

288
00:12:18,399 --> 00:12:28,940
say here we go let's open the floor

289
00:12:28,950 --> 00:12:30,880
test of people now the name of the

290
00:12:30,880 --> 00:12:33,700
project is is view ha it's view ha dash

291
00:12:33,700 --> 00:12:37,090
demon but yeah it's it's v kashti view

292
00:12:37,090 --> 00:12:38,680
house actually it's a Sanskrit word that

293
00:12:38,680 --> 00:12:41,860
means formation and it's kind of what

294
00:12:41,860 --> 00:12:43,500
those set up scripts are it's like a

295
00:12:43,500 --> 00:12:46,950
loose abstract definition of a project

296
00:12:46,950 --> 00:12:52,390
all right have you thought about other

297
00:12:52,390 --> 00:12:56,040
potential applications for this type of

298
00:12:56,040 --> 00:12:58,930
new programming language here oh yeah

299
00:12:58,930 --> 00:13:01,060
totally uh well it can be used for

300
00:13:01,060 --> 00:13:04,930
basically anything so the language

301
00:13:04,930 --> 00:13:07,720
itself can be used to describe anything

302
00:13:07,720 --> 00:13:09,280
that you could break down into a series

303
00:13:09,280 --> 00:13:11,800
of tasks the parser itself is geared

304
00:13:11,800 --> 00:13:15,280
toward bash commands but that isn't

305
00:13:15,280 --> 00:13:17,260
something that set in stone off the top

306
00:13:17,260 --> 00:13:21,420
of my head could be anything from I

307
00:13:21,420 --> 00:13:24,100
don't tallying up your budget like what

308
00:13:24,100 --> 00:13:25,710
you're spending money on it could be

309
00:13:25,710 --> 00:13:27,610
anything that you do want like a

310
00:13:27,610 --> 00:13:29,500
day-to-day basis like shopping for

311
00:13:29,500 --> 00:13:34,210
groceries good if you have like the IOT

312
00:13:34,210 --> 00:13:35,440
set up in your home you could like turn

313
00:13:35,440 --> 00:13:38,170
on lights stuff like that really the

314
00:13:38,170 --> 00:13:42,730
sky's the limit but I mean yeah anything

315
00:13:42,730 --> 00:13:43,960
that you could break down into a series

316
00:13:43,960 --> 00:13:45,790
of commands you have to repeat over and

317
00:13:45,790 --> 00:13:51,040
over this would be ideal for me so you

318
00:13:51,040 --> 00:13:53,170
see we actually use dr. to gain your

319
00:13:53,170 --> 00:13:54,490
eyes your infrastructure and have the

320
00:13:54,490 --> 00:13:56,560
beautiful of a structure and all that

321
00:13:56,560 --> 00:13:59,050
containers and with your bad experience

322
00:13:59,050 --> 00:14:01,420
with dr. compose and other

323
00:14:01,420 --> 00:14:04,030
infrastructure of ecosystem tools of dr.

324
00:14:04,030 --> 00:14:06,990
I have you turned away from the whole

325
00:14:06,990 --> 00:14:08,680
containerization approaching

326
00:14:08,680 --> 00:14:13,330
i early or are you still on that and

327
00:14:13,330 --> 00:14:15,370
just using alternative tools to make it

328
00:14:15,370 --> 00:14:17,560
happen I don't think you can turn away

329
00:14:17,560 --> 00:14:19,390
from containerization because there's a

330
00:14:19,390 --> 00:14:22,810
lot more that containers do to to to

331
00:14:22,810 --> 00:14:24,339
stabilize an isolated particular

332
00:14:24,339 --> 00:14:26,230
environment like docker containers like

333
00:14:26,230 --> 00:14:29,260
is an entire file system this was to

334
00:14:29,260 --> 00:14:32,580
facilitate prototyping projects mainly

335
00:14:32,580 --> 00:14:35,380
but if you're going to run a process

336
00:14:35,380 --> 00:14:36,970
inside a container this would be ideal

337
00:14:36,970 --> 00:14:39,160
for that so Dan's answer your question I

338
00:14:39,160 --> 00:14:40,750
would not turn away from dr completely

339
00:14:40,750 --> 00:14:43,560
but I would not use docker to prototype

340
00:14:43,560 --> 00:14:45,760
doing that in the past has led to like

341
00:14:45,760 --> 00:14:51,130
lots of frustration sorry any plan do

342
00:14:51,130 --> 00:14:52,690
you have any digression p.m. to or

343
00:14:52,690 --> 00:14:55,390
implanted in great confusion p.m. with

344
00:14:55,390 --> 00:14:58,290
the process management dr offender

345
00:14:58,290 --> 00:15:01,750
that's a good question p.m. to so i've

346
00:15:01,750 --> 00:15:07,060
used no tamale no demon p.m. 2 i'm not

347
00:15:07,060 --> 00:15:08,649
sure doesn't hook into the file system

348
00:15:08,649 --> 00:15:13,360
profile system events aight i mean i

349
00:15:13,360 --> 00:15:16,150
could totally see some kind of like

350
00:15:16,150 --> 00:15:17,770
cross play in the future I haven't

351
00:15:17,770 --> 00:15:20,560
looked into p.m. to in association with

352
00:15:20,560 --> 00:15:26,260
this yet so 470 totally please it says

353
00:15:26,260 --> 00:15:31,180
it on the slide no by all means please

354
00:15:31,180 --> 00:15:33,550
get in touch please fork any last

355
00:15:33,550 --> 00:15:44,030
questions ok give it up

356
00:15:44,040 --> 00:15:47,439
you

357
00:15:47,449 --> 00:15:48,949
I've been seeing a lot of rainbows

358
00:15:48,949 --> 00:15:51,379
lately like everywhere not just in opals

359
00:15:51,379 --> 00:15:53,449
glitters or those reflective signs but

360
00:15:53,449 --> 00:15:55,489
when I squint my eyes look at my hair or

361
00:15:55,489 --> 00:15:57,910
glance out the window for some reason

362
00:15:57,910 --> 00:16:00,679
the more I find them the more I am able

363
00:16:00,679 --> 00:16:02,899
to find them it's weird how this works

364
00:16:02,899 --> 00:16:05,029
this mysterious cycle of rainbow

365
00:16:05,029 --> 00:16:07,309
spotting it does work though and I'm

366
00:16:07,309 --> 00:16:09,350
sure of it because even now I can see it

367
00:16:09,350 --> 00:16:11,869
on my screen or on the edge of any of

368
00:16:11,869 --> 00:16:16,009
those lights this is a place when I go

