1
00:00:32,160 --> 00:00:35,710

right so this is the jeaious everywhere

2
00:00:35,710 --> 00:00:38,829
thing I think we're all JavaScript

3
00:00:38,829 --> 00:00:41,100
people so we're pretty happy to see

4
00:00:41,100 --> 00:00:44,860
JavaScript popping up in all these new

5
00:00:44,860 --> 00:00:46,870
and interesting places I'll start off

6
00:00:46,870 --> 00:00:49,980
with a little bit of self introduction I

7
00:00:49,980 --> 00:00:54,400
work at Yammer I am a web dev I've been

8
00:00:54,400 --> 00:00:56,769
doing building stuff for the web for I

9
00:00:56,769 --> 00:00:58,900
guess kind of a long time at lots of

10
00:00:58,900 --> 00:01:02,019
different places in the web stack but my

11
00:01:02,019 --> 00:01:03,670
home has pretty much always been

12
00:01:03,670 --> 00:01:05,710
JavaScript so I'm really excited to see

13
00:01:05,710 --> 00:01:08,110
what's happening in technology now with

14
00:01:08,110 --> 00:01:11,320
JavaScript taking over in all these

15
00:01:11,320 --> 00:01:14,830
different places right so talking about

16
00:01:14,830 --> 00:01:17,530
JavaScript everywhere the good news and

17
00:01:17,530 --> 00:01:21,159
the bad news the the agony and the

18
00:01:21,159 --> 00:01:24,850
ecstasy I guess the good news is if

19
00:01:24,850 --> 00:01:26,950
you're a JavaScript guy you get to use

20
00:01:26,950 --> 00:01:29,200
JavaScript now in all these new and

21
00:01:29,200 --> 00:01:31,750
interesting places right bad news is

22
00:01:31,750 --> 00:01:34,750
that you have to make your code run in

23
00:01:34,750 --> 00:01:38,170
all of these different places right so

24
00:01:38,170 --> 00:01:40,749
kind of like people who are using Linux

25
00:01:40,749 --> 00:01:42,880
as a desktop operating system before the

26
00:01:42,880 --> 00:01:45,189
abuta guys came along the good news was

27
00:01:45,189 --> 00:01:47,950
that you could configure your OS to your

28
00:01:47,950 --> 00:01:49,600
heart's content but the bad news was you

29
00:01:49,600 --> 00:01:53,649
had to configure your OS right so it's a

30
00:01:53,649 --> 00:01:54,729
very similar story and I guess probably

31
00:01:54,729 --> 00:01:57,700
the Linux guys would point out that the

32
00:01:57,700 --> 00:01:59,859
opposite and equal corollary applies on

33
00:01:59,859 --> 00:02:02,200
the Mac side right you kind of can't

34
00:02:02,200 --> 00:02:05,939
configure anything right so everywhere

35
00:02:05,939 --> 00:02:07,960
I'm gonna be talking a little bit about

36
00:02:07,960 --> 00:02:10,179
desktop and mobile a little tiny bit

37
00:02:10,179 --> 00:02:12,490
about system tools JSON the server and

38
00:02:12,490 --> 00:02:13,930
then browser just for completeness we

39
00:02:13,930 --> 00:02:15,130
don't really need to talk about that

40
00:02:15,130 --> 00:02:16,209
because you've been doing it for such a

41
00:02:16,209 --> 00:02:20,590
long time right so what to expect from

42
00:02:20,590 --> 00:02:25,000
this talk first of all you're not gonna

43
00:02:25,000 --> 00:02:27,040
see a bunch of JavaScript D triumphalism

44
00:02:27,040 --> 00:02:28,480
I don't think that's probably very

45
00:02:28,480 --> 00:02:31,540
necessary anymore this trend of

46
00:02:31,540 --> 00:02:33,670
JavaScript encroachment has been going

47
00:02:33,670 --> 00:02:35,890
on for a really long time I can remember

48
00:02:35,890 --> 00:02:39,220
early in 2007 a guy named Steve Yeager

49
00:02:39,220 --> 00:02:42,610
wrote a post he entitled NBL which was

50
00:02:42,610 --> 00:02:44,500
talking about JavaScript as the new big

51
00:02:44,500 --> 00:02:45,580
language

52
00:02:45,580 --> 00:02:49,120
and I remember at the time myself being

53
00:02:49,120 --> 00:02:50,680
fortunate enough to already be doing

54
00:02:50,680 --> 00:02:52,300
lots and lots of JavaScript it was

55
00:02:52,300 --> 00:02:54,400
really exciting for me because I kind of

56
00:02:54,400 --> 00:02:56,650
idolized Steve to see that he was seeing

57
00:02:56,650 --> 00:02:59,950
it too Jay is the language of the

58
00:02:59,950 --> 00:03:01,990
browser the browser is your viewport

59
00:03:01,990 --> 00:03:03,460
into this interconnectedness of the web

60
00:03:03,460 --> 00:03:06,970
and so pretty simple equation and it's

61
00:03:06,970 --> 00:03:09,250
just a matter of sort of marching

62
00:03:09,250 --> 00:03:11,590
forward inevitability right another

63
00:03:11,590 --> 00:03:14,530
thing not to expect is a lot of Pat

64
00:03:14,530 --> 00:03:17,430
answers because this is all very new

65
00:03:17,430 --> 00:03:21,790
we're it's it's been going on for a long

66
00:03:21,790 --> 00:03:23,200
time but the mainstreaming of this is

67
00:03:23,200 --> 00:03:25,450
still relatively new we're kind of

68
00:03:25,450 --> 00:03:27,070
making still sort of making this stuff

69
00:03:27,070 --> 00:03:30,250
up as we go along kind of light some

70
00:03:30,250 --> 00:03:34,000
parts of this talk right so the obvious

71
00:03:34,000 --> 00:03:36,460
benefits of using javascript knowledge

72
00:03:36,460 --> 00:03:38,200
different places probably don't have to

73
00:03:38,200 --> 00:03:40,360
sell you guys on on some of this

74
00:03:40,360 --> 00:03:42,250
although I see that there are lots of

75
00:03:42,250 --> 00:03:43,540
guys coming into jeaious from other

76
00:03:43,540 --> 00:03:46,810
places and they're finding out whether

77
00:03:46,810 --> 00:03:48,190
they were Python people or Java people

78
00:03:48,190 --> 00:03:50,350
or Ruby or what that javascript is is a

79
00:03:50,350 --> 00:03:51,910
pretty good language to use right we

80
00:03:51,910 --> 00:03:55,050
like it it's fun and surprisingly for me

81
00:03:55,050 --> 00:03:57,610
more important than the code reuse which

82
00:03:57,610 --> 00:03:59,980
is which is nice is not having to switch

83
00:03:59,980 --> 00:04:02,020
back and forth having finished my first

84
00:04:02,020 --> 00:04:04,660
sort of large full stack JavaScript

85
00:04:04,660 --> 00:04:06,880
feature at Yammer in the past couple of

86
00:04:06,880 --> 00:04:10,600
months it was really really amazing how

87
00:04:10,600 --> 00:04:12,370
much more productive you become when

88
00:04:12,370 --> 00:04:14,470
you're not suddenly needlessly paranoid

89
00:04:14,470 --> 00:04:16,780
about white space in your front-end code

90
00:04:16,780 --> 00:04:19,419
or needlessly inserting semicolons on

91
00:04:19,419 --> 00:04:21,580
your server side code it's a good

92
00:04:21,580 --> 00:04:24,310
feeling and you you it's a lot easier to

93
00:04:24,310 --> 00:04:25,450
achieve a sort of flow state where

94
00:04:25,450 --> 00:04:26,770
you're just building the thing it's a

95
00:04:26,770 --> 00:04:30,010
really great feeling so we'll be talking

96
00:04:30,010 --> 00:04:33,490
about desktop jeaious and mobile Jay

97
00:04:33,490 --> 00:04:35,050
Mobile Jas I'm going to kind of lump

98
00:04:35,050 --> 00:04:38,680
those together reason being that despite

99
00:04:38,680 --> 00:04:40,840
the fact that you your UI constraints

100
00:04:40,840 --> 00:04:45,310
are a little different and the the

101
00:04:45,310 --> 00:04:47,169
screen size is a little bit different

102
00:04:47,169 --> 00:04:49,390
the the method of developing these apps

103
00:04:49,390 --> 00:04:50,770
is still pretty much the same whether

104
00:04:50,770 --> 00:04:51,760
you're working on the desktop or mobile

105
00:04:51,760 --> 00:04:53,560
there's four sort of categories of apps

106
00:04:53,560 --> 00:04:56,140
and because of what we've done at Yammer

107
00:04:56,140 --> 00:04:57,850
specifically with our desktop client I'm

108
00:04:57,850 --> 00:04:59,240
going to be focused

109
00:04:59,240 --> 00:05:02,990
very specifically on writing in j/s this

110
00:05:02,990 --> 00:05:04,220
thing of sort of launching a minimal

111
00:05:04,220 --> 00:05:05,810
browser its installed out but it's still

112
00:05:05,810 --> 00:05:08,810
sort of runs like a browser it's a bunch

113
00:05:08,810 --> 00:05:11,630
of way to build apps but they're the

114
00:05:11,630 --> 00:05:15,310
same whether it's desktop or web so

115
00:05:15,310 --> 00:05:18,979
focusing on an installed app I think

116
00:05:18,979 --> 00:05:21,470
it's probably at least worth touching on

117
00:05:21,470 --> 00:05:23,690
I don't want to derail the JavaScript

118
00:05:23,690 --> 00:05:26,419
everything thing too too much but it's

119
00:05:26,419 --> 00:05:28,360
worth at least talking about this

120
00:05:28,360 --> 00:05:30,800
discussion of whether you should be

121
00:05:30,800 --> 00:05:32,479
building a native client or not because

122
00:05:32,479 --> 00:05:33,530
something a lot of people are talking

123
00:05:33,530 --> 00:05:36,349
about had a very long and involved

124
00:05:36,349 --> 00:05:37,729
discussion with one of our engineers

125
00:05:37,729 --> 00:05:39,800
Kota Hale on Saturday during our data

126
00:05:39,800 --> 00:05:43,750
center move about the problem with

127
00:05:43,750 --> 00:05:47,000
native apps versus non native apps so

128
00:05:47,000 --> 00:05:48,949
it's at least worth mentioning this

129
00:05:48,949 --> 00:05:50,419
whole discussion and was kind of

130
00:05:50,419 --> 00:05:53,060
crystallized in a blog post by Alex

131
00:05:53,060 --> 00:05:55,520
Payne formerly of Twitter basically

132
00:05:55,520 --> 00:05:57,620
decrying air as a development

133
00:05:57,620 --> 00:05:59,449
environment and the TLDR of his blog

134
00:05:59,449 --> 00:06:01,729
post was essentially that if you're

135
00:06:01,729 --> 00:06:03,470
deploying an air app you don't care

136
00:06:03,470 --> 00:06:05,419
about your customers that was sort of

137
00:06:05,419 --> 00:06:07,159
the takeaway from his blog post and I

138
00:06:07,159 --> 00:06:09,520
think he backpedaled a little bit when

139
00:06:09,520 --> 00:06:13,039
there were some responses to his blog

140
00:06:13,039 --> 00:06:15,680
post he backed backed off on some of the

141
00:06:15,680 --> 00:06:18,260
more incendiary pieces of it the point

142
00:06:18,260 --> 00:06:21,229
is is is valid but I think the question

143
00:06:21,229 --> 00:06:22,340
of whether or not to develop this kind

144
00:06:22,340 --> 00:06:25,490
of an app is affected by two very very

145
00:06:25,490 --> 00:06:28,220
important and practical things the first

146
00:06:28,220 --> 00:06:30,380
one being the simple practicality of

147
00:06:30,380 --> 00:06:32,180
what do you do if you need to ship an

148
00:06:32,180 --> 00:06:34,639
app right you can't necessarily hire

149
00:06:34,639 --> 00:06:37,610
someone for every environment that you

150
00:06:37,610 --> 00:06:40,520
that you want to ship for maybe you can

151
00:06:40,520 --> 00:06:42,139
you know maybe you can't contract out

152
00:06:42,139 --> 00:06:43,490
maybe it's too hard to manage the

153
00:06:43,490 --> 00:06:45,139
relationship with your contractors or

154
00:06:45,139 --> 00:06:46,820
ensure you're actually not getting crap

155
00:06:46,820 --> 00:06:51,110
right or just don't ship an app one of

156
00:06:51,110 --> 00:06:54,620
the responses from the guy who does the

157
00:06:54,620 --> 00:06:57,400
spazz Twitter client which is a JSF I

158
00:06:57,400 --> 00:07:00,740
think he has a very good point it's it

159
00:07:00,740 --> 00:07:03,680
may be easier to develop a bad app using

160
00:07:03,680 --> 00:07:06,800
one of these frameworks but being native

161
00:07:06,800 --> 00:07:08,779
there's plenty of crappy native apps if

162
00:07:08,779 --> 00:07:10,940
you've ever used Windows shareware it's

163
00:07:10,940 --> 00:07:12,720
very very easy to build crappy

164
00:07:12,720 --> 00:07:14,160
crappy app whichever thing you're using

165
00:07:14,160 --> 00:07:15,930
maybe a little bit harder to do a nice

166
00:07:15,930 --> 00:07:18,480
app with something like air but it's not

167
00:07:18,480 --> 00:07:21,240
it's not like it's impossible so the

168
00:07:21,240 --> 00:07:23,610
second point and this is maybe the more

169
00:07:23,610 --> 00:07:25,310
salient

170
00:07:25,310 --> 00:07:27,660
what does Native even mean when the app

171
00:07:27,660 --> 00:07:29,250
that you're talking about is first and

172
00:07:29,250 --> 00:07:31,470
foremost or is originating as a web app

173
00:07:31,470 --> 00:07:33,830
right so here's a very good example

174
00:07:33,830 --> 00:07:37,140
Facebook has released an update to their

175
00:07:37,140 --> 00:07:40,680
iOS client that uses that renders the

176
00:07:40,680 --> 00:07:43,320
feed with the same markup and JavaScript

177
00:07:43,320 --> 00:07:45,470
as their generic mobile site right

178
00:07:45,470 --> 00:07:48,030
Facebook is a web app so what do you do

179
00:07:48,030 --> 00:07:49,770
when your app is sort of inextricably

180
00:07:49,770 --> 00:07:52,320
linked with the web and anything you do

181
00:07:52,320 --> 00:07:54,300
interacting with with the app or lots of

182
00:07:54,300 --> 00:07:56,640
things take you to other parts of the

183
00:07:56,640 --> 00:08:00,060
web right so it's not entirely clear

184
00:08:00,060 --> 00:08:02,730
that native is native is better I don't

185
00:08:02,730 --> 00:08:05,310
think it's it's maybe up for debate and

186
00:08:05,310 --> 00:08:06,600
this was sort of my just my discussion

187
00:08:06,600 --> 00:08:09,000
with coda the crappiness of this

188
00:08:09,000 --> 00:08:10,740
environment how much of it is because

189
00:08:10,740 --> 00:08:12,480
it's kind of web --is-- it's neither

190
00:08:12,480 --> 00:08:14,640
fish nor fowl problem or how much of it

191
00:08:14,640 --> 00:08:16,050
is just that the implementation is it

192
00:08:16,050 --> 00:08:17,040
very good and I don't think there's a

193
00:08:17,040 --> 00:08:20,640
clear answer for that in any case we we

194
00:08:20,640 --> 00:08:23,520
have now a new desktop web app it's an

195
00:08:23,520 --> 00:08:26,190
air app using all of the same j/s that

196
00:08:26,190 --> 00:08:29,460
powers our web our website so there are

197
00:08:29,460 --> 00:08:30,930
some sort of environmental constraints

198
00:08:30,930 --> 00:08:33,120
building an app like this and then there

199
00:08:33,120 --> 00:08:34,710
are also some sort of macro level

200
00:08:34,710 --> 00:08:36,150
impacts on your development process that

201
00:08:36,150 --> 00:08:38,370
come from from having this kind of an

202
00:08:38,370 --> 00:08:41,190
app specific to the the environment

203
00:08:41,190 --> 00:08:43,860
obviously you're dealing with an older

204
00:08:43,860 --> 00:08:46,830
version of the browser you end up with

205
00:08:46,830 --> 00:08:48,780
some either crippled or sort of

206
00:08:48,780 --> 00:08:50,550
non-standard implementations of things

207
00:08:50,550 --> 00:08:51,780
that you come to expect in a modern

208
00:08:51,780 --> 00:08:55,350
browser like no eval after document

209
00:08:55,350 --> 00:08:57,210
onload means say for example you can't

210
00:08:57,210 --> 00:08:59,580
use ejs right if you're if you're

211
00:08:59,580 --> 00:09:03,780
wanting to use ejs you're Sol you have

212
00:09:03,780 --> 00:09:06,240
you have the a relatively nice mechanism

213
00:09:06,240 --> 00:09:09,120
of communicating between windows but

214
00:09:09,120 --> 00:09:10,589
it's not post message it's this other

215
00:09:10,589 --> 00:09:13,380
sort of weird thing the sandbox bridge

216
00:09:13,380 --> 00:09:15,120
thing that's separate so you end up in

217
00:09:15,120 --> 00:09:17,760
your J's code with you know the crappy

218
00:09:17,760 --> 00:09:20,940
browser block the good browser block and

219
00:09:20,940 --> 00:09:23,670
then the other air block now you have

220
00:09:23,670 --> 00:09:25,860
yet this other not either one

221
00:09:25,860 --> 00:09:26,640
environment that you

222
00:09:26,640 --> 00:09:30,030
have to support and of course the biggie

223
00:09:30,030 --> 00:09:32,250
is that the tools are still not there

224
00:09:32,250 --> 00:09:33,750
and this is kind of a continuing refrain

225
00:09:33,750 --> 00:09:36,630
that we'll see over and over debugging

226
00:09:36,630 --> 00:09:40,200
is terrible we're kind of spoiled with

227
00:09:40,200 --> 00:09:43,080
the tools that we have in the browser so

228
00:09:43,080 --> 00:09:46,380
at the macro level the what the impact

229
00:09:46,380 --> 00:09:47,550
that it can that it has on your

230
00:09:47,550 --> 00:09:50,040
development process because of course

231
00:09:50,040 --> 00:09:51,600
now this code is all distributed out in

232
00:09:51,600 --> 00:09:52,950
people's desktops and they may or may

233
00:09:52,950 --> 00:09:54,810
not have the wherewithal to to upgrade

234
00:09:54,810 --> 00:09:57,270
their app you have to be a lot more

235
00:09:57,270 --> 00:10:00,360
careful the people developing the web

236
00:10:00,360 --> 00:10:02,160
j/s have to be a lot more careful with

237
00:10:02,160 --> 00:10:04,350
their development process because you're

238
00:10:04,350 --> 00:10:07,530
syncing up at points in time with with

239
00:10:07,530 --> 00:10:10,740
the desktop code base the corollary to

240
00:10:10,740 --> 00:10:12,960
that of course is that you can't simply

241
00:10:12,960 --> 00:10:14,910
push a bug-fix on the front end and on

242
00:10:14,910 --> 00:10:17,010
the back end you can make changes to

243
00:10:17,010 --> 00:10:19,080
your back-end code you can make changes

244
00:10:19,080 --> 00:10:20,610
to your web code but it has to be

245
00:10:20,610 --> 00:10:23,670
backward compatible which ends up being

246
00:10:23,670 --> 00:10:26,750
kind of a pain in the ass in some cases

247
00:10:26,750 --> 00:10:31,680
so I guess this is probably yeah you

248
00:10:31,680 --> 00:10:33,240
could sort of shine a spotlight on this

249
00:10:33,240 --> 00:10:36,140
this is the this is the take away

250
00:10:36,140 --> 00:10:38,700
versioning is really really important if

251
00:10:38,700 --> 00:10:39,750
you're going to be doing this sort of

252
00:10:39,750 --> 00:10:42,030
cross environment development and not

253
00:10:42,030 --> 00:10:45,360
necessarily simply adding a tag it's

254
00:10:45,360 --> 00:10:46,740
very important to make sure that

255
00:10:46,740 --> 00:10:47,970
everyone understands what the

256
00:10:47,970 --> 00:10:50,490
ramifications of the various tagging

257
00:10:50,490 --> 00:10:52,860
scheme might be so are we going to do

258
00:10:52,860 --> 00:10:54,810
the odd and even thing are we going to

259
00:10:54,810 --> 00:10:57,150
you know how do you know when the API

260
00:10:57,150 --> 00:10:59,460
breaks essentially right so is it is it

261
00:10:59,460 --> 00:11:01,710
one two three and then go or is it you

262
00:11:01,710 --> 00:11:06,120
know one two and then go on three so the

263
00:11:06,120 --> 00:11:08,490
next one is also important or is bigger

264
00:11:08,490 --> 00:11:11,340
than just a desktop jazz thing but it it

265
00:11:11,340 --> 00:11:12,810
is very important in that environment

266
00:11:12,810 --> 00:11:15,960
which is wrapping things that are

267
00:11:15,960 --> 00:11:17,910
utilities that you expect to use in

268
00:11:17,910 --> 00:11:19,260
these various environments so a good

269
00:11:19,260 --> 00:11:20,460
examples for us we have a thing called

270
00:11:20,460 --> 00:11:22,650
yam global that points to the global

271
00:11:22,650 --> 00:11:24,540
object so whatever environment we happen

272
00:11:24,540 --> 00:11:26,490
to be in we know that that's what that

273
00:11:26,490 --> 00:11:29,790
is meaning your developers off of these

274
00:11:29,790 --> 00:11:31,680
magical things that are just existing in

275
00:11:31,680 --> 00:11:33,960
the global space I'm having a single

276
00:11:33,960 --> 00:11:35,550
entry point where you can in your code

277
00:11:35,550 --> 00:11:37,500
where you can push in the dependencies

278
00:11:37,500 --> 00:11:39,690
rather than expecting them just to be

279
00:11:39,690 --> 00:11:40,290
out there

280
00:11:40,290 --> 00:11:44,600
the air privates privates are nice but

281
00:11:44,600 --> 00:11:46,889
sometimes you need a monkey patch so

282
00:11:46,889 --> 00:11:49,160
that you can just ship it's not

283
00:11:49,160 --> 00:11:52,800
necessarily pleasant but it's reality

284
00:11:52,800 --> 00:11:54,930
and it's nice to have that tool at your

285
00:11:54,930 --> 00:11:57,480
disposal so I like private methods but

286
00:11:57,480 --> 00:11:59,819
sometimes they can be problematic the

287
00:11:59,819 --> 00:12:01,019
last one is probably the most

288
00:12:01,019 --> 00:12:02,009
problematic

289
00:12:02,009 --> 00:12:05,699
we found simply because it's really

290
00:12:05,699 --> 00:12:08,490
really onerous if you're a web jazz guy

291
00:12:08,490 --> 00:12:09,720
just set up one of these other

292
00:12:09,720 --> 00:12:12,690
environments to test it right but it's

293
00:12:12,690 --> 00:12:14,699
and this is still not solve prom for us

294
00:12:14,699 --> 00:12:17,190
it's really really important I myself

295
00:12:17,190 --> 00:12:20,699
have been guilty you guys know of making

296
00:12:20,699 --> 00:12:22,319
some change happily making some change

297
00:12:22,319 --> 00:12:23,550
in the codebase knowing that there's

298
00:12:23,550 --> 00:12:26,459
absolutely no possible way it could

299
00:12:26,459 --> 00:12:28,500
affect the desktop but sure enough

300
00:12:28,500 --> 00:12:30,329
because I'm not firing up the desktop

301
00:12:30,329 --> 00:12:32,220
and because we have no automated tests

302
00:12:32,220 --> 00:12:35,029
on that yet right so this is the other

303
00:12:35,029 --> 00:12:37,829
refrain in this besides tools is testing

304
00:12:37,829 --> 00:12:43,560
I ended up breaking stuff so for system

305
00:12:43,560 --> 00:12:45,630
tools the system tools bit I'm only

306
00:12:45,630 --> 00:12:47,639
going to talk about one thing and that's

307
00:12:47,639 --> 00:12:49,649
simply because I have a lot of personal

308
00:12:49,649 --> 00:12:51,329
experience with it this is the Jake

309
00:12:51,329 --> 00:12:54,120
build tool so if you're used to some

310
00:12:54,120 --> 00:12:55,920
tool like rake it will feel very very

311
00:12:55,920 --> 00:12:58,470
familiar does all the stuff that you

312
00:12:58,470 --> 00:13:02,160
would expect a build tool to do or most

313
00:13:02,160 --> 00:13:04,560
of the things there's one add one

314
00:13:04,560 --> 00:13:05,970
interesting addition because it's built

315
00:13:05,970 --> 00:13:08,779
for node it supports asynchronous tasks

316
00:13:08,779 --> 00:13:11,940
of course it's asynchronous it supports

317
00:13:11,940 --> 00:13:16,670
or it's built for node and unlike other

318
00:13:16,670 --> 00:13:19,050
projects that I may or may not have

319
00:13:19,050 --> 00:13:21,449
worked on this is actually maintained

320
00:13:21,449 --> 00:13:25,680
and bug fixed yeah okay so this is what

321
00:13:25,680 --> 00:13:26,850
a task would look like or the

322
00:13:26,850 --> 00:13:28,620
description of this is what you would

323
00:13:28,620 --> 00:13:30,540
find in a Jake file these are some

324
00:13:30,540 --> 00:13:32,939
examples it's pretty straightforward you

325
00:13:32,939 --> 00:13:35,730
can see in the bass task it's passing

326
00:13:35,730 --> 00:13:38,699
dependencies as an array it's all pretty

327
00:13:38,699 --> 00:13:41,279
straightforward you notice that it's

328
00:13:41,279 --> 00:13:44,189
console dot during the arguments so you

329
00:13:44,189 --> 00:13:45,569
can actually pass arguments and if you

330
00:13:45,569 --> 00:13:48,019
go look at the readme and the github

331
00:13:48,019 --> 00:13:50,730
project you'll see how to how to do that

332
00:13:50,730 --> 00:13:52,190
there's a nice way to pass

333
00:13:52,190 --> 00:13:54,800
in this is what an asynchronous task

334
00:13:54,800 --> 00:13:57,860
would look like you just pass a flag to

335
00:13:57,860 --> 00:14:00,380
the to the task set up it's an optional

336
00:14:00,380 --> 00:14:01,730
flag that says it's asynchronous and you

337
00:14:01,730 --> 00:14:03,710
call the complete manually when you're

338
00:14:03,710 --> 00:14:05,690
done it also has a bunch of this stuff

339
00:14:05,690 --> 00:14:08,240
that people that rake users would expect

340
00:14:08,240 --> 00:14:11,600
like tasks taht execute invoke reenable

341
00:14:11,600 --> 00:14:17,750
a global fail etc right so the thing

342
00:14:17,750 --> 00:14:19,490
that we were all kind of here for we're

343
00:14:19,490 --> 00:14:22,250
also super excited about is finally

344
00:14:22,250 --> 00:14:24,580
having like real decent usable

345
00:14:24,580 --> 00:14:26,150
JavaScript on the server

346
00:14:26,150 --> 00:14:29,630
um the interesting thing is if you

347
00:14:29,630 --> 00:14:31,610
notice the picture and I love the fact

348
00:14:31,610 --> 00:14:33,200
that this book is still available on

349
00:14:33,200 --> 00:14:36,190
Amazon right

350
00:14:36,190 --> 00:14:37,940
so I don't know what year this thing

351
00:14:37,940 --> 00:14:41,540
came out it would be late 90s but JSON

352
00:14:41,540 --> 00:14:43,700
the server has been around for actually

353
00:14:43,700 --> 00:14:45,800
a really long time here's a nice long

354
00:14:45,800 --> 00:14:48,710
list starting with the original gangster

355
00:14:48,710 --> 00:14:53,450
s SJS with Netscape Microsoft IAS so I

356
00:14:53,450 --> 00:14:55,670
wrote my first server-side JavaScript

357
00:14:55,670 --> 00:14:58,700
probably in the early 2000s in a classic

358
00:14:58,700 --> 00:15:01,820
ASP app right hell mo which is still

359
00:15:01,820 --> 00:15:05,180
around is a rhino based solution they

360
00:15:05,180 --> 00:15:06,320
did some interesting stuff with

361
00:15:06,320 --> 00:15:08,960
prototypal inheritance in the ORM white

362
00:15:08,960 --> 00:15:12,140
beam was a spider monkey in XML then

363
00:15:12,140 --> 00:15:13,550
there was this thing called Zemke does

364
00:15:13,550 --> 00:15:16,730
anybody remember Zemke at all yeah

365
00:15:16,730 --> 00:15:18,590
they if I remember correctly it was

366
00:15:18,590 --> 00:15:21,350
spider monkey and the i/o was all mod

367
00:15:21,350 --> 00:15:24,140
Perl something like that they were also

368
00:15:24,140 --> 00:15:25,430
very interesting in that they were the

369
00:15:25,430 --> 00:15:27,950
first group of people I ever saw trying

370
00:15:27,950 --> 00:15:30,350
to do something like a development

371
00:15:30,350 --> 00:15:32,240
platform as a cloud service this was

372
00:15:32,240 --> 00:15:34,460
before the word cloud was being batted

373
00:15:34,460 --> 00:15:39,500
around like it is now jax-ur I want to

374
00:15:39,500 --> 00:15:41,300
make some kind of a joke like yo dog I

375
00:15:41,300 --> 00:15:43,520
see you like Mozilla and you like server

376
00:15:43,520 --> 00:15:45,800
so I put Mozilla in your server but

377
00:15:45,800 --> 00:15:47,450
couldn't couldn't think of a good way to

378
00:15:47,450 --> 00:15:51,190
do that but the last ones are all

379
00:15:51,190 --> 00:15:54,680
projects that seem to be ongoing now JVM

380
00:15:54,680 --> 00:15:56,360
Bay a bunch of JVM based solutions and

381
00:15:56,360 --> 00:15:58,100
then of course nodejs

382
00:15:58,100 --> 00:16:00,140
which makes us all very happy as

383
00:16:00,140 --> 00:16:03,020
JavaScript developers and then the very

384
00:16:03,020 --> 00:16:04,430
at the very very last item here at the

385
00:16:04,430 --> 00:16:05,850
bottom just because it's very

386
00:16:05,850 --> 00:16:08,250
to what we're doing Amur is these

387
00:16:08,250 --> 00:16:09,540
embedded solutions where you can stick

388
00:16:09,540 --> 00:16:13,589
v8 in some in something else right so

389
00:16:13,589 --> 00:16:16,579
it's so exciting now to have feature

390
00:16:16,579 --> 00:16:24,180
parody get it no no okay that's that's

391
00:16:24,180 --> 00:16:27,240
terrible I'm I'm deeply deeply sorry but

392
00:16:27,240 --> 00:16:28,860
it is it is very exciting to have

393
00:16:28,860 --> 00:16:31,440
feature parody now with the server you

394
00:16:31,440 --> 00:16:32,990
don't have to switch to something else

395
00:16:32,990 --> 00:16:35,730
you don't have to keep these different

396
00:16:35,730 --> 00:16:36,990
semantics in your mind switching back

397
00:16:36,990 --> 00:16:39,540
and forth between the two things it's

398
00:16:39,540 --> 00:16:41,690
really really exciting to be able to

399
00:16:41,690 --> 00:16:43,949
console dot log in the middle of your

400
00:16:43,949 --> 00:16:47,009
work or and and you don't know you you

401
00:16:47,009 --> 00:16:48,360
can't remember which environment it's

402
00:16:48,360 --> 00:16:49,649
going to be the out the output is going

403
00:16:49,649 --> 00:16:51,690
to be you're gonna be seeing the output

404
00:16:51,690 --> 00:16:53,819
in or forgetting whether you should be

405
00:16:53,819 --> 00:16:55,560
refreshing the browser or restarting the

406
00:16:55,560 --> 00:16:57,329
server it's it's a good it's a good

407
00:16:57,329 --> 00:16:59,250
problem to have and it's it's very

408
00:16:59,250 --> 00:17:01,500
exciting to be a JavaScript developer

409
00:17:01,500 --> 00:17:03,300
now so some some of the very obvious

410
00:17:03,300 --> 00:17:06,240
benefits of our code sharing we

411
00:17:06,240 --> 00:17:08,189
mentioned that a minute ago these are

412
00:17:08,189 --> 00:17:10,100
the sort of the the sort of obvious

413
00:17:10,100 --> 00:17:12,630
places you would want to share code and

414
00:17:12,630 --> 00:17:14,789
for me the big win here is validation

415
00:17:14,789 --> 00:17:16,169
just because it's the fiddle iasts

416
00:17:16,169 --> 00:17:18,270
probably bit of your of your code and

417
00:17:18,270 --> 00:17:19,890
it's really irritating trying to

418
00:17:19,890 --> 00:17:22,919
remember to keep them both in sync you

419
00:17:22,919 --> 00:17:24,059
make a change to the client-side

420
00:17:24,059 --> 00:17:25,860
validation and forget to go do it in

421
00:17:25,860 --> 00:17:27,630
Ruby land or Python land or wherever it

422
00:17:27,630 --> 00:17:31,039
is you have to you have to go so to

423
00:17:31,039 --> 00:17:35,630
bring forward an example of that right

424
00:17:35,630 --> 00:17:39,690
the Getty web framework it's not dead

425
00:17:39,690 --> 00:17:45,330
it's it's just resting we are using some

426
00:17:45,330 --> 00:17:47,370
pieces of this in production at Yammer

427
00:17:47,370 --> 00:17:48,840
and the pieces that we're actually using

428
00:17:48,840 --> 00:17:52,049
or are well maintained the rest of it

429
00:17:52,049 --> 00:17:54,960
apologies not so much I'm hoping to have

430
00:17:54,960 --> 00:17:58,200
a chance to work on that so here's a

431
00:17:58,200 --> 00:18:01,200
good example this is a model from the

432
00:18:01,200 --> 00:18:02,909
server and if you've ever used active

433
00:18:02,909 --> 00:18:05,130
record or data mapper or any-any or I'm

434
00:18:05,130 --> 00:18:06,120
like that this should look very very

435
00:18:06,120 --> 00:18:08,730
familiar to you right this is just a

436
00:18:08,730 --> 00:18:11,400
model with some with a validation added

437
00:18:11,400 --> 00:18:14,340
and this is the same model this is the

438
00:18:14,340 --> 00:18:18,240
same model on the browser right so let's

439
00:18:18,240 --> 00:18:19,230
do that again

440
00:18:19,230 --> 00:18:23,159
server browser right it's really nice

441
00:18:23,159 --> 00:18:26,880
because it's exactly the same and when

442
00:18:26,880 --> 00:18:28,590
you're when you create a getty app and

443
00:18:28,590 --> 00:18:30,840
you create a resource then you run the

444
00:18:30,840 --> 00:18:32,880
script that that creates one of these

445
00:18:32,880 --> 00:18:35,010
scaffolds that has all the UI code it

446
00:18:35,010 --> 00:18:36,779
literally takes the server-side model

447
00:18:36,779 --> 00:18:39,630
changes a line and copies it from app

448
00:18:39,630 --> 00:18:43,260
models into public J's models that

449
00:18:43,260 --> 00:18:46,440
simple it's really really beautiful if

450
00:18:46,440 --> 00:18:49,110
your JavaScript guides it's it's really

451
00:18:49,110 --> 00:18:52,889
really nice so of course it's not all

452
00:18:52,889 --> 00:18:56,100
sunshine in unicorn poop we have the

453
00:18:56,100 --> 00:18:58,679
problem we've been talking there have

454
00:18:58,679 --> 00:19:01,470
been a bunch of talks about this through

455
00:19:01,470 --> 00:19:03,860
the last couple of days

456
00:19:03,860 --> 00:19:06,000
modules talking about the problem of how

457
00:19:06,000 --> 00:19:10,500
to get the code into the runtime and of

458
00:19:10,500 --> 00:19:12,899
course the java scripts historic ties to

459
00:19:12,899 --> 00:19:15,750
the browser means that sometimes it's

460
00:19:15,750 --> 00:19:17,010
kind of hard to get away from the dom

461
00:19:17,010 --> 00:19:20,309
right so much code assumes the dom so if

462
00:19:20,309 --> 00:19:21,870
you were to ask a work a day like

463
00:19:21,870 --> 00:19:23,399
anything you know generic language

464
00:19:23,399 --> 00:19:25,919
program or what's the JavaScript library

465
00:19:25,919 --> 00:19:27,809
obviously the answer would be jQuery

466
00:19:27,809 --> 00:19:30,690
which is intimately intimately tied to

467
00:19:30,690 --> 00:19:35,970
the Dom so a nice way to share code if

468
00:19:35,970 --> 00:19:37,590
you have very very little code to share

469
00:19:37,590 --> 00:19:39,929
between the two environments you might

470
00:19:39,929 --> 00:19:41,639
actually be able to get away with the

471
00:19:41,639 --> 00:19:43,350
stupidest possible solution which is

472
00:19:43,350 --> 00:19:47,100
this right some common sensical naming

473
00:19:47,100 --> 00:19:49,230
convention in both server and browser

474
00:19:49,230 --> 00:19:51,600
and checking to see if there's a module

475
00:19:51,600 --> 00:19:55,409
that needs to where you can export your

476
00:19:55,409 --> 00:19:57,149
food namespace that you've created right

477
00:19:57,149 --> 00:20:00,090
the problem with that of course is this

478
00:20:00,090 --> 00:20:03,330
ad hoc in your code oftentimes turns

479
00:20:03,330 --> 00:20:07,940
into sort of a big mess of crap and

480
00:20:07,940 --> 00:20:11,100
sadly this is code that is still in use

481
00:20:11,100 --> 00:20:13,950
in the Getty model stuff you can see

482
00:20:13,950 --> 00:20:16,380
with the require sis that it's pretty

483
00:20:16,380 --> 00:20:18,149
old and it could probably be done a lot

484
00:20:18,149 --> 00:20:19,860
nicer but this is what happens if you

485
00:20:19,860 --> 00:20:21,389
try to start minimal and you don't

486
00:20:21,389 --> 00:20:24,510
actually plan so thankfully there's a

487
00:20:24,510 --> 00:20:26,130
bunch of work being done on modules to

488
00:20:26,130 --> 00:20:28,919
improve that a bunch of there were

489
00:20:28,919 --> 00:20:32,159
numerous talks about that in the past

490
00:20:32,159 --> 00:20:32,720
couple

491
00:20:32,720 --> 00:20:35,450
so there's no real need to go over it

492
00:20:35,450 --> 00:20:37,370
with the sole exception of saying this

493
00:20:37,370 --> 00:20:38,780
is nice it's good to see all this work

494
00:20:38,780 --> 00:20:41,870
going on but when you have a large and

495
00:20:41,870 --> 00:20:43,909
very very complicated front-end code

496
00:20:43,909 --> 00:20:45,799
base like we have a Yammer taking

497
00:20:45,799 --> 00:20:47,030
something that's written like this a

498
00:20:47,030 --> 00:20:51,799
very familiar pattern for creating some

499
00:20:51,799 --> 00:20:55,580
you know module of code and then getting

500
00:20:55,580 --> 00:20:59,720
it into the browser runtime it's when

501
00:20:59,720 --> 00:21:01,640
you have a lot of this it's really hard

502
00:21:01,640 --> 00:21:04,250
to turn it into turn it all into this

503
00:21:04,250 --> 00:21:08,419
right it's a pretty big change and it's

504
00:21:08,419 --> 00:21:14,299
a really ugly API to know no disrespect

505
00:21:14,299 --> 00:21:16,880
intended i i've looked at this a lot and

506
00:21:16,880 --> 00:21:18,950
thought about it a lot and it's hard to

507
00:21:18,950 --> 00:21:20,330
imagine how you could do this any

508
00:21:20,330 --> 00:21:22,370
differently but it is kind of awkward

509
00:21:22,370 --> 00:21:25,460
it's an awkward api maybe server-side

510
00:21:25,460 --> 00:21:27,530
pre-processing i don't know it's worth

511
00:21:27,530 --> 00:21:29,990
considering so on this this is just here

512
00:21:29,990 --> 00:21:31,909
for completion for a completeness it's

513
00:21:31,909 --> 00:21:33,200
not something that we're really using it

514
00:21:33,200 --> 00:21:35,000
Yammer we're still dealing with just

515
00:21:35,000 --> 00:21:36,919
rendering templates but it's worth

516
00:21:36,919 --> 00:21:38,000
mentioning that there's a lot of

517
00:21:38,000 --> 00:21:40,850
interesting and solid work going on in

518
00:21:40,850 --> 00:21:43,880
this area so what we are using is this

519
00:21:43,880 --> 00:21:45,919
thing called the ruby racer which embeds

520
00:21:45,919 --> 00:21:50,419
a v8 process in in ruby it's a very very

521
00:21:50,419 --> 00:21:53,299
simple interpreter there's no IO for

522
00:21:53,299 --> 00:21:57,740
dances there's no window you all you get

523
00:21:57,740 --> 00:22:00,950
is a simple interpreter and there are

524
00:22:00,950 --> 00:22:03,320
some niceties for getting variables from

525
00:22:03,320 --> 00:22:07,900
Ruby land into into your JavaScript so

526
00:22:07,900 --> 00:22:10,429
would JavaScript be the peanut butter or

527
00:22:10,429 --> 00:22:12,650
the chocolate I've been kind of thinking

528
00:22:12,650 --> 00:22:15,380
about this what do y'all think this

529
00:22:15,380 --> 00:22:16,990
JavaScript more like the peanut butter

530
00:22:16,990 --> 00:22:21,280
or the chocolate no votes nobody cares

531
00:22:21,280 --> 00:22:24,590
what what's that that's probably the

532
00:22:24,590 --> 00:22:25,990
peanut butter yeah I think so too

533
00:22:25,990 --> 00:22:28,760
Ruby's more like chocolate maybe okay so

534
00:22:28,760 --> 00:22:30,530
anyway you get you run your code and you

535
00:22:30,530 --> 00:22:34,429
get back some value in in Ruby here's an

536
00:22:34,429 --> 00:22:35,630
example of what some of the code might

537
00:22:35,630 --> 00:22:37,850
look like you can see we're shimming out

538
00:22:37,850 --> 00:22:40,490
the window object because we you you

539
00:22:40,490 --> 00:22:42,620
look at how the code is loaded in runs

540
00:22:42,620 --> 00:22:45,130
you basically have global loading

541
00:22:45,130 --> 00:22:47,980
and global execution that's it so it's

542
00:22:47,980 --> 00:22:49,150
very it's a lot more similar to the

543
00:22:49,150 --> 00:22:52,090
browser model than it is to the stuff we

544
00:22:52,090 --> 00:22:56,260
have on the server so shimming out the

545
00:22:56,260 --> 00:22:58,570
window creating this goofy logging

546
00:22:58,570 --> 00:23:01,060
string thing because there's no real way

547
00:23:01,060 --> 00:23:03,370
to log except log outputting that that

548
00:23:03,370 --> 00:23:05,380
log string at the end it's really sort

549
00:23:05,380 --> 00:23:08,470
of back to the late 90s where you're

550
00:23:08,470 --> 00:23:10,210
like sticking a div on the page and like

551
00:23:10,210 --> 00:23:12,250
outputting stuff to just hidden do it's

552
00:23:12,250 --> 00:23:15,940
very very similar to that right which

553
00:23:15,940 --> 00:23:19,690
brings us to the last big piece and I

554
00:23:19,690 --> 00:23:22,420
have to confess I had to make some

555
00:23:22,420 --> 00:23:25,000
serious changes to this at the end in

556
00:23:25,000 --> 00:23:26,590
the last couple of days because I was

557
00:23:26,590 --> 00:23:28,120
anticipating just sort of throwing this

558
00:23:28,120 --> 00:23:30,340
grenade out into the room and hoping

559
00:23:30,340 --> 00:23:32,880
that I could escape in the confusion

560
00:23:32,880 --> 00:23:35,200
because it's a really ugly question

561
00:23:35,200 --> 00:23:39,490
still so initially this was my gonna be

562
00:23:39,490 --> 00:23:42,210
my slide my one slide

563
00:23:42,210 --> 00:23:46,840
anybody know kind of yeah alright so

564
00:23:46,840 --> 00:23:49,840
this guy is he's obviously a Klingon

565
00:23:49,840 --> 00:23:52,900
your geeks right you should know you

566
00:23:52,900 --> 00:23:54,130
should recognize at least a Klingon

567
00:23:54,130 --> 00:23:55,990
right he's really really good at meeting

568
00:23:55,990 --> 00:23:58,090
out punishment to the appropriate

569
00:23:58,090 --> 00:24:00,250
parties right so this is sort of my go

570
00:24:00,250 --> 00:24:04,510
to internet meme for anything punishing

571
00:24:04,510 --> 00:24:06,420
that you're having an engaging and

572
00:24:06,420 --> 00:24:08,980
comprehensive multi environment

573
00:24:08,980 --> 00:24:10,480
javascript testing is really really

574
00:24:10,480 --> 00:24:13,570
punishing it's really awful it's getting

575
00:24:13,570 --> 00:24:15,940
better but it's terrible so the question

576
00:24:15,940 --> 00:24:19,360
is why what's what what's wrong first of

577
00:24:19,360 --> 00:24:22,330
all obviously j/s is historically the

578
00:24:22,330 --> 00:24:23,890
you know the thing that's given it so

579
00:24:23,890 --> 00:24:25,780
much strength is that it's closely

580
00:24:25,780 --> 00:24:27,580
connected to the browser but everyone

581
00:24:27,580 --> 00:24:29,440
thinks of javascript testing is or maybe

582
00:24:29,440 --> 00:24:31,510
less so now but traditionally it was

583
00:24:31,510 --> 00:24:33,640
very very tied to the UI and testing the

584
00:24:33,640 --> 00:24:35,320
UI is really brittle and really really

585
00:24:35,320 --> 00:24:37,180
hard to do you have tools like selenium

586
00:24:37,180 --> 00:24:38,830
or windmill that make it a little less

587
00:24:38,830 --> 00:24:41,560
horrible but it's still brittle and it's

588
00:24:41,560 --> 00:24:43,210
always integration testing and there's

589
00:24:43,210 --> 00:24:45,670
always a bunch of environmental stuff

590
00:24:45,670 --> 00:24:47,950
you have to setup to get it to work now

591
00:24:47,950 --> 00:24:49,810
of course we have lots of business logic

592
00:24:49,810 --> 00:24:52,630
API logic stuff living both in the

593
00:24:52,630 --> 00:24:54,670
browser potentially in CERN potentially

594
00:24:54,670 --> 00:24:56,980
then in the server too and then you have

595
00:24:56,980 --> 00:24:58,330
all of this code that's sort of in the

596
00:24:58,330 --> 00:24:58,809
spectrum

597
00:24:58,809 --> 00:25:00,220
between so sometimes it's a little

598
00:25:00,220 --> 00:25:03,759
difficult to tell what method of testing

599
00:25:03,759 --> 00:25:05,049
you should be applying to which pieces

600
00:25:05,049 --> 00:25:06,789
of your code so is this unit testable

601
00:25:06,789 --> 00:25:08,679
code is this something that I have to

602
00:25:08,679 --> 00:25:10,419
actually mock a bunch of stuff out to

603
00:25:10,419 --> 00:25:13,179
test if I mock all this stuff out how

604
00:25:13,179 --> 00:25:15,309
can I be how can I be sure that I'm not

605
00:25:15,309 --> 00:25:17,999
actually just testing my mocks right and

606
00:25:17,999 --> 00:25:21,100
then on top of all of that now getting

607
00:25:21,100 --> 00:25:23,649
the code into the runtime is really

608
00:25:23,649 --> 00:25:24,879
irritating in all these different

609
00:25:24,879 --> 00:25:28,570
environments because it's different so

610
00:25:28,570 --> 00:25:30,039
when I first started working at Yammer

611
00:25:30,039 --> 00:25:31,149
one of the first things I did because I

612
00:25:31,149 --> 00:25:32,169
wanted to test code and all these

613
00:25:32,169 --> 00:25:33,340
environments was I wrote this thing

614
00:25:33,340 --> 00:25:35,820
called Logan that was a test runner and

615
00:25:35,820 --> 00:25:39,789
the code to actually load I think this

616
00:25:39,789 --> 00:25:42,669
is the browser adapter I tried to make

617
00:25:42,669 --> 00:25:44,950
require work essentially as a global

618
00:25:44,950 --> 00:25:49,119
synchronous in include of the code and

619
00:25:49,119 --> 00:25:50,889
it works I mean this works but it's

620
00:25:50,889 --> 00:25:54,249
terrible you just look at that it's

621
00:25:54,249 --> 00:25:56,860
awful and you look at that and you can't

622
00:25:56,860 --> 00:25:58,299
help but think that there's got to be a

623
00:25:58,299 --> 00:26:01,059
better way to do this and unfortunately

624
00:26:01,059 --> 00:26:02,889
there are a bunch of smart people

625
00:26:02,889 --> 00:26:06,460
working on this so the other problem is

626
00:26:06,460 --> 00:26:08,289
getting people to agree on what the

627
00:26:08,289 --> 00:26:09,549
requirements are for testing because

628
00:26:09,549 --> 00:26:10,929
everybody has a different idea about

629
00:26:10,929 --> 00:26:13,360
testing which probably explains why

630
00:26:13,360 --> 00:26:16,570
there's so many testing frameworks so

631
00:26:16,570 --> 00:26:18,850
for us at least the the main

632
00:26:18,850 --> 00:26:21,519
consideration was that it had to be easy

633
00:26:21,519 --> 00:26:23,499
to run without a bunch of extra extra

634
00:26:23,499 --> 00:26:25,210
setup without a bunch of ownerís like

635
00:26:25,210 --> 00:26:27,190
setup and installation of stuff simply

636
00:26:27,190 --> 00:26:30,940
because the more impetus there is the

637
00:26:30,940 --> 00:26:32,379
harder it is to convince people to

638
00:26:32,379 --> 00:26:33,999
actually run the tests regularly right

639
00:26:33,999 --> 00:26:36,279
we also of course because of that wanted

640
00:26:36,279 --> 00:26:38,289
it to be automatable and ideally you'd

641
00:26:38,289 --> 00:26:39,730
like it to be automatable in the browser

642
00:26:39,730 --> 00:26:41,679
if you can that's a that's a nice to

643
00:26:41,679 --> 00:26:45,220
have on it it's it's nice at least to

644
00:26:45,220 --> 00:26:46,240
get it running under something like

645
00:26:46,240 --> 00:26:47,799
Rhino or node but it would it's even

646
00:26:47,799 --> 00:26:49,330
better if you can actually be automating

647
00:26:49,330 --> 00:26:52,299
it in the browsers because if you're not

648
00:26:52,299 --> 00:26:53,619
testing in the actual environments

649
00:26:53,619 --> 00:26:55,840
you're not really testing tests that say

650
00:26:55,840 --> 00:26:57,399
only run under node with continuous

651
00:26:57,399 --> 00:26:58,779
integration or it's good it's better

652
00:26:58,779 --> 00:27:00,759
than nothing but you're still not really

653
00:27:00,759 --> 00:27:05,619
testing your code right so over the last

654
00:27:05,619 --> 00:27:07,059
couple of days there been a couple of

655
00:27:07,059 --> 00:27:08,830
projects that are finished enough for me

656
00:27:08,830 --> 00:27:10,210
to start looking at and start wanting to

657
00:27:10,210 --> 00:27:12,400
do something with Bob

658
00:27:12,400 --> 00:27:14,800
Mieke sitting over there has mostly

659
00:27:14,800 --> 00:27:16,570
finished up Foo Unit it's looking really

660
00:27:16,570 --> 00:27:18,100
promising I've rewritten all the Getti

661
00:27:18,100 --> 00:27:20,980
model tests for the code that we use at

662
00:27:20,980 --> 00:27:25,150
Yammer with Foo Unit Adam Christian had

663
00:27:25,150 --> 00:27:26,680
a great presentation yesterday with

664
00:27:26,680 --> 00:27:29,170
jellyfish which is browser launching and

665
00:27:29,170 --> 00:27:31,480
code injection which is the which is

666
00:27:31,480 --> 00:27:33,760
sort of the other half of the puzzle or

667
00:27:33,760 --> 00:27:36,340
other piece of the puzzle so hopefully

668
00:27:36,340 --> 00:27:39,010
with the two of those it looks like it's

669
00:27:39,010 --> 00:27:40,870
going to be pretty easy to plug in the

670
00:27:40,870 --> 00:27:44,320
Foo unit tests the jellyfish and will

671
00:27:44,320 --> 00:27:46,960
will actually be able to move forward so

672
00:27:46,960 --> 00:27:48,610
this is an example of what a unit test

673
00:27:48,610 --> 00:27:51,070
would look like with Foo Unit and I can

674
00:27:51,070 --> 00:27:53,080
already run it in node and run in the

675
00:27:53,080 --> 00:27:56,250
browser the only thing now is actually

676
00:27:56,250 --> 00:27:58,150
plugging it into a continuous

677
00:27:58,150 --> 00:27:59,470
integration with jellyfish so I'm really

678
00:27:59,470 --> 00:28:01,080
really excited about this because it's

679
00:28:01,080 --> 00:28:04,210
so much better than what we had what

680
00:28:04,210 --> 00:28:06,840
we've been trying to trying to work with

681
00:28:06,840 --> 00:28:12,700
so sort of a wrap up I guess yeah so if

682
00:28:12,700 --> 00:28:13,840
you've been watching what's been going

683
00:28:13,840 --> 00:28:15,910
on since the early 2000s it's pretty

684
00:28:15,910 --> 00:28:17,710
obvious that the JSE genie is out of the

685
00:28:17,710 --> 00:28:20,020
bottle right there's no putting the

686
00:28:20,020 --> 00:28:21,460
toothpaste back in the tube no matter

687
00:28:21,460 --> 00:28:24,370
how much other server-side language

688
00:28:24,370 --> 00:28:27,700
people might prefer it's pretty much

689
00:28:27,700 --> 00:28:30,790
done Jas is everywhere and it's going to

690
00:28:30,790 --> 00:28:33,190
be you're gonna be seeing it in even

691
00:28:33,190 --> 00:28:35,680
more places and even more environments

692
00:28:35,680 --> 00:28:40,600
it's awesome to have this real easy to

693
00:28:40,600 --> 00:28:43,800
use fast powerful server-side JavaScript

694
00:28:43,800 --> 00:28:47,740
it's a joy to work with it's it's I

695
00:28:47,740 --> 00:28:49,450
can't even explain how happy it makes me

696
00:28:49,450 --> 00:28:51,670
to be able to to be able to use that it

697
00:28:51,670 --> 00:28:53,950
makes code reuse really possible so we

698
00:28:53,950 --> 00:28:55,870
have this version of the desktop app

699
00:28:55,870 --> 00:28:57,190
that we're shipping with all the

700
00:28:57,190 --> 00:29:00,640
JavaScript from our our web app and we

701
00:29:00,640 --> 00:29:02,440
add new features to the jet to the to

702
00:29:02,440 --> 00:29:04,300
the web app and we essentially get them

703
00:29:04,300 --> 00:29:06,460
for free in the desktop app as well it's

704
00:29:06,460 --> 00:29:09,880
great the tools are still pretty awful

705
00:29:09,880 --> 00:29:12,220
but if you remember what it was like if

706
00:29:12,220 --> 00:29:13,450
there's anyone here who remembers what

707
00:29:13,450 --> 00:29:15,130
it was like in the early 2000s or even

708
00:29:15,130 --> 00:29:16,930
the late 90s trying to build complicated

709
00:29:16,930 --> 00:29:20,470
JavaScript front ends how awful how

710
00:29:20,470 --> 00:29:22,810
terrible the tools were then I'm looking

711
00:29:22,810 --> 00:29:25,420
at what we have now we're really kind of

712
00:29:25,420 --> 00:29:26,350
spoiled I guess I could

713
00:29:26,350 --> 00:29:29,110
it's like the whole I had to do alerts

714
00:29:29,110 --> 00:29:31,870
in IE uphill both ways and I was

715
00:29:31,870 --> 00:29:34,779
grateful for it or whatever mixing my

716
00:29:34,779 --> 00:29:36,970
metaphors but they are the tools and

717
00:29:36,970 --> 00:29:40,539
testing are getting a lot better and I'm

718
00:29:40,539 --> 00:29:41,889
confident that in all these new

719
00:29:41,889 --> 00:29:42,970
environments it's going to get easier

720
00:29:42,970 --> 00:29:45,669
and easier as well it's good and it's

721
00:29:45,669 --> 00:29:48,970
yeah it's very exciting stuff so if you

722
00:29:48,970 --> 00:29:50,200
want to follow me on Twitter I talked

723
00:29:50,200 --> 00:29:52,059
about this stuff a lot I can point you

724
00:29:52,059 --> 00:29:54,429
to the appropriate developers at Yammer

725
00:29:54,429 --> 00:29:57,190
who are specialists in these different

726
00:29:57,190 --> 00:30:00,820
areas all of this information was

727
00:30:00,820 --> 00:30:02,080
compiled from a bunch of different

728
00:30:02,080 --> 00:30:04,500
people inside VM or not just not just me

729
00:30:04,500 --> 00:30:07,509
we have a brand new developer center

730
00:30:07,509 --> 00:30:10,629
thanks to michael rogers who has joined

731
00:30:10,629 --> 00:30:12,490
Yammer and has been working hard the

732
00:30:12,490 --> 00:30:15,009
past couple months on this it's very

733
00:30:15,009 --> 00:30:18,250
exciting to see that yeah I guess that's

734
00:30:18,250 --> 00:30:27,230
it unless there are questions questions

735
00:30:27,240 --> 00:30:41,240
it's a lot did you remember the baby Oh

