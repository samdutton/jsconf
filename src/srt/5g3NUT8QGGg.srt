1
00:00:14,019 --> 00:00:17,270

oops go and swap for having me again I'm

2
00:00:17,270 --> 00:00:19,610
Mike and I'm the head of our platform

3
00:00:19,610 --> 00:00:21,380
team at famous and kind of what we

4
00:00:21,380 --> 00:00:23,990
specifically work on is the rendering

5
00:00:23,990 --> 00:00:26,060
engine for our JavaScript architecture

6
00:00:26,060 --> 00:00:28,220
and one thing I wanted to talk today

7
00:00:28,220 --> 00:00:31,250
about is mixed mode and mixed mode to us

8
00:00:31,250 --> 00:00:33,320
is kind of client-side compositing for

9
00:00:33,320 --> 00:00:35,930
the web what it is exactly is it's a

10
00:00:35,930 --> 00:00:37,699
feature of our new rendering engine that

11
00:00:37,699 --> 00:00:39,739
allows for like the complete unification

12
00:00:39,739 --> 00:00:42,680
of dom and web-dl and by unification i

13
00:00:42,680 --> 00:00:45,110
mean there's a single API there's one

14
00:00:45,110 --> 00:00:47,030
coordinate space there's complete layer

15
00:00:47,030 --> 00:00:49,580
compositing and there's no user side tax

16
00:00:49,580 --> 00:00:52,670
so one API it's the idea that I move

17
00:00:52,670 --> 00:00:54,500
things around in space and all of these

18
00:00:54,500 --> 00:00:56,839
things affect both Dom and WebGL I don't

19
00:00:56,839 --> 00:00:59,390
actually have to care about these like

20
00:00:59,390 --> 00:01:01,220
how they fit into the system differently

21
00:01:01,220 --> 00:01:03,350
one coordinate space I'll get talked to

22
00:01:03,350 --> 00:01:04,760
more of it later but there's a pretty

23
00:01:04,760 --> 00:01:07,430
different sense of spacing when you do

24
00:01:07,430 --> 00:01:09,770
WebGL content person than when you do

25
00:01:09,770 --> 00:01:12,680
dham content compositing what i mean by

26
00:01:12,680 --> 00:01:14,540
compositing is if you take a like a

27
00:01:14,540 --> 00:01:16,640
three-dimensional scene so my hand here

28
00:01:16,640 --> 00:01:18,560
in my hand here what it does is

29
00:01:18,560 --> 00:01:20,600
compositing is the way to understand

30
00:01:20,600 --> 00:01:21,950
where things are in three-dimensional

31
00:01:21,950 --> 00:01:24,259
space where the camera is and flatten

32
00:01:24,259 --> 00:01:26,390
them into such a way that it looks

33
00:01:26,390 --> 00:01:29,030
correct as projected onto the screen and

34
00:01:29,030 --> 00:01:30,619
we want to abstract all of this away

35
00:01:30,619 --> 00:01:33,409
from the user to have to deal with it so

36
00:01:33,409 --> 00:01:35,270
again this is kind of what compositing

37
00:01:35,270 --> 00:01:37,939
is so the question is why would anybody

38
00:01:37,939 --> 00:01:39,920
even want this is this a feature that no

39
00:01:39,920 --> 00:01:42,499
one really wants is what what is the

40
00:01:42,499 --> 00:01:43,819
point of trying to merge these two

41
00:01:43,819 --> 00:01:47,359
things and to me it's because the web is

42
00:01:47,359 --> 00:01:49,670
becoming a lot less about pages and it's

43
00:01:49,670 --> 00:01:51,859
becoming a lot more about full

44
00:01:51,859 --> 00:01:54,109
experiences and applications things were

45
00:01:54,109 --> 00:01:56,950
it's not a big piece of paper scrolling

46
00:01:56,950 --> 00:02:00,469
that said there are a ton of use cases

47
00:02:00,469 --> 00:02:02,689
where that is the best way for your sort

48
00:02:02,689 --> 00:02:05,030
of the medium that you're in the content

49
00:02:05,030 --> 00:02:07,009
that you're trying to show so if you

50
00:02:07,009 --> 00:02:08,600
look at something like reddit reddit is

51
00:02:08,600 --> 00:02:10,069
the perfect example of something that

52
00:02:10,069 --> 00:02:12,590
needs to be in a document you have all

53
00:02:12,590 --> 00:02:14,150
these news stories that are listed one

54
00:02:14,150 --> 00:02:16,280
by one by one and you can scroll through

55
00:02:16,280 --> 00:02:18,590
them it's really easy it really simple

56
00:02:18,590 --> 00:02:20,210
and people want to view this kind of

57
00:02:20,210 --> 00:02:22,640
content and list form similarly a lot of

58
00:02:22,640 --> 00:02:25,190
other news outlets like BBC have

59
00:02:25,190 --> 00:02:27,780
pages where it makes a lot of sense for

60
00:02:27,780 --> 00:02:30,180
them to just list everything vertically

61
00:02:30,180 --> 00:02:31,830
and have users scroll through it's like

62
00:02:31,830 --> 00:02:33,690
a really common interface and it makes

63
00:02:33,690 --> 00:02:35,190
sense there's no teaching the user how

64
00:02:35,190 --> 00:02:38,430
to do something similarly ESPN you know

65
00:02:38,430 --> 00:02:40,140
they love the bar at the top and

66
00:02:40,140 --> 00:02:41,940
navigation but then the bulk of the

67
00:02:41,940 --> 00:02:45,630
content is in the document so what are

68
00:02:45,630 --> 00:02:46,920
the benefits of this one it's been

69
00:02:46,920 --> 00:02:48,630
familiar for users users know how to

70
00:02:48,630 --> 00:02:51,360
navigate this kind of application it's

71
00:02:51,360 --> 00:02:53,160
familiar for developers there's like no

72
00:02:53,160 --> 00:02:54,690
tricks this stuff has been around for

73
00:02:54,690 --> 00:02:57,540
years and years and years and browsers

74
00:02:57,540 --> 00:02:59,400
have were actually literally designed

75
00:02:59,400 --> 00:03:01,320
for this particular purpose there's a

76
00:03:01,320 --> 00:03:02,700
reason it's called the document object

77
00:03:02,700 --> 00:03:05,280
model it's the idea that all of our CSS

78
00:03:05,280 --> 00:03:06,959
all the way we do stuff is based around

79
00:03:06,959 --> 00:03:09,209
the idea of positioning a document on

80
00:03:09,209 --> 00:03:11,310
the screen it's compatible it will run

81
00:03:11,310 --> 00:03:12,720
everywhere these things are super super

82
00:03:12,720 --> 00:03:15,480
old and one of the big benefits for me

83
00:03:15,480 --> 00:03:17,640
to is easy navigation so like this is a

84
00:03:17,640 --> 00:03:19,920
little picture I drew of me on the couch

85
00:03:19,920 --> 00:03:22,830
browsing reddit like I have my laptop in

86
00:03:22,830 --> 00:03:25,170
my lap I scroll with my two fingers and

87
00:03:25,170 --> 00:03:26,730
I don't want to have to like navigate

88
00:03:26,730 --> 00:03:28,890
this big space I want like a little bit

89
00:03:28,890 --> 00:03:30,690
of scrolling to get me everywhere I need

90
00:03:30,690 --> 00:03:33,299
to be into my application but this is

91
00:03:33,299 --> 00:03:35,340
also not the best use case for a lot of

92
00:03:35,340 --> 00:03:37,620
things so if you go to like the website

93
00:03:37,620 --> 00:03:39,209
for the movie Birdman they have this

94
00:03:39,209 --> 00:03:41,310
really nice art cinematic with like

95
00:03:41,310 --> 00:03:43,500
meteors falling down different

96
00:03:43,500 --> 00:03:45,030
typography when you type in these all

97
00:03:45,030 --> 00:03:47,640
pop and it's all written in WebGL and

98
00:03:47,640 --> 00:03:48,660
then there's a lot of things like these

99
00:03:48,660 --> 00:03:51,150
chrome experiments out there where this

100
00:03:51,150 --> 00:03:52,799
particular demo what they did is they

101
00:03:52,799 --> 00:03:54,810
have a they have a globe and the globe

102
00:03:54,810 --> 00:03:56,400
is completely mapped to be like

103
00:03:56,400 --> 00:03:58,170
correctly sized and it shows the

104
00:03:58,170 --> 00:03:59,730
different arms trades between nations so

105
00:03:59,730 --> 00:04:01,739
you can say art what is that if like how

106
00:04:01,739 --> 00:04:04,350
many guns and ammunition go between the

107
00:04:04,350 --> 00:04:06,720
United States and Canada and you can see

108
00:04:06,720 --> 00:04:08,220
the lines and where they're coming from

109
00:04:08,220 --> 00:04:10,799
the depth and that's something that only

110
00:04:10,799 --> 00:04:12,720
really really makes sense when it's not

111
00:04:12,720 --> 00:04:14,700
in the document form it gives it a lot

112
00:04:14,700 --> 00:04:16,979
more expression because you're able to

113
00:04:16,979 --> 00:04:18,209
use three-dimensional space to your

114
00:04:18,209 --> 00:04:22,049
advantage similarly there's this one

115
00:04:22,049 --> 00:04:23,940
really cool chrome experiment that is

116
00:04:23,940 --> 00:04:26,790
the galaxy and it's you literally pick a

117
00:04:26,790 --> 00:04:28,260
star and you zoom into the star and you

118
00:04:28,260 --> 00:04:29,550
get to see all the properties about it

119
00:04:29,550 --> 00:04:31,800
and this only makes sense because

120
00:04:31,800 --> 00:04:33,810
spatially we want to be able to see the

121
00:04:33,810 --> 00:04:36,479
galaxy in terms of like proportions as

122
00:04:36,479 --> 00:04:37,860
to where they are relative to each other

123
00:04:37,860 --> 00:04:39,330
so you know there is

124
00:04:39,330 --> 00:04:41,780
legend that says you know 10 pixels is

125
00:04:41,780 --> 00:04:44,250
one light year away or something like

126
00:04:44,250 --> 00:04:47,250
that that can accurately describe what

127
00:04:47,250 --> 00:04:49,139
the galaxy is and again something like

128
00:04:49,139 --> 00:04:51,000
this does not make sense to be used in a

129
00:04:51,000 --> 00:04:53,610
document so what are the benefits of

130
00:04:53,610 --> 00:04:55,979
heavy WebGL use one it's beautiful and

131
00:04:55,979 --> 00:04:58,949
inspiring you get much much better

132
00:04:58,949 --> 00:05:01,169
performance than you do with the Dom you

133
00:05:01,169 --> 00:05:03,060
get shapes the DOM is really really good

134
00:05:03,060 --> 00:05:05,099
four rectangles and that's about it but

135
00:05:05,099 --> 00:05:07,979
you can do Torres's you can do pyramids

136
00:05:07,979 --> 00:05:09,330
you can do triangles you can do any kind

137
00:05:09,330 --> 00:05:11,370
of shape and you can do arbitrary 3d

138
00:05:11,370 --> 00:05:13,620
models also so I can import like a coke

139
00:05:13,620 --> 00:05:16,740
bottle or you know an elephant obj for a

140
00:05:16,740 --> 00:05:18,389
game or something and now I have the

141
00:05:18,389 --> 00:05:19,800
ability to create content on the web

142
00:05:19,800 --> 00:05:22,259
that's not just panels on a screen that

143
00:05:22,259 --> 00:05:26,669
are moving up and down so the real thing

144
00:05:26,669 --> 00:05:29,400
is that you saw a few examples that use

145
00:05:29,400 --> 00:05:31,020
the document to their advantage and you

146
00:05:31,020 --> 00:05:33,000
saw a few things that used WebGL really

147
00:05:33,000 --> 00:05:34,919
heavily to their advantage and the idea

148
00:05:34,919 --> 00:05:36,449
is you want to use the best technology

149
00:05:36,449 --> 00:05:38,460
that represents your content so if you

150
00:05:38,460 --> 00:05:39,750
have content that makes sense in the

151
00:05:39,750 --> 00:05:41,990
document that's fine but there's also

152
00:05:41,990 --> 00:05:44,279
content that's better represented in a

153
00:05:44,279 --> 00:05:48,930
non document format but the one thing is

154
00:05:48,930 --> 00:05:50,789
that it's not just use WebGL for like

155
00:05:50,789 --> 00:05:53,400
super high like experimental stuff and

156
00:05:53,400 --> 00:05:55,740
artwork and use Dom for documents the

157
00:05:55,740 --> 00:05:58,020
Dom can work in a 3d environment it's

158
00:05:58,020 --> 00:06:00,029
more than just an overlay if you looked

159
00:06:00,029 --> 00:06:01,650
at like the prior examples with all the

160
00:06:01,650 --> 00:06:03,240
chrome experiments there was DOM and

161
00:06:03,240 --> 00:06:05,310
there was WebGL in all of those scenes

162
00:06:05,310 --> 00:06:07,979
but the Dom was only ever used as an

163
00:06:07,979 --> 00:06:10,889
overlay that fits in front of the WebGL

164
00:06:10,889 --> 00:06:12,779
there was never any layering between the

165
00:06:12,779 --> 00:06:16,830
two and and it the DOM is capable of a

166
00:06:16,830 --> 00:06:17,969
lot more than that so here are some

167
00:06:17,969 --> 00:06:21,240
examples to help show like kind of what

168
00:06:21,240 --> 00:06:23,099
the upper limits for what the Dom can do

169
00:06:23,099 --> 00:06:24,569
in terms of just like performance so

170
00:06:24,569 --> 00:06:26,159
here's an example somebody on our

171
00:06:26,159 --> 00:06:28,930
creative team made of an ad

172
00:06:28,930 --> 00:06:40,959
and this is all done

173
00:06:40,969 --> 00:07:35,189
you

174
00:07:35,199 --> 00:07:38,000
so one more example of just something

175
00:07:38,000 --> 00:07:40,430
that groups yeah that can be done in the

176
00:07:40,430 --> 00:07:41,750
dawn this is my personal website just

177
00:07:41,750 --> 00:07:43,040
something I had to test some stuff but

178
00:07:43,040 --> 00:07:45,020
this is all dumb and you get the ability

179
00:07:45,020 --> 00:07:48,080
to manipulate space and work in three

180
00:07:48,080 --> 00:07:52,550
dimensions just by using DOM and so now

181
00:07:52,550 --> 00:07:53,750
the question is like well this looks

182
00:07:53,750 --> 00:07:55,790
really good but it still comes short in

183
00:07:55,790 --> 00:07:57,590
a lot of ways Dom you're going to hit

184
00:07:57,590 --> 00:07:59,479
performance issues as soon as you hit a

185
00:07:59,479 --> 00:08:01,070
large number of elements on your screen

186
00:08:01,070 --> 00:08:03,860
the browser does not handle it's not

187
00:08:03,860 --> 00:08:06,320
designed for the case of you know

188
00:08:06,320 --> 00:08:08,030
thousands of moving dudes on the screen

189
00:08:08,030 --> 00:08:11,120
all at once also the Dom does not make

190
00:08:11,120 --> 00:08:13,729
really good their browsers don't make

191
00:08:13,729 --> 00:08:15,889
really good use of the ability to change

192
00:08:15,889 --> 00:08:17,870
color frequently when you change color

193
00:08:17,870 --> 00:08:19,400
you're causing repaints over your entire

194
00:08:19,400 --> 00:08:21,979
screen and then you can't do certain

195
00:08:21,979 --> 00:08:23,360
types of blurs you can't do post

196
00:08:23,360 --> 00:08:25,190
processing all these like types of

197
00:08:25,190 --> 00:08:26,570
effects that you see in games and you

198
00:08:26,570 --> 00:08:28,160
see in other forms of medium are kind of

199
00:08:28,160 --> 00:08:31,220
not at your disposal also you can't do

200
00:08:31,220 --> 00:08:32,990
shapes you have squares and you have

201
00:08:32,990 --> 00:08:36,050
circles you can do CSS arrows and you do

202
00:08:36,050 --> 00:08:37,640
stuff like that but that's you know more

203
00:08:37,640 --> 00:08:39,229
of a hack than anything else but you're

204
00:08:39,229 --> 00:08:41,029
really really limited to the amount of

205
00:08:41,029 --> 00:08:42,979
like different shapes and primitives you

206
00:08:42,979 --> 00:08:44,720
have and even just the level of detail

207
00:08:44,720 --> 00:08:46,550
you know I could have a square here that

208
00:08:46,550 --> 00:08:48,500
has some gradient on it but I can't make

209
00:08:48,500 --> 00:08:50,450
a gradient that reacts over time based

210
00:08:50,450 --> 00:08:51,890
on when I click it and that's something

211
00:08:51,890 --> 00:08:55,580
that WebGL does give you so again one of

212
00:08:55,580 --> 00:08:57,410
these flaws exists it's because the time

213
00:08:57,410 --> 00:08:59,450
Dom was not designed to do this browsers

214
00:08:59,450 --> 00:09:01,339
are optimized for scrolling pages of

215
00:09:01,339 --> 00:09:03,290
content they make a lot of consolations

216
00:09:03,290 --> 00:09:05,270
so that when you scroll a webpage up and

217
00:09:05,270 --> 00:09:06,860
down that image in that video looks

218
00:09:06,860 --> 00:09:09,440
really really crisp and because of that

219
00:09:09,440 --> 00:09:14,420
you because of the ability for them to

220
00:09:14,420 --> 00:09:16,580
scroll up and down like make that really

221
00:09:16,580 --> 00:09:18,170
really performant they take you take

222
00:09:18,170 --> 00:09:19,850
hits elsewhere and again this is kind of

223
00:09:19,850 --> 00:09:21,290
like the roots are in newspaper style

224
00:09:21,290 --> 00:09:23,720
Dom information so where's the Dom

225
00:09:23,720 --> 00:09:26,540
better than WebGL so what we want to do

226
00:09:26,540 --> 00:09:28,190
is we want to be able to the best of

227
00:09:28,190 --> 00:09:30,080
both of these rendering targets and use

228
00:09:30,080 --> 00:09:32,209
them into a single API so what is the

229
00:09:32,209 --> 00:09:33,980
Dom really good for the DOM is really

230
00:09:33,980 --> 00:09:37,670
good for CSS CSS is like iterating very

231
00:09:37,670 --> 00:09:38,990
fast they're getting a lot of new stuff

232
00:09:38,990 --> 00:09:42,230
and you can style really really nice

233
00:09:42,230 --> 00:09:43,940
looking down with it it's got a built-in

234
00:09:43,940 --> 00:09:45,800
a venting system it's really good for

235
00:09:45,800 --> 00:09:46,700
search engine optimization

236
00:09:46,700 --> 00:09:48,680
asian it's compatible it's everywhere

237
00:09:48,680 --> 00:09:50,930
you can have forms links and there are

238
00:09:50,930 --> 00:09:53,570
standards that get try to get followed

239
00:09:53,570 --> 00:09:55,850
and what is web geo lab WebGL is

240
00:09:55,850 --> 00:09:57,560
performance gains color changes

241
00:09:57,560 --> 00:09:59,510
different types of shapes like I was

242
00:09:59,510 --> 00:10:01,280
mentioning before 3d models it's more

243
00:10:01,280 --> 00:10:03,440
expressive and something that's also

244
00:10:03,440 --> 00:10:05,240
nice is that it's more familiar for

245
00:10:05,240 --> 00:10:07,100
graphics people there that are not

246
00:10:07,100 --> 00:10:10,700
involved in the web currently so this

247
00:10:10,700 --> 00:10:12,350
sounds good let's think about what we

248
00:10:12,350 --> 00:10:15,590
want to do to like make a mixed-mode you

249
00:10:15,590 --> 00:10:17,270
know rendering system and like what the

250
00:10:17,270 --> 00:10:19,310
requirements of this would be so the

251
00:10:19,310 --> 00:10:20,840
first thing is we need one API to roll

252
00:10:20,840 --> 00:10:22,760
them all we need the exact same

253
00:10:22,760 --> 00:10:24,620
coordinate space so 20 pixels to the

254
00:10:24,620 --> 00:10:26,740
right means 20 pixels to the right and

255
00:10:26,740 --> 00:10:29,180
we need proper layering which means we

256
00:10:29,180 --> 00:10:30,830
need to have Dom be able to be in front

257
00:10:30,830 --> 00:10:33,050
of GL and WebGL to be and be able to be

258
00:10:33,050 --> 00:10:36,260
in front of the DOM and this again needs

259
00:10:36,260 --> 00:10:37,670
to be abstracted completely away from

260
00:10:37,670 --> 00:10:40,610
the user so step one let's create a

261
00:10:40,610 --> 00:10:44,330
single API for the Dom so what we want

262
00:10:44,330 --> 00:10:45,770
to do is because we want to make use of

263
00:10:45,770 --> 00:10:47,780
three dimensional space and kind of work

264
00:10:47,780 --> 00:10:50,870
the way you know WebGL kind of works the

265
00:10:50,870 --> 00:10:52,640
document object model is not the way we

266
00:10:52,640 --> 00:10:53,990
want to do layout we want to position

267
00:10:53,990 --> 00:10:55,790
everything in terms of three dimensions

268
00:10:55,790 --> 00:10:57,770
and the abstraction we use for this is

269
00:10:57,770 --> 00:10:59,110
something called a scene graph and

270
00:10:59,110 --> 00:11:01,820
basically it's a mutable graph of nodes

271
00:11:01,820 --> 00:11:04,490
where your parent tells you hierarchical

272
00:11:04,490 --> 00:11:06,440
information about where you are in the

273
00:11:06,440 --> 00:11:08,420
scene so if I'm a child of a parent node

274
00:11:08,420 --> 00:11:10,250
and my parent gets translated to the

275
00:11:10,250 --> 00:11:12,530
right 20 pixels I am also translated to

276
00:11:12,530 --> 00:11:16,340
the right 20 pixels so that begs the

277
00:11:16,340 --> 00:11:17,780
question what other type of information

278
00:11:17,780 --> 00:11:20,350
is hierarchical like what is

279
00:11:20,350 --> 00:11:22,940
preferentially treated in our system so

280
00:11:22,940 --> 00:11:26,390
that we can get this motion between you

281
00:11:26,390 --> 00:11:28,370
know Dom and WebGL synced so we have

282
00:11:28,370 --> 00:11:29,840
transformed so that's translation

283
00:11:29,840 --> 00:11:34,580
rotation scale their size so i can set

284
00:11:34,580 --> 00:11:36,740
size in terms of pixels i could say i'm

285
00:11:36,740 --> 00:11:39,410
50 by 50 by 50 box or i can say all

286
00:11:39,410 --> 00:11:42,650
right i'm 50 by 50 but my depth is half

287
00:11:42,650 --> 00:11:44,930
of my parents depth and then also

288
00:11:44,930 --> 00:11:46,670
opacity we want to passively chained

289
00:11:46,670 --> 00:11:48,590
down so if my parent get soap acetate

290
00:11:48,590 --> 00:11:51,650
addai also need to be a basset ated so

291
00:11:51,650 --> 00:11:54,230
because of this information we kind of

292
00:11:54,230 --> 00:11:56,270
have everything we need to define where

293
00:11:56,270 --> 00:11:57,620
something is in three-dimensional space

294
00:11:57,620 --> 00:11:58,579
and that

295
00:11:58,579 --> 00:12:01,069
kind of the key to everything is just by

296
00:12:01,069 --> 00:12:03,379
having these three properties on every

297
00:12:03,379 --> 00:12:05,329
note in the scene we can define where

298
00:12:05,329 --> 00:12:07,129
something is in space and that's kind of

299
00:12:07,129 --> 00:12:09,619
the crux of the API is that you are

300
00:12:09,619 --> 00:12:13,129
taking these you know if if a point if a

301
00:12:13,129 --> 00:12:14,509
node has a point in space that

302
00:12:14,509 --> 00:12:16,399
determines where it is and it has the

303
00:12:16,399 --> 00:12:18,499
size so that gives it pretty much a cube

304
00:12:18,499 --> 00:12:20,119
you're essentially positioning these

305
00:12:20,119 --> 00:12:22,129
cubes in space to make your application

306
00:12:22,129 --> 00:12:24,799
and the only thing left to do from that

307
00:12:24,799 --> 00:12:28,730
point is we need to add the ability to

308
00:12:28,730 --> 00:12:31,489
draw so the idea is that we have these

309
00:12:31,489 --> 00:12:33,290
renderable components that attach onto

310
00:12:33,290 --> 00:12:36,499
nodes and again nodes are defined as a

311
00:12:36,499 --> 00:12:38,689
point in space a cube so if we just give

312
00:12:38,689 --> 00:12:40,519
the node the ability to understand how

313
00:12:40,519 --> 00:12:42,319
to draw or send information on how to

314
00:12:42,319 --> 00:12:45,470
draw then we're kind of all set so if we

315
00:12:45,470 --> 00:12:47,019
take a look at this example right here

316
00:12:47,019 --> 00:12:49,220
you can see like the first line we're

317
00:12:49,220 --> 00:12:50,420
going to create our scene and we're

318
00:12:50,420 --> 00:12:52,399
going to add a brand new node and then

319
00:12:52,399 --> 00:12:53,480
the next few lines we're going to

320
00:12:53,480 --> 00:12:54,739
position the node we're going to say all

321
00:12:54,739 --> 00:12:57,049
right you're 250 pixels by 250 pixels by

322
00:12:57,049 --> 00:12:59,029
250 pixels we're going to move you to

323
00:12:59,029 --> 00:13:00,829
the center of your parent your center is

324
00:13:00,829 --> 00:13:02,689
going to be at that point and your

325
00:13:02,689 --> 00:13:04,429
origin for your rotations is going to be

326
00:13:04,429 --> 00:13:08,119
your Center so and then we also attach a

327
00:13:08,119 --> 00:13:09,319
component that's responsible for

328
00:13:09,319 --> 00:13:11,480
rotating the thing around the y-axis as

329
00:13:11,480 --> 00:13:13,790
time moves on so this is all the code to

330
00:13:13,790 --> 00:13:15,769
set up this like fictitious cube in

331
00:13:15,769 --> 00:13:18,019
space rotating and that's all we need to

332
00:13:18,019 --> 00:13:19,819
do and now from here what we can do is

333
00:13:19,819 --> 00:13:21,649
we can attach components to these nodes

334
00:13:21,649 --> 00:13:24,649
to give them the ability to draw so here

335
00:13:24,649 --> 00:13:26,660
we have this node that's spinning this

336
00:13:26,660 --> 00:13:28,100
like invisible node spinning in space

337
00:13:28,100 --> 00:13:29,209
and we're going to say all right I'm

338
00:13:29,209 --> 00:13:30,799
going to add a Dom element to it and

339
00:13:30,799 --> 00:13:32,179
it's going to have a background color of

340
00:13:32,179 --> 00:13:34,459
red and I'm going to add a mesh to it

341
00:13:34,459 --> 00:13:36,319
and the meshes geometry is going to be a

342
00:13:36,319 --> 00:13:38,720
sphere so what this ends up looking like

343
00:13:38,720 --> 00:13:42,319
is exactly kind of what we would think

344
00:13:42,319 --> 00:13:43,999
you know we have a single node that's

345
00:13:43,999 --> 00:13:45,919
spinning and on this thing is both WebGL

346
00:13:45,919 --> 00:13:48,829
content and Dom content I'll get to more

347
00:13:48,829 --> 00:13:50,360
about kind of the coordinate space and

348
00:13:50,360 --> 00:13:51,619
while the layering is working later on

349
00:13:51,619 --> 00:13:53,689
but you can see that like this API

350
00:13:53,689 --> 00:13:55,309
really abstract sawey the idea of

351
00:13:55,309 --> 00:13:58,189
positioning content from the actual

352
00:13:58,189 --> 00:14:01,160
drawing of the content so the next thing

353
00:14:01,160 --> 00:14:03,230
we need to reconcile is the differences

354
00:14:03,230 --> 00:14:04,910
in coordinate systems and unfortunately

355
00:14:04,910 --> 00:14:07,730
there's a lot of differences so for the

356
00:14:07,730 --> 00:14:09,649
Dom the origin of the DOM is the top

357
00:14:09,649 --> 00:14:11,610
left of your screen and it's the

358
00:14:11,610 --> 00:14:12,950
with in height of the screen and pixels

359
00:14:12,950 --> 00:14:16,350
and the transform origin of all of these

360
00:14:16,350 --> 00:14:18,750
on elements is the top left so that's

361
00:14:18,750 --> 00:14:20,070
why when you put something out identity

362
00:14:20,070 --> 00:14:22,350
you know it's up in the top left corner

363
00:14:22,350 --> 00:14:24,870
its top left corner is up there also for

364
00:14:24,870 --> 00:14:27,600
WebGL is very different the outer bounds

365
00:14:27,600 --> 00:14:28,860
of the screen are negative one to one

366
00:14:28,860 --> 00:14:30,149
and with and negative one to one in

367
00:14:30,149 --> 00:14:31,890
height and when I throw something in at

368
00:14:31,890 --> 00:14:34,500
the origin and WebGL the center of that

369
00:14:34,500 --> 00:14:36,990
object is on the center of the screen so

370
00:14:36,990 --> 00:14:38,880
what we need to do is we need to have

371
00:14:38,880 --> 00:14:41,070
the ability to treat these to see like

372
00:14:41,070 --> 00:14:44,760
systems the exact same way so for

373
00:14:44,760 --> 00:14:46,380
example kind of make sense if I have a

374
00:14:46,380 --> 00:14:49,529
screen that's for 1400 x 900 and we're

375
00:14:49,529 --> 00:14:50,940
going to take 100 100 square to the

376
00:14:50,940 --> 00:14:53,130
right and throw it 50 units down and 100

377
00:14:53,130 --> 00:14:55,740
units right the Dom in the web dl are

378
00:14:55,740 --> 00:14:59,070
going to be miles apart so how do we

379
00:14:59,070 --> 00:15:01,589
reconcile this the first thing we need

380
00:15:01,589 --> 00:15:04,260
to decide is what we decided to do is

381
00:15:04,260 --> 00:15:06,269
like what do we want the API in do we

382
00:15:06,269 --> 00:15:07,829
want the EPI to be in this clip space

383
00:15:07,829 --> 00:15:10,560
this negative 1 to 1 this around there

384
00:15:10,560 --> 00:15:12,269
or do we want it to be based in pixels

385
00:15:12,269 --> 00:15:15,149
and we decided to go with pixels for a

386
00:15:15,149 --> 00:15:18,060
few reasons one developers know it it's

387
00:15:18,060 --> 00:15:21,029
easy and the real reason is that it

388
00:15:21,029 --> 00:15:23,370
makes 2d layout so much easier when

389
00:15:23,370 --> 00:15:26,160
you're using negative 1 to 1 it's really

390
00:15:26,160 --> 00:15:27,480
designed for like three dimensional

391
00:15:27,480 --> 00:15:28,949
environments and it's not designed for

392
00:15:28,949 --> 00:15:30,240
something that you need pixel perfect

393
00:15:30,240 --> 00:15:33,149
design for on you know on different

394
00:15:33,149 --> 00:15:35,670
sized devices and whatever so we went

395
00:15:35,670 --> 00:15:37,529
with you know the origin is going to be

396
00:15:37,529 --> 00:15:39,029
up in the top left corner and our entire

397
00:15:39,029 --> 00:15:42,660
API is going to be in pixels so do it

398
00:15:42,660 --> 00:15:44,730
all in pixels and then we convert it for

399
00:15:44,730 --> 00:15:46,949
you so the idea is that you can treat

400
00:15:46,949 --> 00:15:48,269
your application and write it all in

401
00:15:48,269 --> 00:15:50,490
pixels in even though WebGL doesn't want

402
00:15:50,490 --> 00:15:52,500
that kind of information the rendering

403
00:15:52,500 --> 00:15:53,910
part that you don't even deal with can

404
00:15:53,910 --> 00:15:56,640
do the conversions for you so what we

405
00:15:56,640 --> 00:15:58,290
have is we've broken up the system into

406
00:15:58,290 --> 00:15:59,910
two parts there's the application part

407
00:15:59,910 --> 00:16:01,199
and there's the render so the

408
00:16:01,199 --> 00:16:02,640
application part does all your business

409
00:16:02,640 --> 00:16:05,070
logic your layout logic it has the nodes

410
00:16:05,070 --> 00:16:06,720
it has all your renderable components

411
00:16:06,720 --> 00:16:07,949
kind of the code you guys saw earlier

412
00:16:07,949 --> 00:16:10,110
and then there's the render and what the

413
00:16:10,110 --> 00:16:12,120
renderer does is it takes draw commands

414
00:16:12,120 --> 00:16:13,860
that are generated by the nodes and the

415
00:16:13,860 --> 00:16:15,779
components of the note and it turns them

416
00:16:15,779 --> 00:16:17,279
into the actual pixels that get drawn

417
00:16:17,279 --> 00:16:20,550
onto the screen so this is kind of like

418
00:16:20,550 --> 00:16:23,660
a simple diagram of our architecture

419
00:16:23,660 --> 00:16:25,500
basically what happens is we

420
00:16:25,500 --> 00:16:26,970
our render loop which in most cases

421
00:16:26,970 --> 00:16:28,950
something like requestanimationframe and

422
00:16:28,950 --> 00:16:32,070
we pass like a frame into here the frame

423
00:16:32,070 --> 00:16:33,390
lots of the famous engine know that it

424
00:16:33,390 --> 00:16:35,400
needs to update a bunch of stuff update

425
00:16:35,400 --> 00:16:36,810
this clock and tells the scenes to

426
00:16:36,810 --> 00:16:38,550
update what the scenes now do is the

427
00:16:38,550 --> 00:16:40,110
scenes go through and they say okay did

428
00:16:40,110 --> 00:16:42,330
anything change for me do I am i red

429
00:16:42,330 --> 00:16:44,340
instead of blue did I get translated at

430
00:16:44,340 --> 00:16:45,990
all and it goes through all the nodes in

431
00:16:45,990 --> 00:16:47,640
the scene and anybody that has diffs

432
00:16:47,640 --> 00:16:49,110
that they need to push sends all the

433
00:16:49,110 --> 00:16:51,240
draw commands back over so all of this

434
00:16:51,240 --> 00:16:52,590
draw command information goes back

435
00:16:52,590 --> 00:16:54,870
through the compositor and from the

436
00:16:54,870 --> 00:16:56,340
compositor the compositor can decide

437
00:16:56,340 --> 00:16:58,170
okay this is information that the Dom

438
00:16:58,170 --> 00:16:59,850
render needs to know about or the WebGL

439
00:16:59,850 --> 00:17:01,260
render needs to know about or something

440
00:17:01,260 --> 00:17:03,860
that they both need to know about so

441
00:17:03,860 --> 00:17:06,949
from here we can do all of our stuff in

442
00:17:06,949 --> 00:17:09,720
like in pixel space and then when it

443
00:17:09,720 --> 00:17:11,670
gets down to the WebGL render the WebGL

444
00:17:11,670 --> 00:17:12,810
renders can be the one that's

445
00:17:12,810 --> 00:17:14,730
responsible for saying okay I know what

446
00:17:14,730 --> 00:17:16,319
to do with this the screen is this big

447
00:17:16,319 --> 00:17:18,839
and my transform is this so therefore I

448
00:17:18,839 --> 00:17:22,290
can handle this for them so again if we

449
00:17:22,290 --> 00:17:24,780
consider the world transform and size in

450
00:17:24,780 --> 00:17:26,339
pixels and by world transform I mean

451
00:17:26,339 --> 00:17:29,130
like physical place in reality like

452
00:17:29,130 --> 00:17:31,410
regardless of camera regardless of thing

453
00:17:31,410 --> 00:17:33,060
if we're trying to think of our

454
00:17:33,060 --> 00:17:34,470
applications as three-dimensional seems

455
00:17:34,470 --> 00:17:36,720
like where they are in space and again

456
00:17:36,720 --> 00:17:38,190
it's the renders job to make the medium

457
00:17:38,190 --> 00:17:40,980
specific investments so the Dom does

458
00:17:40,980 --> 00:17:42,390
have to make some adjustments to because

459
00:17:42,390 --> 00:17:43,890
we have Dom nesting now which is really

460
00:17:43,890 --> 00:17:45,980
great you can use CSS and you can use

461
00:17:45,980 --> 00:17:49,980
you know the bubbling that Dom Nesta Dom

462
00:17:49,980 --> 00:17:51,810
gives you for free but basically the

463
00:17:51,810 --> 00:17:53,250
idea is we need to account for the

464
00:17:53,250 --> 00:17:55,500
parents transform if in world space I'm

465
00:17:55,500 --> 00:17:58,410
500 pixels to the right and my parent is

466
00:17:58,410 --> 00:18:01,080
also a Dom element and he in world space

467
00:18:01,080 --> 00:18:04,050
he's 400 pixels to the right my one that

468
00:18:04,050 --> 00:18:05,460
I right to the Dom only needs to be 100

469
00:18:05,460 --> 00:18:07,470
because my parents already taken care of

470
00:18:07,470 --> 00:18:10,230
400 for me WebGL needs to make very

471
00:18:10,230 --> 00:18:12,030
similar adjustments they need to convert

472
00:18:12,030 --> 00:18:13,590
the size to clip space on negative one

473
00:18:13,590 --> 00:18:15,000
to one they need to convert the

474
00:18:15,000 --> 00:18:18,300
transforms to clip space- 101 or yet

475
00:18:18,300 --> 00:18:19,560
negative one to one and then also

476
00:18:19,560 --> 00:18:21,660
account for the move of the top-left org

477
00:18:21,660 --> 00:18:23,400
from the middle to the top left of the

478
00:18:23,400 --> 00:18:28,200
screen so the third step in this is the

479
00:18:28,200 --> 00:18:29,760
proper layer composition and this is

480
00:18:29,760 --> 00:18:32,250
kind of like the biggest part of kind of

481
00:18:32,250 --> 00:18:35,429
what we do so the thing is that we have

482
00:18:35,429 --> 00:18:37,290
two elements that we control pretty much

483
00:18:37,290 --> 00:18:39,179
so you put you know a little famous

484
00:18:39,179 --> 00:18:39,450
apple

485
00:18:39,450 --> 00:18:41,250
asian somewhere and we have a canvas

486
00:18:41,250 --> 00:18:43,110
where we put all of our GL content and

487
00:18:43,110 --> 00:18:44,460
we have a div where we put all of our

488
00:18:44,460 --> 00:18:47,309
Dom content so how do we get it so that

489
00:18:47,309 --> 00:18:49,860
Dom can both be in front and in back of

490
00:18:49,860 --> 00:18:52,230
the WebGL it seems like it can be

491
00:18:52,230 --> 00:18:54,899
possible so the big trick is that we

492
00:18:54,899 --> 00:18:56,669
always have our canvas in front of our

493
00:18:56,669 --> 00:18:58,789
web or in front of our Dom content and

494
00:18:58,789 --> 00:19:00,779
because we're doing everything in terms

495
00:19:00,779 --> 00:19:02,760
of world space we know where every Dom

496
00:19:02,760 --> 00:19:04,950
element is and we can tell the WebGL

497
00:19:04,950 --> 00:19:07,080
render to add a completely transparent

498
00:19:07,080 --> 00:19:09,779
Dom L or plane to the scene at the exact

499
00:19:09,779 --> 00:19:12,090
same location as the Dom element so what

500
00:19:12,090 --> 00:19:14,610
this does is this pretty much creates an

501
00:19:14,610 --> 00:19:18,630
invisible plane that is referenced in

502
00:19:18,630 --> 00:19:21,510
the WebGL render so that it can cut out

503
00:19:21,510 --> 00:19:25,789
a little little spot for us and so

504
00:19:25,789 --> 00:19:27,929
basically the thing is that you don't

505
00:19:27,929 --> 00:19:30,720
ever have Dom in front of WebGL but what

506
00:19:30,720 --> 00:19:32,130
happens is that we cut out a little

507
00:19:32,130 --> 00:19:34,470
scene in our web Yale scene so that you

508
00:19:34,470 --> 00:19:36,659
can look through see the Dom element

509
00:19:36,659 --> 00:19:38,549
there and it lines up so perfectly that

510
00:19:38,549 --> 00:19:41,070
you don't even know that your eyes

511
00:19:41,070 --> 00:19:43,260
pulling a trick and you don't even can't

512
00:19:43,260 --> 00:19:44,850
even tell that it's like actually

513
00:19:44,850 --> 00:19:48,630
layered behind it in the Dom so here's

514
00:19:48,630 --> 00:19:50,730
some of like the cut out stuff in action

515
00:19:50,730 --> 00:19:53,730
so this is a scene where everything is

516
00:19:53,730 --> 00:19:55,679
working just some context so we have a

517
00:19:55,679 --> 00:19:57,659
little light here we have a GL plane and

518
00:19:57,659 --> 00:19:59,190
we have a Dom element that's right here

519
00:19:59,190 --> 00:20:02,039
so if we move this around from more on

520
00:20:02,039 --> 00:20:04,470
perspective to like imagine you and your

521
00:20:04,470 --> 00:20:06,779
the camera this looks correct like if I

522
00:20:06,779 --> 00:20:10,169
turn this the angles are right and

523
00:20:10,169 --> 00:20:11,549
everything is layered the way I would

524
00:20:11,549 --> 00:20:16,470
imagine it to be so let's say we didn't

525
00:20:16,470 --> 00:20:20,220
have let's say we didn't have cutouts on

526
00:20:20,220 --> 00:20:22,679
so that there was no cutting out of that

527
00:20:22,679 --> 00:20:25,679
invisible plane for for the WebGL scene

528
00:20:25,679 --> 00:20:27,750
so you can see that like this looks

529
00:20:27,750 --> 00:20:29,519
somewhere you know the light this was in

530
00:20:29,519 --> 00:20:31,019
front rotating and you have your plane

531
00:20:31,019 --> 00:20:33,899
and when I go behind it still looks

532
00:20:33,899 --> 00:20:37,409
really really good but the issue is I'm

533
00:20:37,409 --> 00:20:39,750
not cutting out from there so even

534
00:20:39,750 --> 00:20:43,620
though the the pink div is technically

535
00:20:43,620 --> 00:20:45,000
in front in world space we're not

536
00:20:45,000 --> 00:20:46,470
cutting anything out of our plane to

537
00:20:46,470 --> 00:20:48,419
account for this which is why it looks

538
00:20:48,419 --> 00:20:49,950
like it's behind it looks like it gets

539
00:20:49,950 --> 00:20:51,629
hidden behind but even though we know

540
00:20:51,629 --> 00:20:52,980
that it's in front

541
00:20:52,980 --> 00:20:56,130
in terms of world space another here's

542
00:20:56,130 --> 00:20:57,660
one more example of kind of the exact

543
00:20:57,660 --> 00:20:59,400
same demo but this shows it pretty well

544
00:20:59,400 --> 00:21:02,070
so we have an invisible div right now

545
00:21:02,070 --> 00:21:04,590
and we have the same thing so imagine

546
00:21:04,590 --> 00:21:06,030
the invisible div is right right around

547
00:21:06,030 --> 00:21:08,549
to your right what you can see is this

548
00:21:08,549 --> 00:21:10,440
is exactly what's happening is that

549
00:21:10,440 --> 00:21:13,830
we're just cutting out a plane inside of

550
00:21:13,830 --> 00:21:16,770
our WebGL scene and now you get this

551
00:21:16,770 --> 00:21:19,080
complete interactive doing DOM and WebGL

552
00:21:19,080 --> 00:21:21,030
in the same space the user doesn't need

553
00:21:21,030 --> 00:21:22,980
to know at all that these are like

554
00:21:22,980 --> 00:21:24,480
technically not supposed to happen this

555
00:21:24,480 --> 00:21:27,320
way and we can abstract the like the

556
00:21:27,320 --> 00:21:29,309
differences between the two rendering

557
00:21:29,309 --> 00:21:31,260
mediums away from the user so that the

558
00:21:31,260 --> 00:21:32,760
user can just focus on like okay

559
00:21:32,760 --> 00:21:34,320
position everything in space in the

560
00:21:34,320 --> 00:21:36,480
consistent like definition of what lay

561
00:21:36,480 --> 00:21:38,640
out in spaces and then just draw the

562
00:21:38,640 --> 00:21:45,809
nice things with the correct tool so we

563
00:21:45,809 --> 00:21:47,970
also have a few examples of putting it

564
00:21:47,970 --> 00:21:50,340
all together so these are some like of

565
00:21:50,340 --> 00:21:52,140
our mixed mode demos that show you know

566
00:21:52,140 --> 00:21:54,780
what you can do with this and again

567
00:21:54,780 --> 00:21:56,520
these are demos but you know everybody

568
00:21:56,520 --> 00:21:58,500
you know you guys probably have the jas

569
00:21:58,500 --> 00:22:00,900
comp which I open on a tab in your

570
00:22:00,900 --> 00:22:03,809
browser right now well i have a macbook

571
00:22:03,809 --> 00:22:05,850
with a macbook with the ge'ez conf

572
00:22:05,850 --> 00:22:08,760
website in here and this is completely

573
00:22:08,760 --> 00:22:10,650
navigatable and i can look through this

574
00:22:10,650 --> 00:22:16,950
and this is all Dom I can check the

575
00:22:16,950 --> 00:22:19,410
schedule and I can even navigate

576
00:22:19,410 --> 00:22:21,960
backwards to it and it's really cool and

577
00:22:21,960 --> 00:22:23,400
that's the nice thing is that like I

578
00:22:23,400 --> 00:22:25,590
wouldn't want to do that web page again

579
00:22:25,590 --> 00:22:27,990
in WebGL I wanted to use that web page

580
00:22:27,990 --> 00:22:29,910
for what it is but I can do cool things

581
00:22:29,910 --> 00:22:32,190
like I can put it with this macbook obj

582
00:22:32,190 --> 00:22:34,470
I can put a plane on top of it that has

583
00:22:34,470 --> 00:22:36,059
some nice sheer on it so it looks like

584
00:22:36,059 --> 00:22:37,590
there's like lighting glossing off of

585
00:22:37,590 --> 00:22:39,750
the screen and being able to take the

586
00:22:39,750 --> 00:22:42,270
best about what these both of what take

587
00:22:42,270 --> 00:22:43,830
the best of what both these technologies

588
00:22:43,830 --> 00:22:45,450
has to offer is a really really useful

589
00:22:45,450 --> 00:22:49,230
thing here's an example that we've had

590
00:22:49,230 --> 00:23:13,630
for a while now long second

591
00:23:13,640 --> 00:23:16,320
cool so if you look at all of these

592
00:23:16,320 --> 00:23:18,540
things they're completely done i can

593
00:23:18,540 --> 00:23:19,890
highlight them i can select them i can

594
00:23:19,890 --> 00:23:21,570
copy paste everything that's really nice

595
00:23:21,570 --> 00:23:24,270
but i can do really cool sparkle effects

596
00:23:24,270 --> 00:23:26,820
with them and do stuff i couldn't do

597
00:23:26,820 --> 00:23:30,750
with just you know just the dom yeah

598
00:23:30,750 --> 00:23:32,190
this could probably be images for now

599
00:23:32,190 --> 00:23:34,050
but you could imagine these were like

600
00:23:34,050 --> 00:23:35,940
more glowing and particle effects and

601
00:23:35,940 --> 00:23:38,670
stuff with you now and you don't again

602
00:23:38,670 --> 00:23:39,960
the user doesn't have to think about how

603
00:23:39,960 --> 00:23:41,580
to marry these two they just had already

604
00:23:41,580 --> 00:23:44,060
existed the exact same coordinate space

605
00:23:44,060 --> 00:23:46,740
and then the last example of like this

606
00:23:46,740 --> 00:23:48,870
is something that is completely da Mon

607
00:23:48,870 --> 00:23:51,870
Lee but just kind of shows the idea more

608
00:23:51,870 --> 00:23:53,910
so more along like the original point I

609
00:23:53,910 --> 00:23:55,290
was making is that there's a lot of

610
00:23:55,290 --> 00:23:56,940
content out there that is just not a

611
00:23:56,940 --> 00:23:58,800
document and to think about something as

612
00:23:58,800 --> 00:24:00,690
a document is like a really inherently

613
00:24:00,690 --> 00:24:01,980
wrong way to think about the problem

614
00:24:01,980 --> 00:24:04,440
space so if I have an image carousel of

615
00:24:04,440 --> 00:24:06,270
things and I want to like throw things

616
00:24:06,270 --> 00:24:09,120
like that nothing about this is document

617
00:24:09,120 --> 00:24:10,620
the way I thought about this when I was

618
00:24:10,620 --> 00:24:12,270
building it is okay i have a little

619
00:24:12,270 --> 00:24:14,340
window right and what i need to be able

620
00:24:14,340 --> 00:24:15,870
to see are the arrows the dots in the

621
00:24:15,870 --> 00:24:19,050
middle content everything else i want to

622
00:24:19,050 --> 00:24:21,450
just put over here and what i ended up

623
00:24:21,450 --> 00:24:23,040
using is some physics simulation where I

624
00:24:23,040 --> 00:24:25,050
move some Springs and things from

625
00:24:25,050 --> 00:24:27,240
outside of the screen come in so if I

626
00:24:27,240 --> 00:24:28,860
take a look and I tilt this thing back a

627
00:24:28,860 --> 00:24:31,200
little bit you can see you like this is

628
00:24:31,200 --> 00:24:33,770
actually kind of what the application is

629
00:24:33,770 --> 00:24:37,500
and you get out and better sense from

630
00:24:37,500 --> 00:24:39,060
working like this in my opinion of like

631
00:24:39,060 --> 00:24:41,030
kind of what you're building and why

632
00:24:41,030 --> 00:24:43,320
it's easier in that you can think of

633
00:24:43,320 --> 00:24:45,300
applications is just like a small little

634
00:24:45,300 --> 00:24:47,130
window into your scene you can hide

635
00:24:47,130 --> 00:24:48,780
stuff you bind your head and you can do

636
00:24:48,780 --> 00:24:51,240
really cool stuff like that but you have

637
00:24:51,240 --> 00:24:53,580
the like really easy ability to kind of

638
00:24:53,580 --> 00:24:54,900
almost work with something that's more

639
00:24:54,900 --> 00:24:56,910
tangible than just a document and like

640
00:24:56,910 --> 00:24:58,680
the magic rules that CSS lay I have to

641
00:24:58,680 --> 00:25:05,039
give to you cool so

642
00:25:05,049 --> 00:25:07,299
so what are the current limitations of

643
00:25:07,299 --> 00:25:09,580
what we have so unfortunately right now

644
00:25:09,580 --> 00:25:13,119
we only support rectangular dom and that

645
00:25:13,119 --> 00:25:15,610
is not that bad of a thing because it's

646
00:25:15,610 --> 00:25:18,850
a completely fixable solution so what we

647
00:25:18,850 --> 00:25:21,129
have right now is that the cutout we

648
00:25:21,129 --> 00:25:22,899
make is a complete rectangle that is

649
00:25:22,899 --> 00:25:24,759
based around the size that you have

650
00:25:24,759 --> 00:25:26,440
defined through the thing what we're not

651
00:25:26,440 --> 00:25:28,960
listening for is let's say you have a

652
00:25:28,960 --> 00:25:30,759
Dom element and the Dom element is there

653
00:25:30,759 --> 00:25:33,929
and it's border radius you know 25 25 25

654
00:25:33,929 --> 00:25:36,669
what we can do is we can apply custom

655
00:25:36,669 --> 00:25:39,220
shaders to that cut out mesh to mimic

656
00:25:39,220 --> 00:25:40,929
the CSS property so that that gets

657
00:25:40,929 --> 00:25:43,899
shaped properly also we currently only

658
00:25:43,899 --> 00:25:46,629
work with opaque tom so if you think

659
00:25:46,629 --> 00:25:49,960
about it one of the issues is that we're

660
00:25:49,960 --> 00:25:52,809
doing a full cut out for WebGL so if my

661
00:25:52,809 --> 00:25:56,080
div is half like translucent I'm

662
00:25:56,080 --> 00:25:58,330
actually going to miss anything that was

663
00:25:58,330 --> 00:26:00,159
rendered back behind it that the cutout

664
00:26:00,159 --> 00:26:02,559
was occluding so what we need to do is

665
00:26:02,559 --> 00:26:04,389
have a second layer of WebGL that does

666
00:26:04,389 --> 00:26:06,039
all like the color math for us we're so

667
00:26:06,039 --> 00:26:09,429
that we can that so that we can pretty

668
00:26:09,429 --> 00:26:11,619
much fake the idea that there's like

669
00:26:11,619 --> 00:26:16,269
another layer there so one thing that

670
00:26:16,269 --> 00:26:17,649
was really good about this project was

671
00:26:17,649 --> 00:26:19,059
we got a chance to be architected a lot

672
00:26:19,059 --> 00:26:20,049
of our system and make a lot of

673
00:26:20,049 --> 00:26:22,029
improvements and as such we had a lot of

674
00:26:22,029 --> 00:26:25,690
happy side effects one thing that's

675
00:26:25,690 --> 00:26:27,519
really nice is because the entire system

676
00:26:27,519 --> 00:26:28,989
is completely based around these draw

677
00:26:28,989 --> 00:26:31,509
commands that go like from your from

678
00:26:31,509 --> 00:26:33,999
your components on your nodes to the

679
00:26:33,999 --> 00:26:36,340
renders this is this code can be

680
00:26:36,340 --> 00:26:38,950
completely run in like in not the UI

681
00:26:38,950 --> 00:26:41,470
thread so we can take all of your

682
00:26:41,470 --> 00:26:42,999
application code where you create your

683
00:26:42,999 --> 00:26:44,320
scenes you create your nodes and do all

684
00:26:44,320 --> 00:26:46,090
this stuff and I can throw it into a web

685
00:26:46,090 --> 00:26:48,460
worker and we have a build working where

686
00:26:48,460 --> 00:26:50,259
you know you have all your web worker

687
00:26:50,259 --> 00:26:52,059
code and then it sends it all the draw

688
00:26:52,059 --> 00:26:53,889
commands to the UI thread and that keeps

689
00:26:53,889 --> 00:26:55,899
your UI thread just a very very thin

690
00:26:55,899 --> 00:26:57,989
client that doesn't have to do a lot

691
00:26:57,989 --> 00:27:00,489
right now the performance benefits of

692
00:27:00,489 --> 00:27:04,059
web web workers is kind of minimal I

693
00:27:04,059 --> 00:27:05,679
think there's probably a use case out

694
00:27:05,679 --> 00:27:07,119
there where people could make use of it

695
00:27:07,119 --> 00:27:08,499
but the technology is only going to get

696
00:27:08,499 --> 00:27:11,350
better and it's an abstraction we really

697
00:27:11,350 --> 00:27:13,200
wanted to keep for a few other reasons

698
00:27:13,200 --> 00:27:15,309
another reason this kind of stuff is

699
00:27:15,309 --> 00:27:17,590
good is I we also have ways where I

700
00:27:17,590 --> 00:27:18,200
could

701
00:27:18,200 --> 00:27:21,020
on my entire application as a node

702
00:27:21,020 --> 00:27:23,150
server and I could pipe through socket

703
00:27:23,150 --> 00:27:25,340
messages to my thin client just what the

704
00:27:25,340 --> 00:27:27,410
draw commands were so now that's really

705
00:27:27,410 --> 00:27:30,170
really interesting imagine your ESPN and

706
00:27:30,170 --> 00:27:32,060
I have like a scoreboard somewhere right

707
00:27:32,060 --> 00:27:33,560
I don't need to have all of the

708
00:27:33,560 --> 00:27:34,970
client-side logic for how that

709
00:27:34,970 --> 00:27:37,070
scoreboard works what i can do is i

710
00:27:37,070 --> 00:27:38,900
could just have the renderer over there

711
00:27:38,900 --> 00:27:40,370
and the render is getting all the draw

712
00:27:40,370 --> 00:27:42,290
commands and all of the like complicated

713
00:27:42,290 --> 00:27:43,730
logic about what needs to be there

714
00:27:43,730 --> 00:27:46,010
happens and you know once every hour

715
00:27:46,010 --> 00:27:50,240
it'll be you know Cincinnati Reds for

716
00:27:50,240 --> 00:27:52,910
and that's the only like difference that

717
00:27:52,910 --> 00:27:54,350
needs to happen as a result of like

718
00:27:54,350 --> 00:28:00,440
these changes so something else yeah so

719
00:28:00,440 --> 00:28:01,850
some of the next steps that we're

720
00:28:01,850 --> 00:28:04,030
considering taking with the project are

721
00:28:04,030 --> 00:28:06,710
rendered to non web technologies so

722
00:28:06,710 --> 00:28:08,060
again some one of the benefits of this

723
00:28:08,060 --> 00:28:09,230
whole thing is that it's completely

724
00:28:09,230 --> 00:28:11,240
based around Rock'em and so what if the

725
00:28:11,240 --> 00:28:14,210
compositor wasn't compositing for da man

726
00:28:14,210 --> 00:28:16,610
would do what if you used components

727
00:28:16,610 --> 00:28:18,770
that output to opengl command and the

728
00:28:18,770 --> 00:28:20,540
render was an opengl render so you could

729
00:28:20,540 --> 00:28:22,220
have this completely JavaScript pipeline

730
00:28:22,220 --> 00:28:23,840
write your application in JavaScript and

731
00:28:23,840 --> 00:28:25,610
it's generating commands for like a

732
00:28:25,610 --> 00:28:29,960
native open heel application also you

733
00:28:29,960 --> 00:28:32,210
know possibly port to azum you know fast

734
00:28:32,210 --> 00:28:35,120
math is fast no garbage is good garbage

735
00:28:35,120 --> 00:28:37,910
and it also opens a way for non-web

736
00:28:37,910 --> 00:28:40,610
people to build into the like get their

737
00:28:40,610 --> 00:28:42,410
feet wet into the web so if you can

738
00:28:42,410 --> 00:28:43,640
write haskell if you could write Python

739
00:28:43,640 --> 00:28:45,620
if you can write c you can write all

740
00:28:45,620 --> 00:28:48,560
your code compile it down like through

741
00:28:48,560 --> 00:28:51,110
compiler to llvm bytecode and then we

742
00:28:51,110 --> 00:28:52,880
can eat that lov m bytecode and just

743
00:28:52,880 --> 00:28:54,380
shove it in and get stuff rendered on

744
00:28:54,380 --> 00:28:55,940
the screen so there's some of the things

745
00:28:55,940 --> 00:28:59,690
that we're kind of working towards so in

746
00:28:59,690 --> 00:29:01,790
summary I think the big thing is you got

747
00:29:01,790 --> 00:29:03,230
to think outside the document there's a

748
00:29:03,230 --> 00:29:04,970
lot of cases where the document is like

749
00:29:04,970 --> 00:29:06,500
the right thing to do your content

750
00:29:06,500 --> 00:29:09,080
really is like newspaper style content

751
00:29:09,080 --> 00:29:11,630
but it's not for everything you know 2d

752
00:29:11,630 --> 00:29:13,550
layout is a subset of 3d so let's define

753
00:29:13,550 --> 00:29:15,830
the world in three dimensions if I need

754
00:29:15,830 --> 00:29:17,930
to do 2d it's about you know moving

755
00:29:17,930 --> 00:29:20,300
something here and then just working in

756
00:29:20,300 --> 00:29:21,920
two dimensions like you can make that

757
00:29:21,920 --> 00:29:24,920
adjustment very very quick by like

758
00:29:24,920 --> 00:29:27,010
shrinking the amount of Z you use and

759
00:29:27,010 --> 00:29:29,000
then I think something else that's

760
00:29:29,000 --> 00:29:30,410
really really nice is the idea of

761
00:29:30,410 --> 00:29:31,910
abstracting away the rendering meet

762
00:29:31,910 --> 00:29:34,340
the what the transform in the scene

763
00:29:34,340 --> 00:29:35,840
graph give you is it gives you the

764
00:29:35,840 --> 00:29:37,820
ability to think about like points in

765
00:29:37,820 --> 00:29:39,710
space that are completely agnostic as to

766
00:29:39,710 --> 00:29:43,100
like where what what I'm rendering to

767
00:29:43,100 --> 00:29:45,410
these are just mathematical concepts

768
00:29:45,410 --> 00:29:47,150
that are pervasive and will always exist

769
00:29:47,150 --> 00:29:49,940
and if you just think of if you think of

770
00:29:49,940 --> 00:29:51,410
applications and application

771
00:29:51,410 --> 00:29:52,490
architecture like that and UI

772
00:29:52,490 --> 00:29:54,440
development like that it's really easy

773
00:29:54,440 --> 00:29:56,270
to switch in like what the drawing bits

774
00:29:56,270 --> 00:29:58,550
of that are and again thin clients give

775
00:29:58,550 --> 00:30:00,800
the flexibility to the web if you're not

776
00:30:00,800 --> 00:30:02,480
having like full client side code and

777
00:30:02,480 --> 00:30:03,650
you're just having a render on your

778
00:30:03,650 --> 00:30:05,210
front and you can do a lot of cool

779
00:30:05,210 --> 00:30:06,230
things you could do server-side

780
00:30:06,230 --> 00:30:08,540
rendering you could do web workers you

781
00:30:08,540 --> 00:30:11,600
can do a lot that you know that

782
00:30:11,600 --> 00:30:13,100
currently isn't possible with a lot of

783
00:30:13,100 --> 00:30:14,420
things where you're just you know

784
00:30:14,420 --> 00:30:15,950
manually touching the DOM and your

785
00:30:15,950 --> 00:30:18,590
entire like workflow is you grabbing Dom

786
00:30:18,590 --> 00:30:20,710
elements and manipulating them yourself

787
00:30:20,710 --> 00:30:24,380
so thank you guys for hear me talk feel

788
00:30:24,380 --> 00:30:25,880
free to email me at might get famous and

789
00:30:25,880 --> 00:30:27,800
I don't really have a website but if you

