1
00:00:01,640 --> 00:00:07,629
Thank you very much.

2
00:00:07,629 --> 00:00:13,630
Can you hear me?

3
00:00:13,630 --> 00:00:15,130
Yes.

4
00:00:15,130 --> 00:00:16,630
Hi.

5
00:00:16,630 --> 00:00:18,130
Yes.

6
00:00:18,130 --> 00:00:21,130
I'm Ray.

7
00:00:21,130 --> 00:00:24,019
The room has emptied out a little bit, so
I don't have to be so nervous.

8
00:00:24,019 --> 00:00:30,619
I will not show you much Javascript.

9
00:00:30,619 --> 00:00:38,000
If you want to see a lot of Javascript from
Toyota, you should go to the next room.

10
00:00:38,000 --> 00:00:46,370
I'll start about something that we have been
working on as a company for the last years.

11
00:00:46,370 --> 00:00:47,789
That is these things.

12
00:00:47,789 --> 00:00:49,460
The cars.

13
00:00:49,460 --> 00:00:55,870
This is the one example, which might impress
Javascript developers.

14
00:00:55,870 --> 00:01:03,350
Most car companies, equipment manufacturers,
most people in the manufacturing world think

15
00:01:03,350 --> 00:01:04,860
about this kind of thing.

16
00:01:04,860 --> 00:01:06,610
Which is a product.

17
00:01:06,610 --> 00:01:08,960
This product doesn't have anybody in it.

18
00:01:08,960 --> 00:01:11,060
If you can notice this.

19
00:01:11,060 --> 00:01:18,050
Most of the manufacturing brochures is without
people.

20
00:01:18,050 --> 00:01:23,909
Most manufacturers really care about the product.

21
00:01:23,909 --> 00:01:29,740
Once it goes outside the factory it goes to
a distribution network, other people deal

22
00:01:29,740 --> 00:01:35,159
with the people who drive the cars.

23
00:01:35,159 --> 00:01:37,729
We can see a nice lady in the car.

24
00:01:37,729 --> 00:01:39,229
That's good.

25
00:01:39,229 --> 00:01:41,390
Some people into cars.

26
00:01:41,390 --> 00:01:43,110
We know that is happening.

27
00:01:43,110 --> 00:01:44,700
In the dealership somewhere.

28
00:01:44,700 --> 00:01:48,469
But we don't really know much beyond that.

29
00:01:48,469 --> 00:01:52,820
Something about this picture you recognize.

30
00:01:52,820 --> 00:02:01,799
We have concentrated mostly on the steeringwheels
and dashboards and engines and that stuff.

31
00:02:01,799 --> 00:02:04,590
Now we have these new things in the cars.

32
00:02:04,590 --> 00:02:13,590
Will allow us to serve the customer a lot
better and track, understand what they are

33
00:02:13,590 --> 00:02:16,190
doing in a better way.

34
00:02:16,190 --> 00:02:20,989
This actually changes the game for car manufacturers.

35
00:02:20,989 --> 00:02:27,069
We have had an engine, steering wheels, cars
on the road.

36
00:02:27,069 --> 00:02:29,150
We don't know what has been going on.

37
00:02:29,150 --> 00:02:31,730
Until recently.

38
00:02:31,730 --> 00:02:34,540
Like with the maps.

39
00:02:34,540 --> 00:02:41,970
We want to connect the vehicles to the customers
driving the vehicles.

40
00:02:41,970 --> 00:02:49,140
This is the beginning actually of a culture
shift that was mentioned earlier on.

41
00:02:49,140 --> 00:02:57,820
Because all of the systems inside Toyota,
Ford, all of these manufacturers, are all

42
00:02:57,820 --> 00:03:00,100
geared around producing stuff.

43
00:03:00,100 --> 00:03:05,500
Not linking the people to the things that
we produce.

44
00:03:05,500 --> 00:03:09,090
And, that's an opportunity for us.

45
00:03:09,090 --> 00:03:13,599
Because as architects we benefit from opportunities
and crises.

46
00:03:13,599 --> 00:03:19,430
In this case we want to connect to the cloud,
a lot of people out there.

47
00:03:19,430 --> 00:03:21,400
We can't control that.

48
00:03:21,400 --> 00:03:26,299
All of the on site technology that we have,
that we have been used to.

49
00:03:26,299 --> 00:03:32,240
Where there is a kind of understood limit
to how much activity can go on.

50
00:03:32,240 --> 00:03:34,209
Suddenly becomes challenges.

51
00:03:34,209 --> 00:03:39,300
We have an opportunity to go to the cloud.

52
00:03:39,300 --> 00:03:42,870
In manufacturing companies.

53
00:03:42,870 --> 00:03:45,570
A split of things.

54
00:03:45,570 --> 00:03:47,939
We have R&D, manufacturing, distribution.

55
00:03:47,939 --> 00:03:52,590
Supply chain.

56
00:03:52,590 --> 00:04:02,959
I want to discuss the fact, from a software
side, R&D looks like software development

57
00:04:02,959 --> 00:04:05,299
to me.

58
00:04:05,299 --> 00:04:10,519
That is not where all the lean manufacturing
stuff comes.

59
00:04:10,519 --> 00:04:12,879
All the agile stuff comes from.

60
00:04:12,879 --> 00:04:15,490
That is undiscovered.

61
00:04:15,490 --> 00:04:17,570
Like most software development.

62
00:04:17,570 --> 00:04:19,140
It is hard stuff.

63
00:04:19,140 --> 00:04:21,970
That has to be done and is not repeatable.

64
00:04:21,970 --> 00:04:25,130
Not simple.

65
00:04:25,130 --> 00:04:29,290
So, that's where we are mostly on the left.

66
00:04:29,290 --> 00:04:31,080
Research and development.

67
00:04:31,080 --> 00:04:34,580
We have supply chains.

68
00:04:34,580 --> 00:04:41,070
For us, supply chains are things like, software
as a service.

69
00:04:41,070 --> 00:04:43,580
Or software libraries.

70
00:04:43,580 --> 00:04:47,100
Like we use databases or commercial libraries.

71
00:04:47,100 --> 00:04:49,330
Open source frameworks.

72
00:04:49,330 --> 00:04:50,550
We have manufacturing.

73
00:04:50,550 --> 00:04:58,280
And manufacturing in software, in my opinion
tends about the deployment.

74
00:04:58,280 --> 00:05:01,720
The datacenter is a thing under pressure.

75
00:05:01,720 --> 00:05:06,620
We want to potentially change that manufacturing
from a local data center.

76
00:05:06,620 --> 00:05:14,700
The distribution is the internet or network.

77
00:05:14,700 --> 00:05:17,220
These guys do their exercises in the morning.

78
00:05:17,220 --> 00:05:21,550
They are not changing things here.

79
00:05:21,550 --> 00:05:25,140
What factories do is they repeat things.

80
00:05:25,140 --> 00:05:27,380
We have the ideas in the software world.

81
00:05:27,380 --> 00:05:34,060
And factories go through a process, manage
it, make sure it is repeatable and make sure

82
00:05:34,060 --> 00:05:36,470
it works.

83
00:05:36,470 --> 00:05:38,460
That's good.

84
00:05:38,460 --> 00:05:46,440
One of the problems with this is, this doesn't
work very well if it is not repeatable, scalable.

85
00:05:46,440 --> 00:05:53,430
If I have to go to the factory workers and
explain how to build that car, it is not good.

86
00:05:53,430 --> 00:06:00,750
We were taking 2 days to deploy stuff in the
existing system.

87
00:06:00,750 --> 00:06:03,020
I have drawings here.

88
00:06:03,020 --> 00:06:04,410
Some pictures on the lefthandside.

89
00:06:04,410 --> 00:06:07,810
This guy is making bricks by hand.

90
00:06:07,810 --> 00:06:11,240
That is find.

91
00:06:11,240 --> 00:06:12,240
Everyone is happy.

92
00:06:12,240 --> 00:06:14,410
He has a job.

93
00:06:14,410 --> 00:06:17,530
But I would like that...

94
00:06:17,530 --> 00:06:20,400
Perhaps controversially.

95
00:06:20,400 --> 00:06:22,560
Technologies on the righthandside.

96
00:06:22,560 --> 00:06:25,090
The stuff we were using before this.

97
00:06:25,090 --> 00:06:26,090
Very manual.

98
00:06:26,090 --> 00:06:27,090
Dot net.

99
00:06:27,090 --> 00:06:28,090
Xml.

100
00:06:28,090 --> 00:06:31,470
File systems.

101
00:06:31,470 --> 00:06:32,630
Management system.

102
00:06:32,630 --> 00:06:34,650
Everything was manually deployed.

103
00:06:34,650 --> 00:06:39,750
Not to test it.

104
00:06:39,750 --> 00:06:42,690
But deploy it into production.

105
00:06:42,690 --> 00:06:52,540
And then we use monitoring tools on a per
server basis.

106
00:06:52,540 --> 00:06:53,980
We decided to change that.

107
00:06:53,980 --> 00:06:57,100
To a different stack.

108
00:06:57,100 --> 00:07:01,560
We wanted to, architect for the factory.

109
00:07:01,560 --> 00:07:04,610
Architect for something that is scalable.

110
00:07:04,610 --> 00:07:07,230
Which is automatible.

111
00:07:07,230 --> 00:07:12,090
Simple and visible to understand.

112
00:07:12,090 --> 00:07:16,490
What we did there was we moved everything.

113
00:07:16,490 --> 00:07:18,310
We didn't do competitions.

114
00:07:18,310 --> 00:07:22,130
Like.Net use this many Cpu cycles.

115
00:07:22,130 --> 00:07:27,090
This Java is more friendly.

116
00:07:27,090 --> 00:07:33,490
I have like the other guy a background in
Java and non Java script stuff.

117
00:07:33,490 --> 00:07:37,380
I sat with Node, did development.

118
00:07:37,380 --> 00:07:42,560
I like to touch stuff and workable.

119
00:07:42,560 --> 00:07:47,660
And what do what they say.

120
00:07:47,660 --> 00:07:53,970
I have been with Node.

121
00:07:53,970 --> 00:07:57,680
I can write a few scripts.

122
00:07:57,680 --> 00:08:01,370
What I found with Node was interesting.

123
00:08:01,370 --> 00:08:06,780
You could run it, you know this, incredibly
small environments.

124
00:08:06,780 --> 00:08:13,890
What you don't want to do is rely on a big
fat operating system.

125
00:08:13,890 --> 00:08:20,400
If I want to have 10 Nodes, i don't want 10
instances of Windows.

126
00:08:20,400 --> 00:08:27,810
Or 10 instances of Linux either.

127
00:08:27,810 --> 00:08:29,970
We realise it is lightware.

128
00:08:29,970 --> 00:08:34,159
To spin up a lot of instances.

129
00:08:34,159 --> 00:08:41,580
We didn't want to go with something depending
on high cost operating systems.

130
00:08:41,580 --> 00:08:45,050
And I think Windows is that.

131
00:08:45,050 --> 00:08:46,570
Microsoft realises that.

132
00:08:46,570 --> 00:08:54,060
They are getting involved in all kinds of
Linux environments.

133
00:08:54,060 --> 00:08:59,460
But Windows is for us if we are going to get
ready for the factory, I don't like to look

134
00:08:59,460 --> 00:09:01,540
at their factory.

135
00:09:01,540 --> 00:09:07,460
It is cluncy to start things up.

136
00:09:07,460 --> 00:09:12,230
We want to drop Windows.

137
00:09:12,230 --> 00:09:15,340
We were using Xml as part of the content management
system.

138
00:09:15,340 --> 00:09:20,160
It was burning a lot of Cpu's.

139
00:09:20,160 --> 00:09:23,180
We didn't benchmark this.

140
00:09:23,180 --> 00:09:27,830
The Cpu's, on the existing websites were always
at 100%.

141
00:09:27,830 --> 00:09:29,830
I don't need to benchmark that.

142
00:09:29,830 --> 00:09:31,750
It is terrible.

143
00:09:31,750 --> 00:09:36,810
It is easy for us to say, let's just stop
parsing stuff.

144
00:09:36,810 --> 00:09:40,070
If we use Json.

145
00:09:40,070 --> 00:09:51,250
I didn't like to move from disk.

146
00:09:51,250 --> 00:09:55,070
We are getting disks full on weekly basis.

147
00:09:55,070 --> 00:09:59,940
It was an easy sell.

148
00:09:59,940 --> 00:10:05,720
Moving from subversion to Git was a headache.

149
00:10:05,720 --> 00:10:08,830
They didn't understand the benefits.

150
00:10:08,830 --> 00:10:13,370
But we worked with developers.

151
00:10:13,370 --> 00:10:19,190
Pull requests and the Ps system was a lot
more powerful.

152
00:10:19,190 --> 00:10:23,550
Than the subversion they had at the time.

153
00:10:23,550 --> 00:10:26,470
And we went from manual deploy to automated
deploy.

154
00:10:26,470 --> 00:10:30,580
We use a stack from Alasian.

155
00:10:30,580 --> 00:10:33,740
Some might know.

156
00:10:33,740 --> 00:10:41,180
They also have a built system called Bamboo
and Stash.

157
00:10:41,180 --> 00:10:48,830
The Stash, because we are a big manufacturer
and scared of secrets of the world.

158
00:10:48,830 --> 00:10:51,800
Then we have to have everything behind the
firewall.

159
00:10:51,800 --> 00:10:57,380
Our code and built systems are behind the
firewall at the moment.

160
00:10:57,380 --> 00:11:02,800
And we use that, the Bamboo and Stash to do
that.

161
00:11:02,800 --> 00:11:04,360
Which is very nice.

162
00:11:04,360 --> 00:11:08,050
You get a lot of visibility in the code quality.

163
00:11:08,050 --> 00:11:13,480
Then we move from the individual systems out
to things like New Relic.

164
00:11:13,480 --> 00:11:17,190
A lot of add ons to understand what is going
on.

165
00:11:17,190 --> 00:11:23,130
We have eyes on the system that we didn't
have before.

166
00:11:23,130 --> 00:11:34,320
That's being moved from that sluggy stuff
to the more automated environment.

167
00:11:34,320 --> 00:11:37,290
Where do we build the factory?

168
00:11:37,290 --> 00:11:42,510
We build factories in the real world where
there is a lot of water, energy.

169
00:11:42,510 --> 00:11:44,200
Available labor.

170
00:11:44,200 --> 00:11:50,390
Where do we build the factory on the cloud?

171
00:11:50,390 --> 00:11:52,470
Do we build it on the cloud?

172
00:11:52,470 --> 00:11:53,560
First question of course.

173
00:11:53,560 --> 00:11:59,340
A lot of people are thinking, let's take a
stack and do it internally.

174
00:11:59,340 --> 00:12:04,810
The problem was that we wanted to say, we
are going to go strategically.

175
00:12:04,810 --> 00:12:11,320
Unfortunately, or fortunately, with Toyota
we have to build concensus.

176
00:12:11,320 --> 00:12:12,590
That's good.

177
00:12:12,590 --> 00:12:17,630
If you are doing things together you do things
in a strong way.

178
00:12:17,630 --> 00:12:23,820
That means that, to do it on premise properly,
it requires a lot of inquestment.

179
00:12:23,820 --> 00:12:28,550
Making an internal cloud is expensive.

180
00:12:28,550 --> 00:12:34,600
A lot of hardware.

181
00:12:34,600 --> 00:12:38,720
Invest in training people to run the cloud.

182
00:12:38,720 --> 00:12:45,800
Actually, it turns out from a timeline, we
couldn't afford to do it for this project.

183
00:12:45,800 --> 00:12:48,670
Something we are considering for the future.

184
00:12:48,670 --> 00:12:51,430
An on premise cloud wasn't possible.

185
00:12:51,430 --> 00:12:54,230
We went off premise.

186
00:12:54,230 --> 00:13:01,010
We do need to be aware that Toyota is a global
cooperation.

187
00:13:01,010 --> 00:13:04,140
Has relationships with a lot of different
companies.

188
00:13:04,140 --> 00:13:08,070
We have relations with Microsoft and Amazon.

189
00:13:08,070 --> 00:13:11,570
We use Amazon all over the place.

190
00:13:11,570 --> 00:13:18,270
We wanted to do a comparison between those
3 big.

191
00:13:18,270 --> 00:13:22,800
Heroku, Azure, Amazon.

192
00:13:22,800 --> 00:13:25,370
Engine Yard, Openshift.

193
00:13:25,370 --> 00:13:28,880
The on site stuff.

194
00:13:28,880 --> 00:13:41,010
Mostly it was because we wanted a true platform
as service that we could adopt easily.

195
00:13:41,010 --> 00:13:46,330
Build something that was unaware of its infrastructure.

196
00:13:46,330 --> 00:13:53,880
So, if we deployed it to Heroku, it would
be unaware of the fact that it is going to

197
00:13:53,880 --> 00:13:54,880
Heroku.

198
00:13:54,880 --> 00:13:59,160
With Azure it is more aware.

199
00:13:59,160 --> 00:14:05,550
With Azure on Linux you don't get the platform
as a service.

200
00:14:05,550 --> 00:14:06,960
Amazon has Beanstalk.

201
00:14:06,960 --> 00:14:10,560
Which can do Java and other things.

202
00:14:10,560 --> 00:14:14,340
But again, Amazon is infrastructuring company.

203
00:14:14,340 --> 00:14:19,089
Does it very well.

204
00:14:19,089 --> 00:14:24,580
Moved up to platform service there are gaps.

205
00:14:24,580 --> 00:14:33,520
It isn't as strong as around Azure or Heroku.

206
00:14:33,520 --> 00:14:37,370
Amazon's Api's.

207
00:14:37,370 --> 00:14:39,260
There are 1000 api's.

208
00:14:39,260 --> 00:14:43,230
From that sense it is good, if you are tool
building.

209
00:14:43,230 --> 00:14:45,980
As Heroku it is fantastic.

210
00:14:45,980 --> 00:14:50,820
But as a kind of shop where we are outsource
this activity.

211
00:14:50,820 --> 00:14:55,120
It would be an extra cost for us to manage
that.

212
00:14:55,120 --> 00:14:57,640
The other thing we liked about it.

213
00:14:57,640 --> 00:15:02,930
There was a lot of ecosystem around Heroku.

214
00:15:02,930 --> 00:15:07,150
We could make add ons.

215
00:15:07,150 --> 00:15:09,380
Elastic search.

216
00:15:09,380 --> 00:15:16,089
Push a button.

217
00:15:16,089 --> 00:15:19,940
Start pushing.

218
00:15:19,940 --> 00:15:24,490
That's really nice.

219
00:15:24,490 --> 00:15:29,790
Heroku has platform api's.

220
00:15:29,790 --> 00:15:33,300
But it is quite small.

221
00:15:33,300 --> 00:15:41,600
We have a system for instance that uses Node
to deploy applications from one to another

222
00:15:41,600 --> 00:15:42,630
environment.

223
00:15:42,630 --> 00:15:49,030
The other interesting thing about Heroku is
that it is an open source platform.

224
00:15:49,030 --> 00:15:53,839
I don't know the code for Beanstalk or Azure.

225
00:15:53,839 --> 00:15:58,870
But I know the code for Heroku.

226
00:15:58,870 --> 00:16:00,700
I can see what they are doing.

227
00:16:00,700 --> 00:16:03,490
If I don't like it, we can change it.

228
00:16:03,490 --> 00:16:12,870
We built our own built pack to include some
Google pagefeed functionality.

229
00:16:12,870 --> 00:16:16,720
That's really an advantage that we found of
Heroku.

230
00:16:16,720 --> 00:16:21,630
If we didn't like, we changed them.

231
00:16:21,630 --> 00:16:24,970
We used a package but added others.

232
00:16:24,970 --> 00:16:26,340
We can deploy in Europe as well.

233
00:16:26,340 --> 00:16:29,620
Most of the guys can deploy in Europe.

234
00:16:29,620 --> 00:16:30,920
That's good.

235
00:16:30,920 --> 00:16:40,010
The fact helps regulations and helps people
from being too scared of the Nsa looking at.

236
00:16:40,010 --> 00:16:43,970
The Nsa looking at websites is good, that's
another hit.

237
00:16:43,970 --> 00:16:57,140
Another thing I liked about Heroku is that
it has early insights into Linux containers.

238
00:16:57,140 --> 00:17:03,710
Everyone is happy about Docker.

239
00:17:03,710 --> 00:17:05,980
And Microsoft even and Google.

240
00:17:05,980 --> 00:17:11,430
They are all getting into Docker.

241
00:17:11,430 --> 00:17:12,730
But Heroku is already there.

242
00:17:12,730 --> 00:17:15,110
They are using these Linux containers.

243
00:17:15,110 --> 00:17:17,620
They have a nice document.

244
00:17:17,620 --> 00:17:23,319
A website which gives the architectural guidelines.

245
00:17:23,319 --> 00:17:29,020
That helps to prepare for the factory.

246
00:17:29,020 --> 00:17:34,880
The other thing that, again I don't know if
you are from big enterprises.

247
00:17:34,880 --> 00:17:38,470
If you look at the smaller companies.

248
00:17:38,470 --> 00:17:50,000
It is a typical sell to say, I want to run
it on a platform Engine Yard.

249
00:17:50,000 --> 00:17:55,250
And the executive says, what is Node?

250
00:17:55,250 --> 00:17:59,390
Is that where we scrap the vehicles?

251
00:17:59,390 --> 00:18:00,799
They don't understand.

252
00:18:00,799 --> 00:18:05,790
I can say, we want to deploy on Heroku.

253
00:18:05,790 --> 00:18:08,480
We have a global partnership with them.

254
00:18:08,480 --> 00:18:09,720
Okay.

255
00:18:09,720 --> 00:18:10,720
Move along.

256
00:18:10,720 --> 00:18:15,100
I could come in under the radar.

257
00:18:15,100 --> 00:18:16,640
It all worked out.

258
00:18:16,640 --> 00:18:23,809
I give an insight how we run the operations
now.

259
00:18:23,809 --> 00:18:25,690
I can't...

260
00:18:25,690 --> 00:18:30,860
We can't go to Italy and deploy 2 applications.

261
00:18:30,860 --> 00:18:33,540
Or in Spain.

262
00:18:33,540 --> 00:18:34,540
With a helicopter.

263
00:18:34,540 --> 00:18:39,360
What we do is we have, I mentioned at the
beginning.

264
00:18:39,360 --> 00:18:44,340
I think my friend there, the application on
site.

265
00:18:44,340 --> 00:18:50,500
On site we have 1 app or cluster of apps that
serves the whole of Europe.

266
00:18:50,500 --> 00:18:57,080
What we do now instead is we have an application
which can clone and deploy out.

267
00:18:57,080 --> 00:18:59,870
On per market basis.

268
00:18:59,870 --> 00:19:03,870
It turned out to be really good for us.

269
00:19:03,870 --> 00:19:07,150
We can then go to places.

270
00:19:07,150 --> 00:19:15,600
We can try things out on markets like Portugal
or Azerbaijan.

271
00:19:15,600 --> 00:19:18,510
We can make sure it works.

272
00:19:18,510 --> 00:19:22,010
We have dino's over there.

273
00:19:22,010 --> 00:19:26,600
Let's roll it out to Greece or Portugal.

274
00:19:26,600 --> 00:19:30,420
Or make a change on the French website.

275
00:19:30,420 --> 00:19:33,690
It is isolated only to the French market.

276
00:19:33,690 --> 00:19:35,460
That has helped us.

277
00:19:35,460 --> 00:19:40,080
In the past we have been stuck with disks
fulls or out of memory.

278
00:19:40,080 --> 00:19:44,650
Or 60% of the capacity.

279
00:19:44,650 --> 00:19:52,770
With this system, we can say, okay, if there
is a campaign going on in Poland or Russia

280
00:19:52,770 --> 00:19:58,529
or Finland, we can turn up the dino's for
that market.

281
00:19:58,529 --> 00:20:02,530
Manually or through some automated system.

282
00:20:02,530 --> 00:20:05,790
That's what I call manufacturing these websites.

283
00:20:05,790 --> 00:20:11,090
So, we are going more and more towards that
model.

284
00:20:11,090 --> 00:20:15,530
Having everything dedicated towards a particular
marketplace.

285
00:20:15,530 --> 00:20:17,410
From the top to the bottom.

286
00:20:17,410 --> 00:20:18,710
The webserver.

287
00:20:18,710 --> 00:20:20,450
The middleware.

288
00:20:20,450 --> 00:20:22,600
The databases.

289
00:20:22,600 --> 00:20:24,580
All the way down the stack.

290
00:20:24,580 --> 00:20:27,210
We have some things on premise.

291
00:20:27,210 --> 00:20:28,210
Monolithic.

292
00:20:28,210 --> 00:20:30,760
We are breaking those out.

293
00:20:30,760 --> 00:20:32,710
Following the same model.

294
00:20:32,710 --> 00:20:38,300
That is a key thing for us.

295
00:20:38,300 --> 00:20:44,210
A lot of different clones of the same application
in different markets.

296
00:20:44,210 --> 00:20:49,060
We know they are all going to behave pretty
much the same way.

297
00:20:49,060 --> 00:20:52,240
We can configure them going forward.

298
00:20:52,240 --> 00:20:59,470
If the Italy guys want to integrate with the
dealer management systems.

299
00:20:59,470 --> 00:21:07,500
Then we can have a special environment or
addon that doesn't plug into the other markets.

300
00:21:07,500 --> 00:21:10,830
That's a powerful option for us.

301
00:21:10,830 --> 00:21:17,710
I have run out of steam.

302
00:21:17,710 --> 00:21:24,940
So, I would be happy if we could take a few
questions?

303
00:21:24,940 --> 00:21:31,220
- Any questions?

304
00:21:31,220 --> 00:21:32,790
How is the workflow?

305
00:21:32,790 --> 00:21:35,420
For people at Toyota.

306
00:21:35,420 --> 00:21:41,430
I know for me, most of my work that I have
done with Heroku has been hobbyist.

307
00:21:41,430 --> 00:21:46,990
For me it is, just go to Heroku.

308
00:21:46,990 --> 00:21:51,370
Had you had engineers experience with the
platform?

309
00:21:51,370 --> 00:21:54,670
- We had no experience with the platform at
all.

310
00:21:54,670 --> 00:21:58,190
It was, that's a good thing about it.

311
00:21:58,190 --> 00:22:02,110
Because, I did a discussion with the Cio.

312
00:22:02,110 --> 00:22:08,780
You need to log into these machines, need
to get to the platform.

313
00:22:08,780 --> 00:22:10,070
You can't buy the platforms.

314
00:22:10,070 --> 00:22:12,960
You have to discover everything about it.

315
00:22:12,960 --> 00:22:15,240
It is great for you.

316
00:22:15,240 --> 00:22:17,610
But that is not true.

317
00:22:17,610 --> 00:22:21,190
You can't touch them.

318
00:22:21,190 --> 00:22:25,100
It is impossible to touch those things.

319
00:22:25,100 --> 00:22:30,520
We can't fiddle with them and know exactly
what is going on.

320
00:22:30,520 --> 00:22:37,070
We can run up exact copies and diagnose things.

321
00:22:37,070 --> 00:22:44,890
We haven't had any experience of the deep
platform.

322
00:22:44,890 --> 00:22:50,120
Actually the surface area is quite small from
engineering perspective.

323
00:22:50,120 --> 00:22:55,929
And the workflow is simple.

324
00:22:55,929 --> 00:22:59,970
Heroku has an organisation.

325
00:22:59,970 --> 00:23:03,360
Which is a development organisation for the
websites.

326
00:23:03,360 --> 00:23:06,590
Another organisation which is for production.

327
00:23:06,590 --> 00:23:08,220
That goes beyond the hobbyist.

328
00:23:08,220 --> 00:23:12,440
They have an enterprise package.

329
00:23:12,440 --> 00:23:15,090
Development.

330
00:23:15,090 --> 00:23:22,980
All can have their roles and activities and
spin up their dino's.

331
00:23:22,980 --> 00:23:23,980
Whenever.

332
00:23:23,980 --> 00:23:35,590
We have one program that says, take your dino,
your exact doc file or image.

333
00:23:35,590 --> 00:23:37,130
Out of that development environment.

334
00:23:37,130 --> 00:23:39,760
And put it into production.

335
00:23:39,760 --> 00:23:43,090
That's the workflow we have in terms of promotion.

336
00:23:43,090 --> 00:23:51,880
Development workflow is standard kind of do
everything on your local machine.

337
00:23:51,880 --> 00:23:52,880
Whatever you want to do.

338
00:23:52,880 --> 00:23:53,880
Sublime text.

339
00:23:53,880 --> 00:23:56,490
And push it out to Heroku.

340
00:23:56,490 --> 00:23:59,669
Make sure it works.

341
00:23:59,669 --> 00:24:03,749
The users can check it out.

342
00:24:03,749 --> 00:24:06,559
- Not full control over the machine.

343
00:24:06,559 --> 00:24:11,460
The issues like where it was hard to install
something?

344
00:24:11,460 --> 00:24:13,630
It was hard to detect.

345
00:24:13,630 --> 00:24:14,670
Or mitigate.

346
00:24:14,670 --> 00:24:24,049
That you hadn't had physical control?

347
00:24:24,049 --> 00:24:25,810
- This is often the question you get.

348
00:24:25,810 --> 00:24:28,510
You don't control this stuff.

349
00:24:28,510 --> 00:24:30,890
Actually, you don't want to control it.

350
00:24:30,890 --> 00:24:32,140
You really don't want to control it.

351
00:24:32,140 --> 00:24:36,100
As long as you can get your eyes on it.

352
00:24:36,100 --> 00:24:42,460
New Relic, log entries.

353
00:24:42,460 --> 00:24:46,610
You can start an exact copy of your dino.

354
00:24:46,610 --> 00:24:49,380
You can look into it, into the copy.

355
00:24:49,380 --> 00:24:54,400
If it is not doing the same as production,
things are going south.

356
00:24:54,400 --> 00:24:56,030
We haven't had problems with that.

357
00:24:56,030 --> 00:24:57,850
A few with the api's.

358
00:24:57,850 --> 00:25:02,850
We had to talk with the Heroku guys.

359
00:25:02,850 --> 00:25:07,700
We made a deployment, but it doesn't seem
to work.

360
00:25:07,700 --> 00:25:10,770
That's the only case.

361
00:25:10,770 --> 00:25:13,590
Twice in 3-4 months.

362
00:25:13,590 --> 00:25:18,330
- I have a question.

363
00:25:18,330 --> 00:25:22,330
- What's your question Tim?

364
00:25:22,330 --> 00:25:25,880
- You can also put your hands up.

365
00:25:25,880 --> 00:25:29,410
- What are some of the tools you are thinking
in the future.

366
00:25:29,410 --> 00:25:35,909
What are you exciting to build?

367
00:25:35,909 --> 00:25:40,470
- Well, a few things.

368
00:25:40,470 --> 00:25:46,570
We want to build basically the tools are around
release management.

369
00:25:46,570 --> 00:25:51,690
Not sure, I talked to some of the Heroku guys.

370
00:25:51,690 --> 00:25:54,870
They have plans.

371
00:25:54,870 --> 00:25:56,840
We have some ideas.

372
00:25:56,840 --> 00:25:59,960
And build them ourselves.

373
00:25:59,960 --> 00:26:07,220
It is about, I'd like to know which version
of the app is in production at the moment.

374
00:26:07,220 --> 00:26:10,100
Across the entire organisation.

375
00:26:10,100 --> 00:26:13,920
We have to go into each app.

376
00:26:13,920 --> 00:26:19,700
A dashboard that could show the entire production
environment.

377
00:26:19,700 --> 00:26:25,570
I would like to see, why is this one application
different.

378
00:26:25,570 --> 00:26:29,030
If it was intentionally, it was great.

379
00:26:29,030 --> 00:26:34,780
If it is not intentionally, I want to know
about it.

380
00:26:34,780 --> 00:26:40,720
- We have time for 1 more question before
break.

381
00:26:40,720 --> 00:26:43,350
- I have got not a quite technical question.

382
00:26:43,350 --> 00:26:52,010
I'd like to ask how you plan the budgetting
for your cloud infrastructure?

383
00:26:52,010 --> 00:26:54,080
You have to provide some figures.

384
00:26:54,080 --> 00:26:56,510
Is there a tool or something that helps you?

385
00:26:56,510 --> 00:26:59,970
- Can you repeat the question?

386
00:26:59,970 --> 00:27:07,610
- well, if you have to plan the budget for
your cloud infrastructure.

387
00:27:07,610 --> 00:27:10,929
How you'd approach that?

388
00:27:10,929 --> 00:27:14,230
- We have to do that of course.

389
00:27:14,230 --> 00:27:20,020
What we did was, we said, okay.

390
00:27:20,020 --> 00:27:24,130
We did some benchmarks to price out the infrastructure.

391
00:27:24,130 --> 00:27:25,370
We took the existing website.

392
00:27:25,370 --> 00:27:28,710
What is the number of hits we get.

393
00:27:28,710 --> 00:27:31,610
Lets run up a basic version of Node.

394
00:27:31,610 --> 00:27:34,690
Run it on a local machine.

395
00:27:34,690 --> 00:27:38,410
See how many hits we can sustain.

396
00:27:38,410 --> 00:27:40,120
On Node.

397
00:27:40,120 --> 00:27:46,590
We have ran that on Amazon, on Heroku as well.

398
00:27:46,590 --> 00:27:49,950
There are add on tools for testing.

399
00:27:49,950 --> 00:27:51,410
You can get on the cloud.

400
00:27:51,410 --> 00:27:54,049
We had benchmarks.

401
00:27:54,049 --> 00:28:05,289
This instance of Node can handle for this
country, Germany, we have got 2 node instances.

402
00:28:05,289 --> 00:28:09,010
It can handle this much traffic.

403
00:28:09,010 --> 00:28:13,160
Then we can say, Germany is one of the biggest
markets.

404
00:28:13,160 --> 00:28:15,510
Everything else will match that.

405
00:28:15,510 --> 00:28:22,049
We can go to 2 dino's anywhere.

406
00:28:22,049 --> 00:28:27,190
And then we can say, if we have 30 countries,
we cost out there.

407
00:28:27,190 --> 00:28:31,160
Then you are going to peer for add ons like
MongoDb.

408
00:28:31,160 --> 00:28:35,130
They are priced up front.

409
00:28:35,130 --> 00:28:40,780
In fact it turns out to be relatively straightforward
with Heroku.

410
00:28:40,780 --> 00:28:44,090
It is more complicated with Amazon.

411
00:28:44,090 --> 00:28:48,310
All the component pieces are difficult to
see.

412
00:28:48,310 --> 00:28:51,250
I need this, that.

413
00:28:51,250 --> 00:28:56,440
So, I would say, from, it is possible to do
it at Amazon.

414
00:28:56,440 --> 00:28:59,370
We use it for a number of things.

415
00:28:59,370 --> 00:29:02,900
It is more difficult to predict with Amazon
than Heroku.

