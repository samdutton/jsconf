1
00:00:16,299 --> 00:00:20,040

you

2
00:00:20,050 --> 00:00:24,160
thank you today I'm gonna talk about a

3
00:00:24,160 --> 00:00:26,920
building fast scalable game server you

4
00:00:26,920 --> 00:00:30,610
know that ah yes this is a fast just

5
00:00:30,610 --> 00:00:33,130
cause I've ever attended this year and

6
00:00:33,130 --> 00:00:35,860
but this one by far has the best

7
00:00:35,860 --> 00:00:38,620
conference room not only this great of

8
00:00:38,620 --> 00:00:43,300
you but also look best Wi-Fi signal now

9
00:00:43,300 --> 00:00:45,160
what I find so good that I have it to

10
00:00:45,160 --> 00:00:49,750
keep a working all day and as I speak

11
00:00:49,750 --> 00:00:53,079
hurt for you guys headed in time and I'm

12
00:00:53,079 --> 00:00:56,739
Charlie curry I'm from China I work in a

13
00:00:56,739 --> 00:00:59,530
company called Nabeel it is the nasdaq

14
00:00:59,530 --> 00:01:02,350
listed company it is very big company in

15
00:01:02,350 --> 00:01:05,080
China actually and I've been working in

16
00:01:05,080 --> 00:01:07,660
that in for about eight years I have

17
00:01:07,660 --> 00:01:10,690
developed varying web game weather and

18
00:01:10,690 --> 00:01:14,649
the game products but mostly I have mob

19
00:01:14,649 --> 00:01:20,890
where background actually and so many

20
00:01:20,890 --> 00:01:23,259
people ask me where do you come from

21
00:01:23,259 --> 00:01:25,720
which stated will come from actually and

22
00:01:25,720 --> 00:01:28,869
I replied I come I come from Hunter

23
00:01:28,869 --> 00:01:29,950
ho-oh

24
00:01:29,950 --> 00:01:33,069
never heard of it we offered of eighteen

25
00:01:33,069 --> 00:01:34,990
and show hand and never heard of Hunter

26
00:01:34,990 --> 00:01:38,259
but today I will let you guys all

27
00:01:38,259 --> 00:01:43,869
remember this city hunter so anybody

28
00:01:43,869 --> 00:01:48,490
knows this guys some step I think most

29
00:01:48,490 --> 00:01:50,319
turn north or just guy should have know

30
00:01:50,319 --> 00:01:52,770
this guy because she's very cool and he

31
00:01:52,770 --> 00:01:56,440
actually maintained about hundred of

32
00:01:56,440 --> 00:01:59,530
projects on github only him alone very

33
00:01:59,530 --> 00:02:03,090
cool guy and a month ago he have

34
00:02:03,090 --> 00:02:06,429
statistics about cities for NPM

35
00:02:06,429 --> 00:02:10,420
modules and here it is okay not Fri the

36
00:02:10,420 --> 00:02:13,420
number one San Francisco number two okay

37
00:02:13,420 --> 00:02:15,730
this is where our subjects lives and

38
00:02:15,730 --> 00:02:19,000
number three in London number four New

39
00:02:19,000 --> 00:02:22,150
York number five medicine and which is

40
00:02:22,150 --> 00:02:24,730
number six how to China

41
00:02:24,730 --> 00:02:26,680
okay

42
00:02:26,680 --> 00:02:31,099
okay I'm Joe hello - biggest Internet

43
00:02:31,099 --> 00:02:33,650
company in China Alibaba and a Nettie's

44
00:02:33,650 --> 00:02:35,959
and it's also a very good at Traverse

45
00:02:35,959 --> 00:02:39,049
City so if you guys are interested are

46
00:02:39,049 --> 00:02:40,430
you travel in China

47
00:02:40,430 --> 00:02:44,660
don't miss handle so let's jump into the

48
00:02:44,660 --> 00:02:47,900
topic this is today's agenda I'm gonna

49
00:02:47,900 --> 00:02:50,360
talk about our games of a framework

50
00:02:50,360 --> 00:02:53,420
first the state and some scalability

51
00:02:53,420 --> 00:02:55,700
issue and performance issues and because

52
00:02:55,700 --> 00:02:58,400
I'm from there most from web background

53
00:02:58,400 --> 00:03:01,280
I'm will talk a little bit about real

54
00:03:01,280 --> 00:03:04,609
application real-time application

55
00:03:04,609 --> 00:03:07,910
development okay so let's get started

56
00:03:07,910 --> 00:03:11,540
formula is a fast scalable distributed

57
00:03:11,540 --> 00:03:14,299
game server framework for no--don't yes

58
00:03:14,299 --> 00:03:19,069
it was open sourced about a year ago it

59
00:03:19,069 --> 00:03:21,560
is quite popular now actually in China

60
00:03:21,560 --> 00:03:24,230
but not only in China after I spoke her

61
00:03:24,230 --> 00:03:27,890
ingest configure two months ago the NPM

62
00:03:27,890 --> 00:03:30,769
download account held in double and the

63
00:03:30,769 --> 00:03:32,810
many guide is from America and Europe

64
00:03:32,810 --> 00:03:37,220
here and what Tommy no can do formula is

65
00:03:37,220 --> 00:03:40,090
a game server framework it can develop

66
00:03:40,090 --> 00:03:42,980
mobile game web games social game and

67
00:03:42,980 --> 00:03:46,370
even I'm a marketer and only one premise

68
00:03:46,370 --> 00:03:48,950
it I need a real time now to you the

69
00:03:48,950 --> 00:03:51,099
interruption it means that only

70
00:03:51,099 --> 00:03:53,750
multiplayer game neither this rumor if

71
00:03:53,750 --> 00:03:56,290
you are developing a single-player game

72
00:03:56,290 --> 00:03:59,120
you do not need our free look at all and

73
00:03:59,120 --> 00:04:02,299
it is also a real-time applications of a

74
00:04:02,299 --> 00:04:06,040
framework actually it can develop

75
00:04:06,040 --> 00:04:08,900
real-time application holding millions

76
00:04:08,900 --> 00:04:12,950
online users we have an actually you

77
00:04:12,950 --> 00:04:15,230
don't you look it for that formula is

78
00:04:15,230 --> 00:04:17,810
not a single project if you take a look

79
00:04:17,810 --> 00:04:20,479
at I will get half it holds about more

80
00:04:20,479 --> 00:04:23,870
than 40 projects there so what is all

81
00:04:23,870 --> 00:04:26,720
this project about well let's include

82
00:04:26,720 --> 00:04:29,810
many demos and also there are many

83
00:04:29,810 --> 00:04:33,909
client libraries including say iOS

84
00:04:33,909 --> 00:04:35,760
Android and

85
00:04:35,760 --> 00:04:39,150
quit even unity3d all these crimes and

86
00:04:39,150 --> 00:04:44,160
many tours like Adam in control and well

87
00:04:44,160 --> 00:04:46,950
commander line thought and also some

88
00:04:46,950 --> 00:04:50,250
many many plugins and libraries like the

89
00:04:50,250 --> 00:04:52,710
I was funny and beneath it in the

90
00:04:52,710 --> 00:04:55,590
framework and this is our github address

91
00:04:55,590 --> 00:04:59,190
and this is our main project between the

92
00:04:59,190 --> 00:05:01,800
writing quite quickly actually there are

93
00:05:01,800 --> 00:05:03,990
already many success Christian in China

94
00:05:03,990 --> 00:05:07,080
now and this is one of it it is a car

95
00:05:07,080 --> 00:05:10,080
game called as a moon and they have many

96
00:05:10,080 --> 00:05:13,290
online users and this is another way it

97
00:05:13,290 --> 00:05:17,280
is correlation so basically it is a

98
00:05:17,280 --> 00:05:20,490
little like crash escape but they say

99
00:05:20,490 --> 00:05:22,470
they have many online you doesn't know

100
00:05:22,470 --> 00:05:27,360
and as I said it formula is also

101
00:05:27,360 --> 00:05:29,610
suitable for real-time application and

102
00:05:29,610 --> 00:05:31,830
the some guy developed this game this is

103
00:05:31,830 --> 00:05:35,580
project it is a real-time chat mobile

104
00:05:35,580 --> 00:05:40,680
chat application it can chattering voice

105
00:05:40,680 --> 00:05:49,230
and there are also many successes like

106
00:05:49,230 --> 00:05:52,290
there I will not eat a richer one my way

107
00:05:52,290 --> 00:05:55,140
actually there are many card games and a

108
00:05:55,140 --> 00:05:57,690
many real-time application and they are

109
00:05:57,690 --> 00:06:00,930
also many job-hunting out of time out

110
00:06:00,930 --> 00:06:03,720
there so this is evolved it look at

111
00:06:03,720 --> 00:06:06,660
obscure number one no jest number two

112
00:06:06,660 --> 00:06:09,540
ready number four my cycle which is

113
00:06:09,540 --> 00:06:11,880
number four hello

114
00:06:11,880 --> 00:06:14,850
okay many of their has out they are like

115
00:06:14,850 --> 00:06:16,230
their yeah

116
00:06:16,230 --> 00:06:21,620
and today I'm gonna focus on scalability

117
00:06:21,620 --> 00:06:24,630
because I have given many briefs talked

118
00:06:24,630 --> 00:06:26,910
about this three month before today I'm

119
00:06:26,910 --> 00:06:30,570
gonna focus on scalability and to make

120
00:06:30,570 --> 00:06:33,720
you guys know what the game like I will

121
00:06:33,720 --> 00:06:35,580
show you a little demo about this game

122
00:06:35,580 --> 00:06:39,180
let's start the game demo because I run

123
00:06:39,180 --> 00:06:42,450
in the local I actually have five online

124
00:06:42,450 --> 00:06:44,700
users it can actually hold about a

125
00:06:44,700 --> 00:06:45,940
thousand Caroline

126
00:06:45,940 --> 00:06:49,660
and the art material you the press you

127
00:06:49,660 --> 00:06:51,910
can just take them good night because

128
00:06:51,910 --> 00:06:53,740
today I'm talking about a game server

129
00:06:53,740 --> 00:06:57,040
the crime side material just a crap okay

130
00:06:57,040 --> 00:06:59,320
and let's see you know what does the

131
00:06:59,320 --> 00:07:01,240
game like you see there now I'm not much

132
00:07:01,240 --> 00:07:06,500
oxygen it can it's my mouth

133
00:07:06,510 --> 00:07:09,870
okay the players can working around

134
00:07:09,870 --> 00:07:11,350
fighting each other

135
00:07:11,350 --> 00:07:14,080
oh it it can attack Earl the other

136
00:07:14,080 --> 00:07:17,770
player and also can attack the master

137
00:07:17,770 --> 00:07:20,770
and the master we are so quorum attached

138
00:07:20,770 --> 00:07:23,980
me it is driven by official intelligence

139
00:07:23,980 --> 00:07:31,090
and also I can run and this way this

140
00:07:31,090 --> 00:07:35,100
Elena Missy and I can run to another

141
00:07:35,100 --> 00:07:40,150
math area actually oh here I am I am me

142
00:07:40,150 --> 00:07:44,680
another area and they see the water the

143
00:07:44,680 --> 00:07:49,600
game like basically okay so you guys get

144
00:07:49,600 --> 00:07:52,360
any idea what a game like and we can go

145
00:07:52,360 --> 00:08:01,510
on scalability web service are usually

146
00:08:01,510 --> 00:08:03,880
help and let me do the scalability but

147
00:08:03,880 --> 00:08:06,760
game server usually is not a scalable at

148
00:08:06,760 --> 00:08:10,060
that for example you have a word

149
00:08:10,060 --> 00:08:12,760
encourage there that it can have a tone

150
00:08:12,760 --> 00:08:17,110
about 7000 online users but it city then

151
00:08:17,110 --> 00:08:19,510
I know Marty to did it cannot hold that

152
00:08:19,510 --> 00:08:22,750
come line users actually 7000 is the

153
00:08:22,750 --> 00:08:26,140
most okay why why game server is not a

154
00:08:26,140 --> 00:08:29,950
scalable as well so let's start from the

155
00:08:29,950 --> 00:08:35,260
illest long connection game server need

156
00:08:35,260 --> 00:08:36,969
a lot connection for two reasons the

157
00:08:36,969 --> 00:08:39,940
first reason is immediate response time

158
00:08:39,940 --> 00:08:42,729
game needed to response in very very

159
00:08:42,729 --> 00:08:45,190
short time like less than a hundred

160
00:08:45,190 --> 00:08:47,110
milliseconds so we must use long

161
00:08:47,110 --> 00:08:49,630
connection the other reason is by

162
00:08:49,630 --> 00:08:54,940
direction message flow we not only need

163
00:08:54,940 --> 00:08:58,450
to request to make a request to the web

164
00:08:58,450 --> 00:08:59,310
server we

165
00:08:59,310 --> 00:09:01,080
you know to push a message back to the

166
00:09:01,080 --> 00:09:03,330
crime so we need a pint direction

167
00:09:03,330 --> 00:09:07,130
connect connect so we need this

168
00:09:07,130 --> 00:09:10,860
Gong crashes so actually but this

169
00:09:10,860 --> 00:09:14,040
problem is very little so because we are

170
00:09:14,040 --> 00:09:16,200
using no tutorials this is why we are

171
00:09:16,200 --> 00:09:18,750
using no touch yes because it will

172
00:09:18,750 --> 00:09:21,210
design the for event-driven i/o and it

173
00:09:21,210 --> 00:09:23,730
is very good at holding connection

174
00:09:23,730 --> 00:09:25,140
between very good at real-time

175
00:09:25,140 --> 00:09:27,210
application and network incentive

176
00:09:27,210 --> 00:09:30,600
application in our case if we you are

177
00:09:30,600 --> 00:09:32,730
you'll in sock-doc tayo we can hold

178
00:09:32,730 --> 00:09:36,330
about 25,000 dying one process but if

179
00:09:36,330 --> 00:09:39,089
you are using QT t it can hold about a

180
00:09:39,089 --> 00:09:41,040
hundred and twenty thousand connections

181
00:09:41,040 --> 00:09:44,430
so this problem can be solved we just

182
00:09:44,430 --> 00:09:48,029
eat many many mem memories we can add a

183
00:09:48,029 --> 00:09:51,020
machine and make the online users okay

184
00:09:51,020 --> 00:09:54,930
but the second problem is not that easy

185
00:09:54,930 --> 00:09:58,589
to solve it is called state for so where

186
00:09:58,589 --> 00:10:01,560
the application usually is not stateful

187
00:10:01,560 --> 00:10:04,880
it is stateless it we can partition the

188
00:10:04,880 --> 00:10:07,620
randomly and the each request can be

189
00:10:07,620 --> 00:10:10,500
routed to any server but game is

190
00:10:10,500 --> 00:10:14,040
designed in different way game server

191
00:10:14,040 --> 00:10:16,710
you in this case you partition the pie

192
00:10:16,710 --> 00:10:20,580
area so what is that mean so you can see

193
00:10:20,580 --> 00:10:22,740
the demo before when I'm watching a role

194
00:10:22,740 --> 00:10:26,190
in the map I am in one process when I am

195
00:10:26,190 --> 00:10:28,290
escape into another where I'm actually

196
00:10:28,290 --> 00:10:31,410
get into another process so why

197
00:10:31,410 --> 00:10:34,530
designing in this way because most of

198
00:10:34,530 --> 00:10:37,500
the player interruption happen in one

199
00:10:37,500 --> 00:10:40,410
day so we can do it in one process and

200
00:10:40,410 --> 00:10:42,300
all this interaction can be done in

201
00:10:42,300 --> 00:10:45,060
memory they feel the nature of game so

202
00:10:45,060 --> 00:10:48,420
but because of this partition strategy

203
00:10:48,420 --> 00:10:50,700
we have a problem of State for each

204
00:10:50,700 --> 00:10:53,190
requester come from the cry site must be

205
00:10:53,190 --> 00:10:55,050
routed to this server not that's the way

206
00:10:55,050 --> 00:10:56,400
and that's the one

207
00:10:56,400 --> 00:10:59,540
so how to solve this problem actually

208
00:10:59,540 --> 00:11:03,510
this cannot be solved in technical level

209
00:11:03,510 --> 00:11:08,190
it can be depending on game design we

210
00:11:08,190 --> 00:11:10,800
cannot make one hair we are too crowded

211
00:11:10,800 --> 00:11:12,490
we need a parents

212
00:11:12,490 --> 00:11:15,730
area for example this is a case of a too

213
00:11:15,730 --> 00:11:18,399
crowded area too much players in one

214
00:11:18,399 --> 00:11:21,010
death and this process cannot hold too

215
00:11:21,010 --> 00:11:22,779
much some line user and it will crash

216
00:11:22,779 --> 00:11:28,020
and this is a much better design I can

217
00:11:28,020 --> 00:11:31,540
it's not that proud and the process can

218
00:11:31,540 --> 00:11:36,580
hold this online users and it come to

219
00:11:36,580 --> 00:11:39,370
the third problem it is quite difficult

220
00:11:39,370 --> 00:11:41,920
it's called broadcast because indeed

221
00:11:41,920 --> 00:11:44,020
when I'm watching wrong or fighting

222
00:11:44,020 --> 00:11:46,120
I needed the other players see me right

223
00:11:46,120 --> 00:11:48,100
so I need a push message to all the

224
00:11:48,100 --> 00:11:50,589
other players if they are you the only

225
00:11:50,589 --> 00:11:54,910
one player in the area so I only need a

226
00:11:54,910 --> 00:11:56,589
to push the message to me or no message

227
00:11:56,589 --> 00:11:59,580
at ha so one message II one message out

228
00:11:59,580 --> 00:12:02,920
if there are two players in the area

229
00:12:02,920 --> 00:12:05,410
how many message are needed to notify

230
00:12:05,410 --> 00:12:08,200
myself and notify to another player so

231
00:12:08,200 --> 00:12:10,930
two messaging for message up that hill

232
00:12:10,930 --> 00:12:11,320
okay

233
00:12:11,320 --> 00:12:15,250
and if they are about four players how

234
00:12:15,250 --> 00:12:20,250
many messages sixteen that is also okay

235
00:12:20,250 --> 00:12:23,820
note about us can handle this no problem

236
00:12:23,820 --> 00:12:27,040
if there are about a hundred online

237
00:12:27,040 --> 00:12:30,430
users how many messages ten thousand

238
00:12:30,430 --> 00:12:33,820
that we've a lot of messages heavy if

239
00:12:33,820 --> 00:12:36,910
they're about thousand players in one

240
00:12:36,910 --> 00:12:38,410
area how many messages

241
00:12:38,410 --> 00:12:44,230
Emilia holy no process can hold

242
00:12:44,230 --> 00:12:49,630
this online users so how can we handle

243
00:12:49,630 --> 00:12:55,149
this okay the first strategy is quite

244
00:12:55,149 --> 00:12:56,620
easy actually

245
00:12:56,620 --> 00:13:00,399
it's you call the Aoi it is an algorithm

246
00:13:00,399 --> 00:13:03,790
the idea is that when I broadcast to all

247
00:13:03,790 --> 00:13:05,770
the other players I do not need to

248
00:13:05,770 --> 00:13:09,430
broadcast all the players in the map I

249
00:13:09,430 --> 00:13:11,770
only needed to broadcast to the players

250
00:13:11,770 --> 00:13:16,570
who can see me so this is what this

251
00:13:16,570 --> 00:13:21,190
module is builder we use an algorithm

252
00:13:21,190 --> 00:13:22,850
called a power

253
00:13:22,850 --> 00:13:25,489
and in the center is tower and in the

254
00:13:25,489 --> 00:13:28,339
screen who can see me only in the center

255
00:13:28,339 --> 00:13:31,579
this nine rectangles can see me and all

256
00:13:31,579 --> 00:13:34,009
the other the outsider cannot see me so

257
00:13:34,009 --> 00:13:36,949
I need not to notify all they are the

258
00:13:36,949 --> 00:13:41,709
players I only need to notify all nine

259
00:13:41,709 --> 00:13:45,649
rectangles in this area okay this can

260
00:13:45,649 --> 00:13:49,039
save a lot of broadcast and the second

261
00:13:49,039 --> 00:13:49,609
problem

262
00:13:49,609 --> 00:13:52,759
yep the second solution you separate the

263
00:13:52,759 --> 00:13:57,379
process I remember the guy before have

264
00:13:57,379 --> 00:14:01,489
you talked about it a year if we have

265
00:14:01,489 --> 00:14:04,759
all the logics in one process for

266
00:14:04,759 --> 00:14:07,399
example game logic and broadcast erotic

267
00:14:07,399 --> 00:14:11,209
all this process can eat a steep hill

268
00:14:11,209 --> 00:14:15,829
right so fight each other and the 5000

269
00:14:15,829 --> 00:14:19,069
will go down yeah so what can we do we

270
00:14:19,069 --> 00:14:21,289
can split in the process into front end

271
00:14:21,289 --> 00:14:24,019
and back end the front end the server we

272
00:14:24,019 --> 00:14:26,600
are do all the connection starts it will

273
00:14:26,600 --> 00:14:29,149
broadcast to the crime side but we do

274
00:14:29,149 --> 00:14:31,519
not do the business logic the business

275
00:14:31,519 --> 00:14:34,239
logic is done in the backend server and

276
00:14:34,239 --> 00:14:39,679
it have another benefit although the

277
00:14:39,679 --> 00:14:41,689
game server is paid for

278
00:14:41,689 --> 00:14:43,669
yes the back instead for but the front

279
00:14:43,669 --> 00:14:47,269
end it's actually it can be up to many

280
00:14:47,269 --> 00:14:50,379
many processes and I have no problem so

281
00:14:50,379 --> 00:14:55,309
and so the solution is also about game

282
00:14:55,309 --> 00:14:58,069
design because even we have the air

283
00:14:58,069 --> 00:15:01,429
groom is muscle you I if I are all the

284
00:15:01,429 --> 00:15:03,979
players in in this single place so I

285
00:15:03,979 --> 00:15:06,739
also needed to broadcast all the players

286
00:15:06,739 --> 00:15:10,699
right well we need a tool dispense the

287
00:15:10,699 --> 00:15:12,979
bone place and make the character not

288
00:15:12,979 --> 00:15:17,720
her not crowded in one place so usually

289
00:15:17,720 --> 00:15:20,809
we can dispense this one place in too

290
00:15:20,809 --> 00:15:24,470
many places and each of place is not

291
00:15:24,470 --> 00:15:27,619
that crowded and the first strategy is

292
00:15:27,619 --> 00:15:30,799
called a push schedule and it is much

293
00:15:30,799 --> 00:15:33,519
more about the real-time application or

294
00:15:33,519 --> 00:15:35,600
something like that

295
00:15:35,600 --> 00:15:36,499
for example

296
00:15:36,499 --> 00:15:40,369
neither to broadcast an advice advertise

297
00:15:40,369 --> 00:15:44,089
to five million online users do I'm here

298
00:15:44,089 --> 00:15:49,399
to broadcasting 15 milliseconds no I can

299
00:15:49,399 --> 00:15:51,559
broadcast my minutes are comments that

300
00:15:51,559 --> 00:15:54,829
feel okay so in this way I can define

301
00:15:54,829 --> 00:15:57,139
our strategy and this is how it's

302
00:15:57,139 --> 00:16:01,879
defined in formula for example I can't

303
00:16:01,879 --> 00:16:04,909
broadcast about 10,000 messages and I

304
00:16:04,909 --> 00:16:08,119
have a rest and check out the city you

305
00:16:08,119 --> 00:16:11,659
saw I can rest a while and when does if

306
00:16:11,659 --> 00:16:15,049
you use free I can broadcaster the next

307
00:16:15,049 --> 00:16:18,319
message and it is depend on your

308
00:16:18,319 --> 00:16:20,269
business logic and i/o scheduler

309
00:16:20,269 --> 00:16:22,369
strategy okay

310
00:16:22,369 --> 00:16:25,759
come to the fourth problem tip it is

311
00:16:25,759 --> 00:16:30,499
also called game look we not only have

312
00:16:30,499 --> 00:16:32,239
game Luffy in the crime side we also

313
00:16:32,239 --> 00:16:34,549
have game loose on the suicide it is

314
00:16:34,549 --> 00:16:37,239
something like that average a hundred

315
00:16:37,239 --> 00:16:39,859
milliseconds I needed to update many

316
00:16:39,859 --> 00:16:43,909
things for example I am bad so I should

317
00:16:43,909 --> 00:16:46,759
remove you from anti-terrorist make sure

318
00:16:46,759 --> 00:16:50,239
you disappear and I move if I move I

319
00:16:50,239 --> 00:16:53,089
will in the next tip I will put you to

320
00:16:53,089 --> 00:16:58,279
another place and for example you have

321
00:16:58,279 --> 00:17:00,979
some revival and also the it were

322
00:17:00,979 --> 00:17:02,959
trailer trial date artificial

323
00:17:02,959 --> 00:17:07,459
intelligence because monster and I might

324
00:17:07,459 --> 00:17:09,679
be father master we are attacked me

325
00:17:09,679 --> 00:17:11,509
please driven by the I and the dead

326
00:17:11,509 --> 00:17:17,689
logic is also driven in the stick if a

327
00:17:17,689 --> 00:17:20,179
tick in a hundred milliseconds all these

328
00:17:20,179 --> 00:17:21,319
after logics

329
00:17:21,319 --> 00:17:24,110
should be far less than a hundred

330
00:17:24,110 --> 00:17:28,610
milliseconds for example 40 milliseconds

331
00:17:28,610 --> 00:17:30,889
is at most we need to throw some space

332
00:17:30,889 --> 00:17:35,210
so how do we solve it the entity number

333
00:17:35,210 --> 00:17:37,070
should be limited because we needed to

334
00:17:37,070 --> 00:17:39,049
iterate all the end at the end and do

335
00:17:39,049 --> 00:17:41,330
some update stuff we should a limit

336
00:17:41,330 --> 00:17:45,139
early entry number another second is the

337
00:17:45,139 --> 00:17:47,059
attention to the algorithm because we

338
00:17:47,059 --> 00:17:49,809
have a I'm algorithm in each dick if

339
00:17:49,809 --> 00:17:51,999
there are algorithm pick too much time

340
00:17:51,999 --> 00:17:56,229
oh that's a very crash and the third

341
00:17:56,229 --> 00:18:00,729
problem is about to see because Fuji say

342
00:18:00,729 --> 00:18:01,869
is horrible right

343
00:18:01,869 --> 00:18:04,929
especially in Java usually take about a

344
00:18:04,929 --> 00:18:07,989
few seconds and if you configure not

345
00:18:07,989 --> 00:18:11,529
right maybe a minute no that seem crazy

346
00:18:11,529 --> 00:18:15,519
for game but I find that weirdly very

347
00:18:15,519 --> 00:18:17,830
good at garbage corruption actually I

348
00:18:17,830 --> 00:18:21,399
have talked a few guys from Google in

349
00:18:21,399 --> 00:18:23,830
their team and the dart team and

350
00:18:23,830 --> 00:18:26,320
actually if you can control the memory

351
00:18:26,320 --> 00:18:31,919
under fifty thousand fifty five hundred

352
00:18:31,919 --> 00:18:35,589
megabytes it have a very very good to

353
00:18:35,589 --> 00:18:40,659
say performance actually even for GC can

354
00:18:40,659 --> 00:18:43,210
only take about 30 milliseconds that is

355
00:18:43,210 --> 00:18:46,960
very good so v8 is very good at it but

356
00:18:46,960 --> 00:18:50,289
we should pay attention to make the

357
00:18:50,289 --> 00:18:53,049
memory be limited we should have tried

358
00:18:53,049 --> 00:18:58,330
to divide the process as possible the

359
00:18:58,330 --> 00:18:59,619
more is possible we should have divide

360
00:18:59,619 --> 00:19:05,469
the process into single task so in this

361
00:19:05,469 --> 00:19:08,219
way this is embark of the runtime

362
00:19:08,219 --> 00:19:12,219
architecture this is it okay it's quite

363
00:19:12,219 --> 00:19:15,129
complicated in the front hand either a

364
00:19:15,129 --> 00:19:17,979
bunch of connect service it's just how

365
00:19:17,979 --> 00:19:19,539
the connections we are not to the

366
00:19:19,539 --> 00:19:22,929
business logic and the backend is where

367
00:19:22,929 --> 00:19:25,629
this the business logic is done and we

368
00:19:25,629 --> 00:19:28,690
can see we divided many processes we can

369
00:19:28,690 --> 00:19:31,389
so we not come we err your server even

370
00:19:31,389 --> 00:19:33,129
actually Chris they are usually about

371
00:19:33,129 --> 00:19:35,259
twenty process is something like that

372
00:19:35,259 --> 00:19:37,960
and each one do its own job like a

373
00:19:37,960 --> 00:19:40,359
server service tests or something like

374
00:19:40,359 --> 00:19:43,599
that and when the business logic is done

375
00:19:43,599 --> 00:19:45,219
to a push message back from the

376
00:19:45,219 --> 00:19:47,019
connector and the connector will push

377
00:19:47,019 --> 00:19:49,690
back to the client so it's a quite

378
00:19:49,690 --> 00:19:51,580
complicated distributed architecture

379
00:19:51,580 --> 00:19:54,940
right so how do we solve this

380
00:19:54,940 --> 00:19:58,670
the solution is framework so

381
00:19:58,670 --> 00:20:00,830
let's jump to the third part framework

382
00:20:00,830 --> 00:20:07,030
and the essence of Hamelin is a

383
00:20:07,030 --> 00:20:09,320
distributive scalable real-time

384
00:20:09,320 --> 00:20:12,080
application for a work actually if you

385
00:20:12,080 --> 00:20:14,870
take a look at the core of our framework

386
00:20:14,870 --> 00:20:17,660
it has nothing to do it again it is just

387
00:20:17,660 --> 00:20:20,720
a real-time framework but it is not

388
00:20:20,720 --> 00:20:24,110
similar to media or Derby or something

389
00:20:24,110 --> 00:20:26,929
like that it is not an MVC framework the

390
00:20:26,929 --> 00:20:29,260
car Camilla is to make distributor

391
00:20:29,260 --> 00:20:32,179
programming as easily as possible so

392
00:20:32,179 --> 00:20:34,910
let's take a brief look at the design

393
00:20:34,910 --> 00:20:39,500
goal the first goal is about abstract of

394
00:20:39,500 --> 00:20:42,290
service we have we can see there are

395
00:20:42,290 --> 00:20:44,720
many many process we need a simple way

396
00:20:44,720 --> 00:20:47,000
to scale up or down all these service

397
00:20:47,000 --> 00:20:50,720
and easy as possible and the second girl

398
00:20:50,720 --> 00:20:53,660
is about abstract offer request response

399
00:20:53,660 --> 00:20:56,900
and broadcast this is the basic API of

400
00:20:56,900 --> 00:20:59,030
cream server request the response is

401
00:20:59,030 --> 00:21:00,950
similar to web server web server also

402
00:21:00,950 --> 00:21:03,410
have it but we need another directions

403
00:21:03,410 --> 00:21:05,179
message we need a broadcast of the

404
00:21:05,179 --> 00:21:09,470
message back to the client and the third

405
00:21:09,470 --> 00:21:12,950
problem so the design go in about RPC

406
00:21:12,950 --> 00:21:15,980
framework actually we use a very very

407
00:21:15,980 --> 00:21:19,090
hot is very very simple RPC mechanism

408
00:21:19,090 --> 00:21:22,490
because in this case we can make it a

409
00:21:22,490 --> 00:21:28,549
very very easy but and I have talked to

410
00:21:28,549 --> 00:21:30,530
all about these issues in other

411
00:21:30,530 --> 00:21:33,710
conference before many times so today I

412
00:21:33,710 --> 00:21:37,610
am gone I'm not gonna dig a deep play in

413
00:21:37,610 --> 00:21:39,590
this area I'm gonna talk to some

414
00:21:39,590 --> 00:21:42,970
framework features about scalability and

415
00:21:42,970 --> 00:21:46,220
he I used three features the first thing

416
00:21:46,220 --> 00:21:47,929
service scalability the second is

417
00:21:47,929 --> 00:21:52,250
network 30 plugins so let's start with

418
00:21:52,250 --> 00:21:55,220
service scalability we designed the

419
00:21:55,220 --> 00:21:57,860
server as duck time so almost a no

420
00:21:57,860 --> 00:22:00,169
configuration file you can stock up but

421
00:22:00,169 --> 00:22:01,850
the are you I'm gonna go what

422
00:22:01,850 --> 00:22:04,580
configuration fire neither and it is in

423
00:22:04,580 --> 00:22:09,110
the JSON file and in the oxide we have

424
00:22:09,110 --> 00:22:10,410
one connection

425
00:22:10,410 --> 00:22:12,390
and one church service so this is the

426
00:22:12,390 --> 00:22:15,390
runtime architecture right like this so

427
00:22:15,390 --> 00:22:19,200
how can I stop we just changed this JSON

428
00:22:19,200 --> 00:22:23,040
file three connector through your chest

429
00:22:23,040 --> 00:22:25,710
over no code I needed a draft change

430
00:22:25,710 --> 00:22:28,650
this configuration file oops get up very

431
00:22:28,650 --> 00:22:32,430
very easy we also support another kind

432
00:22:32,430 --> 00:22:35,490
of stuff we can dynamically add a server

433
00:22:35,490 --> 00:22:38,880
in runtime it is a command line to start

434
00:22:38,880 --> 00:22:42,330
our server in runtime so with this

435
00:22:42,330 --> 00:22:46,200
mechanism I can scale up in runtime like

436
00:22:46,200 --> 00:22:49,440
cloud computing we can write a very good

437
00:22:49,440 --> 00:22:53,010
sheer sheer script if I find we found

438
00:22:53,010 --> 00:22:55,200
that the resource is not enough I just

439
00:22:55,200 --> 00:22:58,200
give up in this shell script very very

440
00:22:58,200 --> 00:23:03,050
easy so this is the first problem the

441
00:23:03,050 --> 00:23:07,160
second problem is network when we

442
00:23:07,160 --> 00:23:11,580
released our framework a year ago we

443
00:23:11,580 --> 00:23:14,820
only support such that I applied socket

444
00:23:14,820 --> 00:23:15,300
IO

445
00:23:15,300 --> 00:23:19,200
is very good at browser client right it

446
00:23:19,200 --> 00:23:21,510
is very good at browser compatibility

447
00:23:21,510 --> 00:23:25,680
but it turned out most of our customers

448
00:23:25,680 --> 00:23:29,820
users are from mobile background they

449
00:23:29,820 --> 00:23:33,210
said who are using Jessie that is twist

450
00:23:33,210 --> 00:23:38,070
for very very much bandwidth so we need

451
00:23:38,070 --> 00:23:42,810
another protocol like binary and small

452
00:23:42,810 --> 00:23:45,330
pendants as possible so we developed

453
00:23:45,330 --> 00:23:47,880
another connector which called hybrid

454
00:23:47,880 --> 00:23:50,990
connector and also we form of our

455
00:23:50,990 --> 00:23:54,560
developer and qtd connector by ourselves

456
00:23:54,560 --> 00:23:59,340
and so I'm gonna dig deep about a hybrid

457
00:23:59,340 --> 00:24:02,940
connector and this feel how the package

458
00:24:02,940 --> 00:24:05,580
is encoded and decoded I actually have

459
00:24:05,580 --> 00:24:08,760
three levels the first time we are

460
00:24:08,760 --> 00:24:10,980
including improved pasture contains some

461
00:24:10,980 --> 00:24:14,280
message encoded I will not a big detail

462
00:24:14,280 --> 00:24:17,580
about this today I'm gonna focus Oh

463
00:24:17,580 --> 00:24:20,950
broke it off so

464
00:24:20,950 --> 00:24:24,430
this is what we usually prefer fleas

465
00:24:24,430 --> 00:24:26,830
that we write some prefer buff

466
00:24:26,830 --> 00:24:29,800
definition right and we compile it we

467
00:24:29,800 --> 00:24:31,840
run some command line compiled and we

468
00:24:31,840 --> 00:24:34,690
deploy copy this code to the sauce to

469
00:24:34,690 --> 00:24:38,680
our project and when the entity streams

470
00:24:38,680 --> 00:24:42,880
up I'm here to rewrite our protocol and

471
00:24:42,880 --> 00:24:45,820
compile it again and copied who needed

472
00:24:45,820 --> 00:24:46,150
that

473
00:24:46,150 --> 00:24:51,610
yeah oh we need a better strategy and

474
00:24:51,610 --> 00:24:55,120
this is our strategy we just write our

475
00:24:55,120 --> 00:24:59,050
protocol definition we do not need a to

476
00:24:59,050 --> 00:25:01,420
compile we do not need to do anything

477
00:25:01,420 --> 00:25:05,110
just this definition changes well we can

478
00:25:05,110 --> 00:25:07,600
encode in this definition and no

479
00:25:07,600 --> 00:25:11,020
comparison and in Okabe so how do we do

480
00:25:11,020 --> 00:25:13,270
it and this field a configuration case

481
00:25:13,270 --> 00:25:17,020
so you say we this is our configuration

482
00:25:17,020 --> 00:25:19,720
file it is a little similar to Express

483
00:25:19,720 --> 00:25:24,460
and if you take a look at we use the

484
00:25:24,460 --> 00:25:26,470
hybrid connector and the way you wrote

485
00:25:26,470 --> 00:25:30,070
about and with this configuration and

486
00:25:30,070 --> 00:25:33,100
what else would we do we just need ax

487
00:25:33,100 --> 00:25:36,910
and proto talk about definition and you

488
00:25:36,910 --> 00:25:39,220
can see we defined in the right style

489
00:25:39,220 --> 00:25:39,790
its

490
00:25:39,790 --> 00:25:43,870
amo it tis a proto buffer finishing of

491
00:25:43,870 --> 00:25:47,260
the message and with that we have

492
00:25:47,260 --> 00:25:50,440
nothing needs to be done just that with

493
00:25:50,440 --> 00:25:54,100
push message with a loaf and boot all

494
00:25:54,100 --> 00:25:57,270
these entities we are transferred from

495
00:25:57,270 --> 00:25:59,800
jason to protobuf and a pushback

496
00:25:59,800 --> 00:26:02,950
prescribed it's that simple if there is

497
00:26:02,950 --> 00:26:05,820
no definition in the right side it will

498
00:26:05,820 --> 00:26:10,180
transfer interesting format and it is

499
00:26:10,180 --> 00:26:12,940
also a key that we open sourced upon me

500
00:26:12,940 --> 00:26:16,630
antonio probe us as a single project any

501
00:26:16,630 --> 00:26:19,980
of you guys can use this product person

502
00:26:19,980 --> 00:26:23,380
in a single project it's quite easy and

503
00:26:23,380 --> 00:26:26,410
this is the API I will not pick TV in

504
00:26:26,410 --> 00:26:32,170
this so with protobuf compression 4400

505
00:26:32,170 --> 00:26:33,700
online users

506
00:26:33,700 --> 00:26:39,050
originally it need about 3,600 flow

507
00:26:39,050 --> 00:26:44,870
bytes and with pretty bad about 25% well

508
00:26:44,870 --> 00:26:48,400
set receive a lot of network flow so

509
00:26:48,400 --> 00:26:52,340
this is about network and the last part

510
00:26:52,340 --> 00:26:55,820
in cloudy cloudy is a mechanism to

511
00:26:55,820 --> 00:27:00,890
extend our framework so it to use

512
00:27:00,890 --> 00:27:03,410
component and events and it is quite

513
00:27:03,410 --> 00:27:04,130
easy actually

514
00:27:04,130 --> 00:27:06,950
but what is the relationship of between

515
00:27:06,950 --> 00:27:09,680
planning and a scalability actually it

516
00:27:09,680 --> 00:27:13,010
related a lot because we find that many

517
00:27:13,010 --> 00:27:17,060
many services need except for a service

518
00:27:17,060 --> 00:27:20,270
for example online status we need a

519
00:27:20,270 --> 00:27:23,450
greatest we do Redis to store all this

520
00:27:23,450 --> 00:27:28,700
online status right but if we write all

521
00:27:28,700 --> 00:27:31,820
this code in our main project between a

522
00:27:31,820 --> 00:27:34,190
problem because our main project will

523
00:27:34,190 --> 00:27:38,240
rely on reddit and if some guy said oh I

524
00:27:38,240 --> 00:27:41,300
do not get like radish I like MongoDB so

525
00:27:41,300 --> 00:27:44,840
we need to import MongoDB our main code

526
00:27:44,840 --> 00:27:48,200
base but with Robbie I can do things

527
00:27:48,200 --> 00:27:51,620
like that we just if you don't use this

528
00:27:51,620 --> 00:27:55,610
plug-in and both this this framework

529
00:27:55,610 --> 00:27:59,630
have the ability of skill up in being

530
00:27:59,630 --> 00:28:03,440
Redis and if I need a MongoDB I just

531
00:28:03,440 --> 00:28:06,110
write another plugin and use it and I

532
00:28:06,110 --> 00:28:09,620
have the ability of use MongoDB and

533
00:28:09,620 --> 00:28:13,630
online status ok here is another example

534
00:28:13,630 --> 00:28:19,250
master we use a master process to manage

535
00:28:19,250 --> 00:28:21,560
all the other processes the other

536
00:28:21,560 --> 00:28:25,070
process is maybe 50 or maybe 20 many

537
00:28:25,070 --> 00:28:27,890
processes so what is this master process

538
00:28:27,890 --> 00:28:32,480
is crashed crashed or crashed so how can

539
00:28:32,480 --> 00:28:35,210
we guarantee our master process is not

540
00:28:35,210 --> 00:28:38,300
crashed we can use the keeper and we

541
00:28:38,300 --> 00:28:41,810
have this in the strategy we have to

542
00:28:41,810 --> 00:28:46,720
slave processes of master yet we are

543
00:28:46,720 --> 00:28:50,110
only in normal cases only this must

544
00:28:50,110 --> 00:28:53,730
process do the job but when I am crushed

545
00:28:53,730 --> 00:28:57,429
does it maintain a heartbeat - zookeeper

546
00:28:57,429 --> 00:28:58,929
zookeeper we all know that

547
00:28:58,929 --> 00:29:01,330
oh so many proves the main master you

548
00:29:01,330 --> 00:29:04,450
crashed it we are a mere 10 what I'm

549
00:29:04,450 --> 00:29:07,630
watching event and the two slaves were

550
00:29:07,630 --> 00:29:10,780
select oh I want to be master and the

551
00:29:10,780 --> 00:29:12,580
trust level we are competing to each

552
00:29:12,580 --> 00:29:14,230
other and the one we are the selection

553
00:29:14,230 --> 00:29:16,450
area the master and after the slaves

554
00:29:16,450 --> 00:29:19,419
become master so zookeeper we are

555
00:29:19,419 --> 00:29:21,700
notified all this message to all the

556
00:29:21,700 --> 00:29:23,559
other processes and the other process

557
00:29:23,559 --> 00:29:26,409
note oh the master changer I needed to

558
00:29:26,409 --> 00:29:28,390
reconnect so how the other process will

559
00:29:28,390 --> 00:29:31,659
reconnect to all them to the puller

560
00:29:31,659 --> 00:29:35,200
place to the master process and so the

561
00:29:35,200 --> 00:29:38,169
we do it turning our main product then

562
00:29:38,169 --> 00:29:42,400
we need to rely on zookeeper in our main

563
00:29:42,400 --> 00:29:45,010
project who needed that most of a guy

564
00:29:45,010 --> 00:29:47,320
don't you know that but we can write it

565
00:29:47,320 --> 00:29:50,260
in a froggy and we use it and we have

566
00:29:50,260 --> 00:29:53,260
the ability of hive available he musters

567
00:29:53,260 --> 00:29:59,679
that's either okay so let's jump to the

568
00:29:59,679 --> 00:30:04,240
first part performance actually the

569
00:30:04,240 --> 00:30:06,700
performers various differently in

570
00:30:06,700 --> 00:30:08,620
different applications even games

571
00:30:08,620 --> 00:30:10,809
because there are so much different

572
00:30:10,809 --> 00:30:16,299
games real-time game and not on your

573
00:30:16,299 --> 00:30:18,330
time game it's very very different and

574
00:30:18,330 --> 00:30:23,350
this in this case we will focus on the

575
00:30:23,350 --> 00:30:26,650
previous previous case MMORPG I know of

576
00:30:26,650 --> 00:30:29,740
a b2b cannot hold that online you that

577
00:30:29,740 --> 00:30:33,130
actually there is a plus yeah

578
00:30:33,130 --> 00:30:35,770
nephew he said that he can hold about

579
00:30:35,770 --> 00:30:37,900
20,000 concurrent for prayers of our

580
00:30:37,900 --> 00:30:41,140
area who believe that it's impossible

581
00:30:41,140 --> 00:30:46,299
actually in our case in one area it is

582
00:30:46,299 --> 00:30:50,230
not holding about 800 online users in

583
00:30:50,230 --> 00:30:53,830
one process it's at most seven thousand

584
00:30:53,830 --> 00:30:56,780
at most actually in real case

585
00:30:56,780 --> 00:31:01,640
so 50 now standard and we actually test

586
00:31:01,640 --> 00:31:03,740
time our OpenStack virtual machine and

587
00:31:03,740 --> 00:31:06,730
the machine is not very very good and

588
00:31:06,730 --> 00:31:09,730
this is a use case the first years Chris

589
00:31:09,730 --> 00:31:14,030
only fight we only tested in one area

590
00:31:14,030 --> 00:31:17,180
one process stress from one area step by

591
00:31:17,180 --> 00:31:20,480
step and it will log in every two

592
00:31:20,480 --> 00:31:22,640
seconds and fight each other or fight to

593
00:31:22,640 --> 00:31:25,640
the master in two to five seconds and

594
00:31:25,640 --> 00:31:29,510
this really actually in our actual

595
00:31:29,510 --> 00:31:32,300
picture for fighting each other in this

596
00:31:32,300 --> 00:31:36,950
case how much are you this 486 we

597
00:31:36,950 --> 00:31:40,040
guarantee in this case the server is in

598
00:31:40,040 --> 00:31:43,730
very stable status it is not as good as

599
00:31:43,730 --> 00:31:48,230
our online data but it is a fairly good

600
00:31:48,230 --> 00:31:51,250
editor and we are not bluffing we just

601
00:31:51,250 --> 00:31:53,270
we are very honest

602
00:31:53,270 --> 00:31:56,090
it sees our line data and it take about

603
00:31:56,090 --> 00:32:01,040
less than than 80% of the CPU so the

604
00:32:01,040 --> 00:32:02,570
second the use case will not fight each

605
00:32:02,570 --> 00:32:04,790
other we just move around and walk

606
00:32:04,790 --> 00:32:07,340
around and the other use case here

607
00:32:07,340 --> 00:32:09,860
around hand they see the map how much

608
00:32:09,860 --> 00:32:13,490
online users about 800 online users this

609
00:32:13,490 --> 00:32:15,770
is almost as good as our online meter

610
00:32:15,770 --> 00:32:19,610
and the third case in house fight in how

611
00:32:19,610 --> 00:32:23,150
smooth it is the usual case seeing real

612
00:32:23,150 --> 00:32:26,420
in reality in real game and in this case

613
00:32:26,420 --> 00:32:29,750
we can hold about five hundred and fifty

614
00:32:29,750 --> 00:32:33,560
eight or nine units so this is the

615
00:32:33,560 --> 00:32:35,540
performance data and the response time

616
00:32:35,540 --> 00:32:41,300
is also very quick okay so we still have

617
00:32:41,300 --> 00:32:45,860
time so I'm gonna jump jump into real

618
00:32:45,860 --> 00:32:49,580
time application will come allocation is

619
00:32:49,580 --> 00:32:53,390
very different from game actually and we

620
00:32:53,390 --> 00:32:55,190
have already have many success stories

621
00:32:55,190 --> 00:32:58,520
about real-time application like our

622
00:32:58,520 --> 00:33:01,580
message was pushed platform it can hold

623
00:33:01,580 --> 00:33:04,760
about 10 millions online users and also

624
00:33:04,760 --> 00:33:07,820
some track application in this case it

625
00:33:07,820 --> 00:33:09,080
is not

626
00:33:09,080 --> 00:33:11,750
is not that frequent messages at gate

627
00:33:11,750 --> 00:33:14,870
but it usually have much much more

628
00:33:14,870 --> 00:33:19,160
online users and some in some cases you

629
00:33:19,160 --> 00:33:21,920
do not need to push message that real

630
00:33:21,920 --> 00:33:25,520
time you can push messaging one year or

631
00:33:25,520 --> 00:33:27,950
some seconds it is horrifying

632
00:33:27,950 --> 00:33:32,210
so usually real-time application is much

633
00:33:32,210 --> 00:33:35,600
scalable than game and today I'm gonna

634
00:33:35,600 --> 00:33:38,300
take a look at this message push

635
00:33:38,300 --> 00:33:41,030
platform it is reused in our company

636
00:33:41,030 --> 00:33:44,420
it actually can hold about 10 million

637
00:33:44,420 --> 00:33:46,820
online users now because there are many

638
00:33:46,820 --> 00:33:49,430
products are using our platform and it

639
00:33:49,430 --> 00:33:53,180
is all beautiful so this is the

640
00:33:53,180 --> 00:33:55,460
architecture of real-time application

641
00:33:55,460 --> 00:33:58,010
and this is a typical Palmetto

642
00:33:58,010 --> 00:34:00,230
architecture many many processes and the

643
00:34:00,230 --> 00:34:02,060
front end is connector in this case

644
00:34:02,060 --> 00:34:06,350
we'll use the obvious to connect and the

645
00:34:06,350 --> 00:34:10,010
flock flow is very simple we have a

646
00:34:10,010 --> 00:34:12,440
group of service yet we're still message

647
00:34:12,440 --> 00:34:16,400
from RabbitMQ and push message to a

648
00:34:16,400 --> 00:34:18,980
penis or connector here to depend on the

649
00:34:18,980 --> 00:34:25,550
logic and it seemed quite easy but it

650
00:34:25,550 --> 00:34:27,650
actually have many many problem because

651
00:34:27,650 --> 00:34:29,660
there are many challenges out there and

652
00:34:29,660 --> 00:34:31,460
we do it quite well

653
00:34:31,460 --> 00:34:35,420
so what's challenge first of course it

654
00:34:35,420 --> 00:34:38,450
is highly loaded 10 million online users

655
00:34:38,450 --> 00:34:42,440
the second we need a broadcaster yes

656
00:34:42,440 --> 00:34:45,440
this is need of food product we need a

657
00:34:45,440 --> 00:34:48,470
broadcaster to 5 million users in

658
00:34:48,470 --> 00:34:51,680
whamming it and they see you quite a

659
00:34:51,680 --> 00:34:54,260
difficult and we have handled it quite

660
00:34:54,260 --> 00:34:57,170
well and the third problem in

661
00:34:57,170 --> 00:35:00,530
reliability we needed to push message in

662
00:35:00,530 --> 00:35:03,020
any conditions even the crime-filled

663
00:35:03,020 --> 00:35:05,870
crash something crashed we need to do

664
00:35:05,870 --> 00:35:08,690
high availability and if the crying

665
00:35:08,690 --> 00:35:11,690
crash we needed to store the message in

666
00:35:11,690 --> 00:35:15,260
our in our Redis and yet we have pushed

667
00:35:15,260 --> 00:35:17,630
message when the user is online it takes

668
00:35:17,630 --> 00:35:20,410
quite difficult actually and

669
00:35:20,410 --> 00:35:22,870
the first problem is about power and a

670
00:35:22,870 --> 00:35:26,230
network we need to save our network

671
00:35:26,230 --> 00:35:28,810
bandwidth and there are many strategy

672
00:35:28,810 --> 00:35:31,510
about it and we support all this crime

673
00:35:31,510 --> 00:35:33,040
including iOS

674
00:35:33,040 --> 00:35:35,800
I always actually support a TLS and I'm

675
00:35:35,800 --> 00:35:40,840
qtd because if unity is not very real

676
00:35:40,840 --> 00:35:43,870
time in our country actually so we need

677
00:35:43,870 --> 00:35:45,820
another protocol to DT that we are

678
00:35:45,820 --> 00:35:48,250
pushing message directly and in Android

679
00:35:48,250 --> 00:35:51,220
where you learn qtd and in browser sorry

680
00:35:51,220 --> 00:35:54,430
doc I owe you the best choice and even

681
00:35:54,430 --> 00:35:57,090
we even support a Windows desktop

682
00:35:57,090 --> 00:35:59,530
application now it also you don't get it

683
00:35:59,530 --> 00:36:02,380
so how do we do it because we have

684
00:36:02,380 --> 00:36:04,420
communal framework I'm gonna forum ok

685
00:36:04,420 --> 00:36:06,640
very good at support all these clients

686
00:36:06,640 --> 00:36:10,990
in one project very very easy so I think

687
00:36:10,990 --> 00:36:13,840
that's all I think are they are you some

688
00:36:13,840 --> 00:36:18,160
time for questions and does anyone have

689
00:36:18,160 --> 00:36:22,330
any questions right charlie raise your

690
00:36:22,330 --> 00:36:26,600
hands and we'll go right through

691
00:36:26,610 --> 00:36:33,760
anyone okay well if there were no

692
00:36:33,760 --> 00:36:36,850
questions for Charlie well that has been

