1
00:00:00,060 --> 00:00:04,740

all right okay then okay

2
00:00:04,740 --> 00:00:07,049
so hello thank you all I really

3
00:00:07,049 --> 00:00:08,670
appreciate the opportunity to be a part

4
00:00:08,670 --> 00:00:13,080
of CSS comp Budapest just massive thanks

5
00:00:13,080 --> 00:00:15,000
to the organizers and most importantly

6
00:00:15,000 --> 00:00:18,350
you all for welcoming me into your

7
00:00:18,350 --> 00:00:20,369
ridiculously beautiful and picturesque

8
00:00:20,369 --> 00:00:21,600
City

9
00:00:21,600 --> 00:00:24,240
my name is Jeremy Wagner and I'm a web

10
00:00:24,240 --> 00:00:25,970
performance consultant for site improve

11
00:00:25,970 --> 00:00:28,349
my job is to do all I can to make the

12
00:00:28,349 --> 00:00:30,539
web faster for our clients and I also

13
00:00:30,539 --> 00:00:32,550
write and talk about performance a bit

14
00:00:32,550 --> 00:00:34,920
I'm just repeating everything or that

15
00:00:34,920 --> 00:00:37,770
our wonderful emcee has already said but

16
00:00:37,770 --> 00:00:40,079
this talk is about paint worklets which

17
00:00:40,079 --> 00:00:41,010
is a little weird for me because I

18
00:00:41,010 --> 00:00:42,989
always talk about performance which has

19
00:00:42,989 --> 00:00:44,789
comparably little to do performance well

20
00:00:44,789 --> 00:00:46,620
mostly we'll get there

21
00:00:46,620 --> 00:00:48,120
and right about now you might be

22
00:00:48,120 --> 00:00:52,320
wondering Oh Jeremy what the hell are

23
00:00:52,320 --> 00:00:54,809
paint worklets and it's a good question

24
00:00:54,809 --> 00:00:56,430
and since I don't want to assume

25
00:00:56,430 --> 00:00:58,530
everyone knows about this here's a quick

26
00:00:58,530 --> 00:01:00,719
tour of what they are and what they can

27
00:01:00,719 --> 00:01:03,149
do paint worklets are part of a

28
00:01:03,149 --> 00:01:05,610
developing set of specifications called

29
00:01:05,610 --> 00:01:09,689
Houdini and with the api's Houdini

30
00:01:09,689 --> 00:01:11,790
provides you can write what are what are

31
00:01:11,790 --> 00:01:14,460
called worklets and they let you develop

32
00:01:14,460 --> 00:01:16,619
expressive and stateful animations

33
00:01:16,619 --> 00:01:19,650
custom layout modes even that's a

34
00:01:19,650 --> 00:01:21,990
developing thing and as is the sole

35
00:01:21,990 --> 00:01:23,460
focus of this talk

36
00:01:23,460 --> 00:01:26,009
generative artwork using the CSS paint

37
00:01:26,009 --> 00:01:30,750
API seriously so I haven't answered your

38
00:01:30,750 --> 00:01:31,979
question yet and out there you're

39
00:01:31,979 --> 00:01:33,869
thinking ok fine journey buying that

40
00:01:33,869 --> 00:01:36,030
whatever but what even is a worklet will

41
00:01:36,030 --> 00:01:37,950
you get to the point worklets are

42
00:01:37,950 --> 00:01:41,009
similar to web workers but unlike web

43
00:01:41,009 --> 00:01:42,119
workers worklets

44
00:01:42,119 --> 00:01:44,579
offer developers lower level access to

45
00:01:44,579 --> 00:01:47,009
rendering pipelines for completing very

46
00:01:47,009 --> 00:01:49,049
narrowly defined but super specific

47
00:01:49,049 --> 00:01:52,140
tasks and in the case of paint worklets

48
00:01:52,140 --> 00:01:54,060
we're talking about artwork that we can

49
00:01:54,060 --> 00:01:55,920
generate with JavaScript and control

50
00:01:55,920 --> 00:01:59,670
with CSS now I know Jay s comp is

51
00:01:59,670 --> 00:02:02,490
tomorrow and not today so you're

52
00:02:02,490 --> 00:02:03,840
probably thinking well with what the

53
00:02:03,840 --> 00:02:05,280
hell is this I didn't ask for no

54
00:02:05,280 --> 00:02:09,989
JavaScript at a CSS calm woo and I feel

55
00:02:09,989 --> 00:02:13,090
you as much as I love JavaScript

56
00:02:13,090 --> 00:02:17,620
the web can sometimes feel like this but

57
00:02:17,620 --> 00:02:20,410
I feel that this technology is relevant

58
00:02:20,410 --> 00:02:22,690
here even at CSS cough because even if

59
00:02:22,690 --> 00:02:25,150
you're not a JavaScript devotee or

60
00:02:25,150 --> 00:02:27,880
superfan you can still use paint

61
00:02:27,880 --> 00:02:29,410
worklets which have already been written

62
00:02:29,410 --> 00:02:31,540
in your designs without ever having to

63
00:02:31,540 --> 00:02:33,400
do more than write a little CSS here

64
00:02:33,400 --> 00:02:34,930
there so they're still relevant to you

65
00:02:34,930 --> 00:02:38,140
and this is possible because while paint

66
00:02:38,140 --> 00:02:40,030
worklets are written in JavaScript

67
00:02:40,030 --> 00:02:43,090
they're embeddable in CSS and this is

68
00:02:43,090 --> 00:02:44,769
what I mean by an embeddable when you

69
00:02:44,769 --> 00:02:46,330
look at this lonely background image

70
00:02:46,330 --> 00:02:47,620
property you might be thinking what

71
00:02:47,620 --> 00:02:48,790
that's not right

72
00:02:48,790 --> 00:02:51,220
isn't background image supposed to take

73
00:02:51,220 --> 00:02:53,440
a URL well that's certainly the

74
00:02:53,440 --> 00:02:56,140
prevailing use case but in browsers that

75
00:02:56,140 --> 00:02:58,690
support paint worklets the background

76
00:02:58,690 --> 00:03:00,670
image property can also take this little

77
00:03:00,670 --> 00:03:03,220
nifty paint syntax too so if you think

78
00:03:03,220 --> 00:03:06,190
of the URL syntax and CSS is a function

79
00:03:06,190 --> 00:03:08,709
that accepts a URL string to an image

80
00:03:08,709 --> 00:03:11,170
you can similarly think of paint as a

81
00:03:11,170 --> 00:03:13,330
function which accepts a string that

82
00:03:13,330 --> 00:03:15,640
represents and invokes a paintwork clip

83
00:03:15,640 --> 00:03:17,950
and in that worklet is where you write

84
00:03:17,950 --> 00:03:19,810
the JavaScript to generate background

85
00:03:19,810 --> 00:03:22,510
images that CSS can use so in this

86
00:03:22,510 --> 00:03:24,700
example we're calling paint to invoke a

87
00:03:24,700 --> 00:03:26,560
worklet that is registered under the

88
00:03:26,560 --> 00:03:29,319
name amazing but until we actually

89
00:03:29,319 --> 00:03:32,230
register a worklet to that name this bit

90
00:03:32,230 --> 00:03:34,120
of CSS won't do anything and therefore

91
00:03:34,120 --> 00:03:37,420
will not be very amazing and this is

92
00:03:37,420 --> 00:03:39,100
what that registration process looks

93
00:03:39,100 --> 00:03:41,200
like which is done in JavaScript on your

94
00:03:41,200 --> 00:03:44,620
page or your main app code that runs on

95
00:03:44,620 --> 00:03:46,540
the main thread because the paint API

96
00:03:46,540 --> 00:03:48,310
isn't available in all browsers you'll

97
00:03:48,310 --> 00:03:50,260
need to do a quick check to see if

98
00:03:50,260 --> 00:03:52,420
window dot CSS dot paintwork late' is a

99
00:03:52,420 --> 00:03:55,150
thing that you can use and if it is you

100
00:03:55,150 --> 00:03:57,160
can then use its add module method to

101
00:03:57,160 --> 00:03:59,290
load your worklet from a separate

102
00:03:59,290 --> 00:04:01,900
JavaScript file and what is a paint

103
00:04:01,900 --> 00:04:03,730
worker worklet really I mean what is it

104
00:04:03,730 --> 00:04:05,889
it turns out it's a class with a

105
00:04:05,889 --> 00:04:08,230
predetermined shape which consists of a

106
00:04:08,230 --> 00:04:12,190
method called well paint and with that

107
00:04:12,190 --> 00:04:14,170
within that method is where all the code

108
00:04:14,170 --> 00:04:16,329
that draws the artwork goes and the

109
00:04:16,329 --> 00:04:17,739
shape of a paint worklet is not

110
00:04:17,739 --> 00:04:19,539
restrictive at all so you're free to use

111
00:04:19,539 --> 00:04:22,150
all their class features to organize and

112
00:04:22,150 --> 00:04:24,099
and do like whatever to organize your

113
00:04:24,099 --> 00:04:26,710
drawing code any way that you prefer and

114
00:04:26,710 --> 00:04:28,930
it's nifty because without a little

115
00:04:28,930 --> 00:04:31,360
organization your drawing code can start

116
00:04:31,360 --> 00:04:34,509
to look like this and we really don't

117
00:04:34,509 --> 00:04:39,069
want that do we then moving on in the

118
00:04:39,069 --> 00:04:42,039
same file after and outside of your

119
00:04:42,039 --> 00:04:42,910
paintwork Lit class

120
00:04:42,910 --> 00:04:45,130
you can call register paint which

121
00:04:45,130 --> 00:04:47,770
requires two arguments the first is the

122
00:04:47,770 --> 00:04:49,780
name the string name that the paintwork

123
00:04:49,780 --> 00:04:51,970
should be registered under and then the

124
00:04:51,970 --> 00:04:54,460
second this that allows it to be

125
00:04:54,460 --> 00:04:56,169
accessed by the paint function and then

126
00:04:56,169 --> 00:04:58,060
the second is the reference to the class

127
00:04:58,060 --> 00:04:59,770
that you just wrote that does all of the

128
00:04:59,770 --> 00:05:00,940
painting and when this all comes

129
00:05:00,940 --> 00:05:03,940
together a paint worklet finally becomes

130
00:05:03,940 --> 00:05:07,720
usable by CSS but how do we draw stuff

131
00:05:07,720 --> 00:05:11,380
what does that even look like well the

132
00:05:11,380 --> 00:05:13,870
API you use conveniently to draw stuff

133
00:05:13,870 --> 00:05:16,780
is really just the canvas API is 2d

134
00:05:16,780 --> 00:05:18,460
drawing context something that's been

135
00:05:18,460 --> 00:05:20,710
around for a very long time that some of

136
00:05:20,710 --> 00:05:23,020
us have good familiarity with and that

137
00:05:23,020 --> 00:05:25,270
makes sense why why develop a separate

138
00:05:25,270 --> 00:05:27,610
API for drawing in 2d when a perfectly

139
00:05:27,610 --> 00:05:29,820
good one is like right there you know

140
00:05:29,820 --> 00:05:32,289
the second argument is the canvas

141
00:05:32,289 --> 00:05:34,690
geometry which offers the dimensions of

142
00:05:34,690 --> 00:05:36,789
the drawing space and this is essential

143
00:05:36,789 --> 00:05:39,610
to ensuring your artwork responds to the

144
00:05:39,610 --> 00:05:41,380
available space because you know your

145
00:05:41,380 --> 00:05:42,969
elements can kind of shift and change

146
00:05:42,969 --> 00:05:45,310
size that sort of thing happens and in

147
00:05:45,310 --> 00:05:47,590
this madly responsive world that we live

148
00:05:47,590 --> 00:05:48,820
in we want to make sure that our artwork

149
00:05:48,820 --> 00:05:51,880
adapts to the container that it's in so

150
00:05:51,880 --> 00:05:54,880
here's an example of a minimally viable

151
00:05:54,880 --> 00:05:57,099
paint method which draws a solid black

152
00:05:57,099 --> 00:06:00,159
circle with a 64 pixel radius smack dab

153
00:06:00,159 --> 00:06:01,810
in the middle of the canvas no matter

154
00:06:01,810 --> 00:06:04,870
what the size of that canvas is and so

155
00:06:04,870 --> 00:06:07,060
if we assume this super basic paint

156
00:06:07,060 --> 00:06:09,490
worklet gets registered under the not at

157
00:06:09,490 --> 00:06:10,120
all

158
00:06:10,120 --> 00:06:12,310
ironic name of amazing and we apply it

159
00:06:12,310 --> 00:06:16,110
to an element will get this this totally

160
00:06:16,110 --> 00:06:19,719
amazing thing that in no way could be

161
00:06:19,719 --> 00:06:24,190
replaced by a static image whatsoever so

162
00:06:24,190 --> 00:06:26,789
this might be you right about now but

163
00:06:26,789 --> 00:06:29,440
that simplistic example was meant to

164
00:06:29,440 --> 00:06:31,659
illustrate how we get from one line of

165
00:06:31,659 --> 00:06:33,460
CSS to something that lets you generate

166
00:06:33,460 --> 00:06:36,039
background images using a familiar API

167
00:06:36,039 --> 00:06:38,469
there is so much more that this

168
00:06:38,469 --> 00:06:40,180
technology is capable of so let

169
00:06:40,180 --> 00:06:42,520
take a look at it and just think what if

170
00:06:42,520 --> 00:06:44,400
you could use this API to create

171
00:06:44,400 --> 00:06:46,810
randomly generated artwork that could

172
00:06:46,810 --> 00:06:48,840
enhance your designs and practical yet

173
00:06:48,840 --> 00:06:50,949
spontaneous ways that are just a little

174
00:06:50,949 --> 00:06:52,030
bit different a little bit of chaos

175
00:06:52,030 --> 00:06:54,160
right and that's what we're going to do

176
00:06:54,160 --> 00:06:55,720
we're going to talk about the other

177
00:06:55,720 --> 00:06:57,580
important aspects of this technology as

178
00:06:57,580 --> 00:07:00,190
well so what we're done here the only

179
00:07:00,190 --> 00:07:01,810
thing that we'll be able to cage your

180
00:07:01,810 --> 00:07:05,470
creativity is you so let's see what's

181
00:07:05,470 --> 00:07:07,720
possible with this expressive and cool

182
00:07:07,720 --> 00:07:12,010
technology but still and I sense a

183
00:07:12,010 --> 00:07:15,729
little bit of hesitancy knowing where or

184
00:07:15,729 --> 00:07:18,639
just how to start can be kind of

185
00:07:18,639 --> 00:07:20,440
paralyzing so it's a good frame of mind

186
00:07:20,440 --> 00:07:22,419
you know a good frame of mind to get

187
00:07:22,419 --> 00:07:25,030
into is to think of the canvas is like a

188
00:07:25,030 --> 00:07:27,160
set of tiles where all the tiles are

189
00:07:27,160 --> 00:07:29,530
separate but potentially overlapping or

190
00:07:29,530 --> 00:07:31,300
connected pieces which are randomly

191
00:07:31,300 --> 00:07:34,539
generated this mindset trains your focus

192
00:07:34,539 --> 00:07:37,389
conveniently only on what to do in each

193
00:07:37,389 --> 00:07:39,400
tile rather than allowing yourself to be

194
00:07:39,400 --> 00:07:41,260
overwhelmed by what to do with the

195
00:07:41,260 --> 00:07:43,690
entire space and once everything is done

196
00:07:43,690 --> 00:07:45,220
you can kind of step back and just see

197
00:07:45,220 --> 00:07:46,570
how all these things connect and

198
00:07:46,570 --> 00:07:48,160
interlock and how they come together and

199
00:07:48,160 --> 00:07:51,190
this helps us reach where I think is the

200
00:07:51,190 --> 00:07:53,919
sweet spot with the paint API we can get

201
00:07:53,919 --> 00:07:57,160
weird yes but that weirdness can

202
00:07:57,160 --> 00:07:59,169
intersect with what's practical and

203
00:07:59,169 --> 00:08:01,090
therefore usable and that to me is like

204
00:08:01,090 --> 00:08:03,010
the magical part of web development the

205
00:08:03,010 --> 00:08:06,070
weirdly practical stuff now some of what

206
00:08:06,070 --> 00:08:07,570
you're going to see here and I feel

207
00:08:07,570 --> 00:08:10,930
obliged to call this out is very much

208
00:08:10,930 --> 00:08:12,789
inspired by a wonderful talk that Tim

209
00:08:12,789 --> 00:08:15,639
Holman gave at JFK FAU last year where

210
00:08:15,639 --> 00:08:17,530
he talked about generative art using the

211
00:08:17,530 --> 00:08:21,580
canvas API I highly recommend you check

212
00:08:21,580 --> 00:08:23,349
it out on YouTube because he is way

213
00:08:23,349 --> 00:08:25,349
better at this stuff than I am and

214
00:08:25,349 --> 00:08:27,760
pretty much everything in that talk is

215
00:08:27,760 --> 00:08:29,710
something that you will then be able to

216
00:08:29,710 --> 00:08:32,349
apply to paint worklets in the CSS paint

217
00:08:32,349 --> 00:08:36,310
API so do check it out okay let's

218
00:08:36,310 --> 00:08:38,500
revisit that paint method in the amazing

219
00:08:38,500 --> 00:08:40,419
paint wirklich class and just maybe

220
00:08:40,419 --> 00:08:42,700
change things up a little bit there's

221
00:08:42,700 --> 00:08:45,190
more going on in this example then when

222
00:08:45,190 --> 00:08:47,140
we were just drawing this mundane lonely

223
00:08:47,140 --> 00:08:49,260
circle in the middle of a bleak canvas

224
00:08:49,260 --> 00:08:51,910
so first we establish the size of each

225
00:08:51,910 --> 00:08:54,100
tile which will be 32 pixels

226
00:08:54,100 --> 00:08:56,860
square then we divide the canvases width

227
00:08:56,860 --> 00:08:59,079
and height by the tile size and then

228
00:08:59,079 --> 00:09:00,910
we'll write two loops using those values

229
00:09:00,910 --> 00:09:04,449
to draw each individual tile the first

230
00:09:04,449 --> 00:09:07,029
loop deals with tiles on the y-axis and

231
00:09:07,029 --> 00:09:08,759
then the second loop deals with

232
00:09:08,759 --> 00:09:11,110
unsurprisingly tiles on the x-axis and

233
00:09:11,110 --> 00:09:12,970
the second loop is nested inside of the

234
00:09:12,970 --> 00:09:14,230
first one and this will end up

235
00:09:14,230 --> 00:09:16,779
populating or allow us to populate every

236
00:09:16,779 --> 00:09:19,180
tile available on the canvas with

237
00:09:19,180 --> 00:09:21,550
whatever it is we feel like drawing so

238
00:09:21,550 --> 00:09:24,220
what you do up here is up to you but in

239
00:09:24,220 --> 00:09:26,380
this example I'm going to draw a line in

240
00:09:26,380 --> 00:09:28,720
every tile but the random part a bit of

241
00:09:28,720 --> 00:09:31,540
it will be where the line goes in in the

242
00:09:31,540 --> 00:09:34,149
tile space right so in every iteration I

243
00:09:34,149 --> 00:09:36,579
call the context objects begin path

244
00:09:36,579 --> 00:09:39,100
method to begin drawing a line and then

245
00:09:39,100 --> 00:09:41,680
I leave it to math dot random or math

246
00:09:41,680 --> 00:09:44,920
dot pseudo random am i right to decide

247
00:09:44,920 --> 00:09:47,410
if the line will cross the tile space

248
00:09:47,410 --> 00:09:49,420
from the upper left corner to the lower

249
00:09:49,420 --> 00:09:51,579
lower right corner or draw a line

250
00:09:51,579 --> 00:09:53,319
straight line from the upper left corner

251
00:09:53,319 --> 00:09:56,019
to the lower left corner and after that

252
00:09:56,019 --> 00:09:58,120
I finish up Euler rate iteration by

253
00:09:58,120 --> 00:10:00,069
telling the context object to draw the

254
00:10:00,069 --> 00:10:02,189
strokes so what does that look like

255
00:10:02,189 --> 00:10:05,410
turns out it looks like a kind of cool

256
00:10:05,410 --> 00:10:10,720
thing that changes every single time and

257
00:10:10,720 --> 00:10:12,610
that is the kind of spontaneity and

258
00:10:12,610 --> 00:10:14,230
randomness I'm talking about here and

259
00:10:14,230 --> 00:10:16,029
that's just what you can do if you only

260
00:10:16,029 --> 00:10:18,130
know like just a teeny little bit of the

261
00:10:18,130 --> 00:10:20,319
canvas API but with a little ingenuity

262
00:10:20,319 --> 00:10:23,350
that little teeny bit of ingenuity can

263
00:10:23,350 --> 00:10:26,470
go extremely far like what if we just

264
00:10:26,470 --> 00:10:28,149
decided to throw in a little something

265
00:10:28,149 --> 00:10:30,100
extra and randomly decide whether or not

266
00:10:30,100 --> 00:10:31,870
to draw a dot in the upper left hand

267
00:10:31,870 --> 00:10:34,509
corner of each tile this gives the final

268
00:10:34,509 --> 00:10:36,069
artwork a sort of circuit board

269
00:10:36,069 --> 00:10:37,540
appearance which i think is kind of neat

270
00:10:37,540 --> 00:10:39,790
and we can also make the tile size a bit

271
00:10:39,790 --> 00:10:41,560
bigger and we can change the color and

272
00:10:41,560 --> 00:10:43,449
because a canvas background is

273
00:10:43,449 --> 00:10:45,970
transparent by default we can specify a

274
00:10:45,970 --> 00:10:49,269
CSS background color property to set to

275
00:10:49,269 --> 00:10:51,339
set this artwork on whatever color it is

276
00:10:51,339 --> 00:10:52,569
we want so I've kind of done like this

277
00:10:52,569 --> 00:10:55,990
off black grayish thing now imagine this

278
00:10:55,990 --> 00:10:58,060
pattern in a pages masthead background

279
00:10:58,060 --> 00:10:59,740
but maybe at a more subtle and lower

280
00:10:59,740 --> 00:11:02,079
opacity that just gives the design just

281
00:11:02,079 --> 00:11:04,660
a little bit of extra oof and like chaos

282
00:11:04,660 --> 00:11:07,460
but without overpowering the forward

283
00:11:07,460 --> 00:11:09,020
and like making things like you know

284
00:11:09,020 --> 00:11:10,820
just kind of subtle like you know being

285
00:11:10,820 --> 00:11:14,630
cool so that was cool but let's do a

286
00:11:14,630 --> 00:11:16,130
different take on this idea and let's

287
00:11:16,130 --> 00:11:17,630
like let's experiment a little bit more

288
00:11:17,630 --> 00:11:18,620
like what else can we do

289
00:11:18,620 --> 00:11:20,830
so here's a paint work I call blotto

290
00:11:20,830 --> 00:11:24,140
which draws circles of varying size and

291
00:11:24,140 --> 00:11:25,850
opacity in every tile like kind of an

292
00:11:25,850 --> 00:11:28,370
inkblot kind of thing and so there's a

293
00:11:28,370 --> 00:11:29,720
bit of code here so let's just walk

294
00:11:29,720 --> 00:11:32,209
through it at the very beginning a

295
00:11:32,209 --> 00:11:34,820
beginning of blah toes paint method we

296
00:11:34,820 --> 00:11:37,250
set some variables the tile size of

297
00:11:37,250 --> 00:11:40,010
course 8 by 8 pixels and then we define

298
00:11:40,010 --> 00:11:42,560
this amplitude variable which aids us in

299
00:11:42,560 --> 00:11:44,630
sort of generating randomly sized

300
00:11:44,630 --> 00:11:46,910
circles later on and then we calculate

301
00:11:46,910 --> 00:11:49,430
the number of tiles on both axes and

302
00:11:49,430 --> 00:11:51,589
then we store the result of pi times 2

303
00:11:51,589 --> 00:11:53,779
which means that the circle that we draw

304
00:11:53,779 --> 00:11:57,529
will be a full circle at 360 degrees and

305
00:11:57,529 --> 00:11:59,750
then finally we set the fill style to

306
00:11:59,750 --> 00:12:02,510
this sort of like nice little blue and

307
00:12:02,510 --> 00:12:03,560
now here's where we do the heavy lifting

308
00:12:03,560 --> 00:12:05,690
you'll note that the loops are the same

309
00:12:05,690 --> 00:12:08,180
as with the circuit board pattern and we

310
00:12:08,180 --> 00:12:10,370
we do all the work inside of the second

311
00:12:10,370 --> 00:12:12,920
nested loop now where it changes is that

312
00:12:12,920 --> 00:12:15,290
we generate a random alpha value by

313
00:12:15,290 --> 00:12:17,000
getting the remainder of math dot random

314
00:12:17,000 --> 00:12:19,400
divided against itself and this will get

315
00:12:19,400 --> 00:12:22,029
us a valid transparency value from 0 to

316
00:12:22,029 --> 00:12:25,339
1.0 and then we multiply the tile size

317
00:12:25,339 --> 00:12:27,950
by math dot random and our amplitude

318
00:12:27,950 --> 00:12:30,020
value from earlier and now all we do

319
00:12:30,020 --> 00:12:32,360
from here is just draw a circle with

320
00:12:32,360 --> 00:12:33,860
that information that we've just sort of

321
00:12:33,860 --> 00:12:35,959
come up with and then we register good

322
00:12:35,959 --> 00:12:37,820
ole blotto here like this just like

323
00:12:37,820 --> 00:12:40,430
usual and then we can use it and CSS

324
00:12:40,430 --> 00:12:43,190
like so and because paintwork let's draw

325
00:12:43,190 --> 00:12:45,410
like I said they draw on a transparent

326
00:12:45,410 --> 00:12:47,420
background by default we can add a nice

327
00:12:47,420 --> 00:12:49,130
little background color to sit for it to

328
00:12:49,130 --> 00:12:50,600
sit on I've chosen this sort of like

329
00:12:50,600 --> 00:12:52,790
off-white and so after all of that

330
00:12:52,790 --> 00:12:55,690
faffing about what does it look like

331
00:12:55,690 --> 00:12:58,430
pretty cool I think it's not bad if I do

332
00:12:58,430 --> 00:12:59,990
say so myself I mean I don't think

333
00:12:59,990 --> 00:13:01,550
anything I do is cool but I think that's

334
00:13:01,550 --> 00:13:04,910
kind of cool and as before we get a

335
00:13:04,910 --> 00:13:07,459
unique result every time the canvas

336
00:13:07,459 --> 00:13:09,110
redraws and it gives us again that

337
00:13:09,110 --> 00:13:11,149
organic feel that while stable and

338
00:13:11,149 --> 00:13:14,390
familiar is just slightly chaotic and

339
00:13:14,390 --> 00:13:16,880
spontaneous and I really like that every

340
00:13:16,880 --> 00:13:21,650
single time it draws ok so that was

341
00:13:21,650 --> 00:13:24,620
alright but let's think outside of tiles

342
00:13:24,620 --> 00:13:26,330
right tiles are fun in their convenient

343
00:13:26,330 --> 00:13:29,210
ways to draw like generative artwork but

344
00:13:29,210 --> 00:13:30,740
let's step into the world of

345
00:13:30,740 --> 00:13:33,350
trigonometry and I'm sure most of you

346
00:13:33,350 --> 00:13:35,000
are pretty comfortable with trig but if

347
00:13:35,000 --> 00:13:38,090
not don't worry it's it's not too hard

348
00:13:38,090 --> 00:13:40,310
and I never was a good math student so

349
00:13:40,310 --> 00:13:42,110
like I was brushing up on my trig last

350
00:13:42,110 --> 00:13:43,220
week

351
00:13:43,220 --> 00:13:44,990
here's another paint worklet I call

352
00:13:44,990 --> 00:13:48,260
flashy which randomly draw stylized rays

353
00:13:48,260 --> 00:13:50,270
of light sorry

354
00:13:50,270 --> 00:13:52,550
around a circle which flare outward

355
00:13:52,550 --> 00:13:54,200
which makes it sort of look like a

356
00:13:54,200 --> 00:13:56,360
stylized rendering of the Sun which i

357
00:13:56,360 --> 00:13:58,850
think is kind of cool so let's look at

358
00:13:58,850 --> 00:14:00,890
the paint method and as before we'll

359
00:14:00,890 --> 00:14:02,390
need to establish variables that we can

360
00:14:02,390 --> 00:14:05,330
use later the first is the radius of the

361
00:14:05,330 --> 00:14:06,890
main circle that the Rays will radiate

362
00:14:06,890 --> 00:14:09,230
from think like the Sun itself which

363
00:14:09,230 --> 00:14:12,890
we've set at 48 pixels next is the

364
00:14:12,890 --> 00:14:15,110
amount of deviation of each rays with

365
00:14:15,110 --> 00:14:17,330
and this is what we use to make it look

366
00:14:17,330 --> 00:14:19,490
like the Rays are flaring outward as

367
00:14:19,490 --> 00:14:22,640
they extend from the Sun itself out to

368
00:14:22,640 --> 00:14:25,130
the edge of the canvas and next is the

369
00:14:25,130 --> 00:14:27,650
outer radius which is sort of think like

370
00:14:27,650 --> 00:14:31,730
a giant circle around the entire canvas

371
00:14:31,730 --> 00:14:35,030
that you don't see we do this so that we

372
00:14:35,030 --> 00:14:36,410
ensure that the edges of the Rays will

373
00:14:36,410 --> 00:14:38,240
be drawn outside of the canvas bounds

374
00:14:38,240 --> 00:14:40,010
when we use our trigonometry functions

375
00:14:40,010 --> 00:14:42,140
to plot where those rays need to go and

376
00:14:42,140 --> 00:14:44,690
finally we have the X&Y coordinates from

377
00:14:44,690 --> 00:14:47,540
which the circle the main circle will be

378
00:14:47,540 --> 00:14:51,680
drawn and we calculate the position of

379
00:14:51,680 --> 00:14:53,270
this thing by multiplying the width and

380
00:14:53,270 --> 00:14:55,250
height of the canvases size by some

381
00:14:55,250 --> 00:14:57,650
static values to sort of ensure it sits

382
00:14:57,650 --> 00:14:59,630
proportionately somewhere in the upper

383
00:14:59,630 --> 00:15:02,150
left but if the element sizes changes

384
00:15:02,150 --> 00:15:04,400
it'll kind of adjust a little bit and

385
00:15:04,400 --> 00:15:07,130
now it's time to get drawing so first we

386
00:15:07,130 --> 00:15:08,810
set the fill color and then we draw the

387
00:15:08,810 --> 00:15:10,430
circle from which the rays will radiate

388
00:15:10,430 --> 00:15:13,070
pretty straightforward now here's where

389
00:15:13,070 --> 00:15:15,200
it gets a little interesting and this

390
00:15:15,200 --> 00:15:16,580
code will all be available so if you

391
00:15:16,580 --> 00:15:18,620
can't totally read it that's ok it will

392
00:15:18,620 --> 00:15:21,140
be available somewhere because we are

393
00:15:21,140 --> 00:15:22,040
drawing rays

394
00:15:22,040 --> 00:15:23,930
radiating around a circle we'll want to

395
00:15:23,930 --> 00:15:25,700
do one for loop that starts at zero

396
00:15:25,700 --> 00:15:27,470
degrees and then goes all the way around

397
00:15:27,470 --> 00:15:30,110
to 360 and then in each iteration will

398
00:15:30,110 --> 00:15:32,090
let math dot random decide if it wants

399
00:15:32,090 --> 00:15:33,590
to draw anything at all and if it

400
00:15:33,590 --> 00:15:34,670
decides okay we're going

401
00:15:34,670 --> 00:15:36,950
do that we'll calculate the x and

402
00:15:36,950 --> 00:15:38,900
y-coordinates at the edge of the larger

403
00:15:38,900 --> 00:15:41,090
circle that exists outside the canvas

404
00:15:41,090 --> 00:15:42,830
bounds and so then we do this by

405
00:15:42,830 --> 00:15:45,050
converting the edge of each ray from

406
00:15:45,050 --> 00:15:47,710
degrees represented by our incrementer

407
00:15:47,710 --> 00:15:50,900
i2 radians and from there we'll then

408
00:15:50,900 --> 00:15:52,820
draw this polyline shape that uses a

409
00:15:52,820 --> 00:15:54,620
trigonometry like two trigonometry

410
00:15:54,620 --> 00:15:56,570
functions to figure out the x and y

411
00:15:56,570 --> 00:15:58,760
coordinates to draw the lines for each

412
00:15:58,760 --> 00:16:01,100
ray once the shape is drawn we fill it

413
00:16:01,100 --> 00:16:02,510
with the same solid color as we used

414
00:16:02,510 --> 00:16:05,000
with the circle then like before we

415
00:16:05,000 --> 00:16:07,270
register that flashy little fella and

416
00:16:07,270 --> 00:16:10,580
then like before we use it in the CSS

417
00:16:10,580 --> 00:16:12,200
like this and give it a nice pinkish

418
00:16:12,200 --> 00:16:14,210
background color to sit on and what do

419
00:16:14,210 --> 00:16:16,280
you think that looks like something

420
00:16:16,280 --> 00:16:19,010
pretty cool I think right it looks kind

421
00:16:19,010 --> 00:16:20,780
of neat and a little bit of mass goes a

422
00:16:20,780 --> 00:16:23,300
long way into making this look really

423
00:16:23,300 --> 00:16:26,420
cool in stylish and like before we still

424
00:16:26,420 --> 00:16:30,160
get that spontaneity that gives it that

425
00:16:30,160 --> 00:16:31,970
familiar but slightly different

426
00:16:31,970 --> 00:16:34,010
appearance each and every time that it

427
00:16:34,010 --> 00:16:38,090
draws so and as an aside I sucked at

428
00:16:38,090 --> 00:16:42,770
math in school like like barely scraped

429
00:16:42,770 --> 00:16:46,070
pie through algebra to sucked so if I

430
00:16:46,070 --> 00:16:48,050
can make stuff like this pretty much

431
00:16:48,050 --> 00:16:50,480
anyone can make stuff that looks really

432
00:16:50,480 --> 00:16:52,970
cool with just a little bit of like you

433
00:16:52,970 --> 00:16:55,130
know even just some basic arithmetic can

434
00:16:55,130 --> 00:16:56,990
help you make some really cool stuff in

435
00:16:56,990 --> 00:17:00,560
this and so a case in point like this

436
00:17:00,560 --> 00:17:02,270
paint work that I like to call slapdash

437
00:17:02,270 --> 00:17:04,130
this one is kind of one of the easier

438
00:17:04,130 --> 00:17:05,540
ones to make and I use it on my website

439
00:17:05,540 --> 00:17:08,060
currently although it might not be long

440
00:17:08,060 --> 00:17:09,560
for this world I'm kind of getting tired

441
00:17:09,560 --> 00:17:12,350
of it but that's okay like because I've

442
00:17:12,350 --> 00:17:13,910
got some others up my sleeve like this

443
00:17:13,910 --> 00:17:16,490
one which I like to call bumpy because

444
00:17:16,490 --> 00:17:20,750
it's get it it's bumpy and then there's

445
00:17:20,750 --> 00:17:22,430
this alternate rendering of the blotto

446
00:17:22,430 --> 00:17:23,930
paint worklet which I showed you earlier

447
00:17:23,930 --> 00:17:26,120
but with just sort of a larger radius on

448
00:17:26,120 --> 00:17:28,460
the circles with a blend mode applied to

449
00:17:28,460 --> 00:17:30,350
give it a sort of inkblot gone wild

450
00:17:30,350 --> 00:17:32,570
effect that's kind of cool

451
00:17:32,570 --> 00:17:33,890
and then there's yeah this blend mode

452
00:17:33,890 --> 00:17:35,060
just kind of makes them like sort of

453
00:17:35,060 --> 00:17:36,410
overlay each other I think it uses

454
00:17:36,410 --> 00:17:38,870
multiply and then I started getting a

455
00:17:38,870 --> 00:17:41,150
little bit whack here and came up with

456
00:17:41,150 --> 00:17:42,910
this one which I like to call byte mare

457
00:17:42,910 --> 00:17:45,710
and even though it looks 3d it's really

458
00:17:45,710 --> 00:17:47,870
just a 2d drawing I don't think you can

459
00:17:47,870 --> 00:17:48,530
use a 3d

460
00:17:48,530 --> 00:17:51,320
context and paint worklets yet I use

461
00:17:51,320 --> 00:17:53,180
some trigonometry functions just to kind

462
00:17:53,180 --> 00:17:55,160
of fake that 3d look and I think it's

463
00:17:55,160 --> 00:17:57,500
pretty convincing and in that same vein

464
00:17:57,500 --> 00:17:59,480
here's my favorite one I made so far

465
00:17:59,480 --> 00:18:03,710
which I call parallel oh wow it also

466
00:18:03,710 --> 00:18:05,750
uses a little trig to fake that free D

467
00:18:05,750 --> 00:18:07,520
thing again and I don't know who knows

468
00:18:07,520 --> 00:18:09,230
where I'll go with with this next this

469
00:18:09,230 --> 00:18:10,790
is just the last one I made that I like

470
00:18:10,790 --> 00:18:13,070
but it's a lot of fun and if you're

471
00:18:13,070 --> 00:18:14,390
looking to know how I did some of these

472
00:18:14,390 --> 00:18:16,130
or where you can find that code I have a

473
00:18:16,130 --> 00:18:17,900
little surprise for you at the end of

474
00:18:17,900 --> 00:18:20,780
this talk but we got some other stuff to

475
00:18:20,780 --> 00:18:23,960
talk about first okay so we had some fun

476
00:18:23,960 --> 00:18:24,770
there for a minute

477
00:18:24,770 --> 00:18:27,200
right like it was a wild ride but the

478
00:18:27,200 --> 00:18:28,940
problem with paint worklets as I've

479
00:18:28,940 --> 00:18:30,410
described them is that they're just not

480
00:18:30,410 --> 00:18:35,150
well very flexible well as I described

481
00:18:35,150 --> 00:18:37,400
them you just you have to change the

482
00:18:37,400 --> 00:18:38,780
paint work look code itself to change

483
00:18:38,780 --> 00:18:41,300
its appearance and while that can work

484
00:18:41,300 --> 00:18:43,340
it's not very convenient and really just

485
00:18:43,340 --> 00:18:45,230
kind of a pain what if you wanted to

486
00:18:45,230 --> 00:18:47,630
reuse that same work lick code in

487
00:18:47,630 --> 00:18:49,430
different places on the same site what

488
00:18:49,430 --> 00:18:51,430
if you wanted to do wanted it to do

489
00:18:51,430 --> 00:18:54,080
basically the same thing but adapt it to

490
00:18:54,080 --> 00:18:56,300
different contexts solely by tweaking

491
00:18:56,300 --> 00:18:58,400
its appearance and CSS that'd be cool

492
00:18:58,400 --> 00:19:01,760
right guess what that is possible you

493
00:19:01,760 --> 00:19:04,160
can set you can set up your paint

494
00:19:04,160 --> 00:19:05,990
worklets so that their appearance can be

495
00:19:05,990 --> 00:19:08,270
altered by what are called custom CSS

496
00:19:08,270 --> 00:19:10,040
properties that you that you defined

497
00:19:10,040 --> 00:19:12,110
that are relevant to your paint worklet

498
00:19:12,110 --> 00:19:13,880
and this feature is not a part of the

499
00:19:13,880 --> 00:19:16,970
CSS paint API but rather another feature

500
00:19:16,970 --> 00:19:19,760
called the the custom properties or

501
00:19:19,760 --> 00:19:21,910
maybe just properties and values API

502
00:19:21,910 --> 00:19:26,150
seriously so let's go back to the CSS

503
00:19:26,150 --> 00:19:28,100
for the flashy paint worklet example

504
00:19:28,100 --> 00:19:29,330
from earlier

505
00:19:29,330 --> 00:19:31,940
what would the CSS for this look like if

506
00:19:31,940 --> 00:19:33,950
we could customize an aspect of its

507
00:19:33,950 --> 00:19:35,470
appearance through a custom property

508
00:19:35,470 --> 00:19:37,730
kind of something like this like if what

509
00:19:37,730 --> 00:19:39,230
if we wanted to control the size of the

510
00:19:39,230 --> 00:19:41,480
of the sun's radius right make that

511
00:19:41,480 --> 00:19:45,020
circle bigger if we wanted to well the

512
00:19:45,020 --> 00:19:46,370
the properties starting with double

513
00:19:46,370 --> 00:19:48,560
dashes is a custom property and when we

514
00:19:48,560 --> 00:19:51,050
set custom CSS properties on elements

515
00:19:51,050 --> 00:19:53,270
using a paint worklet we can access

516
00:19:53,270 --> 00:19:56,030
those values within that paint worklet

517
00:19:56,030 --> 00:19:58,580
and now this is where the power and

518
00:19:58,580 --> 00:20:00,860
practicality lies with this technology

519
00:20:00,860 --> 00:20:02,390
because if a paint work

520
00:20:02,390 --> 00:20:04,610
rendering can't be influenced by

521
00:20:04,610 --> 00:20:06,950
anything outside of the worklet code

522
00:20:06,950 --> 00:20:10,040
itself you'd have to change your worklet

523
00:20:10,040 --> 00:20:12,920
code every freakin time you wanted it to

524
00:20:12,920 --> 00:20:14,900
do something different or you'd have to

525
00:20:14,900 --> 00:20:16,550
make multiple versions of that same

526
00:20:16,550 --> 00:20:18,470
worklet in order to customize its

527
00:20:18,470 --> 00:20:20,480
appearance in CSS and that's just

528
00:20:20,480 --> 00:20:23,690
wasteful custom properties help us to

529
00:20:23,690 --> 00:20:25,910
make paint worklets infinitely more

530
00:20:25,910 --> 00:20:29,450
useful and reusable and they're like the

531
00:20:29,450 --> 00:20:31,220
hook and a good song that like just in a

532
00:20:31,220 --> 00:20:33,110
really good banging song that just makes

533
00:20:33,110 --> 00:20:36,680
it even better so the next step is to

534
00:20:36,680 --> 00:20:38,210
use a little thing called the properties

535
00:20:38,210 --> 00:20:40,430
and values API to establish the identity

536
00:20:40,430 --> 00:20:43,280
and shape of a custom property property

537
00:20:43,280 --> 00:20:44,960
in your application JavaScript like you

538
00:20:44,960 --> 00:20:46,460
would put this on the main thread in

539
00:20:46,460 --> 00:20:48,350
your app code and even though it's not

540
00:20:48,350 --> 00:20:51,290
strictly necessary to do this it's not a

541
00:20:51,290 --> 00:20:53,750
bad idea for a few reasons for one you

542
00:20:53,750 --> 00:20:55,730
can control what the data type is for

543
00:20:55,730 --> 00:20:57,380
the custom property via the syntax

544
00:20:57,380 --> 00:20:59,360
setting in this case you can see that

545
00:20:59,360 --> 00:21:01,400
we're specifying the property's value as

546
00:21:01,400 --> 00:21:03,590
an integer the value we set here is

547
00:21:03,590 --> 00:21:06,320
called a CSS syntax string and it helps

548
00:21:06,320 --> 00:21:08,210
the API to enforce what's considered a

549
00:21:08,210 --> 00:21:10,640
valid value for a given custom property

550
00:21:10,640 --> 00:21:14,060
and two we can decide whether or not the

551
00:21:14,060 --> 00:21:16,130
value for this property can be inherited

552
00:21:16,130 --> 00:21:18,170
by child elements using the inherits

553
00:21:18,170 --> 00:21:18,680
option

554
00:21:18,680 --> 00:21:20,300
I haven't found exactly where this is

555
00:21:20,300 --> 00:21:21,980
useful yet for paint worklets but I'm

556
00:21:21,980 --> 00:21:24,440
sure it's there somewhere I mean it's

557
00:21:24,440 --> 00:21:26,360
it's specified I'm sure it's useful and

558
00:21:26,360 --> 00:21:28,610
three we decide what the properties

559
00:21:28,610 --> 00:21:31,130
default value should be via the initial

560
00:21:31,130 --> 00:21:33,170
value option if that property is

561
00:21:33,170 --> 00:21:34,910
unspecified so that's kind of useful

562
00:21:34,910 --> 00:21:36,920
because properties have defaults that

563
00:21:36,920 --> 00:21:38,240
just sort of kick in if you don't

564
00:21:38,240 --> 00:21:40,130
specify them so we can do the same thing

565
00:21:40,130 --> 00:21:43,280
with our custom properties so what does

566
00:21:43,280 --> 00:21:44,960
it look like well you want paint

567
00:21:44,960 --> 00:21:47,780
worklets to access those custom property

568
00:21:47,780 --> 00:21:50,750
values it's not too ownerís really it's

569
00:21:50,750 --> 00:21:53,960
just a two-step process the first is to

570
00:21:53,960 --> 00:21:56,060
add a static getter method to your

571
00:21:56,060 --> 00:21:58,090
worklet class called input properties

572
00:21:58,090 --> 00:22:00,830
which returns an array of all the custom

573
00:22:00,830 --> 00:22:02,510
properties that we've registered and

574
00:22:02,510 --> 00:22:05,540
then in the worklet we can access these

575
00:22:05,540 --> 00:22:07,040
properties through a third argument in

576
00:22:07,040 --> 00:22:09,860
the paint method signature called

577
00:22:09,860 --> 00:22:13,160
properties unsurprisingly the arguments

578
00:22:13,160 --> 00:22:14,870
get method allows access

579
00:22:14,870 --> 00:22:16,700
to the custom property values passed in

580
00:22:16,700 --> 00:22:19,430
CSS here you can see that we like we

581
00:22:19,430 --> 00:22:21,740
pull it and then we cast it to an int I

582
00:22:21,740 --> 00:22:23,870
don't think the property properties and

583
00:22:23,870 --> 00:22:26,240
values API is at candid candidate

584
00:22:26,240 --> 00:22:28,010
recommendation so that might actually

585
00:22:28,010 --> 00:22:30,770
not be the final code for what that

586
00:22:30,770 --> 00:22:32,600
looks like

587
00:22:32,600 --> 00:22:34,280
but then we get it in there and then at

588
00:22:34,280 --> 00:22:35,840
this point we can then control the paint

589
00:22:35,840 --> 00:22:38,450
worklets presentation entirely with CSS

590
00:22:38,450 --> 00:22:40,810
and what we can achieve with this is

591
00:22:40,810 --> 00:22:43,130
super duper powerful when we

592
00:22:43,130 --> 00:22:45,860
parameterize paint worklets we make them

593
00:22:45,860 --> 00:22:47,630
customizable in ways we didn't even

594
00:22:47,630 --> 00:22:49,610
think was possible and here you can see

595
00:22:49,610 --> 00:22:51,500
that we can dynamically change the tile

596
00:22:51,500 --> 00:22:54,950
size of the blotto worklets output like

597
00:22:54,950 --> 00:22:57,200
we can on we can change the color as

598
00:22:57,200 --> 00:22:58,670
well as other influential properties

599
00:22:58,670 --> 00:23:00,710
like the amplitude the maximum o path

600
00:23:00,710 --> 00:23:03,470
opacity like the blend modes and stuff

601
00:23:03,470 --> 00:23:06,790
it's pretty cool we can make them fit

602
00:23:06,790 --> 00:23:08,690
practically anywhere and that's the

603
00:23:08,690 --> 00:23:10,490
beauty of generative artwork applied in

604
00:23:10,490 --> 00:23:12,530
this context it's one thing to generate

605
00:23:12,530 --> 00:23:13,910
art with JavaScript we've been doing

606
00:23:13,910 --> 00:23:16,010
that for a long time it's an entirely

607
00:23:16,010 --> 00:23:17,780
different thing to control it in this

608
00:23:17,780 --> 00:23:20,480
fashion and you can do it without having

609
00:23:20,480 --> 00:23:23,140
to tweak more than a couple properties

610
00:23:23,140 --> 00:23:25,880
so now that I've showed you all the cool

611
00:23:25,880 --> 00:23:29,570
stuff it's time I inform you of the

612
00:23:29,570 --> 00:23:32,510
unfortunate yet entirely predictable

613
00:23:32,510 --> 00:23:34,400
reality that you must eat your

614
00:23:34,400 --> 00:23:38,540
vegetables by which I mean it's time to

615
00:23:38,540 --> 00:23:40,280
tell your paint to tell you that paint

616
00:23:40,280 --> 00:23:41,690
worklets don't have solid browser

617
00:23:41,690 --> 00:23:44,750
support and that therefore that means

618
00:23:44,750 --> 00:23:46,160
you must treat them as a progressive

619
00:23:46,160 --> 00:23:48,380
enhancement and you'll need a back-up

620
00:23:48,380 --> 00:23:48,830
plan

621
00:23:48,830 --> 00:23:50,300
right so that's a lot of what we do on

622
00:23:50,300 --> 00:23:52,370
the web is feel like my official title

623
00:23:52,370 --> 00:23:54,140
is like back-up plan

624
00:23:54,140 --> 00:23:58,250
guy for everything furthermore because

625
00:23:58,250 --> 00:24:00,740
paint worklets are JavaScript you need

626
00:24:00,740 --> 00:24:01,580
that back-up plan

627
00:24:01,580 --> 00:24:04,130
even in browsers that do support them so

628
00:24:04,130 --> 00:24:05,690
support isn't terrible for the painting

629
00:24:05,690 --> 00:24:06,770
API when you look at the bigger picture

630
00:24:06,770 --> 00:24:09,380
in fact it's only one that's the only

631
00:24:09,380 --> 00:24:11,240
part of Houdini that currently is at the

632
00:24:11,240 --> 00:24:13,370
candidate recommendation stage at least

633
00:24:13,370 --> 00:24:15,680
at the time of this tables rendering but

634
00:24:15,680 --> 00:24:17,660
support for it just isn't universal so

635
00:24:17,660 --> 00:24:19,730
you need to know how to adapt and that

636
00:24:19,730 --> 00:24:20,990
said you shouldn't have to break your

637
00:24:20,990 --> 00:24:23,780
back to provide a fallback because CSS

638
00:24:23,780 --> 00:24:26,660
itself can usually solve this the thing

639
00:24:26,660 --> 00:24:28,740
to remember about resiliency

640
00:24:28,740 --> 00:24:31,679
when using the CSS pain API is that the

641
00:24:31,679 --> 00:24:34,289
order in which we specify CSS properties

642
00:24:34,289 --> 00:24:35,970
matters and that is what is going to

643
00:24:35,970 --> 00:24:36,570
save you

644
00:24:36,570 --> 00:24:39,029
going this route is usually enough for a

645
00:24:39,029 --> 00:24:41,549
fallback browsers that understand this

646
00:24:41,549 --> 00:24:44,760
API will use the second rule but those

647
00:24:44,760 --> 00:24:46,980
that don't will fall back to the first

648
00:24:46,980 --> 00:24:48,960
occurrence of that rule that they

649
00:24:48,960 --> 00:24:50,970
consider to be valid and in this case a

650
00:24:50,970 --> 00:24:53,610
browser like say Firefox which doesn't

651
00:24:53,610 --> 00:24:55,020
support paint worklets yet but it's

652
00:24:55,020 --> 00:24:57,809
coming will fall back to the first rule

653
00:24:57,809 --> 00:24:59,580
and most of the time this approach is

654
00:24:59,580 --> 00:25:01,409
enough the idea is that your fallback

655
00:25:01,409 --> 00:25:03,809
should resemble the paintwork tlit like

656
00:25:03,809 --> 00:25:05,610
someone right it doesn't usually have to

657
00:25:05,610 --> 00:25:06,929
be much more than an approximation

658
00:25:06,929 --> 00:25:08,760
because it's it's pretty rare that like

659
00:25:08,760 --> 00:25:10,710
somebody would see both renderings of

660
00:25:10,710 --> 00:25:12,899
like the fallback and the paintwork lid

661
00:25:12,899 --> 00:25:15,990
itself like next to each other so to

662
00:25:15,990 --> 00:25:17,370
illustrate this is my personal website

663
00:25:17,370 --> 00:25:19,679
in chrome with the paint worklet used in

664
00:25:19,679 --> 00:25:20,909
the backgrounds of different sections

665
00:25:20,909 --> 00:25:22,620
it's just like that kind of slapdash

666
00:25:22,620 --> 00:25:25,049
paintwork look that I had and now here

667
00:25:25,049 --> 00:25:26,730
it is in a browser that doesn't and it's

668
00:25:26,730 --> 00:25:29,190
not exactly the same but it's a

669
00:25:29,190 --> 00:25:31,070
reasonable like kind of approximation

670
00:25:31,070 --> 00:25:33,600
and it works well enough and just be

671
00:25:33,600 --> 00:25:34,860
sure that you're optimizing your

672
00:25:34,860 --> 00:25:36,690
fallback images that's the perf guy

673
00:25:36,690 --> 00:25:38,340
within me just can't help but tell you

674
00:25:38,340 --> 00:25:41,220
to do that if possible try to create

675
00:25:41,220 --> 00:25:43,350
like tileable smaller patterns to keep

676
00:25:43,350 --> 00:25:44,970
those fallback images as small as

677
00:25:44,970 --> 00:25:47,100
possible because simple paint worklets

678
00:25:47,100 --> 00:25:49,169
will usually just be smaller over the

679
00:25:49,169 --> 00:25:52,409
wire than images now for another

680
00:25:52,409 --> 00:25:54,750
question what if a paint work look just

681
00:25:54,750 --> 00:25:56,610
like fails to load for whatever reason

682
00:25:56,610 --> 00:25:58,559
and this is where promises are your

683
00:25:58,559 --> 00:26:00,539
friend you might recall that in order to

684
00:26:00,539 --> 00:26:02,940
load a paint work lift we have access to

685
00:26:02,940 --> 00:26:05,090
a promise when it completely loads or

686
00:26:05,090 --> 00:26:08,610
conversely when it fails to load and in

687
00:26:08,610 --> 00:26:10,710
this case we can compensate for this in

688
00:26:10,710 --> 00:26:13,590
the promises catch method which executes

689
00:26:13,590 --> 00:26:15,240
if the promise was rejected in this case

690
00:26:15,240 --> 00:26:16,860
if the paint work lead failed to load

691
00:26:16,860 --> 00:26:18,809
for some reason and if it does fail we

692
00:26:18,809 --> 00:26:20,370
can add a class the body element which

693
00:26:20,370 --> 00:26:22,649
we can then target with CSS to provide a

694
00:26:22,649 --> 00:26:25,010
fallback

695
00:26:25,020 --> 00:26:26,880
that's the SS would look something like

696
00:26:26,880 --> 00:26:28,350
this although that's a little weird

697
00:26:28,350 --> 00:26:31,289
I said body element so work with me with

698
00:26:31,289 --> 00:26:32,850
that inconsistency imagine it was

699
00:26:32,850 --> 00:26:36,210
applied to the element itself instead in

700
00:26:36,210 --> 00:26:37,470
the event that the paint work click

701
00:26:37,470 --> 00:26:39,510
fails to load we would still get a stall

702
00:26:39,510 --> 00:26:41,100
back background image that we can still

703
00:26:41,100 --> 00:26:42,540
use and it's important to note that

704
00:26:42,540 --> 00:26:44,610
least in chrome if a paint worklet fails

705
00:26:44,610 --> 00:26:47,220
to load the CSS only fallback for non

706
00:26:47,220 --> 00:26:48,810
supporting browsers described earlier

707
00:26:48,810 --> 00:26:51,900
will not kick in because that it still

708
00:26:51,900 --> 00:26:53,550
considers that paint syntax to be a

709
00:26:53,550 --> 00:26:55,410
valid value but that worklet hasn't

710
00:26:55,410 --> 00:26:56,490
loaded so you have to have a more

711
00:26:56,490 --> 00:26:59,070
specific rule to make that work so

712
00:26:59,070 --> 00:27:00,510
you'll need to provide an explicit

713
00:27:00,510 --> 00:27:02,160
fallback otherwise you just you'll just

714
00:27:02,160 --> 00:27:05,640
won't have a background at all okay most

715
00:27:05,640 --> 00:27:07,110
of the talks I give are about

716
00:27:07,110 --> 00:27:08,760
performance and I thought maybe I could

717
00:27:08,760 --> 00:27:10,740
get through this one without any perf

718
00:27:10,740 --> 00:27:14,910
talk but I was wrong it turns out that

719
00:27:14,910 --> 00:27:17,160
there's a couple things to keep in mind

720
00:27:17,160 --> 00:27:18,810
when it comes to keeping your paint work

721
00:27:18,810 --> 00:27:20,970
looks fast as well as being considerate

722
00:27:20,970 --> 00:27:22,200
with what with what can be a rather

723
00:27:22,200 --> 00:27:24,420
taxing API if it's not used carefully

724
00:27:24,420 --> 00:27:26,340
because if you don't you risk making the

725
00:27:26,340 --> 00:27:29,460
internet more like this for people so

726
00:27:29,460 --> 00:27:31,710
let's avoid that and talk about what you

727
00:27:31,710 --> 00:27:33,750
can do to make paint work let's work as

728
00:27:33,750 --> 00:27:36,570
optimally as they can because of their

729
00:27:36,570 --> 00:27:38,820
restricted scope paint worklets won't

730
00:27:38,820 --> 00:27:41,130
often be very large the ones I've

731
00:27:41,130 --> 00:27:42,450
written usually end up being less than

732
00:27:42,450 --> 00:27:45,780
two kilobytes before compression but if

733
00:27:45,780 --> 00:27:47,640
you can help it do not run your

734
00:27:47,640 --> 00:27:50,580
paintwork le'ts through Babel that is no

735
00:27:50,580 --> 00:27:54,450
nose no so let's look at the impact as

736
00:27:54,450 --> 00:27:56,580
an example that Babel transforms have by

737
00:27:56,580 --> 00:27:58,290
taking the circuitry worklet from the

738
00:27:58,290 --> 00:28:00,120
beginning of this talk even when it's uh

739
00:28:00,120 --> 00:28:01,710
notified it's very small and it also

740
00:28:01,710 --> 00:28:02,940
works in every browser that supports

741
00:28:02,940 --> 00:28:05,970
paint worklets without babbles help

742
00:28:05,970 --> 00:28:07,920
paint work 'let's do not need to be

743
00:28:07,920 --> 00:28:10,430
transformed in order for them to work

744
00:28:10,430 --> 00:28:13,200
now here's that same worklet after babel

745
00:28:13,200 --> 00:28:14,940
transforms it and if you can't read this

746
00:28:14,940 --> 00:28:16,290
code that's kind of the point there's a

747
00:28:16,290 --> 00:28:18,540
lot of cruft here which affects parsing

748
00:28:18,540 --> 00:28:21,060
compilation and execution time and the

749
00:28:21,060 --> 00:28:22,890
omnipresent question of web development

750
00:28:22,890 --> 00:28:24,990
seems to inevitably be should this work

751
00:28:24,990 --> 00:28:27,030
in every browser and in this case there

752
00:28:27,030 --> 00:28:31,410
are two answers no and hell no the Omni

753
00:28:31,410 --> 00:28:33,600
from the paint worklets aren't supported

754
00:28:33,600 --> 00:28:36,330
in all modern browsers yet so we don't

755
00:28:36,330 --> 00:28:37,800
need to treat them with the web

756
00:28:37,800 --> 00:28:39,900
compatibility mindset that we clung to

757
00:28:39,900 --> 00:28:42,930
in the 2000s if you must must

758
00:28:42,930 --> 00:28:44,760
if you must cut processed paint worklets

759
00:28:44,760 --> 00:28:46,530
with babel perhaps out of a matter of

760
00:28:46,530 --> 00:28:48,150
convenience and i can understand and

761
00:28:48,150 --> 00:28:49,740
sure you know how to configure it to

762
00:28:49,740 --> 00:28:51,720
minimize transforms I tend to avoid

763
00:28:51,720 --> 00:28:53,730
including them in the asset graph of any

764
00:28:53,730 --> 00:28:55,399
bundler until I know

765
00:28:55,399 --> 00:28:57,200
be able to process them the way I expect

766
00:28:57,200 --> 00:28:59,359
and this last piece of perfect base I

767
00:28:59,359 --> 00:29:01,190
have is to be considerate of your users

768
00:29:01,190 --> 00:29:02,809
particularly mobile ones

769
00:29:02,809 --> 00:29:05,960
not everyone has a pixel 3 or a 20 18

770
00:29:05,960 --> 00:29:07,879
macbook pro that can obliterate whatever

771
00:29:07,879 --> 00:29:08,929
comes down the rendering pipeline

772
00:29:08,929 --> 00:29:11,149
without turning into a fully functioning

773
00:29:11,149 --> 00:29:12,669
panini grill

774
00:29:12,669 --> 00:29:15,139
so when paint work let's draw in normal

775
00:29:15,139 --> 00:29:17,210
scenarios such as unload or when the

776
00:29:17,210 --> 00:29:18,950
orientation of the device changes they

777
00:29:18,950 --> 00:29:20,479
can be resource intensive but not

778
00:29:20,479 --> 00:29:23,299
ludicrously so but that does not mean

779
00:29:23,299 --> 00:29:25,309
that even though worklets do their work

780
00:29:25,309 --> 00:29:26,989
off the main thread like web workers

781
00:29:26,989 --> 00:29:28,309
that they can't impact page

782
00:29:28,309 --> 00:29:30,469
responsiveness this screenshot is from a

783
00:29:30,469 --> 00:29:31,999
performance profiling session where a

784
00:29:31,999 --> 00:29:34,609
browser was continuously resizing and a

785
00:29:34,609 --> 00:29:36,580
paint worklet was redrawing every time

786
00:29:36,580 --> 00:29:39,799
they worklets will redraw any time the

787
00:29:39,799 --> 00:29:41,299
dimensions of their container change or

788
00:29:41,299 --> 00:29:42,979
if CSS properties on that container

789
00:29:42,979 --> 00:29:45,320
change so please resist the temptation

790
00:29:45,320 --> 00:29:46,969
to like do stuff like make them redraw

791
00:29:46,969 --> 00:29:49,039
constantly to like make them like

792
00:29:49,039 --> 00:29:51,499
animate inefficiently or otherwise for

793
00:29:51,499 --> 00:29:54,169
no real sensible reason and additionally

794
00:29:54,169 --> 00:29:55,999
make a call on when it's not appropriate

795
00:29:55,999 --> 00:29:57,919
to use these things we can't look at the

796
00:29:57,919 --> 00:29:59,210
device's battery levels since the

797
00:29:59,210 --> 00:30:01,429
battery status API is no longer a thing

798
00:30:01,429 --> 00:30:03,649
but we do have another signal we can

799
00:30:03,649 --> 00:30:05,570
look at and that is the device memory

800
00:30:05,570 --> 00:30:07,249
API the amount of memory that the

801
00:30:07,249 --> 00:30:08,719
approximate amount of memory that the

802
00:30:08,719 --> 00:30:10,759
device has and as usual it's not

803
00:30:10,759 --> 00:30:13,519
supported everywhere but checking for

804
00:30:13,519 --> 00:30:15,469
support is as trivial as seeing if

805
00:30:15,469 --> 00:30:17,389
navigator dot device memory is defined

806
00:30:17,389 --> 00:30:19,039
and if it is we can get the course

807
00:30:19,039 --> 00:30:20,989
amount of memory and here we've decided

808
00:30:20,989 --> 00:30:24,889
that if a device has at least 4

809
00:30:24,889 --> 00:30:26,389
gigabytes or more of memory we'll

810
00:30:26,389 --> 00:30:27,950
register that paint worklet and then we

811
00:30:27,950 --> 00:30:29,719
can or otherwise we can like do the

812
00:30:29,719 --> 00:30:31,429
class hook where we decide to go to a

813
00:30:31,429 --> 00:30:34,460
fallback and in any case if you're

814
00:30:34,460 --> 00:30:35,749
concerned that any part of your paint

815
00:30:35,749 --> 00:30:37,070
where click code is inefficient

816
00:30:37,070 --> 00:30:39,559
anyway if you profile in chrome dev

817
00:30:39,559 --> 00:30:41,269
tools in the performance profiler and

818
00:30:41,269 --> 00:30:43,039
then after that go to the sources tab

819
00:30:43,039 --> 00:30:45,830
you can see the impact of each line like

820
00:30:45,830 --> 00:30:47,960
how much execution time and then you can

821
00:30:47,960 --> 00:30:50,029
just decide whether or not that you want

822
00:30:50,029 --> 00:30:52,249
to address any suboptimal behavior if

823
00:30:52,249 --> 00:30:57,229
you can well it's that time but before I

824
00:30:57,229 --> 00:30:58,669
properly part from you all I want to

825
00:30:58,669 --> 00:31:00,289
call it a few resources I think are well

826
00:31:00,289 --> 00:31:02,929
worth your time first off you know

827
00:31:02,929 --> 00:31:04,519
Kravitz has been jamming on paint

828
00:31:04,519 --> 00:31:06,470
worklets for a long time

829
00:31:06,470 --> 00:31:08,419
and if you feel like my quick intro to

830
00:31:08,419 --> 00:31:10,759
the technology just didn't cut it for

831
00:31:10,759 --> 00:31:11,659
you I understand

832
00:31:11,659 --> 00:31:14,149
then you Anna's article on the on the AP

833
00:31:14,149 --> 00:31:16,460
I just cannot fail you she is just it's

834
00:31:16,460 --> 00:31:18,379
superb at describing these things and

835
00:31:18,379 --> 00:31:20,360
secondly Sam Richards did a more broadly

836
00:31:20,360 --> 00:31:22,250
scoped talk on Houdini in general last

837
00:31:22,250 --> 00:31:24,620
year at CSS conf a you some of what he's

838
00:31:24,620 --> 00:31:26,059
talked about there may have changed a

839
00:31:26,059 --> 00:31:28,129
bit since as Houdini is evolving but

840
00:31:28,129 --> 00:31:29,690
it's still a great talk for anyone who

841
00:31:29,690 --> 00:31:31,669
wants to know more about this awesome

842
00:31:31,669 --> 00:31:33,049
set of API is that are coming down the

843
00:31:33,049 --> 00:31:35,659
pike and now remember when I said there

844
00:31:35,659 --> 00:31:38,419
was a surprise here it is if you're

845
00:31:38,419 --> 00:31:40,159
interested in seeing an open source

846
00:31:40,159 --> 00:31:41,840
showcase of the paintwork let's I've

847
00:31:41,840 --> 00:31:43,700
written you can check out a site I've

848
00:31:43,700 --> 00:31:46,220
made called paint lets its paint let's

849
00:31:46,220 --> 00:31:48,590
go Roku app calm but I got a little tiny

850
00:31:48,590 --> 00:31:51,080
URL thing there and I'll post the slide

851
00:31:51,080 --> 00:31:53,629
deck later this will show each paint

852
00:31:53,629 --> 00:31:55,850
worklet and it's custom properties so

853
00:31:55,850 --> 00:31:57,320
you can experiment with each one and

854
00:31:57,320 --> 00:31:58,490
they're free to download you can just

855
00:31:58,490 --> 00:32:00,200
use them if you want I don't care if you

856
00:32:00,200 --> 00:32:01,340
credit them I don't care what you do

857
00:32:01,340 --> 00:32:04,700
with them and Plus each paint workflow

858
00:32:04,700 --> 00:32:08,299
yeah I just said that so and if you have

859
00:32:08,299 --> 00:32:09,710
a paintwork look that you've written

860
00:32:09,710 --> 00:32:12,649
that you think is pretty cool I welcome

861
00:32:12,649 --> 00:32:14,179
you to submit a pull request to the repo

862
00:32:14,179 --> 00:32:15,799
or just show it to me and I can and I

863
00:32:15,799 --> 00:32:17,389
can pull it in for you because I'm kind

864
00:32:17,389 --> 00:32:19,519
of picky about how that gets done so if

865
00:32:19,519 --> 00:32:21,950
you'd like want that cool let's let's

866
00:32:21,950 --> 00:32:23,960
talk there's I'll post this you'll know

867
00:32:23,960 --> 00:32:25,970
where this is all at pretty soon and of

868
00:32:25,970 --> 00:32:27,379
course at the time I thought I was being

869
00:32:27,379 --> 00:32:28,549
a clever little

870
00:32:28,549 --> 00:32:30,289
when I wrote paint --let's but it

871
00:32:30,289 --> 00:32:32,029
unsurprisingly turns out that someone

872
00:32:32,029 --> 00:32:34,730
had the same idea and before I did and

873
00:32:34,730 --> 00:32:38,120
that person was not surprisingly Yoona

874
00:32:38,120 --> 00:32:40,039
Kravitz so if you want a different take

875
00:32:40,039 --> 00:32:41,960
on the idea check out her extra dot CSS

876
00:32:41,960 --> 00:32:43,850
site has some cool things that you can

877
00:32:43,850 --> 00:32:45,500
check out and pull into your project as

878
00:32:45,500 --> 00:32:47,509
well and with that I thank you for your

879
00:32:47,509 --> 00:32:50,029
time your interest your everlasting love

880
00:32:50,029 --> 00:32:51,830
of all things web which gives me no

881
00:32:51,830 --> 00:32:53,990
shortage of hope and admiration for this

882
00:32:53,990 --> 00:32:56,019
community and for welcoming me into your

883
00:32:56,019 --> 00:32:58,639
amazingly beautiful and historically

884
00:32:58,639 --> 00:33:01,519
awesome city here are my slides which

885
00:33:01,519 --> 00:33:04,279
will be available at that URL hopefully

886
00:33:04,279 --> 00:33:07,009
shortly if I can get Wi-Fi thing figured

887
00:33:07,009 --> 00:33:07,490
out

888
00:33:07,490 --> 00:33:10,790
and uh thank you all so very very much

