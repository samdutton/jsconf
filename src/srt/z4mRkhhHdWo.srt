1
00:00:08,490 --> 00:00:11,020

today I want to talk about designing

2
00:00:11,020 --> 00:00:13,000
even larger

3
00:00:13,000 --> 00:00:15,550
is actually a sequel to talk I gave a

4
00:00:15,550 --> 00:00:18,360
jessica of Australia two years ago and

5
00:00:18,360 --> 00:00:21,430
just like that last time I want to kind

6
00:00:21,430 --> 00:00:24,220
of ground this talk in our career

7
00:00:24,220 --> 00:00:26,290
progression as software engineers

8
00:00:26,290 --> 00:00:28,300
I think many of you in the audience

9
00:00:28,300 --> 00:00:30,220
would maybe call yourself a senior self

10
00:00:30,220 --> 00:00:32,710
engineer or if you're not there yet you

11
00:00:32,710 --> 00:00:35,470
aspire to be one and so the way I would

12
00:00:35,470 --> 00:00:37,330
describe what it means to be seen

13
00:00:37,330 --> 00:00:39,580
yourself engineer is that if someone

14
00:00:39,580 --> 00:00:41,860
comes to me and they say like hey you

15
00:00:41,860 --> 00:00:43,809
know I'm out to do this project in this

16
00:00:43,809 --> 00:00:45,670
domain that you already filming you with

17
00:00:45,670 --> 00:00:47,920
you would say yeah that's actually

18
00:00:47,920 --> 00:00:49,360
something I know how to do I don't need

19
00:00:49,360 --> 00:00:51,160
to need anyone else's help

20
00:00:51,160 --> 00:00:53,140
I'm a senior person I know how to do it

21
00:00:53,140 --> 00:00:55,840
and then this was kind of the series of

22
00:00:55,840 --> 00:00:58,239
my last remark was going beyond that and

23
00:00:58,239 --> 00:01:00,399
with that software engineering lens but

24
00:01:00,399 --> 00:01:02,320
I'm not talking so much about people but

25
00:01:02,320 --> 00:01:05,229
still you kind of transcend beyond

26
00:01:05,229 --> 00:01:06,640
yourself right it doesn't

27
00:01:06,640 --> 00:01:08,530
the only looking at solving problems

28
00:01:08,530 --> 00:01:11,050
yourself you're looking at how can i as

29
00:01:11,050 --> 00:01:12,910
a software engineer anticipate our

30
00:01:12,910 --> 00:01:14,649
others two things and then design api's

31
00:01:14,649 --> 00:01:16,149
accordingly so that they are more

32
00:01:16,149 --> 00:01:17,710
successful right so I think that is

33
00:01:17,710 --> 00:01:20,770
really beyond seniority in this talk

34
00:01:20,770 --> 00:01:23,890
today I want to go one level beyond that

35
00:01:23,890 --> 00:01:26,979
I want to breach this stage where I can

36
00:01:26,979 --> 00:01:30,340
say I can design software such that for

37
00:01:30,340 --> 00:01:32,799
loops of engineers the probability

38
00:01:32,799 --> 00:01:35,200
increases that the suffer that they

39
00:01:35,200 --> 00:01:38,470
produce is good now there are three key

40
00:01:38,470 --> 00:01:40,330
words here first of all large groups of

41
00:01:40,330 --> 00:01:42,159
engineers so if you're working to

42
00:01:42,159 --> 00:01:43,930
startup or like a three-person company

43
00:01:43,930 --> 00:01:46,030
then this talk may seem superfluous

44
00:01:46,030 --> 00:01:49,270
boring and extra like not something you

45
00:01:49,270 --> 00:01:51,369
care about but I think many of you may

46
00:01:51,369 --> 00:01:54,369
be working insurance companies bangs or

47
00:01:54,369 --> 00:01:56,619
anything right like wherever you have a

48
00:01:56,619 --> 00:01:59,079
bunch of folks and multiple teams and

49
00:01:59,079 --> 00:01:59,860
you kind of kinda need to coordinate

50
00:01:59,860 --> 00:02:02,680
stuff then I'm talking about probability

51
00:02:02,680 --> 00:02:04,659
there's no security here right you can

52
00:02:04,659 --> 00:02:06,909
only try to set things up so they'll

53
00:02:06,909 --> 00:02:09,790
probably work but there's no guarantees

54
00:02:09,790 --> 00:02:12,760
there's no silver bullets finally I want

55
00:02:12,760 --> 00:02:15,370
to talk about good stuff here so this is

56
00:02:15,370 --> 00:02:16,959
not a product management

57
00:02:16,959 --> 00:02:18,940
all right this talk will not help you

58
00:02:18,940 --> 00:02:21,970
write the right program but it will help

59
00:02:21,970 --> 00:02:25,180
you write that program good so what I

60
00:02:25,180 --> 00:02:27,580
mean is it being maintainable high

61
00:02:27,580 --> 00:02:29,680
performance having low buck density

62
00:02:29,680 --> 00:02:31,900
being delivered on time that type of

63
00:02:31,900 --> 00:02:33,400
stuff right these qualities that

64
00:02:33,400 --> 00:02:35,980
transcend the product aspect of software

65
00:02:35,980 --> 00:02:39,550
engineering I want to clarify one more

66
00:02:39,550 --> 00:02:41,050
thing I'm gonna say stuff like

67
00:02:41,050 --> 00:02:44,140
frameworks software infrastructure other

68
00:02:44,140 --> 00:02:45,910
stuff like that all the time I kind of

69
00:02:45,910 --> 00:02:48,459
treat them interchangeably what I mean

70
00:02:48,459 --> 00:02:51,550
is kind of suffer that we are building

71
00:02:51,550 --> 00:02:53,890
that helps other people build better

72
00:02:53,890 --> 00:02:56,410
software and what I would like you all

73
00:02:56,410 --> 00:02:58,930
to kind of put your mind into like

74
00:02:58,930 --> 00:03:00,640
you're the person in your company who's

75
00:03:00,640 --> 00:03:03,790
responsible for kind of defining how

76
00:03:03,790 --> 00:03:06,160
people write software and then write the

77
00:03:06,160 --> 00:03:07,750
infrastructure the software that they

78
00:03:07,750 --> 00:03:10,360
are using to write software and when I

79
00:03:10,360 --> 00:03:12,310
say you build a framework but I don't

80
00:03:12,310 --> 00:03:14,860
mean that you make your own react or

81
00:03:14,860 --> 00:03:16,540
angular right maybe that's actually the

82
00:03:16,540 --> 00:03:17,470
right way to do it but it's not

83
00:03:17,470 --> 00:03:18,940
necessary right I think whenever you

84
00:03:18,940 --> 00:03:22,000
have a larger set of teams you want to

85
00:03:22,000 --> 00:03:23,500
kind of standardize how they build

86
00:03:23,500 --> 00:03:25,209
applications and that kind of puts a

87
00:03:25,209 --> 00:03:26,920
framework around how people buy build

88
00:03:26,920 --> 00:03:29,019
applications so that's what I mean again

89
00:03:29,019 --> 00:03:30,459
like think about you being the person

90
00:03:30,459 --> 00:03:33,220
who's responsible for this and then this

91
00:03:33,220 --> 00:03:36,010
talk is about how you are successful at

92
00:03:36,010 --> 00:03:38,379
that job and I'm going to talk about

93
00:03:38,379 --> 00:03:40,870
that in three chapters the first one I

94
00:03:40,870 --> 00:03:42,670
call understanding the degree of

95
00:03:42,670 --> 00:03:44,590
uncertainty then we're going to learn

96
00:03:44,590 --> 00:03:47,769
how to solve all known problems and then

97
00:03:47,769 --> 00:03:49,360
final are we going to learn about

98
00:03:49,360 --> 00:03:52,569
deploying change cool let's dive right

99
00:03:52,569 --> 00:03:54,640
in with our friends or in our Heisenberg

100
00:03:54,640 --> 00:03:56,140
telling us that this is actually

101
00:03:56,140 --> 00:03:57,629
impossible

102
00:03:57,629 --> 00:03:59,650
understanding the degree of uncertainty

103
00:03:59,650 --> 00:04:03,340
how far are we that what's actually

104
00:04:03,340 --> 00:04:05,860
needed to be done is the thing that's

105
00:04:05,860 --> 00:04:08,590
needed to be done that is absolutely key

106
00:04:08,590 --> 00:04:10,510
for self engineering I'm going to talk

107
00:04:10,510 --> 00:04:13,060
about a technique to kind of understand

108
00:04:13,060 --> 00:04:16,150
how well we understand things for that

109
00:04:16,150 --> 00:04:18,459
we need to understand the problem space

110
00:04:18,459 --> 00:04:20,260
really well and understand how well we

111
00:04:20,260 --> 00:04:22,120
understand this sorry about the busy

112
00:04:22,120 --> 00:04:23,919
slides these are just a few questions

113
00:04:23,919 --> 00:04:26,590
basically and the answers aren't even

114
00:04:26,590 --> 00:04:29,169
that important but ask yourself what is

115
00:04:29,169 --> 00:04:31,120
what is it in the existing

116
00:04:31,120 --> 00:04:32,919
infrastructure that your users and your

117
00:04:32,919 --> 00:04:35,169
users or developers what are they

118
00:04:35,169 --> 00:04:37,000
struggling with and how are they

119
00:04:37,000 --> 00:04:39,310
struggling with it what is the class of

120
00:04:39,310 --> 00:04:40,540
applications that folk

121
00:04:40,540 --> 00:04:42,910
we'll built using your work and kind of

122
00:04:42,910 --> 00:04:44,830
bra terms what are the trends in the

123
00:04:44,830 --> 00:04:47,260
industry that influence what type of

124
00:04:47,260 --> 00:04:49,120
software is probably going to be written

125
00:04:49,120 --> 00:04:50,050
in the future

126
00:04:50,050 --> 00:04:51,400
right because infrastructure is always

127
00:04:51,400 --> 00:04:55,030
for future software now all of these you

128
00:04:55,030 --> 00:04:58,090
know may sound like reading the tea

129
00:04:58,090 --> 00:05:00,910
leaves but I think usually you know if

130
00:05:00,910 --> 00:05:02,110
you've been doing this for a while you

131
00:05:02,110 --> 00:05:04,240
actually might have answers and so the

132
00:05:04,240 --> 00:05:07,000
key here is really you do this exercise

133
00:05:07,000 --> 00:05:09,670
to understand like how well can you

134
00:05:09,670 --> 00:05:11,560
answer this right that's really the key

135
00:05:11,560 --> 00:05:13,390
like if this is like really easy and you

136
00:05:13,390 --> 00:05:14,890
write it down and everything is clear

137
00:05:14,890 --> 00:05:17,050
that's one side or the other side is

138
00:05:17,050 --> 00:05:18,430
like no I actually have no idea how they

139
00:05:18,430 --> 00:05:21,400
answer this question I know nothing even

140
00:05:21,400 --> 00:05:23,590
more powerful than knowing what people

141
00:05:23,590 --> 00:05:26,890
want to do is what they don't want to do

142
00:05:26,890 --> 00:05:29,920
so these are non goals so what are non

143
00:05:29,920 --> 00:05:32,260
goals non goals aren't you know let's

144
00:05:32,260 --> 00:05:33,520
say you work for a manufacturing company

145
00:05:33,520 --> 00:05:37,750
and you don't need to like build an

146
00:05:37,750 --> 00:05:40,210
insurance piece of software right that's

147
00:05:40,210 --> 00:05:41,020
not an ondol

148
00:05:41,020 --> 00:05:42,610
that's ridiculous of course you don't

149
00:05:42,610 --> 00:05:44,290
want to do this right an on goal is

150
00:05:44,290 --> 00:05:46,390
something that it's actually super

151
00:05:46,390 --> 00:05:48,280
reasonable and even likely that you want

152
00:05:48,280 --> 00:05:49,630
to do it but you know you don't want to

153
00:05:49,630 --> 00:05:51,700
do it right like it's not a requirement

154
00:05:51,700 --> 00:05:54,880
and so this might even be more difficult

155
00:05:54,880 --> 00:05:56,740
than answering and like if you if you're

156
00:05:56,740 --> 00:05:58,810
able to answer these questions that can

157
00:05:58,810 --> 00:06:01,000
be very powerful you know the degree of

158
00:06:01,000 --> 00:06:04,780
uncertainty is low so why why is

159
00:06:04,780 --> 00:06:07,540
uncertainty so so so important when

160
00:06:07,540 --> 00:06:09,880
uncertainty is hot you're gonna have to

161
00:06:09,880 --> 00:06:11,860
make trade-offs you need to be flexible

162
00:06:11,860 --> 00:06:14,110
right you need to say okay I need to I

163
00:06:14,110 --> 00:06:15,610
don't know whether I need to support

164
00:06:15,610 --> 00:06:17,230
this so I better make it that it's

165
00:06:17,230 --> 00:06:19,300
possible right and whenever you're in

166
00:06:19,300 --> 00:06:20,380
that situation

167
00:06:20,380 --> 00:06:22,780
you need to make trade-offs right so

168
00:06:22,780 --> 00:06:25,960
trade-offs are situations where you need

169
00:06:25,960 --> 00:06:28,390
to kind of square to things and make

170
00:06:28,390 --> 00:06:30,430
them both possible and probably end up

171
00:06:30,430 --> 00:06:31,570
with something that's not quite as

172
00:06:31,570 --> 00:06:33,490
awesome is something that only needs do

173
00:06:33,490 --> 00:06:36,880
one of those two things and the problem

174
00:06:36,880 --> 00:06:40,810
with trade-offs is that they make stuff

175
00:06:40,810 --> 00:06:43,210
difficult and when you have unnecessary

176
00:06:43,210 --> 00:06:46,030
trade-offs that really breaks software

177
00:06:46,030 --> 00:06:47,380
engineering like software engineering

178
00:06:47,380 --> 00:06:49,720
hates unnecessary trade-off and it's the

179
00:06:49,720 --> 00:06:52,120
root of all evil what is an example for

180
00:06:52,120 --> 00:06:53,100
this let's say

181
00:06:53,100 --> 00:06:55,680
in your company you built this

182
00:06:55,680 --> 00:06:58,500
infrastructure for mobile apps and you

183
00:06:58,500 --> 00:07:00,450
anticipate that you know if maybe the

184
00:07:00,450 --> 00:07:02,130
salespeople they have old crappy Android

185
00:07:02,130 --> 00:07:03,930
phones with low memory and so you need

186
00:07:03,930 --> 00:07:05,730
to make it such that everything works in

187
00:07:05,730 --> 00:07:07,560
the whole memory situation and to design

188
00:07:07,560 --> 00:07:09,030
the software frameworks such as

189
00:07:09,030 --> 00:07:11,190
everyone's going and like needs to kit

190
00:07:11,190 --> 00:07:12,960
worry about memory and manage it and

191
00:07:12,960 --> 00:07:15,120
like all that stuff right and then it

192
00:07:15,120 --> 00:07:16,560
turns out your company goes and buys

193
00:07:16,560 --> 00:07:17,790
never on your phone and that was

194
00:07:17,790 --> 00:07:19,890
completely for nothing right that's an

195
00:07:19,890 --> 00:07:21,360
unnecessary trade-off but it's now much

196
00:07:21,360 --> 00:07:23,010
more difficult to write software in your

197
00:07:23,010 --> 00:07:24,570
system because it's in theory possible

198
00:07:24,570 --> 00:07:27,710
to run in these lower power devices and

199
00:07:27,710 --> 00:07:30,030
so interestingly this is a bit of a

200
00:07:30,030 --> 00:07:31,950
generalization of Donald Knuth famous

201
00:07:31,950 --> 00:07:34,170
theorem premature optimization is the

202
00:07:34,170 --> 00:07:34,830
root of all evil

203
00:07:34,830 --> 00:07:36,750
right so premature optimization is just

204
00:07:36,750 --> 00:07:38,730
a special case of an unnecessary

205
00:07:38,730 --> 00:07:40,830
trade-off but it doesn't only have to be

206
00:07:40,830 --> 00:07:43,110
about performance every time you make

207
00:07:43,110 --> 00:07:44,520
your software do something that it

208
00:07:44,520 --> 00:07:45,930
doesn't need to do you made an

209
00:07:45,930 --> 00:07:48,150
unnecessary trade-off in the baseline of

210
00:07:48,150 --> 00:07:49,620
software design that can be really

211
00:07:49,620 --> 00:07:53,640
really fatal cool so I think that's a

212
00:07:53,640 --> 00:07:55,230
bit of a web development conference I

213
00:07:55,230 --> 00:07:56,820
wanted to have one slide about web

214
00:07:56,820 --> 00:08:01,020
development we have been doing web

215
00:08:01,020 --> 00:08:03,390
frameworks for a few years right like

216
00:08:03,390 --> 00:08:05,880
it's been over 20 years now and we

217
00:08:05,880 --> 00:08:07,980
actually understand how to build web

218
00:08:07,980 --> 00:08:10,020
frameworks really well and if we don't

219
00:08:10,020 --> 00:08:12,030
and if we do a bad job it's our fault

220
00:08:12,030 --> 00:08:13,650
but it's not because we don't understand

221
00:08:13,650 --> 00:08:14,280
how to do this

222
00:08:14,280 --> 00:08:16,320
maybe we personally like the experience

223
00:08:16,320 --> 00:08:18,870
but we could do a really good job right

224
00:08:18,870 --> 00:08:20,670
so that's that's where the degree of

225
00:08:20,670 --> 00:08:22,260
uncertainty is actually quite low like

226
00:08:22,260 --> 00:08:24,900
we know how to build web apps on the

227
00:08:24,900 --> 00:08:27,480
other hand imagine it's 2015 and your

228
00:08:27,480 --> 00:08:30,390
mother comes and says hey I want you to

229
00:08:30,390 --> 00:08:32,729
build infrastructure for building deep

230
00:08:32,729 --> 00:08:34,710
learning and you're like well I have

231
00:08:34,710 --> 00:08:36,750
never done this before like no one in my

232
00:08:36,750 --> 00:08:38,430
company has ever done it before there's

233
00:08:38,430 --> 00:08:40,890
like three blog posts about it then the

234
00:08:40,890 --> 00:08:42,900
degree of uncertainty is really high

235
00:08:42,900 --> 00:08:44,310
right and you won't be able to build

236
00:08:44,310 --> 00:08:46,320
infrastructure that's quite as nice

237
00:08:46,320 --> 00:08:49,680
right and so obviously it's always going

238
00:08:49,680 --> 00:08:51,360
to be a range between like we understand

239
00:08:51,360 --> 00:08:52,590
this really well we don't understand it

240
00:08:52,590 --> 00:08:55,020
at all but it's really important in

241
00:08:55,020 --> 00:08:56,940
software engineering that you can deal

242
00:08:56,940 --> 00:08:58,830
with uncertainty right there's always

243
00:08:58,830 --> 00:09:00,540
going to be something that you don't

244
00:09:00,540 --> 00:09:03,750
know and they need to be able to live in

245
00:09:03,750 --> 00:09:05,920
that in that space

246
00:09:05,920 --> 00:09:10,010
so the reason why it's so important to

247
00:09:10,010 --> 00:09:12,350
understand the degree of uncertainty is

248
00:09:12,350 --> 00:09:15,080
because it allows us to then tailor the

249
00:09:15,080 --> 00:09:16,850
application to that concerning to you

250
00:09:16,850 --> 00:09:20,360
and the way we do it is by tailoring the

251
00:09:20,360 --> 00:09:23,780
degree of abstraction how abstract are

252
00:09:23,780 --> 00:09:26,030
we making stuff for our developers and

253
00:09:26,030 --> 00:09:28,210
let me get something out of the way

254
00:09:28,210 --> 00:09:30,590
abstractions are awesome you want to

255
00:09:30,590 --> 00:09:32,390
abstract everything as much as possible

256
00:09:32,390 --> 00:09:35,240
because abstractions make it really

257
00:09:35,240 --> 00:09:36,680
expressive he can do exactly what you

258
00:09:36,680 --> 00:09:38,000
want it's really fast you don't have to

259
00:09:38,000 --> 00:09:39,650
write as much code everything's great

260
00:09:39,650 --> 00:09:43,490
right except when that abstraction is

261
00:09:43,490 --> 00:09:45,020
the wrong abstraction that gets in your

262
00:09:45,020 --> 00:09:48,800
way right you go in that abstraction

263
00:09:48,800 --> 00:09:50,180
doesn't do what you want so you have to

264
00:09:50,180 --> 00:09:52,190
work around it you have to like kind of

265
00:09:52,190 --> 00:09:54,350
beat to it and like make it do what you

266
00:09:54,350 --> 00:09:56,150
want and everything is painful and

267
00:09:56,150 --> 00:09:57,890
terrible and not what you want right

268
00:09:57,890 --> 00:10:00,740
like that's that's bad so if you

269
00:10:00,740 --> 00:10:03,770
understand how well you understand the

270
00:10:03,770 --> 00:10:05,840
problem space you can tailor the

271
00:10:05,840 --> 00:10:07,280
abstraction to that degree of

272
00:10:07,280 --> 00:10:10,250
uncertainty and if you think you know I

273
00:10:10,250 --> 00:10:12,710
don't actually understand that so well

274
00:10:12,710 --> 00:10:15,170
you will reduce the degree of

275
00:10:15,170 --> 00:10:16,700
abstraction right so that's that's

276
00:10:16,700 --> 00:10:18,230
really the key how well do you

277
00:10:18,230 --> 00:10:20,570
understand what you need to do if you

278
00:10:20,570 --> 00:10:22,220
don't understand it do City grab

279
00:10:22,220 --> 00:10:24,440
subsection wait wait do you agree that's

280
00:10:24,440 --> 00:10:29,240
that's her kind of the random picture

281
00:10:29,240 --> 00:10:32,330
anyway cool so kind of the summary here

282
00:10:32,330 --> 00:10:35,180
being like go take the time to

283
00:10:35,180 --> 00:10:37,160
understand how well you know things and

284
00:10:37,160 --> 00:10:40,640
then tailor stuff towards it again it's

285
00:10:40,640 --> 00:10:43,160
always going to be the case that we have

286
00:10:43,160 --> 00:10:45,650
to deal with some uncertainty so it's

287
00:10:45,650 --> 00:10:47,300
really useful that there's a set of

288
00:10:47,300 --> 00:10:50,210
techniques that's always good we can

289
00:10:50,210 --> 00:10:52,220
solve all known problems in software

290
00:10:52,220 --> 00:10:54,560
engineering I'm going to present four

291
00:10:54,560 --> 00:10:57,380
techniques to do this again no matter

292
00:10:57,380 --> 00:10:59,420
how little you know you always want to

293
00:10:59,420 --> 00:11:03,040
do these four things the first one is

294
00:11:03,040 --> 00:11:06,740
optimizing iteration velocity so we're

295
00:11:06,740 --> 00:11:09,590
the mean with this is developer and you

296
00:11:09,590 --> 00:11:11,660
hit safe in your editor how long does it

297
00:11:11,660 --> 00:11:14,450
take to go from that moment until you

298
00:11:14,450 --> 00:11:15,860
find out whether that was a good change

299
00:11:15,860 --> 00:11:18,950
right and there's on one hand you have

300
00:11:18,950 --> 00:11:21,769
the super awesome hot coat really don't

301
00:11:21,769 --> 00:11:23,839
su type everything updates on screen

302
00:11:23,839 --> 00:11:26,570
magic and the other hand you like

303
00:11:26,570 --> 00:11:28,519
manually go to the console Kindle your

304
00:11:28,519 --> 00:11:30,440
job or application server recompile

305
00:11:30,440 --> 00:11:31,760
everything it takes 20 minutes to

306
00:11:31,760 --> 00:11:33,589
startup right that's kind of the the

307
00:11:33,589 --> 00:11:35,600
range and I think probably many of you

308
00:11:35,600 --> 00:11:37,760
can feel with me you've been somewhere

309
00:11:37,760 --> 00:11:41,740
between these these two two extremes now

310
00:11:41,740 --> 00:11:44,600
that's obviously nice for something to

311
00:11:44,600 --> 00:11:47,269
be fast but the reality is slow

312
00:11:47,269 --> 00:11:49,490
iteration cycles actually introduce

313
00:11:49,490 --> 00:11:52,519
trade-offs into our software design if

314
00:11:52,519 --> 00:11:55,370
it takes a long time to find out that

315
00:11:55,370 --> 00:11:56,360
you've made a mistake

316
00:11:56,360 --> 00:11:59,120
mistakes are expensive as a software

317
00:11:59,120 --> 00:12:01,610
designer the professional thing to do is

318
00:12:01,610 --> 00:12:03,050
them to go and say like I have to design

319
00:12:03,050 --> 00:12:05,600
this API so that no one can ever get it

320
00:12:05,600 --> 00:12:07,490
wrong in their usage right because if

321
00:12:07,490 --> 00:12:08,839
they get it wrong it's so expensive

322
00:12:08,839 --> 00:12:11,209
right so how do you even do that that

323
00:12:11,209 --> 00:12:13,639
nobody can misuse your API it's really

324
00:12:13,639 --> 00:12:15,800
difficult right so if on the other hand

325
00:12:15,800 --> 00:12:17,690
everything's super fast people can

326
00:12:17,690 --> 00:12:20,360
explore explore stuff do things you know

327
00:12:20,360 --> 00:12:22,160
figure things out because the cost of

328
00:12:22,160 --> 00:12:24,920
failure is so low then you as a designer

329
00:12:24,920 --> 00:12:26,930
of that API can say okay maybe it's fine

330
00:12:26,930 --> 00:12:29,060
for people to do a bit more exploring

331
00:12:29,060 --> 00:12:33,350
here so the message is make iteration

332
00:12:33,350 --> 00:12:37,910
cycles fast very similar is the aspect

333
00:12:37,910 --> 00:12:40,699
of debug ability so it's a framework

334
00:12:40,699 --> 00:12:43,970
author it's actually in your hand to you

335
00:12:43,970 --> 00:12:46,279
know control how hard it is to debug a

336
00:12:46,279 --> 00:12:46,850
system

337
00:12:46,850 --> 00:12:49,640
maybe you design this like awesome but

338
00:12:49,640 --> 00:12:51,860
like complex blackbox state machine that

339
00:12:51,860 --> 00:12:53,750
no one can figure out it's just random

340
00:12:53,750 --> 00:12:56,600
things sometimes the right ones but

341
00:12:56,600 --> 00:12:58,449
sometimes not but nobody knows why right

342
00:12:58,449 --> 00:13:01,430
maybe your stack traces are super long

343
00:13:01,430 --> 00:13:04,279
and confuse people or maybe on the other

344
00:13:04,279 --> 00:13:05,959
side you put in this like really

345
00:13:05,959 --> 00:13:07,579
sensible logging and tracing framework

346
00:13:07,579 --> 00:13:09,410
and people understand what's going on

347
00:13:09,410 --> 00:13:11,899
they make a mistake it's fine they're

348
00:13:11,899 --> 00:13:16,040
you know they fix it no problem similar

349
00:13:16,040 --> 00:13:18,470
to debug ability you're in control of

350
00:13:18,470 --> 00:13:26,460
how testable your system is

351
00:13:26,470 --> 00:13:29,180
like maybe in your framework it's really

352
00:13:29,180 --> 00:13:31,370
difficult to instantiate a system to the

353
00:13:31,370 --> 00:13:33,590
state where then someone goes and write

354
00:13:33,590 --> 00:13:35,180
a unit test right or maybe it's really

355
00:13:35,180 --> 00:13:37,580
easy and if it's easy to test the system

356
00:13:37,580 --> 00:13:40,160
someone can go and like make sure what

357
00:13:40,160 --> 00:13:42,980
they did is right and you know again

358
00:13:42,980 --> 00:13:45,620
it's much easier to write to built in

359
00:13:45,620 --> 00:13:46,790
that system without understanding

360
00:13:46,790 --> 00:13:51,050
everything so well cool we don't have

361
00:13:51,050 --> 00:13:53,390
three topics that are more only like

362
00:13:53,390 --> 00:13:55,910
software side of the world the fourth

363
00:13:55,910 --> 00:13:58,510
topic for solving all known problems is

364
00:13:58,510 --> 00:14:00,080
slightly different

365
00:14:00,080 --> 00:14:04,760
it's empathy so as engineers and

366
00:14:04,760 --> 00:14:06,290
software engineers who build software

367
00:14:06,290 --> 00:14:08,660
for software engineers I mentioned this

368
00:14:08,660 --> 00:14:10,880
in my last talk that's really empathy on

369
00:14:10,880 --> 00:14:12,920
easy mode right like we can understand

370
00:14:12,920 --> 00:14:14,510
how other software engineers field we

371
00:14:14,510 --> 00:14:17,180
run ourselves much more likely that our

372
00:14:17,180 --> 00:14:19,190
own intuition is actually the right one

373
00:14:19,190 --> 00:14:21,290
that if we try to have empathy with like

374
00:14:21,290 --> 00:14:23,480
a some more random person who we don't

375
00:14:23,480 --> 00:14:25,010
understand or we don't know their

376
00:14:25,010 --> 00:14:26,810
background right that's really helpful

377
00:14:26,810 --> 00:14:29,990
and can do really well today I want to

378
00:14:29,990 --> 00:14:33,110
talk about a very special aspect of

379
00:14:33,110 --> 00:14:35,660
empathy if you're designer of a

380
00:14:35,660 --> 00:14:38,240
framework you could build the perfect

381
00:14:38,240 --> 00:14:39,620
application with it right you know

382
00:14:39,620 --> 00:14:42,320
everything about it you can do get

383
00:14:42,320 --> 00:14:43,550
everything right it's like very little

384
00:14:43,550 --> 00:14:46,400
code everything is perfect but every

385
00:14:46,400 --> 00:14:48,650
other person who will ever use it will

386
00:14:48,650 --> 00:14:51,650
know less about it right and so think

387
00:14:51,650 --> 00:14:53,960
about what it means to not know

388
00:14:53,960 --> 00:14:55,490
everything about a piece of software

389
00:14:55,490 --> 00:14:57,980
right think about how you can make an

390
00:14:57,980 --> 00:15:00,589
API robust towards not knowing

391
00:15:00,589 --> 00:15:03,740
everything and you know their end result

392
00:15:03,740 --> 00:15:05,600
will be that people will just be much

393
00:15:05,600 --> 00:15:10,700
happier users of your application cool

394
00:15:10,700 --> 00:15:12,740
so now we learned how to solve all known

395
00:15:12,740 --> 00:15:15,770
problems of software engineering let's

396
00:15:15,770 --> 00:15:17,450
go to the final chapter which is

397
00:15:17,450 --> 00:15:23,720
deploying change the so this is really

398
00:15:23,720 --> 00:15:26,660
really really key what I like to say

399
00:15:26,660 --> 00:15:28,670
that you know software infrastructure

400
00:15:28,670 --> 00:15:31,010
that has no usage has no impact which

401
00:15:31,010 --> 00:15:33,920
seems obvious right but it's so common

402
00:15:33,920 --> 00:15:34,790
in this field

403
00:15:34,790 --> 00:15:36,680
the people built ivory towers right

404
00:15:36,680 --> 00:15:38,089
where you have a team and they go in

405
00:15:38,089 --> 00:15:40,670
like they've built something awesome and

406
00:15:40,670 --> 00:15:42,380
they're really excited about it and you

407
00:15:42,380 --> 00:15:45,290
know it being fun to build it was

408
00:15:45,290 --> 00:15:47,029
probably a reason why they did it and

409
00:15:47,029 --> 00:15:49,040
then they come and say like hey I have a

410
00:15:49,040 --> 00:15:50,990
thing and you're like but that doesn't

411
00:15:50,990 --> 00:15:53,360
do what I want right and then everyone's

412
00:15:53,360 --> 00:15:56,329
sad and they move on to the next ivory

413
00:15:56,329 --> 00:15:58,610
tower right so if you want to

414
00:15:58,610 --> 00:16:00,170
professionalize this that is not the

415
00:16:00,170 --> 00:16:01,880
right way to do it right getting your

416
00:16:01,880 --> 00:16:03,889
stuff adopted is everything and it's a

417
00:16:03,889 --> 00:16:07,459
big part of your job so much though that

418
00:16:07,459 --> 00:16:10,070
my first advice for how to get this

419
00:16:10,070 --> 00:16:12,800
right is actually totally in the realm

420
00:16:12,800 --> 00:16:16,190
of marketing right so software engineers

421
00:16:16,190 --> 00:16:18,079
again they're human beings they want to

422
00:16:18,079 --> 00:16:21,230
work on stuff that's cool and that they

423
00:16:21,230 --> 00:16:23,870
heard about on Twitter and that's

424
00:16:23,870 --> 00:16:27,920
exciting right so it's fine to go and

425
00:16:27,920 --> 00:16:29,959
put the stuff they want in your

426
00:16:29,959 --> 00:16:32,389
infrastructure right like they they all

427
00:16:32,389 --> 00:16:33,949
like it more and then they use it more

428
00:16:33,949 --> 00:16:35,630
and everyone's happy and if that's not

429
00:16:35,630 --> 00:16:37,310
the worst unnecessary trade-off in the

430
00:16:37,310 --> 00:16:42,260
world then it's just okay right cool so

431
00:16:42,260 --> 00:16:44,029
that's more on the marketing side let's

432
00:16:44,029 --> 00:16:47,269
go to some bit more serious topic which

433
00:16:47,269 --> 00:16:50,870
is that adopting software is easier if

434
00:16:50,870 --> 00:16:53,810
you can do incremental adoption what

435
00:16:53,810 --> 00:16:56,269
this means is that instead of going like

436
00:16:56,269 --> 00:16:57,949
Haley's new framework rewrite everything

437
00:16:57,949 --> 00:16:59,990
from scratch in two years and hopefully

438
00:16:59,990 --> 00:17:02,630
it's good to make incremental progress

439
00:17:02,630 --> 00:17:05,839
as you kind of work on it like have

440
00:17:05,839 --> 00:17:07,339
something after months after something

441
00:17:07,339 --> 00:17:11,480
after two months you know and and you

442
00:17:11,480 --> 00:17:13,730
know I think basically even if you start

443
00:17:13,730 --> 00:17:15,230
with that major rewrite at some point

444
00:17:15,230 --> 00:17:16,880
someone's gonna say like we need to have

445
00:17:16,880 --> 00:17:18,650
something in production alright we can't

446
00:17:18,650 --> 00:17:20,750
go on like this where we kind of do

447
00:17:20,750 --> 00:17:23,179
everything twice for like that whole

448
00:17:23,179 --> 00:17:25,459
period of time right so this is really

449
00:17:25,459 --> 00:17:26,660
something that if you want your stuff

450
00:17:26,660 --> 00:17:29,179
adopted it's a key that you allow for

451
00:17:29,179 --> 00:17:32,780
incremental adoption first technique

452
00:17:32,780 --> 00:17:34,640
here is really concrete just think about

453
00:17:34,640 --> 00:17:36,440
two different scenarios

454
00:17:36,440 --> 00:17:39,590
the first is composition of your new

455
00:17:39,590 --> 00:17:42,260
framework code into a legacy code let's

456
00:17:42,260 --> 00:17:43,850
say you haven't gotten around to like

457
00:17:43,850 --> 00:17:45,830
rewriting the app shell yet everything's

458
00:17:45,830 --> 00:17:48,470
still kind of the old way you did it

459
00:17:48,470 --> 00:17:49,820
but the team comes and says I'm going to

460
00:17:49,820 --> 00:17:52,039
build that you feature in the new

461
00:17:52,039 --> 00:17:54,440
framework and so your framework is

462
00:17:54,440 --> 00:17:56,299
designed such that they can kind of live

463
00:17:56,299 --> 00:17:58,639
inside the old codebase right that's

464
00:17:58,639 --> 00:18:01,039
composition into legacy code and then

465
00:18:01,039 --> 00:18:02,470
there's the other side which is

466
00:18:02,470 --> 00:18:05,690
composition of legacy code into your

467
00:18:05,690 --> 00:18:08,000
codebase let's say you have is like

468
00:18:08,000 --> 00:18:10,450
super ultra customized business-critical

469
00:18:10,450 --> 00:18:14,990
jQuery datepicker right and and and

470
00:18:14,990 --> 00:18:16,789
people want to have it right and they

471
00:18:16,789 --> 00:18:19,549
want to keep it and so you you design

472
00:18:19,549 --> 00:18:21,950
your framework such that that jQuery

473
00:18:21,950 --> 00:18:24,470
thing which probably valid and violates

474
00:18:24,470 --> 00:18:26,509
all the assumptions you ever made still

475
00:18:26,509 --> 00:18:28,970
works right that is composition of

476
00:18:28,970 --> 00:18:31,370
legacy code if your new code base both

477
00:18:31,370 --> 00:18:33,409
of these things put trade-off pressure

478
00:18:33,409 --> 00:18:35,840
on your system because suddenly all

479
00:18:35,840 --> 00:18:38,120
these all these assumptions are no

480
00:18:38,120 --> 00:18:40,940
longer valid but but it's probably worth

481
00:18:40,940 --> 00:18:42,259
it because it allows people to

482
00:18:42,259 --> 00:18:46,460
incrementally adopt your software second

483
00:18:46,460 --> 00:18:48,879
technique I call temporary imperfection

484
00:18:48,879 --> 00:18:51,889
so again as a framework author you

485
00:18:51,889 --> 00:18:53,750
probably have this like really idealized

486
00:18:53,750 --> 00:18:56,210
view of the world like how people build

487
00:18:56,210 --> 00:18:58,279
software using your thing and then it

488
00:18:58,279 --> 00:19:01,009
comes crashing down in thing when people

489
00:19:01,009 --> 00:19:02,960
do incremental adoption because not

490
00:19:02,960 --> 00:19:05,720
everything is great so my advice would

491
00:19:05,720 --> 00:19:08,120
be to do the following write a Lynch

492
00:19:08,120 --> 00:19:10,220
rule using is Lind or something like

493
00:19:10,220 --> 00:19:12,710
that that identifies the old way of

494
00:19:12,710 --> 00:19:15,740
doing something right and then when

495
00:19:15,740 --> 00:19:18,019
someone when there's code in the code

496
00:19:18,019 --> 00:19:20,299
base that isn't not the new way you get

497
00:19:20,299 --> 00:19:21,139
an error message

498
00:19:21,139 --> 00:19:22,519
hopefully that error message also says

499
00:19:22,519 --> 00:19:24,200
you know this is no longer the right way

500
00:19:24,200 --> 00:19:25,759
of doing it here are pointers to

501
00:19:25,759 --> 00:19:28,429
documentation how to do it right that's

502
00:19:28,429 --> 00:19:30,769
step one you have this lint rule step

503
00:19:30,769 --> 00:19:34,340
two is to then go and allow all existing

504
00:19:34,340 --> 00:19:37,100
violations saying okay here's like 500

505
00:19:37,100 --> 00:19:38,360
times where people do it wrong

506
00:19:38,360 --> 00:19:41,000
it's all fine right like these are all

507
00:19:41,000 --> 00:19:43,850
allowed now you're in a state where all

508
00:19:43,850 --> 00:19:47,870
new code has to comply with a new way of

509
00:19:47,870 --> 00:19:49,700
doing it and this is really powerful

510
00:19:49,700 --> 00:19:50,840
because there might be all these

511
00:19:50,840 --> 00:19:52,399
engineers in your organization who

512
00:19:52,399 --> 00:19:54,559
haven't really read the email where they

513
00:19:54,559 --> 00:19:56,240
were told that they need to do something

514
00:19:56,240 --> 00:19:57,799
differently they haven't come to your

515
00:19:57,799 --> 00:19:58,909
talk right

516
00:19:58,909 --> 00:20:00,139
but these know they get an error message

517
00:20:00,139 --> 00:20:02,240
and they are ok cool I can I can do it

518
00:20:02,240 --> 00:20:04,790
you weigh right it's really powerful the

519
00:20:04,790 --> 00:20:06,020
other thing that's kind of interesting

520
00:20:06,020 --> 00:20:08,570
inside said this allow list which you've

521
00:20:08,570 --> 00:20:09,950
probably checked into your git

522
00:20:09,950 --> 00:20:12,710
repository it's a lecture of technical

523
00:20:12,710 --> 00:20:15,020
debt right technical depth can be this

524
00:20:15,020 --> 00:20:17,630
like abstract concept that you know you

525
00:20:17,630 --> 00:20:20,660
have and it's probably out there

526
00:20:20,660 --> 00:20:23,360
somewhere but like really difficult to

527
00:20:23,360 --> 00:20:25,790
nail down where it is right but this is

528
00:20:25,790 --> 00:20:28,190
loudest like you literally know in file

529
00:20:28,190 --> 00:20:29,720
X line 15

530
00:20:29,720 --> 00:20:32,210
there's my technical debt right and now

531
00:20:32,210 --> 00:20:34,370
you can pay it off you can maybe have a

532
00:20:34,370 --> 00:20:36,380
you know team fix it where you say like

533
00:20:36,380 --> 00:20:37,940
one week we're just going to go at this

534
00:20:37,940 --> 00:20:39,500
list and like it's gonna be gone after

535
00:20:39,500 --> 00:20:41,540
that week and we're all happy right so

536
00:20:41,540 --> 00:20:42,530
that's really I think it's a powerful

537
00:20:42,530 --> 00:20:45,410
way to think about like materializing

538
00:20:45,410 --> 00:20:46,730
technical debt is something that's like

539
00:20:46,730 --> 00:20:48,830
very concrete just like depth on your

540
00:20:48,830 --> 00:20:52,750
bank account you have this modest cool

541
00:20:52,750 --> 00:20:56,090
next technique which is key for for

542
00:20:56,090 --> 00:20:59,300
getting my adoption is to try for

543
00:20:59,300 --> 00:21:01,730
automated migration right it's not gonna

544
00:21:01,730 --> 00:21:03,770
get you all the way but it's pretty

545
00:21:03,770 --> 00:21:04,460
powerful

546
00:21:04,460 --> 00:21:06,140
this for example GS code shift from

547
00:21:06,140 --> 00:21:07,910
Facebook but basically you're kind of

548
00:21:07,910 --> 00:21:09,440
described a pattern this is the old way

549
00:21:09,440 --> 00:21:11,210
visiting your way you get from her from

550
00:21:11,210 --> 00:21:16,640
A to B it's great again this is possibly

551
00:21:16,640 --> 00:21:19,880
problematic right it puts trait of

552
00:21:19,880 --> 00:21:22,070
pressure on your on your new API because

553
00:21:22,070 --> 00:21:24,620
now the new API has to basically be

554
00:21:24,620 --> 00:21:26,870
happy with what was already in the code

555
00:21:26,870 --> 00:21:28,820
but it can't really add new stuff in

556
00:21:28,820 --> 00:21:31,429
this mechanism but it might be worth it

557
00:21:31,429 --> 00:21:33,860
because you know no one has to do that

558
00:21:33,860 --> 00:21:35,420
work manually it's probably going to

559
00:21:35,420 --> 00:21:37,250
make people more happy than having to do

560
00:21:37,250 --> 00:21:41,330
everything by themselves alright moving

561
00:21:41,330 --> 00:21:44,059
on from these like more software things

562
00:21:44,059 --> 00:21:46,190
it's like a little bit more about humans

563
00:21:46,190 --> 00:21:49,520
I think the one thing I would like to

564
00:21:49,520 --> 00:21:52,010
take everyone away from this talk is

565
00:21:52,010 --> 00:21:56,000
that when you're in this role of being

566
00:21:56,000 --> 00:21:57,890
like the person responsible for the

567
00:21:57,890 --> 00:22:00,530
software infrastructure you always need

568
00:22:00,530 --> 00:22:02,390
a customer zero right that is what's

569
00:22:02,390 --> 00:22:04,250
going to that's the antidote to the

570
00:22:04,250 --> 00:22:08,150
ivory tower the customer zero what it's

571
00:22:08,150 --> 00:22:09,440
going to happen is they're going to be

572
00:22:09,440 --> 00:22:11,240
the first customer we're going to who's

573
00:22:11,240 --> 00:22:12,980
going to use your thing and build a real

574
00:22:12,980 --> 00:22:15,240
product and what you need to do is you

575
00:22:15,240 --> 00:22:17,070
go and sit with them to pay programming

576
00:22:17,070 --> 00:22:18,600
or not like but at least be there and

577
00:22:18,600 --> 00:22:20,970
like go build it with them right this is

578
00:22:20,970 --> 00:22:23,309
before you declare it you're done right

579
00:22:23,309 --> 00:22:24,510
because now you can validate your

580
00:22:24,510 --> 00:22:27,120
assumption you can find corner cases and

581
00:22:27,120 --> 00:22:29,309
you can help like you can iterate on

582
00:22:29,309 --> 00:22:30,809
your framework until it's actually good

583
00:22:30,809 --> 00:22:34,350
it might not have been there right now

584
00:22:34,350 --> 00:22:36,450
this first customer should not be a

585
00:22:36,450 --> 00:22:37,830
migration speech chump it should be

586
00:22:37,830 --> 00:22:39,390
something you build from scratch because

587
00:22:39,390 --> 00:22:40,950
when you know migrations are always

588
00:22:40,950 --> 00:22:42,390
gonna be somewhat painful and long

589
00:22:42,390 --> 00:22:44,040
winding and you know why would you

590
00:22:44,040 --> 00:22:45,360
migrate to something that might not even

591
00:22:45,360 --> 00:22:46,950
be what you want yet right so you need

592
00:22:46,950 --> 00:22:49,830
quick feedback cycles at that point but

593
00:22:49,830 --> 00:22:51,360
this will be really crucial to really

594
00:22:51,360 --> 00:22:53,059
ensure that what you're building is good

595
00:22:53,059 --> 00:22:56,220
another important piece of advice is one

596
00:22:56,220 --> 00:22:58,320
of the ironic things is that if you

597
00:22:58,320 --> 00:23:00,000
never build anything with your thing how

598
00:23:00,000 --> 00:23:01,170
do you even build right the

599
00:23:01,170 --> 00:23:03,750
documentation for how to build something

600
00:23:03,750 --> 00:23:05,820
with it right like how to how to how to

601
00:23:05,820 --> 00:23:07,440
write the onboarding dog to start from

602
00:23:07,440 --> 00:23:08,970
scratch if you've never done it right so

603
00:23:08,970 --> 00:23:11,760
if you go and have a customer's ear and

604
00:23:11,760 --> 00:23:13,890
you work with them that's the one time

605
00:23:13,890 --> 00:23:15,480
chance you really get to write that

606
00:23:15,480 --> 00:23:17,400
onboarding dog right so don't don't miss

607
00:23:17,400 --> 00:23:18,410
it

608
00:23:18,410 --> 00:23:20,910
now because there's all that kind of

609
00:23:20,910 --> 00:23:23,910
designed for large organizations there's

610
00:23:23,910 --> 00:23:26,070
gonna be some organizational challenges

611
00:23:26,070 --> 00:23:28,740
is finding a customers you're right you

612
00:23:28,740 --> 00:23:30,270
might not find that team that's like

613
00:23:30,270 --> 00:23:32,670
cool with working with it's unproven

614
00:23:32,670 --> 00:23:35,190
unstable and like probably not even good

615
00:23:35,190 --> 00:23:38,610
piece of framework right so what do you

616
00:23:38,610 --> 00:23:41,700
do to get that customer zero that that's

617
00:23:41,700 --> 00:23:44,850
the right one for you what I've found is

618
00:23:44,850 --> 00:23:47,280
that there's typically a team that likes

619
00:23:47,280 --> 00:23:49,170
to be on the cutting edge right one of

620
00:23:49,170 --> 00:23:51,410
the things you can pitch is to say hey

621
00:23:51,410 --> 00:23:53,700
you'll eventually have to migrate to

622
00:23:53,700 --> 00:23:56,490
this because that's the future why don't

623
00:23:56,490 --> 00:23:58,020
you want to be on the new thing already

624
00:23:58,020 --> 00:24:00,480
so you save that step right that could

625
00:24:00,480 --> 00:24:02,220
be very attractive for it to him and you

626
00:24:02,220 --> 00:24:04,290
can argue because I'm gonna sit with you

627
00:24:04,290 --> 00:24:06,809
I'm gonna actually tailor or make this

628
00:24:06,809 --> 00:24:09,120
framework to do what you want right you

629
00:24:09,120 --> 00:24:11,520
were you're privileged over any future

630
00:24:11,520 --> 00:24:13,350
user who will just have to kind of deal

631
00:24:13,350 --> 00:24:15,900
with what what it is because I'm going

632
00:24:15,900 --> 00:24:17,970
to like realize okay it's not perfect

633
00:24:17,970 --> 00:24:19,140
for this use case and I'm gonna make it

634
00:24:19,140 --> 00:24:20,640
perfect right this can be really

635
00:24:20,640 --> 00:24:22,530
powerful even considering all the

636
00:24:22,530 --> 00:24:26,340
downsides now maybe that doesn't work in

637
00:24:26,340 --> 00:24:28,380
that case your organization has to be

638
00:24:28,380 --> 00:24:28,650
made

639
00:24:28,650 --> 00:24:30,720
mature enough to accept that we will

640
00:24:30,720 --> 00:24:32,340
have to be a mandate right there will

641
00:24:32,340 --> 00:24:34,830
have to be the time or you say you

642
00:24:34,830 --> 00:24:38,640
actually have to use this right and and

643
00:24:38,640 --> 00:24:40,770
that can be can be confusing for

644
00:24:40,770 --> 00:24:42,840
organization but it's so important

645
00:24:42,840 --> 00:24:45,570
because if you have it the alternative

646
00:24:45,570 --> 00:24:46,800
is that the infrastructure team is just

647
00:24:46,800 --> 00:24:48,300
going to go and build ivory towers and

648
00:24:48,300 --> 00:24:49,710
everyone's unhappy right so yeah well

649
00:24:49,710 --> 00:24:51,450
it's still better to mandate that

650
00:24:51,450 --> 00:24:53,670
somewhat to use yourself dock for your

651
00:24:53,670 --> 00:24:57,060
stuff and not doing it all all right we

652
00:24:57,060 --> 00:24:58,560
have our first customer eventually you

653
00:24:58,560 --> 00:25:01,580
will have to do the first migration and

654
00:25:01,580 --> 00:25:05,490
once again it's actually your job to do

655
00:25:05,490 --> 00:25:07,380
this migration together with that team

656
00:25:07,380 --> 00:25:09,030
that actually wants to do it so they're

657
00:25:09,030 --> 00:25:11,190
migrating to your framework the reason

658
00:25:11,190 --> 00:25:13,350
why it's so key that you do this

659
00:25:13,350 --> 00:25:15,840
yourself is you have that point B that's

660
00:25:15,840 --> 00:25:17,700
the future to your framework and you

661
00:25:17,700 --> 00:25:19,050
have to point a that's where the team is

662
00:25:19,050 --> 00:25:22,170
right if you're not there that team will

663
00:25:22,170 --> 00:25:25,140
go and say hey I need to go to point B

664
00:25:25,140 --> 00:25:26,730
it's difficult but I'll figure it out

665
00:25:26,730 --> 00:25:28,440
they kind of take it as god given like

666
00:25:28,440 --> 00:25:30,000
because they take your infrastructure

667
00:25:30,000 --> 00:25:32,580
it's kind of being there right you can

668
00:25:32,580 --> 00:25:33,750
be like hmm

669
00:25:33,750 --> 00:25:35,910
I could make that one change here and

670
00:25:35,910 --> 00:25:38,010
would be so much easier and because I

671
00:25:38,010 --> 00:25:39,660
have this all in my head I know what

672
00:25:39,660 --> 00:25:42,030
what's possible to change and because

673
00:25:42,030 --> 00:25:43,260
you're a lazy person you're gonna make

674
00:25:43,260 --> 00:25:44,430
that migration you're really easy and

675
00:25:44,430 --> 00:25:46,650
that is going to help everyone who comes

676
00:25:46,650 --> 00:25:50,270
after you have a much better time right

677
00:25:50,270 --> 00:25:52,950
cool these were the things I want to

678
00:25:52,950 --> 00:25:54,660
talk about just let me summarize really

679
00:25:54,660 --> 00:25:56,670
quick the first thing we need to do is

680
00:25:56,670 --> 00:25:59,150
we understand the problem space and then

681
00:25:59,150 --> 00:26:02,130
tailor our abstractions to that degree

682
00:26:02,130 --> 00:26:04,620
of uncertainty even if uncertainty is

683
00:26:04,620 --> 00:26:07,650
high we want to solve all known problems

684
00:26:07,650 --> 00:26:09,270
you might remember that increase

685
00:26:09,270 --> 00:26:11,550
interracial velocity make the ability

686
00:26:11,550 --> 00:26:13,500
great testability great and have an

687
00:26:13,500 --> 00:26:15,810
empathy with your users and then finally

688
00:26:15,810 --> 00:26:18,240
nothing here matters if you don't focus

689
00:26:18,240 --> 00:26:21,120
on team adoption pick yourself a likable

690
00:26:21,120 --> 00:26:23,370
focus on incremental adoption and get

691
00:26:23,370 --> 00:26:26,510
those customer a migration zero folks

692
00:26:26,510 --> 00:26:28,860
that's all I had today thank you very

693
00:26:28,860 --> 00:26:30,909
much

