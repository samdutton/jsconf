1
00:00:03,529 --> 00:00:10,469

hey everybody how's it going hi hi hi hi

2
00:00:10,469 --> 00:00:15,210
hey hi hi so this is a talk called

3
00:00:15,210 --> 00:00:17,580
making modern web sites my name is

4
00:00:17,580 --> 00:00:19,050
Patrick Kettner this is me if you ever

5
00:00:19,050 --> 00:00:20,400
see me online i'm pretty much ease that

6
00:00:20,400 --> 00:00:22,109
appetite everywhere i like to take

7
00:00:22,109 --> 00:00:24,390
pictures of cakes my girlfriend makes

8
00:00:24,390 --> 00:00:25,320
them for me she's over there she's

9
00:00:25,320 --> 00:00:27,119
really cool she want to say hi I also

10
00:00:27,119 --> 00:00:29,279
work at Microsoft and I work

11
00:00:29,279 --> 00:00:31,109
specifically on edge I'm a program

12
00:00:31,109 --> 00:00:33,360
manager for interop so basically if

13
00:00:33,360 --> 00:00:35,700
something in edge is shitty it's

14
00:00:35,700 --> 00:00:37,440
probably my fault or my problem to get

15
00:00:37,440 --> 00:00:39,090
it fixed so feel free to complain to me

16
00:00:39,090 --> 00:00:41,399
either in person or online that being

17
00:00:41,399 --> 00:00:42,629
said edges and shitty it's a really

18
00:00:42,629 --> 00:00:44,850
great browser to check it out so anyway

19
00:00:44,850 --> 00:00:45,899
I don't here to talk about I jumping to

20
00:00:45,899 --> 00:00:47,399
talk about website specifically making

21
00:00:47,399 --> 00:00:49,020
websites and specifically help making

22
00:00:49,020 --> 00:00:51,030
websites is hard at least to make good

23
00:00:51,030 --> 00:00:54,210
websites and it really really hard and

24
00:00:54,210 --> 00:00:56,340
it didn't used to be when I was a kid so

25
00:00:56,340 --> 00:00:58,020
my first websites looked a lot like this

26
00:00:58,020 --> 00:00:59,760
this not quite this very first website

27
00:00:59,760 --> 00:01:01,980
but it was you know throw up some stuff

28
00:01:01,980 --> 00:01:04,140
HTML on a page and it's done and it's

29
00:01:04,140 --> 00:01:05,400
better than most things in the world is

30
00:01:05,400 --> 00:01:06,479
most of the things websites in the world

31
00:01:06,479 --> 00:01:10,170
didn't exist yet um but now there's just

32
00:01:10,170 --> 00:01:12,000
a ton of new features that get added to

33
00:01:12,000 --> 00:01:14,070
the web platform every single day and

34
00:01:14,070 --> 00:01:15,450
it's kind of overwhelming and you just

35
00:01:15,450 --> 00:01:16,560
kind of feel like you have to know

36
00:01:16,560 --> 00:01:18,030
everything and it sucks and you just

37
00:01:18,030 --> 00:01:19,619
kind of want to make it stop but you

38
00:01:19,619 --> 00:01:21,990
don't though you don't want to make it

39
00:01:21,990 --> 00:01:23,759
stop you want to make it better and we

40
00:01:23,759 --> 00:01:26,430
make it better by using tools there's a

41
00:01:26,430 --> 00:01:28,170
lot of tools out there because there's a

42
00:01:28,170 --> 00:01:29,670
lot of different feature sets I actually

43
00:01:29,670 --> 00:01:31,320
work on one specifically on the lead

44
00:01:31,320 --> 00:01:34,259
maintainer for moderniser it's the most

45
00:01:34,259 --> 00:01:35,670
second use JavaScript library on the web

46
00:01:35,670 --> 00:01:37,920
after jquery if you don't know it's

47
00:01:37,920 --> 00:01:39,090
basically like a feature detection

48
00:01:39,090 --> 00:01:41,400
library rather than do like you a sniff

49
00:01:41,400 --> 00:01:42,750
user agent sniffing you're able to check

50
00:01:42,750 --> 00:01:43,920
to see if a feature exists and if it

51
00:01:43,920 --> 00:01:46,799
does do something it's cool um it's

52
00:01:46,799 --> 00:01:48,960
really popular justin bieber actually

53
00:01:48,960 --> 00:01:50,460
hasn't moderniser hoodie for some reason

54
00:01:50,460 --> 00:01:52,140
this is an actual photo he really owns

55
00:01:52,140 --> 00:01:53,610
that it costs like five hundred dollars

56
00:01:53,610 --> 00:01:54,810
it's from France I don't know why they

57
00:01:54,810 --> 00:01:56,219
have it but modernizes on it but that

58
00:01:56,219 --> 00:01:59,159
was fine um yeah anyway so moderniser

59
00:01:59,159 --> 00:02:00,719
actually came out with version 3

60
00:02:00,719 --> 00:02:03,060
recently version 2 was in 2011 so

61
00:02:03,060 --> 00:02:04,920
version 3 getting shipped finally was

62
00:02:04,920 --> 00:02:06,869
kind of a big deal for me I was a very

63
00:02:06,869 --> 00:02:09,509
prolonged pregnancy um we just shipped

64
00:02:09,509 --> 00:02:11,610
it and if you haven't looked at

65
00:02:11,610 --> 00:02:12,900
moderniser since we shipped it in

66
00:02:12,900 --> 00:02:13,630
September

67
00:02:13,630 --> 00:02:15,160
you might be familiar with this this is

68
00:02:15,160 --> 00:02:17,890
the website it served as well since 2011

69
00:02:17,890 --> 00:02:20,230
it was you know it was fine at the time

70
00:02:20,230 --> 00:02:22,330
it got kind of aged so we ended up

71
00:02:22,330 --> 00:02:24,130
spending a lot of time wanting to update

72
00:02:24,130 --> 00:02:26,140
this and make it better we did a whole

73
00:02:26,140 --> 00:02:27,670
lot of work that old team did a whole

74
00:02:27,670 --> 00:02:29,140
bunch of work and eventually we came up

75
00:02:29,140 --> 00:02:31,840
with this which is the new website and

76
00:02:31,840 --> 00:02:33,520
it was cool it took a lot of energy took

77
00:02:33,520 --> 00:02:34,960
a lot of work and no one gives a

78
00:02:34,960 --> 00:02:38,470
about it other than me um no one really

79
00:02:38,470 --> 00:02:40,690
cares at best modernizer just doesn't

80
00:02:40,690 --> 00:02:42,340
get in the way like if you're wanting a

81
00:02:42,340 --> 00:02:44,230
new fee if somebody's no one's going to

82
00:02:44,230 --> 00:02:45,580
modernize accom every morning when they

83
00:02:45,580 --> 00:02:46,720
wake up they're only doing it because

84
00:02:46,720 --> 00:02:47,920
they want to make better websites they

85
00:02:47,920 --> 00:02:49,330
want to get a tool and get out of the

86
00:02:49,330 --> 00:02:51,520
way we're up pit stop at best along

87
00:02:51,520 --> 00:02:53,320
their way but we still want to make our

88
00:02:53,320 --> 00:02:56,530
users happy and we do that by making it

89
00:02:56,530 --> 00:02:58,270
really really fast and having a whole

90
00:02:58,270 --> 00:03:00,460
lot of fun features in it so like I said

91
00:03:00,460 --> 00:03:01,780
this was the website but what I'm going

92
00:03:01,780 --> 00:03:03,190
to be talking about mostly the download

93
00:03:03,190 --> 00:03:05,050
page which is a kind of a complicated

94
00:03:05,050 --> 00:03:08,680
app which looks like this so um this is

95
00:03:08,680 --> 00:03:10,120
the new website and this is the

96
00:03:10,120 --> 00:03:11,590
gentleman who designed the new website

97
00:03:11,590 --> 00:03:13,060
guy named Joe critchley out of England

98
00:03:13,060 --> 00:03:15,850
he's great and like most designers when

99
00:03:15,850 --> 00:03:17,560
he went and created a new website he

100
00:03:17,560 --> 00:03:19,990
wanted to make it look pretty with the

101
00:03:19,990 --> 00:03:21,160
thoughts because a lot of the website

102
00:03:21,160 --> 00:03:24,060
fonts are kind of boring and so he used

103
00:03:24,060 --> 00:03:26,920
the fun face API palm faces you know

104
00:03:26,920 --> 00:03:28,960
loads got some phones is great and makes

105
00:03:28,960 --> 00:03:30,220
your website look called news and fancy

106
00:03:30,220 --> 00:03:30,940
unless you have a slow internet

107
00:03:30,940 --> 00:03:32,290
connection like I'm sure all of you are

108
00:03:32,290 --> 00:03:33,340
aware right now in which case the

109
00:03:33,340 --> 00:03:35,260
website looks like this which sucks

110
00:03:35,260 --> 00:03:36,700
because the websites completely broken

111
00:03:36,700 --> 00:03:39,010
you can't do anything on it but it

112
00:03:39,010 --> 00:03:40,750
actually does work it's just looks

113
00:03:40,750 --> 00:03:42,700
broken everything functions you just

114
00:03:42,700 --> 00:03:44,590
have to be a mind reader or use like the

115
00:03:44,590 --> 00:03:46,030
accessibility API to be able to access

116
00:03:46,030 --> 00:03:48,820
it and so the way to get around that is

117
00:03:48,820 --> 00:03:50,709
uh there's a great new API called the

118
00:03:50,709 --> 00:03:52,480
font loading module if you're not aware

119
00:03:52,480 --> 00:03:54,700
this is a new JavaScript API that's been

120
00:03:54,700 --> 00:03:57,760
added a while back in chrome and what it

121
00:03:57,760 --> 00:04:01,390
looks like is this you have a new

122
00:04:01,390 --> 00:04:03,850
document fonts property that has a dot

123
00:04:03,850 --> 00:04:06,040
ready method and that gives you a

124
00:04:06,040 --> 00:04:08,680
promise that promise gets fired with the

125
00:04:08,680 --> 00:04:10,480
results once the fonts have been loaded

126
00:04:10,480 --> 00:04:11,650
previously if you wanted to know if a

127
00:04:11,650 --> 00:04:13,990
font had been loaded you had to wait

128
00:04:13,990 --> 00:04:17,170
until the actual load event fired then

129
00:04:17,170 --> 00:04:18,250
you had to wait for it to partisan the

130
00:04:18,250 --> 00:04:19,510
only we could know that is if you like

131
00:04:19,510 --> 00:04:21,160
injected into canvas and check the width

132
00:04:21,160 --> 00:04:22,780
of the character length in campus by

133
00:04:22,780 --> 00:04:24,220
pixels it was terrible this is great

134
00:04:24,220 --> 00:04:27,220
this is God's end and so

135
00:04:27,220 --> 00:04:29,590
the only problem with it oh so sorry so

136
00:04:29,590 --> 00:04:31,450
rather than having a font definition

137
00:04:31,450 --> 00:04:32,800
that looks like this where you define

138
00:04:32,800 --> 00:04:35,200
your web site your website fonts after

139
00:04:35,200 --> 00:04:37,660
your custom fonts you end up having two

140
00:04:37,660 --> 00:04:39,430
different declarations like this one

141
00:04:39,430 --> 00:04:41,650
with your body at the top where you have

142
00:04:41,650 --> 00:04:43,660
your website plants website fonts rather

143
00:04:43,660 --> 00:04:45,730
and then underneath it you have the

144
00:04:45,730 --> 00:04:48,070
fonts loaded class which is where what

145
00:04:48,070 --> 00:04:49,470
gets added when the fonts loaded so

146
00:04:49,470 --> 00:04:51,760
instead of this it looks like this and

147
00:04:51,760 --> 00:04:53,080
then after a couple seconds it look goes

148
00:04:53,080 --> 00:04:54,730
like that a little clot dance and

149
00:04:54,730 --> 00:04:56,170
otherwise it's great it's great API

150
00:04:56,170 --> 00:04:57,970
makes your website's load a lot faster

151
00:04:57,970 --> 00:05:00,340
the only problem is the support it's

152
00:05:00,340 --> 00:05:01,810
only supported in chrome and firefox

153
00:05:01,810 --> 00:05:04,030
right now and working at Microsoft I

154
00:05:04,030 --> 00:05:05,350
can't really ship something that doesn't

155
00:05:05,350 --> 00:05:06,520
work good in the browser or at least

156
00:05:06,520 --> 00:05:08,530
work in the browser it also doesn't work

157
00:05:08,530 --> 00:05:10,630
in Safari or mobile iOS so it's not

158
00:05:10,630 --> 00:05:12,430
really ideal but there is a thing a

159
00:05:12,430 --> 00:05:14,620
polyfill called font face observer by

160
00:05:14,620 --> 00:05:16,930
Bram Stein it's great rather than your

161
00:05:16,930 --> 00:05:17,980
code look like this you just make a

162
00:05:17,980 --> 00:05:20,650
minor change and you import the font

163
00:05:20,650 --> 00:05:23,440
face observer and otherwise your code

164
00:05:23,440 --> 00:05:24,940
books the same we just add a class at

165
00:05:24,940 --> 00:05:27,700
the bottom inside of once the fonts been

166
00:05:27,700 --> 00:05:29,020
loaded we had class to the body and

167
00:05:29,020 --> 00:05:39,530
you're good but breaking news

168
00:05:39,540 --> 00:05:44,680
visit it breaking news um so there's

169
00:05:44,680 --> 00:05:46,449
actually a new CSS property called font

170
00:05:46,449 --> 00:05:48,310
display it does the exact same thing

171
00:05:48,310 --> 00:05:49,780
it'll swap out your fonts as soon as the

172
00:05:49,780 --> 00:05:53,110
fonts Brett loaded rather then you know

173
00:05:53,110 --> 00:05:54,729
like blocking or waiting till the next

174
00:05:54,729 --> 00:05:56,050
red light or anything it's a great API

175
00:05:56,050 --> 00:05:58,030
it's brand new like literally brand new

176
00:05:58,030 --> 00:06:00,070
it's December first like a couple of

177
00:06:00,070 --> 00:06:01,300
days ago we just gotta do Chrome Canary

178
00:06:01,300 --> 00:06:03,370
so probably a year from now everything I

179
00:06:03,370 --> 00:06:04,690
just said is complete nonsense you won't

180
00:06:04,690 --> 00:06:06,070
need to do it but this is great best

181
00:06:06,070 --> 00:06:07,539
feature anyway back to what I was saying

182
00:06:07,539 --> 00:06:10,180
so uh this is what like I said this is

183
00:06:10,180 --> 00:06:11,860
kind of this weird Dancy thing that

184
00:06:11,860 --> 00:06:13,389
happens when the fonts load it's not

185
00:06:13,389 --> 00:06:15,070
ideal especially if you have real design

186
00:06:15,070 --> 00:06:17,979
focus people um so rather than setting a

187
00:06:17,979 --> 00:06:20,740
class you also the option to do like set

188
00:06:20,740 --> 00:06:22,090
a property and local storage then the

189
00:06:22,090 --> 00:06:24,010
next time it loads you can check if that

190
00:06:24,010 --> 00:06:25,000
local storage is already there at the

191
00:06:25,000 --> 00:06:26,139
very top your body it's at the class

192
00:06:26,139 --> 00:06:27,490
immediately and your fonts are

193
00:06:27,490 --> 00:06:29,380
constantly that one fun it's better and

194
00:06:29,380 --> 00:06:32,020
if it's cash properly and the user in

195
00:06:32,020 --> 00:06:33,310
clear part of the cash or the browser

196
00:06:33,310 --> 00:06:35,710
and clear part of the cash and the point

197
00:06:35,710 --> 00:06:36,789
being this is always basically an

198
00:06:36,789 --> 00:06:38,380
educated guess we don't know for a fact

199
00:06:38,380 --> 00:06:39,789
whether or not that fonts going to be

200
00:06:39,789 --> 00:06:42,160
there without that skip unless we use

201
00:06:42,160 --> 00:06:44,260
something like service worker so service

202
00:06:44,260 --> 00:06:45,490
workers are really cool they're kind of

203
00:06:45,490 --> 00:06:47,550
a big deal if you've never heard of them

204
00:06:47,550 --> 00:06:50,020
as anybody not heard of service workers

205
00:06:50,020 --> 00:06:53,740
before no great cool so it's gives you

206
00:06:53,740 --> 00:06:55,419
adds a whole lot of new features to the

207
00:06:55,419 --> 00:06:57,010
web platform stuff like offline

208
00:06:57,010 --> 00:06:58,720
experiences push notifications

209
00:06:58,720 --> 00:07:02,349
background sync and much much more but

210
00:07:02,349 --> 00:07:03,370
the two parts that I'm going to be

211
00:07:03,370 --> 00:07:05,740
discussing our kind of more fundamental

212
00:07:05,740 --> 00:07:08,199
pieces fetch in cash so they're both New

213
00:07:08,199 --> 00:07:10,720
api's fetches sort of network proxy any

214
00:07:10,720 --> 00:07:12,310
network requests that goes out through

215
00:07:12,310 --> 00:07:14,349
the browser whether it be from CSS xhr

216
00:07:14,349 --> 00:07:16,120
JavaScript anything at all as long as

217
00:07:16,120 --> 00:07:17,560
it's from your same domain it'll go

218
00:07:17,560 --> 00:07:18,909
through fetch you have the opportunity

219
00:07:18,909 --> 00:07:21,099
to catch that request modify it send it

220
00:07:21,099 --> 00:07:23,470
on do whatever you want cash is like the

221
00:07:23,470 --> 00:07:24,610
browser cache only it's completely

222
00:07:24,610 --> 00:07:26,260
programmable so you're able to control

223
00:07:26,260 --> 00:07:29,260
what goes into it so we avoid that whole

224
00:07:29,260 --> 00:07:31,870
is it or is it not cached thing so

225
00:07:31,870 --> 00:07:33,639
modernizer the website was completely

226
00:07:33,639 --> 00:07:36,610
built on requirejs modules because it's

227
00:07:36,610 --> 00:07:39,250
old and so every one of these like check

228
00:07:39,250 --> 00:07:40,960
boxy things and anything that is

229
00:07:40,960 --> 00:07:42,460
anything you can click on pretty much is

230
00:07:42,460 --> 00:07:45,400
its own module there's 259 modules today

231
00:07:45,400 --> 00:07:47,289
though probably like 262 once I start

232
00:07:47,289 --> 00:07:48,550
getting back to my house and merging

233
00:07:48,550 --> 00:07:51,159
commits that came in and any single one

234
00:07:51,159 --> 00:07:52,210
of those modules could end up being

235
00:07:52,210 --> 00:07:53,110
dozens of requests

236
00:07:53,110 --> 00:07:55,750
and as a result we have to we want to

237
00:07:55,750 --> 00:07:58,090
add it to our service worker and the way

238
00:07:58,090 --> 00:08:00,100
we do that is like this we do navigator

239
00:08:00,100 --> 00:08:01,480
that service worker dot register a new

240
00:08:01,480 --> 00:08:03,010
API you pass it a string that represents

241
00:08:03,010 --> 00:08:06,100
the path to a JavaScript file that

242
00:08:06,100 --> 00:08:07,120
javascript file looks something like

243
00:08:07,120 --> 00:08:08,860
this this is an example of us

244
00:08:08,860 --> 00:08:12,130
prefetching are Totally Rad sans font we

245
00:08:12,130 --> 00:08:13,930
have we set up a cash up here which is

246
00:08:13,930 --> 00:08:15,370
just an object with the name space

247
00:08:15,370 --> 00:08:16,780
because you can have multiple caches if

248
00:08:16,780 --> 00:08:17,830
you want to delete one and keep another

249
00:08:17,830 --> 00:08:20,500
then we add an event listener for the

250
00:08:20,500 --> 00:08:24,550
install event the uninstall is when the

251
00:08:24,550 --> 00:08:25,780
service worker has been installed into

252
00:08:25,780 --> 00:08:27,100
the browser then we go out and we

253
00:08:27,100 --> 00:08:30,910
prefetch each one of these URLs so you

254
00:08:30,910 --> 00:08:34,570
can pre straightforward and so later on

255
00:08:34,570 --> 00:08:36,160
we'll have this which is the fetch event

256
00:08:36,160 --> 00:08:37,540
and the fetch event is that network

257
00:08:37,540 --> 00:08:38,830
proxy thing that I mentioned before

258
00:08:38,830 --> 00:08:41,980
every time that a fetch event happens

259
00:08:41,980 --> 00:08:43,390
which is any network request it goes

260
00:08:43,390 --> 00:08:44,710
through here we check to see if the

261
00:08:44,710 --> 00:08:47,230
response is already cached if it is we

262
00:08:47,230 --> 00:08:48,580
respond with that so it happens

263
00:08:48,580 --> 00:08:50,320
immediately rather than going you know

264
00:08:50,320 --> 00:08:52,180
over to server farm somewhere in coming

265
00:08:52,180 --> 00:08:54,040
back to a computer and just read it

266
00:08:54,040 --> 00:08:55,870
straight off the disk and if it's not

267
00:08:55,870 --> 00:08:57,220
there we go and we fetch it and then we

268
00:08:57,220 --> 00:08:58,750
cash the response so that if requested

269
00:08:58,750 --> 00:09:00,430
again in the future it's there it's

270
00:09:00,430 --> 00:09:02,860
great it's simple um the problem again

271
00:09:02,860 --> 00:09:04,510
the support is not very great it's

272
00:09:04,510 --> 00:09:05,860
pretty much only in Chrome it's going to

273
00:09:05,860 --> 00:09:08,350
be in Firefox in a couple of weeks in

274
00:09:08,350 --> 00:09:11,920
early January so we need it sucks we

275
00:09:11,920 --> 00:09:13,870
need like some kind of hero we need some

276
00:09:13,870 --> 00:09:15,340
kind of Savior we need a douchebag and

277
00:09:15,340 --> 00:09:17,890
we need app cache um so a couple of

278
00:09:17,890 --> 00:09:21,010
years ago Jake Archibald gave a talk at

279
00:09:21,010 --> 00:09:23,110
jas comp called app cache is a douchebag

280
00:09:23,110 --> 00:09:25,180
it's a awesome talk if you've never seen

281
00:09:25,180 --> 00:09:27,130
it it gives a lot of background into

282
00:09:27,130 --> 00:09:29,070
what app cache is that was the original

283
00:09:29,070 --> 00:09:32,080
kind of fork off of Google gears that

284
00:09:32,080 --> 00:09:33,700
was supposed to be how we were going to

285
00:09:33,700 --> 00:09:35,290
make offline applications the problem

286
00:09:35,290 --> 00:09:37,810
was it's a douche bag and it sucks a lot

287
00:09:37,810 --> 00:09:40,030
um service workers way better if you

288
00:09:40,030 --> 00:09:41,020
have the opportunity to only make

289
00:09:41,020 --> 00:09:42,280
something for cromer to make something

290
00:09:42,280 --> 00:09:43,390
specifically using a service worker

291
00:09:43,390 --> 00:09:44,830
don't even look at app cache it's

292
00:09:44,830 --> 00:09:47,710
horrible but it is supported everywhere

293
00:09:47,710 --> 00:09:49,090
pretty much any browser you'd want to

294
00:09:49,090 --> 00:09:51,870
develop something for supports it and so

295
00:09:51,870 --> 00:09:54,460
it come and it happens to cover our use

296
00:09:54,460 --> 00:09:56,620
which is basically caching everything

297
00:09:56,620 --> 00:09:57,640
and then returning it immediately if

298
00:09:57,640 --> 00:10:00,010
it's there so the way that it works is

299
00:10:00,010 --> 00:10:02,820
you just have a plain text file that's a

300
00:10:02,820 --> 00:10:04,810
manifest looks something like this

301
00:10:04,810 --> 00:10:06,910
you'll have a comment up at the top

302
00:10:06,910 --> 00:10:09,010
do cash and validation because it app

303
00:10:09,010 --> 00:10:10,510
cat the browser will check to see if any

304
00:10:10,510 --> 00:10:12,880
new version of the manifest is byte for

305
00:10:12,880 --> 00:10:14,410
byte the same and if it isn't it will

306
00:10:14,410 --> 00:10:15,760
redownload everything which is what we

307
00:10:15,760 --> 00:10:17,290
want to have happen when we do releases

308
00:10:17,290 --> 00:10:19,780
we list a couple of static files you

309
00:10:19,780 --> 00:10:22,030
want to have downloaded and then I have

310
00:10:22,030 --> 00:10:24,100
this double under assets thing that's

311
00:10:24,100 --> 00:10:25,030
something that gets programmatically

312
00:10:25,030 --> 00:10:26,440
addict we're injecting a whole bunch of

313
00:10:26,440 --> 00:10:28,360
like the individual modules that we're

314
00:10:28,360 --> 00:10:29,530
creating for the website that way we

315
00:10:29,530 --> 00:10:31,240
don't have to maintain a list of them in

316
00:10:31,240 --> 00:10:32,620
multiple places it just gets added in

317
00:10:32,620 --> 00:10:34,420
like a gulp script then the only other

318
00:10:34,420 --> 00:10:36,220
important thing is down here the network

319
00:10:36,220 --> 00:10:37,720
asterisk what that means is that as

320
00:10:37,720 --> 00:10:39,310
you're browsing everything that comes

321
00:10:39,310 --> 00:10:40,870
from your domain gets added to the app

322
00:10:40,870 --> 00:10:43,030
cache automatically so um it looks

323
00:10:43,030 --> 00:10:44,590
something like this you just have a

324
00:10:44,590 --> 00:10:47,140
manifest attribute on your browser and

325
00:10:47,140 --> 00:10:51,910
right there and it's OOP sorry again

326
00:10:51,910 --> 00:10:53,320
service worker is much better than app

327
00:10:53,320 --> 00:10:54,610
cache though so we don't want to have to

328
00:10:54,610 --> 00:10:56,530
inject it unless we need it app cache is

329
00:10:56,530 --> 00:10:57,850
a douche bag it completely takes over

330
00:10:57,850 --> 00:11:00,100
your entire page you're certain all your

331
00:11:00,100 --> 00:11:01,380
serviceworker responses would be

332
00:11:01,380 --> 00:11:04,180
confusing a lot more difficult to reason

333
00:11:04,180 --> 00:11:05,380
about you get into a weird state that

334
00:11:05,380 --> 00:11:07,270
you'll run do so yo news app cache if

335
00:11:07,270 --> 00:11:08,710
service worker isn't there we do this

336
00:11:08,710 --> 00:11:10,630
registration like this if service worker

337
00:11:10,630 --> 00:11:12,310
isn't navigator then we register it and

338
00:11:12,310 --> 00:11:13,690
if it isn't we check to see if app cache

339
00:11:13,690 --> 00:11:15,490
I was on the window and if it is we at

340
00:11:15,490 --> 00:11:17,050
the app cache the problem is you can't

341
00:11:17,050 --> 00:11:19,780
add it by JavaScript to that page you

342
00:11:19,780 --> 00:11:22,660
have to UM the manifest file has to be

343
00:11:22,660 --> 00:11:24,730
there on page load and so what we can do

344
00:11:24,730 --> 00:11:26,410
to get around this is load it in an

345
00:11:26,410 --> 00:11:28,570
iframe we create another basically a

346
00:11:28,570 --> 00:11:31,870
dummy page and add a that has an app

347
00:11:31,870 --> 00:11:34,240
cache on it we load that I frame on the

348
00:11:34,240 --> 00:11:35,800
page and we inject it into the page and

349
00:11:35,800 --> 00:11:38,230
then everything's loaded it's great so

350
00:11:38,230 --> 00:11:39,760
this is a duck like an example dummy

351
00:11:39,760 --> 00:11:41,950
file it's all that's doing is loading

352
00:11:41,950 --> 00:11:43,690
the app cache and it's injected to it

353
00:11:43,690 --> 00:11:45,430
and we go from loading the moderniser

354
00:11:45,430 --> 00:11:47,680
website on the wonderful provided Wi-Fi

355
00:11:47,680 --> 00:11:49,480
here went from 20 seconds to 190

356
00:11:49,480 --> 00:11:52,060
milliseconds on reload so it's

357
00:11:52,060 --> 00:11:55,150
substantial savings anytime I'm on an

358
00:11:55,150 --> 00:11:57,880
airplane anytime and i'm on a train or

359
00:11:57,880 --> 00:12:00,760
at Amelia Island at jjs conf it's always

360
00:12:00,760 --> 00:12:02,260
wonderful if the websites properly using

361
00:12:02,260 --> 00:12:03,820
this stuff so check it out if you

362
00:12:03,820 --> 00:12:06,040
haven't but again service workers are

363
00:12:06,040 --> 00:12:07,690
much better than app cache service

364
00:12:07,690 --> 00:12:09,190
workers are the future web workers are

365
00:12:09,190 --> 00:12:11,770
the future um that's web workers if

366
00:12:11,770 --> 00:12:13,330
you're not familiar with web workers

367
00:12:13,330 --> 00:12:14,440
they've been around actually for a long

368
00:12:14,440 --> 00:12:18,430
time November of 2008 they shipped in

369
00:12:18,430 --> 00:12:20,080
chrome version 2 in 2009 when it looked

370
00:12:20,080 --> 00:12:20,860
like that

371
00:12:20,860 --> 00:12:22,500
it's been around for a very long time

372
00:12:22,500 --> 00:12:25,540
they're they're pretty similar web

373
00:12:25,540 --> 00:12:27,310
worker sorry to service workers in the

374
00:12:27,310 --> 00:12:28,870
way that you interact with them but the

375
00:12:28,870 --> 00:12:29,800
purpose for them are completely

376
00:12:29,800 --> 00:12:32,560
different web workers are a solution to

377
00:12:32,560 --> 00:12:33,670
the problem with the browser that

378
00:12:33,670 --> 00:12:35,830
everything is single threaded because

379
00:12:35,830 --> 00:12:37,990
layout is constantly fighting for

380
00:12:37,990 --> 00:12:40,270
resources on top of all of your logic if

381
00:12:40,270 --> 00:12:41,470
you have a whole lot of different stuff

382
00:12:41,470 --> 00:12:42,910
going on at once it creates this really

383
00:12:42,910 --> 00:12:46,720
ugly janky experience that sucks and

384
00:12:46,720 --> 00:12:49,420
it's not a good website in a tux so what

385
00:12:49,420 --> 00:12:50,500
you're able to do is you're able to take

386
00:12:50,500 --> 00:12:52,120
tasks and offload them to a background

387
00:12:52,120 --> 00:12:54,460
thread so that your uh your UI is able

388
00:12:54,460 --> 00:12:55,930
to constantly update in the way that you

389
00:12:55,930 --> 00:12:57,610
want it to but you can still do those

390
00:12:57,610 --> 00:13:01,390
heavy crunching things it's great so

391
00:13:01,390 --> 00:13:03,040
super expensive functions become really

392
00:13:03,040 --> 00:13:04,690
cheap and one of the things that we

393
00:13:04,690 --> 00:13:06,340
ended up doing with it was creating

394
00:13:06,340 --> 00:13:08,410
dynamic file size calculation so if you

395
00:13:08,410 --> 00:13:10,150
look again this is that website that

396
00:13:10,150 --> 00:13:11,950
I've shown you a number of times up in

397
00:13:11,950 --> 00:13:14,110
the left hand corner it actually says

398
00:13:14,110 --> 00:13:16,000
the number of kilobytes and bites of

399
00:13:16,000 --> 00:13:18,460
every file that you have that's been

400
00:13:18,460 --> 00:13:20,500
created so as you check stuff it updates

401
00:13:20,500 --> 00:13:23,230
with those values now this is a hundred

402
00:13:23,230 --> 00:13:24,640
percent client-side there's nothing

403
00:13:24,640 --> 00:13:25,930
talking to a server because I want this

404
00:13:25,930 --> 00:13:27,760
to work completely offline the way that

405
00:13:27,760 --> 00:13:29,500
we do that was through a web worker we

406
00:13:29,500 --> 00:13:32,610
register that web worker with a little

407
00:13:32,610 --> 00:13:34,750
we call gzip worker and it's just a

408
00:13:34,750 --> 00:13:36,850
basic function that gets a JSON object

409
00:13:36,850 --> 00:13:39,250
and that passes it to that JSON object

410
00:13:39,250 --> 00:13:41,350
to a worker and in father's a call back

411
00:13:41,350 --> 00:13:43,330
to update the UI later on inside the

412
00:13:43,330 --> 00:13:46,330
gzip file we import a couple of node

413
00:13:46,330 --> 00:13:48,670
modules Packo which is a javascript

414
00:13:48,670 --> 00:13:50,710
implementation of the deflate algorithm

415
00:13:50,710 --> 00:13:52,330
for g zipping and then pretty bytes

416
00:13:52,330 --> 00:13:54,070
which takes something like a hundred

417
00:13:54,070 --> 00:13:56,140
bytes and makes it into point zero zero

418
00:13:56,140 --> 00:13:57,610
point one kilobytes and makes it more

419
00:13:57,610 --> 00:14:00,070
human readable and pretty so we just

420
00:14:00,070 --> 00:14:02,230
listen to the message we parse the build

421
00:14:02,230 --> 00:14:04,390
out of it we so we would pass the entire

422
00:14:04,390 --> 00:14:07,390
build of moderniser to this function and

423
00:14:07,390 --> 00:14:10,570
then we would take that string we pass

424
00:14:10,570 --> 00:14:11,890
it into pretty bytes pretty by its

425
00:14:11,890 --> 00:14:13,480
figures out how small or sorry we get

426
00:14:13,480 --> 00:14:14,680
the original size of it through pretty

427
00:14:14,680 --> 00:14:16,690
bytes then we also pass pretty bites the

428
00:14:16,690 --> 00:14:19,000
gzipped and pack o deflate which is a

429
00:14:19,000 --> 00:14:21,580
gzipped minified version of it with the

430
00:14:21,580 --> 00:14:23,110
average server level which is six and

431
00:14:23,110 --> 00:14:27,370
that gives us the size of the files so

432
00:14:27,370 --> 00:14:28,720
you see originally was to point 64

433
00:14:28,720 --> 00:14:30,640
kilobytes gzip it's down to 1.18 for

434
00:14:30,640 --> 00:14:31,600
these first three things that are

435
00:14:31,600 --> 00:14:34,160
clicked um

436
00:14:34,170 --> 00:14:36,450
now there is not that's not the only

437
00:14:36,450 --> 00:14:38,070
other worker we because we want to be

438
00:14:38,070 --> 00:14:39,389
able to update that on the fly we have

439
00:14:39,389 --> 00:14:41,490
to build stuff constantly which means we

440
00:14:41,490 --> 00:14:43,050
can't wait for someone to click on the

441
00:14:43,050 --> 00:14:45,149
build button we want to be able to build

442
00:14:45,149 --> 00:14:46,680
in the background and what we the way we

443
00:14:46,680 --> 00:14:48,750
do that again is through a web worker so

444
00:14:48,750 --> 00:14:50,430
we have a separate worker for building

445
00:14:50,430 --> 00:14:52,170
it's very similar registered the exact

446
00:14:52,170 --> 00:14:55,380
same way and we post a message with the

447
00:14:55,380 --> 00:14:57,870
config file that config so all of the

448
00:14:57,870 --> 00:14:59,490
modernizer require modules are built

449
00:14:59,490 --> 00:15:02,459
through one big Jason config um that

450
00:15:02,459 --> 00:15:04,589
gets passed into the worker and the

451
00:15:04,589 --> 00:15:06,990
worker loads up the moderniser requires

452
00:15:06,990 --> 00:15:10,949
a s based builder and then that does the

453
00:15:10,949 --> 00:15:12,959
on it then it registers for on message

454
00:15:12,959 --> 00:15:14,459
and then that does the building of

455
00:15:14,459 --> 00:15:17,130
moderniser and it reports back with the

456
00:15:17,130 --> 00:15:19,110
final string so basically you're just

457
00:15:19,110 --> 00:15:20,459
passing this along it's exactly like you

458
00:15:20,459 --> 00:15:21,870
would imagine use pass on a config file

459
00:15:21,870 --> 00:15:22,889
you get out of string the only

460
00:15:22,889 --> 00:15:24,240
difference is that it's on a background

461
00:15:24,240 --> 00:15:25,320
thread so we can be doing this

462
00:15:25,320 --> 00:15:27,029
constantly in the background and you

463
00:15:27,029 --> 00:15:30,029
wouldn't even notice so by the time that

464
00:15:30,029 --> 00:15:31,860
somebody actually clicks that big pink

465
00:15:31,860 --> 00:15:33,600
build button in the corner it's already

466
00:15:33,600 --> 00:15:35,329
been built usually for several seconds

467
00:15:35,329 --> 00:15:37,529
but they might be asking what if their

468
00:15:37,529 --> 00:15:38,640
browser doesn't support web workers

469
00:15:38,640 --> 00:15:40,649
first of all it's been around forever so

470
00:15:40,649 --> 00:15:42,209
pretty much all browsers support them

471
00:15:42,209 --> 00:15:43,829
they're all so many should use them if

472
00:15:43,829 --> 00:15:44,760
they don't it's not that a good deal

473
00:15:44,760 --> 00:15:47,579
they click on the build button and then

474
00:15:47,579 --> 00:15:49,980
we just build then that's you know it's

475
00:15:49,980 --> 00:15:51,209
fine there are not older browser they're

476
00:15:51,209 --> 00:15:53,790
used to shitty experiences you know we

477
00:15:53,790 --> 00:15:55,500
can just click on the button and go on

478
00:15:55,500 --> 00:15:57,690
so that bill button actually doesn't

479
00:15:57,690 --> 00:15:58,980
give you a file it opens up a pop-up

480
00:15:58,980 --> 00:16:01,410
most of the time um with a couple of

481
00:16:01,410 --> 00:16:02,699
options one of them is to copy to

482
00:16:02,699 --> 00:16:04,529
clipboard there is to download copy to

483
00:16:04,529 --> 00:16:06,779
clipboard again is something that has

484
00:16:06,779 --> 00:16:08,100
been really difficult to do right on the

485
00:16:08,100 --> 00:16:10,890
web for a very long time leaves a thing

486
00:16:10,890 --> 00:16:12,510
called zero clipboard it's a pretty

487
00:16:12,510 --> 00:16:14,490
simple API you just load it up and you

488
00:16:14,490 --> 00:16:16,380
give it a listen for click event it

489
00:16:16,380 --> 00:16:17,910
gives you the clipboard data you add it

490
00:16:17,910 --> 00:16:19,440
to sorry you add your own data to a

491
00:16:19,440 --> 00:16:20,819
clipboard and it's done it's pretty

492
00:16:20,819 --> 00:16:21,899
straightforward the only crappy thing

493
00:16:21,899 --> 00:16:23,339
the really crappy thing is it's built by

494
00:16:23,339 --> 00:16:26,040
it's powered by flash it's one little

495
00:16:26,040 --> 00:16:27,329
flash control that's put on anything you

496
00:16:27,329 --> 00:16:28,860
want copy and that's how it works that's

497
00:16:28,860 --> 00:16:30,630
how github stuff works that's how the

498
00:16:30,630 --> 00:16:32,639
monitors are set work's currently and it

499
00:16:32,639 --> 00:16:34,319
sucks flash sucks you don't want to use

500
00:16:34,319 --> 00:16:36,000
flash because who wants to have flash

501
00:16:36,000 --> 00:16:37,889
installed in my machine so we have a

502
00:16:37,889 --> 00:16:39,360
modernized detective to see whether or

503
00:16:39,360 --> 00:16:40,889
not flash is installed and working as a

504
00:16:40,889 --> 00:16:43,470
not blocked or click to play and if it

505
00:16:43,470 --> 00:16:45,000
isn't then we load zero clipboard and if

506
00:16:45,000 --> 00:16:47,730
it isn't if it is being blocked then we

507
00:16:47,730 --> 00:16:49,139
it's something else and it's something

508
00:16:49,139 --> 00:16:51,899
else is just a textarea box we just load

509
00:16:51,899 --> 00:16:54,089
up as plain old Texas Reeboks inject the

510
00:16:54,089 --> 00:16:55,920
values into it and then automatically

511
00:16:55,920 --> 00:16:58,440
select it then that kind of command to

512
00:16:58,440 --> 00:17:01,410
copy Club to copy to clipboard just

513
00:17:01,410 --> 00:17:03,029
becomes a request to go ahead and copy

514
00:17:03,029 --> 00:17:04,679
this to clipboard later on if degrades

515
00:17:04,679 --> 00:17:07,079
pretty gracefully but another breaking

516
00:17:07,079 --> 00:17:08,490
news did it because the video doesn't

517
00:17:08,490 --> 00:17:12,720
work clipboard j/s is a new way to do

518
00:17:12,720 --> 00:17:15,000
this that was added after I started

519
00:17:15,000 --> 00:17:17,040
writing this it doesn't use flash it

520
00:17:17,040 --> 00:17:18,600
uses some of the exec command stuff

521
00:17:18,600 --> 00:17:19,709
that's been built in the browser forever

522
00:17:19,709 --> 00:17:21,240
that actually started working in chrome

523
00:17:21,240 --> 00:17:22,949
recently and it does the fall backs

524
00:17:22,949 --> 00:17:24,179
automatically for you if i were to

525
00:17:24,179 --> 00:17:25,530
rebuild this I'd probably just use this

526
00:17:25,530 --> 00:17:27,360
that being said zero clipboard can be

527
00:17:27,360 --> 00:17:28,620
great if you need more browser support

528
00:17:28,620 --> 00:17:30,690
especially on older browsers excuse me

529
00:17:30,690 --> 00:17:33,600
um the other option after copy to

530
00:17:33,600 --> 00:17:35,880
clipboard is download download is

531
00:17:35,880 --> 00:17:37,740
something obviously most of the people

532
00:17:37,740 --> 00:17:38,970
probably just to get a file they don't

533
00:17:38,970 --> 00:17:39,960
really want to copy it or pace at

534
00:17:39,960 --> 00:17:41,669
themselves and so since this is a

535
00:17:41,669 --> 00:17:43,080
hundred percent client-side we view this

536
00:17:43,080 --> 00:17:45,419
using a couple different api's file

537
00:17:45,419 --> 00:17:47,460
blobs URLs and the download attribute

538
00:17:47,460 --> 00:17:49,080
now file blobs are pretty

539
00:17:49,080 --> 00:17:50,419
straightforward you just give it a

540
00:17:50,419 --> 00:17:52,620
string and it gives it creates a binary

541
00:17:52,620 --> 00:17:54,150
representation in memory that you're

542
00:17:54,150 --> 00:17:57,090
able to pass into a another API called

543
00:17:57,090 --> 00:17:59,640
create object URL which turns it into a

544
00:17:59,640 --> 00:18:03,210
blob URI so those instead of like HTTP

545
00:18:03,210 --> 00:18:04,590
colon forward slash words has something

546
00:18:04,590 --> 00:18:06,090
its blob colon forward slash where says

547
00:18:06,090 --> 00:18:07,830
something and you get a reference to

548
00:18:07,830 --> 00:18:09,210
that file that's been created on the

549
00:18:09,210 --> 00:18:11,160
client side and then finally we have a

550
00:18:11,160 --> 00:18:13,799
download attribute that lets it download

551
00:18:13,799 --> 00:18:15,960
with instead of a random gibberish

552
00:18:15,960 --> 00:18:17,669
looking string it gives it a nice pretty

553
00:18:17,669 --> 00:18:19,980
moderniser got custom jas name so it

554
00:18:19,980 --> 00:18:20,910
ends up looking like this in our

555
00:18:20,910 --> 00:18:22,620
template we set an HR up to that href

556
00:18:22,620 --> 00:18:24,530
downloaded download and a download works

557
00:18:24,530 --> 00:18:26,610
you should get a pop-up and it says

558
00:18:26,610 --> 00:18:27,990
moderniser custom download without ever

559
00:18:27,990 --> 00:18:30,720
talking to the server it's great so blob

560
00:18:30,720 --> 00:18:32,220
constructing is really well supported

561
00:18:32,220 --> 00:18:33,840
blob URLs are pretty well supported

562
00:18:33,840 --> 00:18:35,309
download attributes aren't and that

563
00:18:35,309 --> 00:18:36,330
makes it a really kind of crappy

564
00:18:36,330 --> 00:18:38,490
experience so for us we considered it a

565
00:18:38,490 --> 00:18:40,830
no-go if they don't support it otherwise

566
00:18:40,830 --> 00:18:42,090
they get this really random gibberish

567
00:18:42,090 --> 00:18:43,590
file it doesn't work on certain versions

568
00:18:43,590 --> 00:18:45,960
or older versions of websites oh sorry

569
00:18:45,960 --> 00:18:48,870
up browsers specifically ie it makes a

570
00:18:48,870 --> 00:18:50,520
lot more confusing experience and a lot

571
00:18:50,520 --> 00:18:51,900
of people that are using our website are

572
00:18:51,900 --> 00:18:53,820
for newer web developers and so we

573
00:18:53,820 --> 00:18:57,419
wanted to try to avoid that so what we

574
00:18:57,419 --> 00:18:59,820
ended up doing was kind of thinking

575
00:18:59,820 --> 00:19:01,470
about how we structure this page

576
00:19:01,470 --> 00:19:04,230
if you'll notice this pretty much is a

577
00:19:04,230 --> 00:19:07,260
giant list of check boxes and a submit

578
00:19:07,260 --> 00:19:09,390
button this is really just a form when

579
00:19:09,390 --> 00:19:10,409
you get down to it even though it was

580
00:19:10,409 --> 00:19:11,850
kind of a web application so we decided

581
00:19:11,850 --> 00:19:14,130
to just people just let people post the

582
00:19:14,130 --> 00:19:17,850
form what that so basically what we do

583
00:19:17,850 --> 00:19:19,370
is we instead of having this template

584
00:19:19,370 --> 00:19:22,740
anger peg we end up checking to see if

585
00:19:22,740 --> 00:19:24,059
it supports everything if it is we set

586
00:19:24,059 --> 00:19:25,890
it to that anchor tag and if it isn't we

587
00:19:25,890 --> 00:19:29,330
just changed that download button to a

588
00:19:29,330 --> 00:19:31,440
input type submit and that becomes a

589
00:19:31,440 --> 00:19:33,179
form that just submit and they submit

590
00:19:33,179 --> 00:19:35,250
that form and they get a post it post to

591
00:19:35,250 --> 00:19:36,210
the server and the server itself

592
00:19:36,210 --> 00:19:38,250
processes the file sends it back it all

593
00:19:38,250 --> 00:19:40,260
works this is a possible because we're

594
00:19:40,260 --> 00:19:41,909
using decent markup decent markup is

595
00:19:41,909 --> 00:19:44,220
actually supported in all browsers for

596
00:19:44,220 --> 00:19:46,200
the most part it's when you use HTML

597
00:19:46,200 --> 00:19:48,840
properly and what's cool about using the

598
00:19:48,840 --> 00:19:51,630
decent markup is that when you use we

599
00:19:51,630 --> 00:19:52,950
like we have a whole lot of CSS on the

600
00:19:52,950 --> 00:19:53,970
site but you don't actually need to use

601
00:19:53,970 --> 00:19:56,880
it websites that works completely

602
00:19:56,880 --> 00:20:00,350
without CSS like completely without CSS

603
00:20:00,350 --> 00:20:02,400
everything functions you can check off

604
00:20:02,400 --> 00:20:03,929
new stuff and it calculates the new

605
00:20:03,929 --> 00:20:05,340
values and everything functions

606
00:20:05,340 --> 00:20:08,730
completely right it's great um then on

607
00:20:08,730 --> 00:20:10,470
top of that not is since we're doing all

608
00:20:10,470 --> 00:20:11,730
this stuff and basically just a form we

609
00:20:11,730 --> 00:20:14,159
don't even need JavaScript anymore it

610
00:20:14,159 --> 00:20:16,590
actually functions completely in links

611
00:20:16,590 --> 00:20:20,039
the old text based browser um so you can

612
00:20:20,039 --> 00:20:22,820
actually have this web so sorry oh god

613
00:20:22,820 --> 00:20:26,490
um yeah you can have the browser do

614
00:20:26,490 --> 00:20:27,750
stuff and you don't get the file size

615
00:20:27,750 --> 00:20:29,130
calculations you don't get the dynamic

616
00:20:29,130 --> 00:20:30,419
counting but you're not really expecting

617
00:20:30,419 --> 00:20:32,460
to have that experience on here you just

618
00:20:32,460 --> 00:20:34,230
hit you hit the build button once you're

619
00:20:34,230 --> 00:20:38,400
done download it save to disk save the

620
00:20:38,400 --> 00:20:43,530
file and there we go cat moderniser and

621
00:20:43,530 --> 00:20:45,960
it's there in gzip and my terminal

622
00:20:45,960 --> 00:20:49,610
broken it's there it works it's great so

623
00:20:49,610 --> 00:20:51,630
it's awesome it's a hundred percent

624
00:20:51,630 --> 00:20:53,460
client-side unless it can't then it can

625
00:20:53,460 --> 00:20:54,659
fall back and it still works it works

626
00:20:54,659 --> 00:20:56,549
pretty much all browsers because we have

627
00:20:56,549 --> 00:20:58,080
a couple of little tiny pieces in the

628
00:20:58,080 --> 00:20:59,730
server side even though it's mostly

629
00:20:59,730 --> 00:21:02,220
static files like this is basically our

630
00:21:02,220 --> 00:21:04,679
entire server config we use happy it's

631
00:21:04,679 --> 00:21:06,690
like 20 lines plus a couple other little

632
00:21:06,690 --> 00:21:08,970
cleanup things but all we're doing is

633
00:21:08,970 --> 00:21:10,350
reading out of the distribution

634
00:21:10,350 --> 00:21:13,049
directory and getting your path applying

635
00:21:13,049 --> 00:21:14,190
it to that in serving that file and

636
00:21:14,190 --> 00:21:15,090
that's it it's

637
00:21:15,090 --> 00:21:16,680
clean its I've everything works since

638
00:21:16,680 --> 00:21:18,900
wonderful but again it's almost one

639
00:21:18,900 --> 00:21:19,800
hundred percent because we wanted to

640
00:21:19,800 --> 00:21:21,840
support that post environment so what we

641
00:21:21,840 --> 00:21:23,040
end up doing is creating a little

642
00:21:23,040 --> 00:21:24,570
function that we build from a posted

643
00:21:24,570 --> 00:21:26,430
query we grab the payload of the post

644
00:21:26,430 --> 00:21:28,410
and we send it through the moderniser

645
00:21:28,410 --> 00:21:32,940
API on the server side apply the contact

646
00:21:32,940 --> 00:21:37,410
contact just that header Jesus Creek to

647
00:21:37,410 --> 00:21:39,660
it to get the file back and then add

648
00:21:39,660 --> 00:21:41,610
that to the route config and we're good

649
00:21:41,610 --> 00:21:43,650
it works for all browsers like really

650
00:21:43,650 --> 00:21:45,090
all browsers it literally works in

651
00:21:45,090 --> 00:21:46,860
mosaic if you open it in mosaic I tried

652
00:21:46,860 --> 00:21:49,080
it today it's awesome it's really cool

653
00:21:49,080 --> 00:21:51,540
um the internet is awesome HTML is

654
00:21:51,540 --> 00:21:52,590
awesome you able to make some really

655
00:21:52,590 --> 00:21:55,710
cool stuff but again no one cares we

656
00:21:55,710 --> 00:21:57,180
have all these tools they don't really

657
00:21:57,180 --> 00:21:59,070
care whether or not the website is great

658
00:21:59,070 --> 00:22:00,810
or held it work went into it if it

659
00:22:00,810 --> 00:22:02,280
doesn't fit their workflow they don't

660
00:22:02,280 --> 00:22:03,720
want to go out of their way saving

661
00:22:03,720 --> 00:22:05,940
developers to download a new website or

662
00:22:05,940 --> 00:22:07,410
to download your site to see the site to

663
00:22:07,410 --> 00:22:08,400
get the build every single time they

664
00:22:08,400 --> 00:22:09,570
want to make a change they just want it

665
00:22:09,570 --> 00:22:11,010
to work for their tool chain to get out

666
00:22:11,010 --> 00:22:12,870
of the way so one of the biggest

667
00:22:12,870 --> 00:22:14,340
requests we had was to make it work for

668
00:22:14,340 --> 00:22:16,980
NPM and Bower and people always said you

669
00:22:16,980 --> 00:22:18,180
know I want a bower install we had

670
00:22:18,180 --> 00:22:19,710
dozens of issues on github with people

671
00:22:19,710 --> 00:22:20,760
saying that why can't we Bower install

672
00:22:20,760 --> 00:22:23,010
it I want NPM install it and the problem

673
00:22:23,010 --> 00:22:24,360
is that there isn't a file everything's

674
00:22:24,360 --> 00:22:25,920
modular there used to be one single

675
00:22:25,920 --> 00:22:27,540
moderniser file that's not been the case

676
00:22:27,540 --> 00:22:30,060
for years and so we say you can't and

677
00:22:30,060 --> 00:22:32,130
they say but I want to and so again no

678
00:22:32,130 --> 00:22:35,970
one cares um it's the problem is that we

679
00:22:35,970 --> 00:22:37,800
can't really like art process the reason

680
00:22:37,800 --> 00:22:39,180
why pushing back against it is we can't

681
00:22:39,180 --> 00:22:41,220
really precompile these things and push

682
00:22:41,220 --> 00:22:44,250
it because again they're 259 modules you

683
00:22:44,250 --> 00:22:46,800
figure out the math it's like sick yeah

684
00:22:46,800 --> 00:22:48,060
it's there's not real I don't think

685
00:22:48,060 --> 00:22:49,290
there's a name for how big that number

686
00:22:49,290 --> 00:22:51,960
is it's ridiculously big 616 decimal

687
00:22:51,960 --> 00:22:55,800
places yeah we would blow up n p.m. we

688
00:22:55,800 --> 00:22:56,970
would take it all down if we tried to

689
00:22:56,970 --> 00:22:58,830
publish everything to it but no one

690
00:22:58,830 --> 00:23:00,180
cares that we can't do that they just

691
00:23:00,180 --> 00:23:01,890
wanted to work they just want it to do

692
00:23:01,890 --> 00:23:04,140
it because it works so we're like we

693
00:23:04,140 --> 00:23:05,610
have to solve this we figure the server

694
00:23:05,610 --> 00:23:07,140
is already building polls that doing

695
00:23:07,140 --> 00:23:09,660
builds for posts posted things and

696
00:23:09,660 --> 00:23:11,250
there's already a unique way to identify

697
00:23:11,250 --> 00:23:13,320
individual you build the moderniser

698
00:23:13,320 --> 00:23:15,300
using the header that's at the top of

699
00:23:15,300 --> 00:23:17,220
any file that's ever been built so we

700
00:23:17,220 --> 00:23:18,690
ended up doing is making it so that you

701
00:23:18,690 --> 00:23:21,930
can NPM install that URL and the same

702
00:23:21,930 --> 00:23:24,390
server that serves the HTTP HTML for

703
00:23:24,390 --> 00:23:26,520
moderniser actually will respond with a

704
00:23:26,520 --> 00:23:28,630
tarball for Bauer or for NP

705
00:23:28,630 --> 00:23:33,040
and so that again 99.99 static files

706
00:23:33,040 --> 00:23:35,080
this is the one other edge case if we

707
00:23:35,080 --> 00:23:37,390
get to the handler for the download page

708
00:23:37,390 --> 00:23:39,520
it checks the safer user agent is Bauer

709
00:23:39,520 --> 00:23:41,140
if it does it builds for Bauer check to

710
00:23:41,140 --> 00:23:42,700
save your user agents NPM it builds from

711
00:23:42,700 --> 00:23:44,620
p.m. otherwise it serves the HTML for

712
00:23:44,620 --> 00:23:47,500
the page so modernizer is using a user

713
00:23:47,500 --> 00:23:49,000
agent sniff to give you a good feature

714
00:23:49,000 --> 00:23:51,190
and that's embarrassing but it works and

715
00:23:51,190 --> 00:23:53,920
there's no other better way so um yeah

716
00:23:53,920 --> 00:23:55,540
so this is it really all that's in there

717
00:23:55,540 --> 00:23:57,550
for a build for Bauer we just grab this

718
00:23:57,550 --> 00:24:00,150
a great node a package called archiver

719
00:24:00,150 --> 00:24:03,130
create a tarball and then create the

720
00:24:03,130 --> 00:24:04,690
bower jason file which is just like a

721
00:24:04,690 --> 00:24:05,950
static file with a couple little pieces

722
00:24:05,950 --> 00:24:08,050
in it the name if you've ever used Bauer

723
00:24:08,050 --> 00:24:10,120
it's like a it's like it's package.json

724
00:24:10,120 --> 00:24:11,380
you know the name of the file stuff like

725
00:24:11,380 --> 00:24:13,690
that where it came from and then we

726
00:24:13,690 --> 00:24:17,830
append the actual build and we reply

727
00:24:17,830 --> 00:24:20,290
with a big target and so if you Bower

728
00:24:20,290 --> 00:24:21,700
install that you get a tarball back it

729
00:24:21,700 --> 00:24:23,290
works same thing with NPM there's as you

730
00:24:23,290 --> 00:24:24,610
can tell there's basically no difference

731
00:24:24,610 --> 00:24:26,040
the only difference is inside of this

732
00:24:26,040 --> 00:24:28,780
package ace of a creation of the JSON

733
00:24:28,780 --> 00:24:30,850
file and it's a little bit different and

734
00:24:30,850 --> 00:24:31,990
the name spacing is actually different

735
00:24:31,990 --> 00:24:34,300
on NPM these are in not accurate but

736
00:24:34,300 --> 00:24:37,270
otherwise it's the same and so you might

737
00:24:37,270 --> 00:24:38,500
have noticed that we're actually loading

738
00:24:38,500 --> 00:24:40,270
the moderniser module in there and it's

739
00:24:40,270 --> 00:24:41,380
kind of confusing where it's like I

740
00:24:41,380 --> 00:24:42,820
thought you said it was an on NPM and

741
00:24:42,820 --> 00:24:44,260
the problem is that there is a

742
00:24:44,260 --> 00:24:45,970
moderniser module but it's actually for

743
00:24:45,970 --> 00:24:49,060
the CLI command line tool so most of the

744
00:24:49,060 --> 00:24:50,380
time when people are talking about we're

745
00:24:50,380 --> 00:24:51,790
wanting to require moderniser they don't

746
00:24:51,790 --> 00:24:53,200
actually mean the command line tool they

747
00:24:53,200 --> 00:24:54,670
mean a build-up moderniser but they can

748
00:24:54,670 --> 00:24:55,810
load on their website and just get it to

749
00:24:55,810 --> 00:24:57,010
work and get their day done and get over

750
00:24:57,010 --> 00:24:59,380
it so this is what the command line

751
00:24:59,380 --> 00:25:01,930
thing looks like and it's useful for us

752
00:25:01,930 --> 00:25:02,920
because we've been able to build all

753
00:25:02,920 --> 00:25:04,390
these tools off of it it works great you

754
00:25:04,390 --> 00:25:06,130
just can end up creating a file and blah

755
00:25:06,130 --> 00:25:08,470
it's very flexible but it's not super

756
00:25:08,470 --> 00:25:12,310
friendly especially if you are new to

757
00:25:12,310 --> 00:25:13,690
web browsers like a lot of people are

758
00:25:13,690 --> 00:25:15,100
they're not familiar with the CLI they

759
00:25:15,100 --> 00:25:16,510
don't want to use the CLI one of the two

760
00:25:16,510 --> 00:25:18,850
and so we were like let's try to make

761
00:25:18,850 --> 00:25:20,050
this better rather than passing a lot of

762
00:25:20,050 --> 00:25:21,370
flags we had an interface that we liked

763
00:25:21,370 --> 00:25:23,620
and so we want to reuse it and so we did

764
00:25:23,620 --> 00:25:28,240
I created a command line version of our

765
00:25:28,240 --> 00:25:31,120
website that works completely in the

766
00:25:31,120 --> 00:25:32,770
browser or sorry in the command line you

767
00:25:32,770 --> 00:25:34,990
do all that stuff you can it build and

768
00:25:34,990 --> 00:25:37,300
you can open it on code pen and it opens

769
00:25:37,300 --> 00:25:40,360
in the browser and yeah you can check to

770
00:25:40,360 --> 00:25:41,650
see if it works it works

771
00:25:41,650 --> 00:25:43,960
it's cool and what's cool about that is

772
00:25:43,960 --> 00:25:46,180
that so if people are necessarily

773
00:25:46,180 --> 00:25:47,800
comfortable with building in the browser

774
00:25:47,800 --> 00:25:49,690
or sorry building on the command line we

775
00:25:49,690 --> 00:25:50,950
can give them basically the exact same

776
00:25:50,950 --> 00:25:52,000
experience and it's a great kind of

777
00:25:52,000 --> 00:25:54,160
introduction to it it's cool we're able

778
00:25:54,160 --> 00:25:55,840
to basically use the vast majority of

779
00:25:55,840 --> 00:25:58,330
our code because react is cool rape is

780
00:25:58,330 --> 00:25:59,980
awesome it makes it via the reuse the

781
00:25:59,980 --> 00:26:00,910
stuff and were able to port it directly

782
00:26:00,910 --> 00:26:03,400
to react blessed which is a the

783
00:26:03,400 --> 00:26:04,900
command-line API that we're using and

784
00:26:04,900 --> 00:26:06,550
it's a really cool hack it really works

785
00:26:06,550 --> 00:26:10,720
really well and yeah so that's pretty

786
00:26:10,720 --> 00:26:13,000
much what I have to say but just want to

787
00:26:13,000 --> 00:26:14,440
leave with this no one really cares how

788
00:26:14,440 --> 00:26:16,210
cool your website is if it doesn't work

789
00:26:16,210 --> 00:26:17,620
or if it takes a long time to get there

790
00:26:17,620 --> 00:26:19,180
if you have really slow animations if

791
00:26:19,180 --> 00:26:20,260
you do all these things people just

792
00:26:20,260 --> 00:26:21,640
wanna get their work done most of the

793
00:26:21,640 --> 00:26:22,660
time especially when you're working on a

794
00:26:22,660 --> 00:26:25,390
tool but so what our goal is to get out

795
00:26:25,390 --> 00:26:27,400
of the way in the best way possible make

796
00:26:27,400 --> 00:26:29,380
it the most enjoyable experiences but as

797
00:26:29,380 --> 00:26:31,260
possible to get out of the way quickly

798
00:26:31,260 --> 00:26:34,030
don't let that stop you from making

799
00:26:34,030 --> 00:26:35,710
awesome stuff and don't let that stop

800
00:26:35,710 --> 00:26:37,180
you from using new shiny features you

801
00:26:37,180 --> 00:26:39,400
can use a lot of really cool stuff and

802
00:26:39,400 --> 00:26:40,750
still make it really fast and work

803
00:26:40,750 --> 00:26:42,640
really well and just have a lot of fun

