1
00:00:10,880 --> 00:00:15,990

okay i want to start with a similar

2
00:00:15,990 --> 00:00:18,320
question who of you in this room is

3
00:00:18,320 --> 00:00:21,900
working on JavaScript frameworks as

4
00:00:21,900 --> 00:00:29,869
developers awesome so this is a talk I

5
00:00:29,869 --> 00:00:35,120
did to to show some of the design

6
00:00:35,120 --> 00:00:38,340
decisions we made and I think this is

7
00:00:38,340 --> 00:00:41,399
something pretty interesting for anyone

8
00:00:41,399 --> 00:00:44,219
writing JavaScript frameworks but should

9
00:00:44,219 --> 00:00:49,860
be interesting for anybody else so what

10
00:00:49,860 --> 00:00:51,780
kind of frameworks am I talking about so

11
00:00:51,780 --> 00:00:54,780
my background is bored what we are doing

12
00:00:54,780 --> 00:00:57,629
I'm working for for cooks ooh and it is

13
00:00:57,629 --> 00:01:02,340
a rich gooey JavaScript framework and

14
00:01:02,340 --> 00:01:05,640
we're doing a similar single piece of

15
00:01:05,640 --> 00:01:08,010
page applications so what you're seeing

16
00:01:08,010 --> 00:01:12,780
here is gmx com make lined which is

17
00:01:12,780 --> 00:01:16,500
written totally and cook soup and we

18
00:01:16,500 --> 00:01:21,900
have widgets like the toolbars the tabs

19
00:01:21,900 --> 00:01:32,189
the menus like the search bar of the

20
00:01:32,189 --> 00:01:35,250
tree and what I'm talking talking about

21
00:01:35,250 --> 00:01:38,790
today is how we actually implement these

22
00:01:38,790 --> 00:01:40,979
widgets so which it is not in the sense

23
00:01:40,979 --> 00:01:49,140
of a these mobile widget w-we w3c widget

24
00:01:49,140 --> 00:01:54,130
it's in the sense of your I components

25
00:01:54,140 --> 00:01:57,869
so what you're basically doing is we

26
00:01:57,869 --> 00:02:00,200
treating the browser as rendering engine

27
00:02:00,200 --> 00:02:03,869
so native applications like java

28
00:02:03,869 --> 00:02:06,060
applications windows applications use

29
00:02:06,060 --> 00:02:08,610
native api's we use the browser as

30
00:02:08,610 --> 00:02:11,709
rendering engine and

31
00:02:11,709 --> 00:02:15,260
what we have in the browser so I was

32
00:02:15,260 --> 00:02:18,140
glad Dion put up this this slide only in

33
00:02:18,140 --> 00:02:20,209
his keynote yesterday it's basically we

34
00:02:20,209 --> 00:02:25,239
have three primitives we have images as

35
00:02:25,239 --> 00:02:27,530
single entities or as background and

36
00:02:27,530 --> 00:02:34,310
images we have text with some ways to to

37
00:02:34,310 --> 00:02:37,970
define the font and colors and things

38
00:02:37,970 --> 00:02:40,909
like this and have rectangles things

39
00:02:40,909 --> 00:02:43,940
like this is the only primitives we have

40
00:02:43,940 --> 00:02:47,870
if we want to support all browsers of

41
00:02:47,870 --> 00:02:50,180
course we can use canvas but then it's

42
00:02:50,180 --> 00:02:52,430
hard to this is not available in IE so

43
00:02:52,430 --> 00:02:59,629
this is what we need to stick to well

44
00:02:59,629 --> 00:03:01,700
and then these primitives are arranged

45
00:03:01,700 --> 00:03:04,879
in a tree so we have a scene graph of

46
00:03:04,879 --> 00:03:10,280
all those of all those elements which is

47
00:03:10,280 --> 00:03:12,799
the Dom tree and the don't worry is

48
00:03:12,799 --> 00:03:16,010
pretty nice it provides us stuff like

49
00:03:16,010 --> 00:03:18,609
events bubbling through the tree and

50
00:03:18,609 --> 00:03:20,720
propagating through the tree and we know

51
00:03:20,720 --> 00:03:23,660
exactly for example click events on

52
00:03:23,660 --> 00:03:27,829
which element the cliq occurred unlike

53
00:03:27,829 --> 00:03:30,379
if you have the canvas where you have

54
00:03:30,379 --> 00:03:33,650
just the opaque rectangle and you it's

55
00:03:33,650 --> 00:03:37,010
hard to match what is actually the

56
00:03:37,010 --> 00:03:38,359
element behind the pixel you are

57
00:03:38,359 --> 00:03:41,120
clicking on and then we have CSS for

58
00:03:41,120 --> 00:03:45,609
styling and of course JavaScript so

59
00:03:45,609 --> 00:03:49,430
javascript is pretty much the thing

60
00:03:49,430 --> 00:03:55,699
which ties it all together so let me

61
00:03:55,699 --> 00:03:58,879
present you in the body this is the

62
00:03:58,879 --> 00:04:02,409
widget I'm trying to open right now

63
00:04:02,409 --> 00:04:05,710
spinner cool

64
00:04:05,710 --> 00:04:09,610
it's pretty simple the the code you see

65
00:04:09,610 --> 00:04:12,490
there is cook sous demo code it's

66
00:04:12,490 --> 00:04:16,300
actually working code and spinners nice

67
00:04:16,300 --> 00:04:19,090
because it's not too complex still it's

68
00:04:19,090 --> 00:04:22,030
something you compose out of other more

69
00:04:22,030 --> 00:04:26,650
more basic widgets it's simply used as

70
00:04:26,650 --> 00:04:30,970
as an input for text and this is the

71
00:04:30,970 --> 00:04:39,130
widget I want to talk about today so the

72
00:04:39,130 --> 00:04:41,410
first step is I said the spinner is a

73
00:04:41,410 --> 00:04:45,730
composed switches let's take a look how

74
00:04:45,730 --> 00:04:47,890
the spinners compose out of other

75
00:04:47,890 --> 00:04:55,060
widgets ok our goal is to create widget

76
00:04:55,060 --> 00:04:58,000
by composition we want to create complex

77
00:04:58,000 --> 00:05:00,750
widgets by composing simple widgets and

78
00:05:00,750 --> 00:05:04,030
like the spinner basically is composed

79
00:05:04,030 --> 00:05:08,500
of three four widget one container one

80
00:05:08,500 --> 00:05:10,690
input field and two buttons for the up

81
00:05:10,690 --> 00:05:15,370
and the down what we want to do is use

82
00:05:15,370 --> 00:05:18,430
known glee concepts to do this like we

83
00:05:18,430 --> 00:05:21,340
want to use layout managers to say how

84
00:05:21,340 --> 00:05:23,470
the witches should be arranged or we

85
00:05:23,470 --> 00:05:26,440
want to use a rich set of basic widgets

86
00:05:26,440 --> 00:05:29,560
to compose it from and of course we want

87
00:05:29,560 --> 00:05:31,960
to have some basic things like events

88
00:05:31,960 --> 00:05:36,780
and the other thing is at this level I

89
00:05:36,780 --> 00:05:39,670
really don't want to hassle with the

90
00:05:39,670 --> 00:05:42,610
browser I don't want to know which

91
00:05:42,610 --> 00:05:45,520
browser I'm in or I use any low level

92
00:05:45,520 --> 00:05:49,620
browser api's because this is code that

93
00:05:49,620 --> 00:05:52,450
letter right found it much more abstract

94
00:05:52,450 --> 00:05:56,710
level

95
00:05:56,720 --> 00:05:59,090
let's take a little look at the source

96
00:05:59,090 --> 00:06:04,130
code in cook sous so this is cook soon

97
00:06:04,130 --> 00:06:07,300
saw Scott a little bit like the juice I

98
00:06:07,300 --> 00:06:10,070
talked we've seen yesterday or object

99
00:06:10,070 --> 00:06:13,460
model so in cook sous widgets inherit

100
00:06:13,460 --> 00:06:15,620
from our widget so we define a spinner

101
00:06:15,620 --> 00:06:18,530
with your hair from widget and then we

102
00:06:18,530 --> 00:06:20,930
provide a constructor and all we do is

103
00:06:20,930 --> 00:06:23,090
called the base call are called the

104
00:06:23,090 --> 00:06:25,220
constructor of the base class so this

105
00:06:25,220 --> 00:06:28,010
basically just nothing it's just a

106
00:06:28,010 --> 00:06:33,740
widget so the next step is we want to

107
00:06:33,740 --> 00:06:37,220
lay out of the lease up witches and for

108
00:06:37,220 --> 00:06:38,690
the spinner it's basically it's a grid

109
00:06:38,690 --> 00:06:42,860
and the input field should have a row

110
00:06:42,860 --> 00:06:47,990
span of two and and the the spacing of

111
00:06:47,990 --> 00:06:49,730
the resize behavior should be that if

112
00:06:49,730 --> 00:06:53,390
you resize it horizontally only the text

113
00:06:53,390 --> 00:06:55,610
field should resize if I resize it

114
00:06:55,610 --> 00:06:59,840
vertically both rose so should resize

115
00:06:59,840 --> 00:07:02,330
equally and that weather is what I'm

116
00:07:02,330 --> 00:07:05,360
saying there I create a layout which

117
00:07:05,360 --> 00:07:08,300
nope layouts are not widget I create a

118
00:07:08,300 --> 00:07:11,180
layout manager it's a grid and then I

119
00:07:11,180 --> 00:07:15,020
say the growth legs that is the resizing

120
00:07:15,020 --> 00:07:17,260
behavior of the first and second row

121
00:07:17,260 --> 00:07:21,680
here equals 1 so it's resizable and the

122
00:07:21,680 --> 00:07:26,900
first column well it's a type of way

123
00:07:26,900 --> 00:07:32,750
sorry it should be the column should be

124
00:07:32,750 --> 00:07:35,120
0 because the first first column is

125
00:07:35,120 --> 00:07:37,490
starting with 0 so the first column

126
00:07:37,490 --> 00:07:41,660
should be should be flexible well and

127
00:07:41,660 --> 00:07:46,970
then I want to add the widget so I want

128
00:07:46,970 --> 00:07:49,130
to add the text field widgets and I pass

129
00:07:49,130 --> 00:07:52,820
in the value a string and then I simply

130
00:07:52,820 --> 00:07:56,090
want to add this text feed widget to the

131
00:07:56,090 --> 00:07:58,610
parent which is the spinner and then I

132
00:07:58,610 --> 00:08:00,380
configure some some layout properties

133
00:08:00,380 --> 00:08:02,540
like the row where it should be placed

134
00:08:02,540 --> 00:08:05,840
column and the Rose bear and the same is

135
00:08:05,840 --> 00:08:08,860
true for for the buttons as well

136
00:08:08,860 --> 00:08:10,280
additionally

137
00:08:10,280 --> 00:08:12,680
i define the images for the up and down

138
00:08:12,680 --> 00:08:17,180
arrow so this actually is working code

139
00:08:17,180 --> 00:08:20,000
and this is something that what we had

140
00:08:20,000 --> 00:08:22,520
in mind so we want to write widgets on a

141
00:08:22,520 --> 00:08:25,820
very high level just like and swing our

142
00:08:25,820 --> 00:08:30,650
q te or any other widget toolkit and let

143
00:08:30,650 --> 00:08:35,539
me switch to firefox just to show it a

144
00:08:35,539 --> 00:08:37,659
little bit so that what i have here is

145
00:08:37,659 --> 00:08:41,270
the cooks to demo browser no the cooks a

146
00:08:41,270 --> 00:08:44,180
playground and i can type in code on the

147
00:08:44,180 --> 00:08:46,670
left and run it on the right and what

148
00:08:46,670 --> 00:08:48,350
you see here this was the first step

149
00:08:48,350 --> 00:08:52,310
just inherent from from widget and then

150
00:08:52,310 --> 00:08:53,510
I said background color because

151
00:08:53,510 --> 00:08:59,510
otherwise you can see anything then we

152
00:08:59,510 --> 00:09:03,530
have the next step that's pretty

153
00:09:03,530 --> 00:09:05,900
interesting I add a layout and suddenly

154
00:09:05,900 --> 00:09:09,410
the which it disappears that's why the

155
00:09:09,410 --> 00:09:12,140
layout manager uses the sizes of the

156
00:09:12,140 --> 00:09:13,820
child witches and since I don't have any

157
00:09:13,820 --> 00:09:18,010
child widgets adjust the size collapse

158
00:09:18,010 --> 00:09:22,750
still and then I add the text field

159
00:09:22,750 --> 00:09:25,880
again with the row column and you and

160
00:09:25,880 --> 00:09:30,560
the row span i can add the the first

161
00:09:30,560 --> 00:09:34,360
button and the second button and voila

162
00:09:34,360 --> 00:09:37,940
this is pretty much looking like a

163
00:09:37,940 --> 00:09:41,360
spinner it's not nice should some

164
00:09:41,360 --> 00:09:44,450
tweaking us is needed but this is pretty

165
00:09:44,450 --> 00:09:47,480
much the api we had in mind how we want

166
00:09:47,480 --> 00:09:53,010
to to create complex compose switches

167
00:09:53,020 --> 00:09:55,590
okay let's get big

168
00:09:55,590 --> 00:09:59,940
so now that we have the composition of

169
00:09:59,940 --> 00:10:02,970
of widgets the question is if we have

170
00:10:02,970 --> 00:10:04,860
basic widgets like a label or and image

171
00:10:04,860 --> 00:10:07,470
which are not composed how does it map

172
00:10:07,470 --> 00:10:11,220
to the dome what is the dome generated

173
00:10:11,220 --> 00:10:15,420
or needed for this widget so let's take

174
00:10:15,420 --> 00:10:22,430
this text field and this is

175
00:10:22,430 --> 00:10:26,640
approximately the HTML generated by by

176
00:10:26,640 --> 00:10:32,040
the framework for this widget basically

177
00:10:32,040 --> 00:10:35,580
we have our three two to three diff

178
00:10:35,580 --> 00:10:38,400
elements and I will go to third to this

179
00:10:38,400 --> 00:10:40,650
in a moment so first we have the

180
00:10:40,650 --> 00:10:43,740
container in our case the container is

181
00:10:43,740 --> 00:10:45,930
the Dom element added to the parent

182
00:10:45,930 --> 00:10:50,580
widget we use absolute positioning and

183
00:10:50,580 --> 00:10:54,780
we use fixed sizes why we do this a

184
00:10:54,780 --> 00:11:00,300
little bit later then you have a

185
00:11:00,300 --> 00:11:03,630
decorator element this is I think this

186
00:11:03,630 --> 00:11:05,910
is a pretty interesting concept the

187
00:11:05,910 --> 00:11:09,210
decorator element arm basically is a

188
00:11:09,210 --> 00:11:13,490
container for any background decoration

189
00:11:13,490 --> 00:11:16,890
so i can add an image to this i can add

190
00:11:16,890 --> 00:11:19,650
our complex HTML to render the

191
00:11:19,650 --> 00:11:23,340
background of the of the widget and we

192
00:11:23,340 --> 00:11:26,700
have custom classes which are simply

193
00:11:26,700 --> 00:11:29,880
there to to render the background of the

194
00:11:29,880 --> 00:11:35,340
widget and then we have the actual

195
00:11:35,340 --> 00:11:38,310
content on the content the decorator are

196
00:11:38,310 --> 00:11:41,010
at the same level of the year Dom

197
00:11:41,010 --> 00:11:44,550
hierarchy just a difference z-index and

198
00:11:44,550 --> 00:11:47,670
the content overlays the decorator and I

199
00:11:47,670 --> 00:11:49,920
can change the decorator on the fly

200
00:11:49,920 --> 00:11:52,560
without changing anything else on the

201
00:11:52,560 --> 00:11:55,410
widget so it doesn't influence the

202
00:11:55,410 --> 00:11:58,890
layout in our stuff like this and the

203
00:11:58,890 --> 00:12:01,230
content actually is the element we want

204
00:12:01,230 --> 00:12:03,000
to display in this case it's the input

205
00:12:03,000 --> 00:12:05,850
element

206
00:12:05,860 --> 00:12:09,459
the little dots we do set some starts to

207
00:12:09,459 --> 00:12:13,000
reset the input element so the input

208
00:12:13,000 --> 00:12:19,370
element itself doesn't have any chrome

209
00:12:19,380 --> 00:12:23,079
so small summary of the of the dome

210
00:12:23,079 --> 00:12:25,209
structure we do have two to three dom

211
00:12:25,209 --> 00:12:27,730
elements it's two to three because the

212
00:12:27,730 --> 00:12:29,620
decorators optional if I don't want to

213
00:12:29,620 --> 00:12:31,510
render any day any background there is

214
00:12:31,510 --> 00:12:34,240
no need for me to have this element we

215
00:12:34,240 --> 00:12:36,480
use absolute positioning and fixed sizes

216
00:12:36,480 --> 00:12:40,240
that's easy because if we do fix

217
00:12:40,240 --> 00:12:43,209
cézanne's absolute positioning that's

218
00:12:43,209 --> 00:12:45,670
the easiest staff browsers can do so

219
00:12:45,670 --> 00:12:47,950
there is no cross browser issues in

220
00:12:47,950 --> 00:12:50,709
these two features so cross browser

221
00:12:50,709 --> 00:12:54,519
issues are just gone and then we have

222
00:12:54,519 --> 00:12:56,800
something like no explicit heading and

223
00:12:56,800 --> 00:13:00,310
no borders does anybody have an idea

224
00:13:00,310 --> 00:13:03,519
where this is an advantage no borders no

225
00:13:03,519 --> 00:13:08,470
pettings okay the advantage is that this

226
00:13:08,470 --> 00:13:12,220
is box model independent this works in

227
00:13:12,220 --> 00:13:14,560
COEX mode and in standard mode exactly

228
00:13:14,560 --> 00:13:17,920
the same way because in a sentence mode

229
00:13:17,920 --> 00:13:21,670
if you specify the size it will add to

230
00:13:21,670 --> 00:13:23,620
the size the padding and the border and

231
00:13:23,620 --> 00:13:26,170
you will get something different 22

232
00:13:26,170 --> 00:13:28,899
quirks mode where the size is just the

233
00:13:28,899 --> 00:13:34,540
size and if we remove in our our set our

234
00:13:34,540 --> 00:13:37,570
borders and padding's from the widget we

235
00:13:37,570 --> 00:13:40,839
gain box model independence out of the

236
00:13:40,839 --> 00:13:47,340
box second

237
00:13:47,340 --> 00:13:52,590
can show you how this maps to the dome

238
00:13:52,590 --> 00:13:58,480
like

239
00:13:58,490 --> 00:14:03,000
ok

240
00:14:03,010 --> 00:14:08,050
well doesn't look nice okay so you can

241
00:14:08,050 --> 00:14:10,240
see here this is the container element

242
00:14:10,240 --> 00:14:16,020
it's a div it has absolute two positions

243
00:14:16,020 --> 00:14:19,960
then this is the input element this

244
00:14:19,960 --> 00:14:21,670
looks weird but most of these styles are

245
00:14:21,670 --> 00:14:26,140
generated by by the browser so we you

246
00:14:26,140 --> 00:14:29,050
use some of these these starts to to

247
00:14:29,050 --> 00:14:30,990
make sure that the input element itself

248
00:14:30,990 --> 00:14:34,000
is basically invisible so it doesn't

249
00:14:34,000 --> 00:14:36,760
have this border and the inside and

250
00:14:36,760 --> 00:14:39,340
background color and stuff like this and

251
00:14:39,340 --> 00:14:44,920
then we have this one is the decorator

252
00:14:44,920 --> 00:14:47,530
and this decorator is actually a little

253
00:14:47,530 --> 00:14:50,530
bit more complex because it's rendering

254
00:14:50,530 --> 00:14:53,470
these slightly rounded borders and it's

255
00:14:53,470 --> 00:14:57,730
using its using diff elements to do this

256
00:14:57,730 --> 00:15:01,000
and leaving the edge pixels empty and

257
00:15:01,000 --> 00:15:03,700
then it has a skate background image and

258
00:15:03,700 --> 00:15:06,480
that's something we can do without

259
00:15:06,480 --> 00:15:09,220
interfering with any of the the rest of

260
00:15:09,220 --> 00:15:18,530
the widget

261
00:15:18,540 --> 00:15:22,230
okay what are the pros what are the cons

262
00:15:22,230 --> 00:15:25,830
of these these decisions first of all we

263
00:15:25,830 --> 00:15:28,710
have box model independence we have very

264
00:15:28,710 --> 00:15:33,750
flex flexible styling because we can do

265
00:15:33,750 --> 00:15:35,400
almost anything we could even do a

266
00:15:35,400 --> 00:15:38,430
canvas element there and draw something

267
00:15:38,430 --> 00:15:40,950
weird on the background and we don't

268
00:15:40,950 --> 00:15:43,290
have any cross browser issues because

269
00:15:43,290 --> 00:15:48,150
it's stupid sim the negative side is

270
00:15:48,150 --> 00:15:50,850
that we do have to use more dom elements

271
00:15:50,850 --> 00:15:55,290
than with the basic basic approach where

272
00:15:55,290 --> 00:15:58,530
the element is the widget like the input

273
00:15:58,530 --> 00:16:03,630
element is the text field widget and we

274
00:16:03,630 --> 00:16:05,540
do sighs computation in javascript

275
00:16:05,540 --> 00:16:09,780
because we have these fixed sizes we do

276
00:16:09,780 --> 00:16:12,240
have to do some loyalty and this is of

277
00:16:12,240 --> 00:16:15,390
course lower than the built-in layout

278
00:16:15,390 --> 00:16:23,280
engine okay next a little bit on

279
00:16:23,280 --> 00:16:27,030
steaming this is only a teaser I like

280
00:16:27,030 --> 00:16:30,840
this image okay we put the skin over the

281
00:16:30,840 --> 00:16:36,390
scalp so just a teaser this is a very

282
00:16:36,390 --> 00:16:38,880
little calculator application I've

283
00:16:38,880 --> 00:16:41,460
written some time ago and these two

284
00:16:41,460 --> 00:16:44,490
applications are exactly the same the

285
00:16:44,490 --> 00:16:46,740
application source code is exactly the

286
00:16:46,740 --> 00:16:49,620
same the only difference is that i use

287
00:16:49,620 --> 00:16:53,280
different decorator renders so all I do

288
00:16:53,280 --> 00:16:58,470
is I swept swap the decorators used to

289
00:16:58,470 --> 00:17:03,170
render all these widgets so none of the

290
00:17:03,170 --> 00:17:06,390
UI composition codes also is affected to

291
00:17:06,390 --> 00:17:10,710
do this

292
00:17:10,720 --> 00:17:16,030
let's get to the guys now somehow we

293
00:17:16,030 --> 00:17:19,589
have to work with the Dom so there's no

294
00:17:19,589 --> 00:17:22,179
no way around working with the dome when

295
00:17:22,179 --> 00:17:24,939
we want to build a browser well we took

296
00:17:24,939 --> 00:17:31,030
it so how how does this text via mid

297
00:17:31,030 --> 00:17:36,640
widget map to this HTML so what code is

298
00:17:36,640 --> 00:17:41,710
required to do this first of all this is

299
00:17:41,710 --> 00:17:43,299
I think this should be familiar to all

300
00:17:43,299 --> 00:17:46,450
of you so working with the Dom without

301
00:17:46,450 --> 00:17:50,169
any library is not fun at all like we

302
00:17:50,169 --> 00:17:52,390
have cross browser issues simple things

303
00:17:52,390 --> 00:17:55,630
like setting opacity of an element is

304
00:17:55,630 --> 00:17:58,960
very different in IE then in all other

305
00:17:58,960 --> 00:18:01,059
browsers and there's many little things

306
00:18:01,059 --> 00:18:04,289
so there are many cross browser issues

307
00:18:04,289 --> 00:18:07,260
small mistake can degrade performance

308
00:18:07,260 --> 00:18:10,900
enormously like in this little snippet

309
00:18:10,900 --> 00:18:16,480
of code I create an element append the

310
00:18:16,480 --> 00:18:18,840
element to the body and then I do a

311
00:18:18,840 --> 00:18:22,000
change the style of the element and this

312
00:18:22,000 --> 00:18:25,510
is slow because every change to the

313
00:18:25,510 --> 00:18:28,030
style will update the layout of the

314
00:18:28,030 --> 00:18:30,100
would trigger the layered engine of the

315
00:18:30,100 --> 00:18:34,299
browser so don't do this the simple

316
00:18:34,299 --> 00:18:36,820
change is to first create the element

317
00:18:36,820 --> 00:18:38,679
set all the styles and then append it to

318
00:18:38,679 --> 00:18:42,280
the document this way the Laird engine

319
00:18:42,280 --> 00:18:45,159
is triggered only once and this can make

320
00:18:45,159 --> 00:18:48,940
a huge difference just putting the line

321
00:18:48,940 --> 00:18:53,740
a little bit further down and then

322
00:18:53,740 --> 00:18:56,200
simple things like reading styles and

323
00:18:56,200 --> 00:18:59,049
attributes from the Dom are depending on

324
00:18:59,049 --> 00:19:01,210
the browser can be very expensive so

325
00:19:01,210 --> 00:19:07,809
reading from the DOM is expensive so

326
00:19:07,809 --> 00:19:11,110
what we do is we try to wrap the door so

327
00:19:11,110 --> 00:19:14,049
we creep we create dumb wrappers for the

328
00:19:14,049 --> 00:19:18,190
elements we use for the widget we do

329
00:19:18,190 --> 00:19:20,590
lazy Dom element creation because

330
00:19:20,590 --> 00:19:21,750
creating elements

331
00:19:21,750 --> 00:19:24,900
so expensive and we batch dumb

332
00:19:24,900 --> 00:19:28,080
operations additionally we start we

333
00:19:28,080 --> 00:19:31,650
cache style and attributes so in the in

334
00:19:31,650 --> 00:19:35,910
the code you see here let's focus on

335
00:19:35,910 --> 00:19:42,540
this one this is how the widget the very

336
00:19:42,540 --> 00:19:44,670
simplified widget could create its

337
00:19:44,670 --> 00:19:47,880
element and what you see is that we

338
00:19:47,880 --> 00:19:51,060
creating QX HTML element instance and

339
00:19:51,060 --> 00:19:54,360
this is the wrapper and at this point no

340
00:19:54,360 --> 00:19:56,910
Dom element is created just the

341
00:19:56,910 --> 00:19:59,100
JavaScript instance and the Dom element

342
00:19:59,100 --> 00:20:01,020
is only created when we actually add

343
00:20:01,020 --> 00:20:06,270
this widget to the document and all this

344
00:20:06,270 --> 00:20:08,460
is a decorator you see that it has a

345
00:20:08,460 --> 00:20:14,250
unified API to set styles like if I had

346
00:20:14,250 --> 00:20:17,010
this opacity here it would be normalized

347
00:20:17,010 --> 00:20:20,220
and by ie the filter style would be said

348
00:20:20,220 --> 00:20:22,200
and for all other browsers the opacity

349
00:20:22,200 --> 00:20:26,820
style would be said the same for the

350
00:20:26,820 --> 00:20:30,690
decorator and all all changes to these

351
00:20:30,690 --> 00:20:32,940
elements are not applied immediately to

352
00:20:32,940 --> 00:20:35,430
the Dom but they are queued and then in

353
00:20:35,430 --> 00:20:38,790
in an asynchronous flush all of these

354
00:20:38,790 --> 00:20:41,310
changes are pushed to the dome in one in

355
00:20:41,310 --> 00:20:44,010
one batch which reduces the number of

356
00:20:44,010 --> 00:20:48,140
relay on the browser has to do and

357
00:20:48,140 --> 00:20:51,360
additionally the values I've said there

358
00:20:51,360 --> 00:20:54,120
when I read these values they are cached

359
00:20:54,120 --> 00:20:56,400
and that it doesn't hit the Dom it

360
00:20:56,400 --> 00:21:02,460
actually returned the cash values so the

361
00:21:02,460 --> 00:21:05,910
dumb rapper is a mixed bag so it does

362
00:21:05,910 --> 00:21:09,780
provide a cross-browser API it can

363
00:21:09,780 --> 00:21:12,510
increase performance in many ways as I

364
00:21:12,510 --> 00:21:15,450
said inserting nodes can be can be

365
00:21:15,450 --> 00:21:19,350
critical and we can since we know all

366
00:21:19,350 --> 00:21:21,660
the dumb operations which are going to

367
00:21:21,660 --> 00:21:23,730
happen we can order the Dom operations

368
00:21:23,730 --> 00:21:27,240
in a way that are avoid these pitfalls

369
00:21:27,240 --> 00:21:31,730
and it keeps the widget code clean and

370
00:21:31,730 --> 00:21:34,530
working with a dom is very

371
00:21:34,530 --> 00:21:37,830
very streamlined at Richard level well

372
00:21:37,830 --> 00:21:41,900
obviously the drawback is that it does

373
00:21:41,900 --> 00:21:45,420
cause more memory and the complexity of

374
00:21:45,420 --> 00:21:51,510
doing this is of course higher basically

375
00:21:51,510 --> 00:21:52,710
what we are doing is we are trading

376
00:21:52,710 --> 00:21:56,010
memory to runtime performance we do use

377
00:21:56,010 --> 00:21:59,160
more memory and get a little bit more

378
00:21:59,160 --> 00:22:06,840
runtime performance ok so I said before

379
00:22:06,840 --> 00:22:13,230
that layouts or that we use fixed sizes

380
00:22:13,230 --> 00:22:15,840
for the images and absolute positioning

381
00:22:15,840 --> 00:22:17,910
but the sizes must come from somewhere

382
00:22:17,910 --> 00:22:21,540
and that in our case that's our layout

383
00:22:21,540 --> 00:22:24,660
managers so and the layered measure has

384
00:22:24,660 --> 00:22:28,650
basically two two tasks to do the first

385
00:22:28,650 --> 00:22:31,860
is to render the initial layout to give

386
00:22:31,860 --> 00:22:33,930
all the widgets the initial position and

387
00:22:33,930 --> 00:22:41,850
sizes and for the spinner measuring

388
00:22:41,850 --> 00:22:44,220
where the buttons should be and where

389
00:22:44,220 --> 00:22:47,070
the input field should be placed like

390
00:22:47,070 --> 00:22:51,990
this and the other task is what you do

391
00:22:51,990 --> 00:22:53,760
when something resize when the browser

392
00:22:53,760 --> 00:22:58,470
window resizes Owen I said with value

393
00:22:58,470 --> 00:23:00,570
and the child nodes have to be resized

394
00:23:00,570 --> 00:23:03,990
so that is a two tasks for for the

395
00:23:03,990 --> 00:23:10,470
layout manager so basically it has to

396
00:23:10,470 --> 00:23:13,170
compute widget sizes based on the

397
00:23:13,170 --> 00:23:16,770
available space layout constraints like

398
00:23:16,770 --> 00:23:19,140
it has to be in this cell and this

399
00:23:19,140 --> 00:23:21,720
column and this row preferred widget

400
00:23:21,720 --> 00:23:23,880
sizes like the label has a preferred

401
00:23:23,880 --> 00:23:26,490
Richard size which is the size of the

402
00:23:26,490 --> 00:23:29,580
label and widget size constraints that

403
00:23:29,580 --> 00:23:32,850
is widget could have configured minimum

404
00:23:32,850 --> 00:23:35,100
size or coffee configured maximum size

405
00:23:35,100 --> 00:23:37,260
so all of this has to be taken into

406
00:23:37,260 --> 00:23:41,010
account to compute the sizes basically

407
00:23:41,010 --> 00:23:45,940
this is what the browser does as well

408
00:23:45,940 --> 00:23:50,529
and the algorithm that does is basically

409
00:23:50,529 --> 00:23:54,850
a two-pass algorithm we took compute we

410
00:23:54,850 --> 00:23:57,429
first compute the preferred size the

411
00:23:57,429 --> 00:24:00,700
preferred size of the spinner basically

412
00:24:00,700 --> 00:24:02,919
is the preferred size of all of its

413
00:24:02,919 --> 00:24:06,039
children and then combined with the

414
00:24:06,039 --> 00:24:08,950
later information the layout manager in

415
00:24:08,950 --> 00:24:12,279
this case the grid provides and once we

416
00:24:12,279 --> 00:24:15,580
know the size of the of the route widget

417
00:24:15,580 --> 00:24:17,889
and the available space we can then

418
00:24:17,889 --> 00:24:22,799
render every widget from top to bottom

419
00:24:22,799 --> 00:24:26,740
given the the known size that we have so

420
00:24:26,740 --> 00:24:31,659
that's the second part pass the

421
00:24:31,659 --> 00:24:35,789
following slides will be a little bit

422
00:24:35,789 --> 00:24:38,649
complicated not complicated i will show

423
00:24:38,649 --> 00:24:41,110
a little bit of code so let me know if

424
00:24:41,110 --> 00:24:48,700
you have any questions there ok so first

425
00:24:48,700 --> 00:24:50,919
person said I want to complete compute

426
00:24:50,919 --> 00:24:55,750
the preferred size of the spinner simply

427
00:24:55,750 --> 00:24:57,970
what I'm doing is I asked the layout

428
00:24:57,970 --> 00:24:59,860
manager the spinner has a layout manager

429
00:24:59,860 --> 00:25:01,840
asked the state layout manager what is

430
00:25:01,840 --> 00:25:03,580
the preferred size of all of my children

431
00:25:03,580 --> 00:25:08,710
given this layout well and the late

432
00:25:08,710 --> 00:25:13,179
major says ok give me all the preferred

433
00:25:13,179 --> 00:25:15,399
sizes of the children and then I apply

434
00:25:15,399 --> 00:25:18,279
my complex or simple layout algorithm

435
00:25:18,279 --> 00:25:22,029
and compute the preferred size of the

436
00:25:22,029 --> 00:25:26,679
aggregate and the preferred size of the

437
00:25:26,679 --> 00:25:30,820
children again the text field has the

438
00:25:30,820 --> 00:25:34,210
preferred height is the text height we

439
00:25:34,210 --> 00:25:36,039
can measure the height of the of the

440
00:25:36,039 --> 00:25:40,179
text and I just have a fixed fixed with

441
00:25:40,179 --> 00:25:43,990
because there's no intrinsic preferred

442
00:25:43,990 --> 00:25:48,909
with often text field and for the button

443
00:25:48,909 --> 00:25:50,769
it's even easier it's just the image

444
00:25:50,769 --> 00:25:54,109
size

445
00:25:54,119 --> 00:25:58,019
so once we know the preferred size of

446
00:25:58,019 --> 00:26:01,469
the spinner we can then go top down from

447
00:26:01,469 --> 00:26:03,179
the spinner to all of its children and

448
00:26:03,179 --> 00:26:08,149
say okay I have the available space and

449
00:26:08,149 --> 00:26:12,359
tells I and update the Dom elements

450
00:26:12,359 --> 00:26:13,919
required for the switcher so it will

451
00:26:13,919 --> 00:26:15,719
update the content element the decorator

452
00:26:15,719 --> 00:26:19,169
element the container element and then

453
00:26:19,169 --> 00:26:21,599
tear the layout manager to do the same

454
00:26:21,599 --> 00:26:24,749
for all the children and the layout

455
00:26:24,749 --> 00:26:28,159
manager does its size computation metric

456
00:26:28,159 --> 00:26:31,669
iterates over all the children and then

457
00:26:31,669 --> 00:26:35,009
tells called the render layout on all of

458
00:26:35,009 --> 00:26:37,949
the children and the children again just

459
00:26:37,949 --> 00:26:40,139
update their Dom positions and don't

460
00:26:40,139 --> 00:26:47,009
sighs well that's not too easy so we do

461
00:26:47,009 --> 00:26:51,279
all the reflow computation in JavaScript

462
00:26:51,289 --> 00:26:55,589
the great benefit is that we can do

463
00:26:55,589 --> 00:26:57,869
anything we have a large collection of

464
00:26:57,869 --> 00:26:59,759
layout managers not just grid layouts of

465
00:26:59,759 --> 00:27:01,919
the box layout and flow layouts and

466
00:27:01,919 --> 00:27:05,789
other stuff but it has to be highly

467
00:27:05,789 --> 00:27:07,739
optimized since we are doing this in

468
00:27:07,739 --> 00:27:10,499
JavaScript and there are some browsers

469
00:27:10,499 --> 00:27:14,999
which are not so fast in JavaScript we

470
00:27:14,999 --> 00:27:18,029
have to optimize this a lot so this is

471
00:27:18,029 --> 00:27:21,239
not so easy to do but if a feature is

472
00:27:21,239 --> 00:27:23,159
missing we can implement it we don't

473
00:27:23,159 --> 00:27:25,469
have to wait for any browser vendor to

474
00:27:25,469 --> 00:27:27,989
implement a feature for us we can

475
00:27:27,989 --> 00:27:30,239
basically implement any layout in

476
00:27:30,239 --> 00:27:33,419
behavior we wanted that's a big win for

477
00:27:33,419 --> 00:27:41,879
us so layout in summary this layering

478
00:27:41,879 --> 00:27:45,059
mechanism is cross browser so it's all

479
00:27:45,059 --> 00:27:48,629
JavaScript and it's the layout managers

480
00:27:48,629 --> 00:27:51,749
itself have no references to any low

481
00:27:51,749 --> 00:27:53,719
level code or widget code or whatsoever

482
00:27:53,719 --> 00:27:56,309
we can do custom layout managers we can

483
00:27:56,309 --> 00:28:00,949
do set anything can customize it we can

484
00:28:00,949 --> 00:28:03,599
have default sizes for all of our

485
00:28:03,599 --> 00:28:07,410
widgets but of course the drawing is

486
00:28:07,410 --> 00:28:12,060
this is not native CSS layout in and you

487
00:28:12,060 --> 00:28:13,980
feel the difference you feel the

488
00:28:13,980 --> 00:28:16,290
difference because if I resize I can

489
00:28:16,290 --> 00:28:24,390
show it so this

490
00:28:24,400 --> 00:28:28,990
let's just say I edit I at this one in a

491
00:28:28,990 --> 00:28:45,440
different way I say h20 that's Wow ok

492
00:28:45,450 --> 00:28:49,380
ok so the resizing of the text field

493
00:28:49,380 --> 00:28:52,260
doesn't doesn't work very well but it

494
00:28:52,260 --> 00:28:56,159
just says 20 pixels from the border and

495
00:28:56,159 --> 00:28:59,809
when I resize this one you will notice a

496
00:28:59,809 --> 00:29:03,179
little leg and that's because the

497
00:29:03,179 --> 00:29:06,330
JavaScript engine has to update the the

498
00:29:06,330 --> 00:29:09,570
positions in Safari and chrome actually

499
00:29:09,570 --> 00:29:12,690
you don't really notice this anymore but

500
00:29:12,690 --> 00:29:18,330
of course that's the drawback of this

501
00:29:18,330 --> 00:29:21,570
approach and implementation is not so

502
00:29:21,570 --> 00:29:28,080
trivial actually I think GWT 2.0 has

503
00:29:28,080 --> 00:29:30,649
implemented a layout engine purely with

504
00:29:30,649 --> 00:29:37,139
CSS layout but the problem with it and

505
00:29:37,139 --> 00:29:39,450
it's very snappy fury sighs but the

506
00:29:39,450 --> 00:29:41,669
problem is adding features to this one

507
00:29:41,669 --> 00:29:45,299
is really rocket science that's nothing

508
00:29:45,299 --> 00:29:51,799
you want to do so now to the last topic

509
00:29:51,799 --> 00:29:56,610
events like what can be so hard with

510
00:29:56,610 --> 00:30:00,059
events let's just click and mouse down

511
00:30:00,059 --> 00:30:04,169
and mouse up and key press but actually

512
00:30:04,169 --> 00:30:09,570
Dom events are stinking it's not

513
00:30:09,570 --> 00:30:11,519
javascript is a mess and not the dumb

514
00:30:11,519 --> 00:30:15,830
SMS but Dom events are even worse so

515
00:30:15,830 --> 00:30:18,389
first of all their different api's ie

516
00:30:18,389 --> 00:30:20,610
has a complete different set of api's

517
00:30:20,610 --> 00:30:23,669
than at any other browser that's fine if

518
00:30:23,669 --> 00:30:25,529
the behavior is similar we can add

519
00:30:25,529 --> 00:30:29,639
wrapper on this standard stuff but it's

520
00:30:29,639 --> 00:30:35,700
not nice it's getting worse features

521
00:30:35,700 --> 00:30:38,010
there are some features which are only

522
00:30:38,010 --> 00:30:40,350
in IE there are some features which are

523
00:30:40,350 --> 00:30:43,350
not in IE basically it's always IE and

524
00:30:43,350 --> 00:30:47,669
not a one feature which is not in IE as

525
00:30:47,669 --> 00:30:53,429
the event capturing face the normal

526
00:30:53,429 --> 00:30:56,820
behavior for an event is to bubble from

527
00:30:56,820 --> 00:30:58,020
the target

528
00:30:58,020 --> 00:31:00,420
to the document body that's a bubbling

529
00:31:00,420 --> 00:31:05,940
face but the w3c events also define a

530
00:31:05,940 --> 00:31:08,670
capturing phase where the events starts

531
00:31:08,670 --> 00:31:10,860
at the root bubbles through the target

532
00:31:10,860 --> 00:31:13,200
and then bubbles back to the root that's

533
00:31:13,200 --> 00:31:18,030
a capturing face that's not an ie ie has

534
00:31:18,030 --> 00:31:19,800
on the other hand most capturing

535
00:31:19,800 --> 00:31:22,290
completely unrelated just a similar name

536
00:31:22,290 --> 00:31:26,040
and mouse capturing is if you turn on

537
00:31:26,040 --> 00:31:28,110
Mouse capturing on an element all Mouse

538
00:31:28,110 --> 00:31:29,760
events will be dispatched on this

539
00:31:29,760 --> 00:31:32,040
element regardless where the mouse

540
00:31:32,040 --> 00:31:34,530
cursor is at the given moment it's very

541
00:31:34,530 --> 00:31:37,200
useful to do things like drag and drop

542
00:31:37,200 --> 00:31:39,180
where the mouse cursor can leave the

543
00:31:39,180 --> 00:31:42,390
direct element and the mouse event will

544
00:31:42,390 --> 00:31:44,160
still be dispatched on the element and

545
00:31:44,160 --> 00:31:47,370
not on the unrelated element below the

546
00:31:47,370 --> 00:31:50,070
mouse cursor so both both features are

547
00:31:50,070 --> 00:31:54,150
nice to have but very hard to to get

548
00:31:54,150 --> 00:32:01,330
this cross browser and then even worse

549
00:32:01,340 --> 00:32:04,860
they have different behavior they have

550
00:32:04,860 --> 00:32:07,440
different mouse event sequences like

551
00:32:07,440 --> 00:32:09,870
double click event sequence in IE is

552
00:32:09,870 --> 00:32:11,940
different to double click event sequence

553
00:32:11,940 --> 00:32:15,960
in Firefox where it is mousedown most up

554
00:32:15,960 --> 00:32:17,850
click hasta almost up click double click

555
00:32:17,850 --> 00:32:21,600
and I think IE doesn't fire two of those

556
00:32:21,600 --> 00:32:24,930
don't remember exactly which one but

557
00:32:24,930 --> 00:32:26,850
that can can be a problem should depend

558
00:32:26,850 --> 00:32:30,960
on things like this and key code char

559
00:32:30,960 --> 00:32:34,800
code are very very nasty they depend on

560
00:32:34,800 --> 00:32:37,200
the browser on the operating system and

561
00:32:37,200 --> 00:32:42,500
even on the locale the user has said so

562
00:32:42,500 --> 00:32:47,760
that's not nice so our goal would be for

563
00:32:47,760 --> 00:32:50,070
this little spinner widget to just

564
00:32:50,070 --> 00:32:53,730
specify button up widget at listen I

565
00:32:53,730 --> 00:32:57,570
click and then a function and this will

566
00:32:57,570 --> 00:32:59,850
handle all of this in the background for

567
00:32:59,850 --> 00:33:04,950
us so the native implementation is just

568
00:33:04,950 --> 00:33:06,450
to add the listeners to all the elements

569
00:33:06,450 --> 00:33:08,790
and then you have all these issues are

570
00:33:08,790 --> 00:33:10,080
just

571
00:33:10,080 --> 00:33:14,950
then that's not so now we'll tell you

572
00:33:14,950 --> 00:33:18,750
that how our event implementation works

573
00:33:18,750 --> 00:33:22,630
first of all we don't attach event

574
00:33:22,630 --> 00:33:24,549
handlers directly to the elements we

575
00:33:24,549 --> 00:33:27,010
have a generic mouse event handler and

576
00:33:27,010 --> 00:33:30,120
what this mouse event handler does it

577
00:33:30,120 --> 00:33:33,640
listens on the document body and all

578
00:33:33,640 --> 00:33:35,789
mouse events bubble up to the body and

579
00:33:35,789 --> 00:33:38,470
finally we'll arrive at the mouse event

580
00:33:38,470 --> 00:33:41,590
handler then we have an event

581
00:33:41,590 --> 00:33:44,020
registration the event registration

582
00:33:44,020 --> 00:33:47,980
keeps a mapping of all listeners and all

583
00:33:47,980 --> 00:33:50,080
elements so basically the event

584
00:33:50,080 --> 00:33:51,809
registration does the same as a browser

585
00:33:51,809 --> 00:33:55,720
it remembers all event listeners and of

586
00:33:55,720 --> 00:33:58,030
course the most event handler has a

587
00:33:58,030 --> 00:34:01,870
handle on this registration and then we

588
00:34:01,870 --> 00:34:04,299
have code like this it's very low level

589
00:34:04,299 --> 00:34:10,629
code where we call a net listener on the

590
00:34:10,629 --> 00:34:13,419
registration this will store this

591
00:34:13,419 --> 00:34:16,570
information about the element way we

592
00:34:16,570 --> 00:34:19,659
want to listen the event type we want to

593
00:34:19,659 --> 00:34:25,540
have and the callback function so now

594
00:34:25,540 --> 00:34:30,900
it's a funny funny

595
00:34:30,910 --> 00:34:33,500
okay what happens if I click on this

596
00:34:33,500 --> 00:34:38,990
image obviously this is the event the

597
00:34:38,990 --> 00:34:42,200
Dom event and the Dom event will well

598
00:34:42,200 --> 00:34:46,090
bubble up to the root as you see it will

599
00:34:46,090 --> 00:34:48,890
when it passes the element where the

600
00:34:48,890 --> 00:34:51,440
listener is nothing happens because the

601
00:34:51,440 --> 00:34:52,970
listener isn't attached directly to this

602
00:34:52,970 --> 00:34:56,410
one then it arrives at the body and

603
00:34:56,410 --> 00:34:58,610
there the mouse event handler will

604
00:34:58,610 --> 00:35:01,430
listen for this event and we'll get this

605
00:35:01,430 --> 00:35:04,010
event and now the event handler the

606
00:35:04,010 --> 00:35:05,930
mouse event handler can do anything with

607
00:35:05,930 --> 00:35:09,440
it it can wrap it into a custom event

608
00:35:09,440 --> 00:35:11,570
object which normalizes all the API

609
00:35:11,570 --> 00:35:15,280
calls it can even fire synthesized

610
00:35:15,280 --> 00:35:18,890
events to fill up the event sequences

611
00:35:18,890 --> 00:35:22,550
and all fancy stuff and when it has done

612
00:35:22,550 --> 00:35:25,100
this it can just push it to the event

613
00:35:25,100 --> 00:35:26,510
registration and tell the event

614
00:35:26,510 --> 00:35:30,490
registration he is a mouse event this is

615
00:35:30,490 --> 00:35:34,850
the event target for which can be read

616
00:35:34,850 --> 00:35:37,730
from the Dom event do whatever you want

617
00:35:37,730 --> 00:35:41,650
with it at this point we can handle the

618
00:35:41,650 --> 00:35:45,650
dispatch of the event totally on our own

619
00:35:45,650 --> 00:35:48,650
so we can now go ahead and say okay we

620
00:35:48,650 --> 00:35:52,010
want to implement a capturing face so we

621
00:35:52,010 --> 00:35:53,630
traverse all the Dom elements between

622
00:35:53,630 --> 00:35:57,230
the target and the body and dispatch all

623
00:35:57,230 --> 00:35:59,480
the handlers first or we can do mouse

624
00:35:59,480 --> 00:36:01,820
capturing we can always dispatch this

625
00:36:01,820 --> 00:36:05,300
event to the same element and then

626
00:36:05,300 --> 00:36:10,300
finally the callback function is called

627
00:36:10,300 --> 00:36:18,440
so to solve all these browser issues we

628
00:36:18,440 --> 00:36:22,400
simply don't attach event listeners to

629
00:36:22,400 --> 00:36:25,490
to the dome directly anymore we do this

630
00:36:25,490 --> 00:36:28,460
all through to an Eric handlers there's

631
00:36:28,460 --> 00:36:30,170
not only a mal Sandler there's a focus

632
00:36:30,170 --> 00:36:31,430
on floor there's a keyboard handler

633
00:36:31,430 --> 00:36:37,020
which does similar things yeah like

634
00:36:37,020 --> 00:36:40,860
we have a standard compliance API we

635
00:36:40,860 --> 00:36:44,310
have mouse capturing support we have the

636
00:36:44,310 --> 00:36:48,060
capturing event capturing phase and we

637
00:36:48,060 --> 00:36:49,860
have a unified behavior where it's

638
00:36:49,860 --> 00:36:54,780
possible well like always we trade this

639
00:36:54,780 --> 00:36:57,890
for a little bit loss in performance and

640
00:36:57,890 --> 00:37:00,840
increased code size especially keyboard

641
00:37:00,840 --> 00:37:04,890
handling is not the smallest class in

642
00:37:04,890 --> 00:37:08,120
our framework because this only shows

643
00:37:08,120 --> 00:37:10,470
how broken keyboard handling is in the

644
00:37:10,470 --> 00:37:18,630
browsers okay let's come to the end sum

645
00:37:18,630 --> 00:37:26,400
up we had this widget we've seen how

646
00:37:26,400 --> 00:37:28,470
this complex which it can be composed

647
00:37:28,470 --> 00:37:32,760
out of other simpler widgets we've seen

648
00:37:32,760 --> 00:37:36,300
how simple widgets map to the Dom with

649
00:37:36,300 --> 00:37:37,950
the container element the content

650
00:37:37,950 --> 00:37:43,560
element and the decorator element then

651
00:37:43,560 --> 00:37:46,710
I've shown a little teaser how theming

652
00:37:46,710 --> 00:37:52,860
could look like why we use the dumb

653
00:37:52,860 --> 00:37:56,090
rapper how we interact with the Dom

654
00:37:56,090 --> 00:37:58,680
haole your team works how sizes are

655
00:37:58,680 --> 00:38:05,550
computed and as last thing events how we

656
00:38:05,550 --> 00:38:09,840
deal with events and in the beginning I

657
00:38:09,840 --> 00:38:12,530
asked you who is framework developer

658
00:38:12,530 --> 00:38:16,080
this is because this is why you want to

659
00:38:16,080 --> 00:38:19,680
use a framework if you want to write a

660
00:38:19,680 --> 00:38:23,820
GUI application this is stuff users

661
00:38:23,820 --> 00:38:26,160
shouldn't have to bother with and that's

662
00:38:26,160 --> 00:38:37,140
why they are just frameworks so thank

663
00:38:37,150 --> 00:38:40,970
so now it's time to take questions are

664
00:38:40,970 --> 00:38:51,450
there any questions yeah please

665
00:38:51,460 --> 00:39:02,200
yes

666
00:39:02,210 --> 00:39:06,000
in theory this shouldn't be a problem

667
00:39:06,000 --> 00:39:08,940
and practice it still is if the browser

668
00:39:08,940 --> 00:39:13,440
if the user increases the font size what

669
00:39:13,440 --> 00:39:16,109
you could do is pull in the background

670
00:39:16,109 --> 00:39:19,050
for font size changes and then trigger a

671
00:39:19,050 --> 00:39:25,350
relay out of the of the interface in our

672
00:39:25,350 --> 00:39:28,740
case it we don't do this falling yet but

673
00:39:28,740 --> 00:39:30,660
what we can do we can increase the font

674
00:39:30,660 --> 00:39:33,000
size and then reload and then the

675
00:39:33,000 --> 00:39:37,170
measurement of the labels get the new

676
00:39:37,170 --> 00:39:39,420
sizes and the interface will be will be

677
00:39:39,420 --> 00:39:41,820
adopted like in this in this screen I

678
00:39:41,820 --> 00:39:45,200
have increase increase the font size to

679
00:39:45,200 --> 00:39:48,690
to make it more readable and the layout

680
00:39:48,690 --> 00:39:51,330
mansions will get this but not yet at

681
00:39:51,330 --> 00:40:14,180
one time yes

682
00:40:14,190 --> 00:40:21,960
okay let me let me show you the the the

683
00:40:21,960 --> 00:40:27,570
the HTML like this one if you look

684
00:40:27,570 --> 00:40:30,180
closely there's no styling information

685
00:40:30,180 --> 00:40:32,730
in this this is only positioning

686
00:40:32,730 --> 00:40:34,680
positioning is things computed by the

687
00:40:34,680 --> 00:40:36,960
layout engine and the layout engine has

688
00:40:36,960 --> 00:40:43,740
to set it directly on the element so yes

689
00:40:43,740 --> 00:40:45,600
you could do styling with external

690
00:40:45,600 --> 00:40:49,530
classes and with CSS we have a little

691
00:40:49,530 --> 00:40:52,650
different approach to styling because we

692
00:40:52,650 --> 00:40:55,860
want to style widgets on the widget

693
00:40:55,860 --> 00:40:58,470
level and not on the Dom element level

694
00:40:58,470 --> 00:41:01,380
so we want to keep the abstraction and

695
00:41:01,380 --> 00:41:03,810
we have a different approach to sort to

696
00:41:03,810 --> 00:41:05,760
starting but in theory you could of

697
00:41:05,760 --> 00:41:10,650
course apply styling or CSS classes to

698
00:41:10,650 --> 00:41:12,210
the widgets like you can all your

699
00:41:12,210 --> 00:41:14,070
buttons can have the button class then

700
00:41:14,070 --> 00:41:16,350
you have some CSS which defines the

701
00:41:16,350 --> 00:41:18,540
sides of the buttons what you cannot do

702
00:41:18,540 --> 00:41:20,850
is externalize the size and position

703
00:41:20,850 --> 00:41:28,020
information in this approach okay

