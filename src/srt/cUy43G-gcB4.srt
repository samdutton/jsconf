1
00:00:00,160 --> 00:00:01,160
Playing Pokemon Together with Node.js
- Samuel Agnew

2
00:00:01,160 --> 00:00:02,160
Hey!.

3
00:00:02,160 --> 00:00:03,160
OK.

4
00:00:03,160 --> 00:00:04,160
Another fun fact about our next speaker: If
you haven't seen his profile picture for the

5
00:00:04,160 --> 00:00:05,160
conference, definitely check it out.

6
00:00:05,160 --> 00:00:06,160
It's actually him playing onstage at metal
fest in Peru, when he did a South American

7
00:00:06,160 --> 00:00:07,160
tour with the thrash metal band.

8
00:00:07,160 --> 00:00:08,160
Lots of talent.

9
00:00:08,160 --> 00:00:09,160
So next we have playing Pokémon with Samuel
Agnew.

10
00:00:09,160 --> 00:00:10,160
Guess I should have checked this before.

11
00:00:10,160 --> 00:00:11,160
I see someone coming forward.

12
00:00:11,160 --> 00:00:12,160
[applause]

13
00:00:12,160 --> 00:00:13,160
Is there any way I can get like something
where I don't need to use my hands?

14
00:00:13,160 --> 00:00:14,160
>> Unless I could, could, like, one-hand live
code.

15
00:00:14,160 --> 00:00:15,160
>>
AUDIENCE: Technically you just did.

16
00:00:15,160 --> 00:00:16,160
>> Yeah, I guess I did.

17
00:00:16,160 --> 00:00:17,160
There's my talk.

18
00:00:17,160 --> 00:00:18,160
Dang, though, so this thing is not a thing.

19
00:00:18,160 --> 00:00:19,160
OK, I don't need to be coding until a couple
minutes into my talk so I might as well get

20
00:00:19,160 --> 00:00:20,160
started.

21
00:00:20,160 --> 00:00:21,160
How's it going JSConf, a company called Twilio
pays me to build goofy hacks and about them

22
00:00:21,160 --> 00:00:22,160
and I flew in from New York City the other
day, and speaking of JavaScript developers

23
00:00:22,160 --> 00:00:28,099
from New York, I want to give a quick shout
to by buddy speaking in the other track.

24
00:00:28,099 --> 00:00:36,430
You should watch it on YouTube later because
he also organization a meetup called Queens

25
00:00:36,430 --> 00:00:46,960
JS which is one of my favorite ones and sometimes
I convince my employer to give them money.

26
00:00:46,960 --> 00:00:50,380
This talk is going to be more of a fun one
than a serious.

27
00:00:50,380 --> 00:00:57,460
It's the last session and I know towards the
ends of conferences attention spans start

28
00:00:57,460 --> 00:01:03,810
wane, so I figured what could be more fun
than playing Pokémon with a bunch of JavaScript

29
00:01:03,810 --> 00:01:07,020
developers.

30
00:01:07,020 --> 00:01:15,500
I'm running Pokémon red version which is
a game I played a ton as a kid.

31
00:01:15,500 --> 00:01:21,290
And I have the Windows version of this emulator
running, even though I'm on a Mac and the

32
00:01:21,290 --> 00:01:27,290
reason for that is there are a lot of old
game emulators where the Windows versions

33
00:01:27,290 --> 00:01:34,080
of them have developer tools, because people
still make real games for these old systems,

34
00:01:34,080 --> 00:01:39,520
and for some reason or other, most of those
developers use Windows, so one of the features

35
00:01:39,520 --> 00:01:46,200
that this emulator has that I'm going to be
using for my talk is scripting functionality

36
00:01:46,200 --> 00:01:55,890
so we can run lui scripts and we can control
the memory of the game and button input and

37
00:01:55,890 --> 00:01:58,250
stuff like that.

38
00:01:58,250 --> 00:02:00,980
I'm being mic'd up.

39
00:02:00,980 --> 00:02:02,700
Cool.
[laughter]

40
00:02:02,700 --> 00:02:06,940
So what we're going to do is we're going to
write a Lewis script that interacts with a

41
00:02:06,940 --> 00:02:13,361
node.js express server sitting behind a Twilio
phone number and I'm going to have you all

42
00:02:13,361 --> 00:02:20,810
text a Twilio phone number to tell me what
buttons to press in the game and the Node

43
00:02:20,810 --> 00:02:23,760
app and the script are going to communicate
with each other.

44
00:02:23,760 --> 00:02:27,500
Testing, can you hear me?

45
00:02:27,500 --> 00:02:28,990
AUDIENCE: Yes!

46
00:02:28,990 --> 00:02:33,780
Sweet, awesome, so this might sound kind of
familiar to to some of you.

47
00:02:33,780 --> 00:02:46,850
If you about five years ago, there was a twitch.tv
livestream but instead of a human being playing

48
00:02:46,850 --> 00:02:52,420
it, it was everyone watching the stream typing
in the chat which buttons would be pressed

49
00:02:52,420 --> 00:02:56,950
and when you have 80,000 people playing the
same game controlling it at the same time,

50
00:02:56,950 --> 00:03:00,290
things get pretty interesting.

51
00:03:00,290 --> 00:03:08,960
So when I found out that these emulators had
scripting, I guess because I work for Twilio,

52
00:03:08,960 --> 00:03:15,850
I was like, whoa, wouldn't it be cool if you
could do that with text messages, too?

53
00:03:15,850 --> 00:03:22,070
And I it turns the Lua scripting thing is
really popular in the speed scripting community.

54
00:03:22,070 --> 00:03:33,040
Where people try to write scripts to complete
games in the most efficient way possible.

55
00:03:33,040 --> 00:03:40,800
This documentation seems pretty bare boneses
so I've actually been following this other

56
00:03:40,800 --> 00:03:44,480
emulator's documentation.

57
00:03:44,480 --> 00:03:53,460
Turns out all these old game console emulate
y they have the exact same Lua API I guess

58
00:03:53,460 --> 00:03:58,540
because they're all open source and once one
implemented it the other ones were like, cool,

59
00:03:58,540 --> 00:04:02,220
gonna copy and paste that.

60
00:04:02,220 --> 00:04:09,160
You can do stuff like read and write bytes
to the game's memory, like the RAM and ROM

61
00:04:09,160 --> 00:04:19,840
and that kind of stuff.

62
00:04:19,840 --> 00:04:23,460
I'm going to have this Twilio phone number
set up so that I can programmatically control

63
00:04:23,460 --> 00:04:29,440
T so whenever you send a text message to this
phone number and it's a 760 phone number which

64
00:04:29,440 --> 00:04:31,490
I think is an area code around here.

65
00:04:31,490 --> 00:04:38,050
So whenever you send a text to that number
Twilio is going to send a post address to

66
00:04:38,050 --> 00:04:46,570
this address right here, which is basically
a tunnel to a port on my local machine that

67
00:04:46,570 --> 00:04:50,280
my Node express app is going to be listening
on.

68
00:04:50,280 --> 00:04:53,300
That app does not exist yet so we'll get to
that later.

69
00:04:53,300 --> 00:04:57,930
If you text this number right now, literally
nothing will happen because it will be dropped

70
00:04:57,930 --> 00:05:02,370
on the floor because the code doesn't exist.

71
00:05:02,370 --> 00:05:07,100
I'll show it on the screen later so you don't
have to copy it down right now.

72
00:05:07,100 --> 00:05:11,590
Anyway, let's get into the basics of how to
write code for this Game Boy emulator.

73
00:05:11,590 --> 00:05:21,550
I'm going to do a Hello World thing, you might
have seen on this, I have my Twitter handle

74
00:05:21,550 --> 00:05:24,570
up on the Game Boy emulator.

75
00:05:24,570 --> 00:05:46,680
My 
Twitter is sagnewshreds,

76
00:05:46,680 --> 00:05:57,340
I'm going to say hello, JSConf with a smiley
face, and I'm going to save that and I'm going

77
00:05:57,340 --> 00:06:02,199
to stop this other script from happening.

78
00:06:02,199 --> 00:06:08,770
And I'm going to go find this Lua script on
my computer in my talks folder in the JSConf

79
00:06:08,770 --> 00:06:16,040
folder and I'm going to run that and it says,
hello, JSConf cool, we've run some Lua.

80
00:06:16,040 --> 00:06:18,320
But it disappeared.

81
00:06:18,320 --> 00:06:23,270
And the reason is it's only running once.

82
00:06:23,270 --> 00:06:28,870
We can repeatedly print this on every frame
if we want it to stay.

83
00:06:28,870 --> 00:06:32,479
And for that we need to write an infinite
loop.

84
00:06:32,479 --> 00:06:33,930
Because infinite loops rule, right?

85
00:06:33,930 --> 00:06:37,120
We write those all the time.

86
00:06:37,120 --> 00:06:41,580
Because this emulator, the whole environment
in there is single threaded this will actually

87
00:06:41,580 --> 00:06:43,840
stop the game from even playing.

88
00:06:43,840 --> 00:06:49,900
So this emu object gives you a function where
you can control the frames so you can advance

89
00:06:49,900 --> 00:06:51,210
to the next frame.

90
00:06:51,210 --> 00:06:57,150
This way our infinite loop is pretty much
taking over the run time of the game so that

91
00:06:57,150 --> 00:07:00,470
each iteration of this loop is going to be
one frame of the game.

92
00:07:00,470 --> 00:07:05,290
So all this code will execute on each frame
so I'm going to advance to the next frame

93
00:07:05,290 --> 00:07:08,840
at the end of each loop and going to restart
that and now the hello JSConf is going to

94
00:07:08,840 --> 00:07:13,870
stay there.

95
00:07:13,870 --> 00:07:16,520
Now I'm going to write some useful stuff.

96
00:07:16,520 --> 00:07:21,900
So what we want to do is this Lua script is
going to communicate with our Node.js stuff.

97
00:07:21,900 --> 00:07:24,630
I know this is JSConf and I'm writing Lua.

98
00:07:24,630 --> 00:07:25,949
I'm not much of a Lua developer.

99
00:07:25,949 --> 00:07:31,520
I don't know how many of you in this room
consider yourselves Lua developers, but I'm

100
00:07:31,520 --> 00:07:33,259
not particularly.

101
00:07:33,259 --> 00:07:38,680
So I'm going to write some code to communicate
with that Node.js and we're going to do something

102
00:07:38,680 --> 00:07:40,699
technologically advanced here.

103
00:07:40,699 --> 00:07:41,699
Really complicated stuff.

104
00:07:41,699 --> 00:07:45,510
We're going to communicate by reading and
writing to text files.

105
00:07:45,510 --> 00:07:52,550
Yeah, so on each frame I'm going to read from
a file called button.txt, to see if a button

106
00:07:52,550 --> 00:07:53,650
was pressed.

107
00:07:53,650 --> 00:07:58,169
So I'm going to write some utility function,
so I'm going to write a function that can

108
00:07:58,169 --> 00:08:05,450
read a file and then I'm going to open that
file.

109
00:08:05,450 --> 00:08:08,850
If I can type correctly.

110
00:08:08,850 --> 00:08:09,850
Cool.

111
00:08:09,850 --> 00:08:13,840
So I'm going to open that file name with the
read flag and then I'm going to check to see

112
00:08:13,840 --> 00:08:21,940
if that file actually exists, so if it's nil,
then I'm going to set the input to be that

113
00:08:21,940 --> 00:08:27,160
file, and then I'm going to create a variable
called content and read the contents of that

114
00:08:27,160 --> 00:08:28,680
file into it.

115
00:08:28,680 --> 00:08:32,669
And then I'm going to close the file, because
you always gotta close something you open.

116
00:08:32,669 --> 00:08:35,440
You gotta finish what you started, right?

117
00:08:35,440 --> 00:08:39,459
And then I'm going to return the content of
the file which should just be a string of

118
00:08:39,459 --> 00:08:41,419
whatever was in the file.

119
00:08:41,419 --> 00:08:46,839
And next I'm going to write a quick function
to press a button in the game.

120
00:08:46,839 --> 00:08:53,980
So this is going to take a button, just like
the text of a button, like A, B, start, select,

121
00:08:53,980 --> 00:08:56,199
up, down, something like that.

122
00:08:56,199 --> 00:09:02,800
And the way the joy pad API works in this
Lua scripting is that it takes a table of

123
00:09:02,800 --> 00:09:06,759
buttons, like a key value kind of thing, like
a JavaScript object or a Python dictionary

124
00:09:06,759 --> 00:09:12,689
and it takes the button name and true or false
for whether that button is being pressed or

125
00:09:12,689 --> 00:09:13,689
not.

126
00:09:13,689 --> 00:09:17,209
So I'm just going to create an input table
here.

127
00:09:17,209 --> 00:09:23,889
And empty one, and I'm going to set whatever
button we're trying to press equal to true.

128
00:09:23,889 --> 00:09:29,100
And then I'm going to call the joy pad.set
function, and this is actually kind of interesting

129
00:09:29,100 --> 00:09:30,100
right here.

130
00:09:30,100 --> 00:09:44,660
One of the idiosyncrasies of this is there's
only one or two controllers, but I guess because

131
00:09:44,660 --> 00:09:50,949
they copy and pasted for the consoles, you
still have to give it the button input.

132
00:09:50,949 --> 00:09:55,579
So unless you're giving the link input, there's
only one player, so player 1 is going to have

133
00:09:55,579 --> 00:10:02,559
this input table and I'm going to go down
to this infinite loop and we're going to say

134
00:10:02,559 --> 00:10:09,089
for each frame of the game I'm going to check
to see if there is anything in button.txt,

135
00:10:09,089 --> 00:10:22,230
so I'm going to create a variable that is
going to read the contents of button.txt and

136
00:10:22,230 --> 00:10:26,399
if the button is nil.

137
00:10:26,399 --> 00:10:29,220
Press the button, pretty simple, right?

138
00:10:29,220 --> 00:10:36,730
So I'm going to put a message out to say I'm
pressing the button.

139
00:10:36,730 --> 00:10:42,500
As I said, I'm not much of a Lua developer,
so Lua string concatenation is just two dots.

140
00:10:42,500 --> 00:10:49,160
So if that looked a little funky to you, that's
what that is, that is just string concatenation.

141
00:10:49,160 --> 00:10:57,490
So I'm going to avoid duplicates like if you
send A to the text message thing and then

142
00:10:57,490 --> 00:11:00,790
it writes the button to that file, I just
want to press the button once, I don't want

143
00:11:00,790 --> 00:11:04,829
to keep pressing on each frame repeatedly.

144
00:11:04,829 --> 00:11:09,699
Like if you want to press the button twice,
you'll.

145
00:11:09,699 --> 00:11:15,439
It's going to return nil and button is going
to be nil, so this won't be executed, but

146
00:11:15,439 --> 00:11:20,139
speaking of pressing buttons for multiple
frames, that's another thing I want to address.

147
00:11:20,139 --> 00:11:23,810
So you are all human beings and when you're
playing a video game, you're not playing as

148
00:11:23,810 --> 00:11:32,550
fast as machine would, so when you press a
button on a Game Boy you're at least holding

149
00:11:32,550 --> 00:11:35,449
the button down for a solid portion of a second.

150
00:11:35,449 --> 00:11:38,860
So we're going to want to press it for a certain
number of frames.

151
00:11:38,860 --> 00:11:44,720
Let's say 5.

152
00:11:44,720 --> 00:11:51,499
Which is still not a long time, but long enough
for it to register and this is the syntax

153
00:11:51,499 --> 00:11:55,639
for a foreloop in Lua.

154
00:11:55,639 --> 00:12:03,929
But I want to make sure I advance the frame
again after each iteration of the loop.

155
00:12:03,929 --> 00:12:10,309
So we're done with the talk using a language
no one writes, or at I guess some of you do.

156
00:12:10,309 --> 00:12:11,309
I guess technically do.

157
00:12:11,309 --> 00:12:12,759
Because I'm writing it right now.

158
00:12:12,759 --> 00:12:23,189
But first I'm going to reload this Pokémon.lua
script.

159
00:12:23,189 --> 00:12:28,860
Now I'm going to write the letter A, capital
letter A in this text file and if I didn't

160
00:12:28,860 --> 00:12:32,740
mess anything up, when I go back to the emulator,
it should be pretsing the A button and as

161
00:12:32,740 --> 00:12:38,079
you see, it's on this menu screen, so if it
works this should go to the screen where I

162
00:12:38,079 --> 00:12:42,259
select a new game.

163
00:12:42,259 --> 00:12:48,370
Pressing A. -- I mean I guess it said it was
pressing A. Oh, there we go.

164
00:12:48,370 --> 00:12:50,379
Maybe five frames wasn't enough, actually.

165
00:12:50,379 --> 00:12:51,600
But we'll see.

166
00:12:51,600 --> 00:12:54,059
So the Lua code works, that's great.

167
00:12:54,059 --> 00:12:59,129
I'm glad to hear that.

168
00:12:59,129 --> 00:13:03,339
Now I'm going to open up a saved state that
I have, because later on once we're actually

169
00:13:03,339 --> 00:13:07,050
playing this, I don't want to have us to sit
through Professor Oak telling us all what

170
00:13:07,050 --> 00:13:15,649
to do.

171
00:13:15,649 --> 00:13:22,920
All right, time to go now, I'm going to write
some JavaScript finally.

172
00:13:22,920 --> 00:13:27,959
So I'm going to open a file called index.js
and I'm going to build a quick express app

173
00:13:27,959 --> 00:13:33,089
so for a lot of people who are already familiar
with backend Node development this will seem

174
00:13:33,089 --> 00:13:37,079
pretty straightforward for you for those of
you who aren't familiar with backend node.js

175
00:13:37,079 --> 00:13:43,980
development, I guess this will be a good little
Kickstarter.

176
00:13:43,980 --> 00:13:51,699
So first, going to require the FS module,
because you know, writing to files, gotta

177
00:13:51,699 --> 00:13:54,040
use the file system for that.

178
00:13:54,040 --> 00:14:00,610
Also going to require express, because it
is the web framework that I'm using, and I'm

179
00:14:00,610 --> 00:14:07,149
going to grab body parser, because I'm going
to need to deal with the body of a post request,

180
00:14:07,149 --> 00:14:11,529
because when you send the text message, Twilio
sends the post request representing the message

181
00:14:11,529 --> 00:14:15,869
and I need to get stuff in the body of that
post request to access what the text of that

182
00:14:15,869 --> 00:14:17,180
message is.

183
00:14:17,180 --> 00:14:24,769
So body.parser and now I need to use the Twilio
API.

184
00:14:24,769 --> 00:14:30,149
The Twilio node module and I'm going to grab
the messaging response object from that so

185
00:14:30,149 --> 00:14:33,049
this will generate the twiml for me.

186
00:14:33,049 --> 00:14:36,819
Twiml being the Twilio SMS.

187
00:14:36,819 --> 00:14:46,799
My web app is going to have to respond with
these XML tags, particularly the messaging

188
00:14:46,799 --> 00:14:52,110
response one, saying hey, respond to this
message with a text message and no one wants

189
00:14:52,110 --> 00:14:57,109
to write XML by hand, I don't so I'm going
to do this.

190
00:14:57,109 --> 00:15:05,559
Cool, I'm going to create my app object and
I'm going to make an array of valid Game Boy

191
00:15:05,559 --> 00:15:17,579
buttons that you can text.

192
00:15:17,579 --> 00:15:22,160
They're also the start and select buttons
on the Game Boy, but I'm not going to use

193
00:15:22,160 --> 00:15:26,480
that one, because that opens up the opportunity
for you all to troll me by spamming the start

194
00:15:26,480 --> 00:15:33,109
menu and that's not fun, so I'm not going
to let you do that, at all.

195
00:15:33,109 --> 00:15:40,029
Next I want to make sure I'm using the body
parsing middleware, can't forget that so when

196
00:15:40,029 --> 00:15:46,259
I get the URL encoded post body I'll actually
be able to use it.

197
00:15:46,259 --> 00:15:49,310
Gonna write that real quick.

198
00:15:49,310 --> 00:15:50,310
Cool.

199
00:15:50,310 --> 00:15:52,660
Now we can get to the fun stuff.

200
00:15:52,660 --> 00:15:59,980
Writing the post handler, so this will be
a /sms route as you saw me write in my Twilio

201
00:15:59,980 --> 00:16:00,980
function.

202
00:16:00,980 --> 00:16:14,419
First time I'm going to do is create a new
twiml messaging response object and then I'm

203
00:16:14,419 --> 00:16:18,679
going to grab the button that you want me
to press so I'm just going to assume whatever

204
00:16:18,679 --> 00:16:23,559
text message you sent me is only going to
be a Game Boy button and I'm going to grab

205
00:16:23,559 --> 00:16:25,480
that from the request body.

206
00:16:25,480 --> 00:16:30,689
This is going to look slightly confusing,
because the inside of the body of the post

207
00:16:30,689 --> 00:16:35,889
request, the value that I want is body with
an upper case B because that's what Twilio

208
00:16:35,889 --> 00:16:38,999
sends you as the actual text of the message.

209
00:16:38,999 --> 00:16:40,509
It's called the message Body.

210
00:16:40,509 --> 00:16:45,499
So I'm grabbing the body and I'm going to
convert it to lower case so I can make this

211
00:16:45,499 --> 00:16:49,850
case insensitive and also because I don't
have to put the burden of you dealing with

212
00:16:49,850 --> 00:16:57,009
your autocorrect and stuff.

213
00:16:57,009 --> 00:16:58,009
We don't want to deal with that.

214
00:16:58,009 --> 00:17:06,020
So going to convert that to lower case and
then I'm going to see if what you texted me

215
00:17:06,020 --> 00:17:13,181
is actually in our list of valid buttons that
we want you to be able to text, so if you

216
00:17:13,181 --> 00:17:16,940
text me start, not gonna get that.

217
00:17:16,940 --> 00:17:21,640
So if you sent me a valid button, I'm going
to add a message to this twiml objected and

218
00:17:21,640 --> 00:17:26,280
this will be the text message that I sent
to you in response and I'm going to say thanks

219
00:17:26,280 --> 00:17:32,060
for playing Pokémon with me and if you have
any questions I'm going to give you my Twitter

220
00:17:32,060 --> 00:17:41,850
handle again, or my email address in case
you want to send me some more longer-form

221
00:17:41,850 --> 00:17:47,220
complaints about how I'm using semicolons
and you hate that or something and I'm going

222
00:17:47,220 --> 00:17:51,560
to send you a smiley face because I'm really
happy you're all here.

223
00:17:51,560 --> 00:17:58,520
So next I'm going to write this button to
the text file to communicate with my Lua script,

224
00:17:58,520 --> 00:18:06,950
but an interesting thing here is when you're
trying to press the A or B button, it expects

225
00:18:06,950 --> 00:18:11,270
it to be upper case, but if you're trying
to press like up, down, left, right, start

226
00:18:11,270 --> 00:18:16,640
or select, it expects it to be lower case,
so slightly annoying, but we can deal with

227
00:18:16,640 --> 00:18:17,640
that.

228
00:18:17,640 --> 00:18:22,100
I'm going to say if you're trying to press
A or B, going to throw that back to upper

229
00:18:22,100 --> 00:18:31,880
case -- oh, no, I'm going to say if you're
pressing A or B in this little "if" block

230
00:18:31,880 --> 00:18:44,180
here then I'm going to set the button to upper
case so then I'm going to actually press the

231
00:18:44,180 --> 00:18:50,630
button by doing this super-complex writing
to a text file.

232
00:18:50,630 --> 00:18:55,350
So it's going to go to button.txt, I'm going
to write that button to it and I'm going to

233
00:18:55,350 --> 00:19:02,430
go to utf8 encoding and now if you text me
something that's not a valid Game Boy button,

234
00:19:02,430 --> 00:19:07,610
I'm going to respond with a message asking
you to send me a valid Game Boy button.

235
00:19:07,610 --> 00:19:13,500
Because you know, you might make a typo or
something, or maybe you want to comment on

236
00:19:13,500 --> 00:19:24,620
my hair or something, I'm just going to say
hey, please text me a valid Game Boy button.

237
00:19:24,620 --> 00:19:27,670
No smiley face on that one.

238
00:19:27,670 --> 00:19:30,600
[laughter]
And now I'm going to deal with actually responding

239
00:19:30,600 --> 00:19:38,470
to this HTTP request, so I'm going to make
sure that it's a 200 response, because if

240
00:19:38,470 --> 00:19:42,610
I'm actually getting the text message and
stuff, just going to give it 200, let's go

241
00:19:42,610 --> 00:19:43,610
with that.

242
00:19:43,610 --> 00:19:56,060
I'm going to set the content type to be text/xml,
and I'm just going to send the twiml object

243
00:19:56,060 --> 00:19:59,991
a stringified version of it, so this is just
going to be the xml that it generates, which

244
00:19:59,991 --> 00:20:03,240
is just going to be the text message I want
to send back.

245
00:20:03,240 --> 00:20:12,890
Should be about done now, make sure this is
listening, I'm going to go to port 3000, console.log,

246
00:20:12,890 --> 00:20:23,470
express app listening on port 3000, going
to put a bunch of exclamation points.

247
00:20:23,470 --> 00:20:27,560
That should be all the JavaScript I have to
write before I open this up for you to all

248
00:20:27,560 --> 00:20:31,770
play Pokémon with me, though, I want to make
sure I don't have errors.

249
00:20:31,770 --> 00:20:35,920
I'm going to run this and I'm going to text
this, if you did take that number down, I

250
00:20:35,920 --> 00:20:40,900
guess you can play it.

251
00:20:40,900 --> 00:20:45,170
yeah, someone pressed up, someone lent left.

252
00:20:45,170 --> 00:20:51,450
OK, so people are actually -- it looks like
the code is working at this point, because

253
00:20:51,450 --> 00:20:54,710
I'm not getting any errors.

254
00:20:54,710 --> 00:20:56,070
And you know what that means?

255
00:20:56,070 --> 00:21:02,031
That means we get to play Pokémon together,
so who wants to play Pokémon until we run

256
00:21:02,031 --> 00:21:04,910
out of time.

257
00:21:04,910 --> 00:21:22,190
So I'm going to need you to take your phones
out, and send a message to this number, 760492-6659,

258
00:21:22,190 --> 00:21:27,690
and let's see if we can go select a starter
Pokémon and battle our rival.

259
00:21:27,690 --> 00:21:32,300
If we can get past that, I'll be pretty stoked.

260
00:21:32,300 --> 00:21:42,350
So want to go up and down, want to get out
of mom's house, because we're a big kid now.

261
00:21:42,350 --> 00:21:49,230
All right, it's sagnews house, that's my house.

262
00:21:49,230 --> 00:21:51,580
We want to go up and to the right.

263
00:21:51,580 --> 00:21:56,090
All right, we want to go right.

264
00:21:56,090 --> 00:21:58,710
Let's do that.

265
00:21:58,710 --> 00:22:02,400
Isn't it great that I didn't let anyone press
start because we would just be standing still

266
00:22:02,400 --> 00:22:04,400
right now.

267
00:22:04,400 --> 00:22:07,940
Gotta get in the tall grass so Professor Oak
will see us, be like.

268
00:22:07,940 --> 00:22:17,720
All right, so you want to go right and up.

269
00:22:17,720 --> 00:22:26,200
Let's do it.

270
00:22:26,200 --> 00:22:27,200


271
00:22:27,200 --> 00:22:28,200
Right?

272
00:22:28,200 --> 00:22:29,200
I believe in you.

273
00:22:29,200 --> 00:22:33,110
I believe that this community can stick together
and we can defeat.

274
00:22:33,110 --> 00:22:34,110
Yes.

275
00:22:34,110 --> 00:22:35,110
OK.

276
00:22:35,110 --> 00:22:42,810
All right, Oak is looking out for us, now
let's just span A and B so we can get past

277
00:22:42,810 --> 00:22:48,860
this guy talking to us, this science guy,
Professor Oak the science guy.

278
00:22:48,860 --> 00:22:51,260
Cool we're on our way to his lab.

279
00:22:51,260 --> 00:22:57,770
Gonna get our first Pokémon, I'm excited
for our adventure, we don't even have to write

280
00:22:57,770 --> 00:23:00,070
up, the game scripts that for you.

281
00:23:00,070 --> 00:23:02,210
As you can see, I named my rival fool.

282
00:23:02,210 --> 00:23:08,530
Because it's customary to name your rival
will something not nice and I think he's kind

283
00:23:08,530 --> 00:23:10,210
of a fool.

284
00:23:10,210 --> 00:23:12,810
When I was young I was a serious Pokémon
trainer, cool.

285
00:23:12,810 --> 00:23:20,250
I'm going to span 3 so we don't accidentally
spark a conversation with him.

286
00:23:20,250 --> 00:23:30,250
All right, so now we want to go down and right
once we're done this.

287
00:23:30,250 --> 00:23:35,050
All right, let's go right.

288
00:23:35,050 --> 00:23:36,050
Let's do it.

289
00:23:36,050 --> 00:23:37,280
We got this.

290
00:23:37,280 --> 00:23:39,580
So we're going to go right.

291
00:23:39,580 --> 00:23:41,730
Oh, I believe in us.

292
00:23:41,730 --> 00:23:45,400
I believe in us.

293
00:23:45,400 --> 00:23:47,400


294
00:23:47,400 --> 00:23:52,720
I actually just copied right and I'm just
copying and pasting it now and sending it

295
00:23:52,720 --> 00:23:53,990
in a text message.

296
00:23:53,990 --> 00:23:57,070
Now we want to go up and press A. Which Pokémon
should we select?

297
00:23:57,070 --> 00:24:08,721
Well, at least we're 
going to be able to fight against charm it's

298
00:24:08,721 --> 00:24:10,970
probably better.

299
00:24:10,970 --> 00:24:15,460
Oh, A, AI, OK.

300
00:24:15,460 --> 00:24:26,310
J, P, -- or JZ OK, cool, really creative nickname,
extremely creative nickname and this fool

301
00:24:26,310 --> 00:24:36,320
is going to take charm ander, sow now we have
to battle him.

302
00:24:36,320 --> 00:24:37,850
And what's our strategy going to be for this
battle?

303
00:24:37,850 --> 00:24:40,890
Are we just going to repeatedly tackle?

304
00:24:40,890 --> 00:24:53,659
You want to use growl at all?

305
00:24:53,659 --> 00:25:04,170
>> Bulbasaur, yeah, I think Charmander has
tail whip.

306
00:25:04,170 --> 00:25:13,900
Oh, no, we hit growl.

307
00:25:13,900 --> 00:25:16,420
We're growling at each other.

308
00:25:16,420 --> 00:25:26,050
Oh, yeah, we're going to tackle, tackle him
now.

309
00:25:26,050 --> 00:25:27,750
Not a very strong tackle, probably.

310
00:25:27,750 --> 00:25:28,750
Oh, no.

311
00:25:28,750 --> 00:25:35,400
We're -- if we lose to this Charmander, what
does that say about the JavaScript community?

312
00:25:35,400 --> 00:25:40,600
Oh, he's scratching us.

313
00:25:40,600 --> 00:25:44,440
I think we can do this.

314
00:25:44,440 --> 00:25:51,951
I should have grabbed this possession and
then saved after that.

315
00:25:51,951 --> 00:25:53,650
But that would have been cheating.

316
00:25:53,650 --> 00:25:55,250
We don't need to do that.

317
00:25:55,250 --> 00:25:56,250
We can do this ourselves.

318
00:25:56,250 --> 00:25:57,880
As long as we spam A and get lucky.

319
00:25:57,880 --> 00:26:00,090
I think we're going to win.

320
00:26:00,090 --> 00:26:01,280
Uh-oh.

321
00:26:01,280 --> 00:26:05,500
We've got to press up, like, once.

322
00:26:05,500 --> 00:26:07,280
Oh, no.

323
00:26:07,280 --> 00:26:13,320
At least the Charmander is going to be really
weak.

324
00:26:13,320 --> 00:26:14,680
We're just growling at each other.

325
00:26:14,680 --> 00:26:20,210
This is like an intimidation match right here.

326
00:26:20,210 --> 00:26:21,950
I still have faith in us.

327
00:26:21,950 --> 00:26:25,640
I think we can -- all right, we hit tackle.

328
00:26:25,640 --> 00:26:27,480
We hit tackle.

329
00:26:27,480 --> 00:26:31,940
Oh, no, critical hit uh-oh.

330
00:26:31,940 --> 00:26:37,410
That ain't good.

331
00:26:37,410 --> 00:26:46,740
Uh-oh, I think we can do it, though, we're
at least making him weaker.

332
00:26:46,740 --> 00:26:49,620
All right, we're tackling again.

333
00:26:49,620 --> 00:26:57,650
Charmander is growling at us, getting weaker
as time goes by, but so is Charmander.

334
00:26:57,650 --> 00:27:00,740
Oh, no!

335
00:27:00,740 --> 00:27:03,990
We're doing one damage to each other.

336
00:27:03,990 --> 00:27:06,020
Growl can't make him any weaker.

337
00:27:06,020 --> 00:27:07,100
No.

338
00:27:07,100 --> 00:27:09,270
Oh, no.

339
00:27:09,270 --> 00:27:12,530
All right, nothing happened.

340
00:27:12,530 --> 00:27:13,890
All right.

341
00:27:13,890 --> 00:27:15,200
We got growl.

342
00:27:15,200 --> 00:27:19,670
If nobody ever presses up or down again, then
I think we got this.

343
00:27:19,670 --> 00:27:22,250
I think we can win.

344
00:27:22,250 --> 00:27:26,160
Oh, no!

345
00:27:26,160 --> 00:27:29,160
You know, I still believe in us.

346
00:27:29,160 --> 00:27:32,280
Oh, no!

347
00:27:32,280 --> 00:27:35,030
You know, if we get a critical hit, we can
make this happen.

348
00:27:35,030 --> 00:27:37,150
We can win.

349
00:27:37,150 --> 00:27:38,870
Oh!

350
00:27:38,870 --> 00:27:40,000
It's still possible.

351
00:27:40,000 --> 00:27:41,000
It's still possible!

352
00:27:41,000 --> 00:27:42,000
Oh, no!

353
00:27:42,000 --> 00:27:43,000
OK.

354
00:27:43,000 --> 00:27:44,000
All right.

355
00:27:44,000 --> 00:27:51,510
You know, I'm never -- I'm not going to give
up on us.

356
00:27:51,510 --> 00:27:56,690
I'm not going to give up.

357
00:27:56,690 --> 00:27:58,270
That is unfortunate that we missed.

358
00:27:58,270 --> 00:27:59,880
And he's still growling.

359
00:27:59,880 --> 00:28:02,970
OK, come on, critical hit.

360
00:28:02,970 --> 00:28:03,970
No.

361
00:28:03,970 --> 00:28:04,970
All right.

362
00:28:04,970 --> 00:28:05,970
No.

363
00:28:05,970 --> 00:28:09,840
Well, well, we lost -- I guess we're the fools
now.

364
00:28:09,840 --> 00:28:11,340
Oh, man.

365
00:28:11,340 --> 00:28:16,240
Well, whoever shouted Charmander should be
happy now, because at least you know Charmander

366
00:28:16,240 --> 00:28:17,720
is the best choice.

367
00:28:17,720 --> 00:28:23,640
And that's my favorite line, gramp, smell
you later.

368
00:28:23,640 --> 00:28:32,620
But I guess we lost that first battle, but
I have faith we can grow as Pokémon trainers,

369
00:28:32,620 --> 00:28:36,960
and learn, because you know, going to conferences
is all about learning and improving and stuff,

370
00:28:36,960 --> 00:28:41,920
right, so we're going to become better Pokémon
trainers yet, just you wait and see.

371
00:28:41,920 --> 00:28:45,410
With that said I think that's all I have.

372
00:28:45,410 --> 00:28:48,240
My name is Sam Agnew, I'm a developer evangelist
at Twilio.

373
00:28:48,240 --> 00:28:50,690
I'll be at the pool and the after party later.

374
00:28:50,690 --> 00:28:54,860
Have a good rest of JSConf.

375
00:28:54,860 --> 00:28:55,860
[applause]

