1
00:00:09,260 --> 00:00:13,110

thank you very much can hear me okay all

2
00:00:13,110 --> 00:00:16,139
right uh Wow

3
00:00:16,139 --> 00:00:17,580
this has been an amazing conference

4
00:00:17,580 --> 00:00:22,619
hasn't it so many beautiful slides I'm

5
00:00:22,619 --> 00:00:25,769
like I think my mind's been blown so

6
00:00:25,769 --> 00:00:27,769
many times today I can't even tell you

7
00:00:27,769 --> 00:00:30,029
so and I'm gonna get to show you some

8
00:00:30,029 --> 00:00:35,010
really amazing texts nothing quite as

9
00:00:35,010 --> 00:00:37,770
pretty as what we've seen coming up but

10
00:00:37,770 --> 00:00:39,719
hopefully you'll see the beauty in the

11
00:00:39,719 --> 00:00:43,620
structure I hope so yeah

12
00:00:43,620 --> 00:00:46,739
Who am I am Chris Epstein I'm one of the

13
00:00:46,739 --> 00:00:50,309
I'm the creator of compass I'm SAS core

14
00:00:50,309 --> 00:00:53,129
developer I'm an engineer at LinkedIn

15
00:00:53,129 --> 00:00:56,489
they recently hired me to help them make

16
00:00:56,489 --> 00:01:00,690
SAS better so thanks to them for all the

17
00:01:00,690 --> 00:01:06,299
great money and I'm a husband and a

18
00:01:06,299 --> 00:01:07,920
father that's my beautiful family there

19
00:01:07,920 --> 00:01:11,670
with me so this is an interactive slide

20
00:01:11,670 --> 00:01:13,890
deck and I know that we haven't been too

21
00:01:13,890 --> 00:01:16,770
talkative during presentations but if I

22
00:01:16,770 --> 00:01:18,650
say something and it's totally confusing

23
00:01:18,650 --> 00:01:21,720
please just like throw your hand up in

24
00:01:21,720 --> 00:01:24,000
the air and I'll try to clarify in line

25
00:01:24,000 --> 00:01:26,909
because otherwise we might get lost and

26
00:01:26,909 --> 00:01:28,970
I'm gonna to talk quite a bit about

27
00:01:28,970 --> 00:01:31,290
advanced stuff that's coming in SAS and

28
00:01:31,290 --> 00:01:33,420
it's not there's not introductory stuff

29
00:01:33,420 --> 00:01:35,790
so if you haven't done SAS before you

30
00:01:35,790 --> 00:01:37,939
might be lost I'm sorry

31
00:01:37,939 --> 00:01:40,530
so speaking of people who have worked

32
00:01:40,530 --> 00:01:42,150
with SAS can I just by a show of hands

33
00:01:42,150 --> 00:01:45,030
like if you've used a preprocessor at

34
00:01:45,030 --> 00:01:47,149
all just put your hands up

35
00:01:47,149 --> 00:01:51,210
great keep your hands up if you don't

36
00:01:51,210 --> 00:01:56,270
use SAS but but you use a preprocessor

37
00:01:56,270 --> 00:02:00,000
okay so are you the you're less than

38
00:02:00,000 --> 00:02:11,460
yeah all right I have something for you

39
00:02:11,470 --> 00:02:15,370
read that and get back to me so that's

40
00:02:15,370 --> 00:02:17,770
that's my new book me and a couple other

41
00:02:17,770 --> 00:02:20,500
guys wrote it together and it's all

42
00:02:20,500 --> 00:02:26,380
about fasten campus it speaks for itself

43
00:02:26,380 --> 00:02:32,350
so what's coming out in Fast 3 3 which

44
00:02:32,350 --> 00:02:36,220
we don't have dates that we deliver

45
00:02:36,220 --> 00:02:38,740
things on but I'm thinking in the next

46
00:02:38,740 --> 00:02:42,340
month or two there's a really awesome

47
00:02:42,340 --> 00:02:44,920
feature called source maps some new

48
00:02:44,920 --> 00:02:47,860
amazing string functions with a new data

49
00:02:47,860 --> 00:02:51,250
structure called a map we're getting a

50
00:02:51,250 --> 00:02:53,680
bunch of new meta capabilities for SAS

51
00:02:53,680 --> 00:02:56,680
script we're bringing the ampersand from

52
00:02:56,680 --> 00:02:58,959
The Selecter into SAS script I'll show

53
00:02:58,959 --> 00:03:01,209
you what that's all about and we're

54
00:03:01,209 --> 00:03:06,090
changing how variable scoping works so

55
00:03:06,090 --> 00:03:09,459
let's get into source Maps so the the

56
00:03:09,459 --> 00:03:10,720
problem if you've used a preprocessor

57
00:03:10,720 --> 00:03:12,550
which looks like many of you have now is

58
00:03:12,550 --> 00:03:14,650
when you went into debug it you're like

59
00:03:14,650 --> 00:03:16,390
where is it

60
00:03:16,390 --> 00:03:18,640
like and SAS had this feature where you

61
00:03:18,640 --> 00:03:20,019
could turn on line numbers and before

62
00:03:20,019 --> 00:03:21,550
each selector you'd be able to like find

63
00:03:21,550 --> 00:03:23,260
the line number of where the selector

64
00:03:23,260 --> 00:03:24,489
was and you could probably trace it back

65
00:03:24,489 --> 00:03:27,519
through there but after a while that

66
00:03:27,519 --> 00:03:29,830
gets a little tedious too and so the

67
00:03:29,830 --> 00:03:33,489
great people that Google have developed

68
00:03:33,489 --> 00:03:36,160
this proposed standard I guess for

69
00:03:36,160 --> 00:03:39,250
source maps that allows you to create a

70
00:03:39,250 --> 00:03:40,750
file that's generated by this

71
00:03:40,750 --> 00:03:43,840
preprocessor that tells the browser how

72
00:03:43,840 --> 00:03:47,110
to get from the generated source project

73
00:03:47,110 --> 00:03:48,610
that the browser's reading to the real

74
00:03:48,610 --> 00:03:52,620
source and then our great dev tools can

75
00:03:52,620 --> 00:03:55,600
show us the real get us to the real

76
00:03:55,600 --> 00:03:58,360
source location instead of keeping us in

77
00:03:58,360 --> 00:04:02,290
the generated content all right but it's

78
00:04:02,290 --> 00:04:03,940
not it's not so easy to set up so I'm

79
00:04:03,940 --> 00:04:05,320
gonna really quickly walk you guys

80
00:04:05,320 --> 00:04:08,470
through the steps here that are required

81
00:04:08,470 --> 00:04:10,650
first you have to install Chrome Canary

82
00:04:10,650 --> 00:04:13,900
which is Google's like advanced chrome

83
00:04:13,900 --> 00:04:17,410
version and then you need to go to the

84
00:04:17,410 --> 00:04:19,840
special URL Chrome colon slash slash

85
00:04:19,840 --> 00:04:21,340
Flags

86
00:04:21,340 --> 00:04:23,710
pound enable dev tools experiments and

87
00:04:23,710 --> 00:04:27,430
click that little enable thing right

88
00:04:27,430 --> 00:04:30,639
there and then you'll have experiments

89
00:04:30,639 --> 00:04:33,660
and then your browser will restart

90
00:04:33,660 --> 00:04:35,889
afterwards in your corner of your

91
00:04:35,889 --> 00:04:41,570
browser you gotta just click this little

92
00:04:41,580 --> 00:04:45,070
wheel that'll bring up a window you're

93
00:04:45,070 --> 00:04:47,530
gonna go to the experiments tab and turn

94
00:04:47,530 --> 00:04:52,480
on fast stylesheet debugging not done

95
00:04:52,480 --> 00:04:55,210
yet we have to install the new version

96
00:04:55,210 --> 00:04:58,060
assess so gem install sass with the dash

97
00:04:58,060 --> 00:04:59,710
dash pre option will bring in the latest

98
00:04:59,710 --> 00:05:02,290
version instead and then we're gonna

99
00:05:02,290 --> 00:05:05,169
compile with a new option called source

100
00:05:05,169 --> 00:05:08,200
map and afterwards you'll get two files

101
00:05:08,200 --> 00:05:11,380
per sass file one is a CSS file and one

102
00:05:11,380 --> 00:05:13,600
is a map file which is actually a JSON

103
00:05:13,600 --> 00:05:19,660
file that's the what's inside and this

104
00:05:19,660 --> 00:05:21,910
was a capability that was contributed to

105
00:05:21,910 --> 00:05:25,450
sass from the google chrome team which

106
00:05:25,450 --> 00:05:28,330
was really awesome for them to help us

107
00:05:28,330 --> 00:05:32,050
get that up and running quickly but

108
00:05:32,050 --> 00:05:33,940
you're not done yet so now there's this

109
00:05:33,940 --> 00:05:36,880
concept called a workspace and so you'll

110
00:05:36,880 --> 00:05:39,789
have to go to a workspace in the chrome

111
00:05:39,789 --> 00:05:42,880
dev tools click add folder and you're

112
00:05:42,880 --> 00:05:43,570
gonna what you're gonna do is you're

113
00:05:43,570 --> 00:05:46,800
gonna select your project folder and

114
00:05:46,800 --> 00:05:49,570
it'll say that the dev tools wants to

115
00:05:49,570 --> 00:05:53,560
access it and you'll say allow you're

116
00:05:53,560 --> 00:05:56,100
still not done

117
00:05:56,100 --> 00:05:58,980
because so that's what Google wants to

118
00:05:58,980 --> 00:06:00,420
what Chrome wants to do is basically

119
00:06:00,420 --> 00:06:06,090
associate an output file on disk to the

120
00:06:06,090 --> 00:06:07,560
output file that's being served to it

121
00:06:07,560 --> 00:06:10,740
from the web browser and then it'll kind

122
00:06:10,740 --> 00:06:13,230
of from that point once one file on disk

123
00:06:13,230 --> 00:06:15,630
has been found that map's to where it is

124
00:06:15,630 --> 00:06:17,760
on the browser then chrome will be able

125
00:06:17,760 --> 00:06:21,020
to be like AHA I know the structure and

126
00:06:21,020 --> 00:06:24,060
so you'll you'll just pick really go to

127
00:06:24,060 --> 00:06:27,090
you go to sources go to CSS and pick

128
00:06:27,090 --> 00:06:30,900
basically any CSS file and then say map

129
00:06:30,900 --> 00:06:36,150
to file system resource and from there

130
00:06:36,150 --> 00:06:37,470
it'll give you three options of things

131
00:06:37,470 --> 00:06:40,410
that it thinks are probably the right

132
00:06:40,410 --> 00:06:43,590
thing and you might be tempted to pick

133
00:06:43,590 --> 00:06:45,210
the s CSS file because that's what you

134
00:06:45,210 --> 00:06:47,660
want to map it to that would be wrong

135
00:06:47,660 --> 00:06:49,890
instead you're gonna pick the CSS file

136
00:06:49,890 --> 00:06:51,690
because you want to associate the served

137
00:06:51,690 --> 00:06:57,570
file to the actual file on disk now

138
00:06:57,570 --> 00:07:01,500
you're ready so I had a small problem

139
00:07:01,500 --> 00:07:04,560
with screen resolution so have a big gap

140
00:07:04,560 --> 00:07:08,580
here I'm sorry but basically what you're

141
00:07:08,580 --> 00:07:14,190
going to get now is a source map and so

142
00:07:14,190 --> 00:07:15,720
what it'll output of a source map looks

143
00:07:15,720 --> 00:07:16,920
kind of like this there's a bunch of

144
00:07:16,920 --> 00:07:20,040
gobbledygook under this mappings heading

145
00:07:20,040 --> 00:07:22,740
and this is a small stylesheet so it's

146
00:07:22,740 --> 00:07:23,940
pretty small but this gets pretty crazy

147
00:07:23,940 --> 00:07:33,380
pretty fast interrupts

148
00:07:33,390 --> 00:07:36,570
be possible to use a 8 attribute on the

149
00:07:36,570 --> 00:07:39,390
CSS file which links quotes with the

150
00:07:39,390 --> 00:07:41,010
saucepot rather than go through all of

151
00:07:41,010 --> 00:07:44,430
this because we're not looking for just

152
00:07:44,430 --> 00:07:47,550
a file level mapping sorry the question

153
00:07:47,550 --> 00:07:51,180
was why don't we just put a comment in

154
00:07:51,180 --> 00:07:52,920
the file and say where to go to for the

155
00:07:52,920 --> 00:07:56,010
file that it came from and that would be

156
00:07:56,010 --> 00:07:57,960
great but it's not enough information

157
00:07:57,960 --> 00:08:00,210
it's not enough to know that one

158
00:08:00,210 --> 00:08:03,540
selector is here and there what files

159
00:08:03,540 --> 00:08:05,160
are we actually want to know what a

160
00:08:05,160 --> 00:08:08,010
character by character basis where that

161
00:08:08,010 --> 00:08:09,120
came from and I'm going to show you how

162
00:08:09,120 --> 00:08:14,130
that all works in a second and so you

163
00:08:14,130 --> 00:08:16,340
get this cool stuff so let's just like

164
00:08:16,340 --> 00:08:20,310
inspect an element here and you'll see

165
00:08:20,310 --> 00:08:26,240
that right here in my inspector this

166
00:08:26,240 --> 00:08:31,980
this slide that I've selected comes from

167
00:08:31,980 --> 00:08:35,010
this fade s CSS file and if I click on

168
00:08:35,010 --> 00:08:38,190
that it takes me right into the s CSS

169
00:08:38,190 --> 00:08:40,620
file and highlights the line that it was

170
00:08:40,620 --> 00:08:44,130
on which is pretty awesome right there I

171
00:08:44,130 --> 00:08:47,790
can just like see it but it's actually

172
00:08:47,790 --> 00:08:50,580
better than that so let me show you

173
00:08:50,580 --> 00:08:51,960
something slightly different amount

174
00:08:51,960 --> 00:08:54,300
select something in my generated content

175
00:08:54,300 --> 00:09:00,210
here alright so the background color

176
00:09:00,210 --> 00:09:03,630
here is the start green and let's just

177
00:09:03,630 --> 00:09:04,950
say that we want to change the

178
00:09:04,950 --> 00:09:08,400
background color to red so now we can

179
00:09:08,400 --> 00:09:11,100
pick our source file and it takes us

180
00:09:11,100 --> 00:09:13,020
over here we like okay this is our

181
00:09:13,020 --> 00:09:15,270
background color it actually gets better

182
00:09:15,270 --> 00:09:16,560
than that let me show you this this is

183
00:09:16,560 --> 00:09:20,190
awesome if I press the command button in

184
00:09:20,190 --> 00:09:22,070
Mac I don't know what it is in Windows

185
00:09:22,070 --> 00:09:24,560
then things start to highlight and

186
00:09:24,560 --> 00:09:27,630
actually now I can go to this directly

187
00:09:27,630 --> 00:09:31,560
to where like the color is and so now it

188
00:09:31,560 --> 00:09:34,290
takes me to actually just got generated

189
00:09:34,290 --> 00:09:36,360
at this color right here which I can say

190
00:09:36,360 --> 00:09:38,580
oh that was passed to this mixin which

191
00:09:38,580 --> 00:09:41,430
was passed this BG color okay so this is

192
00:09:41,430 --> 00:09:42,990
the color so actually I want this to be

193
00:09:42,990 --> 00:09:46,640
red and now I'm not gonna

194
00:09:46,640 --> 00:09:50,740
I'm gonna actually save this locally in

195
00:09:50,740 --> 00:10:07,230
Chrome and I need to run a watcher see

196
00:10:07,240 --> 00:10:31,440
where does it no not that one

197
00:10:31,450 --> 00:10:38,130
static where does it go oh my apologies

198
00:10:38,130 --> 00:10:40,180
I'm gonna just skip this part but

199
00:10:40,180 --> 00:10:41,590
basically when you save if you're

200
00:10:41,590 --> 00:10:44,110
running a washer it'll compile it on the

201
00:10:44,110 --> 00:10:46,660
fly and then it'll automatically reload

202
00:10:46,660 --> 00:10:49,270
this in your browser and if I had more

203
00:10:49,270 --> 00:10:50,380
than 30 minutes with this talk I

204
00:10:50,380 --> 00:10:52,150
wouldn't finish debugging this but I'm

205
00:10:52,150 --> 00:10:55,900
gonna move on and so then what we see is

206
00:10:55,900 --> 00:10:58,510
in real time while editing in our

207
00:10:58,510 --> 00:11:01,570
stylesheet in our browser styles are

208
00:11:01,570 --> 00:11:03,490
updating just like if you've used live

209
00:11:03,490 --> 00:11:07,420
reload just like that and it's just a

210
00:11:07,420 --> 00:11:09,850
super smooth workflow and this is this

211
00:11:09,850 --> 00:11:11,200
is the combination of the workspace

212
00:11:11,200 --> 00:11:15,190
concept plus the source mappings and it

213
00:11:15,190 --> 00:11:17,530
all just connects end to end and it's a

214
00:11:17,530 --> 00:11:22,780
really nice way to develop so that is

215
00:11:22,780 --> 00:11:31,000
source Maps so we added a bunch of new

216
00:11:31,000 --> 00:11:33,850
string manipulation functions so I just

217
00:11:33,850 --> 00:11:35,170
wanted to walk you guys through some of

218
00:11:35,170 --> 00:11:36,640
the cool things you can do with strings

219
00:11:36,640 --> 00:11:40,810
now so for instance you can check if a

220
00:11:40,810 --> 00:11:43,600
string is quoted some strings with

221
00:11:43,600 --> 00:11:48,070
quotes will return true you can ask for

222
00:11:48,070 --> 00:11:50,850
the length of a string with sure length

223
00:11:50,850 --> 00:11:55,090
so that's a 27 characters long you can

224
00:11:55,090 --> 00:11:57,190
look for a substring within a string now

225
00:11:57,190 --> 00:12:01,210
using the string index function so we

226
00:12:01,210 --> 00:12:03,370
found that at character 13 and then you

227
00:12:03,370 --> 00:12:04,870
can start to compose those so that you

228
00:12:04,870 --> 00:12:08,350
can do things like inserting at just the

229
00:12:08,350 --> 00:12:13,240
location you're looking for so here what

230
00:12:13,240 --> 00:12:16,570
we're gonna do is insert Chris into the

231
00:12:16,570 --> 00:12:18,730
middle of of our string just before the

232
00:12:18,730 --> 00:12:24,070
word dole door so there we go that comes

233
00:12:24,070 --> 00:12:27,430
out there and you can also do things

234
00:12:27,430 --> 00:12:32,410
like pick out the first word so we're

235
00:12:32,410 --> 00:12:35,710
gonna slice between the beginning of the

236
00:12:35,710 --> 00:12:37,750
string slice function is just to extract

237
00:12:37,750 --> 00:12:41,110
a substring and then we'll look for the

238
00:12:41,110 --> 00:12:44,570
first space and that'll be the end index

239
00:12:44,570 --> 00:12:45,860
we'll have to remove one because we

240
00:12:45,860 --> 00:12:46,870
don't want to actually include that

241
00:12:46,870 --> 00:12:50,180
space and so we get the first word in

242
00:12:50,180 --> 00:12:53,630
that string is lorem we provide

243
00:12:53,630 --> 00:12:55,100
uppercase functions and lowercase

244
00:12:55,100 --> 00:12:58,670
functions to manipulate the strings in

245
00:12:58,670 --> 00:13:01,310
that way as well so standard stuff you'd

246
00:13:01,310 --> 00:13:03,740
expect from any programming language we

247
00:13:03,740 --> 00:13:05,330
got to it by 3/3 I think we're doing

248
00:13:05,330 --> 00:13:12,740
okay that was joke the other thing in

249
00:13:12,740 --> 00:13:16,430
CSS is you have identifier x' but in

250
00:13:16,430 --> 00:13:17,690
sass they're kind they're kind of like a

251
00:13:17,690 --> 00:13:19,220
string so all of the same string

252
00:13:19,220 --> 00:13:21,620
functions are gonna work on them except

253
00:13:21,620 --> 00:13:23,570
it won't return quoted true for

254
00:13:23,570 --> 00:13:26,570
identifiers it'll return false and you

255
00:13:26,570 --> 00:13:28,400
can uppercase lowercase you can do

256
00:13:28,400 --> 00:13:30,530
inserts so here we're inserting the word

257
00:13:30,530 --> 00:13:35,210
new and so the question might be why do

258
00:13:35,210 --> 00:13:36,710
I need all this stuff what am I gonna do

259
00:13:36,710 --> 00:13:40,130
with it and I think probably not for not

260
00:13:40,130 --> 00:13:42,770
your average style sheet you're gonna

261
00:13:42,770 --> 00:13:44,300
need these sorts of functions but if

262
00:13:44,300 --> 00:13:45,860
you're building a framework that has

263
00:13:45,860 --> 00:13:50,290
conventions or or and like it wants to

264
00:13:50,290 --> 00:13:53,270
append things at the end or in the

265
00:13:53,270 --> 00:13:54,940
middle of stuff or maybe you want to

266
00:13:54,940 --> 00:13:58,670
convert from dash to camelcase then you

267
00:13:58,670 --> 00:14:00,980
could write that sort of function so I

268
00:14:00,980 --> 00:14:05,390
did so here I wrote a capitalized

269
00:14:05,390 --> 00:14:08,440
function using these building blocks and

270
00:14:08,440 --> 00:14:11,030
what it does is it takes in a string and

271
00:14:11,030 --> 00:14:13,040
it converts the first character to be

272
00:14:13,040 --> 00:14:17,150
uppercase that's annoying so here I'm

273
00:14:17,150 --> 00:14:18,770
capitalizing the word something and it

274
00:14:18,770 --> 00:14:23,390
comes out capitalized the other thing

275
00:14:23,390 --> 00:14:26,180
that I wrote using that is this camel

276
00:14:26,180 --> 00:14:27,680
eyes function so we can take in

277
00:14:27,680 --> 00:14:31,610
something that was dashed and produce

278
00:14:31,610 --> 00:14:35,840
something that is camel cased and so if

279
00:14:35,840 --> 00:14:38,810
maybe your web framework requires you to

280
00:14:38,810 --> 00:14:41,900
use camel case classes but in writing

281
00:14:41,900 --> 00:14:43,670
your CSS you find dashes to be more

282
00:14:43,670 --> 00:14:44,840
aesthetic than you could do something

283
00:14:44,840 --> 00:14:48,339
like this to keep things seamless

284
00:14:48,339 --> 00:14:53,949
and aesthetically pleasing so the the

285
00:14:53,949 --> 00:14:59,949
code for this is not a trivial but it's

286
00:14:59,949 --> 00:15:01,689
here and it works just fine

287
00:15:01,689 --> 00:15:03,550
and I'm not going to walk you through it

288
00:15:03,550 --> 00:15:06,519
but I will I will publish these slides

289
00:15:06,519 --> 00:15:11,379
to a Heroku or some other place that I

290
00:15:11,379 --> 00:15:13,149
can get it running soon requires the

291
00:15:13,149 --> 00:15:14,470
custom build of sass and a bunch of

292
00:15:14,470 --> 00:15:15,939
other things so it's kind of complicated

293
00:15:15,939 --> 00:15:19,509
and they didn't get to it yet but it's a

294
00:15:19,509 --> 00:15:21,850
it's all working very nicely and it

295
00:15:21,850 --> 00:15:23,170
shows how you can use these string

296
00:15:23,170 --> 00:15:25,749
functions to build more powerful things

297
00:15:25,749 --> 00:15:29,199
that can meet your own needs and if we

298
00:15:29,199 --> 00:15:30,759
find that there are really common things

299
00:15:30,759 --> 00:15:32,499
that people are building over and over

300
00:15:32,499 --> 00:15:34,180
again we'll try to move those into the

301
00:15:34,180 --> 00:15:35,649
core we're not sure we want to keep

302
00:15:35,649 --> 00:15:38,499
things kind of small until we see the

303
00:15:38,499 --> 00:15:43,920
demand questions about string functions

304
00:15:43,920 --> 00:15:47,800
cool alright so strings are pretty

305
00:15:47,800 --> 00:15:50,579
pretty boring kind of used to that

306
00:15:50,579 --> 00:15:52,720
another feature that you're probably

307
00:15:52,720 --> 00:15:55,240
used to in most languages is a map or an

308
00:15:55,240 --> 00:15:59,620
associative array and CSS being about

309
00:15:59,620 --> 00:16:02,230
associating things to other things so

310
00:16:02,230 --> 00:16:05,259
rules to selectors or values to

311
00:16:05,259 --> 00:16:07,209
properties it makes sense that we would

312
00:16:07,209 --> 00:16:08,800
need to have some sort of Association

313
00:16:08,800 --> 00:16:11,980
like structure and so we've decided to

314
00:16:11,980 --> 00:16:16,540
add one and so here we can see a basic

315
00:16:16,540 --> 00:16:20,230
map the syntax is basically you have to

316
00:16:20,230 --> 00:16:23,319
have parentheses and then it's comma

317
00:16:23,319 --> 00:16:25,360
separated pairs that are separated by a

318
00:16:25,360 --> 00:16:29,439
colon the key can be anything it doesn't

319
00:16:29,439 --> 00:16:31,360
have to be a string here like you could

320
00:16:31,360 --> 00:16:37,569
use two pics can be your value or it can

321
00:16:37,569 --> 00:16:46,569
be a color etc from there you can now

322
00:16:46,569 --> 00:16:49,990
have a map and you can use that map to

323
00:16:49,990 --> 00:16:52,269
store information you can pass that

324
00:16:52,269 --> 00:16:55,300
around and so here's an example of me

325
00:16:55,300 --> 00:16:57,610
building like a theme defining some

326
00:16:57,610 --> 00:16:59,799
basic structures of that theme and then

327
00:16:59,799 --> 00:17:01,270
if I want to in

328
00:17:01,270 --> 00:17:02,620
hear it from that theme and make a new

329
00:17:02,620 --> 00:17:05,170
better theme I can use the map merge

330
00:17:05,170 --> 00:17:10,480
function to add more properties to the

331
00:17:10,480 --> 00:17:14,020
base theme and then I can basically

332
00:17:14,020 --> 00:17:16,950
access the data from inside the map and

333
00:17:16,950 --> 00:17:23,380
go through it so here I'm able to read

334
00:17:23,380 --> 00:17:24,940
out the keys so you can see they come

335
00:17:24,940 --> 00:17:27,610
out comma separated I can get out the

336
00:17:27,610 --> 00:17:31,750
values I can use the map get function to

337
00:17:31,750 --> 00:17:33,580
just retrieve a single key from there

338
00:17:33,580 --> 00:17:35,380
that the value associated with a certain

339
00:17:35,380 --> 00:17:37,570
key if it's not there you just get the

340
00:17:37,570 --> 00:17:40,030
word you just get null have you guys

341
00:17:40,030 --> 00:17:42,760
seen I think what people don't know

342
00:17:42,760 --> 00:17:45,130
about know if you don't have null if you

343
00:17:45,130 --> 00:17:46,870
don't have it you get null and then SAS

344
00:17:46,870 --> 00:17:48,100
when it gets when the property gets

345
00:17:48,100 --> 00:17:49,660
assigned then no value just drops that

346
00:17:49,660 --> 00:17:51,130
declaration which is actually pretty

347
00:17:51,130 --> 00:17:53,890
cool so that's why this background color

348
00:17:53,890 --> 00:18:04,780
is just disappearing values that contain

349
00:18:04,780 --> 00:18:08,860
lists sure the because you're worried

350
00:18:08,860 --> 00:18:11,890
about the comma confusing it so what you

351
00:18:11,890 --> 00:18:15,030
do is just wrap that in parentheses and

352
00:18:15,030 --> 00:18:17,740
and it'll be fine so the question was

353
00:18:17,740 --> 00:18:21,010
basically if it the value was font Comic

354
00:18:21,010 --> 00:18:26,920
Sans you know is that fee no now it's

355
00:18:26,920 --> 00:18:29,050
kind of confused so what you would do is

356
00:18:29,050 --> 00:18:32,380
just throw in some extra parentheses 2d

357
00:18:32,380 --> 00:18:36,970
confuse SAS all right

358
00:18:36,970 --> 00:18:41,080
these maps also work with iteration so

359
00:18:41,080 --> 00:18:42,910
if you wanted to just see everything

360
00:18:42,910 --> 00:18:47,380
that's there you could do at each key

361
00:18:47,380 --> 00:19:02,170
comma value in theme

362
00:19:02,180 --> 00:19:11,310
and then we would see

363
00:19:11,320 --> 00:19:20,830
nothing I know I there we go so here you

364
00:19:20,830 --> 00:19:22,420
can see if you just wanted to like print

365
00:19:22,420 --> 00:19:23,950
out everything and and so you could

366
00:19:23,950 --> 00:19:25,420
write a mixin that basically now

367
00:19:25,420 --> 00:19:29,620
converts your map into a rule set so

368
00:19:29,620 --> 00:19:30,880
there's some really interesting things

369
00:19:30,880 --> 00:19:34,450
that you can do now again this is a

370
00:19:34,450 --> 00:19:35,920
feature I think that the frameworks are

371
00:19:35,920 --> 00:19:37,300
going to find more useful but we get a

372
00:19:37,300 --> 00:19:38,800
lot of people asking us questions about

373
00:19:38,800 --> 00:19:41,110
like they want to take a variable and

374
00:19:41,110 --> 00:19:44,400
then interpolate it so they'll say like

375
00:19:44,400 --> 00:19:49,960
can I just do like theme so they have

376
00:19:49,960 --> 00:19:55,240
their theme name somewhere and then then

377
00:19:55,240 --> 00:20:01,420
they have something like and they'll

378
00:20:01,420 --> 00:20:07,240
want to do this to get to get the value

379
00:20:07,240 --> 00:20:09,010
like it and create an association that

380
00:20:09,010 --> 00:20:11,920
way and we just felt this was ugly and

381
00:20:11,920 --> 00:20:15,040
unreadable and a little confusing and so

382
00:20:15,040 --> 00:20:17,050
maps are basically our answer to the

383
00:20:17,050 --> 00:20:27,620
request for variable interpolation

384
00:20:27,630 --> 00:20:30,130
let's get that example for right now any

385
00:20:30,130 --> 00:20:35,290
more questions about maps all right

386
00:20:35,290 --> 00:20:41,029
moving on

387
00:20:41,039 --> 00:21:01,880
yes

388
00:21:01,890 --> 00:21:06,360
so here the map has key function returns

389
00:21:06,360 --> 00:21:09,049
false because nope doesn't exist but

390
00:21:09,049 --> 00:21:14,900
basecolor does so now it returns true

391
00:21:14,900 --> 00:21:17,880
and that's pretty useful too I think I

392
00:21:17,880 --> 00:21:25,260
use that actually no later example is

393
00:21:25,260 --> 00:21:27,390
there limits to how deep the map merging

394
00:21:27,390 --> 00:21:29,309
can go so basically every time you merge

395
00:21:29,309 --> 00:21:33,179
a map you get a new map so in in fast

396
00:21:33,179 --> 00:21:35,610
every data type is every piece of data

397
00:21:35,610 --> 00:21:37,169
is immutable so we always just make a

398
00:21:37,169 --> 00:21:39,660
copy and give you a copy back so there's

399
00:21:39,660 --> 00:21:41,280
no limit to how many merges but if you

400
00:21:41,280 --> 00:21:43,860
did a lot you're gonna probably make a

401
00:21:43,860 --> 00:21:46,500
lot of garbage along the way so some

402
00:21:46,500 --> 00:21:48,690
performance aspect to think about you

403
00:21:48,690 --> 00:21:50,520
can embed Maps within other maps as well

404
00:21:50,520 --> 00:21:54,000
like nested as a value and you just

405
00:21:54,000 --> 00:21:56,070
would just put more parentheses and just

406
00:21:56,070 --> 00:22:04,310
repeat the next map there all right

407
00:22:04,320 --> 00:22:06,780
so meta scripting again another feature

408
00:22:06,780 --> 00:22:08,790
that the framework developers have been

409
00:22:08,790 --> 00:22:11,040
asking for over and over again probably

410
00:22:11,040 --> 00:22:12,299
you're not gonna need them in your style

411
00:22:12,299 --> 00:22:15,330
sheets but the goal is so if we give

412
00:22:15,330 --> 00:22:17,940
great tools to the framework makers the

413
00:22:17,940 --> 00:22:19,620
framework makers give you amazing tools

414
00:22:19,620 --> 00:22:23,700
that make your life even better so

415
00:22:23,700 --> 00:22:26,730
here's the the call function so if

416
00:22:26,730 --> 00:22:28,169
there's a function defined either you've

417
00:22:28,169 --> 00:22:30,120
defined it or Sasa's defined it or even

418
00:22:30,120 --> 00:22:33,270
CSS is defined it you can pass that

419
00:22:33,270 --> 00:22:35,190
function name to call and it will get

420
00:22:35,190 --> 00:22:40,410
invoked and so by this we can now say

421
00:22:40,410 --> 00:22:44,280
hey like what is the function like user

422
00:22:44,280 --> 00:22:45,870
of my framework what is the function

423
00:22:45,870 --> 00:22:48,570
that you need that's gonna tell me how

424
00:22:48,570 --> 00:22:51,059
to compute colors safer for theming and

425
00:22:51,059 --> 00:22:56,400
you give it that that the the user space

426
00:22:56,400 --> 00:22:58,380
code can pass the framework the the name

427
00:22:58,380 --> 00:23:00,030
of the function and it can call it for

428
00:23:00,030 --> 00:23:01,740
you whenever it needs to know that

429
00:23:01,740 --> 00:23:03,480
information so we can do a lot of

430
00:23:03,480 --> 00:23:06,240
inversion of control now and that's

431
00:23:06,240 --> 00:23:11,880
super handy so here's an example that I

432
00:23:11,880 --> 00:23:16,920
made this kind of doing that

433
00:23:16,930 --> 00:23:20,450
so basically this this theme is hoping

434
00:23:20,450 --> 00:23:22,190
for a for a function that tells it how

435
00:23:22,190 --> 00:23:27,080
to compute colors and we're able to pass

436
00:23:27,080 --> 00:23:29,330
in the background function is called my

437
00:23:29,330 --> 00:23:33,290
theme background and I've defined it

438
00:23:33,290 --> 00:23:35,630
right here and all it does is just

439
00:23:35,630 --> 00:23:40,370
lighten the color a little bit and then

440
00:23:40,370 --> 00:23:41,690
the theme when it's doing all of its

441
00:23:41,690 --> 00:23:43,940
hard work to set things up ends up

442
00:23:43,940 --> 00:23:45,920
calling that function for us and then we

443
00:23:45,920 --> 00:23:49,310
get a lighter color of red so basically

444
00:23:49,310 --> 00:23:50,690
it took the base color here and

445
00:23:50,690 --> 00:23:52,270
lightened it for us if it had been blue

446
00:23:52,270 --> 00:23:57,500
it'd get different output so it should

447
00:23:57,500 --> 00:23:58,670
be some neat stuff that comes our way

448
00:23:58,670 --> 00:24:01,760
from from this the other meta stuff that

449
00:24:01,760 --> 00:24:04,280
we are added is the ability to check

450
00:24:04,280 --> 00:24:06,710
existence of various things within your

451
00:24:06,710 --> 00:24:10,460
stylesheet so for instance we can now

452
00:24:10,460 --> 00:24:18,140
check if a function exists so ask if

453
00:24:18,140 --> 00:24:22,550
some function named in begin exists so

454
00:24:22,550 --> 00:24:24,650
that will return true here

455
00:24:24,650 --> 00:24:26,480
lightin is built in by sass that's gonna

456
00:24:26,480 --> 00:24:29,690
return true we can ask if a mixin exists

457
00:24:29,690 --> 00:24:32,240
and because it was defined here we will

458
00:24:32,240 --> 00:24:34,340
get the true from there we can check

459
00:24:34,340 --> 00:24:38,780
about global variables and if you've

460
00:24:38,780 --> 00:24:40,520
defined a local than you then you can

461
00:24:40,520 --> 00:24:42,260
just check if the normal variable exists

462
00:24:42,260 --> 00:24:45,620
so there's a bunch of of stuff that will

463
00:24:45,620 --> 00:24:49,460
allow inspection of kind of the context

464
00:24:49,460 --> 00:24:52,340
and avoid making mistakes and where this

465
00:24:52,340 --> 00:24:55,550
gets really handy is in upgrading

466
00:24:55,550 --> 00:24:57,460
frameworks from version to version

467
00:24:57,460 --> 00:25:03,830
so somebody adds a new sweet feature but

468
00:25:03,830 --> 00:25:05,390
they want to support an older version of

469
00:25:05,390 --> 00:25:07,280
the same library and so now what they

470
00:25:07,280 --> 00:25:08,570
can do is kind of figure out what's

471
00:25:08,570 --> 00:25:10,460
going on by saying does that does that

472
00:25:10,460 --> 00:25:12,200
mix it even exists and if not I'm gonna

473
00:25:12,200 --> 00:25:14,840
do something different here let's

474
00:25:14,840 --> 00:25:20,630
question

475
00:25:20,640 --> 00:25:22,750
right so these will just return true or

476
00:25:22,750 --> 00:25:25,060
false but then you can combine these

477
00:25:25,060 --> 00:25:32,380
with an if statement if you want to like

478
00:25:32,380 --> 00:25:34,060
do something on the other side so

479
00:25:34,060 --> 00:25:35,350
there's if you guys don't know there's

480
00:25:35,350 --> 00:25:36,610
two kinds of if statements in SAS

481
00:25:36,610 --> 00:25:39,370
there's a block level if that's at if

482
00:25:39,370 --> 00:25:47,030
there's also an inline level if which

483
00:25:47,040 --> 00:25:51,160
maybe that's on the next page no I was a

484
00:25:51,160 --> 00:25:52,540
show to you real quick so it used to be

485
00:25:52,540 --> 00:25:54,660
in SAS that if you wrote and if an if

486
00:25:54,660 --> 00:25:58,480
function you would get an error if one

487
00:25:58,480 --> 00:26:01,740
of the conditions was was basically

488
00:26:01,740 --> 00:26:04,930
invalid but oftentimes you wanted to

489
00:26:04,930 --> 00:26:06,400
branch on the condition because it would

490
00:26:06,400 --> 00:26:08,020
have been invalid if you just but don't

491
00:26:08,020 --> 00:26:10,660
evaluate that and that was the case for

492
00:26:10,660 --> 00:26:12,460
the block level if statement but for the

493
00:26:12,460 --> 00:26:15,250
function level if statement that wasn't

494
00:26:15,250 --> 00:26:17,950
true so we fixed that so we can do this

495
00:26:17,950 --> 00:26:27,239
like

496
00:26:27,249 --> 00:26:30,499
so if true and then the true value will

497
00:26:30,499 --> 00:26:34,730
be green and the false value will be ten

498
00:26:34,730 --> 00:26:39,649
divided by zero so we get green but if

499
00:26:39,649 --> 00:26:43,549
we change this to false it will assess

500
00:26:43,549 --> 00:26:55,999
you're so smart know what's something

501
00:26:55,999 --> 00:26:58,330
else that's invalid let's do divided by

502
00:26:58,330 --> 00:27:01,789
nothing that exists all right so that

503
00:27:01,789 --> 00:27:05,149
this this variable doesn't exist but if

504
00:27:05,149 --> 00:27:07,309
we change this to true we get something

505
00:27:07,309 --> 00:27:08,779
that works because we didn't even

506
00:27:08,779 --> 00:27:11,240
evaluate the branch condition it's what

507
00:27:11,240 --> 00:27:12,679
you'd expect from an if statement we're

508
00:27:12,679 --> 00:27:18,169
getting there all right so that's meta

509
00:27:18,169 --> 00:27:21,649
scripting now the feature that I have

510
00:27:21,649 --> 00:27:26,509
been dying for for so long and this is

511
00:27:26,509 --> 00:27:28,610
one that you guys are gonna really find

512
00:27:28,610 --> 00:27:30,679
a lot of value and I think and this the

513
00:27:30,679 --> 00:27:34,460
ability to move the parent selector into

514
00:27:34,460 --> 00:27:41,119
SAS script so basically the idea is you

515
00:27:41,119 --> 00:27:43,190
like you've been able to use ampersand

516
00:27:43,190 --> 00:27:50,389
inside selectors you know that works

517
00:27:50,389 --> 00:27:56,210
fine or you could do whatever or if it's

518
00:27:56,210 --> 00:28:00,769
a class etc and and so that works great

519
00:28:00,769 --> 00:28:04,159
but the second you need to kind of do

520
00:28:04,159 --> 00:28:05,360
some manipulation or you wanna do

521
00:28:05,360 --> 00:28:06,950
something fancy all of a sudden you

522
00:28:06,950 --> 00:28:09,259
start to see the limitations of this as

523
00:28:09,259 --> 00:28:13,220
being a proper selector abstraction and

524
00:28:13,220 --> 00:28:17,629
not something you can fiddle with and in

525
00:28:17,629 --> 00:28:19,580
particular the way people really wanted

526
00:28:19,580 --> 00:28:22,669
to do this was by doing names doing like

527
00:28:22,669 --> 00:28:26,539
modules like BEM style or smack style or

528
00:28:26,539 --> 00:28:29,539
oo CSS style of modules and so this is

529
00:28:29,539 --> 00:28:30,980
an example of how you will define a

530
00:28:30,980 --> 00:28:34,399
module here so this is just my module

531
00:28:34,399 --> 00:28:36,320
what this really appears to be in sass

532
00:28:36,320 --> 00:28:38,480
is actually an element name there's no

533
00:28:38,480 --> 00:28:41,290
such element

534
00:28:41,300 --> 00:28:43,940
and so this gets passed in and we're

535
00:28:43,940 --> 00:28:45,740
using interpolation to generate a

536
00:28:45,740 --> 00:28:49,280
selector and and so the output comes out

537
00:28:49,280 --> 00:28:55,730
very nicely with the kind of more Oh CSS

538
00:28:55,730 --> 00:28:59,690
friendly style class names that are

539
00:28:59,690 --> 00:29:01,250
named spaced instead of adding more

540
00:29:01,250 --> 00:29:05,120
specificity through context where

541
00:29:05,120 --> 00:29:12,750
sniffle

542
00:29:12,760 --> 00:29:16,990
so that's obviously really huge but and

543
00:29:16,990 --> 00:29:19,580
so like people wanted the ability to

544
00:29:19,580 --> 00:29:23,030
basically just to do this but we had a

545
00:29:23,030 --> 00:29:24,800
really specific reason of to do that

546
00:29:24,800 --> 00:29:27,020
which is it what it allows you to make

547
00:29:27,020 --> 00:29:29,330
invalid selectors and we really wanted

548
00:29:29,330 --> 00:29:31,550
to have a foolproof way of using the

549
00:29:31,550 --> 00:29:34,430
ampersand an interpolation is basically

550
00:29:34,430 --> 00:29:35,870
you saying hey sass don't worry I got

551
00:29:35,870 --> 00:29:40,430
this I know what I'm doing from here we

552
00:29:40,430 --> 00:29:42,890
can go and do more crazy things and we

553
00:29:42,890 --> 00:29:45,100
love to find a solution to a fairly

554
00:29:45,100 --> 00:29:47,870
simple problem that then pays off in

555
00:29:47,870 --> 00:29:50,210
these other ways to do things that are

556
00:29:50,210 --> 00:29:56,410
even more crazy and mind-blowing so I

557
00:29:56,410 --> 00:30:04,240
made a little Nixon called inject parent

558
00:30:04,240 --> 00:30:07,730
and so what this mixin is going to do is

559
00:30:07,730 --> 00:30:10,370
it's gonna cuz ampersand only works you

560
00:30:10,370 --> 00:30:11,720
can like add something to the start of

561
00:30:11,720 --> 00:30:12,890
your selector you can add something to

562
00:30:12,890 --> 00:30:14,960
the end but you're kind of that's what

563
00:30:14,960 --> 00:30:17,000
you got so now we want to be able to say

564
00:30:17,000 --> 00:30:20,060
go up one selector component and insert

565
00:30:20,060 --> 00:30:23,090
something right there and so now we can

566
00:30:23,090 --> 00:30:25,910
do that so inject parent is a mixin that

567
00:30:25,910 --> 00:30:27,920
uses the content directive to place its

568
00:30:27,920 --> 00:30:33,920
content and basically allows us to go in

569
00:30:33,920 --> 00:30:35,870
using list manipulation functions and

570
00:30:35,870 --> 00:30:37,910
things like this so the selector gets

571
00:30:37,910 --> 00:30:39,560
returned to you as a comma delimited

572
00:30:39,560 --> 00:30:45,050
list of space separated of lists and the

573
00:30:45,050 --> 00:30:46,670
components in the space separated lists

574
00:30:46,670 --> 00:30:48,980
are strings that are unquoted that are

575
00:30:48,980 --> 00:30:51,080
basically your class names or if they're

576
00:30:51,080 --> 00:30:53,300
if you have like other selector

577
00:30:53,300 --> 00:30:55,010
combinators they'll be they'll be there

578
00:30:55,010 --> 00:30:58,790
too as their own component and so we're

579
00:30:58,790 --> 00:31:02,450
gonna put that all together down here so

580
00:31:02,450 --> 00:31:04,040
this was kind of like the old way and

581
00:31:04,040 --> 00:31:06,020
you you were frustrated you couldn't

582
00:31:06,020 --> 00:31:12,530
really make it work

583
00:31:12,540 --> 00:31:15,150
and in the new way what we're adding

584
00:31:15,150 --> 00:31:18,630
here is we're gonna inject the parent

585
00:31:18,630 --> 00:31:23,580
for the main the main element into the

586
00:31:23,580 --> 00:31:25,410
selector that's in our current context

587
00:31:25,410 --> 00:31:28,740
and so the output we get is basically

588
00:31:28,740 --> 00:31:31,320
this main gets injected just into the

589
00:31:31,320 --> 00:31:41,280
middle of the selector yay and then you

590
00:31:41,280 --> 00:31:42,360
know starting to see how the mixin

591
00:31:42,360 --> 00:31:45,600
content from sas3 to combined with now

592
00:31:45,600 --> 00:31:47,460
new selector manipulation it's all

593
00:31:47,460 --> 00:31:48,929
starting to pay some really awesome

594
00:31:48,929 --> 00:31:51,419
dividends in terms of what we can do

595
00:31:51,419 --> 00:31:54,630
here so here's another interesting thing

596
00:31:54,630 --> 00:31:57,660
for people who love specificity a person

597
00:31:57,660 --> 00:32:00,690
wrote in to the fast issue tracker

598
00:32:00,690 --> 00:32:01,980
they're like I really want to do this

599
00:32:01,980 --> 00:32:04,320
thing where I want to double up my class

600
00:32:04,320 --> 00:32:06,270
name to add just a little bit of

601
00:32:06,270 --> 00:32:07,470
specificity I don't want to add

602
00:32:07,470 --> 00:32:08,850
important that's too much

603
00:32:08,850 --> 00:32:12,799
I just want to dink it up a tad I'm like

604
00:32:12,799 --> 00:32:17,970
okay we can do that now and so this is a

605
00:32:17,970 --> 00:32:22,410
really crazy function I wrote that can

606
00:32:22,410 --> 00:32:24,600
find the last class in a selector so

607
00:32:24,600 --> 00:32:25,940
this is a function that goes through

608
00:32:25,940 --> 00:32:30,630
your selector finds the last class this

609
00:32:30,630 --> 00:32:31,890
is a function I think I'm gonna add to

610
00:32:31,890 --> 00:32:33,630
sass cuz I have to keep defining it in

611
00:32:33,630 --> 00:32:36,000
all these examples it just cuts the list

612
00:32:36,000 --> 00:32:38,059
up into pieces

613
00:32:38,059 --> 00:32:40,620
and then we're gonna define a mixin that

614
00:32:40,620 --> 00:32:43,370
does that increases the specificity so

615
00:32:43,370 --> 00:32:45,750
basically this is gonna go it's gonna

616
00:32:45,750 --> 00:32:47,760
find the last class it's gonna say when

617
00:32:47,760 --> 00:32:49,770
it finds it I'm gonna double it up and

618
00:32:49,770 --> 00:32:52,110
then keep going so let me show you how

619
00:32:52,110 --> 00:32:55,260
this would work so here we have this

620
00:32:55,260 --> 00:32:58,290
selector increased me please and in the

621
00:32:58,290 --> 00:33:03,570
output we get please please but if the

622
00:33:03,570 --> 00:33:08,250
last component is not a class it

623
00:33:08,250 --> 00:33:10,830
wouldn't be okay to do placate the the

624
00:33:10,830 --> 00:33:13,830
element itself because it's not an

625
00:33:13,830 --> 00:33:17,340
element and so instead what we do is we

626
00:33:17,340 --> 00:33:19,230
still refining the last class there and

627
00:33:19,230 --> 00:33:21,840
bumping that up so some really cool

628
00:33:21,840 --> 00:33:24,419
things we can do now in selectors go

629
00:33:24,419 --> 00:33:25,940
crazy

630
00:33:25,940 --> 00:33:29,730
what is what no I don't know who does

631
00:33:29,730 --> 00:33:38,740
this but you can that's the point

632
00:33:38,750 --> 00:33:41,520
um let's find some really cool things

633
00:33:41,520 --> 00:33:43,440
that are that make sense and and do that

634
00:33:43,440 --> 00:33:47,640
more than this maybe so I didn't really

635
00:33:47,640 --> 00:33:49,050
talk about it but you might have been

636
00:33:49,050 --> 00:33:51,200
seeing this thing called at root

637
00:33:51,200 --> 00:33:53,520
floating around so let me just real

638
00:33:53,520 --> 00:33:55,500
quickly describe kind of why we have to

639
00:33:55,500 --> 00:33:58,620
do that basically once the ampersand

640
00:33:58,620 --> 00:34:01,380
goes into SAS script we don't know like

641
00:34:01,380 --> 00:34:03,870
what are you gonna do with that we we

642
00:34:03,870 --> 00:34:06,050
kind of knew not to repeat the context

643
00:34:06,050 --> 00:34:08,340
when you put it in your selector but now

644
00:34:08,340 --> 00:34:09,480
it's in script it could have gotten

645
00:34:09,480 --> 00:34:11,400
passed to a mixin maybe it got ignored

646
00:34:11,400 --> 00:34:14,610
maybe it didn't and so we couldn't find

647
00:34:14,610 --> 00:34:16,020
the good heuristic so we decided that

648
00:34:16,020 --> 00:34:18,150
you're gonna have to tell us when you

649
00:34:18,150 --> 00:34:22,320
want your context to be doubled up so if

650
00:34:22,320 --> 00:34:27,780
you don't have an app root let me just

651
00:34:27,780 --> 00:34:38,760
show you what it would happen

652
00:34:38,770 --> 00:34:44,179
let's keep these you get the context

653
00:34:44,179 --> 00:34:47,300
over again so at root basically says

654
00:34:47,300 --> 00:34:49,579
take this selector and place it at the

655
00:34:49,579 --> 00:34:52,909
root of the document and ignore my

656
00:34:52,909 --> 00:34:55,399
context but keep my context available in

657
00:34:55,399 --> 00:34:59,089
terms of the the the parent reference

658
00:34:59,089 --> 00:35:02,780
and so on now I'm basically controlling

659
00:35:02,780 --> 00:35:04,849
my context and you can use this to

660
00:35:04,849 --> 00:35:07,579
completely bounce out of your current

661
00:35:07,579 --> 00:35:09,320
context you don't have to use the

662
00:35:09,320 --> 00:35:10,790
selector parent anymore you can just

663
00:35:10,790 --> 00:35:13,099
decide your deeply nested in something

664
00:35:13,099 --> 00:35:14,480
and it makes sense for you to like pop

665
00:35:14,480 --> 00:35:16,700
up to the main level now make a new

666
00:35:16,700 --> 00:35:18,770
selector at the top level go back down

667
00:35:18,770 --> 00:35:21,170
so there's some interesting things that

668
00:35:21,170 --> 00:35:26,510
happen here and we we think that a tree

669
00:35:26,510 --> 00:35:29,390
will have value beyond just there and

670
00:35:29,390 --> 00:35:31,790
one way that it's gonna pay dividends

671
00:35:31,790 --> 00:35:33,980
though this isn't implemented just yet

672
00:35:33,980 --> 00:35:36,230
is you're going to be able to unscoped

673
00:35:36,230 --> 00:35:39,740
or self from a media block so I don't

674
00:35:39,740 --> 00:35:40,790
know if you guys have ever tried to do

675
00:35:40,790 --> 00:35:42,829
an extend within that media block and

676
00:35:42,829 --> 00:35:44,329
gotten this little message telling you

677
00:35:44,329 --> 00:35:47,030
that you were making a sin and you've

678
00:35:47,030 --> 00:35:50,930
made the SAS gods angry did I just call

679
00:35:50,930 --> 00:35:56,450
myself a guidance yeah so you can't do

680
00:35:56,450 --> 00:35:57,740
that it doesn't make sense we don't know

681
00:35:57,740 --> 00:35:59,150
how to apply extend across your entire

682
00:35:59,150 --> 00:36:02,810
document for a runtime value so we've

683
00:36:02,810 --> 00:36:05,599
been slapping people's hands but it fits

684
00:36:05,599 --> 00:36:07,270
makes sense

685
00:36:07,270 --> 00:36:11,960
you can now basically pop out of your

686
00:36:11,960 --> 00:36:14,440
media context do your extend and then

687
00:36:14,440 --> 00:36:16,430
you'll be right back into your media

688
00:36:16,430 --> 00:36:18,740
context and so the the syntax for that

689
00:36:18,740 --> 00:36:27,560
is going to be basically a true like

690
00:36:27,560 --> 00:36:33,859
without media and then anything that's

691
00:36:33,859 --> 00:36:35,780
inside there will not get this media

692
00:36:35,780 --> 00:36:38,210
this will also work if you say all it'll

693
00:36:38,210 --> 00:36:40,790
like bounce you out of all like runtime

694
00:36:40,790 --> 00:36:44,420
directives so document supports things

695
00:36:44,420 --> 00:36:48,560
like that so that's going to work soon

696
00:36:48,560 --> 00:36:52,700
almost ready so we're changing variable

697
00:36:52,700 --> 00:36:56,630
scoping I'm gonna say something here can

698
00:36:56,630 --> 00:36:59,240
we keep it between us so this is

699
00:36:59,240 --> 00:37:03,650
something less got right they scoped

700
00:37:03,650 --> 00:37:05,870
variables to their block and if you

701
00:37:05,870 --> 00:37:07,430
defined a variable that was defined

702
00:37:07,430 --> 00:37:09,590
elsewhere it didn't change the value

703
00:37:09,590 --> 00:37:13,190
outside that block and we decided that

704
00:37:13,190 --> 00:37:14,840
you wanted to change the global value

705
00:37:14,840 --> 00:37:18,800
and I think that was bad so starting in

706
00:37:18,800 --> 00:37:21,950
3 3 that were deprecating the ability to

707
00:37:21,950 --> 00:37:25,460
assign to a global value from within a

708
00:37:25,460 --> 00:37:29,180
local scope unless you provide this bang

709
00:37:29,180 --> 00:37:33,740
global modifier at the end of your

710
00:37:33,740 --> 00:37:38,570
assignment then the deprecation warnings

711
00:37:38,570 --> 00:37:40,970
will go away in the next release we will

712
00:37:40,970 --> 00:37:45,940
change this behavior in entirety and

713
00:37:45,940 --> 00:37:54,980
that is what I have for you guys today

714
00:37:54,990 --> 00:37:58,640
I'd like to make a quick note two things

715
00:37:58,640 --> 00:38:00,660
doing this makes it takes a whole

716
00:38:00,660 --> 00:38:02,820
community like Nathan Weizenbaum that

717
00:38:02,820 --> 00:38:04,410
works with me on the core team is

718
00:38:04,410 --> 00:38:06,390
brilliant and he doesn't get enough

719
00:38:06,390 --> 00:38:08,190
credit so if you guys can shoot a

720
00:38:08,190 --> 00:38:11,040
message to him at next 3 on Twitter and

721
00:38:11,040 --> 00:38:12,240
just tell him he's awesome

722
00:38:12,240 --> 00:38:16,080
it would probably cheer him up at

723
00:38:16,080 --> 00:38:17,640
LinkedIn we're hiring SAS developers

724
00:38:17,640 --> 00:38:19,619
would love it if if you guys are looking

725
00:38:19,619 --> 00:38:24,570
for a job and compass is is actually

726
00:38:24,570 --> 00:38:26,970
charity wear which means that if you use

727
00:38:26,970 --> 00:38:29,100
it and love it we ask that you make a

728
00:38:29,100 --> 00:38:32,540
donation to the UM DF org which is

729
00:38:32,540 --> 00:38:34,380
trying to find a cure for the disease

730
00:38:34,380 --> 00:38:36,690
that's killing my dad so I'd appreciate

731
00:38:36,690 --> 00:38:45,300
that

732
00:38:45,310 --> 00:38:54,000
you

