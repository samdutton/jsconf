1
00:00:31,789 --> 00:00:35,420

I work at kins in com I'm in charge of

2
00:00:35,420 --> 00:00:39,020
the development team there we do photo

3
00:00:39,020 --> 00:00:41,780
sharing for private groups and from

4
00:00:41,780 --> 00:00:43,940
there print products we use a lot of

5
00:00:43,940 --> 00:00:45,769
JavaScript but that's not what I'm here

6
00:00:45,769 --> 00:00:47,870
to talk about and this is one of only

7
00:00:47,870 --> 00:00:49,820
two slides I have so we'll get back to

8
00:00:49,820 --> 00:00:55,010
the second one at the end what I would

9
00:00:55,010 --> 00:00:57,589
like to talk about is pervasive computer

10
00:00:57,589 --> 00:01:00,739
literacy so how many people here have

11
00:01:00,739 --> 00:01:03,260
not heard of Alan Kay I don't know who

12
00:01:03,260 --> 00:01:07,400
he is right so Alan Kay he he worked on

13
00:01:07,400 --> 00:01:09,770
the alto which became the inspiration

14
00:01:09,770 --> 00:01:12,920
for the Macintosh he worked on small

15
00:01:12,920 --> 00:01:14,810
talk which beget self which begat

16
00:01:14,810 --> 00:01:17,990
javascript and one of his more famous

17
00:01:17,990 --> 00:01:21,140
quotes perhaps was that the computer

18
00:01:21,140 --> 00:01:24,110
revolution hasn't happened yet I think

19
00:01:24,110 --> 00:01:26,630
during the the dot-com bubble people got

20
00:01:26,630 --> 00:01:28,939
too busy making money to actually make

21
00:01:28,939 --> 00:01:31,159
computers better and we're just getting

22
00:01:31,159 --> 00:01:36,830
back to to where they left off so one of

23
00:01:36,830 --> 00:01:38,960
his uh his inventions that never

24
00:01:38,960 --> 00:01:40,340
actually saw the light of day it was

25
00:01:40,340 --> 00:01:43,250
never a physical invention it was more

26
00:01:43,250 --> 00:01:44,780
of a conceptual one was the dynabook

27
00:01:44,780 --> 00:01:47,180
which was a computer small enough to

28
00:01:47,180 --> 00:01:49,820
carry around that a child could program

29
00:01:49,820 --> 00:01:54,409
and so we're halfway there we've got the

30
00:01:54,409 --> 00:01:56,630
computer that you can you can carry

31
00:01:56,630 --> 00:02:01,640
around easily now how many people have

32
00:02:01,640 --> 00:02:05,659
seen the blog posts and people

33
00:02:05,659 --> 00:02:08,780
complaining that kids these days you

34
00:02:08,780 --> 00:02:10,940
know when I was a kid basic was on every

35
00:02:10,940 --> 00:02:13,040
computer and we learned with peaks and

36
00:02:13,040 --> 00:02:18,920
pokes and we liked it now they they tend

37
00:02:18,920 --> 00:02:21,189
to ignore the fact that there is

38
00:02:21,189 --> 00:02:24,849
programming tools freely available for

39
00:02:24,849 --> 00:02:28,010
every computer that only a download away

40
00:02:28,010 --> 00:02:32,239
at most but more importantly every web

41
00:02:32,239 --> 00:02:34,540
browser is a programming environment

42
00:02:34,540 --> 00:02:38,090
it's just not as easy to bootstrap into

43
00:02:38,090 --> 00:02:40,400
it to sit and write your JavaScript and

44
00:02:40,400 --> 00:02:44,840
have people able to see it and test it

45
00:02:44,840 --> 00:02:47,460
so I wouldn't want to give everyone

46
00:02:47,460 --> 00:02:49,070
basic today I would rather give them

47
00:02:49,070 --> 00:02:52,530
HyperCard or logo or something that

48
00:02:52,530 --> 00:02:54,960
gives them a visual feedback because

49
00:02:54,960 --> 00:02:57,390
kids standards today are more than

50
00:02:57,390 --> 00:02:58,920
seeing hello world on the screen they

51
00:02:58,920 --> 00:03:03,540
want to see moving pictures so I think

52
00:03:03,540 --> 00:03:07,080
we need to get take promote jay s plus

53
00:03:07,080 --> 00:03:10,490
plus and look for a javascript

54
00:03:10,490 --> 00:03:13,920
revolution in teaching and I think tools

55
00:03:13,920 --> 00:03:15,959
like the ACE editor that we saw earlier

56
00:03:15,959 --> 00:03:18,720
tools like jsfiddle that let you test

57
00:03:18,720 --> 00:03:21,570
javascript or easily eloquent j/s which

58
00:03:21,570 --> 00:03:24,330
is a book that includes a console for

59
00:03:24,330 --> 00:03:28,860
testing I think all of these are useful

60
00:03:28,860 --> 00:03:32,730
and important steps but ultimately

61
00:03:32,730 --> 00:03:37,200
programming is hard and expecting people

62
00:03:37,200 --> 00:03:40,100
to program their own systems is

63
00:03:40,100 --> 00:03:43,680
achievable but it's not going to be easy

64
00:03:43,680 --> 00:03:45,120
and the the important thing is to

65
00:03:45,120 --> 00:03:48,120
remember what are the irrelevant details

66
00:03:48,120 --> 00:03:51,959
that we can take out of their way so I

67
00:03:51,959 --> 00:03:53,010
don't talk to you about something that

68
00:03:53,010 --> 00:03:57,120
isn't JavaScript for a moment which is

69
00:03:57,120 --> 00:04:01,290
called scratch scratch is a project from

70
00:04:01,290 --> 00:04:05,450
mi T's lifelong kindergarten program and

71
00:04:05,450 --> 00:04:08,220
it lets you drag and drop and snap

72
00:04:08,220 --> 00:04:10,140
blocks together to write your program

73
00:04:10,140 --> 00:04:14,910
like snapping legos together I have two

74
00:04:14,910 --> 00:04:16,380
children and both of them learn to

75
00:04:16,380 --> 00:04:18,140
program with scratch after trying other

76
00:04:18,140 --> 00:04:20,489
visual programming languages there are

77
00:04:20,489 --> 00:04:27,610
there are several star logo there's a

78
00:04:27,620 --> 00:04:33,960
alice 3d so scratch is easy enough i set

79
00:04:33,960 --> 00:04:36,360
myself a challenge to make a game in an

80
00:04:36,360 --> 00:04:39,750
hour and for that i had to think of what

81
00:04:39,750 --> 00:04:41,190
kind of game you could frighten an hour

82
00:04:41,190 --> 00:04:45,960
and I came up with solo pong so it's

83
00:04:45,960 --> 00:04:49,110
pong in a circle one player and you can

84
00:04:49,110 --> 00:04:59,860
see it's not perfect

85
00:04:59,870 --> 00:05:04,010
so very very simple it also scratch it's

86
00:05:04,010 --> 00:05:08,210
implemented in squeak small talk it has

87
00:05:08,210 --> 00:05:11,690
a Java Runtime so you can upload applets

88
00:05:11,690 --> 00:05:13,790
for your game and there's a whole social

89
00:05:13,790 --> 00:05:16,070
network that's involved with it so I put

90
00:05:16,070 --> 00:05:17,780
my little game up there and people

91
00:05:17,780 --> 00:05:21,220
commented and gave their high scores and

92
00:05:21,220 --> 00:05:24,080
suggestions for improvement and how to

93
00:05:24,080 --> 00:05:25,070
fix the little thing with the ball

94
00:05:25,070 --> 00:05:29,120
getting stuck so unfortunately I can't

95
00:05:29,120 --> 00:05:34,910
run scratch on on my my iPad they

96
00:05:34,910 --> 00:05:37,160
they're rewriting scratch now and

97
00:05:37,160 --> 00:05:39,260
they're rewriting it in flash which

98
00:05:39,260 --> 00:05:44,570
doesn't help me any so what scratch

99
00:05:44,570 --> 00:05:49,520
gives you is readable code so not only

100
00:05:49,520 --> 00:05:51,880
can you snap together building blocks

101
00:05:51,880 --> 00:05:55,070
but my son who learned to program

102
00:05:55,070 --> 00:05:57,110
scratch when he was 6 could download

103
00:05:57,110 --> 00:05:59,000
other people's programs by the time he

104
00:05:59,000 --> 00:06:00,650
was eight but he didn't understand how

105
00:06:00,650 --> 00:06:02,720
they've done and read their code and

106
00:06:02,720 --> 00:06:04,610
make modifications and then upload his

107
00:06:04,610 --> 00:06:07,670
changes so I don't know if you've ever

108
00:06:07,670 --> 00:06:09,470
tried to maintain the code if someone

109
00:06:09,470 --> 00:06:12,200
you've never met but being able to read

110
00:06:12,200 --> 00:06:17,360
someone else's code is huge the other

111
00:06:17,360 --> 00:06:19,640
thing it gives you is you know we've

112
00:06:19,640 --> 00:06:21,760
solved two of the major problems with

113
00:06:21,760 --> 00:06:25,340
programming so we most languages include

114
00:06:25,340 --> 00:06:27,440
array bounds checking to avoid overflow

115
00:06:27,440 --> 00:06:29,750
errors most programming languages that

116
00:06:29,750 --> 00:06:31,670
come out now have garbage collection to

117
00:06:31,670 --> 00:06:35,060
avoid memory leaks well in scratch you

118
00:06:35,060 --> 00:06:36,740
cannot get a syntax error because you

119
00:06:36,740 --> 00:06:39,680
can't assemble the program so that the

120
00:06:39,680 --> 00:06:45,020
syntax is wrong it also has built-in

121
00:06:45,020 --> 00:06:48,560
graphics editor and it's easy to to

122
00:06:48,560 --> 00:06:50,120
create animations and games it supports

123
00:06:50,120 --> 00:06:53,210
sprites supports turtle graphics but it

124
00:06:53,210 --> 00:06:55,640
has very strong limits you can't talk to

125
00:06:55,640 --> 00:06:57,920
the network you can't talk to you can't

126
00:06:57,920 --> 00:06:59,690
have anything persistent and it's made

127
00:06:59,690 --> 00:07:04,040
for children so my son already bumped

128
00:07:04,040 --> 00:07:05,810
into the the limits of this and went on

129
00:07:05,810 --> 00:07:08,120
to a program called gamesalad which lets

130
00:07:08,120 --> 00:07:11,030
you create apps for the iPhone and iPad

131
00:07:11,030 --> 00:07:13,820
and also in the past month he started

132
00:07:13,820 --> 00:07:18,720
programming in JavaScript with Raphael

133
00:07:18,730 --> 00:07:26,540
so now I want to talk to you about what

134
00:07:26,540 --> 00:07:35,460
water bear actually is

135
00:07:35,470 --> 00:07:37,570
so water bear Takes the idea of blocks

136
00:07:37,570 --> 00:07:43,510
and brings them to the web so you can

137
00:07:43,510 --> 00:07:47,830
create a program with the same kind of

138
00:07:47,830 --> 00:07:59,760
snapping and dragging

139
00:07:59,770 --> 00:08:02,470
as in scratch but you can do it no any

140
00:08:02,470 --> 00:08:11,050
web browser right now right now it's

141
00:08:11,050 --> 00:08:14,710
mainly tested in Safari and in well it's

142
00:08:14,710 --> 00:08:19,150
Safari mobile but it will it will work

143
00:08:19,150 --> 00:08:23,470
anywhere I'm not trying to build scratch

144
00:08:23,470 --> 00:08:25,960
with this I'm trying to build a reusable

145
00:08:25,960 --> 00:08:28,509
toolkit for building any language with a

146
00:08:28,509 --> 00:08:31,599
visual component so you can use this to

147
00:08:31,599 --> 00:08:36,959
wrap Python or Ruby or JavaScript and

148
00:08:36,959 --> 00:08:39,430
get the results so one thing that you

149
00:08:39,430 --> 00:08:40,779
can't do with scratches see well how

150
00:08:40,779 --> 00:08:43,570
it's implemented underneath and here

151
00:08:43,570 --> 00:08:45,190
once you have your blocks you can

152
00:08:45,190 --> 00:08:46,329
actually see what code it's going to

153
00:08:46,329 --> 00:08:52,600
generate for those this has a huge

154
00:08:52,600 --> 00:08:55,329
benefit for teaching programming it's

155
00:08:55,329 --> 00:08:57,520
very easy to teach me teach kids how to

156
00:08:57,520 --> 00:09:00,970
drag blocks together and snap them as

157
00:09:00,970 --> 00:09:02,589
again like I mentioned huge build a

158
00:09:02,589 --> 00:09:05,140
benefit for readability for maintaining

159
00:09:05,140 --> 00:09:07,240
existing programs and learning from

160
00:09:07,240 --> 00:09:10,140
programs as a form of literature to read

161
00:09:10,140 --> 00:09:14,890
learn by reading and it's got a bridge

162
00:09:14,890 --> 00:09:18,850
to text based code the other thing is

163
00:09:18,850 --> 00:09:22,300
that you can actually write code now on

164
00:09:22,300 --> 00:09:27,940
your tablet so if you've ever wanted to

165
00:09:27,940 --> 00:09:31,120
just drag and drop code and test things

166
00:09:31,120 --> 00:09:34,660
out with a computer that fits in a bag

167
00:09:34,660 --> 00:09:39,370
easily besides one with the keyboard you

168
00:09:39,370 --> 00:09:44,350
have an option now one of my goals with

169
00:09:44,350 --> 00:09:46,149
water bears to keep it really really

170
00:09:46,149 --> 00:09:48,370
minimal and to work with the web not

171
00:09:48,370 --> 00:09:51,430
against it and i had was tempted several

172
00:09:51,430 --> 00:09:52,779
times to try and make it more and more

173
00:09:52,779 --> 00:09:56,020
like scratch and backed off when I

174
00:09:56,020 --> 00:09:58,899
thought of easier ways to do it that

175
00:09:58,899 --> 00:10:01,560
work with the web the the workspace

176
00:10:01,560 --> 00:10:04,079
which has evolved with the language

177
00:10:04,079 --> 00:10:06,640
because for a visual language you have

178
00:10:06,640 --> 00:10:12,209
to have an ID that's 650 lines of code

179
00:10:12,209 --> 00:10:14,850
Emily including the HTML CSS and

180
00:10:14,850 --> 00:10:18,959
JavaScript the implementation of the

181
00:10:18,959 --> 00:10:20,850
blocks themselves including the drag and

182
00:10:20,850 --> 00:10:22,829
drop which getting networking across the

183
00:10:22,829 --> 00:10:25,319
devices was was one of the harder

184
00:10:25,319 --> 00:10:28,319
problems that's about eight hundred

185
00:10:28,319 --> 00:10:31,290
lines of code HTML CSS and JavaScript

186
00:10:31,290 --> 00:10:34,439
and then the definition of the language

187
00:10:34,439 --> 00:10:38,730
that I have here which is based on on

188
00:10:38,730 --> 00:10:46,809
Rafael library that's another 650 lines

189
00:10:46,819 --> 00:10:50,990
so there are limits to this this system

190
00:10:50,990 --> 00:10:55,110
because it's strongly typed and the

191
00:10:55,110 --> 00:10:57,179
typing is built into the blocks

192
00:10:57,179 --> 00:10:59,579
themselves so you can't drop the wrong

193
00:10:59,579 --> 00:11:03,809
type into a into a block so this is this

194
00:11:03,809 --> 00:11:05,970
block takes two numbers and adds them

195
00:11:05,970 --> 00:11:08,309
together returns the value so you can

196
00:11:08,309 --> 00:11:09,959
you can drop another number Block in

197
00:11:09,959 --> 00:11:13,559
there but you can't drop a boolean block

198
00:11:13,559 --> 00:11:17,519
in it won't let you so there are limits

199
00:11:17,519 --> 00:11:20,579
in the types of programs you can express

200
00:11:20,579 --> 00:11:22,829
with that because we use loosely typed

201
00:11:22,829 --> 00:11:27,329
languages so round-tripping JavaScript

202
00:11:27,329 --> 00:11:30,269
code isn't isn't available in this yet

203
00:11:30,269 --> 00:11:32,009
although I do have some some ideas for

204
00:11:32,009 --> 00:11:37,639
that

205
00:11:37,649 --> 00:11:40,439
another limit is that as scripts grow

206
00:11:40,439 --> 00:11:43,139
they become kind of unwieldy in size

207
00:11:43,139 --> 00:11:45,180
just in the physical real estate of the

208
00:11:45,180 --> 00:11:48,509
screen to see what's going on so one of

209
00:11:48,509 --> 00:11:50,220
the approaches for that is that i'm

210
00:11:50,220 --> 00:11:52,920
going to add blocks that encapsulate

211
00:11:52,920 --> 00:11:54,929
other blocks you make just like defining

212
00:11:54,929 --> 00:11:56,639
a function you'd be able to define a new

213
00:11:56,639 --> 00:12:03,110
block within the scope of the system and

214
00:12:03,110 --> 00:12:05,550
the other the other limitation right now

215
00:12:05,550 --> 00:12:07,259
is that as each block has a fixed number

216
00:12:07,259 --> 00:12:19,350
of arguments so if you water beer right

217
00:12:19,350 --> 00:12:21,839
now is available on github and it has a

218
00:12:21,839 --> 00:12:25,410
website water bear lang com it's not

219
00:12:25,410 --> 00:12:27,059
actually a language it's a tool for

220
00:12:27,059 --> 00:12:29,790
making languages but water bear blocks

221
00:12:29,790 --> 00:12:32,129
for making languages was too long to

222
00:12:32,129 --> 00:12:38,790
register as a URL so the website right

223
00:12:38,790 --> 00:12:40,589
now just drops you straight into this

224
00:12:40,589 --> 00:12:42,779
IDE for for dragging and building

225
00:12:42,779 --> 00:12:45,749
applications I'm going to be adding more

226
00:12:45,749 --> 00:12:47,519
information about how to define a

227
00:12:47,519 --> 00:12:50,730
language how to how to wrap it and how

228
00:12:50,730 --> 00:12:54,929
to extend what's there already and i

229
00:12:54,929 --> 00:12:57,779
thought i'd show you how an actual block

230
00:12:57,779 --> 00:13:04,050
is made so this is the definition of all

231
00:13:04,050 --> 00:13:06,149
the blocks into in water bear right now

232
00:13:06,149 --> 00:13:11,100
and the majority of them are just a

233
00:13:11,100 --> 00:13:15,959
label and a script and each of these are

234
00:13:15,959 --> 00:13:20,910
templates so when it it sees this number

235
00:13:20,910 --> 00:13:24,449
that has a default value and a type it's

236
00:13:24,449 --> 00:13:26,549
going to put an input that only accepts

237
00:13:26,549 --> 00:13:30,600
that value and then the script is also a

238
00:13:30,600 --> 00:13:35,220
template it says whatever block blocks

239
00:13:35,220 --> 00:13:40,819
follow this will be here and the value

240
00:13:40,819 --> 00:13:46,350
from this input will go here and then

241
00:13:46,350 --> 00:13:49,049
just writes that out so it's very easy

242
00:13:49,049 --> 00:13:51,310
to to wrap libraries and to make new

243
00:13:51,310 --> 00:14:02,470
to make new blocks

244
00:14:02,480 --> 00:14:06,110
so uh does anyone here know what a water

245
00:14:06,110 --> 00:14:11,300
bear is yeah crippled so water bear it's

246
00:14:11,300 --> 00:14:13,160
also called a tardy grad or tardigrade

247
00:14:13,160 --> 00:14:17,449
it's a microscopic creature they are the

248
00:14:17,449 --> 00:14:20,630
hardiest creatures on earth no they can

249
00:14:20,630 --> 00:14:24,130
survive vacuum high levels of radiation

250
00:14:24,130 --> 00:14:27,019
heat extremes of heat and cold they're

251
00:14:27,019 --> 00:14:29,060
extremely robust which is where I got

252
00:14:29,060 --> 00:14:30,889
the name for this is that I want this to

253
00:14:30,889 --> 00:14:33,050
be a robust system that can survive

254
00:14:33,050 --> 00:14:37,370
different languages so the future of

255
00:14:37,370 --> 00:14:41,570
water bear includes automatic code

256
00:14:41,570 --> 00:14:43,550
layout so that you can import existing

257
00:14:43,550 --> 00:14:48,410
code and have it shown as blocks I want

258
00:14:48,410 --> 00:14:49,610
you to be able to create new blocks

259
00:14:49,610 --> 00:14:55,070
within the IDE being able to do things

260
00:14:55,070 --> 00:14:56,959
again that you can't do in the

261
00:14:56,959 --> 00:14:58,430
inspiration for this in scratch you

262
00:14:58,430 --> 00:15:01,880
cannot persist things so I'm persistence

263
00:15:01,880 --> 00:15:06,139
right now is is a user generated it will

264
00:15:06,139 --> 00:15:08,899
save your script as you run and it'll

265
00:15:08,899 --> 00:15:18,589
save so it has basic persistence using

266
00:15:18,589 --> 00:15:22,519
the local storage but being able to to

267
00:15:22,519 --> 00:15:24,230
save your own data for your programs for

268
00:15:24,230 --> 00:15:30,170
high scores and things and there are

269
00:15:30,170 --> 00:15:31,730
many types of objects that still need to

270
00:15:31,730 --> 00:15:34,310
be added variables arrays objects

271
00:15:34,310 --> 00:15:40,550
themselves actors and sprites ultimately

272
00:15:40,550 --> 00:15:43,010
i'd like to see this become part of a

273
00:15:43,010 --> 00:15:47,120
form of active content or books can be

274
00:15:47,120 --> 00:15:50,000
written about programming and they can

275
00:15:50,000 --> 00:15:55,029
include bits of of water bear as a

276
00:15:55,029 --> 00:16:03,639
workspace to work through the problems

277
00:16:03,649 --> 00:16:07,679
and being able to have embeddable

278
00:16:07,679 --> 00:16:17,669
scripts that people can reuse

279
00:16:17,679 --> 00:16:21,019
there's a book by cold mindstorms by

280
00:16:21,019 --> 00:16:25,480
Seymour Papert and which he describes a

281
00:16:25,480 --> 00:16:30,230
how children learn and they learn best

282
00:16:30,230 --> 00:16:33,110
by being immersed in an environment and

283
00:16:33,110 --> 00:16:35,269
the only thing that we actually teach

284
00:16:35,269 --> 00:16:38,329
that way is language because we are all

285
00:16:38,329 --> 00:16:42,679
immersed in language all the time what

286
00:16:42,679 --> 00:16:45,799
he envisioned and why he created the

287
00:16:45,799 --> 00:16:49,249
logo programming language was being able

288
00:16:49,249 --> 00:16:51,019
to create worlds that immerse children

289
00:16:51,019 --> 00:16:54,019
in different topics so you could learn

290
00:16:54,019 --> 00:16:56,089
physics by being immersed in a physics

291
00:16:56,089 --> 00:16:57,499
world where you can play with the laws

292
00:16:57,499 --> 00:17:00,470
of physics and see what happens being

293
00:17:00,470 --> 00:17:02,389
immersed in a mathematics world where

294
00:17:02,389 --> 00:17:04,959
you can see why the rules of math are

295
00:17:04,959 --> 00:17:07,279
what they are and what would happen if

296
00:17:07,279 --> 00:17:11,179
they would change being able to create

297
00:17:11,179 --> 00:17:15,289
these worlds and expose them both the

298
00:17:15,289 --> 00:17:19,120
children of up to children of all ages

299
00:17:19,120 --> 00:17:22,909
could be a huge benefit to to learning

300
00:17:22,909 --> 00:17:33,460
and to for a pervasive computer literacy

301
00:17:33,470 --> 00:17:37,100
if you've seen the Khan Academy he's

302
00:17:37,100 --> 00:17:39,919
doing this for for some subjects the

303
00:17:39,919 --> 00:17:41,870
Khan Academy has videos on all sorts of

304
00:17:41,870 --> 00:17:44,120
different subjects and now you can

305
00:17:44,120 --> 00:17:47,210
participate in quizzes within the the

306
00:17:47,210 --> 00:17:49,520
website there so you can learn you know

307
00:17:49,520 --> 00:17:50,960
it's self learning self-directed

308
00:17:50,960 --> 00:17:53,210
learning I just noticed this morning

309
00:17:53,210 --> 00:17:55,970
that John Resig left Mozilla to join the

310
00:17:55,970 --> 00:17:57,970
Khan Academy which is was interesting

311
00:17:57,970 --> 00:18:05,210
and beyond teaching I'm hoping that this

312
00:18:05,210 --> 00:18:06,650
can be a small part of making the world

313
00:18:06,650 --> 00:18:10,100
safe for casual programmers so I

314
00:18:10,100 --> 00:18:12,110
mentioned my son and he's very very

315
00:18:12,110 --> 00:18:15,169
involved in computers he really enjoys

316
00:18:15,169 --> 00:18:17,570
programming he thinks of himself as a

317
00:18:17,570 --> 00:18:21,590
programmer he's ten years old my 14 year

318
00:18:21,590 --> 00:18:23,510
old daughter on the other hand is an

319
00:18:23,510 --> 00:18:26,380
artist she she's working on a novel she

320
00:18:26,380 --> 00:18:30,260
draws she plays guitar she learned

321
00:18:30,260 --> 00:18:33,350
scratch but she's not interested

322
00:18:33,350 --> 00:18:35,419
particularly in programming on the other

323
00:18:35,419 --> 00:18:39,710
hand when she wants to embed a animation

324
00:18:39,710 --> 00:18:42,080
or quiz or something on her on her blog

325
00:18:42,080 --> 00:18:45,530
she turns to scratch codes it up puts it

326
00:18:45,530 --> 00:18:47,570
up there and he's done with it for

327
00:18:47,570 --> 00:18:50,690
another six months so that kind of

328
00:18:50,690 --> 00:18:52,850
casual programming and making that

329
00:18:52,850 --> 00:18:55,970
accessible to people i think is a huge

330
00:18:55,970 --> 00:18:58,789
step forward and I'm hoping that that

331
00:18:58,789 --> 00:19:01,039
water bear can be a small part of of

332
00:19:01,039 --> 00:19:08,560
that that journey

333
00:19:08,570 --> 00:19:14,760
now I've gone through my prepared speech

334
00:19:14,760 --> 00:19:17,250
now was if there are any questions or I

335
00:19:17,250 --> 00:19:21,060
can I can show how the anatomy of the

336
00:19:21,060 --> 00:19:31,260
blocks fit together yes it will yeah

337
00:19:31,260 --> 00:19:34,950
yeah that's that's a hard problem with

338
00:19:34,950 --> 00:19:37,920
JavaScript makes me appreciate the

339
00:19:37,920 --> 00:19:40,800
simplicity of Lisp sometimes but as far

340
00:19:40,800 --> 00:19:54,120
as the structure yes

341
00:19:54,130 --> 00:19:56,419
whatever

342
00:19:56,419 --> 00:20:07,129
I think that yeah we need a mix of

343
00:20:07,129 --> 00:20:09,649
metaphors and tools I don't think that

344
00:20:09,649 --> 00:20:12,399
this is one solution for everything I

345
00:20:12,399 --> 00:20:18,739
think it's approachable for adults there

346
00:20:18,739 --> 00:20:21,230
are other metaphors that that work in

347
00:20:21,230 --> 00:20:22,789
other contexts a lot of image processing

348
00:20:22,789 --> 00:20:25,519
and sound processing tools also have

349
00:20:25,519 --> 00:20:27,710
visual components like pure data or

350
00:20:27,710 --> 00:20:31,519
quartz composer where you you drag lines

351
00:20:31,519 --> 00:20:34,879
to connect inputs to outputs those are

352
00:20:34,879 --> 00:20:38,119
also valuable and they show the flow of

353
00:20:38,119 --> 00:20:40,159
data through a system better than the

354
00:20:40,159 --> 00:20:43,129
blocks on the other hand I think you

355
00:20:43,129 --> 00:20:44,899
know the snapping of blocks together is

356
00:20:44,899 --> 00:20:47,899
one that people just get very

357
00:20:47,899 --> 00:20:51,739
intuitively so yeah I think we need more

358
00:20:51,739 --> 00:20:53,679
than more than one metaphor for sure and

359
00:20:53,679 --> 00:20:56,359
also I think we need to to provide

360
00:20:56,359 --> 00:21:00,080
bridges between them which is why I

361
00:21:00,080 --> 00:21:03,139
added the the text view it's showing you

362
00:21:03,139 --> 00:21:06,470
what the code that gets generated is one

363
00:21:06,470 --> 00:21:07,909
of my one of my earliest experiments

364
00:21:07,909 --> 00:21:10,279
with this was to create a turtle

365
00:21:10,279 --> 00:21:12,590
graphics system where you could drag the

366
00:21:12,590 --> 00:21:13,879
turtle around and it would write the

367
00:21:13,879 --> 00:21:15,679
code out for you and then you could edit

368
00:21:15,679 --> 00:21:20,299
the code to see what it would do so you

369
00:21:20,299 --> 00:21:23,239
could learn by doing directly a direct

370
00:21:23,239 --> 00:21:26,929
manipulation but I think bridging the

371
00:21:26,929 --> 00:21:28,940
textual code representation gives them a

372
00:21:28,940 --> 00:21:35,119
strong learning path are there any other

373
00:21:35,119 --> 00:21:40,560
questions

374
00:21:40,570 --> 00:21:43,900
on the website you can also get to

375
00:21:43,900 --> 00:21:45,950
things like the anatomy of the block

376
00:21:45,950 --> 00:21:50,210
that show how they are generated what

377
00:21:50,210 --> 00:21:54,490
the what goes into each of those blocks

378
00:21:54,490 --> 00:21:57,140
which is helpful if you want to extend

379
00:21:57,140 --> 00:22:21,860
it show you one larger example

380
00:22:21,870 --> 00:22:29,309
so this was I don't yet have this is the

381
00:22:29,309 --> 00:22:31,110
one with where the ball moves so this

382
00:22:31,110 --> 00:22:33,240
was a port of my scratch project I don't

383
00:22:33,240 --> 00:22:35,700
yet have collision detection implemented

384
00:22:35,700 --> 00:22:37,980
so it doesn't actually play yet but it's

385
00:22:37,980 --> 00:22:41,040
a just an example of a larger group of

386
00:22:41,040 --> 00:22:42,870
blocks showing different event captures

387
00:22:42,870 --> 00:22:45,890
so we have when the program starts

388
00:22:45,890 --> 00:22:50,790
create the art position it and then when

389
00:22:50,790 --> 00:22:53,700
when the left and right keys are pressed

390
00:22:53,700 --> 00:22:57,920
to just move it so pretty simple stuff

391
00:22:57,920 --> 00:23:00,929
the other people who who could find this

392
00:23:00,929 --> 00:23:03,270
useful are people who really aren't

393
00:23:03,270 --> 00:23:05,190
attracted to programming for the sake of

394
00:23:05,190 --> 00:23:07,860
programming but like processing you is

395
00:23:07,860 --> 00:23:10,320
designed as programming for artists but

396
00:23:10,320 --> 00:23:15,000
it uses Java syntax which seems to me to

397
00:23:15,000 --> 00:23:18,300
be a little contradictory so wrapping

398
00:23:18,300 --> 00:23:20,280
processing j/s with this we could be a

399
00:23:20,280 --> 00:23:26,830
next step

400
00:23:26,840 --> 00:23:30,000
so now I'll get to slide 2 there aren't

401
00:23:30,000 --> 00:23:34,440
any more questions thanks to chris and

402
00:23:34,440 --> 00:23:36,690
laura for the opportunity thanks to

403
00:23:36,690 --> 00:23:39,990
brian larue for promoting us the scratch

404
00:23:39,990 --> 00:23:41,670
team for building a system worth

405
00:23:41,670 --> 00:23:44,850
imitating and seymour papert now on k

406
00:23:44,850 --> 00:23:49,230
provision and Burt builder saw this on

407
00:23:49,230 --> 00:23:51,510
the the Jays comp website and he's

408
00:23:51,510 --> 00:23:54,350
already building a language using it so

409
00:23:54,350 --> 00:23:58,020
for for bravery and foolhardy pneus my

410
00:23:58,020 --> 00:24:01,020
first early adopter there and if you're

411
00:24:01,020 --> 00:24:02,460
interested in following and finding out

412
00:24:02,460 --> 00:24:04,530
more about water bear water bear lang on

413
00:24:04,530 --> 00:24:06,090
twitter that's where i'll announce

414
00:24:06,090 --> 00:24:13,140
changes and updates Thank You rose take

415
00:24:13,140 --> 00:24:18,750
me home to the place I belong hold the

