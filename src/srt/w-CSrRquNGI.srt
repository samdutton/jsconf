1
00:00:12,490 --> 00:00:16,070

hi everyone thank you so much for coming

2
00:00:16,070 --> 00:00:18,890
to see me I know you had many many one

3
00:00:18,890 --> 00:00:23,270
other choice to go see and really quick

4
00:00:23,270 --> 00:00:25,430
let me just can I get some smiling faces

5
00:00:25,430 --> 00:00:31,400
for my Instagram okay let's see just

6
00:00:31,400 --> 00:00:37,580
finish speech they loved it I my name is

7
00:00:37,580 --> 00:00:39,710
Alex Kaminski I live in Brooklyn New

8
00:00:39,710 --> 00:00:42,140
York as she said and a little bit about

9
00:00:42,140 --> 00:00:44,210
me I am the lead creative engineer at

10
00:00:44,210 --> 00:00:47,930
Reuters TV if you've never heard of it

11
00:00:47,930 --> 00:00:50,030
Reuters TV it's a personalized video

12
00:00:50,030 --> 00:00:53,750
news app we are out on iOS Android Apple

13
00:00:53,750 --> 00:00:58,100
TV and of course web when I join Reuters

14
00:00:58,100 --> 00:01:00,769
TV the web app was not yet built and I

15
00:01:00,769 --> 00:01:02,869
was the first engineer hired to build it

16
00:01:02,869 --> 00:01:07,430
I met with my bosses my first week and I

17
00:01:07,430 --> 00:01:09,530
quickly realized they knew roughly what

18
00:01:09,530 --> 00:01:11,750
I needed to build but they had no strong

19
00:01:11,750 --> 00:01:13,969
opinions about how I should build it

20
00:01:13,969 --> 00:01:16,700
what technologies we should use or even

21
00:01:16,700 --> 00:01:19,039
how the process within the team should

22
00:01:19,039 --> 00:01:23,180
be structured it was all up to me

23
00:01:23,180 --> 00:01:27,799
or for you I sunders pop it's a lot of

24
00:01:27,799 --> 00:01:30,560
pressure it's at the same time very

25
00:01:30,560 --> 00:01:32,689
exciting and intimidating to be in this

26
00:01:32,689 --> 00:01:35,420
situation I'm sure a lot of us have

27
00:01:35,420 --> 00:01:37,579
joined teams later in the life cycle of

28
00:01:37,579 --> 00:01:39,469
a product and thought we do things

29
00:01:39,469 --> 00:01:42,590
differently maybe certain aspects of the

30
00:01:42,590 --> 00:01:44,749
tech are outdated or the process within

31
00:01:44,749 --> 00:01:47,570
the other teams is dysfunctional this

32
00:01:47,570 --> 00:01:49,490
was my chance to make sure this didn't

33
00:01:49,490 --> 00:01:52,039
happen and thus I was faced with the

34
00:01:52,039 --> 00:01:55,039
first engineers dilemma so put yourself

35
00:01:55,039 --> 00:01:56,869
in my shoes you know roughly what you

36
00:01:56,869 --> 00:01:58,490
need to build and you have complete

37
00:01:58,490 --> 00:02:01,100
freedom as to how to do it what sort of

38
00:02:01,100 --> 00:02:03,200
decisions do we need to make as first

39
00:02:03,200 --> 00:02:05,210
engineers to make sure that they don't

40
00:02:05,210 --> 00:02:08,750
bite you in the ass down the line so I

41
00:02:08,750 --> 00:02:10,640
looked in my situation and I saw two

42
00:02:10,640 --> 00:02:13,100
distinct categories of dilemma the first

43
00:02:13,100 --> 00:02:16,370
word dilemmas of workflow how do you we

44
00:02:16,370 --> 00:02:18,709
first engineers insert ourselves into

45
00:02:18,709 --> 00:02:21,349
organizations what sort of relationships

46
00:02:21,349 --> 00:02:23,760
do we need to build with designers

47
00:02:23,760 --> 00:02:26,970
product owners CEOs people like that and

48
00:02:26,970 --> 00:02:29,970
the other obvious type of dilemma is the

49
00:02:29,970 --> 00:02:32,280
technical kind we all know the absolute

50
00:02:32,280 --> 00:02:34,799
insane number of options we have to

51
00:02:34,799 --> 00:02:37,290
build web apps in the modern age how do

52
00:02:37,290 --> 00:02:39,810
you begin to pick a full text back top

53
00:02:39,810 --> 00:02:41,340
to bottom that's not going to feel

54
00:02:41,340 --> 00:02:44,060
completely outdated in just a few months

55
00:02:44,060 --> 00:02:46,890
so during the rest of this talk I am

56
00:02:46,890 --> 00:02:48,750
going to talk to you about how I

57
00:02:48,750 --> 00:02:51,329
navigated all these questions believe me

58
00:02:51,329 --> 00:02:53,640
I did not get them all right and

59
00:02:53,640 --> 00:02:55,859
hopefully this won't just apply to those

60
00:02:55,859 --> 00:02:57,720
of you who are starting at a new company

61
00:02:57,720 --> 00:03:00,359
but also for side projects and

62
00:03:00,359 --> 00:03:03,870
freelancers too so let's talk about

63
00:03:03,870 --> 00:03:06,930
design before I even considered which

64
00:03:06,930 --> 00:03:08,579
technologies I was going to use on my

65
00:03:08,579 --> 00:03:10,379
project I wanted to set the tone with

66
00:03:10,379 --> 00:03:13,920
design and just a quick shout out the

67
00:03:13,920 --> 00:03:16,590
app was designed by anas landok firm way

68
00:03:16,590 --> 00:03:19,530
know who are here in the audience so

69
00:03:19,530 --> 00:03:22,530
shout out to them so many places I've

70
00:03:22,530 --> 00:03:24,599
worked at design and technology have

71
00:03:24,599 --> 00:03:28,230
been completely siloed and for me this

72
00:03:28,230 --> 00:03:29,699
approach is really frustrating for two

73
00:03:29,699 --> 00:03:32,579
reasons the first is that interpreting

74
00:03:32,579 --> 00:03:34,500
PSD's or sketch files without any

75
00:03:34,500 --> 00:03:37,290
context can lead to frustration on

76
00:03:37,290 --> 00:03:41,849
everyone's part you know designers they

77
00:03:41,849 --> 00:03:43,590
don't often think about all the

78
00:03:43,590 --> 00:03:47,400
different breakpoints and browsers and

79
00:03:47,400 --> 00:03:49,980
other weird edge cases that we know

80
00:03:49,980 --> 00:03:52,769
we're going to have to deal with and the

81
00:03:52,769 --> 00:03:54,389
second reason I get frustrated is

82
00:03:54,389 --> 00:03:55,919
without technology being involved

83
00:03:55,919 --> 00:03:57,959
upfront in design a lot of designers

84
00:03:57,959 --> 00:04:00,359
won't know how far they can push it we

85
00:04:00,359 --> 00:04:01,680
wouldn't all be here at this conference

86
00:04:01,680 --> 00:04:03,540
if we didn't like staying up to date

87
00:04:03,540 --> 00:04:05,370
with the most cutting-edge technology

88
00:04:05,370 --> 00:04:07,650
and I'm guessing there are a lot of

89
00:04:07,650 --> 00:04:11,190
strict designers in the house so if we

90
00:04:11,190 --> 00:04:13,199
don't bring that knowledge that we get

91
00:04:13,199 --> 00:04:15,629
here up up front in the process it

92
00:04:15,629 --> 00:04:17,519
doesn't translate into the finished

93
00:04:17,519 --> 00:04:20,430
product and I was hired at Reuters TV to

94
00:04:20,430 --> 00:04:22,770
push that envelope so getting to work

95
00:04:22,770 --> 00:04:24,539
with design closely from the beginning

96
00:04:24,539 --> 00:04:28,409
was very important so when I proposed

97
00:04:28,409 --> 00:04:29,840
this to the team I noticed two things

98
00:04:29,840 --> 00:04:32,370
and the first was that design was

99
00:04:32,370 --> 00:04:34,650
thrilled to be working this way I think

100
00:04:34,650 --> 00:04:36,450
when us passionate technologists and

101
00:04:36,450 --> 00:04:37,560
designers get together

102
00:04:37,560 --> 00:04:38,760
wapping what we've seen and what's cool

103
00:04:38,760 --> 00:04:41,070
on the web magic things can happen that

104
00:04:41,070 --> 00:04:42,990
get lost in that delivery of static

105
00:04:42,990 --> 00:04:45,780
files but the second thing I noticed is

106
00:04:45,780 --> 00:04:48,330
that it doesn't work for everyone our

107
00:04:48,330 --> 00:04:50,910
iOS team was already happily underway

108
00:04:50,910 --> 00:04:52,710
with this more pipeline approach just

109
00:04:52,710 --> 00:04:54,960
reading sketch files and I'll give you

110
00:04:54,960 --> 00:04:56,910
that the Zeppelin plugin for sketch has

111
00:04:56,910 --> 00:04:58,740
made it really easy for developers to

112
00:04:58,740 --> 00:05:02,570
more accurately interpret static files

113
00:05:02,570 --> 00:05:04,950
so now our two teams work completely

114
00:05:04,950 --> 00:05:07,020
differently with design and it actually

115
00:05:07,020 --> 00:05:10,100
ends up working great for us because web

116
00:05:10,100 --> 00:05:13,590
gets to work all the way up with design

117
00:05:13,590 --> 00:05:15,389
and we get to prototype and figure out

118
00:05:15,389 --> 00:05:17,940
all the kinks and weird stuff with a

119
00:05:17,940 --> 00:05:19,680
feature before it gets shipped at the

120
00:05:19,680 --> 00:05:22,050
iOS team so we get to sort of be on the

121
00:05:22,050 --> 00:05:24,840
vanguard of new features and then the

122
00:05:24,840 --> 00:05:28,320
iOS team who needs to respect at pushes

123
00:05:28,320 --> 00:05:31,229
with Apple gets to get more polished

124
00:05:31,229 --> 00:05:35,340
sketch file from design so the

125
00:05:35,340 --> 00:05:36,810
relationship with product owners is

126
00:05:36,810 --> 00:05:39,360
equally important to build early on as

127
00:05:39,360 --> 00:05:42,030
the first engineer on all the projects

128
00:05:42,030 --> 00:05:44,460
I've worked on over the years the ones

129
00:05:44,460 --> 00:05:46,200
where technologies had a big seat at the

130
00:05:46,200 --> 00:05:49,229
table when coming up with which features

131
00:05:49,229 --> 00:05:52,080
to work on how they're going to work and

132
00:05:52,080 --> 00:05:55,410
more my new details like that they've

133
00:05:55,410 --> 00:05:57,810
been the best ones to work on so as the

134
00:05:57,810 --> 00:05:59,700
first engineer on a project it's in your

135
00:05:59,700 --> 00:06:01,740
vest in interest to insert yourself into

136
00:06:01,740 --> 00:06:04,350
that decision making process as far as

137
00:06:04,350 --> 00:06:07,260
possible so to do that you have to win

138
00:06:07,260 --> 00:06:10,289
over these project owners and how do you

139
00:06:10,289 --> 00:06:13,260
do it my strategy is simple don't be

140
00:06:13,260 --> 00:06:15,780
that no developer that we've all been at

141
00:06:15,780 --> 00:06:17,400
some point in our career where you're

142
00:06:17,400 --> 00:06:18,600
just sick of everything you think

143
00:06:18,600 --> 00:06:21,000
everything stupid and you're set in your

144
00:06:21,000 --> 00:06:24,150
ways don't be that guy in your first few

145
00:06:24,150 --> 00:06:26,100
weeks at a company get excited about the

146
00:06:26,100 --> 00:06:27,660
features on the roadmap even if you're

147
00:06:27,660 --> 00:06:30,360
not and actively engage those product

148
00:06:30,360 --> 00:06:31,850
stakeholders during your build process

149
00:06:31,850 --> 00:06:34,169
so your first few weeks should be about

150
00:06:34,169 --> 00:06:36,270
prototyping actively show up demos and

151
00:06:36,270 --> 00:06:38,039
progress to these people and make

152
00:06:38,039 --> 00:06:39,570
everyone feel like progress is being

153
00:06:39,570 --> 00:06:41,639
made you know if you're slogging around

154
00:06:41,639 --> 00:06:44,550
in the back end and not showing anything

155
00:06:44,550 --> 00:06:46,560
that's easily visible to these people a

156
00:06:46,560 --> 00:06:48,630
lot of times they'll get frustrated and

157
00:06:48,630 --> 00:06:50,370
think that's nothing's getting done

158
00:06:50,370 --> 00:06:53,160
so prototyping allows you to build trust

159
00:06:53,160 --> 00:06:55,199
with these people as well as by see some

160
00:06:55,199 --> 00:06:56,910
time to figure out which technologies

161
00:06:56,910 --> 00:07:00,419
you want to use on your project speaking

162
00:07:00,419 --> 00:07:02,940
of technology it's one of the biggest

163
00:07:02,940 --> 00:07:04,320
decisions you'll make as the first

164
00:07:04,320 --> 00:07:06,210
engineer and it's also sort of the

165
00:07:06,210 --> 00:07:09,330
Genesis for this talk now I'm sure a lot

166
00:07:09,330 --> 00:07:10,830
of us have stepped on a projects and

167
00:07:10,830 --> 00:07:12,330
wondered who the hell made the call to

168
00:07:12,330 --> 00:07:15,060
use some weird library or framework or

169
00:07:15,060 --> 00:07:17,940
old ass tank and the truth is that

170
00:07:17,940 --> 00:07:19,560
decision can usually be traced all the

171
00:07:19,560 --> 00:07:21,419
way back to that first engineer and

172
00:07:21,419 --> 00:07:22,590
we're not going to make that mistake

173
00:07:22,590 --> 00:07:25,440
this time so to help me I've developed

174
00:07:25,440 --> 00:07:27,150
something called the new technology

175
00:07:27,150 --> 00:07:30,449
quadrant theory and it's basically just

176
00:07:30,449 --> 00:07:33,710
a framework for evaluating frameworks or

177
00:07:33,710 --> 00:07:36,240
other libraries or technologies are

178
00:07:36,240 --> 00:07:37,650
interested in and bringing on your

179
00:07:37,650 --> 00:07:40,800
project so before including anything but

180
00:07:40,800 --> 00:07:43,110
basic HTML CSS and JavaScript on your

181
00:07:43,110 --> 00:07:45,330
project I run the technology through

182
00:07:45,330 --> 00:07:47,130
these four quadrants to decide if it

183
00:07:47,130 --> 00:07:49,680
fits the bill now my first question I

184
00:07:49,680 --> 00:07:51,270
look at is friendliness to new

185
00:07:51,270 --> 00:07:54,180
developers as a community we JavaScript

186
00:07:54,180 --> 00:07:55,800
engineers have one of the biggest pools

187
00:07:55,800 --> 00:07:57,900
of developers to draw on out of any

188
00:07:57,900 --> 00:08:00,539
other language but we lose that if we

189
00:08:00,539 --> 00:08:02,220
choose these niche technologies that

190
00:08:02,220 --> 00:08:04,560
shut people out so as the first engineer

191
00:08:04,560 --> 00:08:06,870
who may be hiring new developers I want

192
00:08:06,870 --> 00:08:08,639
to make sure I'm able to cast a wide net

193
00:08:08,639 --> 00:08:10,500
and choose technologies that are going

194
00:08:10,500 --> 00:08:13,050
to be easily accessible to people so the

195
00:08:13,050 --> 00:08:14,700
first quadrant or answer I'm looking to

196
00:08:14,700 --> 00:08:17,280
satisfy is am i comfortable hiring

197
00:08:17,280 --> 00:08:18,900
someone who's never worked with this

198
00:08:18,900 --> 00:08:22,410
before on to my project my second

199
00:08:22,410 --> 00:08:24,900
quadrant is sexiness working on new and

200
00:08:24,900 --> 00:08:26,550
compelling technology makes us happier

201
00:08:26,550 --> 00:08:29,610
at our jobs every day likewise it makes

202
00:08:29,610 --> 00:08:31,289
it easier to attract that new talent

203
00:08:31,289 --> 00:08:33,060
when it does come time to find that

204
00:08:33,060 --> 00:08:35,610
second engineer so sexiness and choosing

205
00:08:35,610 --> 00:08:36,930
good technologies that you're actually

206
00:08:36,930 --> 00:08:40,260
interested in is equally important my

207
00:08:40,260 --> 00:08:42,300
third quadrant is my ability to lead on

208
00:08:42,300 --> 00:08:44,250
it as the first engineer it's going to

209
00:08:44,250 --> 00:08:46,080
be expected that you know the ins and

210
00:08:46,080 --> 00:08:48,140
outs of the project and the tech stack

211
00:08:48,140 --> 00:08:50,610
new engineers are going to be looking to

212
00:08:50,610 --> 00:08:52,770
you for decisions on how to style build

213
00:08:52,770 --> 00:08:55,560
and execute on features and that's why

214
00:08:55,560 --> 00:08:57,600
it's important to use technologies that

215
00:08:57,600 --> 00:08:59,610
are familiar to you or at least you have

216
00:08:59,610 --> 00:09:01,140
the ability to get up to speed quickly

217
00:09:01,140 --> 00:09:02,850
if not

218
00:09:02,850 --> 00:09:05,290
finally I look at production readiness

219
00:09:05,290 --> 00:09:07,120
one of the dangers of choosing something

220
00:09:07,120 --> 00:09:09,340
in the sexy category is that it's buggy

221
00:09:09,340 --> 00:09:11,250
or its api's are changing really rapidly

222
00:09:11,250 --> 00:09:14,020
so in addition you want to pick a

223
00:09:14,020 --> 00:09:15,610
technology that's got a good base

224
00:09:15,610 --> 00:09:17,530
community in case you do get into those

225
00:09:17,530 --> 00:09:19,750
sticky situations and you need to turn

226
00:09:19,750 --> 00:09:22,720
the stack overflow so a good rule of

227
00:09:22,720 --> 00:09:24,700
thumb as the first engineer is to keep

228
00:09:24,700 --> 00:09:27,190
the stack to just a few newer workhorse

229
00:09:27,190 --> 00:09:28,390
frameworks that are going to help you

230
00:09:28,390 --> 00:09:30,820
build out the app until the product

231
00:09:30,820 --> 00:09:34,480
requirements dictate otherwise so now

232
00:09:34,480 --> 00:09:35,890
that I've played out the general

233
00:09:35,890 --> 00:09:39,220
strategy for evaluating technologies I'm

234
00:09:39,220 --> 00:09:40,870
going to take you through how I pick the

235
00:09:40,870 --> 00:09:44,800
stack for Reuters so let's start with

236
00:09:44,800 --> 00:09:47,160
something easy CSS pre-processing

237
00:09:47,160 --> 00:09:49,240
everyone knows there's two major players

238
00:09:49,240 --> 00:09:52,150
in this camp sass and less I ran them

239
00:09:52,150 --> 00:09:53,800
through quadrant 3 and they both came

240
00:09:53,800 --> 00:09:56,200
out about dead even I've used both

241
00:09:56,200 --> 00:09:58,240
extensively in the past I know they're

242
00:09:58,240 --> 00:10:00,180
production-ready new developer friendly

243
00:10:00,180 --> 00:10:02,440
and I'm able to write good code with

244
00:10:02,440 --> 00:10:05,410
both so without with both about dead

245
00:10:05,410 --> 00:10:07,390
even I was free to make a gut call and

246
00:10:07,390 --> 00:10:08,770
that's one of the luxuries you have as

247
00:10:08,770 --> 00:10:11,440
the first engineer I ultimately sell

248
00:10:11,440 --> 00:10:13,960
around less for my team but let's talk

249
00:10:13,960 --> 00:10:15,790
about something way more difficult which

250
00:10:15,790 --> 00:10:18,940
is choosing JavaScript technologies it's

251
00:10:18,940 --> 00:10:20,260
the elephant in the room at these

252
00:10:20,260 --> 00:10:22,360
conferences choosing what frameworks to

253
00:10:22,360 --> 00:10:24,610
use and there have been many many talks

254
00:10:24,610 --> 00:10:26,680
which discussed the merits of each

255
00:10:26,680 --> 00:10:28,570
framework and why you should use it I'm

256
00:10:28,570 --> 00:10:30,790
not going to go into all that but I will

257
00:10:30,790 --> 00:10:32,560
discuss how I approach the problem and

258
00:10:32,560 --> 00:10:34,780
ultimately went with the technologies I

259
00:10:34,780 --> 00:10:37,870
did so looking back at quadrant theory

260
00:10:37,870 --> 00:10:39,490
one of them to look at railway is your

261
00:10:39,490 --> 00:10:41,680
own ability to lead on a framework and

262
00:10:41,680 --> 00:10:43,600
in my case i'd recently shipped three

263
00:10:43,600 --> 00:10:45,880
major projects in ember angular and

264
00:10:45,880 --> 00:10:49,360
react given as the lead developer on a

265
00:10:49,360 --> 00:10:51,070
project i want to feel confident in the

266
00:10:51,070 --> 00:10:52,660
decisions I'm making about architecture

267
00:10:52,660 --> 00:10:54,520
I decided to go down the road with one

268
00:10:54,520 --> 00:10:57,190
of these three so how about sexiness I

269
00:10:57,190 --> 00:10:58,660
know one of the reasons I was lured to

270
00:10:58,660 --> 00:11:00,160
Reuters was that I got to help build

271
00:11:00,160 --> 00:11:02,170
that team and a big part of attracting

272
00:11:02,170 --> 00:11:04,630
that talent is that good tech stack so

273
00:11:04,630 --> 00:11:07,180
the new hotness was angular is angular 2

274
00:11:07,180 --> 00:11:09,340
and I never worked with that before and

275
00:11:09,340 --> 00:11:11,830
the api's and the language itself is

276
00:11:11,830 --> 00:11:14,230
extremely different so that eliminated

277
00:11:14,230 --> 00:11:15,630
that one for me

278
00:11:15,630 --> 00:11:18,720
just left me with reactant ember now

279
00:11:18,720 --> 00:11:20,700
both of these frameworks are proven to

280
00:11:20,700 --> 00:11:23,670
scale Facebook and Instagram use react

281
00:11:23,670 --> 00:11:26,970
apple and Heroku and others use ember so

282
00:11:26,970 --> 00:11:28,680
production readiness wasn't really an

283
00:11:28,680 --> 00:11:31,830
issue and that just left friendliness to

284
00:11:31,830 --> 00:11:34,620
new developers and truth be told I do

285
00:11:34,620 --> 00:11:37,500
feel like ember is a friendlier language

286
00:11:37,500 --> 00:11:39,380
to new door library to new developers

287
00:11:39,380 --> 00:11:42,210
because when you first see it jsx looks

288
00:11:42,210 --> 00:11:45,630
weird but quadrant theory does leave

289
00:11:45,630 --> 00:11:47,460
something important out and that is

290
00:11:47,460 --> 00:11:50,730
context now Reuters TV is not a

291
00:11:50,730 --> 00:11:52,860
data-driven application it's really just

292
00:11:52,860 --> 00:11:56,310
the view of the MVC and there's no

293
00:11:56,310 --> 00:11:59,040
writing to a database at all the entire

294
00:11:59,040 --> 00:12:01,470
application is driven by these tiny

295
00:12:01,470 --> 00:12:03,990
little UI components that have localized

296
00:12:03,990 --> 00:12:05,850
in global states it's really just a

297
00:12:05,850 --> 00:12:08,610
pretty video player and wouldn't you

298
00:12:08,610 --> 00:12:10,770
know it Facebook created react kind of

299
00:12:10,770 --> 00:12:13,620
to solve this exact issue so given the

300
00:12:13,620 --> 00:12:15,780
context of my application I decided to

301
00:12:15,780 --> 00:12:17,490
build it out and react it fit the bill

302
00:12:17,490 --> 00:12:21,150
exactly for what my app needed but the

303
00:12:21,150 --> 00:12:23,850
new developer bit the new developer

304
00:12:23,850 --> 00:12:25,950
friendliness bugged me a bit what

305
00:12:25,950 --> 00:12:28,320
exactly about react made it so

306
00:12:28,320 --> 00:12:30,600
complicated so I began to think about

307
00:12:30,600 --> 00:12:32,610
this question and I realized for me it

308
00:12:32,610 --> 00:12:34,800
wasn't react itself that was complicated

309
00:12:34,800 --> 00:12:37,560
it was actually the flux and Redux

310
00:12:37,560 --> 00:12:40,260
architecture that the whole community

311
00:12:40,260 --> 00:12:43,260
seems to evangelize almost every guide

312
00:12:43,260 --> 00:12:45,420
to beginning react today involves

313
00:12:45,420 --> 00:12:47,400
starting with some build tool rolling up

314
00:12:47,400 --> 00:12:49,650
a very foreign application architecture

315
00:12:49,650 --> 00:12:51,630
if you've never used flux and react

316
00:12:51,630 --> 00:12:54,120
before and did I really need all that

317
00:12:54,120 --> 00:12:57,720
for Reuters and the answer was no so in

318
00:12:57,720 --> 00:12:59,520
the first few months of building Reuters

319
00:12:59,520 --> 00:13:02,070
I build it out on a very lean list of

320
00:13:02,070 --> 00:13:05,070
libraries react a few utility libraries

321
00:13:05,070 --> 00:13:06,900
and web pack to package it all together

322
00:13:06,900 --> 00:13:10,080
and my application was fast simple and

323
00:13:10,080 --> 00:13:12,420
easy to understand and I felt like I

324
00:13:12,420 --> 00:13:14,010
could easily get someone who's never

325
00:13:14,010 --> 00:13:16,800
used react up to speed quickly and to

326
00:13:16,800 --> 00:13:18,750
this day we still use this flux list

327
00:13:18,750 --> 00:13:21,480
react stack to great success and I

328
00:13:21,480 --> 00:13:22,710
challenge you to think about everything

329
00:13:22,710 --> 00:13:25,500
you're bringing on before importing just

330
00:13:25,500 --> 00:13:26,790
what school at the moment in the

331
00:13:26,790 --> 00:13:28,740
community

332
00:13:28,740 --> 00:13:31,200
so unlike you all I did not have the

333
00:13:31,200 --> 00:13:32,760
benefit of seeing this talk before

334
00:13:32,760 --> 00:13:34,529
making these decisions and not

335
00:13:34,529 --> 00:13:37,620
everything went out that a hitch when I

336
00:13:37,620 --> 00:13:39,660
chose the build system for my app I went

337
00:13:39,660 --> 00:13:41,130
over my options just like I did for

338
00:13:41,130 --> 00:13:43,740
JavaScript and my decision-making came

339
00:13:43,740 --> 00:13:47,010
down to grunt gulp or web pack now I was

340
00:13:47,010 --> 00:13:48,690
already familiar with grunt and gulp but

341
00:13:48,690 --> 00:13:50,250
webpack was the new hot thing on the

342
00:13:50,250 --> 00:13:52,649
market and I decided to go against

343
00:13:52,649 --> 00:13:55,170
quadrant theory and use web pack despite

344
00:13:55,170 --> 00:13:58,920
not knowing anything about it and long

345
00:13:58,920 --> 00:14:01,020
story short my team is still learning

346
00:14:01,020 --> 00:14:03,779
and grappling with web pack I don't

347
00:14:03,779 --> 00:14:05,670
regret the decision to use it it's got a

348
00:14:05,670 --> 00:14:08,310
lot of pros and cons but I have had some

349
00:14:08,310 --> 00:14:10,050
embarrassing moments where I haven't

350
00:14:10,050 --> 00:14:11,760
known a quick fix for my team that I

351
00:14:11,760 --> 00:14:14,130
absolutely would have if I'd use grunt

352
00:14:14,130 --> 00:14:16,529
or Goulburn something I knew now luckily

353
00:14:16,529 --> 00:14:17,940
I made this mistake with our build

354
00:14:17,940 --> 00:14:20,040
system and not our actual application

355
00:14:20,040 --> 00:14:22,080
structure but it does go to show the

356
00:14:22,080 --> 00:14:24,720
importance of understanding technologies

357
00:14:24,720 --> 00:14:27,890
you decide to use on your own projects

358
00:14:27,890 --> 00:14:30,839
so the final thing you need to do after

359
00:14:30,839 --> 00:14:32,100
you figure out how you're going to work

360
00:14:32,100 --> 00:14:33,990
with design and product and which

361
00:14:33,990 --> 00:14:36,420
technologies you're going to use is set

362
00:14:36,420 --> 00:14:38,550
good standards for your team for the

363
00:14:38,550 --> 00:14:39,899
developers to come and for your own

364
00:14:39,899 --> 00:14:42,720
development one of the first things I

365
00:14:42,720 --> 00:14:44,970
did after choosing this text deck was

366
00:14:44,970 --> 00:14:47,100
work out the style guides for my team

367
00:14:47,100 --> 00:14:48,959
and I had to come up with answers for

368
00:14:48,959 --> 00:14:50,790
the following how are we going to

369
00:14:50,790 --> 00:14:53,459
standardize CSS how do we style it and

370
00:14:53,459 --> 00:14:55,649
document our JavaScript what does our

371
00:14:55,649 --> 00:14:57,870
actual project structure look like and

372
00:14:57,870 --> 00:15:00,240
how do I enforce it all and make sure

373
00:15:00,240 --> 00:15:02,940
that my developers are speaking the same

374
00:15:02,940 --> 00:15:06,990
language so just like everything in our

375
00:15:06,990 --> 00:15:08,940
community a lot of people have a lot of

376
00:15:08,940 --> 00:15:12,450
opinions about standardized CSS naming

377
00:15:12,450 --> 00:15:14,760
conventions and now there are some very

378
00:15:14,760 --> 00:15:17,640
strict systems out there like them and I

379
00:15:17,640 --> 00:15:19,350
think these are great for massive teams

380
00:15:19,350 --> 00:15:22,589
that need a lot of structure however to

381
00:15:22,589 --> 00:15:25,200
me bem felt like overkill for my product

382
00:15:25,200 --> 00:15:26,790
I felt like it ultimately would have

383
00:15:26,790 --> 00:15:28,829
slowed me down during a period where I

384
00:15:28,829 --> 00:15:31,560
needed to be prototyping and really

385
00:15:31,560 --> 00:15:33,540
throwing out features quickly to show

386
00:15:33,540 --> 00:15:36,360
progress and demonstrate confidence to

387
00:15:36,360 --> 00:15:39,810
my team so instead i opted for something

388
00:15:39,810 --> 00:15:41,370
out of one of my favorite TV character

389
00:15:41,370 --> 00:15:42,360
Ron Swanson's

390
00:15:42,360 --> 00:15:44,610
playbook straight down the middle no

391
00:15:44,610 --> 00:15:47,070
hook no fuss anything more and this

392
00:15:47,070 --> 00:15:51,360
becomes figure skating so translating

393
00:15:51,360 --> 00:15:55,380
that that mantra to CSS I came up with

394
00:15:55,380 --> 00:15:58,170
this dash is not underscores tabs not

395
00:15:58,170 --> 00:16:00,450
spaces no nesting more than three deep

396
00:16:00,450 --> 00:16:02,760
and just one file per component and this

397
00:16:02,760 --> 00:16:06,990
is where great for my team now figuring

398
00:16:06,990 --> 00:16:08,850
out the style guide for javascript was

399
00:16:08,850 --> 00:16:12,360
my next dilemma to wrestle with and as

400
00:16:12,360 --> 00:16:14,130
with choosing my JavaScript framework I

401
00:16:14,130 --> 00:16:16,620
weighed the context of my app heavily

402
00:16:16,620 --> 00:16:19,410
when deciding how to enforce JavaScript

403
00:16:19,410 --> 00:16:22,470
style with my team now if my app was a

404
00:16:22,470 --> 00:16:24,269
lot of boilerplate and standard app

405
00:16:24,269 --> 00:16:26,579
structures and BC sort of stuff I could

406
00:16:26,579 --> 00:16:28,279
have gotten away with your some sensible

407
00:16:28,279 --> 00:16:30,660
variable and method naming conventions

408
00:16:30,660 --> 00:16:32,850
and some selective comments on edge

409
00:16:32,850 --> 00:16:36,870
cases however as I said my application

410
00:16:36,870 --> 00:16:39,060
is really highly custom and all about

411
00:16:39,060 --> 00:16:41,940
these little UI components that aren't

412
00:16:41,940 --> 00:16:44,160
much boilerplate at all so for this

413
00:16:44,160 --> 00:16:46,140
reason I decided to enforce a much more

414
00:16:46,140 --> 00:16:48,690
robust commenting structure to help

415
00:16:48,690 --> 00:16:52,740
everyone stay on the same page so when I

416
00:16:52,740 --> 00:16:54,180
reflected on projects I've worked on

417
00:16:54,180 --> 00:16:55,920
from a style perspective I immediately

418
00:16:55,920 --> 00:16:57,630
gravitated towards the school go project

419
00:16:57,630 --> 00:16:59,579
I'd work on and while I didn't enjoy

420
00:16:59,579 --> 00:17:01,740
closure much I did appreciate the fact

421
00:17:01,740 --> 00:17:03,510
that all the developers on the project

422
00:17:03,510 --> 00:17:04,980
we're speaking the exact same language

423
00:17:04,980 --> 00:17:06,900
and all the codes seemed to come from

424
00:17:06,900 --> 00:17:10,079
the same developer when I think when all

425
00:17:10,079 --> 00:17:12,480
the code feels consistent it's easier to

426
00:17:12,480 --> 00:17:14,850
read and you can get in this rhythm of

427
00:17:14,850 --> 00:17:16,740
understanding and that can get broken

428
00:17:16,740 --> 00:17:19,439
when you're dealing with different

429
00:17:19,439 --> 00:17:20,910
blocks of code written in different

430
00:17:20,910 --> 00:17:24,510
styles so I adopted a lot from their

431
00:17:24,510 --> 00:17:27,000
style guide when defining how to write

432
00:17:27,000 --> 00:17:29,130
JavaScript on Reuters and it's been

433
00:17:29,130 --> 00:17:30,809
immensely helpful now that we have

434
00:17:30,809 --> 00:17:32,280
several developers working on the

435
00:17:32,280 --> 00:17:34,230
JavaScript code base so as you can see

436
00:17:34,230 --> 00:17:35,910
it's sort of like a.j s doc style

437
00:17:35,910 --> 00:17:39,870
comments and it really helps define what

438
00:17:39,870 --> 00:17:44,760
every little method and variable does so

439
00:17:44,760 --> 00:17:46,620
another subject that doesn't get a lot

440
00:17:46,620 --> 00:17:49,440
of love is directory structure and it's

441
00:17:49,440 --> 00:17:50,940
one of those decisions that you can sort

442
00:17:50,940 --> 00:17:52,710
of put off and before you know it you

443
00:17:52,710 --> 00:17:55,320
have this gnarly directory with tons

444
00:17:55,320 --> 00:17:57,660
files to sort through and it's just

445
00:17:57,660 --> 00:17:58,830
another decision that's going to be

446
00:17:58,830 --> 00:18:00,810
highly dependent based on your framework

447
00:18:00,810 --> 00:18:02,700
or build system and the context of your

448
00:18:02,700 --> 00:18:05,430
application but this is how i went about

449
00:18:05,430 --> 00:18:07,770
it one of the niftiest things about web

450
00:18:07,770 --> 00:18:10,170
pack is it takes a lot of the stress

451
00:18:10,170 --> 00:18:13,320
about complicated dependencies out of

452
00:18:13,320 --> 00:18:15,420
building an app you can import style

453
00:18:15,420 --> 00:18:17,910
sheets images and other dependencies

454
00:18:17,910 --> 00:18:19,800
directly into your JavaScript files

455
00:18:19,800 --> 00:18:21,570
creating these neat little bundles for

456
00:18:21,570 --> 00:18:24,240
your components as if importing your

457
00:18:24,240 --> 00:18:26,910
HTML into your JavaScript wasn't enough

458
00:18:26,910 --> 00:18:30,420
with react so given that I was already

459
00:18:30,420 --> 00:18:32,580
on the component game plan with react I

460
00:18:32,580 --> 00:18:34,140
decided to build out my project into

461
00:18:34,140 --> 00:18:35,820
just these little self-contained modules

462
00:18:35,820 --> 00:18:37,890
so each major component gets its own

463
00:18:37,890 --> 00:18:39,990
directory smaller sub components can

464
00:18:39,990 --> 00:18:41,340
live under them and all the dependencies

465
00:18:41,340 --> 00:18:43,740
live into these directories so here you

466
00:18:43,740 --> 00:18:45,420
can see a javascript file and a less

467
00:18:45,420 --> 00:18:49,110
file under its own directory and as a

468
00:18:49,110 --> 00:18:50,700
project grew in size ended up further

469
00:18:50,700 --> 00:18:53,010
segmenting these components down by

470
00:18:53,010 --> 00:18:54,540
their view sidebar in this case is

471
00:18:54,540 --> 00:18:57,290
shared so it lives in the shared folder

472
00:18:57,290 --> 00:19:00,480
so after you've figured out all the

473
00:19:00,480 --> 00:19:02,400
styles that you want to enforce on your

474
00:19:02,400 --> 00:19:04,440
project it's not just going to happen

475
00:19:04,440 --> 00:19:07,260
overnight with code reviews and telling

476
00:19:07,260 --> 00:19:09,360
your team how you'd like them to do it

477
00:19:09,360 --> 00:19:13,170
nicely so I turned to linting to help

478
00:19:13,170 --> 00:19:16,020
enforce them on my team and in the past

479
00:19:16,020 --> 00:19:18,000
I was familiar with closure compiler and

480
00:19:18,000 --> 00:19:21,030
Jas lint but now I was leveraging newer

481
00:19:21,030 --> 00:19:23,670
syntax with react in es6 on my project

482
00:19:23,670 --> 00:19:26,940
and these didn't quite fit the mold

483
00:19:26,940 --> 00:19:29,220
anymore so after some research i found

484
00:19:29,220 --> 00:19:32,550
es lint and that's been a fantastic tool

485
00:19:32,550 --> 00:19:35,160
for my team it allows you to really

486
00:19:35,160 --> 00:19:36,870
customize which rules you want to

487
00:19:36,870 --> 00:19:38,400
enforce and how you want to enforce them

488
00:19:38,400 --> 00:19:41,250
and even automatically fix them in your

489
00:19:41,250 --> 00:19:45,510
build process a final thing I did as the

490
00:19:45,510 --> 00:19:47,940
first engineer as the cherry on top to

491
00:19:47,940 --> 00:19:49,500
help bring all my style and structure

492
00:19:49,500 --> 00:19:51,480
decisions together was to create a

493
00:19:51,480 --> 00:19:53,580
boilerplate template for new components

494
00:19:53,580 --> 00:19:55,890
I was inspired by rails or angular

495
00:19:55,890 --> 00:19:58,110
scaffolding which allows you to quickly

496
00:19:58,110 --> 00:20:00,450
create and generate new components which

497
00:20:00,450 --> 00:20:02,100
automatically fit the style and

498
00:20:02,100 --> 00:20:04,440
structure of your application it's just

499
00:20:04,440 --> 00:20:06,090
a useful little touch you can do as the

500
00:20:06,090 --> 00:20:08,640
first engineer that will speed up your

501
00:20:08,640 --> 00:20:09,180
own career

502
00:20:09,180 --> 00:20:11,760
of new components as well as give other

503
00:20:11,760 --> 00:20:14,130
developers a jumpstart to creating their

504
00:20:14,130 --> 00:20:16,170
own features that match your projects

505
00:20:16,170 --> 00:20:20,160
feng shui so I've just touched on all

506
00:20:20,160 --> 00:20:21,780
the basic dilemmas that you're going to

507
00:20:21,780 --> 00:20:23,550
encounter is the first engineer and

508
00:20:23,550 --> 00:20:25,590
every organization is a totally

509
00:20:25,590 --> 00:20:27,780
different beast but just to recap I'm

510
00:20:27,780 --> 00:20:29,550
going to give you a battle plan to help

511
00:20:29,550 --> 00:20:31,680
you if you ever find yourself as the

512
00:20:31,680 --> 00:20:36,030
first engineer at a company so I'm going

513
00:20:36,030 --> 00:20:37,770
to break it into three phases the first

514
00:20:37,770 --> 00:20:42,020
phase is really about finding you're

515
00:20:42,020 --> 00:20:44,700
finding yourself within the organization

516
00:20:44,700 --> 00:20:46,560
you need to define your relationship

517
00:20:46,560 --> 00:20:49,230
with design and I mean you should get up

518
00:20:49,230 --> 00:20:52,080
and close with them and prototype and

519
00:20:52,080 --> 00:20:55,110
get on top of the features and really

520
00:20:55,110 --> 00:20:57,360
take an active role in defining what you

521
00:20:57,360 --> 00:20:58,440
guys are going to build you're going to

522
00:20:58,440 --> 00:21:00,630
find yourself way more invested in the

523
00:21:00,630 --> 00:21:02,730
product and you're going to find that

524
00:21:02,730 --> 00:21:05,580
the end results are much better and you

525
00:21:05,580 --> 00:21:07,110
can use this time to while you're

526
00:21:07,110 --> 00:21:09,600
prototyping to show it off and build

527
00:21:09,600 --> 00:21:12,270
trust with product owners CEOs people

528
00:21:12,270 --> 00:21:13,440
like that who are going to be really

529
00:21:13,440 --> 00:21:15,150
impressed by you and want to give you a

530
00:21:15,150 --> 00:21:17,280
seat at the decision-making table when

531
00:21:17,280 --> 00:21:19,050
deciding sort of where your product is

532
00:21:19,050 --> 00:21:21,360
going to go and you're going to use this

533
00:21:21,360 --> 00:21:23,340
phase where you're prototyping and

534
00:21:23,340 --> 00:21:26,070
looking at the features to look at the

535
00:21:26,070 --> 00:21:27,660
big picture requirements for your app

536
00:21:27,660 --> 00:21:29,370
and it's going to help you make informed

537
00:21:29,370 --> 00:21:31,950
technical decisions in the second phase

538
00:21:31,950 --> 00:21:34,770
which is choosing technologies and here

539
00:21:34,770 --> 00:21:36,120
you want to think about your CSS

540
00:21:36,120 --> 00:21:38,310
preprocessors your JavaScript frameworks

541
00:21:38,310 --> 00:21:40,260
or build system and you can use that

542
00:21:40,260 --> 00:21:42,510
quadrant theory i showed you to help

543
00:21:42,510 --> 00:21:44,730
rule stuff out and just rule of thumb to

544
00:21:44,730 --> 00:21:47,820
start be lean and rely on just a few

545
00:21:47,820 --> 00:21:49,620
workhorse frameworks that are tried and

546
00:21:49,620 --> 00:21:50,880
true and they're going to help you

547
00:21:50,880 --> 00:21:53,580
through the day finally phase 3 is just

548
00:21:53,580 --> 00:21:55,080
about building standards for your team

549
00:21:55,080 --> 00:21:59,100
set CSS styles set JavaScript styles and

550
00:21:59,100 --> 00:22:00,810
stick to them you're really going to

551
00:22:00,810 --> 00:22:02,640
thank yourself ten years from now when

552
00:22:02,640 --> 00:22:04,350
your code base is still maintainable and

553
00:22:04,350 --> 00:22:06,780
it's you're able to bring new developers

554
00:22:06,780 --> 00:22:10,050
on easily think about your directory set

555
00:22:10,050 --> 00:22:12,420
up early don't wait to the last minute

556
00:22:12,420 --> 00:22:14,060
or else it'll be a jumbled mess and

557
00:22:14,060 --> 00:22:17,040
finally find a way to enforce it besides

558
00:22:17,040 --> 00:22:18,570
just telling developers how you'd like

559
00:22:18,570 --> 00:22:21,210
it I use linting on my project it works

560
00:22:21,210 --> 00:22:22,250
pretty well it's

561
00:22:22,250 --> 00:22:24,130
automatically part of our build process

562
00:22:24,130 --> 00:22:27,890
and I first I dreaded those little red

563
00:22:27,890 --> 00:22:29,450
dots popping up on my coat every day but

564
00:22:29,450 --> 00:22:31,040
now I actually look forward to it

565
00:22:31,040 --> 00:22:32,960
because the code is really clean even

566
00:22:32,960 --> 00:22:35,750
when another developer touches it so

567
00:22:35,750 --> 00:22:37,820
thank you so much for coming to see me I

568
00:22:37,820 --> 00:22:40,370
hope this was helpful and I really hope

569
00:22:40,370 --> 00:22:41,720
you guys enjoy your stay in Iceland

