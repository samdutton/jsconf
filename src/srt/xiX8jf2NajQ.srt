1
00:00:06,799 --> 00:00:15,719

reject thank you for the intro can you

2
00:00:15,719 --> 00:00:19,619
hear me all right cool yeah so you could

3
00:00:19,619 --> 00:00:20,850
really hear Oh

4
00:00:20,850 --> 00:00:22,890
first of all hey reject is how are y'all

5
00:00:22,890 --> 00:00:28,439
doing nice I wanted to say a quick thank

6
00:00:28,439 --> 00:00:30,300
you to the organizers who were like very

7
00:00:30,300 --> 00:00:33,450
supportive in like making me like

8
00:00:33,450 --> 00:00:36,149
actually propose a talk and then Here I

9
00:00:36,149 --> 00:00:38,460
am standing talking to you and I'm

10
00:00:38,460 --> 00:00:41,610
thinking a very thankful for that as Yun

11
00:00:41,610 --> 00:00:43,020
said hi I'm Lisa

12
00:00:43,020 --> 00:00:47,360
um yes there is a hashtag with my name

13
00:00:47,360 --> 00:00:50,129
other ways of communicating with me are

14
00:00:50,129 --> 00:00:52,260
shooting me an email this is my

15
00:00:52,260 --> 00:00:53,789
preferred way and if you're really into

16
00:00:53,789 --> 00:00:56,100
social media I am NOT on Twitter that is

17
00:00:56,100 --> 00:00:58,199
the reason why there's this hashtag so

18
00:00:58,199 --> 00:01:00,059
people can talk about me without me

19
00:01:00,059 --> 00:01:04,530
being involved and but if you're really

20
00:01:04,530 --> 00:01:06,390
really into social media and you can

21
00:01:06,390 --> 00:01:08,760
find me with this handle this a wk3 arc

22
00:01:08,760 --> 00:01:10,500
on diaspora which is a super cool

23
00:01:10,500 --> 00:01:12,240
decentralized open-source social network

24
00:01:12,240 --> 00:01:13,680
and if you don't know what that is come

25
00:01:13,680 --> 00:01:17,700
talk to me afterwards yeah let's get

26
00:01:17,700 --> 00:01:21,119
started um exciting times we saw like in

27
00:01:21,119 --> 00:01:22,830
the first talk like Hardware hacks with

28
00:01:22,830 --> 00:01:25,740
JavaScript and it feels like this every

29
00:01:25,740 --> 00:01:27,750
day there's something new we get new

30
00:01:27,750 --> 00:01:30,570
browser api's we get new a new standard

31
00:01:30,570 --> 00:01:32,280
is released or a new best practice or

32
00:01:32,280 --> 00:01:34,590
somebody has an opinion an opinion on

33
00:01:34,590 --> 00:01:36,420
something and somebody else has a

34
00:01:36,420 --> 00:01:38,159
different opinion and you think like hmm

35
00:01:38,159 --> 00:01:41,340
what is my opinion on that thing yeah

36
00:01:41,340 --> 00:01:42,630
and there's all these things that come

37
00:01:42,630 --> 00:01:45,240
up and all the things that I read about

38
00:01:45,240 --> 00:01:47,280
and I feel like oh my god I really want

39
00:01:47,280 --> 00:01:48,780
to hack on this I want to get my hands

40
00:01:48,780 --> 00:01:50,100
dirty I want to like build something

41
00:01:50,100 --> 00:01:51,240
that's cool with like all the stuff that

42
00:01:51,240 --> 00:01:53,310
is now available and I can just do it in

43
00:01:53,310 --> 00:01:55,770
JavaScript because like the entry level

44
00:01:55,770 --> 00:01:59,189
to all these things is so low the thing

45
00:01:59,189 --> 00:02:02,369
is I don't know where to start

46
00:02:02,369 --> 00:02:04,530
I spent my day job mostly writing CSS

47
00:02:04,530 --> 00:02:06,350
with a little bit of JavaScript and

48
00:02:06,350 --> 00:02:09,300
we're using ember and there's not much

49
00:02:09,300 --> 00:02:11,160
time to experiment on like all these

50
00:02:11,160 --> 00:02:13,500
things that are so crazy and so cool

51
00:02:13,500 --> 00:02:17,250
and so I have like no no entry point

52
00:02:17,250 --> 00:02:19,800
really and also what would I built

53
00:02:19,800 --> 00:02:22,800
because so I'm working at Travis CI and

54
00:02:22,800 --> 00:02:24,390
we build continuous integration software

55
00:02:24,390 --> 00:02:26,850
and but this is nothing that I would do

56
00:02:26,850 --> 00:02:29,430
as like a pet or hobby project where I

57
00:02:29,430 --> 00:02:32,240
would rather do something else with

58
00:02:32,240 --> 00:02:36,240
basically anything else that is fun like

59
00:02:36,240 --> 00:02:39,470
really fun for me as a programmer

60
00:02:39,470 --> 00:02:43,260
something that's also fun for me is or

61
00:02:43,260 --> 00:02:46,680
are video games I've been a fan of video

62
00:02:46,680 --> 00:02:49,200
games for like a long long time I spend

63
00:02:49,200 --> 00:02:50,670
a lot of time in my youth

64
00:02:50,670 --> 00:02:52,680
playing video games and I think I've

65
00:02:52,680 --> 00:02:54,810
only grown more attached to them as I

66
00:02:54,810 --> 00:02:57,060
learned to program because I started to

67
00:02:57,060 --> 00:02:59,250
think about what is actually happening

68
00:02:59,250 --> 00:03:00,959
happening like in the back of a video

69
00:03:00,959 --> 00:03:04,110
game and I said I think about like how

70
00:03:04,110 --> 00:03:06,510
game design works and what is it that

71
00:03:06,510 --> 00:03:08,570
like in fast people was like really like

72
00:03:08,570 --> 00:03:12,500
making them obsessed with playing a game

73
00:03:12,500 --> 00:03:17,700
yeah so reasons why and I thought about

74
00:03:17,700 --> 00:03:19,170
a lot about that why I like video games

75
00:03:19,170 --> 00:03:20,850
so much and select the combination of

76
00:03:20,850 --> 00:03:25,019
all the all the things basically you not

77
00:03:25,019 --> 00:03:27,060
only have like visual and textual and

78
00:03:27,060 --> 00:03:28,739
audio information that goes into that

79
00:03:28,739 --> 00:03:31,019
it's like the combination of those and

80
00:03:31,019 --> 00:03:32,640
the set of rules that a game gives you

81
00:03:32,640 --> 00:03:37,050
to explore and explore not only the

82
00:03:37,050 --> 00:03:39,390
input and decide on the output of the

83
00:03:39,390 --> 00:03:41,910
game but everything else that is in

84
00:03:41,910 --> 00:03:48,090
between and the most like the thing that

85
00:03:48,090 --> 00:03:50,820
blew my mind at one point was wait I can

86
00:03:50,820 --> 00:03:52,799
control basically every aspect of the

87
00:03:52,799 --> 00:03:57,450
game with code that I write and from

88
00:03:57,450 --> 00:03:59,400
that point on it's like okay games are

89
00:03:59,400 --> 00:04:02,010
basically the canvas of what I can

90
00:04:02,010 --> 00:04:06,540
create and what I can like what I can

91
00:04:06,540 --> 00:04:12,299
make aside from a web app yeah

92
00:04:12,299 --> 00:04:14,400
so this is basically the thing where I

93
00:04:14,400 --> 00:04:17,820
say that games are art because a lot of

94
00:04:17,820 --> 00:04:19,979
people don't think that is true because

95
00:04:19,979 --> 00:04:21,780
for them video games are like shooting

96
00:04:21,780 --> 00:04:24,419
people which is still a big part of the

97
00:04:24,419 --> 00:04:26,700
game industry but this is not the part

98
00:04:26,700 --> 00:04:29,100
the game industry that I like and that I

99
00:04:29,100 --> 00:04:33,570
really really really really love so this

100
00:04:33,570 --> 00:04:36,150
is more about being creative with a

101
00:04:36,150 --> 00:04:40,680
medium so back in the beginning and

102
00:04:40,680 --> 00:04:42,510
there's lots of Technology especially on

103
00:04:42,510 --> 00:04:43,800
the web platform there's lots of

104
00:04:43,800 --> 00:04:46,560
technology that we can work on with

105
00:04:46,560 --> 00:04:49,680
JavaScript and then there's video games

106
00:04:49,680 --> 00:04:51,570
as like this medium that is defined by

107
00:04:51,570 --> 00:04:55,320
its credit creativity and those two

108
00:04:55,320 --> 00:04:57,690
together are just awesome and I like

109
00:04:57,690 --> 00:05:03,830
awesome do you like awesome I thought so

110
00:05:03,830 --> 00:05:10,020
yeah so this talk is called ukulele here

111
00:05:10,020 --> 00:05:11,880
this is why I'm introducing ukulele hero

112
00:05:11,880 --> 00:05:17,340
to you now people who are somewhat

113
00:05:17,340 --> 00:05:19,110
familiar with a similar sounding game

114
00:05:19,110 --> 00:05:21,150
called Guitar Hero was like I don't know

115
00:05:21,150 --> 00:05:23,940
if you heard of it it's a musical game

116
00:05:23,940 --> 00:05:27,450
where you play City play along to a song

117
00:05:27,450 --> 00:05:31,470
and you have a plastic guitar that is

118
00:05:31,470 --> 00:05:33,300
like aims to give you the feeling of

119
00:05:33,300 --> 00:05:35,490
like really being able to play a guitar

120
00:05:35,490 --> 00:05:40,560
and I thought hmm well there's this new

121
00:05:40,560 --> 00:05:43,650
cool thing which is like the Web Audio

122
00:05:43,650 --> 00:05:46,830
API and one year ago basically exactly

123
00:05:46,830 --> 00:05:49,020
one year ago at last year's Web Audio

124
00:05:49,020 --> 00:05:51,420
heck day and there's one this Saturday

125
00:05:51,420 --> 00:05:55,470
as well I for the first time touched the

126
00:05:55,470 --> 00:05:57,210
Web Audio API and it was kind of like oh

127
00:05:57,210 --> 00:05:58,770
my god there's so much stuff going on

128
00:05:58,770 --> 00:06:01,650
that I have no idea about I want to know

129
00:06:01,650 --> 00:06:04,410
more and this is like I started a lot

130
00:06:04,410 --> 00:06:06,300
about reading about the Web Audio API

131
00:06:06,300 --> 00:06:08,910
not understanding anything and reading

132
00:06:08,910 --> 00:06:10,350
more about it and still not

133
00:06:10,350 --> 00:06:12,900
understanding anything and this is like

134
00:06:12,900 --> 00:06:15,060
a long process that at one point

135
00:06:15,060 --> 00:06:20,000
accumulated in this torque so whoo yeah

136
00:06:20,000 --> 00:06:23,640
so I'm gonna like I'm gonna play the

137
00:06:23,640 --> 00:06:26,790
game now with you or for you and I hope

138
00:06:26,790 --> 00:06:29,040
you'll enjoy it I'm kind of proud of it

139
00:06:29,040 --> 00:06:31,650
but it doesn't look that good so this is

140
00:06:31,650 --> 00:06:34,650
like disclaimer this is a hack this is

141
00:06:34,650 --> 00:06:38,250
in no way anyway like something that

142
00:06:38,250 --> 00:06:39,490
would I should like

143
00:06:39,490 --> 00:06:41,710
I would show it to my friends and since

144
00:06:41,710 --> 00:06:42,910
we're all a community your are my

145
00:06:42,910 --> 00:06:45,220
friends so I will show it to you so this

146
00:06:45,220 --> 00:06:46,780
is demo time now

147
00:06:46,780 --> 00:06:51,460
I brought a ukulele and and I will know

148
00:06:51,460 --> 00:06:55,060
very elegantly switch to my play screen

149
00:06:55,060 --> 00:06:57,509
so yep

150
00:06:57,509 --> 00:07:04,180
matching slides and game so we start I

151
00:07:04,180 --> 00:07:07,599
get some I will get audio information

152
00:07:07,599 --> 00:07:09,460
from the microphone from the computer

153
00:07:09,460 --> 00:07:13,509
with getusermedia and I did not click

154
00:07:13,509 --> 00:07:17,259
right share please does it say share I

155
00:07:17,259 --> 00:07:22,360
can't even read it built-in microphone

156
00:07:22,360 --> 00:07:27,729
yes please share selected and it doesn't

157
00:07:27,729 --> 00:07:35,470
work that's great let's lose this one

158
00:07:35,470 --> 00:07:50,139
maybe no that's weird it works today I

159
00:07:50,139 --> 00:07:57,140
want to share please

160
00:07:57,150 --> 00:08:01,750
hmm okay can does someone if the other

161
00:08:01,750 --> 00:08:07,200
people know anything about this okay

162
00:08:07,210 --> 00:08:13,840
let's do it

163
00:08:13,850 --> 00:08:16,250
damnit I also did not prepare a

164
00:08:16,250 --> 00:08:22,670
recording of what I would do me great so

165
00:08:22,670 --> 00:08:26,870
what would happen is that it would get

166
00:08:26,870 --> 00:08:30,530
to a list that would tell me like to

167
00:08:30,530 --> 00:08:31,820
choose a song one of the songs that I

168
00:08:31,820 --> 00:08:35,870
prepared it would analyze the song life

169
00:08:35,870 --> 00:08:37,640
in the browser which is like really

170
00:08:37,640 --> 00:08:42,740
everything this was about and then draw

171
00:08:42,740 --> 00:08:49,040
and yes sorry it doesn't work in Chrome

172
00:08:49,040 --> 00:09:08,190
because it did yes oh okay

173
00:09:08,200 --> 00:09:16,920
No

174
00:09:16,930 --> 00:09:40,859
okay debugging I love it

175
00:09:40,869 --> 00:09:44,389
you think okay let's try it sorry I'll

176
00:09:44,389 --> 00:09:49,189
do people in my work let's make this

177
00:09:49,189 --> 00:09:56,420
work now

178
00:09:56,430 --> 00:10:00,800
mmm that is sad

179
00:10:00,800 --> 00:10:08,550
okay so I will just continue with the

180
00:10:08,550 --> 00:10:16,730
slides so no demo time I'm sorry if I

181
00:10:16,730 --> 00:10:21,600
can play your song I have to kind of

182
00:10:21,600 --> 00:10:23,550
because I like this is really bad

183
00:10:23,550 --> 00:10:27,020
who here knows the show Adventure Time

184
00:10:27,020 --> 00:10:29,760
okay do you do you want to sing along

185
00:10:29,760 --> 00:10:30,450
with me

186
00:10:30,450 --> 00:10:33,690
The Adventure Time theme song can you do

187
00:10:33,690 --> 00:10:35,790
that okay

188
00:10:35,790 --> 00:10:39,180
sorry Adventure Time come on grab your

189
00:10:39,180 --> 00:10:43,260
friends we go to very distant lands Jake

190
00:10:43,260 --> 00:10:46,260
the dog and Finn the human the fun will

191
00:10:46,260 --> 00:10:59,699
never end it's adventure time thank you

192
00:10:59,709 --> 00:11:02,270
just imagine that with basically a

193
00:11:02,270 --> 00:11:05,540
little illustration of look like the

194
00:11:05,540 --> 00:11:09,080
charts I was playing but yeah anyway if

195
00:11:09,080 --> 00:11:10,700
this would have worked

196
00:11:10,700 --> 00:11:14,380
I would now explain you how it works

197
00:11:14,380 --> 00:11:18,680
yeah so I would have loaded and analyzed

198
00:11:18,680 --> 00:11:20,959
the song there was a song that I picked

199
00:11:20,959 --> 00:11:22,370
from SoundCloud from a Creative Commons

200
00:11:22,370 --> 00:11:27,920
license and then I would get like the

201
00:11:27,920 --> 00:11:29,930
analyze get the life input from the

202
00:11:29,930 --> 00:11:31,580
ukulele through the microphone which did

203
00:11:31,580 --> 00:11:33,500
not work and this is like the weird part

204
00:11:33,500 --> 00:11:36,290
because that always works

205
00:11:36,290 --> 00:11:38,779
and then I build like a little game

206
00:11:38,779 --> 00:11:41,450
structure around it to like compare what

207
00:11:41,450 --> 00:11:43,910
I have calculated before and the input

208
00:11:43,910 --> 00:11:47,570
that I gave it life and yeah make it

209
00:11:47,570 --> 00:11:53,720
pretty in quotes so in depth the song I

210
00:11:53,720 --> 00:11:57,560
don't know if like who here has like try

211
00:11:57,560 --> 00:12:01,640
it out Web Audio API at one point okay a

212
00:12:01,640 --> 00:12:05,390
few so what you usually start is start

213
00:12:05,390 --> 00:12:07,279
with is creating an audio context and

214
00:12:07,279 --> 00:12:09,920
from that audio context you get all the

215
00:12:09,920 --> 00:12:11,690
other nodes that you like connect and

216
00:12:11,690 --> 00:12:13,399
then at one point you have this like

217
00:12:13,399 --> 00:12:15,860
long pipeline of the input that

218
00:12:15,860 --> 00:12:20,630
eventually goes and output in your your

219
00:12:20,630 --> 00:12:22,940
speakers and then you do stuff in the

220
00:12:22,940 --> 00:12:25,010
middle with it and this is also how I

221
00:12:25,010 --> 00:12:26,720
started when I thought about how can I

222
00:12:26,720 --> 00:12:31,279
analyze the song turns out like this is

223
00:12:31,279 --> 00:12:33,260
really really great for having like real

224
00:12:33,260 --> 00:12:35,660
timeline analysis of the of the audio

225
00:12:35,660 --> 00:12:40,160
source like what I would do with ukulele

226
00:12:40,160 --> 00:12:43,180
but not if I want to like analyze a song

227
00:12:43,180 --> 00:12:47,420
upfront yeah because I actually needed

228
00:12:47,420 --> 00:12:49,579
to need faster processing of the sort of

229
00:12:49,579 --> 00:12:51,589
the source material and therefore

230
00:12:51,589 --> 00:12:53,690
there's a fairly new thing that I only

231
00:12:53,690 --> 00:12:55,640
found out by accident because I was on

232
00:12:55,640 --> 00:12:58,070
Stack Overflow wondering like why can't

233
00:12:58,070 --> 00:13:00,940
I like process these things faster and

234
00:13:00,940 --> 00:13:05,709
there is offline audio context who knew

235
00:13:05,709 --> 00:13:08,990
they didn't ended will like what offline

236
00:13:08,990 --> 00:13:11,079
audio context does it will analyze data

237
00:13:11,079 --> 00:13:13,100
the audio data

238
00:13:13,100 --> 00:13:15,320
fast as it can and here's the thing why

239
00:13:15,320 --> 00:13:17,540
it won't work in chrome because there's

240
00:13:17,540 --> 00:13:20,240
a bug in Chrome apparently that just

241
00:13:20,240 --> 00:13:22,910
like that the processing happens so fast

242
00:13:22,910 --> 00:13:26,510
and that it will skip a lot of samples

243
00:13:26,510 --> 00:13:29,270
and we'll get like a very inaccurate and

244
00:13:29,270 --> 00:13:32,060
very like faulty kind of result but it

245
00:13:32,060 --> 00:13:34,370
works in Firefox this is why I'm I need

246
00:13:34,370 --> 00:13:38,000
to use Firefox which I usually do and so

247
00:13:38,000 --> 00:13:41,780
that's cool offline audio context as

248
00:13:41,780 --> 00:13:45,020
compared like in as opposed to the usual

249
00:13:45,020 --> 00:13:47,660
audio context takes three arguments and

250
00:13:47,660 --> 00:13:49,940
the first one is the channel or the

251
00:13:49,940 --> 00:13:52,310
number of channels you want to have the

252
00:13:52,310 --> 00:13:54,620
second one is the length of a buffer and

253
00:13:54,620 --> 00:13:56,510
the third one is the sample rate and

254
00:13:56,510 --> 00:14:00,290
these are all like very weird like

255
00:14:00,290 --> 00:14:02,510
things that you need to give to an audio

256
00:14:02,510 --> 00:14:04,520
context and I also had no idea this is

257
00:14:04,520 --> 00:14:06,380
why we have a little intermission where

258
00:14:06,380 --> 00:14:09,140
I try to explain these things to you

259
00:14:09,140 --> 00:14:11,990
because nobody explains them on the

260
00:14:11,990 --> 00:14:14,510
internet really and this it was a long

261
00:14:14,510 --> 00:14:16,430
journey through a lot of Wikipedia

262
00:14:16,430 --> 00:14:19,970
entries and Stack Exchange physics kind

263
00:14:19,970 --> 00:14:23,330
of things okay I think I understand it

264
00:14:23,330 --> 00:14:27,050
and everything starts with sounds so

265
00:14:27,050 --> 00:14:29,690
let's take like take a step back from

266
00:14:29,690 --> 00:14:32,860
like Web Audio and talk about physics

267
00:14:32,860 --> 00:14:35,990
sounds sound comes in periodic waves

268
00:14:35,990 --> 00:14:39,320
they look like this kind of without the

269
00:14:39,320 --> 00:14:43,360
colors

270
00:14:43,370 --> 00:14:45,949
yeah so we have like different kinds of

271
00:14:45,949 --> 00:14:49,589
wave shapes and this in this case it's

272
00:14:49,589 --> 00:14:51,630
like a sine wave so it's like very even

273
00:14:51,630 --> 00:14:54,930
and the interesting thing like about

274
00:14:54,930 --> 00:14:56,910
these ways is that we can measure them

275
00:14:56,910 --> 00:15:00,569
and we measure the frequency which is

276
00:15:00,569 --> 00:15:03,810
the pattern and then a number of times

277
00:15:03,810 --> 00:15:05,970
the wave pattern repeats a within a

278
00:15:05,970 --> 00:15:10,380
second so you have like a wave pattern

279
00:15:10,380 --> 00:15:12,509
starts at 0 it will peak to the top it

280
00:15:12,509 --> 00:15:14,550
will peak down and then it will hit zero

281
00:15:14,550 --> 00:15:21,660
again and this one cycle of the 1 cycle

282
00:15:21,660 --> 00:15:25,829
is basically the number of times this

283
00:15:25,829 --> 00:15:28,800
repeats within a second is what we call

284
00:15:28,800 --> 00:15:30,509
the frequency it's not its measured in

285
00:15:30,509 --> 00:15:35,040
Hertz so when I go back to this one the

286
00:15:35,040 --> 00:15:38,100
pink wave will have like a very high

287
00:15:38,100 --> 00:15:40,199
frequency because it repeats more often

288
00:15:40,199 --> 00:15:42,660
and the red one at the top will have a

289
00:15:42,660 --> 00:15:45,089
low frequency because it takes longer to

290
00:15:45,089 --> 00:15:50,490
repeat itself what does this tell us

291
00:15:50,490 --> 00:15:53,220
so you might be familiar with another

292
00:15:53,220 --> 00:15:56,009
word which is pitch and the pitch is

293
00:15:56,009 --> 00:15:59,160
basically just the way we perceive these

294
00:15:59,160 --> 00:16:02,910
frequencies so a high frequency is

295
00:16:02,910 --> 00:16:05,399
perceived as a higher pitch and a low

296
00:16:05,399 --> 00:16:08,509
frequency is perceived as a lower pitch

297
00:16:08,509 --> 00:16:10,829
that might sound simple but it took me a

298
00:16:10,829 --> 00:16:13,949
long time to understand that but now we

299
00:16:13,949 --> 00:16:18,439
know that we can go a bit further

300
00:16:18,439 --> 00:16:20,970
because for the analysis of audio of

301
00:16:20,970 --> 00:16:23,910
audio data we're talking about simple

302
00:16:23,910 --> 00:16:26,970
frames and this respect to like 3

303
00:16:26,970 --> 00:16:29,220
arguments that we need one was channel

304
00:16:29,220 --> 00:16:32,160
then we have the passer size and then

305
00:16:32,160 --> 00:16:36,410
the sample rate and the same here's a

306
00:16:36,410 --> 00:16:38,939
diagram that kind of shows where

307
00:16:38,939 --> 00:16:41,850
channels and samples and frames fit

308
00:16:41,850 --> 00:16:45,360
together so channels are played in

309
00:16:45,360 --> 00:16:46,860
parallel in this case we have two

310
00:16:46,860 --> 00:16:50,069
channels stereo like stereo so we have

311
00:16:50,069 --> 00:16:51,569
left and a right channel we can also

312
00:16:51,569 --> 00:16:53,130
only have one channel which is what I

313
00:16:53,130 --> 00:16:55,500
was using because it's way easier to buy

314
00:16:55,500 --> 00:16:58,010
do math with only one and A two or even

315
00:16:58,010 --> 00:17:01,350
six channels or you can go up to a 32 if

316
00:17:01,350 --> 00:17:02,970
you want or if you have like a real use

317
00:17:02,970 --> 00:17:09,090
case and per frame all the samples of

318
00:17:09,090 --> 00:17:12,450
the like the samples of a channel are

319
00:17:12,450 --> 00:17:15,270
played in parallel in one frame and then

320
00:17:15,270 --> 00:17:17,240
you go frame by frame by frame and have

321
00:17:17,240 --> 00:17:23,910
samples per channel per frame and this

322
00:17:23,910 --> 00:17:25,410
is like the way we analyze the audio

323
00:17:25,410 --> 00:17:29,040
data in respect to time and so what are

324
00:17:29,040 --> 00:17:30,270
all the lengths and the sample rate that

325
00:17:30,270 --> 00:17:32,370
we give to the audio context length is

326
00:17:32,370 --> 00:17:35,180
the sample is the size of sample frames

327
00:17:35,180 --> 00:17:38,640
so and the sample rate is the number of

328
00:17:38,640 --> 00:17:44,100
sample frames per second so I chose one

329
00:17:44,100 --> 00:17:46,560
channel so that I can have a sample rate

330
00:17:46,560 --> 00:17:51,690
of 44,000 100 Hertz this is like the

331
00:17:51,690 --> 00:17:54,000
number of frames that we pass per second

332
00:17:54,000 --> 00:17:59,580
so 44100 two frames per second and the

333
00:17:59,580 --> 00:18:00,900
length of the buffer that we need to

334
00:18:00,900 --> 00:18:04,170
store this data is basically these this

335
00:18:04,170 --> 00:18:07,590
amount of samples per second which is

336
00:18:07,590 --> 00:18:12,570
why I so I chose a sample like an audio

337
00:18:12,570 --> 00:18:14,850
sample of 60 seconds so I would need the

338
00:18:14,850 --> 00:18:21,020
length of the sample rate per like times

339
00:18:21,020 --> 00:18:26,800
the seconds I hope I said that right

340
00:18:26,810 --> 00:18:30,350
yeah so end of intermission so we like

341
00:18:30,350 --> 00:18:32,280
basically need to I'm just like or I

342
00:18:32,280 --> 00:18:35,850
need to understand how we like how live

343
00:18:35,850 --> 00:18:38,010
audio processes audio data and all the

344
00:18:38,010 --> 00:18:40,470
parameters that go into it just to like

345
00:18:40,470 --> 00:18:47,100
load a song with an like simple request

346
00:18:47,100 --> 00:18:50,130
which yeah so I'll get the song from

347
00:18:50,130 --> 00:18:53,640
that I uploaded and have to run all

348
00:18:53,640 --> 00:18:56,940
these I don't even run anything at this

349
00:18:56,940 --> 00:18:58,260
point I just need to understand what I'm

350
00:18:58,260 --> 00:19:01,470
doing and what kind of data I get next

351
00:19:01,470 --> 00:19:03,120
up I hook up and analyze a node which is

352
00:19:03,120 --> 00:19:07,170
the standard like it's a node that comes

353
00:19:07,170 --> 00:19:09,120
with the Web Audio

354
00:19:09,120 --> 00:19:14,309
context and it gives you like data of

355
00:19:14,309 --> 00:19:17,970
the of the input source like the sound

356
00:19:17,970 --> 00:19:21,659
or the file that you upload you created

357
00:19:21,659 --> 00:19:27,179
from the context and we or i define a

358
00:19:27,179 --> 00:19:30,570
the FFT size of the of the analyzer node

359
00:19:30,570 --> 00:19:32,460
F of T stands for fast Fourier

360
00:19:32,460 --> 00:19:36,720
transformation I think which is a way or

361
00:19:36,720 --> 00:19:38,549
an algorithm that analyze the sound data

362
00:19:38,549 --> 00:19:40,559
it's built into Web Audio API so you

363
00:19:40,559 --> 00:19:41,999
don't have to understand what's going on

364
00:19:41,999 --> 00:19:45,720
because this is crazy and what the

365
00:19:45,720 --> 00:19:48,389
number is it's a number that needs to be

366
00:19:48,389 --> 00:19:52,350
a power of two and this later influences

367
00:19:52,350 --> 00:19:55,440
the way we received the samples from our

368
00:19:55,440 --> 00:20:00,740
analyzing part I chose 4096

369
00:20:00,740 --> 00:20:03,649
maybe remember that it will come back

370
00:20:03,649 --> 00:20:05,730
what else do I have I have a script

371
00:20:05,730 --> 00:20:08,340
processor node which is also note of the

372
00:20:08,340 --> 00:20:13,619
web audio context and the way this works

373
00:20:13,619 --> 00:20:16,440
is the fun thing is actually that the

374
00:20:16,440 --> 00:20:18,090
documentation already says that the

375
00:20:18,090 --> 00:20:20,240
script processor note is deprecated

376
00:20:20,240 --> 00:20:22,860
without having the successor which is

377
00:20:22,860 --> 00:20:25,830
the audio worker implemented in any

378
00:20:25,830 --> 00:20:30,149
browser which is yeah I don't know yeah

379
00:20:30,149 --> 00:20:32,309
so I like basically needed to work with

380
00:20:32,309 --> 00:20:33,690
something that is already deprecated

381
00:20:33,690 --> 00:20:35,399
because the successor is not yet there

382
00:20:35,399 --> 00:20:40,259
cool but it works but the the script the

383
00:20:40,259 --> 00:20:42,299
processor node and gets three arguments

384
00:20:42,299 --> 00:20:44,129
the first one is also by the power of

385
00:20:44,129 --> 00:20:49,499
two it's the amount of samples it it

386
00:20:49,499 --> 00:20:51,960
takes like four one cycle of processing

387
00:20:51,960 --> 00:20:56,100
and an output like output and input and

388
00:20:56,100 --> 00:20:59,850
output connections which is in both

389
00:20:59,850 --> 00:21:02,999
cases one for me because I like to keep

390
00:21:02,999 --> 00:21:07,320
things simple so that they work and the

391
00:21:07,320 --> 00:21:08,999
processor node comes with an audio

392
00:21:08,999 --> 00:21:11,970
process event and here's an interesting

393
00:21:11,970 --> 00:21:14,070
part where I like hook up the analyzer

394
00:21:14,070 --> 00:21:18,539
node to get the data and the data that

395
00:21:18,539 --> 00:21:21,460
we get is called byte frequency data

396
00:21:21,460 --> 00:21:24,010
and I think some for another

397
00:21:24,010 --> 00:21:25,990
intermission because I talk a lot and I

398
00:21:25,990 --> 00:21:27,640
took fast and this is all these weird

399
00:21:27,640 --> 00:21:32,320
words the FFT data that we get from the

400
00:21:32,320 --> 00:21:35,409
analyzer node it looks like this

401
00:21:35,409 --> 00:21:38,350
and in my case I would get an array that

402
00:21:38,350 --> 00:21:42,490
has length of 161 like elements in an

403
00:21:42,490 --> 00:21:44,320
array this is calculated from the

404
00:21:44,320 --> 00:21:47,890
original sample rates from the audio

405
00:21:47,890 --> 00:21:53,200
context divided by the sample rate of

406
00:21:53,200 --> 00:21:56,140
this processor node which in this case

407
00:21:56,140 --> 00:21:58,750
yields 161 so I can adjust these numbers

408
00:21:58,750 --> 00:22:02,080
to get more or less and every element in

409
00:22:02,080 --> 00:22:05,860
itself is an unsigned you you into eight

410
00:22:05,860 --> 00:22:08,529
array which is an error like structured

411
00:22:08,529 --> 00:22:10,570
for dealing with binary data in your

412
00:22:10,570 --> 00:22:16,169
browser and each of these areas has 2048

413
00:22:16,169 --> 00:22:19,090
like value pairs and this is like the

414
00:22:19,090 --> 00:22:23,470
half of the half of the rate that I gave

415
00:22:23,470 --> 00:22:28,510
to the analyzer node which was 4096 so I

416
00:22:28,510 --> 00:22:30,370
get like half of this so you need to

417
00:22:30,370 --> 00:22:32,260
remind yourself that like you will

418
00:22:32,260 --> 00:22:34,809
always lose some sort of you will lose a

419
00:22:34,809 --> 00:22:37,630
lot of information or samples along the

420
00:22:37,630 --> 00:22:40,029
way so start high and you will in the

421
00:22:40,029 --> 00:22:41,440
end you need to get something that is

422
00:22:41,440 --> 00:22:45,370
still kind of a decent output out of the

423
00:22:45,370 --> 00:22:50,140
data within DV like the you I call them

424
00:22:50,140 --> 00:22:51,450
you into eight areas but I don't know

425
00:22:51,450 --> 00:22:55,330
look like and they look like this so you

426
00:22:55,330 --> 00:22:58,299
always have the key and like some value

427
00:22:58,299 --> 00:23:00,100
and that the first like I had this in my

428
00:23:00,100 --> 00:23:02,289
console I was like what what is this

429
00:23:02,289 --> 00:23:05,020
like I thought about like I would get a

430
00:23:05,020 --> 00:23:07,020
frequency or something and then

431
00:23:07,020 --> 00:23:08,950
something related to the frequency

432
00:23:08,950 --> 00:23:10,480
because that's what the thing should do

433
00:23:10,480 --> 00:23:16,720
analyze my audio data so I yeah I was

434
00:23:16,720 --> 00:23:18,970
reading some Stack Exchange thread where

435
00:23:18,970 --> 00:23:21,070
someone is like I want to do like fast

436
00:23:21,070 --> 00:23:22,840
Fourier transformation but what do I do

437
00:23:22,840 --> 00:23:24,549
with the data that I get and then I

438
00:23:24,549 --> 00:23:27,880
understood that every key corresponds to

439
00:23:27,880 --> 00:23:30,700
a frequency already and the value that

440
00:23:30,700 --> 00:23:33,970
we have here is which is always like a

441
00:23:33,970 --> 00:23:34,940
value between one

442
00:23:34,940 --> 00:23:39,320
and 255 which is like how like the

443
00:23:39,320 --> 00:23:41,179
volume or like the the magnitude of that

444
00:23:41,179 --> 00:23:43,720
frequency within the sample that we have

445
00:23:43,720 --> 00:23:46,940
so there's a lot of them in this like

446
00:23:46,940 --> 00:23:48,229
the little screenshot that we have here

447
00:23:48,229 --> 00:23:52,309
key 14 would be like the the strongest

448
00:23:52,309 --> 00:23:57,019
like the highest magnitude and for the

449
00:23:57,019 --> 00:23:58,639
kind of analysis that I did because I

450
00:23:58,639 --> 00:23:59,690
have no idea what I'm doing

451
00:23:59,690 --> 00:24:02,809
I just thought mmm I just like pick the

452
00:24:02,809 --> 00:24:04,879
key with the highest value and that is

453
00:24:04,879 --> 00:24:06,529
kind of like the core that I would be

454
00:24:06,529 --> 00:24:08,720
playing which is like a very very very

455
00:24:08,720 --> 00:24:11,989
very simplified solution to the problem

456
00:24:11,989 --> 00:24:14,210
that I had of like getting a chord from

457
00:24:14,210 --> 00:24:18,979
my audio sample data yeah

458
00:24:18,979 --> 00:24:20,960
the way that you calculate the actual

459
00:24:20,960 --> 00:24:26,210
frequency from this is kind of still

460
00:24:26,210 --> 00:24:28,639
another like weird thing that I needed

461
00:24:28,639 --> 00:24:32,809
to figure out so I from my all my

462
00:24:32,809 --> 00:24:35,119
samples like the the very long areas I

463
00:24:35,119 --> 00:24:37,489
always took the the biggest value and

464
00:24:37,489 --> 00:24:44,330
the key and the key that I get so the

465
00:24:44,330 --> 00:24:47,570
the samples that the FTT data gets me is

466
00:24:47,570 --> 00:24:50,749
always within the the range of what is

467
00:24:50,749 --> 00:24:53,330
here belen hertz frequency to the human

468
00:24:53,330 --> 00:24:57,950
ear so humans can perceive frequencies

469
00:24:57,950 --> 00:25:01,039
between 20 Hertz and 20,000 Hertz and in

470
00:25:01,039 --> 00:25:03,139
the beginning I started with forty four

471
00:25:03,139 --> 00:25:05,330
thousand one hundred Hertz and I will

472
00:25:05,330 --> 00:25:07,879
lose like kind of half of it in the in

473
00:25:07,879 --> 00:25:09,889
the analyzing process so I would still

474
00:25:09,889 --> 00:25:13,009
end up with more frequencies available

475
00:25:13,009 --> 00:25:16,639
to analyze than humans can hear which is

476
00:25:16,639 --> 00:25:23,289
cool so I can like cover all that and

477
00:25:23,289 --> 00:25:26,299
this the range that I then get is then

478
00:25:26,299 --> 00:25:27,940
divided again by the keys so I can

479
00:25:27,940 --> 00:25:30,950
recalculate the key that corresponds to

480
00:25:30,950 --> 00:25:32,779
a frequency and once I have the

481
00:25:32,779 --> 00:25:34,970
frequency I can look up what this would

482
00:25:34,970 --> 00:25:38,269
be as a musical note because those are

483
00:25:38,269 --> 00:25:40,460
just basically every frequency

484
00:25:40,460 --> 00:25:45,320
corresponds to a musical note this would

485
00:25:45,320 --> 00:25:46,489
be so much cooler if you had actually

486
00:25:46,489 --> 00:25:50,790
seen the game and

487
00:25:50,800 --> 00:25:54,890
mmm-hmm you have it okay

488
00:25:54,890 --> 00:25:58,310
he has it working okay I will like we'll

489
00:25:58,310 --> 00:26:00,320
try again in the end because I'm kind of

490
00:26:00,320 --> 00:26:01,190
almost done

491
00:26:01,190 --> 00:26:03,020
because part two the input that did not

492
00:26:03,020 --> 00:26:06,710
work this is actually all done by Chris

493
00:26:06,710 --> 00:26:08,990
Wilson who does a lot of cool web audio

494
00:26:08,990 --> 00:26:13,580
hacks and he made a pitch detector which

495
00:26:13,580 --> 00:26:16,640
I found really cool and I yeah basically

496
00:26:16,640 --> 00:26:18,320
took his code from the pitch detection

497
00:26:18,320 --> 00:26:22,310
and made it so it like fits within the

498
00:26:22,310 --> 00:26:25,370
game but he does he gets the request

499
00:26:25,370 --> 00:26:28,040
like he gets the user media like the

500
00:26:28,040 --> 00:26:31,250
audio stream uses dead stream as a

501
00:26:31,250 --> 00:26:32,840
source for an audio context where I

502
00:26:32,840 --> 00:26:36,080
would use in my offline in my offline

503
00:26:36,080 --> 00:26:38,780
analysis would use a song or like an

504
00:26:38,780 --> 00:26:42,080
audio file and he also uses an island as

505
00:26:42,080 --> 00:26:44,540
a node to get the data but he does

506
00:26:44,540 --> 00:26:46,130
different that he uses like an actual

507
00:26:46,130 --> 00:26:48,140
algorithm and an autocorrelation

508
00:26:48,140 --> 00:26:51,380
algorithm to determine the actual input

509
00:26:51,380 --> 00:26:55,070
frequency where I just like hacked

510
00:26:55,070 --> 00:26:56,690
something together that kind of worked

511
00:26:56,690 --> 00:27:00,530
for me which is cool yeah so if you want

512
00:27:00,530 --> 00:27:02,150
to know if you read if you want to read

513
00:27:02,150 --> 00:27:05,060
about autocorrelation there is a lot of

514
00:27:05,060 --> 00:27:06,740
stuff on Wikipedia I just stopped after

515
00:27:06,740 --> 00:27:09,530
the intro because I don't I couldn't get

516
00:27:09,530 --> 00:27:14,270
my head around it which is fine it I was

517
00:27:14,270 --> 00:27:15,560
part of the the game that I was working

518
00:27:15,560 --> 00:27:22,790
on okay so we had like the the the song

519
00:27:22,790 --> 00:27:24,470
that I would load that like most of the

520
00:27:24,470 --> 00:27:26,420
code came from me the second part of the

521
00:27:26,420 --> 00:27:28,580
input that came from Chris Wilson's

522
00:27:28,580 --> 00:27:31,550
pitch detection and then I have like the

523
00:27:31,550 --> 00:27:33,230
actual game like the interface and how

524
00:27:33,230 --> 00:27:34,850
everything goes together I like to call

525
00:27:34,850 --> 00:27:37,700
it the spaghetti code because it's just

526
00:27:37,700 --> 00:27:40,370
like making things work in whatever kind

527
00:27:40,370 --> 00:27:42,970
of way and thinking about the logic and

528
00:27:42,970 --> 00:27:44,480
what could I do

529
00:27:44,480 --> 00:27:47,750
so what would have been is like I would

530
00:27:47,750 --> 00:27:51,080
fire events every time like I detect the

531
00:27:51,080 --> 00:27:54,770
chord change in the data and once I get

532
00:27:54,770 --> 00:27:56,179
to take like a chord change in the the

533
00:27:56,179 --> 00:27:59,000
sound that I'm that in the song that I

534
00:27:59,000 --> 00:28:01,100
analyzed I would fire an event that

535
00:28:01,100 --> 00:28:01,309
would

536
00:28:01,309 --> 00:28:04,370
then check the life input data for like

537
00:28:04,370 --> 00:28:07,549
hey do these chords match and I just in

538
00:28:07,549 --> 00:28:10,190
this case I only compare the actual

539
00:28:10,190 --> 00:28:12,169
musical notes that I calculated and not

540
00:28:12,169 --> 00:28:16,480
the frequencies because the the

541
00:28:16,480 --> 00:28:19,639
frequency spans from the life input and

542
00:28:19,639 --> 00:28:22,490
the offline are they diverged a lot in

543
00:28:22,490 --> 00:28:25,789
the process then I made up a scoring

544
00:28:25,789 --> 00:28:29,210
system where I like calculated basically

545
00:28:29,210 --> 00:28:31,549
the percentage on based upon the amount

546
00:28:31,549 --> 00:28:34,490
of chord changes and then I had some

547
00:28:34,490 --> 00:28:37,249
visuals like some simple drawings on a

548
00:28:37,249 --> 00:28:39,710
canvas with bars that I calculated from

549
00:28:39,710 --> 00:28:45,230
again the transformation data and then

550
00:28:45,230 --> 00:28:46,940
it would have been done yes and it

551
00:28:46,940 --> 00:28:51,559
worked kind of I will try again now for

552
00:28:51,559 --> 00:28:54,129
some reason what browser did you use

553
00:28:54,129 --> 00:28:59,679
same cool yeah maybe it was just weird

554
00:28:59,679 --> 00:29:09,499
one last time no can we hook it up okay

555
00:29:09,499 --> 00:29:12,799
I will quickly end the presentation

556
00:29:12,799 --> 00:29:15,200
because I think two more slides one is

557
00:29:15,200 --> 00:29:17,809
thank you so much for like you as

558
00:29:17,809 --> 00:29:20,509
community to the people who write the

559
00:29:20,509 --> 00:29:22,580
Mozilla developer Network articles and

560
00:29:22,580 --> 00:29:24,649
documentation people hanging out in the

561
00:29:24,649 --> 00:29:27,019
web audio slack and all other support

562
00:29:27,019 --> 00:29:28,279
channels and select the people who

563
00:29:28,279 --> 00:29:30,529
answer questions in-depth on Stack

564
00:29:30,529 --> 00:29:34,730
Overflow this is like I like this

565
00:29:34,730 --> 00:29:36,320
community because we help each other and

566
00:29:36,320 --> 00:29:38,360
I like the the thought of like having

567
00:29:38,360 --> 00:29:40,820
communities to support all the people

568
00:29:40,820 --> 00:29:42,740
like people like me who have no idea

569
00:29:42,740 --> 00:29:44,509
what they're doing and still like spend

570
00:29:44,509 --> 00:29:46,820
a lot of time hacking on stuff and I

571
00:29:46,820 --> 00:29:47,990
would like to thank all the people who

572
00:29:47,990 --> 00:29:49,759
like open-source the things so that I

573
00:29:49,759 --> 00:29:52,369
can use them build upon them and develop

574
00:29:52,369 --> 00:29:56,059
things further and thank you also given

575
00:29:56,059 --> 00:29:57,830
a pulse to yourself because you're part

576
00:29:57,830 --> 00:30:05,280
of that community

577
00:30:05,290 --> 00:30:09,050
yeah and there's an online version of

578
00:30:09,050 --> 00:30:10,490
the game I don't even know if that works

579
00:30:10,490 --> 00:30:12,470
and there's also the source code of like

580
00:30:12,470 --> 00:30:13,850
to get the game and the presentation

581
00:30:13,850 --> 00:30:16,730
it's all on github if you're interested

582
00:30:16,730 --> 00:30:18,950
and if this if there's a lovely person

583
00:30:18,950 --> 00:30:29,980
has it working on their computer once no

584
00:30:29,980 --> 00:30:37,730
I only have an HTM I think okay we can

585
00:30:37,730 --> 00:30:39,470
try it in the break come find me you can

586
00:30:39,470 --> 00:30:54,250
play the ukulele if you want thank you

