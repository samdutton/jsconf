1
00:00:23,119 --> 00:00:29,039
Thank you Ben, thank you everyone for joining
me here today, it's a real honour, thank you

2
00:00:29,039 --> 00:00:36,000
JSConf for making this happening, as Ben said
I'll talk about visualising the application,

3
00:00:36,000 --> 00:00:43,320
the code just being a part of it, as we all
know apps are so much more than code. So,

4
00:00:43,320 --> 00:00:48,579
we'll see whether we can use some 3D visualisation
techniques to get a better perspective of

5
00:00:48,579 --> 00:00:50,270
our apps.

6
00:00:50,270 --> 00:00:57,610
So we'll use this as the a case study, the
awesome to do app, we have maybe created a

7
00:00:57,610 --> 00:01:02,530
version of this app, some of us may have contributed
to the project using different frameworks

8
00:01:02,530 --> 00:01:08,659
to create a to do app, I think it will be
a good example that most of us can relate

9
00:01:08,659 --> 00:01:14,590
to, just for those that may not be familiar,
so they understand what they are looking at,

10
00:01:14,590 --> 00:01:20,810
it's a to do app, you put in to do items,
check them off, sort them, so you get different

11
00:01:20,810 --> 00:01:25,840
views and that's essentially the functionality,
ok.

12
00:01:25,840 --> 00:01:32,090
So, we ask, what's an app? The first thing
that comes to mind, it's code, looks something

13
00:01:32,090 --> 00:01:38,369
like this, we're all intimately familiar with
this sort of view. In order to sort of maybe

14
00:01:38,369 --> 00:01:43,509
better understand the reasoning why we need
to see things beyond just the code, not just

15
00:01:43,509 --> 00:01:49,840
see them but share them, show them, we'll
look at a more tangible example, like coffee.

16
00:01:49,840 --> 00:01:56,549
What's coffee? it's ingredients something
like this, very simple ingredients, water,

17
00:01:56,549 --> 00:02:03,220
coffee beans, that's all. Now, go and tell
that to those people outsides pre-so coffee,

18
00:02:03,220 --> 00:02:14,489
the beautiful folks from the Barn, are they
great, awesome \{Applause\}.

19
00:02:14,489 --> 00:02:21,129
Good job to JSConf for setting that up. You
see their set up, it's people, it's not just

20
00:02:21,129 --> 00:02:27,739
ingredients, we have a person taking the order,
a person making the coffee, tense of thousands

21
00:02:27,739 --> 00:02:37,269
of dollars of equipment, that Espresso machine,
$5,000, I know, I used to have a coffee shop,

22
00:02:37,269 --> 00:02:38,319
the coffee we take for

23
00:02:38,319 --> 00:02:43,519
granted, we got a much better perspective
when we think about it in a 3D way, we have

24
00:02:43,519 --> 00:02:49,629
a sense of geography, if the coffee shop is
in Baltimore and we're here in Berlin that's

25
00:02:49,629 --> 00:02:57,180
no good for us, all these things come into
play when we want to think more broadly about

26
00:02:57,180 --> 00:03:00,709
where our coffee comes from, what our coffee
really is.

27
00:03:00,709 --> 00:03:06,430
The key message here, sort of a no brainer,
coffee shop is a much bigger deal than the

28
00:03:06,430 --> 00:03:16,930
coffee itself, we are using the to do list
app as a case study, it's a much bigger deal

29
00:03:16,930 --> 00:03:22,129
than a to do list or a feature, the to do
app is a much bigger deal than the feature

30
00:03:22,129 --> 00:03:26,310
set that is designed.

31
00:03:26,310 --> 00:03:32,650
When we put the 3D view up of the coffee shop
we are able to get perspective on the scale

32
00:03:32,650 --> 00:03:39,049
of the coffee shop, location of it, able to
see the people, processes, things, in that

33
00:03:39,049 --> 00:03:45,499
traceability, the concrete artefacts, the
coffee machine, the location of the bathrooms

34
00:03:45,499 --> 00:03:53,739
in respect to the entrance, the concrete things
give us a good appreciation for what's involved,

35
00:03:53,739 --> 00:04:00,430
everybody understands that 3D diagram, whether
you are a coffee farmer, coffee maker, a business

36
00:04:00,430 --> 00:04:04,200
owner, customer, we all intuitively understand
that.

37
00:04:04,200 --> 00:04:11,129
So what's what we are hoping for in our 3D
application view. So we have on the left hand

38
00:04:11,129 --> 00:04:16,940
side the coffee shop, the inputs into that
visualisation are things like the ingredients,

39
00:04:16,940 --> 00:04:23,370
inventory, people and infrastructure and we
have the output the analogous input for the

40
00:04:23,370 --> 00:04:29,740
to do list, will be the code, support scripts,
our people very important and our infrastructure,

41
00:04:29,740 --> 00:04:33,810
somehow we are going to come up with the 3D
diagram, that's hopefully what we will get

42
00:04:33,810 --> 00:04:39,849
to together today, I'll do some of your audience
participation, I can see this far in to the

43
00:04:39,849 --> 00:04:45,009
conference, people are a little more tired.

44
00:04:45,009 --> 00:04:53,050
So we start with the code, so we start out
with the app as code text, now we are getting

45
00:04:53,050 --> 00:04:58,590
to something beyond the text, the files, the
folders, the file system, so already, there

46
00:04:58,590 --> 00:05:05,550
is a little bit more to our code than just
the text file. Here we just have a subtle

47
00:05:05,550 --> 00:05:12,240
benefit of the 3D view, just the beginnings
of 3D visualisation in terms of getting a

48
00:05:12,240 --> 00:05:13,800
better perspective.

49
00:05:13,800 --> 00:05:19,259
Here, for example, we can see the entire folder
structure, the sort of thing you would to

50
00:05:19,259 --> 00:05:24,830
click through every single folder to see how
deep they are, in one view if we do this sort

51
00:05:24,830 --> 00:05:31,729
of leverage, the third dimension, we can see
the top level folders, contains of a assets

52
00:05:31,729 --> 00:05:38,810
folder, Java assets folder and so on, across
the whole code base.

53
00:05:38,810 --> 00:05:44,970
So maybe somebody there. So another way we
can gain some value, looking at things in

54
00:05:44,970 --> 00:05:54,009
3D, if we juxtaposition the files next to
the diagram, we have a visual way, quickly,

55
00:05:54,009 --> 00:06:00,639
shorthand, to see what files are important,
visually you can see the file in front, this

56
00:06:00,639 --> 00:06:06,129
file has less code than the one behind it,
it gives you a little bit of overview, perspective,

57
00:06:06,129 --> 00:06:11,801
shorthand perspective if you will. Obviously
you need a lot more, just to look at the file

58
00:06:11,801 --> 00:06:19,950
system in 3D may not be directly a huge amount
of value for that. To explore further, let's

59
00:06:19,950 --> 00:06:25,319
compare with a more complex app, so we introduce
discourse, another great open sources app

60
00:06:25,319 --> 00:06:32,050
that folks made available, some of the folks
behind stack overflow, it's a forum software

61
00:06:32,050 --> 00:06:34,189
so people interact, write blog

62
00:06:34,189 --> 00:06:39,610
messages, post comments, there is some mail
and bulletin board functionality, it's a very

63
00:06:39,610 --> 00:06:45,430
complex app. So, while I have two open sources
apps, someone mentioned open sources just

64
00:06:45,430 --> 00:06:55,409
before I got up, give a quick round of applause
to people who contribute to open sources \{Applause\}.

65
00:06:55,409 --> 00:06:56,409
Awesome.

66
00:06:56,409 --> 00:07:03,821
So, what can we see in 3D, we can see a relative
size of things and now, one thing we see is

67
00:07:03,821 --> 00:07:11,530
that all discourse is much bigger, we put
it next to a model there, let's say someone

68
00:07:11,530 --> 00:07:16,620
in the room I sat next to from Korea, studying
in Finland I just met today, manager of our

69
00:07:16,620 --> 00:07:27,061
team, standing next to the code base modelled
in certain dimensions, she gets to say look

70
00:07:27,061 --> 00:07:33,000
at how big my code base is, so, at the same
time she can also share that with err management,

71
00:07:33,000 --> 00:07:37,569
by saying hey, look how big my code base is!

72
00:07:37,569 --> 00:07:44,840
We saw a talk on Friday, Kai from Microsoft,
talked about the changes in the new Microsoft

73
00:07:44,840 --> 00:07:52,860
browsers compare to EI, talked about lines
of code, we all need statistics like that

74
00:07:52,860 --> 00:07:58,910
for different reasons here's another way to
show the relative size of things while looking

75
00:07:58,910 --> 00:08:05,820
at the actual file systems, and to give perspectives
to folks at a glance view, hey that's a big

76
00:08:05,820 --> 00:08:14,440
app, that's life size, well not life size,
that is to scale, the Airbus A 380, is to

77
00:08:14,440 --> 00:08:23,341
scale, that's just the JavaScript portion
of the discourse apps. So again there is some

78
00:08:23,341 --> 00:08:29,229
value in showing things that way, both for
us as developers, technologists but also for

79
00:08:29,229 --> 00:08:38,229
business partner, I think that should help
our partners in understanding what we do.

80
00:08:38,229 --> 00:08:43,000
So, what else can we see? Can we gain any
insight about the structure of are code, beyond

81
00:08:43,000 --> 00:08:48,090
ok it's a big code base, first to do that
let's look at the folders of the code, let's

82
00:08:48,090 --> 00:08:54,100
ignore the files for a second, that allows
a more compact view, that's what we see here

83
00:08:54,100 --> 00:08:56,880
at the first shot of things.

84
00:08:56,880 --> 00:09:02,089
Now let's sort things, let's sort them with
the advantage of a 3D perspective, so let's

85
00:09:02,089 --> 00:09:12,400
use x , y , z planes, we can sort in one direction
on one folder level, another sort in another

86
00:09:12,400 --> 00:09:19,290
direction on the y plane for the next folder
level, we are using the advantage of all our

87
00:09:19,290 --> 00:09:24,610
planes a little bit, it gives a more compact
code base, so now that code base that was

88
00:09:24,610 --> 00:09:30,490
the length of the A 380 that had no hope whatsoever
of fitting on the screen now we can see in

89
00:09:30,490 --> 00:09:33,399
one compact view.

90
00:09:33,399 --> 00:09:37,490
So what's the advantage of that? First of
all, I think that by itself is awesome, I

91
00:09:37,490 --> 00:09:43,730
don't know how many of you have been clicking
through, being able to see the whole directory

92
00:09:43,730 --> 00:09:46,740
system at once is awesome.

93
00:09:46,740 --> 00:09:54,770
Now I say you can go directly to any file
at any level, another quick benefit of looking

94
00:09:54,770 --> 00:10:02,670
at things in 3D, we can see patterns, it doesn't
really take an expert eye to say, this one

95
00:10:02,670 --> 00:10:08,620
on the left, it's named, "Admin", the top
level folder is named admin, this one is,

96
00:10:08,620 --> 00:10:15,290
"Discourse", they are fatter, longer, it looks
like the folders have names, models, folders,

97
00:10:15,290 --> 00:10:21,760
components, maybe they are the two men apps
in the whole apps, these are some of the patterns

98
00:10:21,760 --> 00:10:26,230
we want to see when we are exploring a code
base, now we can see in 3D rather quickly

99
00:10:26,230 --> 00:10:32,279
and also non-technical people might also be
able to get it, maybe an appreciation of that

100
00:10:32,279 --> 00:10:35,360
without understanding the code base so much.

101
00:10:35,360 --> 00:10:43,290
Of course, now we need to see the files, so
if we want to explore any folder, we can click

102
00:10:43,290 --> 00:10:48,720
any of them or all of them at one time, again
sufficient of the limitation of the current

103
00:10:48,720 --> 00:10:54,130
methods of viewing our folder structure, either
using the command line or the operating system

104
00:10:54,130 --> 00:11:00,209
GUI, had limitation of seeing one folder one
directory at the time or it clunky when you

105
00:11:00,209 --> 00:11:02,620
want to see more.

106
00:11:02,620 --> 00:11:09,060
So that's all 3D code, but Ola you said, app
is not just code you just spent the last 10

107
00:11:09,060 --> 00:11:15,380
minutes talking about code ok, so we have
a computer, we start off with the code but

108
00:11:15,380 --> 00:11:19,399
now we're introduce our run time. We have
to put the computer into the picture in this

109
00:11:19,399 --> 00:11:24,020
case we can see in one view that we have a
certain code pace it runs on windows operating

110
00:11:24,020 --> 00:11:30,709
system, it actually needs a browser as a reason
time, and so again shorthand view of what

111
00:11:30,709 --> 00:11:36,240
our getting better perspective on what our
app looks like in a shorthand.

112
00:11:36,240 --> 00:11:44,690
We also need a user, another thing that I
missing in a lot of diagram either with oversimplifying

113
00:11:44,690 --> 00:11:51,160
the stick figure user or non-existent at all
let's have the user in the view, some app

114
00:11:51,160 --> 00:11:55,839
or software don't need a user perhaps they
interact with environment or sensors or other

115
00:11:55,839 --> 00:12:01,829
apps but we're talking the webapp, there a
user involved let's show them. Now we're talking

116
00:12:01,829 --> 00:12:06,880
in this particular room about a special type
of app software called webapp, so we need

117
00:12:06,880 --> 00:12:17,500
a web server here, that we introduce new men
that platform there the server the node express

118
00:12:17,500 --> 00:12:26,880
has NDN dependency it serves HTTP in this
case on the same computer. That looks like

119
00:12:26,880 --> 00:12:34,610
our developers machine, clearly it's still
not what an app looks like really in the wild,

120
00:12:34,610 --> 00:12:39,580
but we're getting there slowly so now we introduce
developer and developer want developer tools

121
00:12:39,580 --> 00:12:47,990
that go with that, and now we can also show
and share perhaps succinctly but certainly

122
00:12:47,990 --> 00:12:53,690
in a way that developer does more than code.
Clearly there's the build, there's test and

123
00:12:53,690 --> 00:12:57,730
there are tools that go with that against
some more dependencies, more installation

124
00:12:57,730 --> 00:13:04,910
shown in orange, you just very familiar with
Git, it was mentioned in the talk before mine,

125
00:13:04,910 --> 00:13:09,000
others have talked about the transpiling tool,
Peter Muller did a great talk on Friday I

126
00:13:09,000 --> 00:13:14,389
recommend anyone who didn’t see that to
check out video, talking about a different

127
00:13:14,389 --> 00:13:19,899
language transpiling tools we have to deal
with and perhaps a better way to do that.

128
00:13:19,899 --> 00:13:25,080
Here we can visualise that among the other
tools that we used.

129
00:13:25,080 --> 00:13:30,260
So here's our view about our developer, some
perspective are the kinds of things you see

130
00:13:30,260 --> 00:13:35,390
at a glance when you look at a system, or
an application, in particular development

131
00:13:35,390 --> 00:13:41,779
environment this way. We can do a technology
comparison. Here we say oh, another stack

132
00:13:41,779 --> 00:13:48,149
we could use for our webapp is ember and ember
as a facility called ember that include some

133
00:13:48,149 --> 00:13:56,360
of the same installation, those separate installs
we had to do for transpiling or testing the

134
00:13:56,360 --> 00:14:00,759
build dependency management it's all in ember
so we can do a visual comparison, it doesn't

135
00:14:00,759 --> 00:14:05,069
tell you which one is better or worse just
give you some perspective if you saw one developers

136
00:14:05,069 --> 00:14:09,279
machine in this view of another developers
machine in that view you can see the difference

137
00:14:09,279 --> 00:14:13,720
rather quickly, and in the stacks they use
and why how these stacks are different.

138
00:14:13,720 --> 00:14:19,100
Same things with rails, rails are totally
different technology from our JavaScript frameworks,

139
00:14:19,100 --> 00:14:25,759
server side framework we can still visualise
the developer environment. So here just trying

140
00:14:25,759 --> 00:14:31,250
to show the versatility of looking at things
in $3 how it's not just for this specific

141
00:14:31,250 --> 00:14:40,750
type of app I think almost any code pace any
type of app can benefit from this kind visualisation.

142
00:14:40,750 --> 00:14:48,860
What happened to our user is way over there
or over there. No code for the user, poor

143
00:14:48,860 --> 00:14:52,779
user. So what do we have to do, we have to
do some deployment stabs which is more tools

144
00:14:52,779 --> 00:15:00,110
and more roles for our development team in
this case our single developer, by the way

145
00:15:00,110 --> 00:15:06,529
I wish I should name my developer I will name
her Sandra, someone I met here today from

146
00:15:06,529 --> 00:15:21,459
Zimbabwe very great effort from JSConf \{applause\}
so there's Sandra, now she has to deploy our

147
00:15:21,459 --> 00:15:30,389
code, more tools we might have FTP file programme,
to transport the tools, we might use Amazon

148
00:15:30,389 --> 00:15:39,350
S3 for our storage. The simplest way you can
deploy a single page app, so we do that, we

149
00:15:39,350 --> 00:15:45,079
deploy Amazon S3 we have to configure some
DNS so the domain names work out right, today

150
00:15:45,079 --> 00:15:51,200
spoke a little bit about some of the issues
that come up with DNS routing and so forth.

151
00:15:51,200 --> 00:15:58,610
Whatever we can figure in S 3 in Amazon the
default routes, error messages, error screens

152
00:15:58,610 --> 00:16:04,920
they are code they make up our system, they
are part of thing that just totally get lost

153
00:16:04,920 --> 00:16:11,190
whenever we either point to our code and say
hey the code is the app, or when we try to

154
00:16:11,190 --> 00:16:14,570
do a little bit better than that and we draw
the diagram of the app here's our S3 cloud,

155
00:16:14,570 --> 00:16:20,279
here’s a client and server, instead of the
2 dimensional ways we do. I think that shorthand

156
00:16:20,279 --> 00:16:25,020
is great it's awesome for us as engineers
but I think the value of getting a little

157
00:16:25,020 --> 00:16:31,029
bit more sophisticated is very beneficial
for I think for us as engineers, but also

158
00:16:31,029 --> 00:16:39,779
for our partners, clients, bosses, we deploy
everything we should, ask are we done. Things

159
00:16:39,779 --> 00:16:47,980
are working, app has been developed, user
can download it, make their to do list, but

160
00:16:47,980 --> 00:16:54,709
as it generally goes we need more features
we need more developers so Sandra needs a

161
00:16:54,709 --> 00:16:59,389
partner, co-worker. We introduced another
developer with another development environment

162
00:16:59,389 --> 00:17:04,089
we model their develop environment there's
might not be Mac, but for the sake of this

163
00:17:04,089 --> 00:17:11,120
talk, we have just said it the same sort of
set up. So we bring in Bryan who spoke a little

164
00:17:11,120 --> 00:17:18,339
earlier from San Francisco all the way here
from San Francisco and what kind of development

165
00:17:18,339 --> 00:17:23,400
team if we don't have someone from Silicon
Valley on the team, so Bryan is here collaborating

166
00:17:23,400 --> 00:17:29,679
on the app. Now they have Github as a shared
repository, they use it shared repository,

167
00:17:29,679 --> 00:17:37,670
they are both doing there separate build deploy
test, how long is I before a different operating

168
00:17:37,670 --> 00:17:42,560
system, a different configuration on one person's
machine makes it past here or failed there,

169
00:17:42,560 --> 00:17:46,740
so we need to have a shared build and test
environment, that's what we have done we have

170
00:17:46,740 --> 00:17:53,370
create up here in this case we have used Amazon
c2 as a cloud structure, we have a Linux operating

171
00:17:53,370 --> 00:17:59,470
system we can see visually that's different
from our Mac. Again some of those sort of

172
00:17:59,470 --> 00:18:03,210
things that make up our system very important
things that make up our system that I think

173
00:18:03,210 --> 00:18:09,840
often get lost way too easily when we talk
about our systems.

174
00:18:09,840 --> 00:18:18,880
So we got more tools more code configuration
but when ask are we done, some of you are

175
00:18:18,880 --> 00:18:24,520
already looking at that gap the gulf between
the dev and the prod, something is missing

176
00:18:24,520 --> 00:18:31,390
you might also be looking saying this dev
part looks a whole lot different from prod.

177
00:18:31,390 --> 00:18:36,120
My development environment is not made up
of S3 I can't have that on my machine that's

178
00:18:36,120 --> 00:18:37,120
why we have what we

179
00:18:37,120 --> 00:18:41,789
have. Similarly S3 does not support build
tool we have set up using our EC2 instance.

180
00:18:41,789 --> 00:18:48,900
These things are so different. Maybe we need
something else, introduce staging environment.

181
00:18:48,900 --> 00:18:55,360
Try to make that identical to production,
we have someone playing that role, of testing

182
00:18:55,360 --> 00:19:01,110
our pre-production app in staging let's called
that person today as we could see in his presentation

183
00:19:01,110 --> 00:19:09,549
he is anal about quality and errors if anyone
can catch any errors before going to production

184
00:19:09,549 --> 00:19:15,900
it today. He has some tools to catch any ringers
production it would be a good candidate for

185
00:19:15,900 --> 00:19:21,950
us to GA before we get to production.

186
00:19:21,950 --> 00:19:32,409
So are we done? Cloud storage we didn't talk
about that we're all using local storage we

187
00:19:32,409 --> 00:19:42,480
need some code for the database, we need sub
database actual executable database app installation,

188
00:19:42,480 --> 00:19:46,870
so we have shown that there in red, now we
have got to upgrade our staging. We go from

189
00:19:46,870 --> 00:19:54,799
S3 to EC do again I think the value of the
3D visualisation is that you know just visually

190
00:19:54,799 --> 00:19:59,940
you look at the S3 versus the EC2 you can
see that it's different and you can see it's

191
00:19:59,940 --> 00:20:06,080
significantly different and crucially our
team mates can see that we as a team and our

192
00:20:06,080 --> 00:20:11,240
partners, clients, customers, executives.
So when we said yeah you know it's going to

193
00:20:11,240 --> 00:20:15,600
take some more resources it going to take
some more time for us to go from S3 to EC2

194
00:20:15,600 --> 00:20:20,700
they have a way to visualise this, they don't
have Java to think that oh whatever magic

195
00:20:20,700 --> 00:20:28,669
you guys do just do it faster. I mean you
drew S3 as a circle, so make it so, but now

196
00:20:28,669 --> 00:20:35,970
we can give them a better perspective, for
what's involved. So with that, again you can

197
00:20:35,970 --> 00:20:41,940
ask the question, are we done? Valid question
but I think you are seeing the pattern now

198
00:20:41,940 --> 00:20:48,970
right? The pattern is really we're never done
right? I mean that's sort of the reality of

199
00:20:48,970 --> 00:20:52,770
our lives. They are all these things that
have I have not touched honestly that part

200
00:20:52,770 --> 00:20:58,590
of are daily lives different infrastructure,
operational things we need to introduce we

201
00:20:58,590 --> 00:21:03,580
talk about containerisation now instead of
virtual machine infrastructure, we might use

202
00:21:03,580 --> 00:21:08,179
in memory data stores like memcache, a whole
bunch of stuff we can do on the infrastructure

203
00:21:08,179 --> 00:21:13,049
side, same thing we have services we generally
need to plug-in here, message queues, workflow

204
00:21:13,049 --> 00:21:19,940
energy other kinds of storage, we may introduce
different communication pathways using web

205
00:21:19,940 --> 00:21:26,360
socket or peer to peer or streaming some great
talks about that earlier. I recommend Thomas's

206
00:21:26,360 --> 00:21:32,429
yesterday evening talking about streaming
it peer to peer which you should check out

207
00:21:32,429 --> 00:21:36,039
if you missed it yesterday or Friday.

208
00:21:36,039 --> 00:21:45,090
So, I think the 3D view helps us visualise
better all these aspects of our system. So,

209
00:21:45,090 --> 00:21:51,980
hopefully at this point we have some analogous
way of looking at our app as a system, including

210
00:21:51,980 --> 00:21:57,850
people including processes, including assets
and resources similarly to how we might think

211
00:21:57,850 --> 00:22:07,650
of the physical thing like a coffee shop,
physical system like a coffee shop I beg your

212
00:22:07,650 --> 00:22:13,940
pardon. Me see the same in sight we can have
the perspective of the location and scale

213
00:22:13,940 --> 00:22:20,620
of our application, we can see the people,
the processes, the things as well as have

214
00:22:20,620 --> 00:22:25,350
traceability to concrete artefacts, this is
intuitively understood.

215
00:22:25,350 --> 00:22:31,330
So, talk a little bit about the tools I am
sure many of you are wondering how do you

216
00:22:31,330 --> 00:22:38,309
do, what's he showing me. In this case what
you are seeing here today uses Ruby as a scripting

217
00:22:38,309 --> 00:22:41,662
language, integrating with Github I will talk
about the integrations I have done over so

218
00:22:41,662 --> 00:22:50,580
far and a 3D modelling talk called Sketchup.
I have done produced similar results using

219
00:22:50,580 --> 00:22:52,030
Javascript JS

220
00:22:52,030 --> 00:22:56,289
library as well as JavaScript and another
modelling software called tinker cat I can

221
00:22:56,289 --> 00:23:02,360
talk you to off line all about why I am not
using those now, I am still evaluating they

222
00:23:02,360 --> 00:23:07,299
might be something I will end up doing more
with.

223
00:23:07,299 --> 00:23:12,580
Then we talk about API integrations, currently
Github is the anyone, the source code you

224
00:23:12,580 --> 00:23:21,870
saw there from discuss or to do, this is based
on the code base of those apps from Github,

225
00:23:21,870 --> 00:23:28,990
through using the Ruby scripts, using ruby
and the Sketchup modelling tool I created

226
00:23:28,990 --> 00:23:35,850
the visualisation of the app code pace. Very
interesting future work for me and others

227
00:23:35,850 --> 00:23:42,070
interested in this kind of field will be to
integrate whatever modelling tools they come

228
00:23:42,070 --> 00:23:48,390
up with and I want to do it with this, other
source control systems, you see there other

229
00:23:48,390 --> 00:23:53,510
cloud platforms would be great to directly
integrate to cloud bottom,, query Amazon and

230
00:23:53,510 --> 00:24:00,230
Azure and for the status of our applications,
the size of them, the configuration of them

231
00:24:00,230 --> 00:24:05,960
the show those in our visualisation. Similarly
it would be great to integrate with the various

232
00:24:05,960 --> 00:24:18,510
CI and devtools that are out there some of
you are familiar with. Still along the lines

233
00:24:18,510 --> 00:24:25,040
of future exploration I am working on getting
this stuff open sourced. It's not right now,

234
00:24:25,040 --> 00:24:32,490
I can't give you a URL get the modelling tool
I will be adding more components, you saw

235
00:24:32,490 --> 00:24:41,230
JavaScript biased with infrastructure, the
same things apply for any infrastructure or

236
00:24:41,230 --> 00:24:48,720
development tools you use Java, or whatever
have you, ruby. What will be really awesome

237
00:24:48,720 --> 00:24:53,500
would be to integrate with the various 3D
interaction technologies, Google cardboard,

238
00:24:53,500 --> 00:25:03,500
Microsoft lens, Occulus I am not there yet.
Would be great. Some of you my motivation

239
00:25:03,500 --> 00:25:09,070
for that some of you guys know the code really
hard to find it that attributed to that which

240
00:25:09,070 --> 00:25:14,409
measures improved, to that I add which is
visualised, improved even if we're not empirically

241
00:25:14,409 --> 00:25:21,730
and quantitatively measuring something, just
being able to visualise it being able to see

242
00:25:21,730 --> 00:25:30,570
symmetry see patterns, see some degree of
complexity is not the final word on how complex

243
00:25:30,570 --> 00:25:38,720
all kinds of visualised, the fact that everybody
can't thank you to you guys have been great

244
00:25:38,720 --> 00:25:45,590
thank you very much. So why are these false.
I could really use your feedback as I said,

245
00:25:45,590 --> 00:25:52,690
either on some of the current stuff you see
or some of the future interactions you can

246
00:25:52,690 --> 00:26:01,240
help with or you are doing yourself, I would
love to hear about it,, so, thank you, thank

247
00:26:01,240 --> 00:26:06,539
you to Berlin, the Berlin people, you have
been super awesome, you guys have been great,

