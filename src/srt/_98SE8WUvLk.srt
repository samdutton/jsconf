1
00:00:15,770 --> 00:00:20,189

so yeah I am I live in Amsterdam I'm

2
00:00:20,189 --> 00:00:23,039
originally from the US and I live there

3
00:00:23,039 --> 00:00:26,189
with my husband and my two kids who came

4
00:00:26,189 --> 00:00:27,750
with me today but they didn't really

5
00:00:27,750 --> 00:00:29,429
think this is cool enough to sit in on

6
00:00:29,429 --> 00:00:30,960
so I think they're running around

7
00:00:30,960 --> 00:00:35,100
outside I've been doing web design

8
00:00:35,100 --> 00:00:37,320
professionally for about 15 years and

9
00:00:37,320 --> 00:00:39,059
I'm currently a senior designer at

10
00:00:39,059 --> 00:00:41,700
booking.com where I do both design as

11
00:00:41,700 --> 00:00:45,270
well as HTML and CSS one of the things

12
00:00:45,270 --> 00:00:47,550
that's fun about working there is seeing

13
00:00:47,550 --> 00:00:50,910
the rather creative photos and names

14
00:00:50,910 --> 00:00:53,100
that some properties have chosen for

15
00:00:53,100 --> 00:00:55,500
themselves for instance how would you

16
00:00:55,500 --> 00:00:59,609
like to stay in wrong place and of

17
00:00:59,609 --> 00:01:01,079
course you can stay in hell or heaven

18
00:01:01,079 --> 00:01:03,210
depending on the type of person that you

19
00:01:03,210 --> 00:01:03,899
are I guess

20
00:01:03,899 --> 00:01:08,280
and finally there's Jesus this is my

21
00:01:08,280 --> 00:01:09,659
favorite line from its property

22
00:01:09,659 --> 00:01:15,600
description

23
00:01:15,610 --> 00:01:19,740
that Jesus is a great guy

24
00:01:19,750 --> 00:01:22,310
so these are just a few of the over

25
00:01:22,310 --> 00:01:23,780
eight hundred and two thousand

26
00:01:23,780 --> 00:01:25,610
properties providing booking with their

27
00:01:25,610 --> 00:01:28,310
own content for us to display that

28
00:01:28,310 --> 00:01:30,259
content then has to be translated into

29
00:01:30,259 --> 00:01:32,689
42 languages as does all the other

30
00:01:32,689 --> 00:01:35,030
website content and the prices that you

31
00:01:35,030 --> 00:01:36,649
see on this site are in one of fifty

32
00:01:36,649 --> 00:01:39,289
four currencies with this huge variation

33
00:01:39,289 --> 00:01:41,299
and content I have to make sure that my

34
00:01:41,299 --> 00:01:44,929
designs can be incredibly flexible for

35
00:01:44,929 --> 00:01:46,789
instance if I have to design a component

36
00:01:46,789 --> 00:01:48,890
that includes the name of a property

37
00:01:48,890 --> 00:01:51,770
that my name might be as short as two

38
00:01:51,770 --> 00:01:54,619
characters or as long as 109 characters

39
00:01:54,619 --> 00:01:56,390
or anywhere in between

40
00:01:56,390 --> 00:01:58,459
so my component has to be flexible

41
00:01:58,459 --> 00:02:00,740
enough to hold all the variations in an

42
00:02:00,740 --> 00:02:04,189
elegant way in responsive web design the

43
00:02:04,189 --> 00:02:05,780
challenge is that you never know how

44
00:02:05,780 --> 00:02:07,729
much space is available outside the

45
00:02:07,729 --> 00:02:10,099
component here the problem is kind of

46
00:02:10,099 --> 00:02:12,019
the opposite not knowing how much stuff

47
00:02:12,019 --> 00:02:14,810
is available inside the component but in

48
00:02:14,810 --> 00:02:17,330
both cases the question is the same how

49
00:02:17,330 --> 00:02:19,160
big do I make this thing so that

50
00:02:19,160 --> 00:02:22,700
everything will fit nicely in responsive

51
00:02:22,700 --> 00:02:24,410
web design you answer this question by

52
00:02:24,410 --> 00:02:27,260
picking a percentage and mrm value or a

53
00:02:27,260 --> 00:02:29,630
viewport unit based on what will work

54
00:02:29,630 --> 00:02:31,790
well for that item and the others on the

55
00:02:31,790 --> 00:02:34,160
page the majority of the time and these

56
00:02:34,160 --> 00:02:35,959
are all good relative units of

57
00:02:35,959 --> 00:02:39,109
measurement but they're not perfect they

58
00:02:39,109 --> 00:02:40,940
are still a decision that you are making

59
00:02:40,940 --> 00:02:43,790
ahead of time rather than a calculation

60
00:02:43,790 --> 00:02:46,579
made on the fly for an individual users

61
00:02:46,579 --> 00:02:48,829
precise set of viewing conditions and

62
00:02:48,829 --> 00:02:50,180
the precise piece of content that

63
00:02:50,180 --> 00:02:52,250
they're viewing at that moment they're

64
00:02:52,250 --> 00:02:54,560
always going to be your best guess at

65
00:02:54,560 --> 00:02:57,230
what will work well for the majority but

66
00:02:57,230 --> 00:02:59,780
not necessarily the ideal for any one

67
00:02:59,780 --> 00:03:02,359
thing in particular now don't get me

68
00:03:02,359 --> 00:03:04,160
wrong I have nothing against using these

69
00:03:04,160 --> 00:03:05,810
units of measurement of course they are

70
00:03:05,810 --> 00:03:07,670
the units that I have chosen to use in

71
00:03:07,670 --> 00:03:10,489
my work whenever possible for the last

72
00:03:10,489 --> 00:03:13,130
10 years and I continue to use them but

73
00:03:13,130 --> 00:03:15,170
any imposed unit of measurement is

74
00:03:15,170 --> 00:03:17,329
always going to be an approximation of

75
00:03:17,329 --> 00:03:20,480
the ideal flexbox is not the ideal

76
00:03:20,480 --> 00:03:23,150
either it's a tool with strengths and

77
00:03:23,150 --> 00:03:25,610
limitations just like any other but it

78
00:03:25,610 --> 00:03:27,799
gets us closer to the ideal because with

79
00:03:27,799 --> 00:03:28,600
it we know

80
00:03:28,600 --> 00:03:30,610
have to set explicit dimensions at all

81
00:03:30,610 --> 00:03:33,370
we can let the browser figure out what

82
00:03:33,370 --> 00:03:34,780
size is best based on the space

83
00:03:34,780 --> 00:03:37,030
available the surrounding elements and

84
00:03:37,030 --> 00:03:39,310
the content within and we still get to

85
00:03:39,310 --> 00:03:41,680
tell the browser a starting size a

86
00:03:41,680 --> 00:03:44,350
starting point for that size to give it

87
00:03:44,350 --> 00:03:46,390
some guidance but we're not laying down

88
00:03:46,390 --> 00:03:48,820
a law as we are with explicit dimensions

89
00:03:48,820 --> 00:03:51,910
even relative ones let me give you an

90
00:03:51,910 --> 00:03:53,290
example of the difference between the

91
00:03:53,290 --> 00:03:55,570
two approaches here is the job search

92
00:03:55,570 --> 00:03:57,640
form from The Guardian site it's a

93
00:03:57,640 --> 00:03:59,800
responsive layout they give all the

94
00:03:59,800 --> 00:04:02,230
fields percentage widths including the

95
00:04:02,230 --> 00:04:05,110
Select menu and the button and they

96
00:04:05,110 --> 00:04:06,640
change those percentages at different

97
00:04:06,640 --> 00:04:08,410
breakpoints this is the widest version

98
00:04:08,410 --> 00:04:10,630
of the layout and they didn't use

99
00:04:10,630 --> 00:04:13,120
flexbox and on it as they do now for

100
00:04:13,120 --> 00:04:14,890
their main site they still use floating

101
00:04:14,890 --> 00:04:17,770
here so I decided to make a copy of it

102
00:04:17,770 --> 00:04:19,660
to see if I could improve it at all by

103
00:04:19,660 --> 00:04:22,420
adding flexbox just as an exercise for

104
00:04:22,420 --> 00:04:24,250
me not because there's anything bad

105
00:04:24,250 --> 00:04:27,340
without their doing it currently so I

106
00:04:27,340 --> 00:04:29,740
copied it this is my copy it uses floats

107
00:04:29,740 --> 00:04:32,560
and percentage wits as they do and I use

108
00:04:32,560 --> 00:04:34,720
this as my starting point and I then

109
00:04:34,720 --> 00:04:36,850
tried to see if there was anywhere where

110
00:04:36,850 --> 00:04:39,310
I could add flexbox to make the form

111
00:04:39,310 --> 00:04:41,710
more responsive and I found two

112
00:04:41,710 --> 00:04:43,660
opportunities for simple progressive

113
00:04:43,660 --> 00:04:46,780
enhancement the first issue is that

114
00:04:46,780 --> 00:04:48,610
because the Select menu is set to a

115
00:04:48,610 --> 00:04:50,890
percentage not its content length the

116
00:04:50,890 --> 00:04:53,440
menu text can sometimes be cut off also

117
00:04:53,440 --> 00:04:56,200
the button can grow much wider than its

118
00:04:56,200 --> 00:04:58,750
text which looks rather awkward in my

119
00:04:58,750 --> 00:05:01,360
opinion even if you like it like that

120
00:05:01,360 --> 00:05:04,840
the which is fine the point is that you

121
00:05:04,840 --> 00:05:05,890
can't control it

122
00:05:05,890 --> 00:05:07,630
the viewport is controlling it and

123
00:05:07,630 --> 00:05:09,700
sometimes it will be snug to its text

124
00:05:09,700 --> 00:05:10,960
and sometimes not

125
00:05:10,960 --> 00:05:12,940
the percentage sizing becomes kind of

126
00:05:12,940 --> 00:05:15,250
arbitrary this is the problem with

127
00:05:15,250 --> 00:05:18,070
explicit dimensions now I could fix it

128
00:05:18,070 --> 00:05:19,900
by tweaking the breakpoints and not

129
00:05:19,900 --> 00:05:21,640
changing the layout until I'm sure that

130
00:05:21,640 --> 00:05:24,370
the Select menu content can fit but this

131
00:05:24,370 --> 00:05:26,560
is unreliable you can't always create a

132
00:05:26,560 --> 00:05:28,150
whole new set of breakpoints to

133
00:05:28,150 --> 00:05:30,580
accommodate one piece of content on one

134
00:05:30,580 --> 00:05:33,460
page out of your whole site also it's

135
00:05:33,460 --> 00:05:35,170
dependent on all users having the same

136
00:05:35,170 --> 00:05:37,150
font size and on the content in that

137
00:05:37,150 --> 00:05:39,370
select menu never changing neither of

138
00:05:39,370 --> 00:05:41,610
which I think are safe assumptions

139
00:05:41,610 --> 00:05:44,020
this is the perfect case for flexbox

140
00:05:44,020 --> 00:05:45,940
because as I said it lets you avoid

141
00:05:45,940 --> 00:05:48,760
explicit dimensions and use the Flex

142
00:05:48,760 --> 00:05:51,610
property instead to control sizing this

143
00:05:51,610 --> 00:05:53,470
tells the browser the starting size that

144
00:05:53,470 --> 00:05:55,210
you want to use including the native

145
00:05:55,210 --> 00:05:57,190
content size and whether the item can

146
00:05:57,190 --> 00:05:59,440
grow bigger or smaller then the size to

147
00:05:59,440 --> 00:06:01,990
fit the space available so for the

148
00:06:01,990 --> 00:06:04,090
select menu and the button I want them

149
00:06:04,090 --> 00:06:06,160
to stay at their content width exactly

150
00:06:06,160 --> 00:06:08,110
not get bigger or smaller so I don't

151
00:06:08,110 --> 00:06:11,170
want them to flex with the text fields I

152
00:06:11,170 --> 00:06:13,090
want them to stretch to take up whatever

153
00:06:13,090 --> 00:06:15,730
space is left after the select the

154
00:06:15,730 --> 00:06:17,260
button and all the margins have been

155
00:06:17,260 --> 00:06:17,890
accounted for

156
00:06:17,890 --> 00:06:19,720
and I don't have to do any math to

157
00:06:19,720 --> 00:06:21,670
figure out what value this should be I

158
00:06:21,670 --> 00:06:23,500
just tell them to flex and let the

159
00:06:23,500 --> 00:06:26,740
browser figure out the math so I can

160
00:06:26,740 --> 00:06:28,270
also at the same time that I do this

161
00:06:28,270 --> 00:06:31,000
keep the percentage widths in place for

162
00:06:31,000 --> 00:06:32,890
non supporting browsers and add these

163
00:06:32,890 --> 00:06:37,210
flex values on top as an enhancement the

164
00:06:37,210 --> 00:06:38,680
second problem with the original that I

165
00:06:38,680 --> 00:06:40,180
wanted to fix is that there's a slight

166
00:06:40,180 --> 00:06:42,160
misalignment of the fields across the

167
00:06:42,160 --> 00:06:43,750
line even though I set the same padding

168
00:06:43,750 --> 00:06:45,850
on all of them this shows two different

169
00:06:45,850 --> 00:06:48,160
browsers again I could fix this by

170
00:06:48,160 --> 00:06:49,450
adjusting all the padding's

171
00:06:49,450 --> 00:06:51,400
but it is browser dependent so it's

172
00:06:51,400 --> 00:06:54,240
really annoying hard to get perfect a

173
00:06:54,240 --> 00:06:57,280
more reliable and easier fix is to just

174
00:06:57,280 --> 00:06:59,650
turn on flexbox for each field wrapper

175
00:06:59,650 --> 00:07:02,680
because flex items across a row are

176
00:07:02,680 --> 00:07:04,870
equal height by default so with its

177
00:07:04,870 --> 00:07:07,750
wrapper a Flex container each field will

178
00:07:07,750 --> 00:07:09,970
stretch to match the tallest one on its

179
00:07:09,970 --> 00:07:13,330
line so these two lines of CSS in pink

180
00:07:13,330 --> 00:07:15,970
fix the height mismatch in five seconds

181
00:07:15,970 --> 00:07:17,590
and actually you can write it as one

182
00:07:17,590 --> 00:07:19,030
line because you can leave the second

183
00:07:19,030 --> 00:07:21,400
off it's the default value so although

184
00:07:21,400 --> 00:07:23,320
the visual effect isn't huge in this

185
00:07:23,320 --> 00:07:25,510
case neither is the effort to polish up

186
00:07:25,510 --> 00:07:29,740
this form none of the Flex box changes

187
00:07:29,740 --> 00:07:31,090
that I made to the form have to be

188
00:07:31,090 --> 00:07:32,920
hidden from older browsers they simply

189
00:07:32,920 --> 00:07:34,720
override existing properties and

190
00:07:34,720 --> 00:07:36,670
browsers that understand them which

191
00:07:36,670 --> 00:07:38,290
makes it really easy to progressively

192
00:07:38,290 --> 00:07:41,890
enhance this form ie 9 and earlier we'll

193
00:07:41,890 --> 00:07:43,630
see the top version which looks a bit

194
00:07:43,630 --> 00:07:45,610
different but it's still usable and just

195
00:07:45,610 --> 00:07:47,290
about everyone else will see the bottom

196
00:07:47,290 --> 00:07:50,020
version I think this enhancement is

197
00:07:50,020 --> 00:07:52,360
worthwhile to add because even though

198
00:07:52,360 --> 00:07:54,070
the Flex box form does use the same

199
00:07:54,070 --> 00:07:55,300
break points as the floater

200
00:07:55,300 --> 00:07:57,699
original the fields inside are more

201
00:07:57,699 --> 00:08:00,159
responsive to their content so overall

202
00:08:00,159 --> 00:08:02,080
the layout of the fields looks more

203
00:08:02,080 --> 00:08:04,000
proportional inside each of these

204
00:08:04,000 --> 00:08:08,349
breakpoints content-driven breakpoints

205
00:08:08,349 --> 00:08:10,419
are better than device size breakpoints

206
00:08:10,419 --> 00:08:12,460
but they are still a decision that

207
00:08:12,460 --> 00:08:15,280
you're making based on what is best for

208
00:08:15,280 --> 00:08:17,110
hopefully the majority of your content

209
00:08:17,110 --> 00:08:19,479
but not every component or piece of

210
00:08:19,479 --> 00:08:22,020
content on every page at every moment

211
00:08:22,020 --> 00:08:24,550
flexbox can enhance your components to

212
00:08:24,550 --> 00:08:26,349
be more responsive within your

213
00:08:26,349 --> 00:08:30,069
breakpoints the job forum was just a

214
00:08:30,069 --> 00:08:32,229
demo but we do use flexbox in a similar

215
00:08:32,229 --> 00:08:34,719
way live at booking comm on our customer

216
00:08:34,719 --> 00:08:36,279
service forum which uses a fluid

217
00:08:36,279 --> 00:08:40,000
responsive layout using flex the fields

218
00:08:40,000 --> 00:08:41,529
fill the full width of their container

219
00:08:41,529 --> 00:08:43,839
no matter its size switching from

220
00:08:43,839 --> 00:08:47,320
stacked to 2x2 automatically as soon as

221
00:08:47,320 --> 00:08:49,899
they can fit beside each other and by

222
00:08:49,899 --> 00:08:52,029
automatically I mean no media queries

223
00:08:52,029 --> 00:08:55,029
this is all of the CSS that's needed to

224
00:08:55,029 --> 00:08:57,250
create those two layouts there's no

225
00:08:57,250 --> 00:08:59,380
media queries because the browser

226
00:08:59,380 --> 00:09:01,720
figures out the breakpoint for you using

227
00:09:01,720 --> 00:09:04,899
flexbox the Flex property again is

228
00:09:04,899 --> 00:09:06,640
simply an enhancement on top of the

229
00:09:06,640 --> 00:09:09,459
floating and the percentage with that

230
00:09:09,459 --> 00:09:11,290
control the layout of the form when Flex

231
00:09:11,290 --> 00:09:15,459
box isn't available so the starter non

232
00:09:15,459 --> 00:09:19,089
flex box version of the form layout seen

233
00:09:19,089 --> 00:09:21,790
in IE seven through nine it has the same

234
00:09:21,790 --> 00:09:22,630
two layouts

235
00:09:22,630 --> 00:09:24,790
they just don't stretch to be full width

236
00:09:24,790 --> 00:09:26,260
but I think that this small difference

237
00:09:26,260 --> 00:09:28,720
is an acceptable trade-off for being

238
00:09:28,720 --> 00:09:31,420
able to write just a few lines of CSS no

239
00:09:31,420 --> 00:09:33,399
media queries and being completely done

240
00:09:33,399 --> 00:09:35,230
with laying out an entire responsive

241
00:09:35,230 --> 00:09:38,140
form let me walk you through how the CSS

242
00:09:38,140 --> 00:09:42,370
works so first we turn on flex box using

243
00:09:42,370 --> 00:09:44,649
display flex on the container that turns

244
00:09:44,649 --> 00:09:47,350
the form into a Flex container and the

245
00:09:47,350 --> 00:09:50,620
child fields into Flex items by default

246
00:09:50,620 --> 00:09:52,720
this puts the items horizontally on a

247
00:09:52,720 --> 00:09:55,630
single row but flex wrap wrap allows

248
00:09:55,630 --> 00:09:57,579
them to wrap onto multiple rows as

249
00:09:57,579 --> 00:10:00,250
needed so if I didn't have flex wrap

250
00:10:00,250 --> 00:10:02,890
wrap set the fields would always say on

251
00:10:02,890 --> 00:10:04,899
run one row no matter what even if

252
00:10:04,899 --> 00:10:06,399
content has to be cut off or they

253
00:10:06,399 --> 00:10:08,230
overflow out of their container

254
00:10:08,230 --> 00:10:10,840
but with flexwrap they will be stacked

255
00:10:10,840 --> 00:10:13,090
on narrow screens and then automatically

256
00:10:13,090 --> 00:10:14,950
switched to side-by-side when there's

257
00:10:14,950 --> 00:10:17,640
room for them to fit it's similar to

258
00:10:17,640 --> 00:10:20,350
changing flex direction from column to

259
00:10:20,350 --> 00:10:22,270
row and a media query but without

260
00:10:22,270 --> 00:10:24,310
needing any media query so the

261
00:10:24,310 --> 00:10:26,590
breakpoint can happen automatically in a

262
00:10:26,590 --> 00:10:29,980
more natural spot with less CSS so the

263
00:10:29,980 --> 00:10:31,750
fields do say row orientation the whole

264
00:10:31,750 --> 00:10:34,720
time it's just that they may form up to

265
00:10:34,720 --> 00:10:36,700
four rows when the viewport is narrow

266
00:10:36,700 --> 00:10:40,960
which then looks like one column so then

267
00:10:40,960 --> 00:10:42,490
the question is what makes them decide

268
00:10:42,490 --> 00:10:44,860
to wrap the browser wraps them when it

269
00:10:44,860 --> 00:10:46,540
can't fit them on one line but how does

270
00:10:46,540 --> 00:10:48,880
it know they can't fit at a certain

271
00:10:48,880 --> 00:10:51,310
point this is where their flex values

272
00:10:51,310 --> 00:10:53,470
come in so let me define the Flex

273
00:10:53,470 --> 00:10:55,720
property first before explaining this

274
00:10:55,720 --> 00:10:58,570
particular value of the property so the

275
00:10:58,570 --> 00:11:00,580
Flex property is set on Flex items to

276
00:11:00,580 --> 00:11:02,500
assign them a proportional size it

277
00:11:02,500 --> 00:11:04,750
affects either their width or their

278
00:11:04,750 --> 00:11:07,120
height whichever is the main size and

279
00:11:07,120 --> 00:11:08,980
that's the dimension along the main axis

280
00:11:08,980 --> 00:11:13,180
so the main axis is simply the set by

281
00:11:13,180 --> 00:11:15,310
Flex direction so flex Direction is set

282
00:11:15,310 --> 00:11:17,590
to row my main axis is horizontal and

283
00:11:17,590 --> 00:11:20,500
width is my main size if flex Direction

284
00:11:20,500 --> 00:11:22,630
is set to column my main axis is

285
00:11:22,630 --> 00:11:26,250
vertical and height is my main size and

286
00:11:26,250 --> 00:11:28,870
there's up to three components to a flex

287
00:11:28,870 --> 00:11:32,080
value as it's a shorthand property flex

288
00:11:32,080 --> 00:11:33,910
grow means how much the Flex item will

289
00:11:33,910 --> 00:11:36,340
grow relative to other items if there's

290
00:11:36,340 --> 00:11:39,400
extra space available flex rank means

291
00:11:39,400 --> 00:11:41,560
how much the item will shrink relative

292
00:11:41,560 --> 00:11:42,880
to others if there's not enough space

293
00:11:42,880 --> 00:11:45,370
and both flex grow and flex shrink are

294
00:11:45,370 --> 00:11:48,550
set to unitless integers like zero one

295
00:11:48,550 --> 00:11:50,740
two since they are specifying a

296
00:11:50,740 --> 00:11:53,650
proportion not an absolute value it's

297
00:11:53,650 --> 00:11:55,330
like the number of shares of extra space

298
00:11:55,330 --> 00:11:58,990
that they get Flex basis is the initial

299
00:11:58,990 --> 00:12:01,120
starting dimension before free space is

300
00:12:01,120 --> 00:12:03,100
added on or taken away from the item and

301
00:12:03,100 --> 00:12:04,930
it's set to any standard with their

302
00:12:04,930 --> 00:12:07,330
height value including Auto which

303
00:12:07,330 --> 00:12:09,040
basically sizes the item according to

304
00:12:09,040 --> 00:12:12,040
its content for example on the

305
00:12:12,040 --> 00:12:14,440
booking.com customer service form flex

306
00:12:14,440 --> 00:12:18,190
basis is set to 40% so that's the

307
00:12:18,190 --> 00:12:21,310
starting point each field will be 40% of

308
00:12:21,310 --> 00:12:21,670
the width

309
00:12:21,670 --> 00:12:23,890
of its container and then the browser

310
00:12:23,890 --> 00:12:26,110
looks at the Flex grow and flex shrink

311
00:12:26,110 --> 00:12:28,600
values to decide whether to get bigger

312
00:12:28,600 --> 00:12:31,170
or smaller than the Flex basis value

313
00:12:31,170 --> 00:12:33,940
Flex shrink the second value set to zero

314
00:12:33,940 --> 00:12:36,190
doesn't let the field shrink smaller

315
00:12:36,190 --> 00:12:39,100
than 40 percent effectively this means

316
00:12:39,100 --> 00:12:40,600
that the most we can ever have an align

317
00:12:40,600 --> 00:12:43,570
together is two right because three or

318
00:12:43,570 --> 00:12:46,030
four forty percent wide items are never

319
00:12:46,030 --> 00:12:48,250
going to fit on a line together so

320
00:12:48,250 --> 00:12:51,250
that's why the form only gets two into a

321
00:12:51,250 --> 00:12:55,060
two by two layout at its widest flex

322
00:12:55,060 --> 00:12:57,790
grow the first value set to one means

323
00:12:57,790 --> 00:12:59,920
that each field will get one share of

324
00:12:59,920 --> 00:13:03,160
any available extra width on a line and

325
00:13:03,160 --> 00:13:05,110
this is what ensures that the form is

326
00:13:05,110 --> 00:13:07,900
always full width because it tells each

327
00:13:07,900 --> 00:13:09,370
field to stretch to take up whatever

328
00:13:09,370 --> 00:13:12,280
space is left over after the 40 percent

329
00:13:12,280 --> 00:13:14,530
flex basis and the pixel margin and

330
00:13:14,530 --> 00:13:18,850
padding have been accounted for so

331
00:13:18,850 --> 00:13:20,500
basically what happens is when the

332
00:13:20,500 --> 00:13:22,990
viewport gets narrow the combination of

333
00:13:22,990 --> 00:13:25,450
the percentage flex basis size and the

334
00:13:25,450 --> 00:13:27,820
pixel margin and padding makes two

335
00:13:27,820 --> 00:13:30,700
inputs add up to more than 100% which

336
00:13:30,700 --> 00:13:33,550
forces them to wrap and stack the same

337
00:13:33,550 --> 00:13:34,840
thing happens with the float version

338
00:13:34,840 --> 00:13:36,310
this is not a new sort of layout

339
00:13:36,310 --> 00:13:39,010
behavior but with the Flex value as an

340
00:13:39,010 --> 00:13:41,590
enhancement the Flex grow piece of that

341
00:13:41,590 --> 00:13:44,380
value flex grow set to one ensures that

342
00:13:44,380 --> 00:13:46,420
when the wrap happens each field

343
00:13:46,420 --> 00:13:48,550
stretches to fill the width perfectly

344
00:13:48,550 --> 00:13:50,410
rather than remaining 40 percent wide

345
00:13:50,410 --> 00:13:53,650
and again flex box overrides the

346
00:13:53,650 --> 00:13:54,790
floating and the width values

347
00:13:54,790 --> 00:13:56,980
automatically so the Flex property can

348
00:13:56,980 --> 00:13:59,020
be added on to the same rule without

349
00:13:59,020 --> 00:14:00,640
having to hide anything from non

350
00:14:00,640 --> 00:14:03,460
supporting browsers so three extra lines

351
00:14:03,460 --> 00:14:06,340
flex box CSS made this form much more

352
00:14:06,340 --> 00:14:08,080
responsive to the space available and

353
00:14:08,080 --> 00:14:11,610
all without having to use a media query

354
00:14:11,610 --> 00:14:13,690
another place on booking.com

355
00:14:13,690 --> 00:14:15,280
where we change the layout without a

356
00:14:15,280 --> 00:14:17,320
media query is within the map info

357
00:14:17,320 --> 00:14:19,660
windows that show when you click on a

358
00:14:19,660 --> 00:14:22,600
marker I had the task to add a message

359
00:14:22,600 --> 00:14:24,970
about the room price that you see being

360
00:14:24,970 --> 00:14:27,490
almost sold out and the logical place to

361
00:14:27,490 --> 00:14:29,040
put it soon to be next to the price

362
00:14:29,040 --> 00:14:31,120
especially since there's often a big gap

363
00:14:31,120 --> 00:14:33,130
there and this is what that would look

364
00:14:33,130 --> 00:14:35,110
like the price and the message

365
00:14:35,110 --> 00:14:37,149
are visually connected and the message

366
00:14:37,149 --> 00:14:38,619
kind of leads you to the the

367
00:14:38,619 --> 00:14:42,069
call-to-action button so I like this but

368
00:14:42,069 --> 00:14:43,540
the problem is that there is not always

369
00:14:43,540 --> 00:14:46,629
a big gap there rack rate pricing long

370
00:14:46,629 --> 00:14:49,119
languages long currencies can all take

371
00:14:49,119 --> 00:14:52,209
up a lot of space in this case this is

372
00:14:52,209 --> 00:14:54,639
due to variable content but the same

373
00:14:54,639 --> 00:14:56,110
issue applies in responsive web design

374
00:14:56,110 --> 00:14:58,240
of course where the width that you have

375
00:14:58,240 --> 00:15:02,019
available in varies that you have

376
00:15:02,019 --> 00:15:03,850
something sorry the width that you have

377
00:15:03,850 --> 00:15:06,429
available to put something in varies as

378
00:15:06,429 --> 00:15:08,829
the viewport width changes size so in

379
00:15:08,829 --> 00:15:11,019
both cases I have the problem of wanting

380
00:15:11,019 --> 00:15:13,089
to put something in a spot but not being

381
00:15:13,089 --> 00:15:16,139
sure if that spot is always big enough

382
00:15:16,139 --> 00:15:19,509
what I would like to happen is that the

383
00:15:19,509 --> 00:15:21,339
text sits beside the price if there's

384
00:15:21,339 --> 00:15:23,110
enough room and then when the space

385
00:15:23,110 --> 00:15:25,569
shrinks below some minimum width that I

386
00:15:25,569 --> 00:15:27,699
set it drops down onto the following

387
00:15:27,699 --> 00:15:29,679
line and then it stretches to take up

388
00:15:29,679 --> 00:15:32,709
the full width now without an explicit

389
00:15:32,709 --> 00:15:34,809
width on the availability message the

390
00:15:34,809 --> 00:15:38,259
red text making it float or inline block

391
00:15:38,259 --> 00:15:41,589
will not let its text wrap so this first

392
00:15:41,589 --> 00:15:44,259
image with the red text wrapping could

393
00:15:44,259 --> 00:15:46,179
not happen the text would want to stay

394
00:15:46,179 --> 00:15:48,279
all in one line and so it would always

395
00:15:48,279 --> 00:15:51,790
drop below the price table cell will at

396
00:15:51,790 --> 00:15:54,339
the text wrap within that area but it

397
00:15:54,339 --> 00:15:56,230
won't let the entire block wrap down

398
00:15:56,230 --> 00:15:58,120
below the price when there's not enough

399
00:15:58,120 --> 00:16:00,550
room or when the space is just too

400
00:16:00,550 --> 00:16:02,319
narrow for that text to look good there

401
00:16:02,319 --> 00:16:04,899
so this second image with the red text

402
00:16:04,899 --> 00:16:07,809
below couldn't happen so that leaves

403
00:16:07,809 --> 00:16:09,579
Flex box which is kind of like the best

404
00:16:09,579 --> 00:16:11,350
of both worlds and lets me have both of

405
00:16:11,350 --> 00:16:14,079
these languages with one piece of CSS or

406
00:16:14,079 --> 00:16:15,850
both of these layouts with one you know

407
00:16:15,850 --> 00:16:18,009
piece of CSS so I get the stretch and

408
00:16:18,009 --> 00:16:20,980
squish behavior of table cell but it

409
00:16:20,980 --> 00:16:23,799
lets the boxes wrap if if I tell it to

410
00:16:23,799 --> 00:16:25,990
and if it needs to based on the space

411
00:16:25,990 --> 00:16:28,360
available and again it does this without

412
00:16:28,360 --> 00:16:33,040
media queries so IE 7 8 & 9 users will

413
00:16:33,040 --> 00:16:35,079
simply see the availab available 'ti

414
00:16:35,079 --> 00:16:37,540
message always below the price which

415
00:16:37,540 --> 00:16:40,720
doesn't look bad or broken the few line

416
00:16:40,720 --> 00:16:42,999
of lines of flexbox code are then

417
00:16:42,999 --> 00:16:45,579
layered on top as an enhancement for the

418
00:16:45,579 --> 00:16:48,910
vast majority of users and flex box is

419
00:16:48,910 --> 00:16:49,180
great

420
00:16:49,180 --> 00:16:50,800
for this sort of micro layout stuff

421
00:16:50,800 --> 00:16:53,980
managing the sizing and spacing of items

422
00:16:53,980 --> 00:16:57,070
within a component or module you can use

423
00:16:57,070 --> 00:16:58,480
flex locks in a similar way and

424
00:16:58,480 --> 00:16:59,920
responsive designs where you have a

425
00:16:59,920 --> 00:17:01,960
component that sometimes has room for

426
00:17:01,960 --> 00:17:04,120
its sub items to sit side by side and

427
00:17:04,120 --> 00:17:06,790
sometimes needs them to stack without

428
00:17:06,790 --> 00:17:08,590
you having to figure out at what point

429
00:17:08,590 --> 00:17:12,550
that happens another example of how flex

430
00:17:12,550 --> 00:17:14,530
box can handle wrapping more elegantly

431
00:17:14,530 --> 00:17:17,200
is in what we call the mini info windows

432
00:17:17,200 --> 00:17:19,120
on our maps that show when you hover

433
00:17:19,120 --> 00:17:21,880
over a marker I use flexbox to layout

434
00:17:21,880 --> 00:17:23,950
the review score and the price on

435
00:17:23,950 --> 00:17:27,430
opposite sides of the same line again I

436
00:17:27,430 --> 00:17:28,900
couldn't give either of these two blocks

437
00:17:28,900 --> 00:17:31,210
a width even in a relative unit of

438
00:17:31,210 --> 00:17:32,920
measurement because the length of the

439
00:17:32,920 --> 00:17:36,820
content in each can vary wildly without

440
00:17:36,820 --> 00:17:39,550
set widths inline-block would not move

441
00:17:39,550 --> 00:17:42,250
the price the price block to the right

442
00:17:42,250 --> 00:17:45,070
side so that was out table-cell worked

443
00:17:45,070 --> 00:17:46,720
fine without set widths but if the

444
00:17:46,720 --> 00:17:48,970
content was long the two pieces could

445
00:17:48,970 --> 00:17:50,890
overlap instead of the second block

446
00:17:50,890 --> 00:17:52,390
wrapping to new line which would be

447
00:17:52,390 --> 00:17:53,640
completely unacceptable

448
00:17:53,640 --> 00:17:56,710
that left floating and flexbox as my

449
00:17:56,710 --> 00:17:59,680
layout options floating worked but when

450
00:17:59,680 --> 00:18:01,690
the content was long and the price

451
00:18:01,690 --> 00:18:03,760
wrapped to a second line as in this

452
00:18:03,760 --> 00:18:05,290
screenshot down here with the long

453
00:18:05,290 --> 00:18:08,890
German words it would stay right aligned

454
00:18:08,890 --> 00:18:12,280
which looks awkward so I decided to use

455
00:18:12,280 --> 00:18:15,100
both float for older browsers and then I

456
00:18:15,100 --> 00:18:17,290
overrode it with Flex box which lets the

457
00:18:17,290 --> 00:18:20,080
text wrap to the left edge more

458
00:18:20,080 --> 00:18:23,680
elegantly I didn't have to use modernizr

459
00:18:23,680 --> 00:18:25,840
and hide pieces of CSS from certain

460
00:18:25,840 --> 00:18:28,600
browsers flexbox just takes over if the

461
00:18:28,600 --> 00:18:30,790
browser understands it so no matter what

462
00:18:30,790 --> 00:18:33,040
the two blocks will appear side by side

463
00:18:33,040 --> 00:18:35,590
in all browsers and they will wrap when

464
00:18:35,590 --> 00:18:37,750
needed the wrapping and alignment of the

465
00:18:37,750 --> 00:18:39,400
text just isn't quite as nice looking

466
00:18:39,400 --> 00:18:42,070
and non flexbox browsers but that was

467
00:18:42,070 --> 00:18:43,690
going to happen whether or not I added

468
00:18:43,690 --> 00:18:48,610
flex box here I made a demo to show you

469
00:18:48,610 --> 00:18:50,260
how this improved wrapping behavior can

470
00:18:50,260 --> 00:18:52,210
come in handy on responsive sites

471
00:18:52,210 --> 00:18:55,420
specifically this article header uses

472
00:18:55,420 --> 00:18:57,490
flex box as an enhancement on top of

473
00:18:57,490 --> 00:18:58,450
display:table-cell

474
00:18:58,450 --> 00:19:01,150
to layout an align its various chunks of

475
00:19:01,150 --> 00:19:01,740
con

476
00:19:01,740 --> 00:19:04,150
and it switches the layout automatically

477
00:19:04,150 --> 00:19:07,240
without a media query this header block

478
00:19:07,240 --> 00:19:09,670
is basically a media block UI pattern

479
00:19:09,670 --> 00:19:11,170
that you see everywhere right with an

480
00:19:11,170 --> 00:19:13,330
image plus a block of text associated

481
00:19:13,330 --> 00:19:15,640
with it except here the text portion

482
00:19:15,640 --> 00:19:17,800
stretches to fill the whole width and

483
00:19:17,800 --> 00:19:19,990
the whole height available thanks to

484
00:19:19,990 --> 00:19:22,600
flex on the category the green block and

485
00:19:22,600 --> 00:19:29,800
align content on the multiple rows using

486
00:19:29,800 --> 00:19:32,050
flex to push the date to the opposite

487
00:19:32,050 --> 00:19:33,670
side is a great enhancement for what

488
00:19:33,670 --> 00:19:35,710
happens when there's not enough room to

489
00:19:35,710 --> 00:19:37,750
fit both the category and the date on

490
00:19:37,750 --> 00:19:39,640
the same line such as when the viewport

491
00:19:39,640 --> 00:19:41,410
is very narrow or the content is very

492
00:19:41,410 --> 00:19:45,490
long or both there's lots of ways to

493
00:19:45,490 --> 00:19:47,380
align content to opposite sides of a

494
00:19:47,380 --> 00:19:50,380
line with the old existing CSS that

495
00:19:50,380 --> 00:19:52,780
we've had forever but if I used floating

496
00:19:52,780 --> 00:19:54,790
or text the line to push the date to the

497
00:19:54,790 --> 00:19:56,830
right side when the day needed to wrap

498
00:19:56,830 --> 00:19:58,660
it would wrap down to the right edge

499
00:19:58,660 --> 00:20:00,940
just like in the mini info windows on

500
00:20:00,940 --> 00:20:04,420
the maps which looks kind of weird using

501
00:20:04,420 --> 00:20:06,250
flex instead it wraps to the left side

502
00:20:06,250 --> 00:20:10,120
which looks a lot more natural this is

503
00:20:10,120 --> 00:20:11,800
not the only alignment enhancement that

504
00:20:11,800 --> 00:20:14,020
flexbox can accomplish that no other CSS

505
00:20:14,020 --> 00:20:16,750
can produce I briefly showed you the

506
00:20:16,750 --> 00:20:18,610
line content property on this this

507
00:20:18,610 --> 00:20:20,530
header but there are two other flex box

508
00:20:20,530 --> 00:20:22,540
alignment properties that allow you to

509
00:20:22,540 --> 00:20:25,950
align content in new ways really simply

510
00:20:25,950 --> 00:20:28,270
which is invaluable and responsive

511
00:20:28,270 --> 00:20:29,500
designs where the content wraps

512
00:20:29,500 --> 00:20:32,070
differently at different viewport widths

513
00:20:32,070 --> 00:20:35,260
for instance flexbox can distribute an

514
00:20:35,260 --> 00:20:37,210
unknown number of items across an

515
00:20:37,210 --> 00:20:39,940
unknown an area of unknown width or

516
00:20:39,940 --> 00:20:42,850
height such as making a navbar full

517
00:20:42,850 --> 00:20:45,040
width with equal spaces in between all

518
00:20:45,040 --> 00:20:47,920
of the links if you wanted to make a

519
00:20:47,920 --> 00:20:50,110
navbar like this you'd probably first

520
00:20:50,110 --> 00:20:52,960
turn to display:table-cell and you would

521
00:20:52,960 --> 00:20:54,870
be able to make the nav full width and

522
00:20:54,870 --> 00:20:57,490
have the first and last links at the

523
00:20:57,490 --> 00:20:59,800
edges and you could even make each of

524
00:20:59,800 --> 00:21:02,620
the link boxes equal in width to each

525
00:21:02,620 --> 00:21:05,410
other if used table layout fixed but you

526
00:21:05,410 --> 00:21:06,790
would discover that you could not get

527
00:21:06,790 --> 00:21:09,370
equal spaces between the text block of

528
00:21:09,370 --> 00:21:12,850
each link so if I do display table and

529
00:21:12,850 --> 00:21:15,340
table layout fixed on a ul

530
00:21:15,340 --> 00:21:17,860
makes each Li the same width so they

531
00:21:17,860 --> 00:21:19,270
look equally spaced if they have

532
00:21:19,270 --> 00:21:22,030
backgrounds or borders but remove the

533
00:21:22,030 --> 00:21:23,830
backgrounds and borders and you see that

534
00:21:23,830 --> 00:21:26,740
the gaps actual the gaps between the

535
00:21:26,740 --> 00:21:30,010
actual links text is not equal so longer

536
00:21:30,010 --> 00:21:31,810
links have smaller spaces around them

537
00:21:31,810 --> 00:21:34,600
short links have bigger spaces but

538
00:21:34,600 --> 00:21:36,610
flexbox can fix these unequal gaps

539
00:21:36,610 --> 00:21:40,660
really simply here is a simple navbar

540
00:21:40,660 --> 00:21:44,070
from my flexbox demo site smores data us

541
00:21:44,070 --> 00:21:46,630
for the starter layout i used inline

542
00:21:46,630 --> 00:21:49,030
block to Center the links in a row under

543
00:21:49,030 --> 00:21:51,070
the logo they don't stretch full width

544
00:21:51,070 --> 00:21:52,960
but there's nothing broken or wrong

545
00:21:52,960 --> 00:21:55,660
looking and it works as a layout in the

546
00:21:55,660 --> 00:21:58,030
responsive page but there's no reason

547
00:21:58,030 --> 00:21:59,770
why I can't add a few lines of flexbox

548
00:21:59,770 --> 00:22:02,500
on top of this CSS to enhance the

549
00:22:02,500 --> 00:22:05,070
responsiveness of the nav further I

550
00:22:05,070 --> 00:22:07,420
simply added these two lines of flexbox

551
00:22:07,420 --> 00:22:11,080
in pink to the existing rules the Li are

552
00:22:11,080 --> 00:22:13,090
still set to inline block but now their

553
00:22:13,090 --> 00:22:14,920
Flex items too so I can take advantage

554
00:22:14,920 --> 00:22:18,760
of these new alignment properties within

555
00:22:18,760 --> 00:22:23,050
flexbox such as justify content setting

556
00:22:23,050 --> 00:22:25,870
justify content to space between moves

557
00:22:25,870 --> 00:22:28,660
the first and last Li to the edges and

558
00:22:28,660 --> 00:22:30,720
it equally distributes the space

559
00:22:30,720 --> 00:22:34,720
remaining in between the other links so

560
00:22:34,720 --> 00:22:36,880
using justify content space between here

561
00:22:36,880 --> 00:22:38,950
is how the nav then looks on medium

562
00:22:38,950 --> 00:22:41,560
width screens the links stretch out in

563
00:22:41,560 --> 00:22:43,360
the Flex box version and they remain

564
00:22:43,360 --> 00:22:45,960
centered in the non flex box browsers

565
00:22:45,960 --> 00:22:48,220
now having the nav filling the full

566
00:22:48,220 --> 00:22:50,230
width looks great on medium width

567
00:22:50,230 --> 00:22:52,300
screens like this but on really wide

568
00:22:52,300 --> 00:22:54,520
screens it starts looking too stretched

569
00:22:54,520 --> 00:22:57,070
out I wanted to make it more responsive

570
00:22:57,070 --> 00:22:59,920
to this extra space so I decided to use

571
00:22:59,920 --> 00:23:02,350
flexbox to pin the first two links to

572
00:23:02,350 --> 00:23:04,390
the left side of the logo and the last

573
00:23:04,390 --> 00:23:05,920
two links to the right side of the logo

574
00:23:05,920 --> 00:23:09,360
again a pretty common responsive nav

575
00:23:09,360 --> 00:23:13,630
layout to do this I first added a media

576
00:23:13,630 --> 00:23:15,580
query for wide screens so you do

577
00:23:15,580 --> 00:23:17,410
sometimes need to still use media

578
00:23:17,410 --> 00:23:18,520
queries with flexbox

579
00:23:18,520 --> 00:23:21,280
and I also edit a link to the moderniser

580
00:23:21,280 --> 00:23:23,380
script because I need to feed some

581
00:23:23,380 --> 00:23:26,380
styles to only flexbox browsers in this

582
00:23:26,380 --> 00:23:28,180
particular case as you'll see in just a

583
00:23:28,180 --> 00:23:29,049
minute

584
00:23:29,049 --> 00:23:32,029
much of the time flex locks and fallback

585
00:23:32,029 --> 00:23:35,179
styles can coexist as they did with the

586
00:23:35,179 --> 00:23:36,740
medium width version of the navbar that

587
00:23:36,740 --> 00:23:38,990
I just showed you but occasionally

588
00:23:38,990 --> 00:23:40,580
they'll conflict and you'll only want to

589
00:23:40,580 --> 00:23:42,950
apply a certain property if Flex box is

590
00:23:42,950 --> 00:23:45,980
in effect or not the modernize our

591
00:23:45,980 --> 00:23:48,259
script is perfect for this it can detect

592
00:23:48,259 --> 00:23:50,509
whether the browser does or doesn't

593
00:23:50,509 --> 00:23:52,639
support Flex box and whether it supports

594
00:23:52,639 --> 00:23:54,710
an old version or the current version

595
00:23:54,710 --> 00:23:56,929
and then adds the appropriate classes to

596
00:23:56,929 --> 00:23:59,389
your HTML tag which you can use to scope

597
00:23:59,389 --> 00:24:02,690
the rules in your CSS if you don't like

598
00:24:02,690 --> 00:24:04,369
moderniser and you want to keep the

599
00:24:04,369 --> 00:24:06,499
feature detection in your CSS you can

600
00:24:06,499 --> 00:24:09,919
also use the @ supports rule to detect

601
00:24:09,919 --> 00:24:12,379
whether the browser supports Lex box and

602
00:24:12,379 --> 00:24:14,869
feed rules only in that case to do

603
00:24:14,869 --> 00:24:17,809
something like this so at supports and

604
00:24:17,809 --> 00:24:19,970
moderniser are both good options for

605
00:24:19,970 --> 00:24:21,830
those rare cases when you do need to

606
00:24:21,830 --> 00:24:24,529
isolate your flex box styles from your

607
00:24:24,529 --> 00:24:28,309
other CSS for my navbar here

608
00:24:28,309 --> 00:24:31,399
I used modernizers flex box class to

609
00:24:31,399 --> 00:24:33,499
scope this new rule to only flex flex

610
00:24:33,499 --> 00:24:35,840
browsers where I want the nav to move up

611
00:24:35,840 --> 00:24:38,960
on the to the same line as the logo non

612
00:24:38,960 --> 00:24:40,700
supporting browsers will not use this

613
00:24:40,700 --> 00:24:43,249
rule so they will still get the inline

614
00:24:43,249 --> 00:24:45,889
block centered nav beneath the logo only

615
00:24:45,889 --> 00:24:47,749
the Flex box version of the nav will

616
00:24:47,749 --> 00:24:51,559
move up now to move the last two links

617
00:24:51,559 --> 00:24:53,600
to the right side I simply set

618
00:24:53,600 --> 00:24:57,139
margin-left:auto on the third link the

619
00:24:57,139 --> 00:24:59,269
throw party link again scoped to only

620
00:24:59,269 --> 00:25:01,429
flex box browsers and the reason that

621
00:25:01,429 --> 00:25:03,230
this works is that in Flex box if you

622
00:25:03,230 --> 00:25:04,999
set a margin and the main access to auto

623
00:25:04,999 --> 00:25:07,730
it takes up all of the free space that's

624
00:25:07,730 --> 00:25:11,090
left in that line so with

625
00:25:11,090 --> 00:25:12,679
margin-left:auto on the throw a party

626
00:25:12,679 --> 00:25:14,600
link the browser places all of extra

627
00:25:14,600 --> 00:25:16,809
space in the line to its left side

628
00:25:16,809 --> 00:25:19,190
effectively pushing it and all the stuff

629
00:25:19,190 --> 00:25:22,460
after it to the right edge so I get that

630
00:25:22,460 --> 00:25:24,259
parents of a split list without having

631
00:25:24,259 --> 00:25:26,809
to cheat and break it into two lists in

632
00:25:26,809 --> 00:25:29,299
the HTML which is less accessible and

633
00:25:29,299 --> 00:25:31,580
robust not so good for responsive web

634
00:25:31,580 --> 00:25:33,230
design where I'm trying to keep my HTML

635
00:25:33,230 --> 00:25:37,940
the same at all viewport widths this is

636
00:25:37,940 --> 00:25:40,490
a simple navbar but thanks to a bit of

637
00:25:40,490 --> 00:25:41,750
flex box it can

638
00:25:41,750 --> 00:25:43,300
make full use of the changing width

639
00:25:43,300 --> 00:25:46,190
flexbox increases its responsiveness as

640
00:25:46,190 --> 00:25:50,600
an enhancement where available flex box

641
00:25:50,600 --> 00:25:52,370
is not only a great way to make better

642
00:25:52,370 --> 00:25:54,080
use of the changing widths in a

643
00:25:54,080 --> 00:25:55,490
responsive layout but also to make

644
00:25:55,490 --> 00:25:58,010
better use of the changing heights so as

645
00:25:58,010 --> 00:25:59,840
the viewport changes with your content

646
00:25:59,840 --> 00:26:02,150
wraps differently so you can't count on

647
00:26:02,150 --> 00:26:04,600
constant Heights for your content blocks

648
00:26:04,600 --> 00:26:07,190
flex box can enhance the appearance of

649
00:26:07,190 --> 00:26:09,590
this variable height because it works in

650
00:26:09,590 --> 00:26:12,470
any direction so let's say that I want

651
00:26:12,470 --> 00:26:16,300
to show some social media sharing icons

652
00:26:16,300 --> 00:26:18,920
down the side of each article or media

653
00:26:18,920 --> 00:26:22,130
object and that media object content

654
00:26:22,130 --> 00:26:24,410
varies as does the viewport width which

655
00:26:24,410 --> 00:26:26,330
controls wrapping so the height of each

656
00:26:26,330 --> 00:26:29,000
varies and if I want to equally spaced

657
00:26:29,000 --> 00:26:31,520
the icons vertically to take up the full

658
00:26:31,520 --> 00:26:33,590
height I am out of luck

659
00:26:33,590 --> 00:26:36,170
I cannot explicitly set each of them to

660
00:26:36,170 --> 00:26:39,290
height 33% because the parent media

661
00:26:39,290 --> 00:26:41,510
object has no explicitly set height

662
00:26:41,510 --> 00:26:44,060
itself to base these percentages off of

663
00:26:44,060 --> 00:26:46,550
so percentage height value does nothing

664
00:26:46,550 --> 00:26:48,920
here but I don't need the height

665
00:26:48,920 --> 00:26:52,010
property with Flex box first I make the

666
00:26:52,010 --> 00:26:53,750
icon section and the content section

667
00:26:53,750 --> 00:26:56,570
Flex items with the default horizontal

668
00:26:56,570 --> 00:27:00,020
row alignment and I do this because I

669
00:27:00,020 --> 00:27:02,150
need them to be equal height and sibling

670
00:27:02,150 --> 00:27:04,010
flex items are equal height by default

671
00:27:04,010 --> 00:27:06,320
thanks to the line items properties set

672
00:27:06,320 --> 00:27:09,500
to stretch by default you can't see it

673
00:27:09,500 --> 00:27:11,450
here because the icons are still top

674
00:27:11,450 --> 00:27:13,190
aligned within their section but if the

675
00:27:13,190 --> 00:27:16,160
two sections had background colors you

676
00:27:16,160 --> 00:27:18,530
would see that icon section stretches to

677
00:27:18,530 --> 00:27:22,620
match the height of the content section

678
00:27:22,630 --> 00:27:25,580
so now the icon and the content section

679
00:27:25,580 --> 00:27:28,700
are equal height flex items but the

680
00:27:28,700 --> 00:27:30,800
individual icon images are not flex

681
00:27:30,800 --> 00:27:33,950
items because only children of a Flex

682
00:27:33,950 --> 00:27:36,110
container become Flex items not all

683
00:27:36,110 --> 00:27:39,020
descendants but something can be able to

684
00:27:39,020 --> 00:27:42,560
flex item and a Flex container so that's

685
00:27:42,560 --> 00:27:45,200
what I do I turn the icons section into

686
00:27:45,200 --> 00:27:47,380
a Flex container that makes its three

687
00:27:47,380 --> 00:27:51,320
children icon images into Flex items but

688
00:27:51,320 --> 00:27:53,540
this time I set Flex direction to column

689
00:27:53,540 --> 00:27:55,280
to stack them vertically from top

690
00:27:55,280 --> 00:27:57,950
to bottom this doesn't change anything

691
00:27:57,950 --> 00:27:59,990
visually yet they already resect

692
00:27:59,990 --> 00:28:02,150
vertically but remember that flex

693
00:28:02,150 --> 00:28:05,440
direction also controls the main axis

694
00:28:05,440 --> 00:28:08,390
with flex direction column the icons

695
00:28:08,390 --> 00:28:11,450
main axis is now vertical so if I use

696
00:28:11,450 --> 00:28:14,840
justify content space between two it

697
00:28:14,840 --> 00:28:16,670
will equally spaced them over the main

698
00:28:16,670 --> 00:28:19,370
axis which is the height no matter how

699
00:28:19,370 --> 00:28:23,570
tall that is and here's the results each

700
00:28:23,570 --> 00:28:25,700
media object has a different height but

701
00:28:25,700 --> 00:28:27,440
the icons always span the full height

702
00:28:27,440 --> 00:28:31,910
with equal spaces in between to make

703
00:28:31,910 --> 00:28:34,310
this work with non flexbox browsers you

704
00:28:34,310 --> 00:28:36,170
can use whatever technique you normally

705
00:28:36,170 --> 00:28:38,600
would to get the icon block to sit next

706
00:28:38,600 --> 00:28:40,010
to the content block such as

707
00:28:40,010 --> 00:28:40,970
display:table-cell

708
00:28:40,970 --> 00:28:43,970
or floating both of these can work and

709
00:28:43,970 --> 00:28:45,770
exist with Flex Vox and the same CSS

710
00:28:45,770 --> 00:28:49,010
rules floating I mean flexbox just

711
00:28:49,010 --> 00:28:51,500
overrides the float and table properties

712
00:28:51,500 --> 00:28:54,740
and browsers that understand it and then

713
00:28:54,740 --> 00:28:56,990
non supporting browsers your the icons

714
00:28:56,990 --> 00:28:59,660
will be either top aligned with the text

715
00:28:59,660 --> 00:29:03,080
or vertically centered as a block the

716
00:29:03,080 --> 00:29:04,640
browsers that don't support flex box

717
00:29:04,640 --> 00:29:08,420
have about 5% global market share so a

718
00:29:08,420 --> 00:29:10,520
few users will see the non flex box

719
00:29:10,520 --> 00:29:12,140
versions that I've shown you in these

720
00:29:12,140 --> 00:29:14,750
examples but none of those versions look

721
00:29:14,750 --> 00:29:17,630
wrong or broken just a little different

722
00:29:17,630 --> 00:29:19,940
which is already happening all the time

723
00:29:19,940 --> 00:29:22,790
anyway flex box is simply an enhancement

724
00:29:22,790 --> 00:29:24,380
to make better use of the space

725
00:29:24,380 --> 00:29:27,080
especially between your breakpoints it's

726
00:29:27,080 --> 00:29:28,730
not a true grid system it wasn't

727
00:29:28,730 --> 00:29:30,890
designed to be so it's not the best

728
00:29:30,890 --> 00:29:33,680
choice for your overall page layout but

729
00:29:33,680 --> 00:29:35,690
it is a great choice for intelligently

730
00:29:35,690 --> 00:29:38,360
sizing and aligning components and

731
00:29:38,360 --> 00:29:40,550
smaller chunks of content within the

732
00:29:40,550 --> 00:29:45,560
major page page sections flex box also

733
00:29:45,560 --> 00:29:47,510
lets you visually rearrange content

734
00:29:47,510 --> 00:29:49,370
which comes in handy again on responsive

735
00:29:49,370 --> 00:29:51,170
sites where you're stuck with the same

736
00:29:51,170 --> 00:29:53,570
HTML order at all the sizes but you want

737
00:29:53,570 --> 00:29:55,670
to shuffle content around on different

738
00:29:55,670 --> 00:29:57,860
views and it's sometimes hard to make a

739
00:29:57,860 --> 00:29:59,690
block go where you want it to when

740
00:29:59,690 --> 00:30:01,160
you're tied to a certain source order

741
00:30:01,160 --> 00:30:04,460
but flex box makes this easier so

742
00:30:04,460 --> 00:30:06,890
remember the split navbar I used

743
00:30:06,890 --> 00:30:08,750
relative positioning and a negative

744
00:30:08,750 --> 00:30:10,550
top value to move the navbar up

745
00:30:10,550 --> 00:30:12,530
overlapping the same line as the logo

746
00:30:12,530 --> 00:30:15,230
which is fine but since the logo is not

747
00:30:15,230 --> 00:30:17,540
actually in the middle of the list the

748
00:30:17,540 --> 00:30:19,460
links on either side of it can overlap

749
00:30:19,460 --> 00:30:21,230
it if the browser window gets too small

750
00:30:21,230 --> 00:30:24,740
I avoid this with a media query but if

751
00:30:24,740 --> 00:30:26,870
the logo was actually moved in the flow

752
00:30:26,870 --> 00:30:28,190
to the middle of the list I wouldn't

753
00:30:28,190 --> 00:30:30,740
have to do this but I don't want to move

754
00:30:30,740 --> 00:30:32,870
the logo in the middle of the list in

755
00:30:32,870 --> 00:30:35,300
the HTML because on narrow screens I

756
00:30:35,300 --> 00:30:37,360
still want it to come before the nav

757
00:30:37,360 --> 00:30:40,460
with Flex box I can keep the logo in

758
00:30:40,460 --> 00:30:44,000
before the links in the HTML but move it

759
00:30:44,000 --> 00:30:46,040
visually and in the flow to the middle

760
00:30:46,040 --> 00:30:49,820
using the order property you set the

761
00:30:49,820 --> 00:30:52,490
order property on Flex items to specify

762
00:30:52,490 --> 00:30:54,530
which order you want the browser to lay

763
00:30:54,530 --> 00:30:57,050
them out in their container regardless

764
00:30:57,050 --> 00:30:59,510
of the HTML order and the browser runs

765
00:30:59,510 --> 00:31:01,250
from the lowest numbers including

766
00:31:01,250 --> 00:31:03,560
negative to the highest so you can think

767
00:31:03,560 --> 00:31:05,030
of it like assigning the items a

768
00:31:05,030 --> 00:31:09,680
position number in a line the first two

769
00:31:09,680 --> 00:31:12,320
links I want to stay first so they need

770
00:31:12,320 --> 00:31:13,910
the lowest order value so I'll just

771
00:31:13,910 --> 00:31:16,670
leave them with the default of zero the

772
00:31:16,670 --> 00:31:18,830
logo I want to be next so it needs the

773
00:31:18,830 --> 00:31:20,990
next highest order value I gave it one

774
00:31:20,990 --> 00:31:23,270
the last two links need to come after

775
00:31:23,270 --> 00:31:24,950
the logo so they need the next highest

776
00:31:24,950 --> 00:31:29,030
order value I gave them too so now that

777
00:31:29,030 --> 00:31:31,010
the logo is part of the line not

778
00:31:31,010 --> 00:31:33,500
separate from it it won't work to just

779
00:31:33,500 --> 00:31:36,170
have margin-left:auto on that third link

780
00:31:36,170 --> 00:31:38,840
as before because with every last bit of

781
00:31:38,840 --> 00:31:41,990
extra space in the line put to its left

782
00:31:41,990 --> 00:31:44,120
it will squish the logo over on the

783
00:31:44,120 --> 00:31:47,810
right side to fix this I can use two

784
00:31:47,810 --> 00:31:49,910
auto margins and the browser will simply

785
00:31:49,910 --> 00:31:51,500
divide the extra space on the line

786
00:31:51,500 --> 00:31:54,950
evenly between the two items with those

787
00:31:54,950 --> 00:31:57,650
margins so throw a party already has

788
00:31:57,650 --> 00:32:00,080
margin-left:auto from before but I'll

789
00:32:00,080 --> 00:32:01,190
sorry

790
00:32:01,190 --> 00:32:03,890
I'll add the same to the logo so half

791
00:32:03,890 --> 00:32:05,840
the extra space goes on the left side of

792
00:32:05,840 --> 00:32:07,730
the logo half of it goes on the left

793
00:32:07,730 --> 00:32:10,010
side of the throw a party link and thus

794
00:32:10,010 --> 00:32:13,910
the logos move to the center now in

795
00:32:13,910 --> 00:32:15,830
order to make this work I had to move

796
00:32:15,830 --> 00:32:18,320
the logo from outside the UL to inside

797
00:32:18,320 --> 00:32:20,540
at the same level as the other links

798
00:32:20,540 --> 00:32:22,190
that's because order

799
00:32:22,190 --> 00:32:24,650
only works on siblings within the same

800
00:32:24,650 --> 00:32:26,630
Flex container you cannot move elements

801
00:32:26,630 --> 00:32:29,000
outside of their container to be before

802
00:32:29,000 --> 00:32:31,280
after stuff that's outside the container

803
00:32:31,280 --> 00:32:34,190
this does make it limiting you have more

804
00:32:34,190 --> 00:32:36,200
sorcery order independence than

805
00:32:36,200 --> 00:32:38,960
currently out methods but you still have

806
00:32:38,960 --> 00:32:40,370
complete freedom to move anything

807
00:32:40,370 --> 00:32:44,090
anywhere this is perhaps a good thing

808
00:32:44,090 --> 00:32:45,470
because you don't want to go crazy

809
00:32:45,470 --> 00:32:47,840
moving everything around with the order

810
00:32:47,840 --> 00:32:50,510
property when you reorder content with

811
00:32:50,510 --> 00:32:52,280
Flex box you are only reordering it

812
00:32:52,280 --> 00:32:54,140
visually it does not change the screen

813
00:32:54,140 --> 00:32:57,290
reading order or the tab order so if the

814
00:32:57,290 --> 00:32:59,180
content that you're reordering contains

815
00:32:59,180 --> 00:33:02,420
text or tablet content make sure that

816
00:33:02,420 --> 00:33:05,750
the HTML order is logical first and then

817
00:33:05,750 --> 00:33:08,630
use visual reordering only if it's just

818
00:33:08,630 --> 00:33:10,040
decorative and doesn't change the

819
00:33:10,040 --> 00:33:13,880
meaning of the content I'm running out

820
00:33:13,880 --> 00:33:15,560
of time but let me quickly give you a

821
00:33:15,560 --> 00:33:17,420
simple example of accessible reordering

822
00:33:17,420 --> 00:33:20,570
with Flex box so on this recipe the

823
00:33:20,570 --> 00:33:22,730
photo comes before the ingredients list

824
00:33:22,730 --> 00:33:25,370
in the HTML so that on the wider view I

825
00:33:25,370 --> 00:33:27,350
can float it beside the ingredients and

826
00:33:27,350 --> 00:33:29,840
the narrow mobile view just stacks

827
00:33:29,840 --> 00:33:33,350
everything in the default HTML order but

828
00:33:33,350 --> 00:33:35,120
I could use the Flex box order property

829
00:33:35,120 --> 00:33:37,730
to move the photo from its HTML position

830
00:33:37,730 --> 00:33:39,830
before the ingredients to above the rest

831
00:33:39,830 --> 00:33:42,710
of title on mobile only and in this case

832
00:33:42,710 --> 00:33:44,360
this is not going to cause accessibility

833
00:33:44,360 --> 00:33:46,130
problems because there's no links in the

834
00:33:46,130 --> 00:33:48,380
photo to tab 2 and there's no text in

835
00:33:48,380 --> 00:33:49,970
the photo to be read by screen readers

836
00:33:49,970 --> 00:33:51,770
because I would give it no lul text

837
00:33:51,770 --> 00:33:53,450
because the recipe itself provides a

838
00:33:53,450 --> 00:33:56,750
text alternative so to move the photo

839
00:33:56,750 --> 00:33:59,360
and the styles outside any media queries

840
00:33:59,360 --> 00:34:01,700
I set flex direction to column to stack

841
00:34:01,700 --> 00:34:04,640
everything and I set the order value of

842
00:34:04,640 --> 00:34:06,830
the image to negative 1 all the other

843
00:34:06,830 --> 00:34:09,020
Flex items inside the recipe container

844
00:34:09,020 --> 00:34:11,900
have the default order value of 0 so

845
00:34:11,900 --> 00:34:14,060
negative 1 we'll move it to the top of

846
00:34:14,060 --> 00:34:16,850
the stack and then on the desktop view I

847
00:34:16,850 --> 00:34:19,190
simply turn off flex box by setting the

848
00:34:19,190 --> 00:34:21,710
recipes display back to block that puts

849
00:34:21,710 --> 00:34:23,480
the image back in the normal flow order

850
00:34:23,480 --> 00:34:25,870
where I can then float it to the right

851
00:34:25,870 --> 00:34:28,190
so there's no concern about flex box

852
00:34:28,190 --> 00:34:29,900
support on desktop since I'm not using

853
00:34:29,900 --> 00:34:32,030
it there and any mobile browsers that

854
00:34:32,030 --> 00:34:33,860
don't support it will simply see the

855
00:34:33,860 --> 00:34:35,780
image before the ingredients as

856
00:34:35,780 --> 00:34:39,409
normale I already showed you the

857
00:34:39,409 --> 00:34:42,080
Guardians job search form which doesn't

858
00:34:42,080 --> 00:34:43,909
use flexbox but their main site now does

859
00:34:43,909 --> 00:34:46,070
and they use flexbox to shuffle the

860
00:34:46,070 --> 00:34:47,570
stories around when you get to the wide

861
00:34:47,570 --> 00:34:50,510
view they actually don't use the order

862
00:34:50,510 --> 00:34:53,630
property to do this the Flex box lets

863
00:34:53,630 --> 00:34:55,880
you run content not just top to bottom

864
00:34:55,880 --> 00:34:58,490
and left to right but also bottom to top

865
00:34:58,490 --> 00:35:00,770
and right to left so this is another

866
00:35:00,770 --> 00:35:03,080
clever way that flexbox can improve

867
00:35:03,080 --> 00:35:04,910
responsiveness so definitely go to their

868
00:35:04,910 --> 00:35:06,740
site and check out their CSS to learn

869
00:35:06,740 --> 00:35:08,900
more about the they're sort of

870
00:35:08,900 --> 00:35:13,100
reordering I've shown you code for most

871
00:35:13,100 --> 00:35:15,050
of these examples but I don't think that

872
00:35:15,050 --> 00:35:16,850
the code is the most important part of

873
00:35:16,850 --> 00:35:19,370
learning flexbox I think the biggest

874
00:35:19,370 --> 00:35:22,040
obstacle to getting started with it is

875
00:35:22,040 --> 00:35:24,380
not being able to picture how to use it

876
00:35:24,380 --> 00:35:26,000
because you're stuck thinking in terms

877
00:35:26,000 --> 00:35:28,790
of what was possible with floats and

878
00:35:28,790 --> 00:35:31,340
other old layout methods it was the same

879
00:35:31,340 --> 00:35:33,680
when we switched from tables to CSS and

880
00:35:33,680 --> 00:35:36,290
from fixed to fluid you had to make a

881
00:35:36,290 --> 00:35:38,720
mental shift to start thinking in terms

882
00:35:38,720 --> 00:35:42,500
of the new possibilities and approaches

883
00:35:42,500 --> 00:35:45,980
to old problems flexbox lets you do lots

884
00:35:45,980 --> 00:35:47,390
of things that you haven't been able to

885
00:35:47,390 --> 00:35:49,220
do before and lots of things that you

886
00:35:49,220 --> 00:35:51,080
could do before but now in an even

887
00:35:51,080 --> 00:35:53,600
simpler way once you see what flexbox

888
00:35:53,600 --> 00:35:56,030
can do in the real world you can start

889
00:35:56,030 --> 00:35:57,890
picturing how to use it in your own work

890
00:35:57,890 --> 00:35:59,690
to solve real responsive web design

891
00:35:59,690 --> 00:36:05,480
problems today flex box can be tricky to

892
00:36:05,480 --> 00:36:07,670
wrap your head around at first but once

893
00:36:07,670 --> 00:36:09,200
you've learned it it's an incredibly

894
00:36:09,200 --> 00:36:11,570
quick cheap way for you to add more

895
00:36:11,570 --> 00:36:13,850
responsiveness to your components and it

896
00:36:13,850 --> 00:36:16,040
may sound weird to talk about enhancing

897
00:36:16,040 --> 00:36:17,840
responsiveness but I don't think that

898
00:36:17,840 --> 00:36:20,150
responsive web design is either on or

899
00:36:20,150 --> 00:36:22,280
off either your site is responsive or

900
00:36:22,280 --> 00:36:24,590
it's not there's always more that you

901
00:36:24,590 --> 00:36:27,140
could do to make a responsive site even

902
00:36:27,140 --> 00:36:29,180
more responsive to the different user

903
00:36:29,180 --> 00:36:33,050
settings and the content within it flex

904
00:36:33,050 --> 00:36:34,880
box is one of those things that you can

905
00:36:34,880 --> 00:36:36,590
do as I hope you have seen with these

906
00:36:36,590 --> 00:36:40,130
examples don't be afraid to add flex box

907
00:36:40,130 --> 00:36:42,200
to your work because flex box is not all

908
00:36:42,200 --> 00:36:45,200
or nothing you you don't need to use it

909
00:36:45,200 --> 00:36:47,360
you don't need to use every single part

910
00:36:47,360 --> 00:36:49,160
of it to layout every single

911
00:36:49,160 --> 00:36:51,529
on your site you can keep using floats

912
00:36:51,529 --> 00:36:53,480
or table display or whatever it is you

913
00:36:53,480 --> 00:36:55,970
use to create layouts just add on flex

914
00:36:55,970 --> 00:36:58,190
box in one spot to add one little

915
00:36:58,190 --> 00:37:00,200
enhancement and see how it can improve

916
00:37:00,200 --> 00:37:02,200
responsiveness on your site

