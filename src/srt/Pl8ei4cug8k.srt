1
00:00:10,630 --> 00:00:21,510

you

2
00:00:21,520 --> 00:00:25,160


3
00:00:25,170 --> 00:00:27,480
yes I'm John bratman I work at a company

4
00:00:27,480 --> 00:00:30,240
called badoo in London and I'm not going

5
00:00:30,240 --> 00:00:31,260
to teach you about the future of the

6
00:00:31,260 --> 00:00:33,660
universe and everything and I want about

7
00:00:33,660 --> 00:00:36,150
JavaScript and that probably doesn't

8
00:00:36,150 --> 00:00:37,950
come as much surprised because we all

9
00:00:37,950 --> 00:00:40,800
here to talk about JavaScript but I want

10
00:00:40,800 --> 00:00:43,290
to talk about JavaScript just JavaScript

11
00:00:43,290 --> 00:00:45,780
maybe not a lot of things we're talking

12
00:00:45,780 --> 00:00:47,850
about here just for 30 minutes of your

13
00:00:47,850 --> 00:00:52,680
time and I write a lot of JavaScript not

14
00:00:52,680 --> 00:00:54,180
coffeescript nothing like that

15
00:00:54,180 --> 00:00:57,600
javascript a lot of it and have to

16
00:00:57,600 --> 00:00:58,979
contend with a lot of problems I think a

17
00:00:58,979 --> 00:01:00,510
lot of people do and we talk about these

18
00:01:00,510 --> 00:01:03,120
things a lot we may be bashed JavaScript

19
00:01:03,120 --> 00:01:06,030
a little bit I want to talk about what

20
00:01:06,030 --> 00:01:08,640
we're doing in production now today with

21
00:01:08,640 --> 00:01:10,229
things we have not maybe the things that

22
00:01:10,229 --> 00:01:11,760
are coming soon although that's really

23
00:01:11,760 --> 00:01:15,299
cool and there's four things I'd like to

24
00:01:15,299 --> 00:01:16,650
talk about I think these come up almost

25
00:01:16,650 --> 00:01:20,280
every day for me and it may seem quite

26
00:01:20,280 --> 00:01:22,650
basic and quite a level but still I'll

27
00:01:22,650 --> 00:01:28,070
have a little chat so type checking

28
00:01:28,070 --> 00:01:30,689
javascripts dynamic which is really good

29
00:01:30,689 --> 00:01:33,090
we want a dynamic language that's why we

30
00:01:33,090 --> 00:01:36,509
probably why we love it but sometimes we

31
00:01:36,509 --> 00:01:38,609
need to check for things so sometimes we

32
00:01:38,609 --> 00:01:39,659
need to actually know that something is

33
00:01:39,659 --> 00:01:41,399
what it says it is what we think it is

34
00:01:41,399 --> 00:01:43,109
before we act on it and fall over

35
00:01:43,109 --> 00:01:45,840
ourselves what we don't want to happen

36
00:01:45,840 --> 00:01:48,479
is this then we've got a year to make

37
00:01:48,479 --> 00:01:53,880
sure this doesn't happen and he's a

38
00:01:53,880 --> 00:01:57,450
funny guy and what does he mean what

39
00:01:57,450 --> 00:01:58,530
does he mean by literally wrote

40
00:01:58,530 --> 00:01:59,999
everything in JavaScript nothing works

41
00:01:59,999 --> 00:02:01,409
well I think we all know what this is

42
00:02:01,409 --> 00:02:04,350
this is a web app and it doesn't do

43
00:02:04,350 --> 00:02:07,020
anything unless we have JavaScript so

44
00:02:07,020 --> 00:02:08,399
let's assume we do have JavaScript we're

45
00:02:08,399 --> 00:02:09,720
not and something like we disable

46
00:02:09,720 --> 00:02:11,790
JavaScript we have JavaScript bat file

47
00:02:11,790 --> 00:02:13,200
is going to load and it's going to

48
00:02:13,200 --> 00:02:16,170
change the world for us and we might do

49
00:02:16,170 --> 00:02:18,210
something like this which is very

50
00:02:18,210 --> 00:02:20,580
reasonable and you know nothing

51
00:02:20,580 --> 00:02:23,040
inherently wrong with this but there are

52
00:02:23,040 --> 00:02:24,060
some things that could go wrong with

53
00:02:24,060 --> 00:02:26,340
this you know there's a lot of things

54
00:02:26,340 --> 00:02:28,170
that could go wrong but those things we

55
00:02:28,170 --> 00:02:30,000
don't know what conversations is we

56
00:02:30,000 --> 00:02:32,069
assume in this case is an array or

57
00:02:32,069 --> 00:02:34,140
something that really like we don't know

58
00:02:34,140 --> 00:02:36,299
that and actually a whole lot of things

59
00:02:36,299 --> 00:02:37,870
have to go right

60
00:02:37,870 --> 00:02:42,970
for that not to break this is common we

61
00:02:42,970 --> 00:02:45,760
do this all the time save data values

62
00:02:45,760 --> 00:02:47,650
the truth a truth is fine we liked

63
00:02:47,650 --> 00:02:52,780
Ruthie but in this case no again which

64
00:02:52,780 --> 00:02:54,760
you know so truthy data they do not

65
00:02:54,760 --> 00:02:56,140
value it really kind of going down this

66
00:02:56,140 --> 00:02:58,319
road of saying do we have what we want

67
00:02:58,319 --> 00:03:00,909
but we don't an interesting with this

68
00:03:00,909 --> 00:03:04,060
example what's value is it a string is

69
00:03:04,060 --> 00:03:06,340
it an array is it something else that

70
00:03:06,340 --> 00:03:08,709
implements the same method who knows we

71
00:03:08,709 --> 00:03:12,040
don't know again similar example gamma

72
00:03:12,040 --> 00:03:14,349
you know truthiness we check for this

73
00:03:14,349 --> 00:03:15,640
thing of saying we had we have something

74
00:03:15,640 --> 00:03:18,370
does it contain something yes is what we

75
00:03:18,370 --> 00:03:24,040
think it is no so we use type of you see

76
00:03:24,040 --> 00:03:26,620
that a lot its operating jobs get built

77
00:03:26,620 --> 00:03:29,440
in awesome and it does what it should do

78
00:03:29,440 --> 00:03:31,180
for all these examples that's really

79
00:03:31,180 --> 00:03:33,549
great but it doesn't do what it should

80
00:03:33,549 --> 00:03:35,200
what you expect it to do for these

81
00:03:35,200 --> 00:03:36,909
things and we that's probably ask all

82
00:03:36,909 --> 00:03:39,430
know this we all know this type of a ray

83
00:03:39,430 --> 00:03:43,090
object type of null object Oh helpful

84
00:03:43,090 --> 00:03:46,180
and type of not a number number not

85
00:03:46,180 --> 00:03:51,849
broken but not useful not useful so a

86
00:03:51,849 --> 00:03:53,200
lot of people know we can use this you

87
00:03:53,200 --> 00:03:54,879
see this in joint Java's get life is all

88
00:03:54,879 --> 00:03:55,870
over the place here is an underscore

89
00:03:55,870 --> 00:03:59,049
season jquery we know we can use this to

90
00:03:59,049 --> 00:04:02,200
check for types and why because there's

91
00:04:02,200 --> 00:04:03,459
a really good spec for it it's very

92
00:04:03,459 --> 00:04:06,790
specific spec that says if this value is

93
00:04:06,790 --> 00:04:09,150
undefined we should return this string

94
00:04:09,150 --> 00:04:13,359
object undefined same for null it's

95
00:04:13,359 --> 00:04:15,489
awesome it's really really specific and

96
00:04:15,489 --> 00:04:16,449
then it got to be more interesting it

97
00:04:16,449 --> 00:04:18,940
says that class b the value of the class

98
00:04:18,940 --> 00:04:20,979
property of this so you're talking out

99
00:04:20,979 --> 00:04:22,449
internals of the javascript engines

100
00:04:22,449 --> 00:04:23,440
which i'll be honest i know nothing

101
00:04:23,440 --> 00:04:27,010
about and then return this string we

102
00:04:27,010 --> 00:04:29,310
have objects class square bracket

103
00:04:29,310 --> 00:04:31,449
fantastic and we've kind of probably a

104
00:04:31,449 --> 00:04:32,560
lot of you would have seen that string

105
00:04:32,560 --> 00:04:35,440
this the square bracket object thing and

106
00:04:35,440 --> 00:04:38,320
we write something to use this because

107
00:04:38,320 --> 00:04:40,000
this is dynamic because this is great

108
00:04:40,000 --> 00:04:41,169
this is JavaScript and everything's

109
00:04:41,169 --> 00:04:42,849
dynamic so we can use our caller apply

110
00:04:42,849 --> 00:04:45,099
function prototype to change the value

111
00:04:45,099 --> 00:04:48,669
and get to it we see this in or versions

112
00:04:48,669 --> 00:04:50,409
of this and kind of loads of JavaScript

113
00:04:50,409 --> 00:04:51,490
libraries again

114
00:04:51,490 --> 00:04:53,590
it's an underscore similar ish things in

115
00:04:53,590 --> 00:04:56,259
j korean other libraries and the magic

116
00:04:56,259 --> 00:04:57,970
here is that where we're calling this

117
00:04:57,970 --> 00:05:01,780
method calling it the context I mean a

118
00:05:01,780 --> 00:05:03,880
lot of you may have seen this isn't yeah

119
00:05:03,880 --> 00:05:06,220
I know this but this is not a lot of

120
00:05:06,220 --> 00:05:09,520
code and I wonder how many people have

121
00:05:09,520 --> 00:05:12,550
got maybe underscore or something

122
00:05:12,550 --> 00:05:14,380
similar which again isn't a lot of code

123
00:05:14,380 --> 00:05:15,460
in the grand scheme of things but you

124
00:05:15,460 --> 00:05:17,169
know this is a lot of what we do so

125
00:05:17,169 --> 00:05:19,090
checking is this is some thing what we

126
00:05:19,090 --> 00:05:21,460
think it is this is such six lines of

127
00:05:21,460 --> 00:05:24,250
code really not massive problem to you

128
00:05:24,250 --> 00:05:25,360
need to write yourself I have something

129
00:05:25,360 --> 00:05:28,000
that does something similar so going

130
00:05:28,000 --> 00:05:29,530
back to what we have a four we have good

131
00:05:29,530 --> 00:05:32,110
at good results for all the things we

132
00:05:32,110 --> 00:05:33,490
started with we had good results for

133
00:05:33,490 --> 00:05:35,590
four which is obviously we want they're

134
00:05:35,590 --> 00:05:37,630
starting to get bound more useful things

135
00:05:37,630 --> 00:05:39,460
back for everything else so now we're

136
00:05:39,460 --> 00:05:44,020
saying right array no date but there's

137
00:05:44,020 --> 00:05:46,870
two on here that still still not really

138
00:05:46,870 --> 00:05:49,659
your useful when we set about the class

139
00:05:49,659 --> 00:05:51,970
the internal class property so in this

140
00:05:51,970 --> 00:05:53,860
case you know the body is h2 my body

141
00:05:53,860 --> 00:05:56,440
element image to my span element HTML

142
00:05:56,440 --> 00:05:59,080
anchor element almost too specific for

143
00:05:59,080 --> 00:06:00,490
most cases you probably want to say is

144
00:06:00,490 --> 00:06:02,440
it an element but you know it's your app

145
00:06:02,440 --> 00:06:05,650
you do eat want and and type a number

146
00:06:05,650 --> 00:06:08,440
still number still in this case just

147
00:06:08,440 --> 00:06:10,840
check a type it's not really useful you

148
00:06:10,840 --> 00:06:12,880
know we're gonna have to go further so

149
00:06:12,880 --> 00:06:13,719
we could go further we can write

150
00:06:13,719 --> 00:06:15,250
something a bit more complicated

151
00:06:15,250 --> 00:06:17,530
application specific we can say we want

152
00:06:17,530 --> 00:06:19,120
to check if that we want not a number to

153
00:06:19,120 --> 00:06:21,759
be a type in our app because it happens

154
00:06:21,759 --> 00:06:23,800
a lot we want to handle that case we

155
00:06:23,800 --> 00:06:25,030
want to we want elements just be

156
00:06:25,030 --> 00:06:26,680
elements and that's just pulled straight

157
00:06:26,680 --> 00:06:27,819
of underscore but you could do that a

158
00:06:27,819 --> 00:06:29,770
lot of different ways the point here is

159
00:06:29,770 --> 00:06:32,050
we're making some special cases for

160
00:06:32,050 --> 00:06:33,699
these things and we could make more

161
00:06:33,699 --> 00:06:35,770
special cases for the app you're writing

162
00:06:35,770 --> 00:06:36,880
that makes sense for the app you're

163
00:06:36,880 --> 00:06:40,990
writing and I think that's fine we go

164
00:06:40,990 --> 00:06:44,069
back to original example rewritten to

165
00:06:44,069 --> 00:06:47,280
make sure we don't have these errors and

166
00:06:47,280 --> 00:06:49,599
if you're thinking was just a lot more

167
00:06:49,599 --> 00:06:52,810
code though really your rise an extra

168
00:06:52,810 --> 00:06:54,190
one hundred and thirty-seven percent of

169
00:06:54,190 --> 00:06:58,240
code or minified again yes it you've

170
00:06:58,240 --> 00:07:00,490
that's how you look at it I mean yeah

171
00:07:00,490 --> 00:07:02,680
it's more but do you want for me to

172
00:07:02,680 --> 00:07:05,169
break in production you've got million

173
00:07:05,169 --> 00:07:07,719
of users do you want Gary's prediction

174
00:07:07,719 --> 00:07:09,520
to be true probably not but it's about

175
00:07:09,520 --> 00:07:12,249
being sensible check four types we're

176
00:07:12,249 --> 00:07:14,110
not doing so could cause an exception or

177
00:07:14,110 --> 00:07:16,060
make code ambiguous don't have to do it

178
00:07:16,060 --> 00:07:18,009
all of the time but when we're talking

179
00:07:18,009 --> 00:07:20,199
about external data things from api's or

180
00:07:20,199 --> 00:07:23,229
whatever let's check it then let's just

181
00:07:23,229 --> 00:07:24,999
make sure that if we haven't been

182
00:07:24,999 --> 00:07:26,259
completely in control of what we're

183
00:07:26,259 --> 00:07:27,789
doing that we're actually checking other

184
00:07:27,789 --> 00:07:31,300
libraries and things like that sajal

185
00:07:31,300 --> 00:07:32,789
move on let's talk about classes

186
00:07:32,789 --> 00:07:36,099
inheritance jos who doesn't have classes

187
00:07:36,099 --> 00:07:41,080
again know this and why does it matter

188
00:07:41,080 --> 00:07:43,300
why do we want classes i feels that we

189
00:07:43,300 --> 00:07:45,039
gravitate towards its developers i feel

190
00:07:45,039 --> 00:07:46,360
like we always end up going back to this

191
00:07:46,360 --> 00:07:50,319
as a structure and rightly so i kind of

192
00:07:50,319 --> 00:07:52,960
want to do this and maybe something no i

193
00:07:52,960 --> 00:07:54,310
don't want to do this but kind of we do

194
00:07:54,310 --> 00:07:57,669
everyone wants to write this and the

195
00:07:57,669 --> 00:07:59,110
reason I say Evan wants to write this is

196
00:07:59,110 --> 00:08:01,240
because things like this exist and this

197
00:08:01,240 --> 00:08:03,069
wouldn't exist if someone didn't want to

198
00:08:03,069 --> 00:08:05,529
write the previous slide and this

199
00:08:05,529 --> 00:08:07,960
compiled to JavaScript me a more popular

200
00:08:07,960 --> 00:08:11,649
example much more terse but still you

201
00:08:11,649 --> 00:08:14,830
know class stands super we going back to

202
00:08:14,830 --> 00:08:16,479
these same concepts all the time and

203
00:08:16,479 --> 00:08:18,789
this exists because someone didn't want

204
00:08:18,789 --> 00:08:21,580
to write this which again I understand

205
00:08:21,580 --> 00:08:24,009
you know you've got a large code base

206
00:08:24,009 --> 00:08:25,750
you're already in JavaScript world and

207
00:08:25,750 --> 00:08:27,460
coffee script comes along and you look

208
00:08:27,460 --> 00:08:28,750
anything I it's really really good i

209
00:08:28,750 --> 00:08:30,789
really like that but i'm already here

210
00:08:30,789 --> 00:08:32,589
i'm already in this world we've got all

211
00:08:32,589 --> 00:08:35,440
this code i kind of don't want to don't

212
00:08:35,440 --> 00:08:37,029
go there and i also don't have to write

213
00:08:37,029 --> 00:08:39,969
this but this is you know half of this

214
00:08:39,969 --> 00:08:41,500
is a utility methods thirty percent are

215
00:08:41,500 --> 00:08:42,370
so we're not going to include that

216
00:08:42,370 --> 00:08:44,260
that's only once okay so we can we can I

217
00:08:44,260 --> 00:08:46,089
throw that away and that's our class

218
00:08:46,089 --> 00:08:48,370
definitions so we can pull that

219
00:08:48,370 --> 00:08:50,740
that'sthat's compiler output now so i

220
00:08:50,740 --> 00:08:53,589
would write this or you know or similar

221
00:08:53,589 --> 00:08:56,170
and sighs look a bit nice in out a bit

222
00:08:56,170 --> 00:08:58,899
more more compact bit more like we want

223
00:08:58,899 --> 00:09:01,029
it to worry we want to be and this is

224
00:09:01,029 --> 00:09:02,769
just JavaScript okay this isn't anything

225
00:09:02,769 --> 00:09:04,750
special this is all stuff we all know

226
00:09:04,750 --> 00:09:08,350
and the only magic bit is this the only

227
00:09:08,350 --> 00:09:09,639
thing we've had to bring to the party

228
00:09:09,639 --> 00:09:13,449
and yeah like you know so lots of cool

229
00:09:13,449 --> 00:09:15,279
things coming we're going to have class

230
00:09:15,279 --> 00:09:16,660
extend

231
00:09:16,660 --> 00:09:19,240
soon but right now we do things like

232
00:09:19,240 --> 00:09:24,069
this and that does this so what's this

233
00:09:24,069 --> 00:09:27,069
doing again not a lot of code really for

234
00:09:27,069 --> 00:09:28,629
you now for to say all you know Java she

235
00:09:28,629 --> 00:09:29,829
doesn't have class so it can't do

236
00:09:29,829 --> 00:09:31,709
classes we can't do this we have to use

237
00:09:31,709 --> 00:09:34,060
something like coffee script appeal to

238
00:09:34,060 --> 00:09:36,939
achieve this and we have something like

239
00:09:36,939 --> 00:09:38,920
this in our code base that you know more

240
00:09:38,920 --> 00:09:40,990
or less exactly this copying static

241
00:09:40,990 --> 00:09:42,519
properties and methods and we'll come

242
00:09:42,519 --> 00:09:43,889
back to static stuff in a minute and

243
00:09:43,889 --> 00:09:46,029
sitting at the prototype chain this is

244
00:09:46,029 --> 00:09:47,589
like classic interview question

245
00:09:47,589 --> 00:09:50,079
javascript isn't it we probably all know

246
00:09:50,079 --> 00:09:51,759
this and I just think it's interesting

247
00:09:51,759 --> 00:09:53,319
to point out that is again it's you know

248
00:09:53,319 --> 00:09:55,540
six or so lines of code so it's

249
00:09:55,540 --> 00:09:56,470
interesting when we come back to these

250
00:09:56,470 --> 00:09:58,810
things are saying we can't do this in

251
00:09:58,810 --> 00:10:00,129
JavaScript roids know it's really

252
00:10:00,129 --> 00:10:02,350
awkward to do this in JavaScript I just

253
00:10:02,350 --> 00:10:04,060
think I disagree i think this is really

254
00:10:04,060 --> 00:10:06,339
not a problem although it's nice that

255
00:10:06,339 --> 00:10:07,899
these new things are coming right now

256
00:10:07,899 --> 00:10:11,709
still this is fine and we end up where

257
00:10:11,709 --> 00:10:13,600
we want to be we end up in the right

258
00:10:13,600 --> 00:10:15,879
place that few extra lines are closed

259
00:10:15,879 --> 00:10:17,709
slightly different syntax we've got here

260
00:10:17,709 --> 00:10:19,449
and this all does what you would expect

261
00:10:19,449 --> 00:10:21,910
it to do and from then on it's about

262
00:10:21,910 --> 00:10:23,800
good practice and how you're managing

263
00:10:23,800 --> 00:10:25,509
teams are so you're just you and you're

264
00:10:25,509 --> 00:10:27,069
very lucky it's you code review yourself

265
00:10:27,069 --> 00:10:29,170
but we have a small senior developers we

266
00:10:29,170 --> 00:10:31,120
look at each other's code and and from

267
00:10:31,120 --> 00:10:33,250
then on it becomes about standards you

268
00:10:33,250 --> 00:10:36,189
set yourself you don't have to use

269
00:10:36,189 --> 00:10:38,319
getters and setters but it's quite good

270
00:10:38,319 --> 00:10:41,470
too and I've momentum I saw it all go

271
00:10:41,470 --> 00:10:43,540
down with some sort of a you see we're

272
00:10:43,540 --> 00:10:46,300
coming that into define properties and

273
00:10:46,300 --> 00:10:48,250
kind of the s5 s6 stuff where we can do

274
00:10:48,250 --> 00:10:49,540
guesses and setters through the first

275
00:10:49,540 --> 00:10:51,040
example we could actually have gets as

276
00:10:51,040 --> 00:10:53,050
letters for those but if you don't you

277
00:10:53,050 --> 00:10:54,339
know something like the bottom example

278
00:10:54,339 --> 00:10:55,569
there's like kind of an bo who have a

279
00:10:55,569 --> 00:10:57,399
simple set method that takes the key in

280
00:10:57,399 --> 00:10:59,470
the value and allows you to move bind

281
00:10:59,470 --> 00:11:01,120
some staff or listen for those changes

282
00:11:01,120 --> 00:11:04,449
and stuff like that this is just kind of

283
00:11:04,449 --> 00:11:05,860
personal bugbear of mine just because

284
00:11:05,860 --> 00:11:08,199
I'm on stage I get to tell you my

285
00:11:08,199 --> 00:11:11,740
bugbears and not defining things in

286
00:11:11,740 --> 00:11:14,529
class is just so irritating and just you

287
00:11:14,529 --> 00:11:16,300
know just say what you're doing and

288
00:11:16,300 --> 00:11:17,620
describe it usually use it as an

289
00:11:17,620 --> 00:11:19,540
opportunity to put a dot comment in

290
00:11:19,540 --> 00:11:21,100
there and you know say what you're

291
00:11:21,100 --> 00:11:22,779
trying to do is kind of randomly having

292
00:11:22,779 --> 00:11:24,339
this tour a door example you know it's

293
00:11:24,339 --> 00:11:27,710
just kills me

294
00:11:27,720 --> 00:11:30,149
we you know obviously you can do things

295
00:11:30,149 --> 00:11:32,639
with closures in JavaScript really to be

296
00:11:32,639 --> 00:11:36,870
easily but if you are writing you maybe

297
00:11:36,870 --> 00:11:38,579
you want to write some tests may testing

298
00:11:38,579 --> 00:11:41,459
private methods is a bit too boo but if

299
00:11:41,459 --> 00:11:42,689
we want to do things like this then just

300
00:11:42,689 --> 00:11:44,699
mark it as such you know this is this is

301
00:11:44,699 --> 00:11:46,920
fine you you know this isn't someone can

302
00:11:46,920 --> 00:11:48,689
still call that method yeah let's not

303
00:11:48,689 --> 00:11:50,220
we're not going to convince ourselves

304
00:11:50,220 --> 00:11:52,230
otherwise but you know it's simple but

305
00:11:52,230 --> 00:11:54,329
let's make it clear to other people and

306
00:11:54,329 --> 00:11:55,529
to ourselves coming back to hear what

307
00:11:55,529 --> 00:11:57,870
we're trying to do i mentioned static

308
00:11:57,870 --> 00:12:00,120
earlier and then the first example isn't

309
00:12:00,120 --> 00:12:02,550
wrong yeah i mean it's not wrong but i

310
00:12:02,550 --> 00:12:04,860
just think it's I think so maybe we

311
00:12:04,860 --> 00:12:07,560
forget we can do this this is just you

312
00:12:07,560 --> 00:12:09,149
know with it with this extends method we

313
00:12:09,149 --> 00:12:10,259
saw previously we're copying all this

314
00:12:10,259 --> 00:12:12,060
stuff along as we extend stuff and this

315
00:12:12,060 --> 00:12:13,620
is just a nice estructura thing for

316
00:12:13,620 --> 00:12:15,000
things that exist across all instances

317
00:12:15,000 --> 00:12:17,399
and you know standard i/o stuff but we

318
00:12:17,399 --> 00:12:18,779
don't you don't see this in JavaScript I

319
00:12:18,779 --> 00:12:20,759
don't see this in other libraries by

320
00:12:20,759 --> 00:12:24,060
thing you know she's really nice so

321
00:12:24,060 --> 00:12:25,139
we've got classes we've got type

322
00:12:25,139 --> 00:12:26,189
checking we've kind of gone down this

323
00:12:26,189 --> 00:12:27,660
row if I think these things are not

324
00:12:27,660 --> 00:12:29,879
really big problems for me no can we

325
00:12:29,879 --> 00:12:33,670
deal in this all the time and

326
00:12:33,680 --> 00:12:37,470
asynchronous code everywhere everything

327
00:12:37,470 --> 00:12:39,809
in Java is a synchronous pretty much so

328
00:12:39,809 --> 00:12:41,610
it's in the web would we live in this

329
00:12:41,610 --> 00:12:43,709
world of asynchronous and we live in

330
00:12:43,709 --> 00:12:46,319
this world is going two choices I said

331
00:12:46,319 --> 00:12:49,620
we have callbacks or promises and you

332
00:12:49,620 --> 00:12:51,480
kind of sit on one camp maybe in you you

333
00:12:51,480 --> 00:12:54,180
know like one of the other more the more

334
00:12:54,180 --> 00:12:59,069
than the other promises you need a

335
00:12:59,069 --> 00:13:00,720
library let's say it's not part of

336
00:13:00,720 --> 00:13:01,949
JavaScript this isn't something you can

337
00:13:01,949 --> 00:13:04,860
just do no open a fire laughs and you've

338
00:13:04,860 --> 00:13:05,730
got it you're going to have to include

339
00:13:05,730 --> 00:13:07,110
something and there's different

340
00:13:07,110 --> 00:13:08,370
implementations of these things you've

341
00:13:08,370 --> 00:13:10,620
got a decision another another choice to

342
00:13:10,620 --> 00:13:11,790
make in the project of what you want to

343
00:13:11,790 --> 00:13:15,689
use and if you're thinking of doing it

344
00:13:15,689 --> 00:13:17,279
yourself but it's kind of complicated I

345
00:13:17,279 --> 00:13:19,019
mean this is just the then method like

346
00:13:19,019 --> 00:13:21,120
this isn't easy this isn't trivial see

347
00:13:21,120 --> 00:13:22,259
if we don't want to go about writing

348
00:13:22,259 --> 00:13:25,680
this yourself so I suppose you're here

349
00:13:25,680 --> 00:13:28,230
and we all know this everyone knows this

350
00:13:28,230 --> 00:13:30,750
and there's no choice you have to now in

351
00:13:30,750 --> 00:13:33,809
to call back hell and I'll share with

352
00:13:33,809 --> 00:13:36,830
you something I found

353
00:13:36,830 --> 00:13:38,600
I've come to the conclusion that

354
00:13:38,600 --> 00:13:41,510
callback hell is a design choice and not

355
00:13:41,510 --> 00:13:43,250
an inherent flaw in the concept of

356
00:13:43,250 --> 00:13:45,070
asynchronous function plus call back

357
00:13:45,070 --> 00:13:50,210
design choice means bad code basically I

358
00:13:50,210 --> 00:13:52,160
don't have to go down this road we don't

359
00:13:52,160 --> 00:13:53,870
have to its use call back to you still

360
00:13:53,870 --> 00:13:57,170
have some relatively nice code this was

361
00:13:57,170 --> 00:13:59,120
my callback hell from maybe like a year

362
00:13:59,120 --> 00:14:02,090
ago when i joined company i won't name

363
00:14:02,090 --> 00:14:03,680
and shame anybody there was something

364
00:14:03,680 --> 00:14:04,880
along these lines and I kind of like

365
00:14:04,880 --> 00:14:06,650
lots of things going down this chain

366
00:14:06,650 --> 00:14:08,630
getting deeper and deeper and have to

367
00:14:08,630 --> 00:14:11,110
set for callbacks success failure

368
00:14:11,110 --> 00:14:13,610
there's a lot of this going on because

369
00:14:13,610 --> 00:14:16,430
professionals anonymous functions action

370
00:14:16,430 --> 00:14:18,560
in our hand is miles apart really hard

371
00:14:18,560 --> 00:14:20,000
to follow really hard to work out what's

372
00:14:20,000 --> 00:14:24,080
going on node style for me is just this

373
00:14:24,080 --> 00:14:25,490
is you know this is cool this is this is

374
00:14:25,490 --> 00:14:27,980
great this is really elegant and it's

375
00:14:27,980 --> 00:14:29,810
really simple nope it's not complicated

376
00:14:29,810 --> 00:14:31,460
in any way this you kind of stick to a

377
00:14:31,460 --> 00:14:33,140
standard pattern of we've got a callback

378
00:14:33,140 --> 00:14:35,030
our first thing is going to be some kind

379
00:14:35,030 --> 00:14:37,280
of error or null if there's narrow and

380
00:14:37,280 --> 00:14:38,840
everything else is our is our is our

381
00:14:38,840 --> 00:14:41,840
response and over the say like a year

382
00:14:41,840 --> 00:14:43,370
kind of answer me now general

383
00:14:43,370 --> 00:14:44,660
refactoring and moving towards this with

384
00:14:44,660 --> 00:14:46,010
that previous sample kind of became

385
00:14:46,010 --> 00:14:47,630
something more like this a simplified

386
00:14:47,630 --> 00:14:51,910
version but this kind of thing and

387
00:14:51,910 --> 00:14:53,810
didn't have to include any additional

388
00:14:53,810 --> 00:14:55,520
libraries didn't have to wait for some

389
00:14:55,520 --> 00:14:57,110
new features to be implemented just you

390
00:14:57,110 --> 00:14:58,670
know just a change of structure and I

391
00:14:58,670 --> 00:15:00,650
think we've left call back hell for me

392
00:15:00,650 --> 00:15:03,860
now and we have named methods and we

393
00:15:03,860 --> 00:15:05,630
have no binding also should mention that

394
00:15:05,630 --> 00:15:07,340
all of these methods of bounds the

395
00:15:07,340 --> 00:15:08,810
correct contacts and you know instead of

396
00:15:08,810 --> 00:15:10,460
a one big method or ii do think creating

397
00:15:10,460 --> 00:15:12,050
all these anonymous functions we just

398
00:15:12,050 --> 00:15:13,730
set up a scene we have all these methods

399
00:15:13,730 --> 00:15:15,620
ready to go and it gives us this nicer

400
00:15:15,620 --> 00:15:20,990
structure so to avoid callback hell the

401
00:15:20,990 --> 00:15:22,550
officer would avoid anonymous functions

402
00:15:22,550 --> 00:15:24,620
well why watch for Voight anonymous

403
00:15:24,620 --> 00:15:27,230
functions and get use of stack traces

404
00:15:27,230 --> 00:15:31,250
for one a kind of assigned pore

405
00:15:31,250 --> 00:15:33,200
structure because an anonymous function

406
00:15:33,200 --> 00:15:34,340
generally is kind of just thrown away

407
00:15:34,340 --> 00:15:36,860
after you're done with it it's kind of

408
00:15:36,860 --> 00:15:38,360
rare that we do something well we just

409
00:15:38,360 --> 00:15:40,400
throw away their we did we do something

410
00:15:40,400 --> 00:15:42,440
once you know so make an API call we

411
00:15:42,440 --> 00:15:44,510
probably do it quite a lot of times so

412
00:15:44,510 --> 00:15:45,740
we might as well hold on to that

413
00:15:45,740 --> 00:15:46,970
function others are just creating it

414
00:15:46,970 --> 00:15:47,970
over and over and over

415
00:15:47,970 --> 00:15:51,029
and every single time we keep things

416
00:15:51,029 --> 00:15:53,759
really shallow but interesting about

417
00:15:53,759 --> 00:15:55,860
this if things aren't shallow you're

418
00:15:55,860 --> 00:15:57,389
probably using anonymous functions

419
00:15:57,389 --> 00:15:59,430
because that's how you've got into this

420
00:15:59,430 --> 00:16:00,689
deep world and which means you've broken

421
00:16:00,689 --> 00:16:02,430
the first rule which means everyone will

422
00:16:02,430 --> 00:16:08,579
hate you so a synchronous code so

423
00:16:08,579 --> 00:16:10,709
finally all tying together these things

424
00:16:10,709 --> 00:16:12,689
up a bit bad performance really briefly

425
00:16:12,689 --> 00:16:16,350
because it's a talking itself how do we

426
00:16:16,350 --> 00:16:19,920
stuff affect performance how much do we

427
00:16:19,920 --> 00:16:21,720
need to worry about it in production so

428
00:16:21,720 --> 00:16:22,980
we only win that you can do we do

429
00:16:22,980 --> 00:16:24,209
benchmarks and we see what's faster

430
00:16:24,209 --> 00:16:25,500
what's not faster when you're actually

431
00:16:25,500 --> 00:16:27,000
working on something we're looking at

432
00:16:27,000 --> 00:16:28,410
when you know it things like kind of you

433
00:16:28,410 --> 00:16:30,019
I performance and things like that and

434
00:16:30,019 --> 00:16:33,389
profiling in a memory management this

435
00:16:33,389 --> 00:16:34,500
often comes up first when we talk about

436
00:16:34,500 --> 00:16:37,829
kind of performance talk about things

437
00:16:37,829 --> 00:16:40,860
like this and you know I've been I've

438
00:16:40,860 --> 00:16:41,910
been down this road I think a lot of

439
00:16:41,910 --> 00:16:42,930
people been down this road do you think

440
00:16:42,930 --> 00:16:45,720
you know the top example is just so much

441
00:16:45,720 --> 00:16:46,920
better it's going to be so much faster

442
00:16:46,920 --> 00:16:49,019
and it is fast so we all know it's

443
00:16:49,019 --> 00:16:51,120
faster okay don't even need a benchmark

444
00:16:51,120 --> 00:16:52,439
service that it's going to be quicker

445
00:16:52,439 --> 00:16:54,120
but is it going to be noticeably quicker

446
00:16:54,120 --> 00:16:56,750
is it gonna make any real difference and

447
00:16:56,750 --> 00:16:58,860
is it going to make things easy to read

448
00:16:58,860 --> 00:17:00,809
or harder to read I think this point

449
00:17:00,809 --> 00:17:02,579
where we have to make good to be

450
00:17:02,579 --> 00:17:03,899
sensitive about things and as I mean

451
00:17:03,899 --> 00:17:05,669
beginning the talk right sensible code

452
00:17:05,669 --> 00:17:09,390
so yes it's obviously faster but is it

453
00:17:09,390 --> 00:17:10,919
going to make things better for us in

454
00:17:10,919 --> 00:17:13,260
the long run another example is

455
00:17:13,260 --> 00:17:16,860
something like this and I think the top

456
00:17:16,860 --> 00:17:20,220
line is kind of fairly rookie jquery but

457
00:17:20,220 --> 00:17:22,709
you know whatever it's the concept here

458
00:17:22,709 --> 00:17:23,760
is we're saying i want to get every

459
00:17:23,760 --> 00:17:25,350
anchor in the world and i want to bind

460
00:17:25,350 --> 00:17:27,720
click listeners to it that could be a

461
00:17:27,720 --> 00:17:29,460
lot of anchors in the second example

462
00:17:29,460 --> 00:17:31,200
we're using some delegation these

463
00:17:31,200 --> 00:17:33,030
delegation you see in every NBC library

464
00:17:33,030 --> 00:17:35,100
it's really not very hard to do and

465
00:17:35,100 --> 00:17:37,140
again I mean I think you see there's

466
00:17:37,140 --> 00:17:38,190
quite a lot I think this is used a lot

467
00:17:38,190 --> 00:17:41,309
and but huge memory management benefit

468
00:17:41,309 --> 00:17:44,429
here and finally just we go back to our

469
00:17:44,429 --> 00:17:45,990
vision example of this kind of HTML file

470
00:17:45,990 --> 00:17:47,250
that has nothing in it we're going to

471
00:17:47,250 --> 00:17:48,539
have to do things like this were

472
00:17:48,539 --> 00:17:49,919
probably gonna use templates so this is

473
00:17:49,919 --> 00:17:51,840
kind of trivial example but we're going

474
00:17:51,840 --> 00:17:53,190
to build up some HTML and we're going to

475
00:17:53,190 --> 00:17:55,080
put it in the DOM and if we do it in the

476
00:17:55,080 --> 00:17:56,909
first example we're kind of appending

477
00:17:56,909 --> 00:17:58,770
things and then searching for something

478
00:17:58,770 --> 00:18:00,120
and then appending something and they're

479
00:18:00,120 --> 00:18:01,200
searching for again and then append

480
00:18:01,200 --> 00:18:03,080
any like messages might be like a 100

481
00:18:03,080 --> 00:18:05,760
messages we want to render and it's

482
00:18:05,760 --> 00:18:07,860
going to just look awful on let's say

483
00:18:07,860 --> 00:18:09,600
mobile and I work Pacific on mobile and

484
00:18:09,600 --> 00:18:12,649
even your iphone 5 and kind of you know

485
00:18:12,649 --> 00:18:14,580
android s fours and things like that

486
00:18:14,580 --> 00:18:17,039
it's just it's going to just look awful

487
00:18:17,039 --> 00:18:19,230
it's going to it's trying to render all

488
00:18:19,230 --> 00:18:20,730
these things and any animations you're

489
00:18:20,730 --> 00:18:21,840
going on any transition just going to

490
00:18:21,840 --> 00:18:24,389
fall off flat on their face and you know

491
00:18:24,389 --> 00:18:26,370
and it's just a good good person while

492
00:18:26,370 --> 00:18:27,120
we're doing the bottom we do this

493
00:18:27,120 --> 00:18:29,309
everywhere in our code and moving from

494
00:18:29,309 --> 00:18:31,230
this top example again we saw a lot of

495
00:18:31,230 --> 00:18:35,549
that and would like that no it's bad so

496
00:18:35,549 --> 00:18:36,570
when we talk about performance I think

497
00:18:36,570 --> 00:18:38,309
actually we should be here first we

498
00:18:38,309 --> 00:18:40,200
should be at Dom operations before this

499
00:18:40,200 --> 00:18:42,179
is good we shouldn't even worry about

500
00:18:42,179 --> 00:18:44,309
everything else because well I'm talking

501
00:18:44,309 --> 00:18:46,289
I'm talking web josefina doesn't apply

502
00:18:46,289 --> 00:18:48,210
if you're purely server side stuff but

503
00:18:48,210 --> 00:18:49,649
web you know this is where we should be

504
00:18:49,649 --> 00:18:51,440
we should make sure this is really good

505
00:18:51,440 --> 00:18:54,059
when this is really good I think then we

506
00:18:54,059 --> 00:18:56,010
kind of start here we start saying event

507
00:18:56,010 --> 00:18:57,450
listeners and things like that how much

508
00:18:57,450 --> 00:18:59,279
stuff are we holding in memory then we

509
00:18:59,279 --> 00:19:01,200
start looking at that finally if you've

510
00:19:01,200 --> 00:19:02,519
done all these things you're lucky

511
00:19:02,519 --> 00:19:03,720
enough to go and look through all of

512
00:19:03,720 --> 00:19:05,940
your for each and map and filters and

513
00:19:05,940 --> 00:19:07,860
change them into four loops then you

514
00:19:07,860 --> 00:19:10,740
have a happy person another spot

515
00:19:10,740 --> 00:19:11,850
performance so I talked about a little

516
00:19:11,850 --> 00:19:14,460
bit it's kind of things like this and we

517
00:19:14,460 --> 00:19:15,899
had weird something like this in our

518
00:19:15,899 --> 00:19:17,909
code simplified version but very very

519
00:19:17,909 --> 00:19:18,870
similar where we're just kind of

520
00:19:18,870 --> 00:19:20,399
wrapping local storage you're probably

521
00:19:20,399 --> 00:19:21,690
doing a few other little bits and pieces

522
00:19:21,690 --> 00:19:23,220
but ultimately just kind of getting and

523
00:19:23,220 --> 00:19:26,159
setting from local storage loucks which

524
00:19:26,159 --> 00:19:29,130
is quite slow reading writes a disk and

525
00:19:29,130 --> 00:19:31,409
on mobile really quite slow and so we

526
00:19:31,409 --> 00:19:33,510
were seeing on you know again any

527
00:19:33,510 --> 00:19:35,250
animations any transitions only it's not

528
00:19:35,250 --> 00:19:36,720
that you know you start seeing these

529
00:19:36,720 --> 00:19:38,970
real light or a door and you realize

530
00:19:38,970 --> 00:19:40,320
you're getting when you get down to the

531
00:19:40,320 --> 00:19:41,610
bottom bit that we're just saving

532
00:19:41,610 --> 00:19:43,500
something for local storage you know so

533
00:19:43,500 --> 00:19:45,000
how can we avoid these things easily and

534
00:19:45,000 --> 00:19:46,230
there are some good libraries for

535
00:19:46,230 --> 00:19:47,460
storage and you know kind of abstract

536
00:19:47,460 --> 00:19:48,779
oil these things and maybe give you the

537
00:19:48,779 --> 00:19:50,639
ability to use index DB and things like

538
00:19:50,639 --> 00:19:54,299
that and but really again not that hard

539
00:19:54,299 --> 00:19:57,210
to just say okay well you know let's

540
00:19:57,210 --> 00:19:58,889
just optimize this a little bit let's

541
00:19:58,889 --> 00:20:00,630
have something from memory just hold on

542
00:20:00,630 --> 00:20:03,120
to it let's make reading quicker by

543
00:20:03,120 --> 00:20:04,470
holding onto things as we've got them

544
00:20:04,470 --> 00:20:06,179
and it's save things for later so all of

545
00:20:06,179 --> 00:20:09,029
this works this isn't really very hard

546
00:20:09,029 --> 00:20:10,289
again like like a lot of the previous is

547
00:20:10,289 --> 00:20:11,460
I'm saying I mean these are kind of an

548
00:20:11,460 --> 00:20:14,550
extra six to eight lines of code

549
00:20:14,550 --> 00:20:19,230
I think that's fine and that's the end

550
00:20:19,230 --> 00:20:27,670
of my topics so thank you very much

551
00:20:27,680 --> 00:20:36,610
you

