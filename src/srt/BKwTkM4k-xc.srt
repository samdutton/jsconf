1
00:00:31,860 --> 00:00:35,080

I'm Ben come be I'm one of our developer

2
00:00:35,080 --> 00:00:37,750
engineers inside of the palm global

3
00:00:37,750 --> 00:00:40,540
business unit of hewlett-packard before

4
00:00:40,540 --> 00:00:41,650
i get into the talk i do want to

5
00:00:41,650 --> 00:00:43,900
highlight that a lot of the slides here

6
00:00:43,900 --> 00:00:45,820
going to have a blue background the

7
00:00:45,820 --> 00:00:47,380
legend around HP is that they're a

8
00:00:47,380 --> 00:00:49,030
standard template has a blue background

9
00:00:49,030 --> 00:00:51,220
so when people go in print slides they

10
00:00:51,220 --> 00:00:53,050
use more the blue coloring and that

11
00:00:53,050 --> 00:00:54,640
apparently see most expensive ink for

12
00:00:54,640 --> 00:00:57,309
our printers so I'm kind of ditching

13
00:00:57,309 --> 00:00:58,629
that trend a little bit by going with

14
00:00:58,629 --> 00:00:59,920
white backgrounds for a lot of things

15
00:00:59,920 --> 00:01:03,730
but thought you might like that so let's

16
00:01:03,730 --> 00:01:06,610
get started here for those of you who

17
00:01:06,610 --> 00:01:09,190
aren't familiar with webos this is an

18
00:01:09,190 --> 00:01:10,210
operating system that was developed

19
00:01:10,210 --> 00:01:13,450
within Palm I got launched in 2009 with

20
00:01:13,450 --> 00:01:16,390
the palm pre device and you know later

21
00:01:16,390 --> 00:01:18,280
this year we have a whole series of new

22
00:01:18,280 --> 00:01:22,030
devices the touchpad the HP 33 and HPV

23
00:01:22,030 --> 00:01:24,130
are they're all coming out with various

24
00:01:24,130 --> 00:01:27,490
versions of what less this talk is going

25
00:01:27,490 --> 00:01:28,990
to be about the NGO framework but I

26
00:01:28,990 --> 00:01:30,850
guess to give you some context in n yo I

27
00:01:30,850 --> 00:01:32,170
need to talk a little bit about what's

28
00:01:32,170 --> 00:01:37,000
on webos underneath it so this is the

29
00:01:37,000 --> 00:01:40,959
big boring architecture diagram key

30
00:01:40,959 --> 00:01:42,819
things to take away here is that when

31
00:01:42,819 --> 00:01:44,380
you think webOS which are actually

32
00:01:44,380 --> 00:01:47,860
running is pretty much a web browser you

33
00:01:47,860 --> 00:01:49,509
pull out a webos phone like this one

34
00:01:49,509 --> 00:01:53,080
here and the actual user interface is a

35
00:01:53,080 --> 00:01:54,880
bunch of cards you can figger those

36
00:01:54,880 --> 00:01:57,340
cards as tabs in the web browser and so

37
00:01:57,340 --> 00:01:59,050
each application is actually its own web

38
00:01:59,050 --> 00:02:01,539
page running JavaScript running HTML

39
00:02:01,539 --> 00:02:04,390
we're using web kit and v8 is kind of an

40
00:02:04,390 --> 00:02:07,270
inch and below that now we also support

41
00:02:07,270 --> 00:02:09,009
other kinds of applications I mean we're

42
00:02:09,009 --> 00:02:11,440
not strictly JavaScript we also can you

43
00:02:11,440 --> 00:02:13,270
can compile some C++ code and use that

44
00:02:13,270 --> 00:02:16,060
too but most of the key applications in

45
00:02:16,060 --> 00:02:17,680
the platform all the ones that we ship

46
00:02:17,680 --> 00:02:19,780
is productivity tools lots of the ones

47
00:02:19,780 --> 00:02:21,280
in our catalog are based around

48
00:02:21,280 --> 00:02:24,340
JavaScript now looking up here your C

49
00:02:24,340 --> 00:02:25,510
over to this side we also talked about

50
00:02:25,510 --> 00:02:28,090
JavaScript services in addition to using

51
00:02:28,090 --> 00:02:30,340
v8 inside a WebKit we're also using an

52
00:02:30,340 --> 00:02:32,920
inside of our nodejs runtime and we

53
00:02:32,920 --> 00:02:34,599
actually employ several key people on

54
00:02:34,599 --> 00:02:36,280
the node project like Tim Caswell who

55
00:02:36,280 --> 00:02:39,670
talked earlier today notice actually

56
00:02:39,670 --> 00:02:41,560
being used to you know give you

57
00:02:41,560 --> 00:02:44,019
interfaces system services let

58
00:02:44,019 --> 00:02:45,520
applications write their own service

59
00:02:45,520 --> 00:02:47,680
so when your cards not on display you

60
00:02:47,680 --> 00:02:48,940
still gonna have something sinking to

61
00:02:48,940 --> 00:02:51,070
websites in the background and you know

62
00:02:51,070 --> 00:02:53,200
dealing with all that but what I mainly

63
00:02:53,200 --> 00:02:54,790
sure to talk about today is kind of this

64
00:02:54,790 --> 00:02:56,830
part over here the web applications are

65
00:02:56,830 --> 00:02:59,140
runtime and this new thing that we call

66
00:02:59,140 --> 00:03:04,630
n yo so the story about n yo begins with

67
00:03:04,630 --> 00:03:07,900
aries and aries begins with mojo so

68
00:03:07,900 --> 00:03:10,690
going back to 2009 the palm pre comes

69
00:03:10,690 --> 00:03:13,510
out mojo is the javascript framework

70
00:03:13,510 --> 00:03:16,300
that we ship on it and mojo motors

71
00:03:16,300 --> 00:03:18,820
design basically for this 320 x 480

72
00:03:18,820 --> 00:03:22,360
screen it's designed around a lot of

73
00:03:22,360 --> 00:03:25,030
HTML templates it's basically it's built

74
00:03:25,030 --> 00:03:26,560
on top of prototype and then we took a

75
00:03:26,560 --> 00:03:28,690
lot of tempting stuff we build we build

76
00:03:28,690 --> 00:03:30,670
a lot of widgets but in order to do

77
00:03:30,670 --> 00:03:32,050
anything in mojo you basically had to

78
00:03:32,050 --> 00:03:34,030
write some HTML over here you had to

79
00:03:34,030 --> 00:03:35,590
write some JavaScript over here you had

80
00:03:35,590 --> 00:03:37,380
to hook things up make sure it all works

81
00:03:37,380 --> 00:03:39,670
about the only way you get things done

82
00:03:39,670 --> 00:03:41,770
at least at first is look in an example

83
00:03:41,770 --> 00:03:44,380
and kind of copy and modify that not

84
00:03:44,380 --> 00:03:47,050
very intuitive I mean required on

85
00:03:47,050 --> 00:03:50,260
o'reilly book to figure it out so you

86
00:03:50,260 --> 00:03:52,270
know we had mojo l for a few months we

87
00:03:52,270 --> 00:03:54,700
had some internal tools people we had

88
00:03:54,700 --> 00:03:56,740
been in d on who did the best been

89
00:03:56,740 --> 00:03:59,500
editor over at mozilla came over they

90
00:03:59,500 --> 00:04:00,970
brought a lot of best men ideas and kind

91
00:04:00,970 --> 00:04:03,160
of collaboration with us instead of some

92
00:04:03,160 --> 00:04:05,140
engineers headed up by Matt McNulty

93
00:04:05,140 --> 00:04:08,050
who's now our framework team lead Scott

94
00:04:08,050 --> 00:04:10,120
Myles and Steve Orville who had done

95
00:04:10,120 --> 00:04:13,030
opus GS built this tool kit called Ares

96
00:04:13,030 --> 00:04:15,459
so if you never use Ares that go to

97
00:04:15,459 --> 00:04:18,820
areas palm com it's a web-based ide for

98
00:04:18,820 --> 00:04:21,130
building mobile applications so you can

99
00:04:21,130 --> 00:04:22,930
go through you can you know design your

100
00:04:22,930 --> 00:04:24,790
thing by dragging widgets on to you know

101
00:04:24,790 --> 00:04:27,160
a phone looking screen but then you can

102
00:04:27,160 --> 00:04:28,690
also double-click on things and it

103
00:04:28,690 --> 00:04:30,520
brings up a javascript editor you can

104
00:04:30,520 --> 00:04:32,680
define while your methods do it's great

105
00:04:32,680 --> 00:04:34,090
i mean for building a lot of simple

106
00:04:34,090 --> 00:04:35,200
applications you can do things very

107
00:04:35,200 --> 00:04:39,280
quickly and you know people loved it but

108
00:04:39,280 --> 00:04:41,530
in order to build ares we had to kind of

109
00:04:41,530 --> 00:04:45,100
build this shim this opus j/s shim on

110
00:04:45,100 --> 00:04:47,890
top of mojo it basically it results him

111
00:04:47,890 --> 00:04:49,390
that every application had to download a

112
00:04:49,390 --> 00:04:51,880
few extra 100 k of javascript you had a

113
00:04:51,880 --> 00:04:53,770
lot of lag its run time when things

114
00:04:53,770 --> 00:04:55,780
started up and it just you know wasn't

115
00:04:55,780 --> 00:04:58,770
the best experience so

116
00:04:58,770 --> 00:05:02,190
as part of working on webos too and just

117
00:05:02,190 --> 00:05:03,509
looking at how can we improve the

118
00:05:03,509 --> 00:05:05,879
platform how can we scale up to a lot of

119
00:05:05,879 --> 00:05:08,069
different devices the team decided hey

120
00:05:08,069 --> 00:05:11,129
let's build a new framework and it get

121
00:05:11,129 --> 00:05:13,979
named Ares okay so i got name n yo Ares

122
00:05:13,979 --> 00:05:16,080
the God of War any apparently Ares

123
00:05:16,080 --> 00:05:17,879
sister so you know the names work out

124
00:05:17,879 --> 00:05:22,620
pretty well so what NGO gives you the

125
00:05:22,620 --> 00:05:23,909
ability to do applications that look

126
00:05:23,909 --> 00:05:26,069
kind of like this this was actually the

127
00:05:26,069 --> 00:05:27,990
original prototype application build is

128
00:05:27,990 --> 00:05:29,250
kind of a proof of concept of the

129
00:05:29,250 --> 00:05:31,110
framework this is the email app

130
00:05:31,110 --> 00:05:33,060
something that looks a lot like it is

131
00:05:33,060 --> 00:05:34,680
going to be shipping on the HP TouchPad

132
00:05:34,680 --> 00:05:37,409
this summer a lot of apps that look like

133
00:05:37,409 --> 00:05:38,310
this is going to be shipping on the

134
00:05:38,310 --> 00:05:40,409
touch pad because we've kind of gone

135
00:05:40,409 --> 00:05:42,750
through and reimplemented all of our

136
00:05:42,750 --> 00:05:44,310
core applications in this new framework

137
00:05:44,310 --> 00:05:47,460
and you know if you want to see it

138
00:05:47,460 --> 00:05:49,620
actually running on a touchpad well

139
00:05:49,620 --> 00:05:51,569
maybe I'll pull out one of these and

140
00:05:51,569 --> 00:05:56,280
hold it up and if there's our email

141
00:05:56,280 --> 00:05:57,780
application running an annual on a

142
00:05:57,780 --> 00:05:59,729
touchpad if you want to actually see

143
00:05:59,729 --> 00:06:01,050
some demos system where the devices you

144
00:06:01,050 --> 00:06:02,550
can find some of the HP people in the

145
00:06:02,550 --> 00:06:03,990
audience they're the ones that don't

146
00:06:03,990 --> 00:06:07,560
have macbooks so let's get into a bit of

147
00:06:07,560 --> 00:06:08,759
will you know what's actually going on

148
00:06:08,759 --> 00:06:11,930
behind the hood here or under the hood

149
00:06:11,930 --> 00:06:16,050
anatomy of an annual application so an

150
00:06:16,050 --> 00:06:18,000
in your application is basically a bunch

151
00:06:18,000 --> 00:06:19,500
of HTML it's a bunch of JavaScript

152
00:06:19,500 --> 00:06:22,409
there's some metadata I'm going to just

153
00:06:22,409 --> 00:06:23,550
take you through a couple of quick

154
00:06:23,550 --> 00:06:25,469
slides on this not going to go line by

155
00:06:25,469 --> 00:06:27,840
line in the code but what we have is a

156
00:06:27,840 --> 00:06:30,840
app info JSON which is a bunch of

157
00:06:30,840 --> 00:06:32,729
metadata about the application we've

158
00:06:32,729 --> 00:06:34,110
actually used this file since the

159
00:06:34,110 --> 00:06:36,270
beginning of webos it's just a standard

160
00:06:36,270 --> 00:06:37,889
way of saying here's your application

161
00:06:37,889 --> 00:06:40,680
title here's your app icon what's your

162
00:06:40,680 --> 00:06:43,979
version number you know no big whoop key

163
00:06:43,979 --> 00:06:45,630
thing to note here is that we have a

164
00:06:45,630 --> 00:06:48,120
main and that actually says what is the

165
00:06:48,120 --> 00:06:50,430
HTML file that gets launched you know in

166
00:06:50,430 --> 00:06:52,789
this card when the application starts up

167
00:06:52,789 --> 00:06:56,009
another thing is that type is web the

168
00:06:56,009 --> 00:06:57,630
type is how we indicate what kind of

169
00:06:57,630 --> 00:06:59,880
application if you're if you build some

170
00:06:59,880 --> 00:07:01,560
C++ code and run it there then the type

171
00:07:01,560 --> 00:07:05,130
would be pdk final thing is this UI

172
00:07:05,130 --> 00:07:07,589
revision to this is actually it's still

173
00:07:07,589 --> 00:07:09,779
kind of secret but this is a flag that

174
00:07:09,779 --> 00:07:11,969
says that your application is

175
00:07:11,969 --> 00:07:13,799
able to handle the large size screen on

176
00:07:13,799 --> 00:07:15,869
the touchpad or other devices if you

177
00:07:15,869 --> 00:07:17,069
don't have that setup and it's going to

178
00:07:17,069 --> 00:07:18,839
run an emulation environment that looks

179
00:07:18,839 --> 00:07:20,699
like a phone that you know you have a

180
00:07:20,699 --> 00:07:21,749
little phone screen in the middle of

181
00:07:21,749 --> 00:07:24,929
your tablet that's not so much fun we

182
00:07:24,929 --> 00:07:26,879
have lots of dock options here this is

183
00:07:26,879 --> 00:07:28,879
you know part of our developer website

184
00:07:28,879 --> 00:07:33,119
okay depends jas so every end your

185
00:07:33,119 --> 00:07:34,679
application has at least one of these

186
00:07:34,679 --> 00:07:37,019
it's basically a file that lists what

187
00:07:37,019 --> 00:07:39,569
other files get pulled in the neat thing

188
00:07:39,569 --> 00:07:41,039
about this I said the depends can

189
00:07:41,039 --> 00:07:43,199
actually reference the directory and so

190
00:07:43,199 --> 00:07:44,369
this allows you to kind of build a

191
00:07:44,369 --> 00:07:46,739
module application where you're not just

192
00:07:46,739 --> 00:07:48,479
pulling in single files at a time but

193
00:07:48,479 --> 00:07:50,159
maybe a whole other directory that has a

194
00:07:50,159 --> 00:07:52,259
bunch of things to implement some key

195
00:07:52,259 --> 00:07:54,959
widget implement some data service okay

196
00:07:54,959 --> 00:08:01,229
not a big deal that's depends now we

197
00:08:01,229 --> 00:08:04,379
have index HTML so you build a website

198
00:08:04,379 --> 00:08:07,139
index HTML kind of the beginning of your

199
00:08:07,139 --> 00:08:10,079
website what we've done here two key

200
00:08:10,079 --> 00:08:11,789
things first off there's a script tag

201
00:08:11,789 --> 00:08:13,139
which actually pulls in the onion

202
00:08:13,139 --> 00:08:16,139
framwork and then we have this code here

203
00:08:16,139 --> 00:08:17,879
kind of the middle that's all it's doing

204
00:08:17,879 --> 00:08:19,919
is it's creating a new object that's

205
00:08:19,919 --> 00:08:21,599
based on something you built in n yo and

206
00:08:21,599 --> 00:08:24,269
rendering it into the document this kind

207
00:08:24,269 --> 00:08:27,239
of pulls a key concept of n yo whereas

208
00:08:27,239 --> 00:08:30,419
with mojo we had a lot of HTML a lot of

209
00:08:30,419 --> 00:08:31,979
temple thing a lot of like you know

210
00:08:31,979 --> 00:08:33,779
setting up a page and then going back in

211
00:08:33,779 --> 00:08:36,629
and replacing items as needed ennio is

212
00:08:36,629 --> 00:08:38,550
putting the control in JavaScript han

213
00:08:38,550 --> 00:08:40,589
it's not HTML as you look in the

214
00:08:40,589 --> 00:08:42,000
framework you'll see this pattern over

215
00:08:42,000 --> 00:08:44,699
and over where the actual kind of HTML

216
00:08:44,699 --> 00:08:46,470
that's in the Dom that's being generated

217
00:08:46,470 --> 00:08:48,720
is being done by a JavaScript not

218
00:08:48,720 --> 00:08:51,559
necessarily by the application developer

219
00:08:51,559 --> 00:08:53,970
another thing this actually does kind of

220
00:08:53,970 --> 00:08:56,639
interesting as part of an optimization

221
00:08:56,639 --> 00:08:59,220
for mobile on the device our web kit has

222
00:08:59,220 --> 00:09:00,750
a lot of these kind of framework files

223
00:09:00,750 --> 00:09:03,449
that are a built-in where when you use

224
00:09:03,449 --> 00:09:05,939
it in an application you know instead of

225
00:09:05,939 --> 00:09:07,500
us having to go and parse all the code

226
00:09:07,500 --> 00:09:09,000
for the annual framework we actually can

227
00:09:09,000 --> 00:09:11,069
kind of just tell v8 to pull in this

228
00:09:11,069 --> 00:09:13,559
precompiled file however we have the

229
00:09:13,559 --> 00:09:15,480
ability to say launch equal debug on

230
00:09:15,480 --> 00:09:16,949
that script tag and that will tell it to

231
00:09:16,949 --> 00:09:18,329
go and actually pull in the original

232
00:09:18,329 --> 00:09:20,279
source code which helps if you're trying

233
00:09:20,279 --> 00:09:21,959
to debug and figure out why you know

234
00:09:21,959 --> 00:09:22,889
something down in the middle of

235
00:09:22,889 --> 00:09:25,230
framework isn't acting the way you want

236
00:09:25,230 --> 00:09:28,089
so the last 5 i'll go into here for this

237
00:09:28,089 --> 00:09:30,279
kind of hello world type application is

238
00:09:30,279 --> 00:09:34,750
in fact the hello world control so any

239
00:09:34,750 --> 00:09:37,240
OS built around the idea of a single

240
00:09:37,240 --> 00:09:39,520
inheritance object hierarchy it's built

241
00:09:39,520 --> 00:09:41,110
around the idea that you have objects

242
00:09:41,110 --> 00:09:42,970
and some of those objects controls and

243
00:09:42,970 --> 00:09:45,310
controls can own under controls so for

244
00:09:45,310 --> 00:09:47,170
this very simple application we've just

245
00:09:47,170 --> 00:09:49,180
defined a single control and the

246
00:09:49,180 --> 00:09:50,410
contents of it are the string hello

247
00:09:50,410 --> 00:09:53,320
world so this is not going to be a very

248
00:09:53,320 --> 00:09:54,880
exciting thing but why don't we switch

249
00:09:54,880 --> 00:09:57,130
over to our browser here and see what

250
00:09:57,130 --> 00:10:01,300
this looks like hello world okay now

251
00:10:01,300 --> 00:10:04,080
let's look at some more exciting things

252
00:10:04,080 --> 00:10:08,050
so the philosophy of any o is basically

253
00:10:08,050 --> 00:10:09,250
kind of a set of things there I'm going

254
00:10:09,250 --> 00:10:11,320
to talk about some of the design ideas

255
00:10:11,320 --> 00:10:12,580
that guided us in building this

256
00:10:12,580 --> 00:10:14,740
framework some of the trade-offs we made

257
00:10:14,740 --> 00:10:16,690
and basically why we made some of the

258
00:10:16,690 --> 00:10:20,830
decisions we did so first thing to

259
00:10:20,830 --> 00:10:23,190
notice that applications are a target

260
00:10:23,190 --> 00:10:25,630
unlike frameworks like jQuery which

261
00:10:25,630 --> 00:10:28,540
target websites ennio is entirely

262
00:10:28,540 --> 00:10:31,900
allocation framework so if you're going

263
00:10:31,900 --> 00:10:33,100
to use this you're going to basically be

264
00:10:33,100 --> 00:10:34,450
building it to produce rich applications

265
00:10:34,450 --> 00:10:37,240
that pull data from databases from web

266
00:10:37,240 --> 00:10:39,459
sources and the show it to the user and

267
00:10:39,459 --> 00:10:41,620
give it some way to interact email

268
00:10:41,620 --> 00:10:43,870
application is kind of our standard you

269
00:10:43,870 --> 00:10:46,150
know you know our standard bearer for

270
00:10:46,150 --> 00:10:48,100
this but we've also used to do contacts

271
00:10:48,100 --> 00:10:51,690
to do photo viewers to do a web browser

272
00:10:51,690 --> 00:10:57,110
but apps are the kind of key target here

273
00:10:57,120 --> 00:10:59,410
one of the big things about nu is that

274
00:10:59,410 --> 00:11:03,970
we reuse code through components so you

275
00:11:03,970 --> 00:11:05,620
know instead of us you know having your

276
00:11:05,620 --> 00:11:07,330
index.html filled with here's a bunch of

277
00:11:07,330 --> 00:11:08,680
things about my app you actually build

278
00:11:08,680 --> 00:11:10,450
up a component and then you render that

279
00:11:10,450 --> 00:11:12,970
component as your application give you

280
00:11:12,970 --> 00:11:14,860
an example of some of the ideas behind

281
00:11:14,860 --> 00:11:19,150
this so I move this mouse we don't have

282
00:11:19,150 --> 00:11:24,070
that spinning cursor there so annual

283
00:11:24,070 --> 00:11:26,290
provides this kind system a kind is

284
00:11:26,290 --> 00:11:27,820
basically our version of the word class

285
00:11:27,820 --> 00:11:29,980
we can't use class by itself because

286
00:11:29,980 --> 00:11:31,589
that's the reserved word in JavaScript

287
00:11:31,589 --> 00:11:34,300
so every kind of a parent kind going all

288
00:11:34,300 --> 00:11:36,100
the way back up to any other object

289
00:11:36,100 --> 00:11:38,080
which is kind of the root of a whole

290
00:11:38,080 --> 00:11:40,610
the key thing that this whole kind

291
00:11:40,610 --> 00:11:44,000
system gives is the ability to subclass

292
00:11:44,000 --> 00:11:46,399
an existing class and easily call the

293
00:11:46,399 --> 00:11:48,920
parent or the methods of the parent so

294
00:11:48,920 --> 00:11:50,860
in doing this we have this whole

295
00:11:50,860 --> 00:11:53,779
inherited method and so the magical

296
00:11:53,779 --> 00:11:55,399
inherit is that it will call your

297
00:11:55,399 --> 00:11:57,589
whatever the previous version of this

298
00:11:57,589 --> 00:12:02,959
that you overrode in your class then the

299
00:12:02,959 --> 00:12:04,820
other thing object in harrods the

300
00:12:04,820 --> 00:12:06,560
property cysts are provides a property

301
00:12:06,560 --> 00:12:08,660
system so when you're creating these

302
00:12:08,660 --> 00:12:10,070
objects you have the ability of

303
00:12:10,070 --> 00:12:12,529
specifying properties and then later on

304
00:12:12,529 --> 00:12:14,480
you can easily over I the properties and

305
00:12:14,480 --> 00:12:17,330
provide documentation what they are it

306
00:12:17,330 --> 00:12:19,940
also provides a kind of magical methods

307
00:12:19,940 --> 00:12:21,620
for setting getting and then noting when

308
00:12:21,620 --> 00:12:24,649
a property is change which works really

309
00:12:24,649 --> 00:12:26,180
well especially if you're building some

310
00:12:26,180 --> 00:12:30,950
sort of a online code building UI layout

311
00:12:30,950 --> 00:12:33,260
type program we want to actually you set

312
00:12:33,260 --> 00:12:34,910
a lot of properties based on drawing

313
00:12:34,910 --> 00:12:36,380
something on the editor and the screen

314
00:12:36,380 --> 00:12:39,050
rather than just writing code we have

315
00:12:39,050 --> 00:12:40,790
components that's the base of our kind

316
00:12:40,790 --> 00:12:44,110
of actual Dom object model components

317
00:12:44,110 --> 00:12:47,600
let you have a collection of other items

318
00:12:47,600 --> 00:12:50,390
that are owned by one so an example is

319
00:12:50,390 --> 00:12:52,579
you have a dialog box well instead of

320
00:12:52,579 --> 00:12:54,709
having to then define the dialog box has

321
00:12:54,709 --> 00:12:56,240
a list and then the list has all these

322
00:12:56,240 --> 00:12:58,279
items you can actually kind of specify

323
00:12:58,279 --> 00:13:00,410
here's the list here's all the sub items

324
00:13:00,410 --> 00:13:02,270
but all of those are actually owned by

325
00:13:02,270 --> 00:13:04,070
the original dialog box and it's easy to

326
00:13:04,070 --> 00:13:05,899
reference a lot of things even you have

327
00:13:05,899 --> 00:13:08,899
a very complex infrastructure another

328
00:13:08,899 --> 00:13:10,459
thing that we provide is this dollar

329
00:13:10,459 --> 00:13:13,970
sign hash so instead of having to do a

330
00:13:13,970 --> 00:13:16,100
lot of complex methods to query you just

331
00:13:16,100 --> 00:13:18,290
say this dollar sign dot whatever the

332
00:13:18,290 --> 00:13:19,579
name of the control you happen to have

333
00:13:19,579 --> 00:13:21,440
and then you can call methods directly

334
00:13:21,440 --> 00:13:26,750
on that another the key ideas behind any

335
00:13:26,750 --> 00:13:30,020
o is to support flexible layouts one of

336
00:13:30,020 --> 00:13:30,980
the problems we head back in the

337
00:13:30,980 --> 00:13:33,200
original Pomfrey was you know everything

338
00:13:33,200 --> 00:13:35,420
was built for 320 x 480 but everyone

339
00:13:35,420 --> 00:13:37,220
introduce a bigger screen device we had

340
00:13:37,220 --> 00:13:38,390
to figure out you know suddenly either

341
00:13:38,390 --> 00:13:41,180
redesign everything so how do we solve

342
00:13:41,180 --> 00:13:44,510
this well we use the Flex box CSS model

343
00:13:44,510 --> 00:13:45,980
that's been supported by WebKit for a

344
00:13:45,980 --> 00:13:47,570
while is starting to be supported by a

345
00:13:47,570 --> 00:13:50,120
lot of the other browsers so horizontal

346
00:13:50,120 --> 00:13:51,290
boxes for

347
00:13:51,290 --> 00:13:55,339
ah cool boxes CSS properties for spacing

348
00:13:55,339 --> 00:13:58,339
padding all this stuff kind of combines

349
00:13:58,339 --> 00:14:00,529
two lettuce produce a flexible layout

350
00:14:00,529 --> 00:14:02,060
where if you change the screen size

351
00:14:02,060 --> 00:14:03,740
which might just be as simple as

352
00:14:03,740 --> 00:14:05,300
rotating in device one way or the other

353
00:14:05,300 --> 00:14:07,819
then all of a sudden the layout kind of

354
00:14:07,819 --> 00:14:09,500
happens for you you don't have to do a

355
00:14:09,500 --> 00:14:12,470
lot of extra calculation now recently

356
00:14:12,470 --> 00:14:14,060
we've discovered there's some issues

357
00:14:14,060 --> 00:14:16,220
with flex boxes they tend to work great

358
00:14:16,220 --> 00:14:18,410
at the high level of the application but

359
00:14:18,410 --> 00:14:20,930
if you have like a complex list a lot of

360
00:14:20,930 --> 00:14:22,490
he'll basically if you nest things way

361
00:14:22,490 --> 00:14:24,920
too far down then you can run into some

362
00:14:24,920 --> 00:14:27,019
speed issues but we've been writing code

363
00:14:27,019 --> 00:14:28,970
to basically do kind of fixed versions

364
00:14:28,970 --> 00:14:30,889
of these flex boxes for cases where you

365
00:14:30,889 --> 00:14:32,329
need to be flexible but you don't

366
00:14:32,329 --> 00:14:36,480
actually need to reflow all that often

367
00:14:36,490 --> 00:14:38,779
one of the things that Enya does is it

368
00:14:38,779 --> 00:14:41,029
favors code generation and layout tools

369
00:14:41,029 --> 00:14:45,440
/ kind of static HTML the idea is here

370
00:14:45,440 --> 00:14:47,449
that your javascript is actually going

371
00:14:47,449 --> 00:14:49,130
to be creating HTML that's part of all

372
00:14:49,130 --> 00:14:51,110
your various seems rather than the

373
00:14:51,110 --> 00:14:53,029
designer specifying everything out you

374
00:14:53,029 --> 00:14:55,130
know to the div but this allows some

375
00:14:55,130 --> 00:14:56,300
really nice object-oriented

376
00:14:56,300 --> 00:14:59,240
encapsulation so you know if you have an

377
00:14:59,240 --> 00:15:00,680
OP JavaScript object that's going to

378
00:15:00,680 --> 00:15:02,660
generate this HTML for you then you can

379
00:15:02,660 --> 00:15:04,790
stick that object in a tree and then we

380
00:15:04,790 --> 00:15:06,440
can generate the entire scene at one

381
00:15:06,440 --> 00:15:08,839
time and you know avoid having to do a

382
00:15:08,839 --> 00:15:10,639
mess acerra Lee a lot of Dom work to

383
00:15:10,639 --> 00:15:14,260
continually add new items into his page

384
00:15:14,260 --> 00:15:17,269
also we really like the idea of being

385
00:15:17,269 --> 00:15:19,639
able to do ides being able to produce

386
00:15:19,639 --> 00:15:20,990
layout editors for these web

387
00:15:20,990 --> 00:15:24,199
applications and you know right now our

388
00:15:24,199 --> 00:15:26,389
area stool is only supporting mojo but

389
00:15:26,389 --> 00:15:27,920
in the future we're if you know fully

390
00:15:27,920 --> 00:15:29,870
intending on providing that same can I

391
00:15:29,870 --> 00:15:35,269
de experience for any elapsed example of

392
00:15:35,269 --> 00:15:37,250
application structure kind of the

393
00:15:37,250 --> 00:15:39,380
JavaScript layout of an application

394
00:15:39,380 --> 00:15:42,380
rather than HTML this is just taken from

395
00:15:42,380 --> 00:15:44,329
one of our basic applications which is a

396
00:15:44,329 --> 00:15:46,970
documentation viewer so you know when

397
00:15:46,970 --> 00:15:48,170
you're looking through figuring out

398
00:15:48,170 --> 00:15:49,790
where everything is in the n.o framework

399
00:15:49,790 --> 00:15:51,889
you actually use an nual application

400
00:15:51,889 --> 00:15:53,480
that goes and reads the annual source to

401
00:15:53,480 --> 00:15:56,300
produce these docs for you and so you

402
00:15:56,300 --> 00:15:57,500
know here we're kind of creating an app

403
00:15:57,500 --> 00:16:00,260
menu we have you know various properties

404
00:16:00,260 --> 00:16:03,709
defined on it the app menu owns a flex

405
00:16:03,709 --> 00:16:04,850
box which

406
00:16:04,850 --> 00:16:06,500
produce other things and it basically

407
00:16:06,500 --> 00:16:09,230
kind of nests all the way down here but

408
00:16:09,230 --> 00:16:10,880
basically all of these things in this

409
00:16:10,880 --> 00:16:13,009
whole nesting tree are actually owned by

410
00:16:13,009 --> 00:16:15,110
the one thing that has at top level

411
00:16:15,110 --> 00:16:17,600
components array which means you know

412
00:16:17,600 --> 00:16:19,420
you have a lot of flexibility in how

413
00:16:19,420 --> 00:16:22,670
events come back and basically the owner

414
00:16:22,670 --> 00:16:24,110
of all these is able to handle all the

415
00:16:24,110 --> 00:16:25,819
events generated by its children and

416
00:16:25,819 --> 00:16:28,040
that provides kind of really nice event

417
00:16:28,040 --> 00:16:33,050
model for the app another of the values

418
00:16:33,050 --> 00:16:34,880
of n yo is that you know we refer

419
00:16:34,880 --> 00:16:37,490
javascript / HTML kind of going back to

420
00:16:37,490 --> 00:16:40,430
we'd rather generate the HTML source

421
00:16:40,430 --> 00:16:41,930
from JavaScript rather than write it

422
00:16:41,930 --> 00:16:47,079
directly we also believe very much that

423
00:16:47,079 --> 00:16:48,980
javascript is going to be quicker than

424
00:16:48,980 --> 00:16:51,769
WebKit one of the things we do is that

425
00:16:51,769 --> 00:16:53,899
by having this whole JavaScript object

426
00:16:53,899 --> 00:16:55,759
tree is there able to cash a lot of the

427
00:16:55,759 --> 00:16:57,110
things that normally you'd have to query

428
00:16:57,110 --> 00:17:00,290
the Dom to find out about and the over

429
00:17:00,290 --> 00:17:02,180
time we've seen VA we've seen trace

430
00:17:02,180 --> 00:17:04,069
marker you've seen all these engines get

431
00:17:04,069 --> 00:17:05,720
much quicker do much better job of

432
00:17:05,720 --> 00:17:09,230
handling memory whereas WebKit gets a

433
00:17:09,230 --> 00:17:10,909
lot of new features but speed

434
00:17:10,909 --> 00:17:13,159
improvements aren't so much so the more

435
00:17:13,159 --> 00:17:14,809
we were able to kind of push a lot of

436
00:17:14,809 --> 00:17:16,339
these decisions into the JavaScript

437
00:17:16,339 --> 00:17:18,110
layer which is running yo chittod

438
00:17:18,110 --> 00:17:19,640
running almost as fast as you know pure

439
00:17:19,640 --> 00:17:22,100
compiled code it makes the applications

440
00:17:22,100 --> 00:17:23,539
run faster on the device rather than

441
00:17:23,539 --> 00:17:26,419
having to go and make queries into the

442
00:17:26,419 --> 00:17:28,909
big Dom and you know wait for whatever

443
00:17:28,909 --> 00:17:30,200
complex things have to happen in that

444
00:17:30,200 --> 00:17:36,530
engine just kind of VO and further

445
00:17:36,530 --> 00:17:38,690
application of this caching the Dom in

446
00:17:38,690 --> 00:17:41,179
the JavaScript this actually ties into

447
00:17:41,179 --> 00:17:43,130
something that we call the virtual Dom

448
00:17:43,130 --> 00:17:45,860
which is basically this idea that when

449
00:17:45,860 --> 00:17:47,419
we're trying to generate a scene for an

450
00:17:47,419 --> 00:17:50,240
application instead of us going in and

451
00:17:50,240 --> 00:17:51,830
make calling a bunch of Dom methods to

452
00:17:51,830 --> 00:17:54,020
you know insert object modify attributed

453
00:17:54,020 --> 00:17:56,270
insert object modify attribute addchild

454
00:17:56,270 --> 00:17:58,970
at child add child so on we're actually

455
00:17:58,970 --> 00:18:00,890
going and we're generating a really long

456
00:18:00,890 --> 00:18:03,440
string so like every control can

457
00:18:03,440 --> 00:18:05,600
generate the HTML string for it and we

458
00:18:05,600 --> 00:18:07,190
can nest of strings inside of each other

459
00:18:07,190 --> 00:18:09,200
and so ultimately we end up having this

460
00:18:09,200 --> 00:18:11,720
big string of HTML and then we just do

461
00:18:11,720 --> 00:18:15,890
one set innerhtml call and a WebKit one

462
00:18:15,890 --> 00:18:18,470
thing it does very fast is parse HTML

463
00:18:18,470 --> 00:18:20,150
so instead of doing a bunch of Dom

464
00:18:20,150 --> 00:18:23,750
methods into the into the WebKit wean of

465
00:18:23,750 --> 00:18:25,850
doing one set method it goes parts this

466
00:18:25,850 --> 00:18:27,890
is HTML really quickly and generates a

467
00:18:27,890 --> 00:18:31,370
scene very quickly for us works out

468
00:18:31,370 --> 00:18:34,940
pretty well in practice another value of

469
00:18:34,940 --> 00:18:36,260
the annual framework is supporting

470
00:18:36,260 --> 00:18:38,659
devices and supporting the desktop so

471
00:18:38,659 --> 00:18:40,909
mojo pretty much was only usable on

472
00:18:40,909 --> 00:18:43,370
device you could you know we have an

473
00:18:43,370 --> 00:18:45,500
emulator that you could run you can kind

474
00:18:45,500 --> 00:18:47,510
of do some work in WebKit you know maybe

475
00:18:47,510 --> 00:18:49,789
Safari or Chrome but it didn't work that

476
00:18:49,789 --> 00:18:55,100
great however with any o we we designed

477
00:18:55,100 --> 00:18:57,080
it originally actually in chrome in

478
00:18:57,080 --> 00:18:59,510
Safari and then pushed it to the device

479
00:18:59,510 --> 00:19:01,640
so all along the idea was set you can

480
00:19:01,640 --> 00:19:02,960
build your application as much as

481
00:19:02,960 --> 00:19:05,330
possible in the desktop and then push it

482
00:19:05,330 --> 00:19:07,970
to device on the desktop you have great

483
00:19:07,970 --> 00:19:09,710
debugging tools you have great profiling

484
00:19:09,710 --> 00:19:10,970
tools you can monitor what's happening

485
00:19:10,970 --> 00:19:12,980
over the network and then get it to the

486
00:19:12,980 --> 00:19:14,870
device and things should tend to work

487
00:19:14,870 --> 00:19:17,870
the same way that's generally its mean

488
00:19:17,870 --> 00:19:19,520
you'll building the framework to work

489
00:19:19,520 --> 00:19:21,679
well in the desktop but also you know

490
00:19:21,679 --> 00:19:24,440
making sure that behavior doesn't change

491
00:19:24,440 --> 00:19:31,220
a lot another final kind of value of

492
00:19:31,220 --> 00:19:32,690
venue is supporting the special features

493
00:19:32,690 --> 00:19:35,750
that we have on webos back in that

494
00:19:35,750 --> 00:19:37,159
architecture diagram i talked about

495
00:19:37,159 --> 00:19:40,400
services well on our device what we do

496
00:19:40,400 --> 00:19:43,190
is we have kind of the system partition

497
00:19:43,190 --> 00:19:45,409
into the user interface what's running

498
00:19:45,409 --> 00:19:47,419
inside a WebKit which shown this cards

499
00:19:47,419 --> 00:19:49,700
and we have services which are kind of

500
00:19:49,700 --> 00:19:52,100
basically background processes they talk

501
00:19:52,100 --> 00:19:54,980
over a palm system bus which can be

502
00:19:54,980 --> 00:19:56,600
thought of kind of similar to http

503
00:19:56,600 --> 00:19:58,390
except that it has the advantages of

504
00:19:58,390 --> 00:20:00,409
everything's authenticated on the device

505
00:20:00,409 --> 00:20:04,280
a service can you know deny access based

506
00:20:04,280 --> 00:20:06,230
on what particular process what

507
00:20:06,230 --> 00:20:07,760
application ID is trying to talk to it

508
00:20:07,760 --> 00:20:09,890
and services also can do subscriptions

509
00:20:09,890 --> 00:20:12,740
where you subscribe to you know some

510
00:20:12,740 --> 00:20:14,570
data from a database mop being modified

511
00:20:14,570 --> 00:20:16,970
and you know instead of just having to

512
00:20:16,970 --> 00:20:18,950
keep asked over and over again you get

513
00:20:18,950 --> 00:20:20,900
pushed to your application whenever that

514
00:20:20,900 --> 00:20:23,900
data changes so we have full support for

515
00:20:23,900 --> 00:20:27,260
that and also you know applications to

516
00:20:27,260 --> 00:20:29,659
provider and services based on node we

517
00:20:29,659 --> 00:20:32,120
also provide a mocking facility where

518
00:20:32,120 --> 00:20:34,190
if you're testing on the desktop you

519
00:20:34,190 --> 00:20:36,290
basically provide kind of data values

520
00:20:36,290 --> 00:20:38,540
for these services so your application

521
00:20:38,540 --> 00:20:40,550
can call the same calls that would make

522
00:20:40,550 --> 00:20:42,680
on the device but instead of you know

523
00:20:42,680 --> 00:20:44,570
having to have a device connected you

524
00:20:44,570 --> 00:20:46,190
can just look at a data file stored with

525
00:20:46,190 --> 00:20:47,540
your application and send that back

526
00:20:47,540 --> 00:20:49,670
that's how we do things like test out

527
00:20:49,670 --> 00:20:51,410
our email application on the desktop and

528
00:20:51,410 --> 00:20:54,710
not have to have a device hooked up we

529
00:20:54,710 --> 00:20:56,660
support notifications actually it's one

530
00:20:56,660 --> 00:20:59,600
the real strengths of webos some i wish

531
00:20:59,600 --> 00:21:01,490
i had a projector here for this because

532
00:21:01,490 --> 00:21:03,680
well if you can look you see like in the

533
00:21:03,680 --> 00:21:05,330
middle of my screen I have a couple of

534
00:21:05,330 --> 00:21:07,430
notifications they're just about my own

535
00:21:07,430 --> 00:21:09,200
email and accounts things that's going

536
00:21:09,200 --> 00:21:13,460
on in actually what's happening inside

537
00:21:13,460 --> 00:21:16,160
webOS is that applications in addition

538
00:21:16,160 --> 00:21:17,870
to their own cards can create these

539
00:21:17,870 --> 00:21:19,310
separate notifications which actually

540
00:21:19,310 --> 00:21:22,160
kind of our own HTML web windows put

541
00:21:22,160 --> 00:21:24,080
data into them and then we have a whole

542
00:21:24,080 --> 00:21:26,480
way of stacking that up so that you can

543
00:21:26,480 --> 00:21:27,890
view all the various notifications from

544
00:21:27,890 --> 00:21:29,180
your different applications at once

545
00:21:29,180 --> 00:21:31,190
dismiss them if they're not important to

546
00:21:31,190 --> 00:21:34,670
you and move on with your life multiple

547
00:21:34,670 --> 00:21:36,650
card window management important part of

548
00:21:36,650 --> 00:21:40,490
webos applications can in addition to

549
00:21:40,490 --> 00:21:41,840
just having kind of the main tab they

550
00:21:41,840 --> 00:21:44,780
display on you know occupy other tabs

551
00:21:44,780 --> 00:21:47,630
ennio basically supports this by letting

552
00:21:47,630 --> 00:21:49,910
you create a different index HTML or you

553
00:21:49,910 --> 00:21:52,280
know start HTML page for each one but

554
00:21:52,280 --> 00:21:53,750
then the different windows can share

555
00:21:53,750 --> 00:21:55,850
data between each other either I posting

556
00:21:55,850 --> 00:21:57,650
messages back and forth or just through

557
00:21:57,650 --> 00:21:59,780
a common root window that they can all

558
00:21:59,780 --> 00:22:03,050
talk to we have an iframe based method

559
00:22:03,050 --> 00:22:05,120
for doing cross a flan Qing well you

560
00:22:05,120 --> 00:22:06,500
said internally in the system for doing

561
00:22:06,500 --> 00:22:08,480
things like providing access to the file

562
00:22:08,480 --> 00:22:11,630
system we have like a special privilege

563
00:22:11,630 --> 00:22:14,000
file manager app and then other apps can

564
00:22:14,000 --> 00:22:15,470
you know basically stick it into an

565
00:22:15,470 --> 00:22:17,570
iframe inside their view the user

566
00:22:17,570 --> 00:22:19,340
interacts with it and then that sends a

567
00:22:19,340 --> 00:22:20,720
message back the original app that

568
00:22:20,720 --> 00:22:22,610
invokes it saying here is what got

569
00:22:22,610 --> 00:22:25,370
ticked by the user and then we also

570
00:22:25,370 --> 00:22:27,560
support object tag based hybrid

571
00:22:27,560 --> 00:22:30,470
applications this is a method where an

572
00:22:30,470 --> 00:22:33,290
application can you have part of its

573
00:22:33,290 --> 00:22:35,420
functionality than JavaScript part of it

574
00:22:35,420 --> 00:22:37,910
done and compiled C++ code and then

575
00:22:37,910 --> 00:22:40,160
that's actually invoked by putting an

576
00:22:40,160 --> 00:22:42,500
object tag with a special mind tide that

577
00:22:42,500 --> 00:22:44,870
causes this whole separate process to be

578
00:22:44,870 --> 00:22:45,900
created with

579
00:22:45,900 --> 00:22:48,300
c++ codes running then that can be

580
00:22:48,300 --> 00:22:49,620
displayed as part of your JavaScript

581
00:22:49,620 --> 00:22:52,050
application internally we're using it to

582
00:22:52,050 --> 00:22:54,540
do things like parse Microsoft Word

583
00:22:54,540 --> 00:22:57,090
files for quick office or handle drm

584
00:22:57,090 --> 00:23:01,500
books for the amazon kindle app so any

585
00:23:01,500 --> 00:23:04,110
other platform we've been doing a lot of

586
00:23:04,110 --> 00:23:05,640
work on this since we originally

587
00:23:05,640 --> 00:23:08,100
announced it kind of we first showed it

588
00:23:08,100 --> 00:23:09,600
back in February 9 that are a big

589
00:23:09,600 --> 00:23:11,580
developer event and since then it just

590
00:23:11,580 --> 00:23:14,280
gets more and more fleshed out so if you

591
00:23:14,280 --> 00:23:15,420
actually want to learn more about the

592
00:23:15,420 --> 00:23:18,120
annual API I suggest you start reading

593
00:23:18,120 --> 00:23:20,910
some of these classes I'll start reading

594
00:23:20,910 --> 00:23:23,070
them to you and your activity button and

595
00:23:23,070 --> 00:23:24,660
you know Jake's context and you have a

596
00:23:24,660 --> 00:23:27,540
ha ok ok I'm not actually going to read

597
00:23:27,540 --> 00:23:28,830
all this we have a very nice

598
00:23:28,830 --> 00:23:32,190
documentation viewer but kind of these

599
00:23:32,190 --> 00:23:33,300
are the kind of key areas that we're

600
00:23:33,300 --> 00:23:35,400
tackling in the framework language

601
00:23:35,400 --> 00:23:36,840
instinct shins kind of the standard

602
00:23:36,840 --> 00:23:37,980
stuff you get from any JavaScript

603
00:23:37,980 --> 00:23:41,880
framework binding all that the system

604
00:23:41,880 --> 00:23:42,960
which I talked about earlier with

605
00:23:42,960 --> 00:23:45,660
objects and components Dom management

606
00:23:45,660 --> 00:23:47,130
which is basically our whole system of

607
00:23:47,130 --> 00:23:49,320
generating HTML code cashing it in

608
00:23:49,320 --> 00:23:50,880
JavaScript and then outputting all at

609
00:23:50,880 --> 00:23:53,400
once to generate pages we have input

610
00:23:53,400 --> 00:23:55,890
controls not just standard like wrapper

611
00:23:55,890 --> 00:23:58,980
around input but all the various styled

612
00:23:58,980 --> 00:24:00,150
things that kind of give our web

613
00:24:00,150 --> 00:24:01,830
platform its own distinctive look

614
00:24:01,830 --> 00:24:05,480
everything from sliders now all that

615
00:24:05,480 --> 00:24:09,320
containers can include things like pains

616
00:24:09,320 --> 00:24:12,900
pop-ups dialogues all these things you

617
00:24:12,900 --> 00:24:14,730
want to kind of organize your controls

618
00:24:14,730 --> 00:24:17,490
and application list appears in area we

619
00:24:17,490 --> 00:24:19,590
spend a lot of time on because a lot of

620
00:24:19,590 --> 00:24:20,670
dealing with these heavy data

621
00:24:20,670 --> 00:24:23,100
applications is how do you make a big

622
00:24:23,100 --> 00:24:25,950
list but say it's email messages say its

623
00:24:25,950 --> 00:24:28,260
database records well you don't want

624
00:24:28,260 --> 00:24:29,610
necessarily want to create you know all

625
00:24:29,610 --> 00:24:32,130
these Dom objects just for the list so

626
00:24:32,130 --> 00:24:33,870
we have virtual ways of that where we

627
00:24:33,870 --> 00:24:36,120
page in a bit at a time and kind of keep

628
00:24:36,120 --> 00:24:38,340
the scrolling going but you know we

629
00:24:38,340 --> 00:24:39,540
don't necessarily have to have all that

630
00:24:39,540 --> 00:24:42,290
in the in the actual webpage at once

631
00:24:42,290 --> 00:24:44,520
services are an area already mentioned

632
00:24:44,520 --> 00:24:46,710
how do you interface with that we also

633
00:24:46,710 --> 00:24:48,240
have a whole globalization structure

634
00:24:48,240 --> 00:24:50,040
which done really tells you information

635
00:24:50,040 --> 00:24:51,630
about the region that you're running in

636
00:24:51,630 --> 00:24:53,130
but also provides a way for your

637
00:24:53,130 --> 00:24:56,250
application to have localized resources

638
00:24:56,250 --> 00:24:57,990
so you can replace strings based on with

639
00:24:57,990 --> 00:24:58,630
language around

640
00:24:58,630 --> 00:25:01,570
and finally a very extensive support for

641
00:25:01,570 --> 00:25:05,380
the web platform so now the fun part let

642
00:25:05,380 --> 00:25:06,820
me show you a few demos of some of the

643
00:25:06,820 --> 00:25:08,950
things so they don't have a projector

644
00:25:08,950 --> 00:25:10,330
setup for the device I'm actually going

645
00:25:10,330 --> 00:25:12,910
to run these in Chrome so we've already

646
00:25:12,910 --> 00:25:15,400
showed hello world next thing on a show

647
00:25:15,400 --> 00:25:18,550
here this is just our API browser we

648
00:25:18,550 --> 00:25:21,790
have a list running over here with a

649
00:25:21,790 --> 00:25:24,580
couple of pains switch between that you

650
00:25:24,580 --> 00:25:27,880
can go through and you know pick a

651
00:25:27,880 --> 00:25:29,890
random component all this is being

652
00:25:29,890 --> 00:25:31,690
generated on the fly by the actual

653
00:25:31,690 --> 00:25:33,940
application browser based on the source

654
00:25:33,940 --> 00:25:35,410
code that's stealing that no framework

655
00:25:35,410 --> 00:25:38,380
included with this next one I'll show

656
00:25:38,380 --> 00:25:40,330
you here is a sample called style

657
00:25:40,330 --> 00:25:42,730
matters this is basically one that we

658
00:25:42,730 --> 00:25:44,020
include that lets you kind of browse

659
00:25:44,020 --> 00:25:45,400
through all the various controls we

660
00:25:45,400 --> 00:25:49,180
provide look and see how they work you

661
00:25:49,180 --> 00:25:51,340
know all of the stuff we have is kind of

662
00:25:51,340 --> 00:25:53,170
boring stuff like oh here's a fixed

663
00:25:53,170 --> 00:26:00,820
header okay that's great but you know we

664
00:26:00,820 --> 00:26:02,170
can do more interesting things like

665
00:26:02,170 --> 00:26:04,960
dialogues we want to dialogue without a

666
00:26:04,960 --> 00:26:06,580
pop up from the bottom of the screen yay

667
00:26:06,580 --> 00:26:09,670
what a two-button dialogue okay era

668
00:26:09,670 --> 00:26:13,600
dialogue how do we do with all that next

669
00:26:13,600 --> 00:26:18,130
sample here is this is actually just

670
00:26:18,130 --> 00:26:20,170
more of a kind of looking at the way

671
00:26:20,170 --> 00:26:23,140
various controls look in an yo so this

672
00:26:23,140 --> 00:26:24,550
kind of let's just kind of very quickly

673
00:26:24,550 --> 00:26:26,620
list through a lot of various you know

674
00:26:26,620 --> 00:26:30,640
input fields dividers search engines you

675
00:26:30,640 --> 00:26:32,400
have a pop up for picking integers

676
00:26:32,400 --> 00:26:35,620
making various things you know this

677
00:26:35,620 --> 00:26:37,090
basically we're showing this in chrome

678
00:26:37,090 --> 00:26:38,770
but these work exactly the same way on

679
00:26:38,770 --> 00:26:40,990
device well except that you're touching

680
00:26:40,990 --> 00:26:44,950
instead of you know using a mouse this

681
00:26:44,950 --> 00:26:46,690
is an example the dragon truck system we

682
00:26:46,690 --> 00:26:49,720
have an N yo so tapping and holding on

683
00:26:49,720 --> 00:26:51,070
this suddenly gives you a little icon

684
00:26:51,070 --> 00:26:52,780
which will follow your finger to a drag

685
00:26:52,780 --> 00:26:58,810
target here is showing virtual repeater

686
00:26:58,810 --> 00:27:01,330
so the virtual repeater is a special

687
00:27:01,330 --> 00:27:05,530
kind which lets you repeat a whole lot

688
00:27:05,530 --> 00:27:06,760
of elements basically what you would do

689
00:27:06,760 --> 00:27:08,440
for a list but it doesn't necessarily

690
00:27:08,440 --> 00:27:10,600
generate the entire list at once it

691
00:27:10,600 --> 00:27:12,250
generates a page of that at a time

692
00:27:12,250 --> 00:27:14,950
and as the as you touch and scroll

693
00:27:14,950 --> 00:27:16,960
through you know have the kind of

694
00:27:16,960 --> 00:27:20,170
inertial scrolling well it's going in

695
00:27:20,170 --> 00:27:22,030
its you know creating new ones to put it

696
00:27:22,030 --> 00:27:23,350
this in getting rather the ones at the

697
00:27:23,350 --> 00:27:26,020
top so your actual page it's never over

698
00:27:26,020 --> 00:27:27,880
loaded this was really important on

699
00:27:27,880 --> 00:27:30,010
mobile devices because the more objects

700
00:27:30,010 --> 00:27:31,420
you have on the page the more memory you

701
00:27:31,420 --> 00:27:36,180
use a slower things get next over is

702
00:27:36,180 --> 00:27:38,850
pop-ups just showing some of the things

703
00:27:38,850 --> 00:27:40,900
we're doing a lot of work with CSS

704
00:27:40,900 --> 00:27:42,790
transformation so you know just showing

705
00:27:42,790 --> 00:27:45,820
a pop-up modal one no problem maybe you

706
00:27:45,820 --> 00:27:47,170
want to have it animated popping in

707
00:27:47,170 --> 00:27:51,600
that's great yeah some more transitions

708
00:27:51,600 --> 00:27:53,980
even though the fancy pop-up which you

709
00:27:53,980 --> 00:27:55,000
probably would never use in an

710
00:27:55,000 --> 00:27:56,800
application but it's their kind of like

711
00:27:56,800 --> 00:28:01,240
you know the fancy storm window shutter

712
00:28:01,240 --> 00:28:03,340
animations and video toaster back in the

713
00:28:03,340 --> 00:28:09,080
day yep the fancy rotating pop-up whoo

714
00:28:09,090 --> 00:28:11,530
this is an example these actually are

715
00:28:11,530 --> 00:28:13,660
sliding pains is a very important part

716
00:28:13,660 --> 00:28:16,600
of our UI look and feel you know if

717
00:28:16,600 --> 00:28:17,800
you're working with an application on

718
00:28:17,800 --> 00:28:19,330
this you wanted the ability to both you

719
00:28:19,330 --> 00:28:21,040
know be able to see lots of levels of it

720
00:28:21,040 --> 00:28:23,260
but also zoom in so what we've done is

721
00:28:23,260 --> 00:28:25,600
if you can see down here there's kind of

722
00:28:25,600 --> 00:28:28,600
a whole sliding effect so you can go

723
00:28:28,600 --> 00:28:30,910
fullscreen with that tap once and it

724
00:28:30,910 --> 00:28:34,300
pops out tap again that pops out and the

725
00:28:34,300 --> 00:28:36,550
idea is that you know you drill through

726
00:28:36,550 --> 00:28:38,500
maybe an email application you drill

727
00:28:38,500 --> 00:28:39,730
through you know here's your list of

728
00:28:39,730 --> 00:28:42,010
email providers next is a list of you

729
00:28:42,010 --> 00:28:43,480
know whatever full item if you have in

730
00:28:43,480 --> 00:28:45,490
that folder 1 over is the actual reading

731
00:28:45,490 --> 00:28:49,330
pane another type controlled we have

732
00:28:49,330 --> 00:28:52,600
nano framework is just pains if you'd

733
00:28:52,600 --> 00:28:54,100
play with webos before there's a very

734
00:28:54,100 --> 00:28:55,570
much the idea of scenes and like

735
00:28:55,570 --> 00:28:57,580
switching between your one scene to

736
00:28:57,580 --> 00:29:00,670
another back gestures well pains are

737
00:29:00,670 --> 00:29:01,780
kind of the way you're organizing this

738
00:29:01,780 --> 00:29:04,860
in n.y now so what we've done here is

739
00:29:04,860 --> 00:29:07,180
just showing you you know you can you

740
00:29:07,180 --> 00:29:08,680
know switch between various things

741
00:29:08,680 --> 00:29:10,720
they'll take up full screen and this is

742
00:29:10,720 --> 00:29:12,880
actually a flex box where you have a

743
00:29:12,880 --> 00:29:14,890
header object to find a footer and the

744
00:29:14,890 --> 00:29:18,280
pain is there in the middle final thing

745
00:29:18,280 --> 00:29:19,510
I'm going to show this is our carousel

746
00:29:19,510 --> 00:29:22,030
control and the idea with carousel is

747
00:29:22,030 --> 00:29:24,760
that this is like you're in a photo of

748
00:29:24,760 --> 00:29:26,080
your application the user one

749
00:29:26,080 --> 00:29:31,120
to swipe through so you know just with a

750
00:29:31,120 --> 00:29:33,309
quick swipe of the finger move back and

751
00:29:33,309 --> 00:29:35,460
forth between these various pages and

752
00:29:35,460 --> 00:29:37,659
these are all being generated virtually

753
00:29:37,659 --> 00:29:41,200
on the fly so that's just a few examples

754
00:29:41,200 --> 00:29:43,090
I mean this is all very much developer

755
00:29:43,090 --> 00:29:44,679
demo if you actually want to see you

756
00:29:44,679 --> 00:29:48,070
know the way applications work one way

757
00:29:48,070 --> 00:29:52,929
to do that is to join our developer

758
00:29:52,929 --> 00:29:55,179
program you can go to developer palm

759
00:29:55,179 --> 00:29:57,029
calm and get a lot of details on this

760
00:29:57,029 --> 00:29:59,590
Web OS 30 which is the first one that

761
00:29:59,590 --> 00:30:02,529
ships with Enyo is currently in early

762
00:30:02,529 --> 00:30:05,169
access so if you mailed a PDC at palm

763
00:30:05,169 --> 00:30:07,149
com saying hey I want it early access to

764
00:30:07,149 --> 00:30:08,500
any Oh we'll get you all the details

765
00:30:08,500 --> 00:30:11,200
right now it's just a simple NDA but all

766
00:30:11,200 --> 00:30:13,179
that's going to be coming open open to

767
00:30:13,179 --> 00:30:15,340
the public once the touchpad ships this

768
00:30:15,340 --> 00:30:19,120
summer we're really excited about this

769
00:30:19,120 --> 00:30:21,130
we feel like the touchpad is kind of our

770
00:30:21,130 --> 00:30:24,100
big chance to bring the whole webos

771
00:30:24,100 --> 00:30:26,590
experience to a much wider market and

772
00:30:26,590 --> 00:30:29,169
you know any coming to phones to other

773
00:30:29,169 --> 00:30:31,779
devices going for in the future and we

774
00:30:31,779 --> 00:30:33,250
really love to get your feedback as the

775
00:30:33,250 --> 00:30:34,840
JavaScript community on what you know

776
00:30:34,840 --> 00:30:36,490
what we can do well and how to improve

777
00:30:36,490 --> 00:30:40,870
everything so a big cheesy thank you

778
00:30:40,870 --> 00:30:42,610
transition for spending a few minutes

779
00:30:42,610 --> 00:30:50,200
with me today have a great j/s comp

780
00:30:50,210 --> 00:30:53,430
uh you know there are planes dress we

