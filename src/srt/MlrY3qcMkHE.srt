1
00:00:10,030 --> 00:00:14,180

yeah welcome everybody my name is Alex

2
00:00:14,180 --> 00:00:15,650
I'm going to get the talk

3
00:00:15,650 --> 00:00:18,670
odd from get up to production a few

4
00:00:18,670 --> 00:00:21,529
learnings I did implementing an old

5
00:00:21,529 --> 00:00:27,200
deployment process our concepts my

6
00:00:27,200 --> 00:00:32,050
slides are on github under this domain

7
00:00:32,050 --> 00:00:38,480
not very interesting okay who's the one

8
00:00:38,480 --> 00:00:42,250
in front I'm Alex working at adventure

9
00:00:42,250 --> 00:00:45,760
so you know in him work is very small

10
00:00:45,760 --> 00:00:49,760
company I'm front and software engineer

11
00:00:49,760 --> 00:00:52,220
and I'm carrying about everything

12
00:00:52,220 --> 00:00:55,610
regarding to develop our automation and

13
00:00:55,610 --> 00:01:01,519
operations Oh from originally yeah I

14
00:01:01,519 --> 00:01:06,650
love music and play drums okay almost

15
00:01:06,650 --> 00:01:10,340
two months ago very not far away i

16
00:01:10,340 --> 00:01:14,740
started at adventure as frontal engineer

17
00:01:14,740 --> 00:01:17,780
the first day i had looked at as

18
00:01:17,780 --> 00:01:22,700
followed well i had a project and i did

19
00:01:22,700 --> 00:01:25,910
some small changes committed it pushed

20
00:01:25,910 --> 00:01:28,940
it to get up then okay i wanted to apply

21
00:01:28,940 --> 00:01:33,650
to staging yeah hey guys which button

22
00:01:33,650 --> 00:01:37,700
arrived to press i see is more a few

23
00:01:37,700 --> 00:01:40,280
smiling face maybe a few of you can

24
00:01:40,280 --> 00:01:47,210
imagine yeah even better there's nobody

25
00:01:47,210 --> 00:01:50,390
but haha as this etching to the

26
00:01:50,390 --> 00:01:56,409
surrogate pool yeah cool and I was like

27
00:01:56,409 --> 00:02:03,830
sorry wrong direction you all you all

28
00:02:03,830 --> 00:02:08,209
know it seriously it's 2016 one does not

29
00:02:08,209 --> 00:02:11,930
deploy a very good call so I said okay

30
00:02:11,930 --> 00:02:15,319
we need to change that seriously Kenneth

31
00:02:15,319 --> 00:02:19,220
BAE okay to give you a little bit of

32
00:02:19,220 --> 00:02:23,060
background as i'm doing mainly front and

33
00:02:23,060 --> 00:02:24,380
I give you the

34
00:02:24,380 --> 00:02:27,170
project / he would kind of repositories

35
00:02:27,170 --> 00:02:31,310
we have first and variant important we

36
00:02:31,310 --> 00:02:36,440
have documentation repositories yeah we

37
00:02:36,440 --> 00:02:38,780
have also front and projects the regular

38
00:02:38,780 --> 00:02:41,240
one we did too for customers and for

39
00:02:41,240 --> 00:02:44,000
internal purposes and for our own

40
00:02:44,000 --> 00:02:47,000
startups plus we have front and

41
00:02:47,000 --> 00:02:49,160
libraries where are all these project

42
00:02:49,160 --> 00:02:52,820
depend on and obviously we have taken

43
00:02:52,820 --> 00:02:54,910
repositories back since this isn't

44
00:02:54,910 --> 00:02:59,800
JavaScript's so I keep them away sorry

45
00:02:59,800 --> 00:03:04,850
okay requirement what do we want to have

46
00:03:04,850 --> 00:03:09,200
from this from this deployment circuit

47
00:03:09,200 --> 00:03:12,080
yeah after pushing to get up to the

48
00:03:12,080 --> 00:03:14,630
branch develop as we follow the kids get

49
00:03:14,630 --> 00:03:17,720
flow convenience we want to have the

50
00:03:17,720 --> 00:03:25,280
deployment running on the CI server we

51
00:03:25,280 --> 00:03:27,470
want to have the tests executed

52
00:03:27,470 --> 00:03:31,850
obviously we want to have bumped the

53
00:03:31,850 --> 00:03:34,070
next semantic version to our package

54
00:03:34,070 --> 00:03:37,640
Jason as we are only following it flow

55
00:03:37,640 --> 00:03:41,180
but also following the semantic version

56
00:03:41,180 --> 00:03:46,280
release cycle I will have a deeper look

57
00:03:46,280 --> 00:03:51,140
into that later plus we want to build an

58
00:03:51,140 --> 00:03:53,570
automatic change lock from the last

59
00:03:53,570 --> 00:03:56,000
symmetric version we did till now to the

60
00:03:56,000 --> 00:04:00,770
latest release the next yeah fancy

61
00:04:00,770 --> 00:04:03,200
buzzword we want to build docker

62
00:04:03,200 --> 00:04:05,480
containers yeah everybody likes docker

63
00:04:05,480 --> 00:04:08,120
containers or having haven't even heard

64
00:04:08,120 --> 00:04:11,930
about it we want to push this sucker

65
00:04:11,930 --> 00:04:16,820
container into our repository we use

66
00:04:16,820 --> 00:04:21,560
scuba netas as deployment know as an

67
00:04:21,560 --> 00:04:23,150
serving framework for the docker

68
00:04:23,150 --> 00:04:29,060
containers as an infrastructure we want

69
00:04:29,060 --> 00:04:30,740
to push the flag because we are fancy we

70
00:04:30,740 --> 00:04:32,370
want to have a slack party here

71
00:04:32,370 --> 00:04:35,220
we have them at Donnie deployment yeah

72
00:04:35,220 --> 00:04:38,639
good stuff plus we want to have the

73
00:04:38,639 --> 00:04:44,460
sides SSH protected this isn't exactly a

74
00:04:44,460 --> 00:04:46,830
requirement of the deployment workflow

75
00:04:46,830 --> 00:04:50,690
but for the whole infrastructure setup

76
00:04:50,690 --> 00:05:01,629
so i added it to the list next what we

77
00:05:01,639 --> 00:05:07,320
what we have as as tooling set a coffee

78
00:05:07,320 --> 00:05:10,139
ously we have get up so we done don't

79
00:05:10,139 --> 00:05:13,440
need to change that we have Circle C I

80
00:05:13,440 --> 00:05:15,810
that was one of the first decisions I

81
00:05:15,810 --> 00:05:20,190
contributed in the new company as we are

82
00:05:20,190 --> 00:05:22,560
very deciding to use Travis CI or a

83
00:05:22,560 --> 00:05:24,900
circle TI and I said I've got some very

84
00:05:24,900 --> 00:05:26,910
good very good experiences with soccer

85
00:05:26,910 --> 00:05:29,070
see I regarding speed and extensibility

86
00:05:29,070 --> 00:05:36,740
and the possibility to to script things

87
00:05:36,740 --> 00:05:40,229
yeah so as circle has a free container

88
00:05:40,229 --> 00:05:42,570
for builds for private bills we decided

89
00:05:42,570 --> 00:05:45,110
to try circular and if it's not cool we

90
00:05:45,110 --> 00:05:49,380
can even change to the Travis so today

91
00:05:49,380 --> 00:05:50,910
we still stick with circle because it's

92
00:05:50,910 --> 00:05:55,139
cool sorry we use cout benitez but not

93
00:05:55,139 --> 00:05:59,070
the plane coo benitez we use google

94
00:05:59,070 --> 00:06:01,530
cloud platform so we use the google

95
00:06:01,530 --> 00:06:08,099
container engine to serve our stuff plus

96
00:06:08,099 --> 00:06:12,000
obviously we have Tucker and I equally

97
00:06:12,000 --> 00:06:15,180
asslick not infrastructure related by

98
00:06:15,180 --> 00:06:21,020
the school okay the first I did because

99
00:06:21,020 --> 00:06:26,430
no the other way aren't the first step I

100
00:06:26,430 --> 00:06:28,410
took was creating a deployment

101
00:06:28,410 --> 00:06:32,880
repository we decided to not put the

102
00:06:32,880 --> 00:06:37,020
whole executions the whole command into

103
00:06:37,020 --> 00:06:39,110
the circle Yama's or travis yours and

104
00:06:39,110 --> 00:06:42,240
because we want to have them one reuse

105
00:06:42,240 --> 00:06:45,870
all reusable and two

106
00:06:45,870 --> 00:06:47,940
we change them we want them to be

107
00:06:47,940 --> 00:06:51,720
applied to every circle Yama so in order

108
00:06:51,720 --> 00:06:54,630
to do that we decided to create a

109
00:06:54,630 --> 00:06:56,730
deployment repository where all this

110
00:06:56,730 --> 00:07:00,450
deploy and Peele scripts and the circle

111
00:07:00,450 --> 00:07:03,320
yeah modes we have they are are

112
00:07:03,320 --> 00:07:09,390
collected there yeah soccer yeah Mets

113
00:07:09,390 --> 00:07:12,030
and the deploy scripts to pushing it to

114
00:07:12,030 --> 00:07:14,970
cuoco Benitez or for the old projects

115
00:07:14,970 --> 00:07:18,870
SSH into the server and to agra pool and

116
00:07:18,870 --> 00:07:24,720
that's good yeah of course that isn't as

117
00:07:24,720 --> 00:07:28,670
easy as expected as every project so

118
00:07:28,670 --> 00:07:33,960
obviously there are pitfalls first we

119
00:07:33,960 --> 00:07:37,980
wanted to imagine automatically get the

120
00:07:37,980 --> 00:07:40,080
commit or the bunch of comets

121
00:07:40,080 --> 00:07:42,210
transitions through the gate flow

122
00:07:42,210 --> 00:07:44,250
workflow but there is a problem with

123
00:07:44,250 --> 00:07:49,980
that because sorry locally you would

124
00:07:49,980 --> 00:07:53,430
just do a brew install good flow adh

125
00:07:53,430 --> 00:07:57,630
assuming you're on Meg and this is

126
00:07:57,630 --> 00:08:02,040
working pretty good but it's working

127
00:08:02,040 --> 00:08:05,790
pretty good on OS X or locally it works

128
00:08:05,790 --> 00:08:11,190
on my machine hat all super fancy as we

129
00:08:11,190 --> 00:08:13,290
are building on ubuntu distributions on

130
00:08:13,290 --> 00:08:16,020
in circle you one would assume that is

131
00:08:16,020 --> 00:08:21,450
only a sudo apt-get install dash no cash

132
00:08:21,450 --> 00:08:26,130
flow yes that works but you can't

133
00:08:26,130 --> 00:08:29,010
execute good flow I have no idea why I

134
00:08:29,010 --> 00:08:33,210
wasn't able to figure out so I had to

135
00:08:33,210 --> 00:08:37,470
install it manually luckily the gate

136
00:08:37,470 --> 00:08:40,530
flow AVH repository ships with an

137
00:08:40,530 --> 00:08:44,060
install script but this install script

138
00:08:44,060 --> 00:08:48,270
wasn't that easy to use it doesn't get

139
00:08:48,270 --> 00:08:53,400
clone and from serious reasons it wasn't

140
00:08:53,400 --> 00:08:56,190
able to get clone so it's a public

141
00:08:56,190 --> 00:08:58,889
repository and doing that it said hey

142
00:08:58,889 --> 00:09:01,079
looks like either the preparatory does

143
00:09:01,079 --> 00:09:03,179
not exist or you don't have access it's

144
00:09:03,179 --> 00:09:04,889
appropriate public repository what's the

145
00:09:04,889 --> 00:09:08,850
matter I don't know I will show you that

146
00:09:08,850 --> 00:09:15,029
one later it's it's a bit of a mess no

147
00:09:15,029 --> 00:09:19,619
i'm going to show you that now does work

148
00:09:19,619 --> 00:09:38,699
I have to find my manual yeah so is

149
00:09:38,699 --> 00:09:42,929
everyone able to read that yeah yeah

150
00:09:42,929 --> 00:09:47,939
yeah cool okay that looks pretty simple

151
00:09:47,939 --> 00:09:50,779
but it took me five or to figure out

152
00:09:50,779 --> 00:09:54,299
okay first we create under the home

153
00:09:54,299 --> 00:09:56,279
directory they get flow directory it's

154
00:09:56,279 --> 00:10:02,730
pretty obviously then we get this there

155
00:10:02,730 --> 00:10:06,689
is an install script string there so we

156
00:10:06,689 --> 00:10:12,209
just get this deploy script and now they

157
00:10:12,209 --> 00:10:14,429
are so magic you have to export a

158
00:10:14,429 --> 00:10:18,989
variable repo home to set the repository

159
00:10:18,989 --> 00:10:23,059
a where L to get to work on circle so

160
00:10:23,059 --> 00:10:27,419
simply get clone HTTP Calvin double

161
00:10:27,419 --> 00:10:32,519
slash does not work and but with this

162
00:10:32,519 --> 00:10:38,100
setup cool it works with this setup one

163
00:10:38,100 --> 00:10:40,589
could easily export this environment

164
00:10:40,589 --> 00:10:45,029
variable and tell 0a0 if you open a new

165
00:10:45,029 --> 00:10:47,429
shell to execute this command please

166
00:10:47,429 --> 00:10:49,919
pass through every environment variable

167
00:10:49,919 --> 00:10:53,669
to the command bash and then you could

168
00:10:53,669 --> 00:10:56,549
easily executed funny leap there is

169
00:10:56,549 --> 00:11:00,089
another problem as you may see and now

170
00:11:00,089 --> 00:11:03,239
I'm executing this script with set dash

171
00:11:03,239 --> 00:11:06,629
e setesh e fails if one of the commands

172
00:11:06,629 --> 00:11:09,919
containing contained in this file fails

173
00:11:09,919 --> 00:11:11,940
but honey

174
00:11:11,940 --> 00:11:15,400
this command failed every time even if

175
00:11:15,400 --> 00:11:25,550
it installed correctly so yeah no words

176
00:11:25,560 --> 00:11:32,020
right and having that done one can

177
00:11:32,020 --> 00:11:36,550
easily install it okay let's remove it

178
00:11:36,550 --> 00:11:43,330
again there's my cursor goodbye yep

179
00:11:43,330 --> 00:11:58,750
storm okay that was good flow now it's

180
00:11:58,750 --> 00:12:01,000
set up and the working with it was

181
00:12:01,000 --> 00:12:03,610
pretty pretty nice but there is another

182
00:12:03,610 --> 00:12:08,140
funny effect with get flow if you do n

183
00:12:08,140 --> 00:12:11,230
brew install get cash flow on was X you

184
00:12:11,230 --> 00:12:13,000
get the old version there are two

185
00:12:13,000 --> 00:12:15,400
versions of kit flow one is get dash

186
00:12:15,400 --> 00:12:18,190
flow and one is get dash flow dash AVH

187
00:12:18,190 --> 00:12:21,550
and there is an issue with the old one

188
00:12:21,550 --> 00:12:24,970
which doesn't get update for two years

189
00:12:24,970 --> 00:12:29,410
now I guess when you do get flow release

190
00:12:29,410 --> 00:12:32,770
finish dash mne to pass a message and

191
00:12:32,770 --> 00:12:35,800
this message contains the space it flow

192
00:12:35,800 --> 00:12:37,930
will fail for some serious reason I

193
00:12:37,930 --> 00:12:42,880
don't know this issue was fixed and get

194
00:12:42,880 --> 00:12:45,820
flow AVH so I simply decided to use that

195
00:12:45,820 --> 00:12:48,190
but then I could we get got into this

196
00:12:48,190 --> 00:12:56,740
issues and you can imagine yeah okay coo

197
00:12:56,740 --> 00:13:01,060
benitez coo Benitez's how many of you

198
00:13:01,060 --> 00:13:05,770
doesn't know coo Benitez 1 2 3 4 50 K

199
00:13:05,770 --> 00:13:10,090
and Q Benitez is an very smart framework

200
00:13:10,090 --> 00:13:13,560
it allows you to simply replicate

201
00:13:13,560 --> 00:13:16,510
containers within replication controller

202
00:13:16,510 --> 00:13:21,120
which you can then expose as a service

203
00:13:21,120 --> 00:13:24,520
which makes the whole process very easy

204
00:13:24,520 --> 00:13:25,360
about

205
00:13:25,360 --> 00:13:27,550
show you a bit more of that later when

206
00:13:27,550 --> 00:13:33,040
it gets to an example there is a problem

207
00:13:33,040 --> 00:13:39,160
with that because yeah koo Benitez has a

208
00:13:39,160 --> 00:13:44,260
nice feature called rolling update to

209
00:13:44,260 --> 00:13:47,680
replicate no to replace the replication

210
00:13:47,680 --> 00:13:50,769
controllers which does work very nice

211
00:13:50,769 --> 00:13:53,079
you know just tell cubanita say please

212
00:13:53,079 --> 00:13:56,170
repeat please replace this replication

213
00:13:56,170 --> 00:13:58,709
controller with this new image of docker

214
00:13:58,709 --> 00:14:03,550
with this new docker container image but

215
00:14:03,550 --> 00:14:07,990
this this pretty nice command has a

216
00:14:07,990 --> 00:14:12,970
problem which isn't contained in any

217
00:14:12,970 --> 00:14:17,200
dogs it's singleton over the whole crew

218
00:14:17,200 --> 00:14:20,589
benitez cluster so if you do a rolling

219
00:14:20,589 --> 00:14:22,720
update for one replication controller

220
00:14:22,720 --> 00:14:26,290
and during that one is running start

221
00:14:26,290 --> 00:14:28,450
another one combinations will say sorry

222
00:14:28,450 --> 00:14:31,209
there is already a rolling update

223
00:14:31,209 --> 00:14:34,240
running if you want to do that on a CI

224
00:14:34,240 --> 00:14:37,000
server with multiple projects you can

225
00:14:37,000 --> 00:14:40,060
imagine that does not work so I don't

226
00:14:40,060 --> 00:14:48,459
know why does I don't know okay you want

227
00:14:48,459 --> 00:14:50,890
to see it in action sure and we want to

228
00:14:50,890 --> 00:14:54,250
see some code obviously sure so Tim time

229
00:14:54,250 --> 00:14:59,680
um as an example this is a very small

230
00:14:59,680 --> 00:15:02,170
documentary documentation repository I

231
00:15:02,170 --> 00:15:05,430
created about one and a half weeks ago

232
00:15:05,430 --> 00:15:09,820
this gets compiled to Jekyll and we'll

233
00:15:09,820 --> 00:15:13,690
get to this later and we just have

234
00:15:13,690 --> 00:15:16,690
marked on files here and a bunch of

235
00:15:16,690 --> 00:15:20,850
configurations so how does that work on

236
00:15:20,850 --> 00:15:27,220
circle well let's give it and let's

237
00:15:27,220 --> 00:15:39,880
change

238
00:15:39,890 --> 00:15:46,110
uh-huh gets even bigger okay and this is

239
00:15:46,110 --> 00:15:48,390
the circle yamel which tells circle what

240
00:15:48,390 --> 00:15:51,480
what it has to do during a build run so

241
00:15:51,480 --> 00:15:54,720
first okay we do some Tucker info that

242
00:15:54,720 --> 00:15:59,820
doesn't care but then we we clone no

243
00:15:59,820 --> 00:16:02,310
that doesn't fit on the monitor we clone

244
00:16:02,310 --> 00:16:05,630
our internal deployment repository under

245
00:16:05,630 --> 00:16:11,160
deployment in the home directory then we

246
00:16:11,160 --> 00:16:14,370
do a simple NPM install because there

247
00:16:14,370 --> 00:16:17,850
are some and PM scripts and we use some

248
00:16:17,850 --> 00:16:21,590
NPM modules which will dig into later

249
00:16:21,590 --> 00:16:26,010
then we have to execute a few scripts

250
00:16:26,010 --> 00:16:28,620
and as you see here we just execute

251
00:16:28,620 --> 00:16:30,480
scripts in the circle llaman so there is

252
00:16:30,480 --> 00:16:32,400
no no command which gets executed

253
00:16:32,400 --> 00:16:34,470
because every command we execute a

254
00:16:34,470 --> 00:16:37,760
certain are contained by one of these

255
00:16:37,760 --> 00:16:41,660
script files so in this case we use

256
00:16:41,660 --> 00:16:44,210
within the scripts file we have

257
00:16:44,210 --> 00:16:46,560
documentation directory which contains

258
00:16:46,560 --> 00:16:50,700
every file or build and keep write

259
00:16:50,700 --> 00:16:54,420
scripts depending on documentation

260
00:16:54,420 --> 00:16:56,990
repositories there is an installed eps

261
00:16:56,990 --> 00:17:03,510
file there is also a google cloud or

262
00:17:03,510 --> 00:17:06,449
file which just as google cloud hey i am

263
00:17:06,449 --> 00:17:09,329
this user please give me access to push

264
00:17:09,329 --> 00:17:11,939
the docker image and access the coup

265
00:17:11,939 --> 00:17:17,310
benitez cluster and then it's just just

266
00:17:17,310 --> 00:17:24,870
a built just a bit of car plus we have

267
00:17:24,870 --> 00:17:27,540
here this deployment configuration on

268
00:17:27,540 --> 00:17:30,720
master and develop we want to build the

269
00:17:30,720 --> 00:17:32,430
docker container you want to push the

270
00:17:32,430 --> 00:17:34,730
docker container into our registry and

271
00:17:34,730 --> 00:17:37,560
we want to trigger the release and crew

272
00:17:37,560 --> 00:17:40,320
benitez as you as I told you before

273
00:17:40,320 --> 00:17:42,899
this I want to trigger the deployment

274
00:17:42,899 --> 00:17:46,139
Combinator's isn't that easy currently

275
00:17:46,139 --> 00:17:49,289
this is to is doing nothing and because

276
00:17:49,289 --> 00:17:53,759
it was breaking the bills but we plan to

277
00:17:53,759 --> 00:17:57,950
push and message into a cue from this

278
00:17:57,950 --> 00:18:00,840
circle build and then have a cue

279
00:18:00,840 --> 00:18:04,230
consumer working this disc you and doing

280
00:18:04,230 --> 00:18:07,220
this rolling update to have them

281
00:18:07,220 --> 00:18:16,080
executed in a in a sequence okay now

282
00:18:16,080 --> 00:18:18,059
this this talks i'll show you pretty

283
00:18:18,059 --> 00:18:22,529
quick it's just the sequence of of bash

284
00:18:22,529 --> 00:18:28,889
scripts we just do we just do and Jeckle

285
00:18:28,889 --> 00:18:30,990
build of this of this documentation

286
00:18:30,990 --> 00:18:33,929
stuff and to a jackal headpiece compare

287
00:18:33,929 --> 00:18:36,929
this this background files and build it

288
00:18:36,929 --> 00:18:42,539
and not much then we just do a tucker

289
00:18:42,539 --> 00:18:45,240
built from this image and push the image

290
00:18:45,240 --> 00:18:51,009
into the registry and that's all for it

291
00:18:51,019 --> 00:18:57,210
on circle this looks as follows that is

292
00:18:57,210 --> 00:19:04,559
pretty big I guess week yeah better okay

293
00:19:04,559 --> 00:19:08,179
so on circle it looks like follows um

294
00:19:08,179 --> 00:19:11,250
just installed the whole bunch and

295
00:19:11,250 --> 00:19:13,799
installs the whole okay one cannot read

296
00:19:13,799 --> 00:19:15,960
it dependencies and install the

297
00:19:15,960 --> 00:19:19,139
dependencies and authorize ice builds

298
00:19:19,139 --> 00:19:22,559
the bill to the docks yes they are not

299
00:19:22,559 --> 00:19:26,340
tested we execute exit here then we

300
00:19:26,340 --> 00:19:30,149
built a container and this one can see

301
00:19:30,149 --> 00:19:32,879
from here and at this whole stuff and

302
00:19:32,879 --> 00:19:37,100
install HTTP server as as a serving

303
00:19:37,100 --> 00:19:42,000
package and then we just push it into

304
00:19:42,000 --> 00:19:49,049
our google container registry so but

305
00:19:49,049 --> 00:19:50,909
that's it for this documentation

306
00:19:50,909 --> 00:19:54,160
repository you will say no okay

307
00:19:54,160 --> 00:19:55,540
it's just the commutation we want to see

308
00:19:55,540 --> 00:20:00,520
some I don't know project the problems

309
00:20:00,520 --> 00:20:02,910
that end of the lot to show these and

310
00:20:02,910 --> 00:20:09,930
what I can show you how it works out but

311
00:20:09,930 --> 00:20:16,060
also not a lot sorry okay for the

312
00:20:16,060 --> 00:20:19,270
projects what we decided to use as I

313
00:20:19,270 --> 00:20:21,730
mentioned before we want to get these

314
00:20:21,730 --> 00:20:25,090
change locks from what we did in order

315
00:20:25,090 --> 00:20:28,540
to get that working we decided to use

316
00:20:28,540 --> 00:20:32,500
conventional change lock which itself

317
00:20:32,500 --> 00:20:35,490
requires some commit message standards

318
00:20:35,490 --> 00:20:39,520
how many of you are are aware of this

319
00:20:39,520 --> 00:20:44,200
angular commit message standard not so

320
00:20:44,200 --> 00:20:48,040
many you didn't expect that one angular

321
00:20:48,040 --> 00:20:51,540
has a commit message standard guideline

322
00:20:51,540 --> 00:21:02,100
in which does that open that's working

323
00:21:02,100 --> 00:21:05,170
the commit message standard is pretty

324
00:21:05,170 --> 00:21:09,790
much only okay you have a type of commit

325
00:21:09,790 --> 00:21:12,790
you give them its scope and a subject

326
00:21:12,790 --> 00:21:15,520
plus you can add some informations here

327
00:21:15,520 --> 00:21:21,670
and these get and gets analized you have

328
00:21:21,670 --> 00:21:25,050
a few types like feature or bug fix

329
00:21:25,050 --> 00:21:27,610
documentation style changes refactorings

330
00:21:27,610 --> 00:21:34,900
a bunch of things yep so we decided to

331
00:21:34,900 --> 00:21:37,510
use this commit message Jenner as we all

332
00:21:37,510 --> 00:21:41,230
were aware of it plus there are a few

333
00:21:41,230 --> 00:21:44,710
very nice packages they are all

334
00:21:44,710 --> 00:21:46,600
belonging to the conventional change

335
00:21:46,600 --> 00:21:50,500
locative organization yep there are a

336
00:21:50,500 --> 00:21:53,510
few packages which you can use like

337
00:21:53,510 --> 00:21:57,560
these there is one package which does

338
00:21:57,560 --> 00:22:00,770
the whole infrastructure setup called

339
00:22:00,770 --> 00:22:04,010
conventional change lock and then there

340
00:22:04,010 --> 00:22:06,700
are a few very important packages for us

341
00:22:06,700 --> 00:22:09,470
there is this conventional recommended

342
00:22:09,470 --> 00:22:14,170
bump this is the package analyzing the

343
00:22:14,170 --> 00:22:18,920
git commit history and telling you a you

344
00:22:18,920 --> 00:22:21,230
need to you need to do a major bump you

345
00:22:21,230 --> 00:22:25,220
can use then zemer to say ok my current

346
00:22:25,220 --> 00:22:27,500
releases this one and I get a major bump

347
00:22:27,500 --> 00:22:29,810
and temporal and tells you ok you have

348
00:22:29,810 --> 00:22:34,270
to do in one dot one dot 0 for example

349
00:22:34,270 --> 00:22:39,410
plus having that set you have this

350
00:22:39,410 --> 00:22:43,160
conventional change lock COI which

351
00:22:43,160 --> 00:22:45,320
generates from the dip from the last

352
00:22:45,320 --> 00:22:48,500
from the previous get tech to the

353
00:22:48,500 --> 00:22:52,700
current get tech and generates a very

354
00:22:52,700 --> 00:22:55,460
nice change lock from that we also use

355
00:22:55,460 --> 00:22:58,820
comet ISM that isn't plug-in or in non

356
00:22:58,820 --> 00:23:02,240
module which you lose locally to have

357
00:23:02,240 --> 00:23:05,240
your git commit messages standardized so

358
00:23:05,240 --> 00:23:07,010
it gives you a form which type one I do

359
00:23:07,010 --> 00:23:10,460
you wanna to commit orange which scope

360
00:23:10,460 --> 00:23:13,310
to UF and stuff like that and then

361
00:23:13,310 --> 00:23:14,810
generates the commit message for you

362
00:23:14,810 --> 00:23:20,810
pretty nice ok unfortunately this whole

363
00:23:20,810 --> 00:23:24,740
setup isn't done yet for production

364
00:23:24,740 --> 00:23:30,200
because I'm I'm there only two months

365
00:23:30,200 --> 00:23:31,640
and it wasn't enough time to get

366
00:23:31,640 --> 00:23:36,500
everybody set up unfortunately but we

367
00:23:36,500 --> 00:23:38,950
have all this this process for

368
00:23:38,950 --> 00:23:42,020
committing and i'm building the npm

369
00:23:42,020 --> 00:23:46,460
release and going through the gits flow

370
00:23:46,460 --> 00:23:49,760
workflow we have our everything belongs

371
00:23:49,760 --> 00:23:53,720
let's working for the documentation

372
00:23:53,720 --> 00:23:56,960
repos and for the libraries so when a

373
00:23:56,960 --> 00:24:00,440
library is is merged when the puerto

374
00:24:00,440 --> 00:24:02,990
rico's on the library is merged and then

375
00:24:02,990 --> 00:24:06,860
we we go through the sole workflow and

376
00:24:06,860 --> 00:24:07,309
open

377
00:24:07,309 --> 00:24:09,950
get flow release and commit the next

378
00:24:09,950 --> 00:24:13,330
bump and commit to change lock and

379
00:24:13,330 --> 00:24:16,039
finish the release push it back to

380
00:24:16,039 --> 00:24:19,249
github and then the NPM release is done

381
00:24:19,249 --> 00:24:23,809
plus a change as notices pushed to to

382
00:24:23,809 --> 00:24:28,429
snag and but you can do a lot of things

383
00:24:28,429 --> 00:24:33,499
more you can do what I tell you earlier

384
00:24:33,499 --> 00:24:38,509
I'm able to queue to get this whole crew

385
00:24:38,509 --> 00:24:41,419
benitez rolling update on either using

386
00:24:41,419 --> 00:24:45,619
cube CDs CTL which is the CLI are using

387
00:24:45,619 --> 00:24:49,379
the communities API which does the same

388
00:24:49,389 --> 00:24:54,440
plus we are planning on using on doing a

389
00:24:54,440 --> 00:25:00,740
netting monitoring one using google

390
00:25:00,740 --> 00:25:03,799
container engine there are a few options

391
00:25:03,799 --> 00:25:07,190
you can choose one is google cloud

392
00:25:07,190 --> 00:25:09,679
monitoring which has some pretty pretty

393
00:25:09,679 --> 00:25:14,320
nice statistics but unfortunately Google

394
00:25:14,320 --> 00:25:16,730
monitoring google cloud monitoring

395
00:25:16,730 --> 00:25:19,249
collects all the data data but you

396
00:25:19,249 --> 00:25:21,289
cannot create statistics from all of

397
00:25:21,289 --> 00:25:24,409
those there are only a bunch of lock

398
00:25:24,409 --> 00:25:28,809
types which you can aggregate and do an

399
00:25:28,809 --> 00:25:31,159
address that is this going to create a

400
00:25:31,159 --> 00:25:33,619
statistic from that so we just decided

401
00:25:33,619 --> 00:25:37,309
okay there is a nice dashboard framework

402
00:25:37,309 --> 00:25:40,519
of their Jets just use it so we're going

403
00:25:40,519 --> 00:25:42,649
to use we gonna build those webs for our

404
00:25:42,649 --> 00:25:44,629
circle status and all sort them and

405
00:25:44,629 --> 00:25:47,419
gonna build some zips for KU bonitos

406
00:25:47,419 --> 00:25:49,279
replication status because Q Benitez

407
00:25:49,279 --> 00:25:52,190
itself and provides a very clean API to

408
00:25:52,190 --> 00:25:56,179
get information about every everything

409
00:25:56,179 --> 00:25:58,309
you have running in your cluster so you

410
00:25:58,309 --> 00:26:00,080
get Larry variables output and you can

411
00:26:00,080 --> 00:26:03,799
use this to to create some informational

412
00:26:03,799 --> 00:26:09,679
dashboards for it yeah we want to build

413
00:26:09,679 --> 00:26:13,279
status overview for our projects like

414
00:26:13,279 --> 00:26:15,379
you know from Travis are circular gets

415
00:26:15,379 --> 00:26:16,879
up where you can see okay this project

416
00:26:16,879 --> 00:26:18,970
is this version and

417
00:26:18,970 --> 00:26:22,210
the last build on circle was green and

418
00:26:22,210 --> 00:26:24,690
it's the last version there and

419
00:26:24,690 --> 00:26:27,100
production is this and on staging is

420
00:26:27,100 --> 00:26:30,280
that version and communities is green

421
00:26:30,280 --> 00:26:33,130
for it there are four pots running with

422
00:26:33,130 --> 00:26:36,669
this application where you can also

423
00:26:36,669 --> 00:26:39,220
create projects and trigger deployments

424
00:26:39,220 --> 00:26:43,990
by hand if one failed and that's pretty

425
00:26:43,990 --> 00:26:48,400
much all from now I guess I missed a few

426
00:26:48,400 --> 00:26:51,070
steps or I left a few steps out because

427
00:26:51,070 --> 00:26:54,880
either I'm was enabled to fill them or I

428
00:26:54,880 --> 00:26:58,090
wasn't allowed to show them you can do

429
00:26:58,090 --> 00:27:00,130
pretty much with the soul npm and

430
00:27:00,130 --> 00:27:02,740
conventional changelog stuff on honest

431
00:27:02,740 --> 00:27:06,610
on a CI server and if you invest in a

432
00:27:06,610 --> 00:27:09,429
few mount of time you can automate the

433
00:27:09,429 --> 00:27:13,480
whole process so that one of your

434
00:27:13,480 --> 00:27:16,390
developers doesn't need to do anything

435
00:27:16,390 --> 00:27:20,880
by hand and this is this is pretty a

436
00:27:20,880 --> 00:27:25,330
pretty strong feature because automatics

437
00:27:25,330 --> 00:27:30,700
things are tested often and there are

438
00:27:30,700 --> 00:27:34,780
less best false false afflicted so for

439
00:27:34,780 --> 00:27:37,960
us it worked out pretty clear and it's

440
00:27:37,960 --> 00:27:42,309
running pretty pretty good since now um

441
00:27:42,309 --> 00:27:46,150
so I hope we can open source a few of

442
00:27:46,150 --> 00:27:49,270
these scripts and a few of these

443
00:27:49,270 --> 00:27:51,600
projects we are building like this

444
00:27:51,600 --> 00:27:57,220
rolling update q and and we hopefully

445
00:27:57,220 --> 00:27:59,650
will write a few blog posts with this

446
00:27:59,650 --> 00:28:02,530
learnings with hey how to install good

447
00:28:02,530 --> 00:28:05,260
flow AVH or how to do this and how do

448
00:28:05,260 --> 00:28:11,910
that and yeah then thanks everybody

