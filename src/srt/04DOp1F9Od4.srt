1
00:00:19,300 --> 00:00:20,300
> All right.

2
00:00:20,300 --> 00:00:21,300
Volume is good.

3
00:00:21,300 --> 00:00:25,120
Hi everybody, we're going to start things
off with a little video of a web site that

4
00:00:25,120 --> 00:00:29,980
has been called "very slick" by multiple media
out lites.

5
00:00:29,980 --> 00:00:35,720
Virgin America, it's very fancy, cut down
on the number of screens that it takes you

6
00:00:35,720 --> 00:00:37,480
to buy a plain ticket.

7
00:00:37,480 --> 00:00:41,720
We're going to demo it in JAWS which is a
screen reader.

8
00:00:41,720 --> 00:00:53,900
(Tab ... book link tab tab, tab, tab, tab,
tab, tab, I'm just tabbing, sign in link,

9
00:00:53,900 --> 00:00:59,460
‑‑ sign up, links, tab, San Francisco,
liquidity, oh, I see that, Boston ‑‑ what

10
00:00:59,460 --> 00:01:07,970
does that do San Francisco link ‑‑ okay,i
guess I'm departing from somewhere, I don't

11
00:01:07,970 --> 00:01:09,710
know what I'm trying to book.

12
00:01:09,710 --> 00:01:16,060
Tab, tab, Los Angeles Las ‑‑ paren, paren,
link, okay, I guess I'll just leave from Los

13
00:01:16,060 --> 00:01:20,700
Angeles Las, but I don't know how the use
this web site, if I can't see it.

14
00:01:20,700 --> 00:01:27,740
Now it kicked me all the way back to the top,
even though ‑‑ even though I should be

15
00:01:27,740 --> 00:01:33,350
down the screen, oh, ‑‑ paren link ‑‑ there
was an alert there.

16
00:01:33,350 --> 00:01:37,220
At the top of the screen, when something happened
I made a selection there was a big banner

17
00:01:37,220 --> 00:01:43,760
at the top that said hey, you made a selection
if I moment a visual user I have no idea that

18
00:01:43,760 --> 00:01:45,690
that occurred.

19
00:01:45,690 --> 00:01:49,610
So now I've been scrolled further down the
page, this is part of a user experience that's

20
00:01:49,610 --> 00:01:56,070
very visual, but I have no idea where I am
in this flow.

21
00:01:56,070 --> 00:02:00,990
(I don't see Fort Lauderdale, that's somewhere
else on the screen.

22
00:02:00,990 --> 00:02:09,959
(All cities link, tab ‑‑ that's not what)
I that's not what I'm trying to find, that's

23
00:02:09,959 --> 00:02:11,219
frustrating.

24
00:02:11,219 --> 00:02:16,140
‑‑ okay, I must be related the numbers
down below.

25
00:02:16,140 --> 00:02:26,420
Tab, tab, tab, tab, add link, tab, tab, zero
‑‑ tab, add link, tab, tab, subtract link,

26
00:02:26,420 --> 00:02:27,420
tab, tab,

27
00:02:27,420 --> 00:02:30,360
>> still don't really know what I'm trying
to do here.

28
00:02:30,360 --> 00:02:33,069
>> Shift tab, enter.

29
00:02:33,069 --> 00:02:36,410
>> So there's another alert, I didn't hear
it.

30
00:02:36,410 --> 00:02:43,500
>> Tab, tab, shift, tab, now I'm on the calendar
selection, ‑‑ continue with two adults,

31
00:02:43,500 --> 00:02:49,730
‑‑ show my dates link, I'm skipping before
and after the calendar, and I can't figure

32
00:02:49,730 --> 00:02:56,720
out how I'm going to book these dates, so
not only have I picked a destination and a

33
00:02:56,720 --> 00:03:00,870
departure city that I didn't really want,
I just couldn't use this thing, that's really

34
00:03:00,870 --> 00:03:06,740
unfortunate, really slick web site, not if
you're using a keyboard or a screen reader,

35
00:03:06,740 --> 00:03:08,690
that's a good seg way.

36
00:03:08,690 --> 00:03:10,350
What could improve that?

37
00:03:10,350 --> 00:03:13,569
If it was accessible anyonee anybody could
use it.

38
00:03:13,569 --> 00:03:18,240
A web site shouldn't drum to say oh, well
you can't see, well you're not going to fly

39
00:03:18,240 --> 00:03:21,740
on virgin America.com.

40
00:03:21,740 --> 00:03:25,350
We should talk about accessibility of accessibility,
out in the real world people are forgetting

41
00:03:25,350 --> 00:03:26,920
about it.

42
00:03:26,920 --> 00:03:32,260
Accessibility to me meanness my friends and
family can use any web site that I have created

43
00:03:32,260 --> 00:03:37,819
or that I send out in a tweet or Facebook,
it also means that if I lost my eyesight or

44
00:03:37,819 --> 00:03:42,990
hearing I would be able to continue to use
the apps and web sites that I used before.

45
00:03:42,990 --> 00:03:43,990
Another way to think about it.

46
00:03:43,990 --> 00:03:47,850
The actual definition here, accessibility
means that everyone can perceive, understand,

47
00:03:47,850 --> 00:03:51,690
navigate and interact with the web and they
can contribute to the web.

48
00:03:51,690 --> 00:03:56,620
So if you're building Dev tools or some tool
there are blind developers there, are people

49
00:03:56,620 --> 00:04:00,160
of all different abilities, that think need
our help.

50
00:04:00,160 --> 00:04:03,490
If you're the type of person that responds
more to numbers, here's some numbers for you

51
00:04:03,490 --> 00:04:05,540
from from European disability forum.

52
00:04:05,540 --> 00:04:10,250
80 million Europeans have disabilities, that's
fifteen percent of the population, according

53
00:04:10,250 --> 00:04:13,890
to their figures, that's a lot of people.

54
00:04:13,890 --> 00:04:18,539
We could think accessibility is about people,
it's about your neighbors, family, it could

55
00:04:18,539 --> 00:04:23,970
be use in the future, we should be taking
care to make sure that user experience that

56
00:04:23,970 --> 00:04:28,020
we create and the interfaces that we code
are accessible to everybody.

57
00:04:28,020 --> 00:04:32,990
You might be thankful later that you actually
took some time.

58
00:04:32,990 --> 00:04:35,979
Today I'm going to talk about JavaScript for
everyone.

59
00:04:35,979 --> 00:04:42,590
And specificically, accessibility of accessibility
of JavaScript and DC framework, I'm a developer

60
00:04:42,590 --> 00:04:44,189
at substantial in Seattle.

61
00:04:44,189 --> 00:04:51,680
‑‑ design component, I'm going to have
a lot of Angular in my code today, it's not

62
00:04:51,680 --> 00:04:56,020
my favorite or anything like that I just happen
to be most familiar with it.

63
00:04:56,020 --> 00:05:01,889
I co‑chair for girl chair in Seattle.

64
00:05:01,889 --> 00:05:06,629
It's way to give back the my computer and
support my fellow women in tech.

65
00:05:06,629 --> 00:05:12,999
Oh, and my goal today, I should remember that,
is that I want to arm you with the ideas and

66
00:05:12,999 --> 00:05:18,439
the concepts that you need to make your web
sites accessible and your JavaScripts applications,

67
00:05:18,439 --> 00:05:24,210
this is very front end focused, obviously
very tied to HTML and CSS, we oar focusing

68
00:05:24,210 --> 00:05:29,610
on the JavaScript delivery part of, that you're
creating HTML with JavaScript, we should know

69
00:05:29,610 --> 00:05:33,009
what it takes to make that accessible.

70
00:05:33,009 --> 00:05:42,419
The con noncal example for MVC framework is
. MVC the 2, the baseline of these frameworks

71
00:05:42,419 --> 00:05:47,080
differs whether they're accessible how much
support they can give you, some of the ones

72
00:05:47,080 --> 00:05:53,990
I've worked with bange bang bone, spine, ember,
I haven't used react, I'm curious about that,

73
00:05:53,990 --> 00:06:01,289
if you have ideas about react accessibility
come find me, then famous, that have admitted

74
00:06:01,289 --> 00:06:05,969
that they're not supporting accessibility
yet, it's a hard problem for them, they haven't

75
00:06:05,969 --> 00:06:08,320
focused on from the start.

76
00:06:08,320 --> 00:06:13,370
I would challenge you to consider whether
you need to use framework for a production

77
00:06:13,370 --> 00:06:16,379
site that has admitted that it's not accessible.

78
00:06:16,379 --> 00:06:20,400
It's irresponsible, so chose wisely.

79
00:06:20,400 --> 00:06:27,199
We're going focus on the common aspects of
MVP frameworks that it doesn't really matter

80
00:06:27,199 --> 00:06:31,979
which one you chose, the common things in
these framework s is that they're client rendered

81
00:06:31,979 --> 00:06:39,080
applications you're using JavaScript to inject
HTML, make it interactive, you typically separate

82
00:06:39,080 --> 00:06:44,159
your code into different concerns, models,
views, controllers, routers, whatever the

83
00:06:44,159 --> 00:06:49,110
pattern is that you're using, it doesn't really
matter, it's the quality of your application,

84
00:06:49,110 --> 00:06:53,009
it's client reverend, it's asin concurrent
resolution nows, and has happy responsive

85
00:06:53,009 --> 00:06:55,650
interface, how do we make that accessible.

86
00:06:55,650 --> 00:07:02,430
Are 
you apps accessible?

87
00:07:02,430 --> 00:07:07,279
It could depend on the framework, if you're
using famous, probably not, if you're using

88
00:07:07,279 --> 00:07:13,750
ember or Angular that will give you little
help.

89
00:07:13,750 --> 00:07:17,020
If you're trying to chose framework you should
consider the things that we're going to talk

90
00:07:17,020 --> 00:07:18,160
about today.

91
00:07:18,160 --> 00:07:23,749
I could depend on screen reader browser combination
that your end user is using to access your

92
00:07:23,749 --> 00:07:24,889
site.

93
00:07:24,889 --> 00:07:30,159
And then finally your code is the biggest
variable here, I have asterisks next to the

94
00:07:30,159 --> 00:07:34,389
framework and your code being the things you
could potentially control to varying degree.

95
00:07:34,389 --> 00:07:39,319
Your code, that's the thing you is the most
control over.

96
00:07:39,319 --> 00:07:43,619
But you can also contribute back to the frameworks
on GitHub, that's what I'm doing with Angular,

97
00:07:43,619 --> 00:07:47,930
try make t more accessible, get the framework
to help you more and do the heavy lifting.

98
00:07:47,930 --> 00:07:54,530
If there's way to contribute back to the framework,
do it, it's awesome.

99
00:07:54,530 --> 00:07:59,020
So the goal to reason that, you're probably
all sitting here today you want to know what

100
00:07:59,020 --> 00:08:03,490
is it in single page applications that's challenging
with accessibility.

101
00:08:03,490 --> 00:08:11,589
I have listed managed ARIA attributes, I have
it listed first because of the big push for

102
00:08:11,589 --> 00:08:17,090
web components, custom controls in Angular
they there are directives, ember has custom

103
00:08:17,090 --> 00:08:23,919
components, you're quiting custom HTML that
have no definition, no meaning, no states

104
00:08:23,919 --> 00:08:25,599
no properties.

105
00:08:25,599 --> 00:08:34,979
You want to uniKate to users of assistive
technology, screen reader, magny if Iers,

106
00:08:34,979 --> 00:08:41,430
communicate in a non‑visual way the purpose
of your application and the purpose of it.

107
00:08:41,430 --> 00:08:47,060
Enabling the keyboard, this is not rocket
science, not hard, yet we always forget about

108
00:08:47,060 --> 00:08:52,790
I. Virgin America was a big offender of that,
when I tapped through page, no visual focus

109
00:08:52,790 --> 00:08:56,870
style, no way for me to know where I was on
the page.

110
00:08:56,870 --> 00:09:01,079
And then, we oar also going to talk about
handling focus, this is tied along with enabling

111
00:09:01,079 --> 00:09:09,100
the keyboard, in a JavaScript MVP application
depending on your template solution you might

112
00:09:09,100 --> 00:09:14,630
be updating your application by ripping out
parts of the DOM and putting them back.

113
00:09:14,630 --> 00:09:19,460
If you're using a keyboard that can be a problem,
as we saw with virgin America when it changed

114
00:09:19,460 --> 00:09:25,259
the careen we didn't get a page reload it
scrolled me further down the page but my focus

115
00:09:25,259 --> 00:09:30,930
was jumped all the way to the top, for a keyboard
user, that's not fun user experience, it's

116
00:09:30,930 --> 00:09:37,220
not what you would call "slick" if we're ripping
out the DOM and putting it back, we need to

117
00:09:37,220 --> 00:09:44,269
guide the user through the experience by sending
their focus around, that's really useful thing

118
00:09:44,269 --> 00:09:51,560
in JavaScript MVP applications, you should
remember that before creating these custom

119
00:09:51,560 --> 00:09:56,470
controls or adding ARIA, you should try to
write meaningful HTML and native HTML, I'm

120
00:09:56,470 --> 00:10:04,399
not going to ouch to on this much today in
MVP App we saw when there was a big alert

121
00:10:04,399 --> 00:10:09,329
and it didn't tell me if I was a non‑visual
user you need to alert the user this thanks

122
00:10:09,329 --> 00:10:14,690
are happening on the screen, maybe their focus
is on one part of the application and something

123
00:10:14,690 --> 00:10:21,050
is happening elsewhere, it's filtering or
maybe they had an error in their form submission.

124
00:10:21,050 --> 00:10:24,530
We need to actually tell the user that something
else is happening.

125
00:10:24,530 --> 00:10:31,970
So,let's talk about ARIA, stands for accessible
rich internet applications, the idea is that

126
00:10:31,970 --> 00:10:37,540
it's a set of attributes you use to expand
HTML's semantic vocabulary, you can fill in

127
00:10:37,540 --> 00:10:44,339
the gaps where HTML ‑‑ you're creating
custom elements you have to define what those

128
00:10:44,339 --> 00:10:51,690
are, if you think of a form input that has
properties, it could be disabled, it would

129
00:10:51,690 --> 00:10:52,690
required.

130
00:10:52,690 --> 00:10:55,509
In a screen reader, it's communicated that
is a form element.

131
00:10:55,509 --> 00:10:59,830
If you're creating a custom element, you don't
get any of that for free, you can use area

132
00:10:59,830 --> 00:11:03,300
to add some of that meaning.

133
00:11:03,300 --> 00:11:08,050
The first core component of ARIA is the role,
you think of it as what does this thing do,

134
00:11:08,050 --> 00:11:10,550
my example is I have aiv.

135
00:11:10,550 --> 00:11:17,950
It has a style ‑‑ a Div ‑‑ you might
think that why isn't it just an image tag.

136
00:11:17,950 --> 00:11:24,050
CSS background images have a few more options,
and maybe you want to make scaling background

137
00:11:24,050 --> 00:11:29,839
images, in the real world this happens to
communicate the purpose of this Div, which

138
00:11:29,839 --> 00:11:35,100
is presentation related, I can make it a more
one to one experience by communicating that

139
00:11:35,100 --> 00:11:40,509
this is an image, if I add a role of image
to this D ivy all it has on it is a style

140
00:11:40,509 --> 00:11:43,160
of background image.

141
00:11:43,160 --> 00:11:47,910
This communicates a purpose, they can't see
the image, but at least they know it's an

142
00:11:47,910 --> 00:11:52,230
image not just some empty Div sitting there.

143
00:11:52,230 --> 00:11:56,980
The next piece in ARIA core components is
the state, the current condition of this particular

144
00:11:56,980 --> 00:12:01,000
thing, I mention in a form input might be
required or disabled.

145
00:12:01,000 --> 00:12:06,889
A state tends to change depending on the state
of the application, here I have a material

146
00:12:06,889 --> 00:12:13,820
input, which is like a custom input tag, and
since it's a custom element, I can't make

147
00:12:13,820 --> 00:12:16,709
use of the actual disabled attribute.

148
00:12:16,709 --> 00:12:22,620
So, you might wonder why would I use ARIA,
if lease already a disabled attribute, it

149
00:12:22,620 --> 00:12:27,930
only works on certain elements, if you're
creating a custom one you need to expand the

150
00:12:27,930 --> 00:12:30,939
vocabulary, that item is disabled.

151
00:12:30,939 --> 00:12:36,390
And then you can update it depending on what
the interface is doing.

152
00:12:36,390 --> 00:12:41,230
And then, lastly if ARIA core components there
are core properties, they tendless often than

153
00:12:41,230 --> 00:12:52,019
states, I have a Doner‑Kebab element, not
a taco butt son, it has an ARIA label, it's

154
00:12:52,019 --> 00:12:56,500
a Doner‑Kebab, it might have Angelina Magmum
bringing us lunch.

155
00:12:56,500 --> 00:13:04,959
No today ‑‑ it's a piece of off screen
piece of information that tells the use wharethis

156
00:13:04,959 --> 00:13:09,990
thing is it's really useful.

157
00:13:09,990 --> 00:13:14,240
Every form input needs a label, sometimes
you might not have label as part of your design,

158
00:13:14,240 --> 00:13:20,100
either you could put a label element off screen
or add area label directly on the input and

159
00:13:20,100 --> 00:13:26,579
add confection to a non‑visual user ‑‑ add
context to a non‑visual user.

160
00:13:26,579 --> 00:13:30,850
Firstly the element types like we saw with
the image, there's headings, let's see what

161
00:13:30,850 --> 00:13:39,160
else is there that you might use, there's
links, forms, where's some other ones, lists.

162
00:13:39,160 --> 00:13:43,129
The idea with a role is it communicates what
the type of element is.

163
00:13:43,129 --> 00:13:46,560
It will be announce in the a careen reader.

164
00:13:46,560 --> 00:13:51,870
Secondly, roles can be used as landmarks,
by landmarks for a screen reader they can

165
00:13:51,870 --> 00:13:55,070
jump around a page without having to use the
tab.

166
00:13:55,070 --> 00:14:00,949
They could navigate through beige by navigation
elements or maybe you have a main element

167
00:14:00,949 --> 00:14:07,100
indicating the main body of your document,
so those are useful to users who maybe aren't

168
00:14:07,100 --> 00:14:09,070
using a mouse.

169
00:14:09,070 --> 00:14:14,050
So you also want to start with native HTML
tags, you get a lot for free, attributes,

170
00:14:14,050 --> 00:14:20,640
keyboard vents if it's an interactive control,
if you most use custom elements read the ARIA

171
00:14:20,640 --> 00:14:26,839
documentation, which I have in my slides,
if you're using a certain role, what the expected

172
00:14:26,839 --> 00:14:28,850
keyboard behavior is.

173
00:14:28,850 --> 00:14:33,690
If it's a button, you expect it to be engaged
with the space bar, so those are things that

174
00:14:33,690 --> 00:14:38,959
you need to know when a certain vole announce
in the a screen reader, that user who's expecting

175
00:14:38,959 --> 00:14:43,949
it to behave in a certain way you will have
thought of that and you can bind the JavaScript

176
00:14:43,949 --> 00:14:47,620
vents to make it work the way they expect.

177
00:14:47,620 --> 00:14:51,829
Don't over do dew it there is such a thing
as too much ARIA, you want the simplest extras

178
00:14:51,829 --> 00:14:59,990
possible, to communicate the state and properties
of your application at any given time.

179
00:14:59,990 --> 00:15:03,820
One role that we should talk about is the
application role it might be tempting to put

180
00:15:03,820 --> 00:15:09,009
this on your JavaScript MVC apps, because
they're applications but there's a concept

181
00:15:09,009 --> 00:15:14,540
here in screen readers that you should know
about there are different modes, the detolt

182
00:15:14,540 --> 00:15:21,019
is a virtual cursor this does not pass every
key back to browser directly, it's buffer

183
00:15:21,019 --> 00:15:28,670
beteen user and browser, we talked about landmarks
there's a way screen reader users can navigate

184
00:15:28,670 --> 00:15:35,851
a page using different key commands, the virtual
cursor handles those, if you disable it, you

185
00:15:35,851 --> 00:15:43,350
have the ability to disable it, then you're
going to send every keyboard command directly

186
00:15:43,350 --> 00:15:48,790
to the browser, if they're trying to navigate
by headings, they might not be able to.

187
00:15:48,790 --> 00:15:54,149
You want to limit use of this to interactive
controls that are more advanced, that actually

188
00:15:54,149 --> 00:15:57,779
mimic desktop applications specifically.

189
00:15:57,779 --> 00:16:04,110
Unless you have a really good reason and you
know how how toous this role, just avoid it.

190
00:16:04,110 --> 00:16:12,399
Especially don't put it on the body element,
even though it's tempting, I have an animated

191
00:16:12,399 --> 00:16:17,029
give and just body rolling away if his responsibilities
because that's what you're probably go dog

192
00:16:17,029 --> 00:16:23,930
if you use this role, meanwhile you're probably
going to be making your application unusable

193
00:16:23,930 --> 00:16:27,920
to people with disabilities.

194
00:16:27,920 --> 00:16:31,139
So how do you decide whether to use the application
role?

195
00:16:31,139 --> 00:16:37,040
If I have a Sparkel party application, for
example, and it has a couple of advance things

196
00:16:37,040 --> 00:16:43,279
in it like a kiss COBAL if you start dancing
it will spin the disco ball, it looks like

197
00:16:43,279 --> 00:16:49,480
an application, it has a heading, button,
things that maybe the user would navigate

198
00:16:49,480 --> 00:16:56,389
by heading, we don't want to disable the virtual
cursor, in the disco ball element, maybe I

199
00:16:56,389 --> 00:16:58,560
could, it's probably going to cause more trouble
than it's worth.

200
00:16:58,560 --> 00:17:01,180
I'm just going to leave it off.

201
00:17:01,180 --> 00:17:06,580
One thing I did add in my pseudo code application
is inside of my disco ball element I have

202
00:17:06,580 --> 00:17:12,300
a condition vas that will render some element
of the disco ball, how would the non‑visual

203
00:17:12,300 --> 00:17:15,890
user know this is happening, how would I make
this interesting to someone who can't see

204
00:17:15,890 --> 00:17:24,250
it I've add add paragraph that I can just
append text to, there's a concept called ARIA

205
00:17:24,250 --> 00:17:30,740
live, this would be useful on virgin America.com,
when they had the banners on top, if they

206
00:17:30,740 --> 00:17:38,070
added ARIA live element, off screen, it has
to be rendered, so it can't have display none,

207
00:17:38,070 --> 00:17:47,350
if it's somewhere on the page, if it's polite
or assertive, differing levels of rudeness;

208
00:17:47,350 --> 00:17:52,820
once you append text to the thing, it will
read it allowed on the screen reader, when

209
00:17:52,820 --> 00:17:56,850
the disco ball starts turning we could send
an alert to the ARIA live region, all right,

210
00:17:56,850 --> 00:18:04,100
when it stops you can stop dancing, if the
disco ball is not spinning why you dancing.

211
00:18:04,100 --> 00:18:09,420
So, that's some ARIA stuff, let's talk about
the keyboard.

212
00:18:09,420 --> 00:18:14,890
This is something that we forget quite often,
it's low hanging fruit, stuff that you can

213
00:18:14,890 --> 00:18:17,750
do to really improve the state of the web.

214
00:18:17,750 --> 00:18:24,010
The easiest thing you can do is add a tab
index, tab here I have on a Div it's not an

215
00:18:24,010 --> 00:18:31,560
interactive control by default, swap it out
or some ember custom component something that

216
00:18:31,560 --> 00:18:33,780
is not in the tab order.

217
00:18:33,780 --> 00:18:39,220
By adding a tab index of 0 you add it.

218
00:18:39,220 --> 00:18:43,900
Content editable is something you can add
to HTML and it does a similar thing.

219
00:18:43,900 --> 00:18:47,860
If it has tab X of zero, I can tab on it.

220
00:18:47,860 --> 00:18:53,960
If I add negative one it pulls it out of the
tab oridance oh, I can still use JavaScript

221
00:18:53,960 --> 00:18:56,930
to script focus to it I's useful.

222
00:18:56,930 --> 00:19:02,410
I will say avoid numbers higher than zero
what that means is that you're determining

223
00:19:02,410 --> 00:19:06,770
the actual tab order of everything in your
page, upless you want to manage every single

224
00:19:06,770 --> 00:19:12,330
tab index you can easily lose track and your
footer can come before everything else on

225
00:19:12,330 --> 00:19:19,430
the page, if you use 0 it'll keep the natural
order of the HTML hierarchy.

226
00:19:19,430 --> 00:19:23,240
Make a logical tab oridance e.

227
00:19:23,240 --> 00:19:24,700
An example of what not to do.

228
00:19:24,700 --> 00:19:30,490
I have see this all the time, and it's pretty
easy to fix, but I have a Divev that has a

229
00:19:30,490 --> 00:19:32,380
CSS class on it.

230
00:19:32,380 --> 00:19:38,600
And I'm using large here because it cuts down
on the amount of code I have to show you.

231
00:19:38,600 --> 00:19:42,910
I can bind JavaScript directly on HTML.

232
00:19:42,910 --> 00:19:49,740
It's not a judgment, it's really easy for
me to show it to you, but, you cold imagine

233
00:19:49,740 --> 00:19:53,470
this abstracted into a special JavaScript
file with your framework of choice.

234
00:19:53,470 --> 00:19:58,940
But, the click event that we found here, I
have this little hamburger button, if I click

235
00:19:58,940 --> 00:20:01,280
it, it opens a menu.

236
00:20:01,280 --> 00:20:05,590
But if I try to stab on to it the, I can't
get to it, I just can I want around every

237
00:20:05,590 --> 00:20:08,490
element that has a tab index around everything.

238
00:20:08,490 --> 00:20:13,210
Don't do that, if you have a hamburger menu
it should be in tab order, it should be a

239
00:20:13,210 --> 00:20:16,490
button, not a Div.

240
00:20:16,490 --> 00:20:23,120
How do we fix this if I have a button and
add a tab index to it, okay, it has a click,

241
00:20:23,120 --> 00:20:29,640
you think this would work, but if I tab on
to it, like that's Whoo‑hoo, if I hit the

242
00:20:29,640 --> 00:20:34,330
enter key, I can't engage this thing, which
is a bummer, what's up with that, that means

243
00:20:34,330 --> 00:20:41,710
we can't see the spicy C hierarchyiuawha dancing
in the background, not cool.

244
00:20:41,710 --> 00:20:47,150
How do we fix this now ‑‑ by adding tab
index, we can tab on to the dance button,

245
00:20:47,150 --> 00:20:53,200
we had a role button, I want to communicate
this is a button to a non‑visual user, I

246
00:20:53,200 --> 00:20:59,660
have the NN click the same, the extra step
because this is a custom element, I add tab

247
00:20:59,660 --> 00:21:01,840
index to make it you could tab on to it.

248
00:21:01,840 --> 00:21:05,910
It doesn't natively fire the key press vent
that we need.

249
00:21:05,910 --> 00:21:12,900
If I add an NG key press and fire the same
event as a click vent all of a sudden I can

250
00:21:12,900 --> 00:21:20,810
hit the space bar and we can dance.

251
00:21:20,810 --> 00:21:28,000
All right, let's dance more after this, though,
because that's awesome.

252
00:21:28,000 --> 00:21:32,250
So, one little last piece of low hanging fruit
that I would really love to see ‑‑ this

253
00:21:32,250 --> 00:21:35,030
would of helped virgin America a lot.

254
00:21:35,030 --> 00:21:40,550
Any element that has tab index, this is kind
of a pseudo select index here of tab index

255
00:21:40,550 --> 00:21:46,270
of zero, any element that's in the tab order,
if you define a hover style in CSS define

256
00:21:46,270 --> 00:21:48,500
a focus style right along with it.

257
00:21:48,500 --> 00:21:53,200
Knock it out at the same time, super easy,
you, have to remember you can't focus on something

258
00:21:53,200 --> 00:21:54,500
that you can't tab on to.

259
00:21:54,500 --> 00:22:00,220
I know this is JSConf, but this is super easy
win, just do it.

260
00:22:00,220 --> 00:22:03,280
You might be wondering why I'm wearing gold
pants, I don't know if you were wondering

261
00:22:03,280 --> 00:22:09,940
about that, I think they're town wear, I was
inspired by Tom Dale co‑creator of Ember.js

262
00:22:09,940 --> 00:22:13,980
and wearer of PartyPants thankeds Matthewburgman
for the photo.

263
00:22:13,980 --> 00:22:24,270
I figured since I was creating an ember demo
that I would make it related gold pants and

264
00:22:24,270 --> 00:22:27,420
so to make it accessible.

265
00:22:27,420 --> 00:22:33,160
I have could add a caption to these, so, right
now I have existing caption options of Ow!

266
00:22:33,160 --> 00:22:35,790
My eye and shiny.

267
00:22:35,790 --> 00:22:43,090
We could say Tom Dale's fantastic gold shorts,
if I hit enter my little demo adds it to a

268
00:22:43,090 --> 00:22:49,590
list of radio buttons, if I click it, it will
select and because I have bound this attribute

269
00:22:49,590 --> 00:22:56,690
in my amber demo, we can see down here if
the Div tools that it now has an attribute

270
00:22:56,690 --> 00:23:03,000
of Tom Dale's fantastic gold shorts, dynamically
updated without having to refresh the page,

271
00:23:03,000 --> 00:23:06,460
add context to this little demo.

272
00:23:06,460 --> 00:23:12,360
It illustrates that ember can be used to dynamically
attributes, so let's look at some code of

273
00:23:12,360 --> 00:23:14,250
how that worked.

274
00:23:14,250 --> 00:23:21,111
6 custom components in ember are pretty cool,
kind of similar to Angular where but can create

275
00:23:21,111 --> 00:23:22,280
custom element.

276
00:23:22,280 --> 00:23:30,440
The default component is a Div, if I wanted
to spit out a custom element say, PartyPants,

277
00:23:30,440 --> 00:23:35,500
I could change the tag name here where I set
up my custom component, I can change the tag

278
00:23:35,500 --> 00:23:36,670
name.

279
00:23:36,670 --> 00:23:40,300
I'm spinning out a custom element, I is need
to add some area to it.

280
00:23:40,300 --> 00:23:47,940
If I add an ARIA rule, another appropriate
ember will give you, I'll give it an article,

281
00:23:47,940 --> 00:23:53,510
not the most meaningful element ever, but
I can communicate that it's a little more

282
00:23:53,510 --> 00:23:55,720
interesting than a Div.

283
00:23:55,720 --> 00:24:00,470
And lastly, ember will really help you out
with attribute binding, I'm binding a tab

284
00:24:00,470 --> 00:24:06,340
index here, attribute bindings are things
that you can dynamically compute values and

285
00:24:06,340 --> 00:24:07,340
undate on the fly.

286
00:24:07,340 --> 00:24:11,460
In is the ember way of updating attributes.

287
00:24:11,460 --> 00:24:18,330
So, are there places where your framework
can help you do some heavy lifting in in Angular

288
00:24:18,330 --> 00:24:20,950
there are places where we're trying to make
that better.

289
00:24:20,950 --> 00:24:26,730
If you have ideas for other frameworks, by
all means, it's cool to see the stuff help

290
00:24:26,730 --> 00:24:28,010
us out a little bit.

291
00:24:28,010 --> 00:24:34,500
I have an example here of bootstrap, they
have an accord crane group component, it comes

292
00:24:34,500 --> 00:24:37,970
with two properties, is open and is disabled.

293
00:24:37,970 --> 00:24:42,690
Those don't mean anything in ARIA speak, so,
how could we add those.

294
00:24:42,690 --> 00:24:48,110
If I manually add them in line, I could say,
add ARIA expanded of true or false to indicate

295
00:24:48,110 --> 00:24:50,610
whether the accordian is open or closed.

296
00:24:50,610 --> 00:24:56,570
If I wanted to communicate whether it's disabled
or not, this is kind of verbose all of a sudden,

297
00:24:56,570 --> 00:25:04,140
how can I reduce this redundancy, how can
I make it simpler, if you put in a single

298
00:25:04,140 --> 00:25:10,610
attribute, NG expanded or NG disabled and
the framework injected the air are far you

299
00:25:10,610 --> 00:25:16,190
that framework is helping you out, less points
your application could break, things where

300
00:25:16,190 --> 00:25:19,390
the framework is handling it for you.

301
00:25:19,390 --> 00:25:23,620
You might think though it might be useful
if the fame work would detect whether you'd

302
00:25:23,620 --> 00:25:30,600
already add aria, so those are things that
we look at when we add stuff like that.

303
00:25:30,600 --> 00:25:37,890
I mention I've been contributing to Angular's
design components.

304
00:25:37,890 --> 00:25:43,510
A set of styled components that people can
drop into their applications, they weren't

305
00:25:43,510 --> 00:25:46,971
very accessible when I was brought on to the
project, which is why they brought me on to

306
00:25:46,971 --> 00:25:48,600
the project.

307
00:25:48,600 --> 00:25:50,860
It's been cool adding ARIA.

308
00:25:50,860 --> 00:25:57,850
Good example is the radial buttons, they have
pattern, wrapping element, material radio

309
00:25:57,850 --> 00:26:04,770
group element, looks a lot like our PartyPants
elements, it doesn't have semantics, no tab

310
00:26:04,770 --> 00:26:08,320
index, doesn't communicate wait does.

311
00:26:08,320 --> 00:26:12,190
Inside of the material radial group there
are individual components of a material radio

312
00:26:12,190 --> 00:26:14,240
button.

313
00:26:14,240 --> 00:26:18,480
Those don't have any meaning either, so how
do we add that?

314
00:26:18,480 --> 00:26:23,110
Well the real live version of this, now that
I've spent some time with it.

315
00:26:23,110 --> 00:26:27,300
This is simple if Id to reduce the amount
of code to look at.

316
00:26:27,300 --> 00:26:35,610
On the outing radio group directive toker
‑‑ I'm adding a tab index, so you can

317
00:26:35,610 --> 00:26:40,330
get to this control, and I'm wearing a key
down, if you remember our dance button with

318
00:26:40,330 --> 00:26:44,130
the little dog you couldn't fire that with
the keyboard.

319
00:26:44,130 --> 00:26:51,010
If we wire the key down, check if using left
or right arrow then I can fire the events

320
00:26:51,010 --> 00:26:57,650
to change the radio button, if you read the
spec for ARIA, you'll learn that the expected

321
00:26:57,650 --> 00:27:02,650
pattern for a keyboard user is that you tab
on to the control and use the arrow keys to

322
00:27:02,650 --> 00:27:09,160
toggle individual radio buttons, so, that's
why it's important the read the ARIA spec,

323
00:27:09,160 --> 00:27:14,000
so then if we dive down into the individual
radio buttons inside of this parent element,

324
00:27:14,000 --> 00:27:19,270
we can add a road of radio to each individual
radio element, and then we can add an ARIA

325
00:27:19,270 --> 00:27:24,570
label to say what the thing is, we can update
the ARIA check attribute to check whether

326
00:27:24,570 --> 00:27:27,250
it's engaged or not.

327
00:27:27,250 --> 00:27:31,870
Depending on the type of control, with these
it was pretty obvious that there were existing

328
00:27:31,870 --> 00:27:37,860
ARIA patterns that just mapped directly on
to this material component stuff.

329
00:27:37,860 --> 00:27:43,070
But you might be creating more innovative
custom controls that maybe ARIA hasn't established

330
00:27:43,070 --> 00:27:48,880
a pattern, you have to use your subjective
brain power to determine what might be appropriate

331
00:27:48,880 --> 00:27:53,960
for those elements, for those, it was pretty
obvious that the existing ARIA patterns worked

332
00:27:53,960 --> 00:27:57,720
really well, the aid row group, all of that
stuff.

333
00:27:57,720 --> 00:28:00,780
So, that was about it today.

334
00:28:00,780 --> 00:28:12,720
I have some slides, they're on GitHub, short
UL ovinia.cc/MVC‑a 11y,I wrote a Blog post

335
00:28:12,720 --> 00:28:16,040
on auditing a web site for accessibility.

336
00:28:16,040 --> 00:28:21,970
It lists tools and techniques to determine
what's happening with my web site and mobile

337
00:28:21,970 --> 00:28:23,960
apps, that might be useful.

338
00:28:23,960 --> 00:28:30,790
Also the chrome accessibility Div tools are
useful, they can plague problems with apps,

339
00:28:30,790 --> 00:28:34,360
diagnose them and help figure out to fix them.

340
00:28:34,360 --> 00:28:37,550
The accessibility project might be useful.

341
00:28:37,550 --> 00:28:43,710
So, we are going to end with a dance party,
we're in Berlin, when else are you going to

342
00:28:43,710 --> 00:28:45,830
do a German park party.

343
00:28:45,830 --> 00:28:47,530
(I love to sparkle...

