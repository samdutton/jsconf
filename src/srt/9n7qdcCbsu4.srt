1
00:00:10,630 --> 00:00:21,510

you

2
00:00:21,520 --> 00:00:27,340


3
00:00:27,350 --> 00:00:31,350
hi so I'm going to talk about cross-site

4
00:00:31,350 --> 00:00:32,640
scripting and I'm going to talk about

5
00:00:32,640 --> 00:00:34,950
ways that you can mitigate the risk the

6
00:00:34,950 --> 00:00:36,450
cross-site scripting is actually going

7
00:00:36,450 --> 00:00:38,970
to affect you my name is my quest i work

8
00:00:38,970 --> 00:00:41,160
on chrome at Google ideas himself in

9
00:00:41,160 --> 00:00:43,290
blink I do some stuff in chromium happy

10
00:00:43,290 --> 00:00:45,210
to talk about any of that after this

11
00:00:45,210 --> 00:00:47,730
talk it's really exciting stuff I like

12
00:00:47,730 --> 00:00:49,850
chrome a lot I think you guys should too

13
00:00:49,850 --> 00:00:51,960
you can go to my website you can find me

14
00:00:51,960 --> 00:00:54,090
on google+ on Twitter whatever this page

15
00:00:54,090 --> 00:00:55,920
isn't exercise and seeing how many times

16
00:00:55,920 --> 00:00:58,670
i can write my quest on a single slide i

17
00:00:58,670 --> 00:01:00,780
think i haven't yet hit the limit there

18
00:01:00,780 --> 00:01:02,729
could be an email to the slides are up

19
00:01:02,729 --> 00:01:05,159
online right now and actually you know

20
00:01:05,159 --> 00:01:06,630
what I forgot to make them public but

21
00:01:06,630 --> 00:01:08,820
they will be up online in just a moment

22
00:01:08,820 --> 00:01:11,520
there on speaker deck which is awesome I

23
00:01:11,520 --> 00:01:13,799
suggest that you all use speaker dock if

24
00:01:13,799 --> 00:01:15,990
you ever do slides so it's after lunch

25
00:01:15,990 --> 00:01:17,670
you guys have eaten a lot of food you're

26
00:01:17,670 --> 00:01:19,950
probably very very tired you have room

27
00:01:19,950 --> 00:01:21,990
in your brains for one thing and if you

28
00:01:21,990 --> 00:01:23,369
only have room in your brains for one

29
00:01:23,369 --> 00:01:25,200
thing I would highly suggest that it be

30
00:01:25,200 --> 00:01:27,390
this thing I'd really appreciate it if

31
00:01:27,390 --> 00:01:28,979
you just hit this article it talks about

32
00:01:28,979 --> 00:01:31,680
content security policy what is content

33
00:01:31,680 --> 00:01:33,290
security policy why should you care

34
00:01:33,290 --> 00:01:35,400
don't worry about it right now I'll tell

35
00:01:35,400 --> 00:01:37,320
you but please just bookmark this

36
00:01:37,320 --> 00:01:39,390
article take a look at it it's going to

37
00:01:39,390 --> 00:01:40,650
give you all of the practical

38
00:01:40,650 --> 00:01:43,080
information in all the detail that I'm

39
00:01:43,080 --> 00:01:44,460
going to have to leave out in this talk

40
00:01:44,460 --> 00:01:46,170
because this talks like a half hour long

41
00:01:46,170 --> 00:01:48,870
and I could talk for days no one wants

42
00:01:48,870 --> 00:01:50,640
that take a look at the article I think

43
00:01:50,640 --> 00:01:51,660
it's really important that I think would

44
00:01:51,660 --> 00:01:54,510
be really helpful for you how many of

45
00:01:54,510 --> 00:01:55,920
you have ever seen a page that looks

46
00:01:55,920 --> 00:01:58,710
kind of like this in chrome or any other

47
00:01:58,710 --> 00:02:01,830
browser that's not enough of you your

48
00:02:01,830 --> 00:02:04,430
people are browsing boring boring

49
00:02:04,430 --> 00:02:07,350
websites you need to branch out there is

50
00:02:07,350 --> 00:02:09,090
so much of the web that you can explore

51
00:02:09,090 --> 00:02:10,860
and you can get this page more often

52
00:02:10,860 --> 00:02:12,480
you're not going to see this from you

53
00:02:12,480 --> 00:02:15,209
know CNN com you got to dig around a

54
00:02:15,209 --> 00:02:17,099
little bit this is a malware page or a

55
00:02:17,099 --> 00:02:18,690
malware warning brought to you by the

56
00:02:18,690 --> 00:02:21,300
magic of safe browsing Safe Browsing is

57
00:02:21,300 --> 00:02:23,340
a service that google puts out it's used

58
00:02:23,340 --> 00:02:25,140
by Firefox it's used by chrome and a

59
00:02:25,140 --> 00:02:26,670
variety of other services non browser

60
00:02:26,670 --> 00:02:28,860
services also to determine whether or

61
00:02:28,860 --> 00:02:31,530
not a page is persistently malicious

62
00:02:31,530 --> 00:02:33,840
that is whether the page is always

63
00:02:33,840 --> 00:02:36,240
serving malware or always directing

64
00:02:36,240 --> 00:02:38,220
people to phishing sites we've gotten

65
00:02:38,220 --> 00:02:39,900
really good at detecting these sorts of

66
00:02:39,900 --> 00:02:40,680
persistent

67
00:02:40,680 --> 00:02:42,780
threats it's relatively easy for us to

68
00:02:42,780 --> 00:02:44,879
crawl the entire web and say well this

69
00:02:44,879 --> 00:02:47,310
page no I don't like it too much this

70
00:02:47,310 --> 00:02:49,680
other page it's great what we're not so

71
00:02:49,680 --> 00:02:52,079
good at are detecting the more transient

72
00:02:52,079 --> 00:02:53,939
threats the threats that have effect

73
00:02:53,939 --> 00:02:56,400
only a single request or only a single

74
00:02:56,400 --> 00:02:59,370
logged in user or only all logged in

75
00:02:59,370 --> 00:03:00,930
users for a service it's very difficult

76
00:03:00,930 --> 00:03:04,109
to detect those sorts of things content

77
00:03:04,109 --> 00:03:05,780
injection attacks in particular are

78
00:03:05,780 --> 00:03:08,189
incredibly scary I'll tell you why

79
00:03:08,189 --> 00:03:09,689
they're scary in a moment but they're

80
00:03:09,689 --> 00:03:11,549
very very difficult for us to detect

81
00:03:11,549 --> 00:03:14,099
because generally speaking content

82
00:03:14,099 --> 00:03:16,370
injection attacks come from for instance

83
00:03:16,370 --> 00:03:19,049
bad parsing of get parameters and if

84
00:03:19,049 --> 00:03:20,579
someone sends you an email with a

85
00:03:20,579 --> 00:03:22,500
carefully crafted URL that you click on

86
00:03:22,500 --> 00:03:24,510
and that owns you in some way it's very

87
00:03:24,510 --> 00:03:25,859
difficult for us to detect that it's

88
00:03:25,859 --> 00:03:27,269
very difficult for us to warn you about

89
00:03:27,269 --> 00:03:30,930
that content injection is scary because

90
00:03:30,930 --> 00:03:33,269
of this concept the concept of an origin

91
00:03:33,269 --> 00:03:36,359
an origin is a pairing of a scheme a

92
00:03:36,359 --> 00:03:40,139
host and a port so HTTP example.com 80

93
00:03:40,139 --> 00:03:44,669
and HTTPS google com 443 those are two

94
00:03:44,669 --> 00:03:47,250
distinct origins and the browser is very

95
00:03:47,250 --> 00:03:49,739
good at effectively making sure that

96
00:03:49,739 --> 00:03:52,620
example.com never has direct access to

97
00:03:52,620 --> 00:03:55,769
any data from google com the origin

98
00:03:55,769 --> 00:03:57,299
boundary is a boundary that the browser

99
00:03:57,299 --> 00:04:00,930
can very effectively enforce but that's

100
00:04:00,930 --> 00:04:03,000
the only boundary that the browser can

101
00:04:03,000 --> 00:04:05,879
very effectively enforce the entire web

102
00:04:05,879 --> 00:04:08,579
is basically predicated upon the concept

103
00:04:08,579 --> 00:04:10,979
of the same origin policy or security on

104
00:04:10,979 --> 00:04:12,389
the web is predicated on this concept

105
00:04:12,389 --> 00:04:15,329
and this basically means that one origin

106
00:04:15,329 --> 00:04:17,340
should only have access to the data for

107
00:04:17,340 --> 00:04:18,599
that origin it should only have access

108
00:04:18,599 --> 00:04:20,639
to its own cookies through its own local

109
00:04:20,639 --> 00:04:23,159
storage to its own databases and so on

110
00:04:23,159 --> 00:04:24,900
and this is something again that the

111
00:04:24,900 --> 00:04:26,759
browser can quite effectively enforce

112
00:04:26,759 --> 00:04:30,539
what is the difference between these two

113
00:04:30,539 --> 00:04:35,190
blocks of script that is exactly right

114
00:04:35,190 --> 00:04:37,770
there is no difference whatsoever to the

115
00:04:37,770 --> 00:04:40,110
browser visually we can inspect both of

116
00:04:40,110 --> 00:04:41,759
these and we can say the first of these

117
00:04:41,759 --> 00:04:44,639
script blocks is awesome I really want

118
00:04:44,639 --> 00:04:47,310
to execute that the second one I have no

119
00:04:47,310 --> 00:04:48,900
idea how they got on my page I don't

120
00:04:48,900 --> 00:04:50,340
want to be evil come on this is

121
00:04:50,340 --> 00:04:52,500
craziness it might of course have gotten

122
00:04:52,500 --> 00:04:54,090
on my page because I did something like

123
00:04:54,090 --> 00:04:54,360
that

124
00:04:54,360 --> 00:04:56,460
because I let the user define their own

125
00:04:56,460 --> 00:04:58,139
name and then I write the name out

126
00:04:58,139 --> 00:05:00,210
directly without any sort of escaping if

127
00:05:00,210 --> 00:05:02,699
the user calls themself open script tag

128
00:05:02,699 --> 00:05:04,949
be evil closed script tag that i have a

129
00:05:04,949 --> 00:05:07,110
problem because i've just injected code

130
00:05:07,110 --> 00:05:09,509
into my origin and again the browser

131
00:05:09,509 --> 00:05:11,939
cannot distinguish between code that i

132
00:05:11,939 --> 00:05:14,819
meant to execute and code that I didn't

133
00:05:14,819 --> 00:05:17,370
mean to execute content injection

134
00:05:17,370 --> 00:05:19,169
attacks are dangerous because they trick

135
00:05:19,169 --> 00:05:21,930
the server into serving content on its

136
00:05:21,930 --> 00:05:24,449
own origin that's going to do users harm

137
00:05:24,449 --> 00:05:29,069
and to do the application harm these are

138
00:05:29,069 --> 00:05:32,939
all of the contexts in which an HTML

139
00:05:32,939 --> 00:05:35,250
page can find itself or data and an HTML

140
00:05:35,250 --> 00:05:37,620
page can find itself there's a style tag

141
00:05:37,620 --> 00:05:40,080
so I I'll put a color into style and put

142
00:05:40,080 --> 00:05:42,509
a name into a paragraph i put a URL

143
00:05:42,509 --> 00:05:44,159
directly into an attribute and an

144
00:05:44,159 --> 00:05:46,379
element i put an ID in the script and

145
00:05:46,379 --> 00:05:47,669
maybe i have some debug information

146
00:05:47,669 --> 00:05:50,400
inside of a comment the rules for

147
00:05:50,400 --> 00:05:52,800
escaping in all of these contexts are

148
00:05:52,800 --> 00:05:56,250
distinct for example inside of an HDL

149
00:05:56,250 --> 00:05:59,339
HTML comment two dashes will close the

150
00:05:59,339 --> 00:06:00,960
comment and everything after those two

151
00:06:00,960 --> 00:06:02,879
dashes will be rendered two dashes

152
00:06:02,879 --> 00:06:04,800
inside of a paragraph of course has no

153
00:06:04,800 --> 00:06:06,690
effect whatsoever it just renders the

154
00:06:06,690 --> 00:06:10,919
two dashes now escaping is actually

155
00:06:10,919 --> 00:06:14,009
quite trivial the rules are easy all you

156
00:06:14,009 --> 00:06:17,610
have to do is do it perfectly every

157
00:06:17,610 --> 00:06:20,279
single time for every piece of data that

158
00:06:20,279 --> 00:06:23,550
you have ever you just have to be

159
00:06:23,550 --> 00:06:26,639
perfect it's not that hard right these

160
00:06:26,639 --> 00:06:28,379
problems are trivial but unfortunately

161
00:06:28,379 --> 00:06:30,839
we are incredibly bad at trivial things

162
00:06:30,839 --> 00:06:32,810
if you look at the history of the web

163
00:06:32,810 --> 00:06:35,189
everyone has content injection holes on

164
00:06:35,189 --> 00:06:37,620
their website google has holes you have

165
00:06:37,620 --> 00:06:40,319
holes it's simply a pervasive problem on

166
00:06:40,319 --> 00:06:42,599
the web it's one that we absolutely need

167
00:06:42,599 --> 00:06:44,759
to work on and frameworks are giving us

168
00:06:44,759 --> 00:06:46,259
the possibilities to do this there are

169
00:06:46,259 --> 00:06:48,419
context-aware escaping mechanisms

170
00:06:48,419 --> 00:06:50,370
they've been around since 2009 at least

171
00:06:50,370 --> 00:06:52,560
we're simply not using them and when we

172
00:06:52,560 --> 00:06:54,659
do use then we're not using them well we

173
00:06:54,659 --> 00:06:56,789
should use them better nothing i'm going

174
00:06:56,789 --> 00:06:58,439
to tell you today is going to stop you

175
00:06:58,439 --> 00:07:00,599
from the necessity of actually escaping

176
00:07:00,599 --> 00:07:02,789
your data correctly what i'd like to do

177
00:07:02,789 --> 00:07:04,620
today is to explain to you how you can

178
00:07:04,620 --> 00:07:06,960
mitigate the risk or mitigate the impact

179
00:07:06,960 --> 00:07:08,970
of the holes that are absolutely going

180
00:07:08,970 --> 00:07:12,690
to be on your site for instance does

181
00:07:12,690 --> 00:07:16,080
anyone know a wasp owa SP okay a wasp is

182
00:07:16,080 --> 00:07:17,819
great and it you seem to know who it is

183
00:07:17,819 --> 00:07:20,639
i'll just say it's a security they do

184
00:07:20,639 --> 00:07:22,110
security trainings they do a variety of

185
00:07:22,110 --> 00:07:25,319
security sorts of stuff and this is a

186
00:07:25,319 --> 00:07:26,789
really good resource for you when you

187
00:07:26,789 --> 00:07:28,710
want to learn about the variety of ways

188
00:07:28,710 --> 00:07:31,050
in which people can inject things into

189
00:07:31,050 --> 00:07:33,120
your website these are kind of tricky

190
00:07:33,120 --> 00:07:34,770
things you might not think about when

191
00:07:34,770 --> 00:07:36,300
you're putting things down for example

192
00:07:36,300 --> 00:07:38,280
you could have an entity that doesn't

193
00:07:38,280 --> 00:07:39,389
have a semicolon at the end you just

194
00:07:39,389 --> 00:07:40,770
have to Pat it out to the right length

195
00:07:40,770 --> 00:07:42,780
so if you're checking for entities by

196
00:07:42,780 --> 00:07:44,699
looking for ampersand semicolon then

197
00:07:44,699 --> 00:07:45,840
you're doing yourself with the service

198
00:07:45,840 --> 00:07:47,940
because that's not actually how HTML has

199
00:07:47,940 --> 00:07:50,849
to work ray for HTML lots of exciting

200
00:07:50,849 --> 00:07:53,669
rules if you ever heard of jazz is

201
00:07:53,669 --> 00:07:55,860
modern in the audience somewhere No ok

202
00:07:55,860 --> 00:07:56,910
you'll probably hear about a little bit

203
00:07:56,910 --> 00:07:59,550
later Jess is awesome it proves

204
00:07:59,550 --> 00:08:02,159
that you can express any JavaScript

205
00:08:02,159 --> 00:08:04,470
statement with only six characters open

206
00:08:04,470 --> 00:08:06,860
parenthesis close parentheses plus

207
00:08:06,860 --> 00:08:09,720
square brace close square brace and bang

208
00:08:09,720 --> 00:08:11,880
with these six characters you can write

209
00:08:11,880 --> 00:08:13,590
any JavaScript statement that's kind of

210
00:08:13,590 --> 00:08:16,199
amazing right it's very exciting but all

211
00:08:16,199 --> 00:08:18,180
of these characters are relatively

212
00:08:18,180 --> 00:08:20,550
benign and I doubt that any of your

213
00:08:20,550 --> 00:08:22,199
filters are actually looking at any of

214
00:08:22,199 --> 00:08:24,000
these characters as being particularly

215
00:08:24,000 --> 00:08:26,159
dangerous do we know what this does

216
00:08:26,159 --> 00:08:29,849
actually it's just JavaScript right i

217
00:08:29,849 --> 00:08:31,190
mean this this is pretty straightforward

218
00:08:31,190 --> 00:08:35,550
it's it's alert one exactly it's alert

219
00:08:35,550 --> 00:08:38,130
one usually you do alert xss like the

220
00:08:38,130 --> 00:08:39,750
string but that's about 40,000

221
00:08:39,750 --> 00:08:41,279
characters so i didn't feel like pacing

222
00:08:41,279 --> 00:08:43,860
it in here jsbach is many things among

223
00:08:43,860 --> 00:08:46,890
them it is verbose Alex Russell puts

224
00:08:46,890 --> 00:08:48,930
this absolutely beautifully he says I

225
00:08:48,930 --> 00:08:51,060
discount the probability of perfection

226
00:08:51,060 --> 00:08:53,550
and he's right it's really hard to be

227
00:08:53,550 --> 00:08:55,680
perfect it's really easy to make small

228
00:08:55,680 --> 00:08:57,690
mistakes and unfortunately small

229
00:08:57,690 --> 00:08:59,940
mistakes are all that it takes in order

230
00:08:59,940 --> 00:09:02,010
for a hole to be created on our site and

231
00:09:02,010 --> 00:09:04,740
one hole is all of it till it takes poor

232
00:09:04,740 --> 00:09:07,290
data to be exfiltrated to a malicious

233
00:09:07,290 --> 00:09:09,120
third party so I would rephrase this

234
00:09:09,120 --> 00:09:11,790
slightly I would say we are all idiots

235
00:09:11,790 --> 00:09:15,570
with deadlines we simply don't do the

236
00:09:15,570 --> 00:09:16,890
right thing and we don't do the right

237
00:09:16,890 --> 00:09:18,480
thing not because we don't know it's the

238
00:09:18,480 --> 00:09:20,339
right thing not because we're

239
00:09:20,339 --> 00:09:22,079
trying to do the right thing but because

240
00:09:22,079 --> 00:09:23,999
we'd have other priorities we have

241
00:09:23,999 --> 00:09:25,829
deadlines we have things that are

242
00:09:25,829 --> 00:09:27,149
important we need to build this new

243
00:09:27,149 --> 00:09:28,769
feature we need to build this new page

244
00:09:28,769 --> 00:09:32,279
and somehow securing the other pages and

245
00:09:32,279 --> 00:09:33,389
securing the page that we're building

246
00:09:33,389 --> 00:09:34,980
kind of falls through the cracks it's

247
00:09:34,980 --> 00:09:36,720
kind of assumed that you're doing good

248
00:09:36,720 --> 00:09:39,300
security work so again it's really

249
00:09:39,300 --> 00:09:41,189
important for us to have the ability to

250
00:09:41,189 --> 00:09:43,529
mitigate the effect of the holes that

251
00:09:43,529 --> 00:09:46,410
we're going to create saimin know what

252
00:09:46,410 --> 00:09:48,259
this picture is or what this painting is

253
00:09:48,259 --> 00:09:51,180
one person two people culture people

254
00:09:51,180 --> 00:09:54,509
come on culture this is Odysseus in the

255
00:09:54,509 --> 00:09:56,550
sirens it's from the Odyssey which is a

256
00:09:56,550 --> 00:09:59,309
very very old book indeed the story is

257
00:09:59,309 --> 00:10:02,100
something like this the sirens sing

258
00:10:02,100 --> 00:10:04,769
beautifully so beautifully in fact that

259
00:10:04,769 --> 00:10:07,019
once you hear their song all you want to

260
00:10:07,019 --> 00:10:08,999
do is hear more of this beautiful music

261
00:10:08,999 --> 00:10:10,470
it drives you to the brink of madness

262
00:10:10,470 --> 00:10:12,600
and since they live on an island it

263
00:10:12,600 --> 00:10:14,610
particularly drill it drives sailors to

264
00:10:14,610 --> 00:10:16,019
the brink of madness who come you know

265
00:10:16,019 --> 00:10:18,120
somewhere near the island generally you

266
00:10:18,120 --> 00:10:19,350
want to hear more of the music so you

267
00:10:19,350 --> 00:10:21,749
throw yourself overboard in order to get

268
00:10:21,749 --> 00:10:23,699
to this island generally the ship will

269
00:10:23,699 --> 00:10:26,550
crash the sirens I guess eat people who

270
00:10:26,550 --> 00:10:29,790
knows and because of that the sirens are

271
00:10:29,790 --> 00:10:31,709
incredibly dangerous and sailors know to

272
00:10:31,709 --> 00:10:34,439
avoid this island and to avoid you know

273
00:10:34,439 --> 00:10:36,389
beautiful music you hear music go away

274
00:10:36,389 --> 00:10:38,009
because you're probably going to try to

275
00:10:38,009 --> 00:10:39,589
kill yourself shortly afterwards

276
00:10:39,589 --> 00:10:44,429
Odysseus however is an incredible man he

277
00:10:44,429 --> 00:10:46,439
is an egomaniac and he's incredibly

278
00:10:46,439 --> 00:10:48,720
hubristic and because of this he says I

279
00:10:48,720 --> 00:10:50,339
am going to be the only living person

280
00:10:50,339 --> 00:10:53,399
who has ever heard this song I love

281
00:10:53,399 --> 00:10:55,079
music and I really want to hear this but

282
00:10:55,079 --> 00:10:56,339
I don't want to throw myself overboard

283
00:10:56,339 --> 00:10:58,649
so how can I work around this well after

284
00:10:58,649 --> 00:11:00,149
talking to a which he comes up with an

285
00:11:00,149 --> 00:11:02,279
amazing plan and this plan is as follows

286
00:11:02,279 --> 00:11:04,769
he tells his men to bind him to the mast

287
00:11:04,769 --> 00:11:06,870
tie his hands behind his back tie his

288
00:11:06,870 --> 00:11:08,819
legs to the mast so he can't get away

289
00:11:08,819 --> 00:11:11,429
but he can hear music and he can talk to

290
00:11:11,429 --> 00:11:13,800
people so I guess that's nice he then

291
00:11:13,800 --> 00:11:16,829
tells his men to put a beeswax in their

292
00:11:16,829 --> 00:11:19,050
ears and then bind their head such that

293
00:11:19,050 --> 00:11:21,240
they can't actually hear anything that's

294
00:11:21,240 --> 00:11:22,920
going on around them and he gives them

295
00:11:22,920 --> 00:11:24,629
very explicit instructions he says you

296
00:11:24,629 --> 00:11:26,850
know row in this direction don't go to

297
00:11:26,850 --> 00:11:28,379
that Island over there just kind of go

298
00:11:28,379 --> 00:11:30,779
around it don't throw yourself overboard

299
00:11:30,779 --> 00:11:32,480
and just you know keep going forwards

300
00:11:32,480 --> 00:11:33,720
they go

301
00:11:33,720 --> 00:11:36,000
the island he's driven to the brink of

302
00:11:36,000 --> 00:11:38,220
madness by this beautiful music but he

303
00:11:38,220 --> 00:11:40,860
survives he survives because he

304
00:11:40,860 --> 00:11:43,199
prevented his men from doing things that

305
00:11:43,199 --> 00:11:45,779
would harm them all it'd be really nice

306
00:11:45,779 --> 00:11:48,629
if your application could tell the

307
00:11:48,629 --> 00:11:51,329
browser not to do things that's going to

308
00:11:51,329 --> 00:11:53,639
harm the application perhaps that this

309
00:11:53,639 --> 00:11:55,110
piece of JavaScript is what I want you

310
00:11:55,110 --> 00:11:56,939
to ask you please execute this piece of

311
00:11:56,939 --> 00:11:58,259
JavaScript do it as quickly as you

312
00:11:58,259 --> 00:12:00,149
possibly can but don't look at these

313
00:12:00,149 --> 00:12:01,920
other pieces of JavaScript or rather

314
00:12:01,920 --> 00:12:03,629
look at them but please do not touch

315
00:12:03,629 --> 00:12:07,350
right don't execute this stuff content

316
00:12:07,350 --> 00:12:10,350
security policy is this thing I think

317
00:12:10,350 --> 00:12:12,240
it's beautiful it's not beautiful but

318
00:12:12,240 --> 00:12:14,550
you know it's really helpful I edit the

319
00:12:14,550 --> 00:12:16,709
specification along with Adam Barth and

320
00:12:16,709 --> 00:12:18,839
Dan bennetts from google and mozilla

321
00:12:18,839 --> 00:12:21,149
respectively they basically just tell me

322
00:12:21,149 --> 00:12:22,500
what to type and I type it because they

323
00:12:22,500 --> 00:12:25,170
are much smarter than I am but I have

324
00:12:25,170 --> 00:12:26,550
the opportunity to be here with you so

325
00:12:26,550 --> 00:12:27,689
you know I think I get the better

326
00:12:27,689 --> 00:12:30,750
portion of that deal regardless content

327
00:12:30,750 --> 00:12:33,389
security policy is a language that

328
00:12:33,389 --> 00:12:35,850
defines a mechanism by which you can

329
00:12:35,850 --> 00:12:38,220
give a whitelist to a browser and say

330
00:12:38,220 --> 00:12:40,860
script from this origin awesome script

331
00:12:40,860 --> 00:12:42,870
from that origin not so much please

332
00:12:42,870 --> 00:12:45,720
execute this do not execute that it

333
00:12:45,720 --> 00:12:47,300
gives you exciting errors like this

334
00:12:47,300 --> 00:12:49,709
refuse to load the script example.com

335
00:12:49,709 --> 00:12:51,930
evil j/s because it violates the

336
00:12:51,930 --> 00:12:52,860
following content security policy

337
00:12:52,860 --> 00:12:55,050
directive script source self will talk

338
00:12:55,050 --> 00:12:56,220
about what exactly that means in a

339
00:12:56,220 --> 00:12:58,559
moment this is what a Content security

340
00:12:58,559 --> 00:13:01,139
policy directive or a policy looks like

341
00:13:01,139 --> 00:13:04,110
it's an HTTP header delivered when you

342
00:13:04,110 --> 00:13:06,870
deliver the page it contains a semicolon

343
00:13:06,870 --> 00:13:09,509
separated list of directives each

344
00:13:09,509 --> 00:13:12,029
directive giving you control granular

345
00:13:12,029 --> 00:13:13,920
control over a particular type of

346
00:13:13,920 --> 00:13:16,410
content this is the policy for an

347
00:13:16,410 --> 00:13:18,689
incredibly high value website my quest

348
00:13:18,689 --> 00:13:20,399
or you may have heard of it it's really

349
00:13:20,399 --> 00:13:21,680
really important you should all visit it

350
00:13:21,680 --> 00:13:24,329
we start by setting a default source of

351
00:13:24,329 --> 00:13:26,850
none which basically means for all the

352
00:13:26,850 --> 00:13:28,290
types of content that content security

353
00:13:28,290 --> 00:13:30,870
policy gives you control over load none

354
00:13:30,870 --> 00:13:33,540
of it none is the only acceptable origin

355
00:13:33,540 --> 00:13:35,850
which means don't load any content then

356
00:13:35,850 --> 00:13:37,740
we slowly open that up and we say okay

357
00:13:37,740 --> 00:13:40,860
load no content except style for my CDN

358
00:13:40,860 --> 00:13:43,019
and you can also open frames from these

359
00:13:43,019 --> 00:13:45,120
sources you can open some script and

360
00:13:45,120 --> 00:13:45,860
execute it

361
00:13:45,860 --> 00:13:47,360
then you can open some images from over

362
00:13:47,360 --> 00:13:49,250
here so what we've done here is

363
00:13:49,250 --> 00:13:51,709
basically started with a closed door and

364
00:13:51,709 --> 00:13:54,680
then only let in those types of content

365
00:13:54,680 --> 00:13:56,630
and those origins of content that we

366
00:13:56,630 --> 00:13:58,670
actually trust now what I'm showing here

367
00:13:58,670 --> 00:14:00,980
or just origins it's actually the case

368
00:14:00,980 --> 00:14:03,290
that both chrome and firefox support the

369
00:14:03,290 --> 00:14:05,839
1.1 syntax which allows you to have

370
00:14:05,839 --> 00:14:08,180
paths so you can say not only only

371
00:14:08,180 --> 00:14:10,459
script for my CDN but only script for my

372
00:14:10,459 --> 00:14:12,140
CDN that's in this particular directory

373
00:14:12,140 --> 00:14:14,839
or even only this particular file if you

374
00:14:14,839 --> 00:14:16,459
want to be that granular gives you a lot

375
00:14:16,459 --> 00:14:18,740
of control and although I don't think

376
00:14:18,740 --> 00:14:20,600
most people will be that granular there

377
00:14:20,600 --> 00:14:22,010
is a lot of value to doing so if you

378
00:14:22,010 --> 00:14:24,529
want to this is a relatively exhaustive

379
00:14:24,529 --> 00:14:25,970
list of all the directives that are in

380
00:14:25,970 --> 00:14:27,890
one point 0 will go through as many of

381
00:14:27,890 --> 00:14:29,570
them as we possibly can the ones that

382
00:14:29,570 --> 00:14:30,980
you haven't seen yet are things like

383
00:14:30,980 --> 00:14:33,290
connect source which determines where

384
00:14:33,290 --> 00:14:35,450
you can make xhr requests and also

385
00:14:35,450 --> 00:14:36,470
events source and things along those

386
00:14:36,470 --> 00:14:38,870
lines and sandbox which allows you to

387
00:14:38,870 --> 00:14:40,760
apply a sandboxing policy to the

388
00:14:40,760 --> 00:14:42,740
document that's being loaded on a page

389
00:14:42,740 --> 00:14:45,589
you've heard of iframe sandboxing I hope

390
00:14:45,589 --> 00:14:46,730
and if you haven't you'll hear about it

391
00:14:46,730 --> 00:14:48,709
at the end of the talk sandbox directive

392
00:14:48,709 --> 00:14:50,870
allows you to apply a sandbox to the

393
00:14:50,870 --> 00:14:52,430
page that's currently loading which you

394
00:14:52,430 --> 00:14:53,779
don't currently have the option of doing

395
00:14:53,779 --> 00:14:56,089
it's actually quite powerful what you

396
00:14:56,089 --> 00:14:57,589
also see at the bottom there is report

397
00:14:57,589 --> 00:15:00,440
URI report your eye is very important it

398
00:15:00,440 --> 00:15:03,980
allows you to find out when your site is

399
00:15:03,980 --> 00:15:06,170
being attacked if you have a policy on

400
00:15:06,170 --> 00:15:07,850
your site and there's a violation

401
00:15:07,850 --> 00:15:09,560
because the script was injected that you

402
00:15:09,560 --> 00:15:12,560
didn't expect this gives you a post back

403
00:15:12,560 --> 00:15:14,300
to a specific endpoint on your origin

404
00:15:14,300 --> 00:15:16,310
and this post contains some useful

405
00:15:16,310 --> 00:15:18,380
information it tells you what document

406
00:15:18,380 --> 00:15:20,180
was being attacked it tells you what the

407
00:15:20,180 --> 00:15:21,560
attack kind of looked like what the

408
00:15:21,560 --> 00:15:23,180
source file was if we can find a line

409
00:15:23,180 --> 00:15:24,680
number and a column number for you will

410
00:15:24,680 --> 00:15:25,730
do so and we'll give you that

411
00:15:25,730 --> 00:15:27,019
information so that you can start

412
00:15:27,019 --> 00:15:29,180
figuring out where the holes are on your

413
00:15:29,180 --> 00:15:31,399
website what you see at the top here is

414
00:15:31,399 --> 00:15:33,620
content security policy report only so

415
00:15:33,620 --> 00:15:35,180
what we have is the ability not only to

416
00:15:35,180 --> 00:15:37,519
enforce a policy but also to have a

417
00:15:37,519 --> 00:15:39,740
report policy happening at the same time

418
00:15:39,740 --> 00:15:43,130
so you can you can slowly roll this out

419
00:15:43,130 --> 00:15:45,649
on your websites by first reporting

420
00:15:45,649 --> 00:15:47,630
violations and then moving to

421
00:15:47,630 --> 00:15:49,699
enforcement once you think you've closed

422
00:15:49,699 --> 00:15:51,380
all the holes this gives you the ability

423
00:15:51,380 --> 00:15:54,560
to also have two policies active at the

424
00:15:54,560 --> 00:15:57,199
same time one relatively loose policy

425
00:15:57,199 --> 00:15:58,490
that you enforce for exam

426
00:15:58,490 --> 00:16:01,190
people https only and one policy that's

427
00:16:01,190 --> 00:16:03,260
a little bit stricter that you put in

428
00:16:03,260 --> 00:16:04,490
report only mode for a little while

429
00:16:04,490 --> 00:16:06,140
until you're confident that your site

430
00:16:06,140 --> 00:16:07,850
actually matches the policy that you've

431
00:16:07,850 --> 00:16:10,940
written now some people don't like

432
00:16:10,940 --> 00:16:13,279
content security policy so much there

433
00:16:13,279 --> 00:16:15,920
are really two things to complaints that

434
00:16:15,920 --> 00:16:16,970
I've heard about content security policy

435
00:16:16,970 --> 00:16:19,430
actually before I get into this who in

436
00:16:19,430 --> 00:16:21,020
the audience was familiar with content

437
00:16:21,020 --> 00:16:23,360
security policy before this talk okay a

438
00:16:23,360 --> 00:16:24,529
couple of people that's actually quite

439
00:16:24,529 --> 00:16:26,660
good has anyone implemented secondo

440
00:16:26,660 --> 00:16:28,670
security policy on their websites okay a

441
00:16:28,670 --> 00:16:30,529
couple of people please talk to me

442
00:16:30,529 --> 00:16:32,800
afterwards we very much want feedback

443
00:16:32,800 --> 00:16:35,570
we're still in the process of doing 1.1

444
00:16:35,570 --> 00:16:37,730
and any feedback that we can get is good

445
00:16:37,730 --> 00:16:43,640
feedback so Rick waldron CSP designed by

446
00:16:43,640 --> 00:16:45,770
ignoring reality so there are two things

447
00:16:45,770 --> 00:16:48,230
that Rick believes are ignoring reality

448
00:16:48,230 --> 00:16:50,779
and I kind of agree with them we want to

449
00:16:50,779 --> 00:16:52,880
change reality we have looked at reality

450
00:16:52,880 --> 00:16:54,589
and we kind of don't like it so much so

451
00:16:54,589 --> 00:16:56,029
we've invented our own and we're trying

452
00:16:56,029 --> 00:16:57,709
to roll it out as well as we possibly

453
00:16:57,709 --> 00:17:00,860
can one piece of reality that is

454
00:17:00,860 --> 00:17:03,620
problematic are inline scripts inline

455
00:17:03,620 --> 00:17:05,480
scripts are the biggest problem on the

456
00:17:05,480 --> 00:17:07,459
web period but the biggest problem on

457
00:17:07,459 --> 00:17:10,220
the web because well what origin does

458
00:17:10,220 --> 00:17:15,290
this come from it comes from your origin

459
00:17:15,290 --> 00:17:17,689
right but if we allow self then that's

460
00:17:17,689 --> 00:17:19,640
not only inline script on your origin

461
00:17:19,640 --> 00:17:21,020
but also external script from your

462
00:17:21,020 --> 00:17:23,059
origin so we've invented a new origin

463
00:17:23,059 --> 00:17:25,850
for this called unsafe inline we call it

464
00:17:25,850 --> 00:17:27,470
unsafe inline because it's kind of

465
00:17:27,470 --> 00:17:29,360
unsafe and we kind of don't want you to

466
00:17:29,360 --> 00:17:31,309
use it so please don't but if you want

467
00:17:31,309 --> 00:17:33,530
to you can whitelist it haha what we

468
00:17:33,530 --> 00:17:34,640
would suggest however is that you

469
00:17:34,640 --> 00:17:36,320
externalize the scripts to whatever

470
00:17:36,320 --> 00:17:38,390
extent possible you pull it out into an

471
00:17:38,390 --> 00:17:40,429
external file the browser can verify

472
00:17:40,429 --> 00:17:42,140
that this file is coming from an origin

473
00:17:42,140 --> 00:17:43,520
that you've trust that you trust and

474
00:17:43,520 --> 00:17:46,220
then it will execute on the page so I

475
00:17:46,220 --> 00:17:47,510
need to do something like this where you

476
00:17:47,510 --> 00:17:49,130
externalise the file you just inbound

477
00:17:49,130 --> 00:17:50,840
manipulation to attach event handlers

478
00:17:50,840 --> 00:17:56,330
and you go from there What's in 1.1 that

479
00:17:56,330 --> 00:17:57,320
we think is going to be a better

480
00:17:57,320 --> 00:17:59,450
solution well actually what we've done

481
00:17:59,450 --> 00:18:01,730
in one point 0 is basically thrown out

482
00:18:01,730 --> 00:18:03,470
the baby with the bathwater right we

483
00:18:03,470 --> 00:18:05,120
know that there are good uses of inline

484
00:18:05,120 --> 00:18:07,070
script we know that it's performance we

485
00:18:07,070 --> 00:18:08,660
know that there are some latency issues

486
00:18:08,660 --> 00:18:10,880
however in order to get something out

487
00:18:10,880 --> 00:18:12,020
the door that's useful

488
00:18:12,020 --> 00:18:13,280
you've thrown all that out as well

489
00:18:13,280 --> 00:18:15,770
inline script is just banned by default

490
00:18:15,770 --> 00:18:18,020
in 1.1 we're kind of going to look in

491
00:18:18,020 --> 00:18:19,910
the water and see what babies we can

492
00:18:19,910 --> 00:18:21,320
pick back up and hopefully we can get a

493
00:18:21,320 --> 00:18:22,660
couple of them because babies are nice

494
00:18:22,660 --> 00:18:24,740
one thing that we're trying to do in

495
00:18:24,740 --> 00:18:26,900
order to allow certain types of inline

496
00:18:26,900 --> 00:18:29,780
script is using a nonce you send the

497
00:18:29,780 --> 00:18:32,780
nonce as a valid origin in a script

498
00:18:32,780 --> 00:18:35,480
source this nonce is then repeated as a

499
00:18:35,480 --> 00:18:37,970
nonce attribute on scripts that come

500
00:18:37,970 --> 00:18:40,220
into a page this allows the browser to

501
00:18:40,220 --> 00:18:41,870
distinguish between scripts that the

502
00:18:41,870 --> 00:18:44,390
page inject it that is if the page knows

503
00:18:44,390 --> 00:18:46,790
the secret it can execute the script and

504
00:18:46,790 --> 00:18:48,680
if an attacker hopefully doesn't know

505
00:18:48,680 --> 00:18:50,360
the secret then it won't be able to

506
00:18:50,360 --> 00:18:51,680
execute script because they won't be

507
00:18:51,680 --> 00:18:54,110
able to get access to the nonce this is

508
00:18:54,110 --> 00:18:55,100
one thing that might work pretty well

509
00:18:55,100 --> 00:18:57,380
there's another proposal being made by

510
00:18:57,380 --> 00:19:00,110
Twitter Neil mattel who's doing a great

511
00:19:00,110 --> 00:19:02,540
job putting together some additional

512
00:19:02,540 --> 00:19:04,220
pieces of this pack that will be doing

513
00:19:04,220 --> 00:19:07,130
hashing so we'll basically send a shot

514
00:19:07,130 --> 00:19:10,430
to shot 356 hash as a valid source and

515
00:19:10,430 --> 00:19:12,770
then if a script that matches that hash

516
00:19:12,770 --> 00:19:14,720
appears in line then we'll execute it so

517
00:19:14,720 --> 00:19:16,100
there's still a lot of work to do in

518
00:19:16,100 --> 00:19:18,680
order to make sure that these two figure

519
00:19:18,680 --> 00:19:19,880
out which of these we actually want to

520
00:19:19,880 --> 00:19:22,190
implement and then to actually spec them

521
00:19:22,190 --> 00:19:23,990
out and implement them nonces are

522
00:19:23,990 --> 00:19:25,790
available right now in chrome so if you

523
00:19:25,790 --> 00:19:27,620
go into chrome flags turn on

524
00:19:27,620 --> 00:19:29,360
experimental web platform features you

525
00:19:29,360 --> 00:19:30,620
can start playing around with nonces

526
00:19:30,620 --> 00:19:31,940
right now we think that's going to be

527
00:19:31,940 --> 00:19:33,710
relatively effective and what's nice

528
00:19:33,710 --> 00:19:35,120
about nonces they have the property that

529
00:19:35,120 --> 00:19:37,490
they're transferable so you can if for

530
00:19:37,490 --> 00:19:39,080
instance you embed an ad into your page

531
00:19:39,080 --> 00:19:41,600
which many people do then you can give

532
00:19:41,600 --> 00:19:44,540
the ad network the the nonce is a get

533
00:19:44,540 --> 00:19:45,770
parameter and then they can inject

534
00:19:45,770 --> 00:19:48,170
script into origin as well so for a lot

535
00:19:48,170 --> 00:19:50,210
of use cases this transfer ability is

536
00:19:50,210 --> 00:19:53,680
very powerful it gives you more of a

537
00:19:53,680 --> 00:19:56,270
system of capabilities by which this non

538
00:19:56,270 --> 00:19:57,410
skeeves you the ability to execute

539
00:19:57,410 --> 00:20:00,140
script or put style in line we think

540
00:20:00,140 --> 00:20:02,630
that has some good properties the other

541
00:20:02,630 --> 00:20:05,630
thing that ignores reality is eval eval

542
00:20:05,630 --> 00:20:07,790
is problematic because if you allow

543
00:20:07,790 --> 00:20:09,950
people or people will be able to inject

544
00:20:09,950 --> 00:20:11,690
things onto your page and if you read

545
00:20:11,690 --> 00:20:13,910
data from your page and then eval it

546
00:20:13,910 --> 00:20:15,650
you're opening yourself up to potential

547
00:20:15,650 --> 00:20:17,510
attack vectors so it's more reflective

548
00:20:17,510 --> 00:20:19,010
dhamma talk as opposed to just something

549
00:20:19,010 --> 00:20:21,920
coming directly from a get parameter we

550
00:20:21,920 --> 00:20:24,020
then eval by default as well you can

551
00:20:24,020 --> 00:20:25,850
turn it back on by allowing the

552
00:20:25,850 --> 00:20:28,610
the unsafe eval origin again unsay if we

553
00:20:28,610 --> 00:20:29,720
kind of don't like it but if you really

554
00:20:29,720 --> 00:20:32,900
need it then go for it I think there are

555
00:20:32,900 --> 00:20:34,820
better mechanisms by which into eval

556
00:20:34,820 --> 00:20:36,830
eval is problematic because it executes

557
00:20:36,830 --> 00:20:38,900
in the context of your origin just like

558
00:20:38,900 --> 00:20:40,370
every other piece of script in your site

559
00:20:40,370 --> 00:20:43,490
you can get around this with Stan boxing

560
00:20:43,490 --> 00:20:45,650
there's a good article written by a very

561
00:20:45,650 --> 00:20:47,960
handsome man that explains how you can

562
00:20:47,960 --> 00:20:51,169
inject an iframe into your page sandbox

563
00:20:51,169 --> 00:20:53,539
the iframe such that a it's not coming

564
00:20:53,539 --> 00:20:56,330
from the same origin and be that it

565
00:20:56,330 --> 00:20:58,070
doesn't have any permissions that it

566
00:20:58,070 --> 00:20:59,780
doesn't need it can execute script and

567
00:20:59,780 --> 00:21:01,669
that's basically it you can pass

568
00:21:01,669 --> 00:21:03,770
information into this script or into

569
00:21:03,770 --> 00:21:05,690
this iframe it can do some processing

570
00:21:05,690 --> 00:21:08,390
and then give you some data back and if

571
00:21:08,390 --> 00:21:10,760
the if the processing is exploited

572
00:21:10,760 --> 00:21:13,190
within the context of that iframe even

573
00:21:13,190 --> 00:21:15,409
if you then eject like inner HTML with

574
00:21:15,409 --> 00:21:16,789
the data that you get back that's

575
00:21:16,789 --> 00:21:18,950
protected by the policy of the larger

576
00:21:18,950 --> 00:21:21,470
page so the iframe doesn't have a policy

577
00:21:21,470 --> 00:21:23,870
it but it's sandboxed your page has a

578
00:21:23,870 --> 00:21:25,789
policy which means pass information

579
00:21:25,789 --> 00:21:27,470
throw it over the wall get something

580
00:21:27,470 --> 00:21:29,030
useful back and then do something with

581
00:21:29,030 --> 00:21:30,530
it and you don't have to trust that

582
00:21:30,530 --> 00:21:33,260
relationship and if it executes bad code

583
00:21:33,260 --> 00:21:35,600
then that's kind of okay because it

584
00:21:35,600 --> 00:21:37,039
didn't have access to any of your useful

585
00:21:37,039 --> 00:21:39,470
data so i'd highly recommend that you at

586
00:21:39,470 --> 00:21:41,120
least take a look at this there's a demo

587
00:21:41,120 --> 00:21:43,400
here that shows you how eval works

588
00:21:43,400 --> 00:21:45,260
within the context of an iframe you

589
00:21:45,260 --> 00:21:46,909
basically have an iframe doesn't

590
00:21:46,909 --> 00:21:48,470
processing and it just evals code

591
00:21:48,470 --> 00:21:49,730
directly and then gives you the result

592
00:21:49,730 --> 00:21:50,900
back and you can play around without a

593
00:21:50,900 --> 00:21:53,510
little bit it's a good demo I think of

594
00:21:53,510 --> 00:21:56,450
the concept so I highly recommend that

595
00:21:56,450 --> 00:21:59,020
you take a look I called this talk

596
00:21:59,020 --> 00:22:01,070
actually I'm sorry this is the article

597
00:22:01,070 --> 00:22:02,990
again please read it I think it's really

598
00:22:02,990 --> 00:22:04,250
important this gives you all of the

599
00:22:04,250 --> 00:22:05,539
practical detail that you're going to

600
00:22:05,539 --> 00:22:06,770
need in order to actually start

601
00:22:06,770 --> 00:22:08,120
implementing this on your sites and

602
00:22:08,120 --> 00:22:09,350
that's that's really what I want more

603
00:22:09,350 --> 00:22:10,970
than anything else I want people to

604
00:22:10,970 --> 00:22:13,490
start implementing this and I want those

605
00:22:13,490 --> 00:22:15,140
people to give feedback to the working

606
00:22:15,140 --> 00:22:17,570
group such that we can construct 1.1 in

607
00:22:17,570 --> 00:22:18,710
the way that really meets your needs

608
00:22:18,710 --> 00:22:21,080
instead of needing most of your needs

609
00:22:21,080 --> 00:22:22,640
which is I think where we are right now

610
00:22:22,640 --> 00:22:26,870
I called this talk what did I call this

611
00:22:26,870 --> 00:22:29,570
topic towards a post XSS world and I

612
00:22:29,570 --> 00:22:31,789
called it that because of this article

613
00:22:31,789 --> 00:22:33,740
this is a great article published I

614
00:22:33,740 --> 00:22:34,940
think at the end of two thousand twelve

615
00:22:34,940 --> 00:22:38,509
called postcards from the post XSS world

616
00:22:38,509 --> 00:22:41,059
in other words exciting security

617
00:22:41,059 --> 00:22:42,949
researchers are already figuring out how

618
00:22:42,949 --> 00:22:44,509
they're going to be attacking you once

619
00:22:44,509 --> 00:22:46,249
script is no longer allowed on your site

620
00:22:46,249 --> 00:22:49,449
it is possible it is not that difficult

621
00:22:49,449 --> 00:22:51,199
basically what content security policy

622
00:22:51,199 --> 00:22:53,599
is going to do is allow you more

623
00:22:53,599 --> 00:22:55,609
granular control over the script that

624
00:22:55,609 --> 00:22:57,440
executes on your site over the style

625
00:22:57,440 --> 00:22:59,209
that executes on your site and a variety

626
00:22:59,209 --> 00:23:01,339
of other resource types I'd really

627
00:23:01,339 --> 00:23:02,389
highly recommend that you be as

628
00:23:02,389 --> 00:23:03,649
restrictive as possible in those

629
00:23:03,649 --> 00:23:06,409
resource types however it's still the

630
00:23:06,409 --> 00:23:08,359
case the content injection attacks can

631
00:23:08,359 --> 00:23:10,190
be dangerous they can still exfiltrate

632
00:23:10,190 --> 00:23:12,229
data people are coming up with really

633
00:23:12,229 --> 00:23:14,989
exciting ways of doing things the

634
00:23:14,989 --> 00:23:16,579
metaphor that's used or the analogy

635
00:23:16,579 --> 00:23:17,929
that's used in this document is that

636
00:23:17,929 --> 00:23:19,729
content security policy is kind of like

637
00:23:19,729 --> 00:23:22,279
address space randomization for

638
00:23:22,279 --> 00:23:24,739
applications it doesn't actually prevent

639
00:23:24,739 --> 00:23:26,629
attacks but it raises the bar for

640
00:23:26,629 --> 00:23:28,789
attacks it makes it more difficult and

641
00:23:28,789 --> 00:23:31,159
the more difficult attacks are the more

642
00:23:31,159 --> 00:23:33,349
likely attackers are to move to less

643
00:23:33,349 --> 00:23:35,449
difficult targets which i think is good

644
00:23:35,449 --> 00:23:37,879
so if you're in the woods with your

645
00:23:37,879 --> 00:23:40,309
friends and you see a bear and the bear

646
00:23:40,309 --> 00:23:42,709
rares up on its hind legs and roars at

647
00:23:42,709 --> 00:23:43,819
you and starts running in your direction

648
00:23:43,819 --> 00:23:45,559
you're all going to turn around and run

649
00:23:45,559 --> 00:23:48,319
away you don't want to be the slowest in

650
00:23:48,319 --> 00:23:50,449
that group you want to be the fastest in

651
00:23:50,449 --> 00:23:51,889
that group or at least somewhere in the

652
00:23:51,889 --> 00:23:54,139
middle content security policy gives you

653
00:23:54,139 --> 00:23:56,299
a little bit of burst of speed such that

654
00:23:56,299 --> 00:23:58,999
you are not the easiest target it gives

655
00:23:58,999 --> 00:24:00,440
you a lot of control over the content

656
00:24:00,440 --> 00:24:02,839
that's executed on your site and because

657
00:24:02,839 --> 00:24:05,659
of that it mitigates to a large extent

658
00:24:05,659 --> 00:24:08,059
the impact of the content injection

659
00:24:08,059 --> 00:24:09,829
attacks that are absolutely going to

660
00:24:09,829 --> 00:24:12,259
exist on your sites I highly recommend

661
00:24:12,259 --> 00:24:14,239
you take a look at it thank you for your

662
00:24:14,239 --> 00:24:25,680
time

