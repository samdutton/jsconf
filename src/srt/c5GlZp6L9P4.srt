1
00:00:23,060 --> 00:00:24,150
Thank you.

2
00:00:24,150 --> 00:00:26,340
Thank you very much.

3
00:00:26,340 --> 00:00:28,971
As I said, I
didn't get much sleep because of course I

4
00:00:28,971 --> 00:00:33,590
had to change
the demo in the last moment to get stuff to

5
00:00:33,590 --> 00:00:35,680
work.

6
00:00:35,680 --> 00:00:37,530
So
that's always fun.

7
00:00:37,530 --> 00:00:46,300
And so I'm going to talk about
AirPlay in node, and of course I would like

8
00:00:46,300 --> 00:00:49,370
this to also
work in the browser, so maybe it should just

9
00:00:49,370 --> 00:00:54,210
say
JavaScript, but this is a work in progress,

10
00:00:54,210 --> 00:00:57,250
and
I haven't figured out how to do multi-cast

11
00:00:57,250 --> 00:01:02,160
in the
browser yet, but we'll see what happens.

12
00:01:02,160 --> 00:01:05,220
My name is
Thomas Watson.

13
00:01:05,220 --> 00:01:08,260
You can talk to me on Twitter and
github.

14
00:01:08,260 --> 00:01:14,610
First, a history lesson.

15
00:01:14,610 --> 00:01:16,390
So AirPlay.

16
00:01:16,390 --> 00:01:21,509
There
was a first generation of AirPlay, it was

17
00:01:21,509 --> 00:01:25,030
in 2004, and
it wasn't actually called AirPlay back then;

18
00:01:25,030 --> 00:01:28,380
it was
called Air Tunes.

19
00:01:28,380 --> 00:01:34,090
And actually, Air Tunes is just
a fancy marketing name for a protocol called

20
00:01:34,090 --> 00:01:41,390
RAOP, which
is remote audio output protocol ... I'm feeling

21
00:01:41,390 --> 00:01:43,530
so
sorry for the translators, because I'm kind

22
00:01:43,530 --> 00:01:48,079
of using
a lot of acronyms and protocol names and stuff,

23
00:01:48,079 --> 00:01:51,130
but
hopefully it is going to work out okay.

24
00:01:51,130 --> 00:01:57,719
So RAOP or Air
Tunes is a simple protocol for you have your

25
00:01:57,719 --> 00:02:00,829
computers
before the iPhone, so where like you had your

26
00:02:00,829 --> 00:02:04,729
computer
with iTunes running on it, you have your local

27
00:02:04,729 --> 00:02:07,180
area
network, and you have a RAOP server, which

28
00:02:07,180 --> 00:02:11,760
is usually
like a an airport express and you connect

29
00:02:11,760 --> 00:02:15,550
a physical
speaker to that with an audio cable, and then

30
00:02:15,550 --> 00:02:17,670
you can
stream music from your computer from iTunes

31
00:02:17,670 --> 00:02:20,560
over to your
speaker.

32
00:02:20,560 --> 00:02:30,510
RAOP then came a second generation in 2010,
and it was called AirPlay, because a lot of

33
00:02:30,510 --> 00:02:34,989
stuff
happened between 2004 and 2010: you'd got

34
00:02:34,989 --> 00:02:42,120
the iPhone, we
got an Apple TV, so iTunes -- so AirPlay is

35
00:02:42,120 --> 00:02:48,500
basically an
umbrella name for both iTunes, the Air Tunes

36
00:02:48,500 --> 00:02:52,920
two, and
the protocol called AirPlay, which is under

37
00:02:52,920 --> 00:02:53,980
the umbrella
name AirPlay.

38
00:02:53,980 --> 00:02:56,650
So it is kind of confusing.

39
00:02:56,650 --> 00:02:59,700
But Air
Tunes two, which is a new version of Air Tunes

40
00:02:59,700 --> 00:03:02,629
protocol
or the RAOP protocol, is basically still RAOP,

41
00:03:02,629 --> 00:03:08,500
just
a little bit extended, and it works similarly.

42
00:03:08,500 --> 00:03:12,909
Now it
can also connect your iPhone to your local

43
00:03:12,909 --> 00:03:14,870
area network
and you have an AirPlay server and you can

44
00:03:14,870 --> 00:03:19,260
stream all
sorts of stuff to a TV, as well as a speaker.

45
00:03:19,260 --> 00:03:23,580
So just
to recap, RAOP, that's for audio, AirPlay

46
00:03:23,580 --> 00:03:28,709
is for photos,
video and screen mirroring.

47
00:03:28,709 --> 00:03:31,900
So how does this work?

48
00:03:31,900 --> 00:03:35,040
How does these things figure
out how to talk each other?

49
00:03:35,040 --> 00:03:41,530
There is a service discover
protocol, which is using Apples.

50
00:03:41,530 --> 00:03:46,860
Bonjour protocol,
basically just Apple's branding of something

51
00:03:46,860 --> 00:03:50,879
called Zero
Conf, and it is basically running on top of

52
00:03:50,879 --> 00:03:53,621
multi-cast
DNS, so if we run multi-cast DNS, which we

53
00:03:53,621 --> 00:04:01,560
can, and no
JNS, so we can get started.

54
00:04:01,560 --> 00:04:05,530
Just a quick -- so I'm
going to show you how this will work when

55
00:04:05,530 --> 00:04:08,989
you're using
a RAOP, when you want to play music.

56
00:04:08,989 --> 00:04:16,989
That was the stuff
I was trying to get to work last night.

57
00:04:16,989 --> 00:04:21,030
So the phone
will query, say: is there any AirPlay servers?

58
00:04:21,030 --> 00:04:24,830
And an
AirPlay server will say, "Hey, I'm here, and

59
00:04:24,830 --> 00:04:27,500
I can
support these things, and you can do screen

60
00:04:27,500 --> 00:04:35,210
mirroring or
whatever", and then the phone will be like:

61
00:04:35,210 --> 00:04:39,750
"Cool,
what --" so if it is just concerned about

62
00:04:39,750 --> 00:04:45,680
doing audio,
it will send an RTSP options request, which

63
00:04:45,680 --> 00:04:49,680
is basically
a way for it to ask the server what kind of

64
00:04:49,680 --> 00:04:56,490
RTSP it
supports, and that's basically the protocol

65
00:04:56,490 --> 00:04:57,639
that RAOP
uses to communicate.

66
00:04:57,639 --> 00:04:58,639
It resembles HTTP a lot.

67
00:04:58,639 --> 00:05:04,539
It is
exactly like it, except they change the first

68
00:05:04,539 --> 00:05:09,050
line and
then called it RTSP, it is a proper, so you

69
00:05:09,050 --> 00:05:13,449
can read
about it in a 100-page document if you feel

70
00:05:13,449 --> 00:05:14,470
like it.

71
00:05:14,470 --> 00:05:19,670
The problem is Apple added the thing to the
write, yes?

72
00:05:19,670 --> 00:05:24,960
They added encryption because "Oh no, we can't
use this

73
00:05:24,960 --> 00:05:32,520
protocol and not know who we're talking to",
so this is

74
00:05:32,520 --> 00:05:36,050
for a way for the phone to know: okay, am
I actually

75
00:05:36,050 --> 00:05:49,340
talking to an Apple device here?

76
00:05:49,340 --> 00:05:54,539
This happened in 2011, somebody got the private
key

77
00:05:54,539 --> 00:06:01,880
of off an Apple TV, so that's nice.

78
00:06:01,880 --> 00:06:04,220
So now we can
figure out what's going on.

79
00:06:04,220 --> 00:06:07,849
This is setting a challenge
encrypted using the port key, and we have

80
00:06:07,849 --> 00:06:13,160
to decrypt it
and then have to add to, and past that on

81
00:06:13,160 --> 00:06:17,070
32 bit, and
then we have to add the IP of the server and

82
00:06:17,070 --> 00:06:20,350
the Mac
address of the server, and encrypt that with

83
00:06:20,350 --> 00:06:23,990
the private
key, send it back to the phone, and the phone

84
00:06:23,990 --> 00:06:27,060
is going
to be like: "Cool, you're a proper Apple device.

85
00:06:27,060 --> 00:06:30,360
I trust you."

86
00:06:30,360 --> 00:06:34,879
And then it will send a request, basically
saying:

87
00:06:34,879 --> 00:06:38,150
I'm about to play something to you, and this
is the

88
00:06:38,150 --> 00:06:44,919
codec, and I'm using these bit rates", and
stuff like

89
00:06:44,919 --> 00:06:45,919
that.

90
00:06:45,919 --> 00:06:48,000
And the server will be like: cool.

91
00:06:48,000 --> 00:06:52,509
And it will
be like: okay, I'm almost -- I forgot what

92
00:06:52,509 --> 00:06:57,699
it was
sending here, but it was some extra information,

93
00:06:57,699 --> 00:07:00,139
whatever.

94
00:07:00,139 --> 00:07:03,190
And then it's going to be like: "Okay,
record."

95
00:07:03,190 --> 00:07:07,389
Because it is kind of like this was something
that was built, the RTSP protocol is from

96
00:07:07,389 --> 00:07:11,599
the nineties,
so it is thinking in terms of record and pause

97
00:07:11,599 --> 00:07:16,800
and
rewind, so it is going to send a record request,

98
00:07:16,800 --> 00:07:18,520
and the
server is going to be: cool.

99
00:07:18,520 --> 00:07:21,630
This is all over TCP.

100
00:07:21,630 --> 00:07:25,199
And
then everything is set up, oh yeah, the set-up

101
00:07:25,199 --> 00:07:28,580
thing was
to set up the ports, because now we're going

102
00:07:28,580 --> 00:07:32,090
to switch
to UDP, because it's going to be like you've

103
00:07:32,090 --> 00:07:34,750
got to
output a lot of high quality data, it is going

104
00:07:34,750 --> 00:07:36,539
to be
really fast.

105
00:07:36,539 --> 00:07:39,729
So it is going to set up three different
ports that it's going to listen to, that's

106
00:07:39,729 --> 00:07:41,610
what the
set-up request is for.

107
00:07:41,610 --> 00:07:45,690
On the first port it will send
raw audio packets using UDP.

108
00:07:45,690 --> 00:07:50,720
On the second port it will
send control packets to say: hey, we need

109
00:07:50,720 --> 00:07:54,639
to do this or
this, and the server can also send control

110
00:07:54,639 --> 00:07:58,389
packets back
to say, "Oh, I didn't get that piece of audio,

111
00:07:58,389 --> 00:08:00,570
please
resend it."

112
00:08:00,570 --> 00:08:05,030
And it will also send a heartbeat every three
seconds saying: hey, this is my time, so you

113
00:08:05,030 --> 00:08:08,199
can sync
multiple speakers in the room, and have them

114
00:08:08,199 --> 00:08:12,770
play in
sync.

115
00:08:12,770 --> 00:08:15,680
Then you should have audio, right?

116
00:08:15,680 --> 00:08:18,090
Not really.

117
00:08:18,090 --> 00:08:20,820
Because of this, again, so of course they
encrypted all

118
00:08:20,820 --> 00:08:27,419
the video and they encrypted, it is really,
really -- I

119
00:08:27,419 --> 00:08:31,379
can't say that word here -- stupid.

120
00:08:31,379 --> 00:08:39,200
And trust me, I
spent a lot of time figuring out exactly what

121
00:08:39,200 --> 00:08:42,361
should
be -- how to decrypt this audio, because it

122
00:08:42,361 --> 00:08:44,520
is not
encrypted normally, but still using the same

123
00:08:44,520 --> 00:08:47,550
key, but
you have to decrypt it in 16 byte segments,

124
00:08:47,550 --> 00:08:54,160
and not the
last, and then you have audio.

125
00:08:54,160 --> 00:08:58,100
Not quite, because well,
you have audio, but it is in ALAC, because

126
00:08:58,100 --> 00:09:02,640
if you have
a modern phone or new version of iTunes it

127
00:09:02,640 --> 00:09:07,070
will send it
in ALAC, which is Apple looseless(?) and they

128
00:09:07,070 --> 00:09:11,709
sourced
that in 2011, so that is cool, but it is usually

129
00:09:11,709 --> 00:09:13,610
the
player is used to having it in a container

130
00:09:13,610 --> 00:09:14,610
format.

131
00:09:14,610 --> 00:09:16,450
So
M-peg or something, and this is without the

132
00:09:16,450 --> 00:09:19,950
container
format, so this is why we sent the request

133
00:09:19,950 --> 00:09:20,950
previously.

134
00:09:20,950 --> 00:09:26,470
It will tell us: hey, this is like the bit
rate and all

135
00:09:26,470 --> 00:09:29,140
the stuff, and there's a magic cookie you
need to set.

136
00:09:29,140 --> 00:09:31,779
It is really weird.

137
00:09:31,779 --> 00:09:37,180
You can't just play this normally;
you have to figure out a way to interpret

138
00:09:37,180 --> 00:09:39,460
this ALAC
data.

139
00:09:39,460 --> 00:09:46,500
That was a lot of theory.

140
00:09:46,500 --> 00:09:52,870
But basically RAOP
uses the RAOP client, and server uses four

141
00:09:52,870 --> 00:09:59,990
different
ports some for UDP, some for HTTP RSP, and

142
00:09:59,990 --> 00:10:02,560
they kind of
follow the standards, all of these are backed

143
00:10:02,560 --> 00:10:06,170
by RFCs
but of course Apple changed the last two a

144
00:10:06,170 --> 00:10:10,529
bit, so they
are not really the follow the RFC, and AirPlay

145
00:10:10,529 --> 00:10:15,750
is way
easier is AirPlay over port 7,000 using HTTP.

146
00:10:15,750 --> 00:10:17,420
Thank
you.

147
00:10:17,420 --> 00:10:21,870
And then NTP for screen sharing and syncing
the

148
00:10:21,870 --> 00:10:26,560
sound and video.

149
00:10:26,560 --> 00:10:28,250
And a lot of stuff about protocols.

150
00:10:28,250 --> 00:10:32,670
I thought I'm
going to do this, and it's going to be easy.

151
00:10:32,670 --> 00:10:33,940
And I'm
like: woah.

152
00:10:33,940 --> 00:10:38,760
All of these have an RFC behind them, and
I've been really good at reading RFCs.

153
00:10:38,760 --> 00:10:41,710
Really good.

154
00:10:41,710 --> 00:10:43,399
And these are just like the tip of the iceberg,
all the

155
00:10:43,399 --> 00:10:46,050
audio codec stuff is not here, and video codec
stuff is

156
00:10:46,050 --> 00:10:51,230
not here, so luckily I was not the first one
to do this.

157
00:10:51,230 --> 00:10:53,760
Somebody else already reverse engineered the
protocol

158
00:10:53,760 --> 00:10:57,760
back in 2011, thank you.

159
00:10:57,760 --> 00:11:01,790
But play have changed it a lot
since, so I need to buy this router, I can

160
00:11:01,790 --> 00:11:06,310
do a man in
the middle attack, and on the Apple TV and

161
00:11:06,310 --> 00:11:10,120
I use wire
shock to listen to the packages and stuff.

162
00:11:10,120 --> 00:11:12,790
It is fun.

163
00:11:12,790 --> 00:11:13,940
So getting to the code.

164
00:11:13,940 --> 00:11:14,940
Npm.

165
00:11:14,940 --> 00:11:16,180
I like npm, it is
amazing.

166
00:11:16,180 --> 00:11:19,579
I love npm.

167
00:11:19,579 --> 00:11:25,730
All of this effort I've put into
doing this have resulted in a lot of small

168
00:11:25,730 --> 00:11:28,610
modules that
can be mixed and matched, because I don't

169
00:11:28,610 --> 00:11:32,210
just want to
play or create like an AirPlay server that

170
00:11:32,210 --> 00:11:36,200
you npm
install AirPlay, and then just like have this

171
00:11:36,200 --> 00:11:38,959
magic box
and everything works inside it.

172
00:11:38,959 --> 00:11:42,870
The reason I originally
started doing this was because I wanted you

173
00:11:42,870 --> 00:11:47,040
guys to
figure out fun stuff to do with this.

174
00:11:47,040 --> 00:11:51,560
So all this stuff
has been broken down into small modules that

175
00:11:51,560 --> 00:11:54,830
you can do
depending -- you can use depending on what

176
00:11:54,830 --> 00:11:58,250
you actually
are trying to achieve.

177
00:11:58,250 --> 00:12:03,320
This is just some of them.

178
00:12:03,320 --> 00:12:08,410
So
now it's going to be interesting.

179
00:12:08,410 --> 00:12:14,660
I'm going to take the film first here, and
then I'm

180
00:12:14,660 --> 00:12:16,550
going to, let's see.

181
00:12:16,550 --> 00:12:19,380
How do we do like this?

182
00:12:19,380 --> 00:12:20,380
Yeah?

183
00:12:20,380 --> 00:12:25,520
And then hey, can you wave?

184
00:12:25,520 --> 00:12:27,560
Thank you.

185
00:12:27,560 --> 00:12:29,430
Okay.

186
00:12:29,430 --> 00:12:35,600
So is
this on the screen somewhere?

187
00:12:35,600 --> 00:12:39,279
There it is.

188
00:12:39,279 --> 00:12:40,279
Perfect.

189
00:12:40,279 --> 00:12:47,370
So let's go -- oh, some.

190
00:12:47,370 --> 00:12:55,430
There we are.

191
00:12:55,430 --> 00:13:06,160
Can you see that?

192
00:13:06,160 --> 00:13:08,850
Cool.

193
00:13:08,850 --> 00:13:14,020
So what I'm
going to do is start aircat, and I'm going

194
00:13:14,020 --> 00:13:21,959
to pipe it to
Foo.jpeg.

195
00:13:21,959 --> 00:13:23,550
This is going to be really interesting.

196
00:13:23,550 --> 00:13:24,610
Is
this still on the right network?

197
00:13:24,610 --> 00:13:26,529
I hope it is.

198
00:13:26,529 --> 00:13:31,420
So now
I have the picture here, and what I'm going

199
00:13:31,420 --> 00:13:35,240
to try to do
is -- I'm not in the right network.

200
00:13:35,240 --> 00:13:36,240
Something is wrong.

201
00:13:36,240 --> 00:13:37,240
Let's see.

202
00:13:37,240 --> 00:13:38,310
This is what I feared.

203
00:13:38,310 --> 00:13:43,070
I am a Watson, yes.

204
00:13:43,070 --> 00:13:44,190
Okay.

205
00:13:44,190 --> 00:13:45,310
Yeah.

206
00:13:45,310 --> 00:13:49,230
I feared this would happen.

207
00:13:49,230 --> 00:13:53,860
So of course
this is a demo.

208
00:13:53,860 --> 00:13:58,519
What is supposed to happen is that I
should be able to magically transfer this

209
00:13:58,519 --> 00:14:00,820
photo from my
phone to computer, which is something you

210
00:14:00,820 --> 00:14:03,680
always kind of
have your phone and you have a photo on it,

211
00:14:03,680 --> 00:14:09,079
and you want
to transfer it to the computer, and it is

212
00:14:09,079 --> 00:14:14,430
always like
a pain in the backside.

213
00:14:14,430 --> 00:14:18,120
But apparently my phone is not
picking up my computer.

214
00:14:18,120 --> 00:14:22,199
So we're going to -- I can't
show that right now, unfortunately.

215
00:14:22,199 --> 00:14:23,690
What can be wrong?

216
00:14:23,690 --> 00:14:25,060
Let's see.

217
00:14:25,060 --> 00:14:29,710
Let's do a quick check here.

218
00:14:29,710 --> 00:14:35,990
Mm, yeah.

219
00:14:35,990 --> 00:14:37,290
All
this set-up for nothing.

220
00:14:37,290 --> 00:14:39,350
At least I got a picture.

221
00:14:39,350 --> 00:14:40,350
Laughter].

222
00:14:40,350 --> 00:14:44,370
Remember, drink more water.

223
00:14:44,370 --> 00:14:46,700
Okay.

224
00:14:46,700 --> 00:14:48,070
No fear, no fear.

225
00:14:48,070 --> 00:14:52,040
We can do stuff from the computer
too.

226
00:14:52,040 --> 00:14:54,670
So this what I did last night.

227
00:14:54,670 --> 00:14:59,269
So, the wi-fi is
not working, we're now going to work on -- I

228
00:14:59,269 --> 00:15:05,850
can show
you something that I did last night at 3 o'clock.

229
00:15:05,850 --> 00:15:10,820
So,
back to demo.

230
00:15:10,820 --> 00:15:22,899
I made this route RSP -- I'm sorry, that
name is not that good, but it was quick.

231
00:15:22,899 --> 00:15:36,420
So the idea is
that we set up a server and it will -- I'm

232
00:15:36,420 --> 00:15:40,519
just enabling
debugging mode, which is advertising using

233
00:15:40,519 --> 00:15:46,631
MDNS, I just
realised the clock is not ticking down on

234
00:15:46,631 --> 00:15:47,779
the right-hand
corner there.

235
00:15:47,779 --> 00:15:51,029
I have no idea how much time I have left.

236
00:15:51,029 --> 00:15:54,800
Apparently it is 27 minutes.

237
00:15:54,800 --> 00:15:55,800
Cool.

238
00:15:55,800 --> 00:15:58,589
So, now it is running, so we're going to go
to

239
00:15:58,589 --> 00:16:02,050
iTunes.

240
00:16:02,050 --> 00:16:12,860
And I found some royalty-free music, and iTunes
now, yeah, you zoom like this.

241
00:16:12,860 --> 00:16:18,250
So iTunes now have this,
the name of this speaker that I just set up.

242
00:16:18,250 --> 00:16:25,630
And, okay,
I'm going to play it.

243
00:16:25,630 --> 00:16:36,230
And nothing happens right now
because -- woah -- oh yeah, I'm zoomed in.

244
00:16:36,230 --> 00:16:38,139
That was
why.

245
00:16:38,139 --> 00:16:39,699
Thank you.

246
00:16:39,699 --> 00:16:40,750


247
00:16:40,750 --> 00:16:43,009
So it is sending a lot of
control mechanisms back and forth and right

248
00:16:43,009 --> 00:16:44,850
now
I haven't redirected the output anywhere,

249
00:16:44,850 --> 00:16:46,269
so we can't
hear the audio.

250
00:16:46,269 --> 00:16:48,170
This is on purpose.

251
00:16:48,170 --> 00:16:51,100
I'm going to stop
this.

252
00:16:51,100 --> 00:16:55,610
And then I'm going to use, I'm going to redirect
to standard out, then we use another programme

253
00:16:55,610 --> 00:17:02,839
called
SoX

254
00:17:02,839 --> 00:17:06,300
which is, it's like the only program I've
found that

255
00:17:06,300 --> 00:17:13,100
can actually play back this raw ALAC format.

256
00:17:13,100 --> 00:17:18,050
So it
started, it is waiting for data.

257
00:17:18,050 --> 00:17:21,320
And.

258
00:17:21,320 --> 00:17:27,850
[music plays].

259
00:17:27,850 --> 00:17:31,120
applause].

260
00:17:31,120 --> 00:17:35,380
It is beautiful.

261
00:17:35,380 --> 00:17:40,180
And I can press pause and it
pauses.

262
00:17:40,180 --> 00:17:44,130
This is on the fly, sending data from iTunes
to

263
00:17:44,130 --> 00:17:46,000
a server on the network that happens to be
on my

264
00:17:46,000 --> 00:17:49,640
computer, doesn't matter, streaming out raw
ALAC to

265
00:17:49,640 --> 00:17:54,560
standard out, SOX is reading it from standard
in, and

266
00:17:54,560 --> 00:17:58,940
playing it back using audio.

267
00:17:58,940 --> 00:18:00,450
So it is like okay, job
done.

268
00:18:00,450 --> 00:18:03,900
It is now one o'clock at night, and I was
like:

269
00:18:03,900 --> 00:18:06,800
mm, I wonder what else you could do?

270
00:18:06,800 --> 00:18:10,850
Then I thought
back to note conference a couple of weeks

271
00:18:10,850 --> 00:18:16,880
back, me and
Matthias Mackintosh on github, and we were

272
00:18:16,880 --> 00:18:20,770
talking about
how you can do live dreaming of torrents,

273
00:18:20,770 --> 00:18:23,600
and I'm not an
expert, he is the live streaming torrent expert,

274
00:18:23,600 --> 00:18:26,930
those
of you who know him know that.

275
00:18:26,930 --> 00:18:31,460
He is in the States
right now, so I looked him up and said: hey,

276
00:18:31,460 --> 00:18:34,380
we should
really make this thing work with torrents

277
00:18:34,380 --> 00:18:40,090
because then
what we can do is we could put an Internet

278
00:18:40,090 --> 00:18:44,170
bubble in
between the playing devices and the output

279
00:18:44,170 --> 00:18:50,330
devices, then
we can just stream this all over the Internet.

280
00:18:50,330 --> 00:18:52,830
So we
did that.

281
00:18:52,830 --> 00:18:58,370
From one to three.

282
00:18:58,370 --> 00:18:59,370
So let's see.

283
00:18:59,370 --> 00:19:03,820
What I'm
going to do now is I'm going to just open

284
00:19:03,820 --> 00:19:07,750
another
console here, but this, you have to believe

285
00:19:07,750 --> 00:19:14,980
me, could
work across the Internet.

286
00:19:14,980 --> 00:19:17,870
Okay.

287
00:19:17,870 --> 00:19:24,170
So he made this
wonderful thing called peervision, and there

288
00:19:24,170 --> 00:19:28,180
was a seal
called peervisionary, which basically allows

289
00:19:28,180 --> 00:19:32,160
you to live
stream torrents, which is tricky if you think

290
00:19:32,160 --> 00:19:35,150
about it
because torrents, you can't change the content

291
00:19:35,150 --> 00:19:38,170
of
a torrent, that doesn't work any more, you

292
00:19:38,170 --> 00:19:42,440
have to
produce a new one, but this works using some

293
00:19:42,440 --> 00:19:48,150
clever
stuff that he can tell you about.

294
00:19:48,150 --> 00:19:50,070
What is it called?

295
00:19:50,070 --> 00:19:53,320
Something with curves and encryption.

296
00:19:53,320 --> 00:20:01,510
So, shall we
remove the debug flag here?

297
00:20:01,510 --> 00:20:03,720
No let's keep it here.

298
00:20:03,720 --> 00:20:10,660
We
tried to use this debug the data, but it is

299
00:20:10,660 --> 00:20:11,660
not
necessary.

300
00:20:11,660 --> 00:20:14,830
The hotel Internet was really slow.

301
00:20:14,830 --> 00:20:19,200
So
peervision will give me -- basically, if you're

302
00:20:19,200 --> 00:20:22,270
familiar
with magnet link in torrents, this is my magnet

303
00:20:22,270 --> 00:20:25,870
link,
now a private key that we can use, and now

304
00:20:25,870 --> 00:20:41,400
it says the
DHT is ready, and let's play that.

305
00:20:41,400 --> 00:20:51,140
Now we attach a peer
to the swarm, like this, and then we go in

306
00:20:51,140 --> 00:20:54,000
to play the
music.

307
00:20:54,000 --> 00:21:01,390
Then hopefully it is just going to buffer
a little bit and use the Internet -- what

308
00:21:01,390 --> 00:21:06,340
are you
saying?

309
00:21:06,340 --> 00:21:10,360
FROM THE FLOOR: You're using the wrong peervision.

310
00:21:10,360 --> 00:21:18,560
THOMAS: Oh yeah, don't reuse the -- okay.

311
00:21:18,560 --> 00:21:25,400
It is like these.

312
00:21:25,400 --> 00:21:27,110
Woah.

313
00:21:27,110 --> 00:21:39,790
Okay. [music plays]
And the cool thing about this is now that

314
00:21:39,790 --> 00:21:44,290
my --
thank you, sound guy.

315
00:21:44,290 --> 00:21:49,670
Now that my peer is actively
streaming this and receiving it, what I can

316
00:21:49,670 --> 00:22:00,980
do is I can
join like a new peer to the network

317
00:22:00,980 --> 00:22:03,590
and they will all
-- it sounds terrible -- but they will all

318
00:22:03,590 --> 00:22:09,410
now both play
the same audio, and they will all help each

319
00:22:09,410 --> 00:22:16,880
other stream
the packets so that the more people who join,

320
00:22:16,880 --> 00:22:23,900
the less
load it is on the server, just like this.

321
00:22:23,900 --> 00:22:26,640
music stops].

322
00:22:26,640 --> 00:22:28,010
[applause].

323
00:22:28,010 --> 00:22:37,590
How much time do I have left?

324
00:22:37,590 --> 00:22:40,330
Two minutes?

325
00:22:40,330 --> 00:22:41,700
Okay.

326
00:22:41,700 --> 00:22:46,470
It's terrible that this thing didn't work,
but what are

327
00:22:46,470 --> 00:22:47,470
you going to do?

328
00:22:47,470 --> 00:22:51,460
You do some torrent stuff instead,
right?

329
00:22:51,460 --> 00:22:52,640
Live streaming torrents.

330
00:22:52,640 --> 00:22:53,640
Awesome.

331
00:22:53,640 --> 00:22:55,950
So, thank
you.

