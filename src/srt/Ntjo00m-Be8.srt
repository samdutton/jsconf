1
00:00:18,170 --> 00:00:21,689

before I start I would like to offer my

2
00:00:21,689 --> 00:00:23,880
condolences for the people who are

3
00:00:23,880 --> 00:00:27,480
suffered from the typhoon Yolanda my

4
00:00:27,480 --> 00:00:30,480
sincere sympathy for the numerous people

5
00:00:30,480 --> 00:00:32,579
who are effected affected by the

6
00:00:32,579 --> 00:00:41,730
disaster okay my name is AG Tamra as he

7
00:00:41,730 --> 00:00:44,850
explained I'm a developer i will get

8
00:00:44,850 --> 00:00:47,820
working at Google mainly focusing on

9
00:00:47,820 --> 00:00:51,390
chrome and open open web stuff and I'm

10
00:00:51,390 --> 00:00:54,660
based in Tokyo in Japan and yeah I'm

11
00:00:54,660 --> 00:00:56,160
working on various things that's

12
00:00:56,160 --> 00:01:00,120
happening in the browser front end okay

13
00:01:00,120 --> 00:01:03,149
so today I'm going to talk about how to

14
00:01:03,149 --> 00:01:06,390
make the mobile web faster so how many

15
00:01:06,390 --> 00:01:08,729
people in this room have actually had a

16
00:01:08,729 --> 00:01:12,750
mobile phone everyone right everyone

17
00:01:12,750 --> 00:01:17,610
right so um where do you use your use

18
00:01:17,610 --> 00:01:21,600
your phone I'm sure you use it at home

19
00:01:21,600 --> 00:01:24,960
right in office and maybe sheer and

20
00:01:24,960 --> 00:01:28,170
while you are walking and maybe in the

21
00:01:28,170 --> 00:01:31,530
toilet something that's unusual for

22
00:01:31,530 --> 00:01:34,440
people who are living outside of Japan

23
00:01:34,440 --> 00:01:38,790
is that we can actually use the phones

24
00:01:38,790 --> 00:01:43,350
in the subways right I mean subway not

25
00:01:43,350 --> 00:01:46,710
observe patience but on the train in

26
00:01:46,710 --> 00:01:49,409
between the stations which is moving

27
00:01:49,409 --> 00:01:52,770
right so Japanese mobile phone carriers

28
00:01:52,770 --> 00:01:56,340
enabled the mobile base station

29
00:01:56,340 --> 00:02:00,150
underground so we can use data

30
00:02:00,150 --> 00:02:03,540
connectivity in between the stations and

31
00:02:03,540 --> 00:02:07,290
we can still surf the web using the

32
00:02:07,290 --> 00:02:10,890
mobile phones isn't this amazing so it's

33
00:02:10,890 --> 00:02:14,069
like like I have one hour commute from

34
00:02:14,069 --> 00:02:17,480
my home to the office and half of my

35
00:02:17,480 --> 00:02:20,750
communities like on train and it has

36
00:02:20,750 --> 00:02:23,520
data connectivity all the time one

37
00:02:23,520 --> 00:02:26,700
hundred percent but I still have a

38
00:02:26,700 --> 00:02:28,800
problem because

39
00:02:28,800 --> 00:02:31,500
when the train is moving even if we have

40
00:02:31,500 --> 00:02:34,590
data connectivity it's not very very

41
00:02:34,590 --> 00:02:38,010
stable and sometimes it gets flaky or

42
00:02:38,010 --> 00:02:45,510
sluggish so is it's a destiny for you

43
00:02:45,510 --> 00:02:47,690
know you know the mobile devices

44
00:02:47,690 --> 00:02:51,330
comparing to desktop there on the mobile

45
00:02:51,330 --> 00:02:54,260
phone the data connectivity is very

46
00:02:54,260 --> 00:02:59,640
flaky so what can we do as a developer

47
00:02:59,640 --> 00:03:03,680
to solve that kind of problem so

48
00:03:03,680 --> 00:03:06,270
comparing to desktop the mobile phone

49
00:03:06,270 --> 00:03:12,080
has a very thin connectivity that data

50
00:03:12,080 --> 00:03:14,940
amount of data needs to be loaded to the

51
00:03:14,940 --> 00:03:17,720
mobile phone next time so as a developer

52
00:03:17,720 --> 00:03:22,110
we can build a website that's the

53
00:03:22,110 --> 00:03:25,620
optimized for mobile website that's what

54
00:03:25,620 --> 00:03:32,430
I'm going to talk about today so I'd

55
00:03:32,430 --> 00:03:34,650
like to show you some techniques how to

56
00:03:34,650 --> 00:03:37,050
optimize and increase performance of

57
00:03:37,050 --> 00:03:39,390
your mobile website today so I've been

58
00:03:39,390 --> 00:03:43,050
working closely with a team that's

59
00:03:43,050 --> 00:03:46,800
dedicated to the website performance as

60
00:03:46,800 --> 00:03:50,730
well as team that's working on the

61
00:03:50,730 --> 00:03:53,970
google mobile search in japan and also

62
00:03:53,970 --> 00:03:57,180
external developers who are working on

63
00:03:57,180 --> 00:04:02,440
performance

64
00:04:02,450 --> 00:04:07,790
so one second do you think one second is

65
00:04:07,790 --> 00:04:13,099
long or short it depends on people right

66
00:04:13,099 --> 00:04:16,040
some people say long and some people say

67
00:04:16,040 --> 00:04:18,709
short it depends on the context how

68
00:04:18,709 --> 00:04:21,260
about 100 millisecond is it long or

69
00:04:21,260 --> 00:04:27,470
short so let me show you something I'm

70
00:04:27,470 --> 00:04:30,340
going to show you a spinning chrome icon

71
00:04:30,340 --> 00:04:34,160
to spinning chrome icons that shows up

72
00:04:34,160 --> 00:04:38,330
for 1000 millisecond and the other one

73
00:04:38,330 --> 00:04:41,510
is nine nine hundred millisecond and

74
00:04:41,510 --> 00:04:47,960
let's compare which is longer which is

75
00:04:47,960 --> 00:04:55,060
longer let me try once again this and

76
00:04:55,060 --> 00:04:59,460
this which is longer

77
00:04:59,470 --> 00:05:06,010
did you get it actually to be honest I

78
00:05:06,010 --> 00:05:10,360
did a little cheat here so the icon on

79
00:05:10,360 --> 00:05:13,240
the left hand side said it's 1000 meter

80
00:05:13,240 --> 00:05:15,670
second but it actually showed that nine

81
00:05:15,670 --> 00:05:17,770
hundred millisecond and the other one on

82
00:05:17,770 --> 00:05:20,740
the right hand side it showed up one

83
00:05:20,740 --> 00:05:22,570
southern Michigan although the Texas

84
00:05:22,570 --> 00:05:24,730
says it's a nine hundred millisecond so

85
00:05:24,730 --> 00:05:26,410
it's really difficult to tell the

86
00:05:26,410 --> 00:05:29,500
difference of the 100 millisecond right

87
00:05:29,500 --> 00:05:31,600
so it's very very difficult to tell the

88
00:05:31,600 --> 00:05:34,600
difference but what is a point to

89
00:05:34,600 --> 00:05:36,850
optimize the website to eliminate that

90
00:05:36,850 --> 00:05:42,340
one hundred millisecond this is a report

91
00:05:42,340 --> 00:05:46,060
from our research team at Google a few

92
00:05:46,060 --> 00:05:49,600
years back this shows how small delays

93
00:05:49,600 --> 00:05:53,530
affect humans behavior so in this

94
00:05:53,530 --> 00:05:55,450
research we have picked up random number

95
00:05:55,450 --> 00:05:58,570
of people users and we inserted

96
00:05:58,570 --> 00:06:02,440
arbitrary delay between page load times

97
00:06:02,440 --> 00:06:05,440
and for a few weeks don't worry too much

98
00:06:05,440 --> 00:06:08,740
about the which part we inserted the

99
00:06:08,740 --> 00:06:11,650
delay but the important thing is that it

100
00:06:11,650 --> 00:06:14,800
actually caused users behavior by

101
00:06:14,800 --> 00:06:18,040
inserting that delay for example if you

102
00:06:18,040 --> 00:06:21,729
look at the role from second from the

103
00:06:21,729 --> 00:06:25,210
bottom it is inserting four hundred

104
00:06:25,210 --> 00:06:28,300
millisecond delay and for six weeks

105
00:06:28,300 --> 00:06:32,490
after that the users with that delay

106
00:06:32,490 --> 00:06:36,430
decrease the number of searches by zero

107
00:06:36,430 --> 00:06:42,729
point fifty-nine percent how about 100

108
00:06:42,729 --> 00:06:45,990
millisecond we we were not quite able to

109
00:06:45,990 --> 00:06:49,180
detect the difference right so second

110
00:06:49,180 --> 00:06:52,030
from the top says that a delay with a

111
00:06:52,030 --> 00:06:55,229
100 millisecond and for four weeks and

112
00:06:55,229 --> 00:07:01,000
you know surprisingly people did 0.2

113
00:07:01,000 --> 00:07:05,250
percent less searches comparing to the

114
00:07:05,250 --> 00:07:10,270
without the delay this mean that you

115
00:07:10,270 --> 00:07:13,259
actually know the difference

116
00:07:13,259 --> 00:07:17,949
unconsciously even you don't detect the

117
00:07:17,949 --> 00:07:21,599
difference by you know by brain that it

118
00:07:21,599 --> 00:07:24,669
you know the difference so you react to

119
00:07:24,669 --> 00:07:30,789
the delay so it makes sense to optimize

120
00:07:30,789 --> 00:07:33,580
your website much much faster it you

121
00:07:33,580 --> 00:07:37,810
know even slightly so now we have a

122
00:07:37,810 --> 00:07:42,400
reason to optimize your website how can

123
00:07:42,400 --> 00:07:44,710
we make the mobile website web site

124
00:07:44,710 --> 00:07:48,669
faster than now before God with before

125
00:07:48,669 --> 00:07:52,690
we go deep dive deep into the concrete

126
00:07:52,690 --> 00:07:54,819
techniques I'd like to review some basic

127
00:07:54,819 --> 00:08:02,380
stuff first thing is cash so let me

128
00:08:02,380 --> 00:08:28,580
bring up Jess conf website sure

129
00:08:28,590 --> 00:08:31,440
what you are looking at is a chrome

130
00:08:31,440 --> 00:08:33,840
devtools open up on the right hand side

131
00:08:33,840 --> 00:08:39,660
and by clicking on the network tab you

132
00:08:39,660 --> 00:08:42,090
will see all the list of resources that

133
00:08:42,090 --> 00:08:49,440
are loaded to this website by looking at

134
00:08:49,440 --> 00:08:52,440
the column called status you will see

135
00:08:52,440 --> 00:08:56,580
numbers of HTTP response and if you see

136
00:08:56,580 --> 00:08:59,370
200 that mean that the server is

137
00:08:59,370 --> 00:09:05,670
responding with full content but if you

138
00:09:05,670 --> 00:09:13,980
rewrote the page

139
00:09:13,990 --> 00:09:17,800
and if the cash is available you should

140
00:09:17,800 --> 00:09:20,470
see some responses with three or four

141
00:09:20,470 --> 00:09:23,529
which means that Sabah responded with

142
00:09:23,529 --> 00:09:27,459
that okay you brother how to cash so you

143
00:09:27,459 --> 00:09:29,290
can use that cash instead of the

144
00:09:29,290 --> 00:09:32,550
response i'm going to give right so the

145
00:09:32,550 --> 00:09:35,380
the interaction between server and

146
00:09:35,380 --> 00:09:38,410
browser is much faster and sometimes you

147
00:09:38,410 --> 00:09:41,890
will see response with 200 with great

148
00:09:41,890 --> 00:09:45,160
text this means that browser knows that

149
00:09:45,160 --> 00:09:47,890
okay i don't even have to ask the

150
00:09:47,890 --> 00:09:51,850
Thurber that I need if I i if i should

151
00:09:51,850 --> 00:09:54,459
use cash or not rather know that i can

152
00:09:54,459 --> 00:09:58,360
use this cash so there's no interaction

153
00:09:58,360 --> 00:10:01,170
between browser and server for that case

154
00:10:01,170 --> 00:10:04,240
if you are not sure you can just look

155
00:10:04,240 --> 00:10:12,100
into the by clicking on the resource you

156
00:10:12,100 --> 00:10:17,770
and look at the server header you will

157
00:10:17,770 --> 00:10:20,680
see the response header with cash

158
00:10:20,680 --> 00:10:23,500
control or etag last modified these are

159
00:10:23,500 --> 00:10:25,120
indication of that the rubber is

160
00:10:25,120 --> 00:10:30,250
responding with good indication cash I'm

161
00:10:30,250 --> 00:10:33,660
not going deep about this thing but

162
00:10:33,660 --> 00:10:36,279
please make sure that you have cash

163
00:10:36,279 --> 00:10:43,480
enabled and also it's important to

164
00:10:43,480 --> 00:10:47,589
enable compression there are

165
00:10:47,589 --> 00:10:49,510
surprisingly a lot of side that doesn't

166
00:10:49,510 --> 00:10:51,790
have a compression enabled so make sure

167
00:10:51,790 --> 00:10:55,329
that your response header have content

168
00:10:55,329 --> 00:10:57,700
and coding gzip or something like that

169
00:10:57,700 --> 00:11:02,320
that's you know done by web server so

170
00:11:02,320 --> 00:11:05,860
that the amount of size of the content

171
00:11:05,860 --> 00:11:10,899
will be compressed and transferred to

172
00:11:10,899 --> 00:11:16,269
the browser

173
00:11:16,279 --> 00:11:19,410
ok now we we have the very basic stuff

174
00:11:19,410 --> 00:11:22,470
right from here on I'm going a little

175
00:11:22,470 --> 00:11:29,129
deeper how to optimize your site this

176
00:11:29,129 --> 00:11:32,699
figure is actually taken from a website

177
00:11:32,699 --> 00:11:37,019
called HTTP archive org the number is

178
00:11:37,019 --> 00:11:39,839
tracked by throwing Alexa top 1 million

179
00:11:39,839 --> 00:11:43,169
sites on the Internet this one shows the

180
00:11:43,169 --> 00:11:45,149
breakdown of components website

181
00:11:45,149 --> 00:11:47,669
component sites by content type as you

182
00:11:47,669 --> 00:11:50,279
can see there are script style sheets

183
00:11:50,279 --> 00:11:54,089
flash HTML images and other others and

184
00:11:54,089 --> 00:11:58,109
as you can see the significant

185
00:11:58,109 --> 00:12:02,869
significant part of this graph is images

186
00:12:02,869 --> 00:12:09,529
more than half this means that if you

187
00:12:09,529 --> 00:12:13,559
could optimize images and reduce its

188
00:12:13,559 --> 00:12:18,820
size you win

189
00:12:18,830 --> 00:12:23,430
so how can we optimize image sizes one

190
00:12:23,430 --> 00:12:26,180
way in one way you can do is to shrink

191
00:12:26,180 --> 00:12:30,350
or compress father as much as possible

192
00:12:30,350 --> 00:12:34,470
but we are already using formats like

193
00:12:34,470 --> 00:12:38,460
jpeg gifts and pins right we're already

194
00:12:38,460 --> 00:12:41,600
compressed can we converse father

195
00:12:41,600 --> 00:12:45,390
actually you may be able to do so what

196
00:12:45,390 --> 00:12:51,240
I'm going to demo here is to show you to

197
00:12:51,240 --> 00:12:55,770
use a tool called image of team let me

198
00:12:55,770 --> 00:13:00,780
show you image of them it's free tool

199
00:13:00,780 --> 00:13:08,640
you can download from internet and I'm

200
00:13:08,640 --> 00:13:10,710
going to pick up one image from jess

201
00:13:10,710 --> 00:13:18,390
conf website and see let me see how how

202
00:13:18,390 --> 00:13:26,970
far it can shrink the size

203
00:13:26,980 --> 00:13:35,560
so okay i'm going to use this image

204
00:13:35,570 --> 00:13:37,610
I don't know where this image is used

205
00:13:37,610 --> 00:13:43,190
but it's on the website so let me find

206
00:13:43,190 --> 00:13:51,080
my finder wow they're so wonder if I can

207
00:13:51,080 --> 00:13:55,880
drag and drop this image onto there you

208
00:13:55,880 --> 00:14:03,860
go so we now have this image and type

209
00:14:03,860 --> 00:14:09,879
size up

210
00:14:09,889 --> 00:14:16,929
size of this image is now 387 kilobytes

211
00:14:16,929 --> 00:14:24,049
then what I'm going to do is to use this

212
00:14:24,049 --> 00:14:29,179
tool by drag and drop and see how small

213
00:14:29,179 --> 00:14:34,590
it can get

214
00:14:34,600 --> 00:14:42,439
so it takes a little while is it working

215
00:14:42,449 --> 00:14:52,960
yeah it should be working so

216
00:14:52,970 --> 00:14:54,649
so

217
00:14:54,649 --> 00:14:58,339
now it should be you should have reduced

218
00:14:58,339 --> 00:15:14,050
its size it saved 56.4 percent so far

219
00:15:14,060 --> 00:15:20,100
let me see

220
00:15:20,110 --> 00:15:24,100
it takes too long anyway this image

221
00:15:24,100 --> 00:15:27,070
could reduce the size significant we

222
00:15:27,070 --> 00:15:33,850
write so its original size was 387

223
00:15:33,850 --> 00:15:39,640
kilowatt but it's now go down to about

224
00:15:39,640 --> 00:15:44,769
like 170 kilobytes it's significant

225
00:15:44,769 --> 00:15:48,279
right I think this image particular

226
00:15:48,279 --> 00:15:52,450
image is quite extreme example if you

227
00:15:52,450 --> 00:15:55,390
pick other images it only reduces like

228
00:15:55,390 --> 00:15:57,930
five percent our six percent but

229
00:15:57,930 --> 00:16:01,779
actually you have room to optimize your

230
00:16:01,779 --> 00:16:06,750
image so this is please check your other

231
00:16:06,750 --> 00:16:09,910
images on your website if it has more

232
00:16:09,910 --> 00:16:17,620
rooms to optimize or compress right so

233
00:16:17,620 --> 00:16:21,160
that's image optimization and actually

234
00:16:21,160 --> 00:16:23,350
there are a bunch of tools that's

235
00:16:23,350 --> 00:16:26,529
available on the web and one of my click

236
00:16:26,529 --> 00:16:29,380
adios money has put together nice very

237
00:16:29,380 --> 00:16:33,279
nice web blog not have a list of those

238
00:16:33,279 --> 00:16:35,019
kind of tools that optimize automate

239
00:16:35,019 --> 00:16:38,260
sorry optimizes the images so please

240
00:16:38,260 --> 00:16:42,190
have a look on read on his blog when you

241
00:16:42,190 --> 00:16:49,199
have time and the next thing is web p

242
00:16:49,199 --> 00:16:51,970
where p is a new image format that

243
00:16:51,970 --> 00:16:55,540
google is pushing forward which could be

244
00:16:55,540 --> 00:16:59,050
la ca lossless transparent and you made

245
00:16:59,050 --> 00:17:04,360
it or can have a color profile and

246
00:17:04,360 --> 00:17:09,240
metadata so and it's it offers amazing

247
00:17:09,240 --> 00:17:13,089
compression rate you will surprise so

248
00:17:13,089 --> 00:17:20,750
let me demo this one as well

249
00:17:20,760 --> 00:17:24,600
I'm going to use a tool called X and

250
00:17:24,600 --> 00:17:31,320
calm Bart

251
00:17:31,330 --> 00:17:42,690
and let me pick other image maybe

252
00:17:42,700 --> 00:17:46,000
something like this

253
00:17:46,010 --> 00:17:47,960
ok

254
00:17:47,960 --> 00:18:02,860
so where's it

255
00:18:02,870 --> 00:18:08,000
so now we have an image with size of 100

256
00:18:08,000 --> 00:18:13,490
study in kilobytes and what I'm going to

257
00:18:13,490 --> 00:18:23,630
do is 0 is to heart this image into

258
00:18:23,630 --> 00:18:28,669
weapon

259
00:18:28,679 --> 00:18:31,769
so the format output format is where p

260
00:18:31,769 --> 00:18:35,580
and settings as I just leave it as

261
00:18:35,580 --> 00:18:39,379
default eighty percent of quality and

262
00:18:39,379 --> 00:18:44,629
convert boom now you have web p image

263
00:18:44,629 --> 00:18:50,700
and let me just drag and drop this onto

264
00:18:50,700 --> 00:18:55,519
the browser so you can see how it looks

265
00:18:55,519 --> 00:18:58,710
so this is image web be down this

266
00:18:58,710 --> 00:19:02,610
wealthy and this is jpg do you see

267
00:19:02,610 --> 00:19:06,330
difference not so much right just a

268
00:19:06,330 --> 00:19:09,259
little bit but not not significant and

269
00:19:09,259 --> 00:19:13,769
the look at the sides the original image

270
00:19:13,769 --> 00:19:20,669
was 113 kilobyte and web p is actually

271
00:19:20,669 --> 00:19:27,799
37 kill white it's surprisingly small so

272
00:19:27,799 --> 00:19:33,149
happy we are pushing web be forward but

273
00:19:33,149 --> 00:19:39,030
it's not perfect yet

274
00:19:39,040 --> 00:19:42,940
so unfortunately web p is only supported

275
00:19:42,940 --> 00:19:46,330
on browser chrome right now so if you

276
00:19:46,330 --> 00:19:48,400
want to make web be working on other

277
00:19:48,400 --> 00:19:52,300
browsers you need work around yeah it's

278
00:19:52,300 --> 00:19:55,240
important peoples you know encouragement

279
00:19:55,240 --> 00:19:59,170
other browsers to support it you know so

280
00:19:59,170 --> 00:20:01,450
if you want to work around on other

281
00:20:01,450 --> 00:20:04,180
browsers I will suggest three methods

282
00:20:04,180 --> 00:20:06,880
one is to use a feature detection on

283
00:20:06,880 --> 00:20:09,820
JavaScript so for example if you use

284
00:20:09,820 --> 00:20:12,250
modernizer the library called modernizer

285
00:20:12,250 --> 00:20:14,620
you can detect that if web piece

286
00:20:14,620 --> 00:20:17,500
available or not so if web p is not

287
00:20:17,500 --> 00:20:21,120
available you can request a image with

288
00:20:21,120 --> 00:20:24,850
other extension not like jpeg or pink

289
00:20:24,850 --> 00:20:28,750
PMG the second walk around is to use

290
00:20:28,750 --> 00:20:32,320
accept header it's sent by prom so the

291
00:20:32,320 --> 00:20:35,680
sub 0 should receive encoding head

292
00:20:35,680 --> 00:20:38,320
content encoding header with authoring

293
00:20:38,320 --> 00:20:41,560
accept header with web p indicating

294
00:20:41,560 --> 00:20:44,100
repeat so cyber knows that if the user

295
00:20:44,100 --> 00:20:48,040
sorry the user agent the browser has

296
00:20:48,040 --> 00:20:52,000
availability to display web p image so

297
00:20:52,000 --> 00:20:55,870
fabrikam decide if it should serve web p

298
00:20:55,870 --> 00:20:58,870
image or not answered suggestion is to

299
00:20:58,870 --> 00:21:02,920
use polyfill there is a polyfill called

300
00:21:02,920 --> 00:21:07,510
web pjs so you can you just fiber just

301
00:21:07,510 --> 00:21:09,550
sense where p image to the browser and

302
00:21:09,550 --> 00:21:13,270
the browser use the web pgs library to

303
00:21:13,270 --> 00:21:16,090
convert that image into something

304
00:21:16,090 --> 00:21:18,490
different that's affordable for the

305
00:21:18,490 --> 00:21:22,240
browser if not available so you have

306
00:21:22,240 --> 00:21:25,210
work wrong but it's a very good idea to

307
00:21:25,210 --> 00:21:29,170
use web p please consider using it so

308
00:21:29,170 --> 00:21:31,300
other techniques to reduce image sizes

309
00:21:31,300 --> 00:21:40,470
is to use inline images and spriting

310
00:21:40,470 --> 00:21:43,870
spriting image is technique to you i'm

311
00:21:43,870 --> 00:21:45,820
sure that everyone here knows about this

312
00:21:45,820 --> 00:21:50,560
technique but this is a idea to combine

313
00:21:50,560 --> 00:21:52,250
multiple image it into one

314
00:21:52,250 --> 00:21:55,610
single image and optimize the connection

315
00:21:55,610 --> 00:21:58,100
to the father for that you know brother

316
00:21:58,100 --> 00:21:59,930
only makes one connection to the server

317
00:21:59,930 --> 00:22:02,530
and download multiple images and

318
00:22:02,530 --> 00:22:06,830
exposing that part each part of image by

319
00:22:06,830 --> 00:22:10,280
using CSS it will reduce you know about

320
00:22:10,280 --> 00:22:14,030
the overhead this technique is quite

321
00:22:14,030 --> 00:22:17,810
good for small and repeatedly repeatedly

322
00:22:17,810 --> 00:22:22,420
used images and the aligning image is

323
00:22:22,420 --> 00:22:26,140
actually in line the image as a text

324
00:22:26,140 --> 00:22:31,720
into that HTML so you can actually

325
00:22:31,720 --> 00:22:35,750
convert binary into a string called data

326
00:22:35,750 --> 00:22:41,720
URL by inserting that data URL into HTML

327
00:22:41,720 --> 00:22:44,450
you can help single connection to the

328
00:22:44,450 --> 00:22:48,350
server and download both HTML image if

329
00:22:48,350 --> 00:22:51,740
you embed multiple images as a data tech

330
00:22:51,740 --> 00:22:54,590
data URL you will have everything with

331
00:22:54,590 --> 00:22:59,570
one single data connection but you have

332
00:22:59,570 --> 00:23:02,000
to keep in mind that converting binary

333
00:23:02,000 --> 00:23:05,570
image into data URL will bloat by thirty

334
00:23:05,570 --> 00:23:08,840
percent so data URL we have thirty

335
00:23:08,840 --> 00:23:11,480
percent more side than original one so

336
00:23:11,480 --> 00:23:15,050
you have to watch that and use it with

337
00:23:15,050 --> 00:23:20,170
care this is suitable for image that not

338
00:23:20,170 --> 00:23:26,090
repeatedly use or large ones okay now

339
00:23:26,090 --> 00:23:28,720
you have all images that's optimization

340
00:23:28,720 --> 00:23:32,570
optimized as possible as we can what

341
00:23:32,570 --> 00:23:37,790
else can we do so we have text HTML CSS

342
00:23:37,790 --> 00:23:41,789
JavaScript

343
00:23:41,799 --> 00:23:44,720
well idea to optimize loading up txt

344
00:23:44,720 --> 00:23:46,850
file is to come by or concatenate

345
00:23:46,850 --> 00:23:49,250
multiple files this is very common idea

346
00:23:49,250 --> 00:23:51,830
right so JavaScript for example you can

347
00:23:51,830 --> 00:23:53,870
just simply concatenate multiple files

348
00:23:53,870 --> 00:23:58,639
into one file and load it to the HTML so

349
00:23:58,639 --> 00:24:06,299
it will be single connection to the sour

350
00:24:06,309 --> 00:24:10,009
the next idea is to minify HTML CSS and

351
00:24:10,009 --> 00:24:14,720
JavaScript in the example you are

352
00:24:14,720 --> 00:24:17,539
looking at on the slide is actually the

353
00:24:17,539 --> 00:24:20,840
CSS so you can remove spaces and returns

354
00:24:20,840 --> 00:24:25,899
and can compress that into a one single

355
00:24:25,899 --> 00:24:30,559
string that's very simple but for in

356
00:24:30,559 --> 00:24:32,889
some cases for example JavaScript

357
00:24:32,889 --> 00:24:38,600
sometimes some tools does changing the

358
00:24:38,600 --> 00:24:41,929
name of a variable with keeping the

359
00:24:41,929 --> 00:24:44,600
semantics so it could be much much more

360
00:24:44,600 --> 00:24:47,149
small so you shouldn't do that manually

361
00:24:47,149 --> 00:24:50,690
of course so you should use tool there

362
00:24:50,690 --> 00:24:52,519
are a bunch of tools available on the

363
00:24:52,519 --> 00:24:54,889
internet free tools like your yui

364
00:24:54,889 --> 00:24:58,519
compressor project compiler CSS Minn dot

365
00:24:58,519 --> 00:25:04,669
J's and so on you know it and once to

366
00:25:04,669 --> 00:25:09,649
that i'm particularly like is unsee SS

367
00:25:09,649 --> 00:25:15,429
on CSS is a tool that detects the unused

368
00:25:15,429 --> 00:25:19,940
files from the CSS by crawling through

369
00:25:19,940 --> 00:25:22,580
all the HTML and find the unused style

370
00:25:22,580 --> 00:25:25,700
and remove that this is particularly you

371
00:25:25,700 --> 00:25:29,929
use particularly convenient for when you

372
00:25:29,929 --> 00:25:32,289
are using like bootstrap or jQuery UI

373
00:25:32,289 --> 00:25:37,309
you know you have a bunch of assets

374
00:25:37,309 --> 00:25:39,889
that's not used that you are not using

375
00:25:39,889 --> 00:25:42,670
right

376
00:25:42,680 --> 00:25:45,650
for concatenation and minification and

377
00:25:45,650 --> 00:25:49,270
so on it's it's a good idea to use grunt

378
00:25:49,270 --> 00:25:52,070
because you don't want to run those kind

379
00:25:52,070 --> 00:25:55,970
of small tax tasks every time you finish

380
00:25:55,970 --> 00:25:59,480
the development or try to test so you

381
00:25:59,480 --> 00:26:01,520
have a very good tool called grant so

382
00:26:01,520 --> 00:26:03,070
that you can automate that kind of

383
00:26:03,070 --> 00:26:06,800
workflow it's a good idea to use grant

384
00:26:06,800 --> 00:26:08,990
if you don't know about grant please

385
00:26:08,990 --> 00:26:17,450
check out our grand chase com alright

386
00:26:17,450 --> 00:26:26,740
how many times do I have unlost okay

387
00:26:26,740 --> 00:26:31,670
alright so by the way I'm knowing how

388
00:26:31,670 --> 00:26:34,100
brother connects to the server is quite

389
00:26:34,100 --> 00:26:36,830
important especially when you're trying

390
00:26:36,830 --> 00:26:42,890
to find the point of optimization so

391
00:26:42,890 --> 00:26:45,950
this figure is showing the approximate

392
00:26:45,950 --> 00:26:48,350
timing how connection is established and

393
00:26:48,350 --> 00:26:52,250
each process is distributed on 3g mobile

394
00:26:52,250 --> 00:26:57,050
network so for example when the browser

395
00:26:57,050 --> 00:27:00,110
tries to connect or fetch content from

396
00:27:00,110 --> 00:27:03,590
saba first thing it does is to DNS

397
00:27:03,590 --> 00:27:05,800
lookup it looks for the domain and

398
00:27:05,800 --> 00:27:10,100
extract the IP address right dns lookup

399
00:27:10,100 --> 00:27:14,330
that takes to 200 millisecond then the

400
00:27:14,330 --> 00:27:16,400
browser try to connect with TCP

401
00:27:16,400 --> 00:27:19,100
connection that takes also 200

402
00:27:19,100 --> 00:27:23,870
millisecond and sard a browser sends HTP

403
00:27:23,870 --> 00:27:27,440
request and receive a cheapy response

404
00:27:27,440 --> 00:27:31,870
that takes another 200 millisecond then

405
00:27:31,870 --> 00:27:34,730
the browser receives the data content

406
00:27:34,730 --> 00:27:38,440
that takes 200 millisecond and finally

407
00:27:38,440 --> 00:27:41,240
finally the browser takes 200

408
00:27:41,240 --> 00:27:44,810
millisecond to render the content so if

409
00:27:44,810 --> 00:27:50,450
you are on 3g network it's it takes at

410
00:27:50,450 --> 00:27:53,900
least one second to load everything

411
00:27:53,900 --> 00:27:58,190
so you cannot do do anything about about

412
00:27:58,190 --> 00:28:01,460
you know the first three portion DNS

413
00:28:01,460 --> 00:28:04,730
lookup TCP connection and HTTP requests

414
00:28:04,730 --> 00:28:09,110
on response but we do want to optimize

415
00:28:09,110 --> 00:28:12,410
more right what can we but what else can

416
00:28:12,410 --> 00:28:17,680
we do so one idea is to eliminate

417
00:28:17,680 --> 00:28:23,090
redirection so if you're serving mobile

418
00:28:23,090 --> 00:28:26,060
specific version of your website that

419
00:28:26,060 --> 00:28:27,680
means that you have desktop version as

420
00:28:27,680 --> 00:28:32,270
well as mobile version so when your

421
00:28:32,270 --> 00:28:35,720
website goes social media the URL has

422
00:28:35,720 --> 00:28:41,210
one canonical URL ideally that means

423
00:28:41,210 --> 00:28:44,090
that if you have different URLs for

424
00:28:44,090 --> 00:28:47,420
desktop and mobile the URL be redirected

425
00:28:47,420 --> 00:28:49,070
to mobile version if the user is

426
00:28:49,070 --> 00:28:52,030
accessing accessing from mobile device

427
00:28:52,030 --> 00:28:56,120
right so it needs redirection and it

428
00:28:56,120 --> 00:29:00,260
takes 0.6 seconds 600 milliseconds at

429
00:29:00,260 --> 00:29:03,860
least to redirect so it's time consuming

430
00:29:03,860 --> 00:29:07,130
right so if we could we should remove

431
00:29:07,130 --> 00:29:10,670
that redirect what can we do to

432
00:29:10,670 --> 00:29:13,670
eliminate that redirection so one idea

433
00:29:13,670 --> 00:29:18,650
is to do make the website responsive so

434
00:29:18,650 --> 00:29:22,580
that one serving one HTML to support all

435
00:29:22,580 --> 00:29:29,260
the devices that user is accessing from

436
00:29:29,270 --> 00:29:33,350
and the second idea is to use certified

437
00:29:33,350 --> 00:29:38,540
branching which mean that visas the

438
00:29:38,540 --> 00:29:40,460
important thing that that's keeping the

439
00:29:40,460 --> 00:29:43,310
URL the same so depending on the user

440
00:29:43,310 --> 00:29:47,600
agent server if the server could serve

441
00:29:47,600 --> 00:29:49,700
different HTML depending on the user

442
00:29:49,700 --> 00:29:55,340
agent I'll be a good idea in that case

443
00:29:55,340 --> 00:29:58,580
you have to keep in mind that adding

444
00:29:58,580 --> 00:30:03,200
vary header on HTTP header very that

445
00:30:03,200 --> 00:30:08,780
tells excuse me that tells the search

446
00:30:08,780 --> 00:30:12,770
engine troller that this URL resource

447
00:30:12,770 --> 00:30:15,860
may vary depending on something in this

448
00:30:15,860 --> 00:30:18,530
case user agent so if you are serving

449
00:30:18,530 --> 00:30:21,380
something that's varies depending on

450
00:30:21,380 --> 00:30:24,770
user agent you should add vary header to

451
00:30:24,770 --> 00:30:27,950
the HTTP response and the final idea is

452
00:30:27,950 --> 00:30:32,200
to use a a width attribute called ping

453
00:30:32,200 --> 00:30:36,160
this is a particular use case is

454
00:30:36,160 --> 00:30:39,440
sometimes you want to track which link

455
00:30:39,440 --> 00:30:42,910
user clicked so you insert the

456
00:30:42,910 --> 00:30:47,180
redirection page in between the next

457
00:30:47,180 --> 00:30:50,480
page and original page you just want to

458
00:30:50,480 --> 00:30:52,820
track the user but you insert the

459
00:30:52,820 --> 00:30:57,140
redirection page I think it's is it's

460
00:30:57,140 --> 00:31:00,850
not very good like when I'm looking at

461
00:31:00,850 --> 00:31:04,670
Facebook that has a redirection page and

462
00:31:04,670 --> 00:31:06,590
it takes sometimes more than once again

463
00:31:06,590 --> 00:31:09,310
it's not good right but if you are add

464
00:31:09,310 --> 00:31:14,290
pink attribute it will send it to

465
00:31:14,290 --> 00:31:18,230
external connections one is to the next

466
00:31:18,230 --> 00:31:22,930
webpage one is to ping the URL so that

467
00:31:22,930 --> 00:31:28,040
the browser goes forward to the next

468
00:31:28,040 --> 00:31:30,980
page as we are pinging the URL to let

469
00:31:30,980 --> 00:31:34,100
the server know that which link the user

470
00:31:34,100 --> 00:31:38,400
has clicked this is actually use

471
00:31:38,400 --> 00:31:40,980
on the google mobile search if you have

472
00:31:40,980 --> 00:31:43,260
to react yurius use google chrome and

473
00:31:43,260 --> 00:31:53,130
check out the source code ok and DNS is

474
00:31:53,130 --> 00:31:57,690
something we can optimize too so if

475
00:31:57,690 --> 00:32:02,250
you're like we we have seen in the

476
00:32:02,250 --> 00:32:05,640
previous slide that if you make a

477
00:32:05,640 --> 00:32:07,560
connection to the server the first thing

478
00:32:07,560 --> 00:32:11,420
it does is to resolve the DNS but it's

479
00:32:11,420 --> 00:32:14,340
it takes two hundred millisecond if we

480
00:32:14,340 --> 00:32:16,350
could eliminate that we save 200

481
00:32:16,350 --> 00:32:18,900
milliseconds each connection what we can

482
00:32:18,900 --> 00:32:22,550
do is to add link tag with rel ecole

483
00:32:22,550 --> 00:32:26,550
equals DNS prefetch that way as you can

484
00:32:26,550 --> 00:32:30,120
see on the figure on that slide the DNS

485
00:32:30,120 --> 00:32:32,640
lookup happens before the actual

486
00:32:32,640 --> 00:32:36,500
connection this is very useful so DNS

487
00:32:36,500 --> 00:32:40,980
will be cached on the browser right this

488
00:32:40,980 --> 00:32:43,680
is useful not only for a single page but

489
00:32:43,680 --> 00:32:46,170
also the pages that i have a multiple

490
00:32:46,170 --> 00:32:51,570
you know next page I mean next page so

491
00:32:51,570 --> 00:32:54,150
if you could predict predict the DNS

492
00:32:54,150 --> 00:32:57,510
that's just pop up on under at the next

493
00:32:57,510 --> 00:33:00,870
web page if you could resolve that DNS

494
00:33:00,870 --> 00:33:03,000
in advance you will save 200

495
00:33:03,000 --> 00:33:06,990
milliseconds so it's a good idea to add

496
00:33:06,990 --> 00:33:15,090
this DNA DNS professed sing ok so we've

497
00:33:15,090 --> 00:33:17,160
been improving size and connection

498
00:33:17,160 --> 00:33:20,660
numbers for images HTML CSS JavaScript

499
00:33:20,660 --> 00:33:27,030
what else can we do so one more thing we

500
00:33:27,030 --> 00:33:30,300
can improve is a process some perception

501
00:33:30,300 --> 00:33:33,260
of users

502
00:33:33,270 --> 00:33:35,799
here's an example a website that i'm

503
00:33:35,799 --> 00:33:56,000
going to show you

504
00:33:56,010 --> 00:33:59,790
so what you are looking at is a demo

505
00:33:59,790 --> 00:34:03,780
website that blocks the rendering so you

506
00:34:03,780 --> 00:34:07,320
have a the second block it stopped right

507
00:34:07,320 --> 00:34:09,149
now it's loading the advertisement and

508
00:34:09,149 --> 00:34:12,419
it stopped do you know why because

509
00:34:12,419 --> 00:34:15,179
browser try to render the web page from

510
00:34:15,179 --> 00:34:17,820
top to the bottom by reading the HTML

511
00:34:17,820 --> 00:34:21,840
and if the browser finds a script link

512
00:34:21,840 --> 00:34:26,220
its try to load download the resource

513
00:34:26,220 --> 00:34:30,000
and execute that JavaScript meanwhile

514
00:34:30,000 --> 00:34:33,179
the rendering is stopped it's blocked so

515
00:34:33,179 --> 00:34:35,850
it's not a good idea to insert a

516
00:34:35,850 --> 00:34:39,600
javascript in the middle of HTML I mean

517
00:34:39,600 --> 00:34:42,780
the body so what you should do is to

518
00:34:42,780 --> 00:34:45,750
move the script tag to the bottom of

519
00:34:45,750 --> 00:34:55,320
HTML if possible or or add async

520
00:34:55,320 --> 00:35:01,460
attribute which which enables browser to

521
00:35:01,460 --> 00:35:06,720
load that script while the browser is

522
00:35:06,720 --> 00:35:10,080
doing them rendering and as soon as the

523
00:35:10,080 --> 00:35:12,450
browser finished loading that script it

524
00:35:12,450 --> 00:35:17,280
executes that's async attribute and the

525
00:35:17,280 --> 00:35:20,760
fire attribute in every browser to wait

526
00:35:20,760 --> 00:35:27,150
for the script to 2x cute until until

527
00:35:27,150 --> 00:35:30,300
the browser finish rendering meanwhile

528
00:35:30,300 --> 00:35:36,990
the script is loaded so it's a good idea

529
00:35:36,990 --> 00:35:40,620
to use these two attributes a sink and

530
00:35:40,620 --> 00:35:43,500
defer if you care about the order order

531
00:35:43,500 --> 00:35:45,390
javascript execution you should use

532
00:35:45,390 --> 00:35:52,050
default if you don't use async so mind

533
00:35:52,050 --> 00:35:56,730
about the JavaScript blocking

534
00:35:56,730 --> 00:36:01,920
and it's also important to prioritize

535
00:36:01,920 --> 00:36:06,270
the visible content so if the user is

536
00:36:06,270 --> 00:36:09,670
browsing your website all they care

537
00:36:09,670 --> 00:36:12,610
about is the thing that you see at the

538
00:36:12,610 --> 00:36:18,550
first glance so we call the region on

539
00:36:18,550 --> 00:36:20,350
the webpage that's available on the

540
00:36:20,350 --> 00:36:27,820
first glance above the fold so we should

541
00:36:27,820 --> 00:36:33,010
try to prioritize that by aligning

542
00:36:33,010 --> 00:36:37,840
important portion of CSS which means CSS

543
00:36:37,840 --> 00:36:40,600
particular part of visible part above

544
00:36:40,600 --> 00:36:43,840
the fold in aligning by aligning that it

545
00:36:43,840 --> 00:36:47,080
should be prioritized and you can see

546
00:36:47,080 --> 00:36:50,980
that HTML rendered as soon as possible

547
00:36:50,980 --> 00:36:55,780
if not you can just defer that to the to

548
00:36:55,780 --> 00:36:59,740
the later right and also it's a good

549
00:36:59,740 --> 00:37:03,010
idea to to consider about the timing of

550
00:37:03,010 --> 00:37:05,830
the image load there's no point loading

551
00:37:05,830 --> 00:37:09,430
all the image of long long content you

552
00:37:09,430 --> 00:37:11,830
know the user won't see image at the

553
00:37:11,830 --> 00:37:15,130
bottom of web page so you can load that

554
00:37:15,130 --> 00:37:18,940
images later so that's called image lazy

555
00:37:18,940 --> 00:37:21,580
image loading there are a bunch of tools

556
00:37:21,580 --> 00:37:27,040
that enables the that kind of feature so

557
00:37:27,040 --> 00:37:30,070
you should keep in mind that the users

558
00:37:30,070 --> 00:37:36,390
per shift per section all right so

559
00:37:36,390 --> 00:37:40,720
Speedy's experience so we've been

560
00:37:40,720 --> 00:37:43,710
walking through many aspects or

561
00:37:43,710 --> 00:37:48,100
optimization of a website I think most

562
00:37:48,100 --> 00:37:50,530
of our techniques i have introduced can

563
00:37:50,530 --> 00:37:52,840
be applied to not only for mobile but

564
00:37:52,840 --> 00:37:59,650
also for desktop and but it's kind of

565
00:37:59,650 --> 00:38:01,960
tough to check all the things that we've

566
00:38:01,960 --> 00:38:04,650
been walking what works through so

567
00:38:04,650 --> 00:38:08,230
actually we have a very good tool for

568
00:38:08,230 --> 00:38:09,460
you to

569
00:38:09,460 --> 00:38:13,270
easily check the optimization condition

570
00:38:13,270 --> 00:38:16,990
of your I mean how well you are doing on

571
00:38:16,990 --> 00:38:19,930
your website which is called PageSpeed

572
00:38:19,930 --> 00:38:22,930
inside by going to PageSpeed inside

573
00:38:22,930 --> 00:38:26,589
website you can just input your

574
00:38:26,589 --> 00:38:30,430
website's URL URL and see the score of

575
00:38:30,430 --> 00:38:36,580
it so 100 is a perfect and the ulc then

576
00:38:36,580 --> 00:38:40,119
score how well you are doing and this

577
00:38:40,119 --> 00:38:43,690
tool PageSpeed inside gives also gives

578
00:38:43,690 --> 00:38:46,480
you a concrete ideas how you can further

579
00:38:46,480 --> 00:38:49,119
optimize your website which I have

580
00:38:49,119 --> 00:38:55,780
introduced you to you today so please

581
00:38:55,780 --> 00:38:59,170
use a page speed inside if you are

582
00:38:59,170 --> 00:39:02,920
curious and also there's a tool called

583
00:39:02,920 --> 00:39:07,510
web page test web based web page test

584
00:39:07,510 --> 00:39:11,290
org is a allows you to analyse the

585
00:39:11,290 --> 00:39:14,320
website more detailed than web page page

586
00:39:14,320 --> 00:39:18,339
page speeding inside and from multiple

587
00:39:18,339 --> 00:39:21,130
locations around the globe using real

588
00:39:21,130 --> 00:39:23,980
browsers and real condiment connection

589
00:39:23,980 --> 00:39:27,450
speed it's quite useful when you're

590
00:39:27,450 --> 00:39:30,609
analyzed when you want to another the

591
00:39:30,609 --> 00:39:34,750
website more in detail actually this web

592
00:39:34,750 --> 00:39:38,700
page test thing is actually open source

593
00:39:38,700 --> 00:39:41,680
so if you are interested you can just

594
00:39:41,680 --> 00:39:44,500
fork it and build your own version of

595
00:39:44,500 --> 00:39:47,290
web page test and maybe continuously

596
00:39:47,290 --> 00:39:49,359
watch the performance of you over your

597
00:39:49,359 --> 00:39:56,490
website over time and here the spoiler

598
00:39:56,490 --> 00:40:00,180
so we have a tool called mod PageSpeed

599
00:40:00,180 --> 00:40:03,760
which actually does most of things that

600
00:40:03,760 --> 00:40:06,010
I have explained today just by

601
00:40:06,010 --> 00:40:08,619
installing mod PageSpeed on to your web

602
00:40:08,619 --> 00:40:13,020
server it automatically automatically do

603
00:40:13,020 --> 00:40:15,550
everything that's possible to optimize

604
00:40:15,550 --> 00:40:18,279
your website

605
00:40:18,289 --> 00:40:21,769
so but you know I have expanded

606
00:40:21,769 --> 00:40:24,979
everything that many things that today

607
00:40:24,979 --> 00:40:28,609
it's still useful because you know what

608
00:40:28,609 --> 00:40:31,669
the mod PageSpeed will do and if you

609
00:40:31,669 --> 00:40:33,890
have any trouble you will see which

610
00:40:33,890 --> 00:40:36,410
portion of the module of mod PageSpeed

611
00:40:36,410 --> 00:40:39,259
has something wrong or whatever you know

612
00:40:39,259 --> 00:40:42,049
or the best thing you could do is to

613
00:40:42,049 --> 00:40:45,319
just do that optimization by yourself of

614
00:40:45,319 --> 00:40:48,829
course because you know if you use these

615
00:40:48,829 --> 00:40:51,469
kind of tools that uses its resource

616
00:40:51,469 --> 00:40:53,719
cyber resource so if you could do by

617
00:40:53,719 --> 00:41:01,939
yourself that's the best thing okay so

618
00:41:01,939 --> 00:41:04,669
with that so I've been walking through

619
00:41:04,669 --> 00:41:10,329
many aspects of website optimization but

620
00:41:10,329 --> 00:41:15,109
hopefully that helps your website web

621
00:41:15,109 --> 00:41:17,809
development with that thank you for your

