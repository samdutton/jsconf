1
00:00:06,890 --> 00:00:10,170

hello everybody I'm Alex I know it's the

2
00:00:10,170 --> 00:00:12,330
last talk of the first day and probably

3
00:00:12,330 --> 00:00:15,420
tired there's no more Martha left but

4
00:00:15,420 --> 00:00:17,070
stay with me for 30 minutes and I'll

5
00:00:17,070 --> 00:00:19,080
give you web performance optimizations

6
00:00:19,080 --> 00:00:21,840
straight in the dev tools when I pitch

7
00:00:21,840 --> 00:00:23,539
this this morning

8
00:00:23,539 --> 00:00:26,220
karma said I'll pick talk from the

9
00:00:26,220 --> 00:00:29,400
audience I haven't changed my mind so if

10
00:00:29,400 --> 00:00:31,410
someone wants to volunteer web site they

11
00:00:31,410 --> 00:00:36,440
want me to take a look at don't be shy

12
00:00:36,440 --> 00:00:44,399
I'm sorry your honor

13
00:00:44,399 --> 00:00:45,899
come on stage and spell it out for me

14
00:00:45,899 --> 00:00:53,600
I'm happy to do that but it has to be

15
00:00:53,600 --> 00:00:57,719
pg-13 the whole website has to be pg-13

16
00:00:57,719 --> 00:01:18,659
go for it things in this world I

17
00:01:18,659 --> 00:01:20,640
volunteer for Mozilla as a Muslim reps

18
00:01:20,640 --> 00:01:23,280
and Mozilla tech speaker you've seen a

19
00:01:23,280 --> 00:01:25,470
fellow tech speaker come up on stage

20
00:01:25,470 --> 00:01:27,780
today and talk about his dance dance

21
00:01:27,780 --> 00:01:31,259
revelution but I like the idea of a

22
00:01:31,259 --> 00:01:33,630
paycheck so I also have a day job as a

23
00:01:33,630 --> 00:01:35,610
JavaScript developer advocate for next

24
00:01:35,610 --> 00:01:37,979
Moe anybody heard about next one before

25
00:01:37,979 --> 00:01:41,340
okay two people that's all good

26
00:01:41,340 --> 00:01:43,979
did they cloud communication api's I'm

27
00:01:43,979 --> 00:01:45,360
not going to talk about that I'm going

28
00:01:45,360 --> 00:01:47,549
to talk about web performance and when

29
00:01:47,549 --> 00:01:49,110
we talk about web performance most

30
00:01:49,110 --> 00:01:51,689
people focus on javascript optimizations

31
00:01:51,689 --> 00:01:55,649
and that's kind of sad because web

32
00:01:55,649 --> 00:01:58,229
performance has like three stages where

33
00:01:58,229 --> 00:02:00,360
JavaScript organization is the very last

34
00:02:00,360 --> 00:02:01,950
one of them so whatever you do to

35
00:02:01,950 --> 00:02:04,350
optimize your javascript it's still

36
00:02:04,350 --> 00:02:06,149
gonna be micro micro performance

37
00:02:06,149 --> 00:02:07,740
optimization if you don't optimize the

38
00:02:07,740 --> 00:02:10,679
first two chunks we're gonna look at all

39
00:02:10,679 --> 00:02:13,890
of them we're gonna open up dev tools

40
00:02:13,890 --> 00:02:16,710
the website and I'm gonna power up three

41
00:02:16,710 --> 00:02:19,470
of the tools I'll use one of them is

42
00:02:19,470 --> 00:02:21,390
Network the other one is memory and the

43
00:02:21,390 --> 00:02:23,910
other one is actual performance so let's

44
00:02:23,910 --> 00:02:27,750
take a look at the very first one let's

45
00:02:27,750 --> 00:02:30,150
look at Network because that's when you

46
00:02:30,150 --> 00:02:31,580
want the website into your browser

47
00:02:31,580 --> 00:02:34,230
what's the first thing it happens it

48
00:02:34,230 --> 00:02:37,200
gets the DNS tries to look up what you

49
00:02:37,200 --> 00:02:41,280
want and then this just images no it can

50
00:02:41,280 --> 00:02:45,959
be right okay so it looks up what you

51
00:02:45,959 --> 00:02:48,989
want out of the out of the website and

52
00:02:48,989 --> 00:02:51,330
starts bringing it in so if I look at

53
00:02:51,330 --> 00:02:54,150
that I'll see as soon as it loads I have

54
00:02:54,150 --> 00:02:57,000
a bunch of images that start loading

55
00:02:57,000 --> 00:02:59,670
after the the Jason the J's files load

56
00:02:59,670 --> 00:03:03,470
now I can look at each one of those

57
00:03:03,470 --> 00:03:06,390
requests individually I'm not gonna do

58
00:03:06,390 --> 00:03:08,700
that I'm gonna look at the ones that are

59
00:03:08,700 --> 00:03:12,720
problematic this is one of the the

60
00:03:12,720 --> 00:03:14,459
really optimized ones so for example I

61
00:03:14,459 --> 00:03:17,100
look at this when everything took 33

62
00:03:17,100 --> 00:03:19,590
milliseconds this javascript file took

63
00:03:19,590 --> 00:03:22,829
500 milliseconds that's huge all you

64
00:03:22,829 --> 00:03:26,430
know all I had 91 requests with three

65
00:03:26,430 --> 00:03:30,180
and a half megabytes but only one point

66
00:03:30,180 --> 00:03:32,010
four of the Oh one point six of those

67
00:03:32,010 --> 00:03:34,140
was transferred transferred and that's

68
00:03:34,140 --> 00:03:35,549
because probably the website has

69
00:03:35,549 --> 00:03:38,430
something like jay-z ping so I get one

70
00:03:38,430 --> 00:03:41,220
point six megabytes and then it expands

71
00:03:41,220 --> 00:03:43,519
on desk I don't really care about the

72
00:03:43,519 --> 00:03:45,989
actual size on desk I care about the

73
00:03:45,989 --> 00:03:47,489
transfer size because that's what comes

74
00:03:47,489 --> 00:03:51,299
through the network to the browser so

75
00:03:51,299 --> 00:03:54,329
I'm gonna look out of those or it still

76
00:03:54,329 --> 00:03:56,370
loads it says it finished in 30 seconds

77
00:03:56,370 --> 00:03:58,140
which can be right so that means it's

78
00:03:58,140 --> 00:04:00,510
still loading I'm gonna look at the big

79
00:04:00,510 --> 00:04:02,370
one so if I look at it I can see it's

80
00:04:02,370 --> 00:04:04,290
JavaScript I can see content headers and

81
00:04:04,290 --> 00:04:07,230
a bunch of other stuff about it I don't

82
00:04:07,230 --> 00:04:14,790
really care the token is strangely small

83
00:04:14,790 --> 00:04:16,260
but what I really care about is the

84
00:04:16,260 --> 00:04:18,780
timings because when you when you ask a

85
00:04:18,780 --> 00:04:21,750
resource from the internet yet the

86
00:04:21,750 --> 00:04:23,460
reason it says blocked right there is

87
00:04:23,460 --> 00:04:27,090
because the browser can't handle all the

88
00:04:27,090 --> 00:04:27,540
connection

89
00:04:27,540 --> 00:04:30,150
your website wants to make it goes and

90
00:04:30,150 --> 00:04:33,390
does DNS resolution first it starts

91
00:04:33,390 --> 00:04:35,550
connecting to the IP it does the TLS

92
00:04:35,550 --> 00:04:37,920
setup it sends the little bit of data

93
00:04:37,920 --> 00:04:40,920
that I want back and then it waits for

94
00:04:40,920 --> 00:04:42,990
the server a really long time and then

95
00:04:42,990 --> 00:04:44,520
the server sends back that micro

96
00:04:44,520 --> 00:04:47,070
javascript thing and if you look at at

97
00:04:47,070 --> 00:04:50,810
this the things I can't really touch or

98
00:04:50,810 --> 00:04:54,030
optimize are the DNS resolution

99
00:04:54,030 --> 00:04:55,560
I don't really control where the DNS

100
00:04:55,560 --> 00:04:58,950
comes from on the client side the

101
00:04:58,950 --> 00:05:01,500
connecting bit that means your server is

102
00:05:01,500 --> 00:05:02,970
halfway around the world your IP is

103
00:05:02,970 --> 00:05:04,710
halfway around the world you don't have

104
00:05:04,710 --> 00:05:06,540
a CDN I can connect to you don't have

105
00:05:06,540 --> 00:05:08,820
something that's close to me for example

106
00:05:08,820 --> 00:05:12,060
if you're using EU West or whatever

107
00:05:12,060 --> 00:05:14,070
that's Frankfurt it should connect in a

108
00:05:14,070 --> 00:05:17,910
millisecond the TLS setup I can't really

109
00:05:17,910 --> 00:05:20,040
influence a lot about that it just has

110
00:05:20,040 --> 00:05:21,630
to do with your connection the same way

111
00:05:21,630 --> 00:05:23,250
so if you're connecting is gonna take

112
00:05:23,250 --> 00:05:25,470
long your TLS is gonna take long because

113
00:05:25,470 --> 00:05:27,180
just connects a bunch of times to the

114
00:05:27,180 --> 00:05:29,310
same thing the sending part is

115
00:05:29,310 --> 00:05:30,900
instantaneously cuz I'm not sending a

116
00:05:30,900 --> 00:05:33,480
lot of data if the sending part was huge

117
00:05:33,480 --> 00:05:35,880
that meant probably I was sending form

118
00:05:35,880 --> 00:05:38,580
data or something on the network and

119
00:05:38,580 --> 00:05:41,250
then I wait for the server like for at

120
00:05:41,250 --> 00:05:44,310
least a quarter of the time and that

121
00:05:44,310 --> 00:05:45,960
means your server isn't fast the server

122
00:05:45,960 --> 00:05:48,090
has too many connections it has to

123
00:05:48,090 --> 00:05:49,980
handle at the same time and the

124
00:05:49,980 --> 00:05:52,470
receiving bit is instantaneously the

125
00:05:52,470 --> 00:05:54,810
things that I really care about are the

126
00:05:54,810 --> 00:05:56,610
sending and receiving and that those

127
00:05:56,610 --> 00:05:59,220
happen fast the thing your user sees is

128
00:05:59,220 --> 00:06:02,070
rate my browser block my HTTP request

129
00:06:02,070 --> 00:06:03,390
because there were too many in the queue

130
00:06:03,390 --> 00:06:05,970
so depending on the browser there's a

131
00:06:05,970 --> 00:06:08,190
limited number of connections and how do

132
00:06:08,190 --> 00:06:11,130
you resolve that instead of loading when

133
00:06:11,130 --> 00:06:13,350
I started it loaded like 20 images out

134
00:06:13,350 --> 00:06:15,200
of 90 requests or something

135
00:06:15,200 --> 00:06:18,060
make that one or two I won't see them

136
00:06:18,060 --> 00:06:20,220
anyway that above-the-fold why do I need

137
00:06:20,220 --> 00:06:21,720
to connect and get them before I get

138
00:06:21,720 --> 00:06:24,480
your JavaScript if it's JavaScript I've

139
00:06:24,480 --> 00:06:27,600
got someone in there I can see the JSE

140
00:06:27,600 --> 00:06:31,020
quest-19 JavaScript requests why can't

141
00:06:31,020 --> 00:06:33,150
you make one it's JavaScript the

142
00:06:33,150 --> 00:06:35,180
firelight and it doesn't really matter

143
00:06:35,180 --> 00:06:38,610
so compress all that into one minified

144
00:06:38,610 --> 00:06:40,500
if I look at CSS

145
00:06:40,500 --> 00:06:43,080
CSS looks better and it looks like only

146
00:06:43,080 --> 00:06:44,700
one is from your domain and the other

147
00:06:44,700 --> 00:06:47,190
one is from Google that kind of makes

148
00:06:47,190 --> 00:06:49,320
sense you can't unless you get the

149
00:06:49,320 --> 00:06:52,380
Google Fonts in locally with your CSS

150
00:06:52,380 --> 00:06:55,800
then you can make one request ah I'm

151
00:06:55,800 --> 00:06:57,570
gonna look at images which is the bulk

152
00:06:57,570 --> 00:07:00,780
of it why do you need to send me 65

153
00:07:00,780 --> 00:07:04,080
images from the load time I can't see 65

154
00:07:04,080 --> 00:07:06,840
images on the page send once and two

155
00:07:06,840 --> 00:07:09,270
sprite them if you have to send a bigger

156
00:07:09,270 --> 00:07:10,890
chunk you don't lose on connection

157
00:07:10,890 --> 00:07:12,870
because if you look at the server timing

158
00:07:12,870 --> 00:07:15,440
you can see the stuff I'm waiting for

159
00:07:15,440 --> 00:07:20,370
just to go and connect to the IP every

160
00:07:20,370 --> 00:07:23,190
image takes just as much as as much time

161
00:07:23,190 --> 00:07:24,750
for that and then it sends four

162
00:07:24,750 --> 00:07:28,440
kilobytes I probably lost more time on

163
00:07:28,440 --> 00:07:30,630
the connection than on the actual

164
00:07:30,630 --> 00:07:32,970
transfer of those four kilobytes sprite

165
00:07:32,970 --> 00:07:35,490
it with something else or for this I

166
00:07:35,490 --> 00:07:40,150
want to see what's a 4 kilobyte image

167
00:07:40,160 --> 00:07:42,840
right did you really need this to be an

168
00:07:42,840 --> 00:07:47,060
image it's 4 kilobytes so if you look at

169
00:07:47,060 --> 00:07:50,870
this this is the the big part of

170
00:07:50,870 --> 00:07:52,530
performance the first part of

171
00:07:52,530 --> 00:07:54,780
performance because no matter how fast

172
00:07:54,780 --> 00:07:56,780
your website actually runs on the client

173
00:07:56,780 --> 00:08:00,510
it depends on the time it takes to get

174
00:08:00,510 --> 00:08:04,260
to the client and any react fans in the

175
00:08:04,260 --> 00:08:08,880
room right ok yeah you're not gonna love

176
00:08:08,880 --> 00:08:10,980
me the last time I use create react app

177
00:08:10,980 --> 00:08:15,510
I had 20 20 megabytes of JavaScript why

178
00:08:15,510 --> 00:08:17,340
do I need 20 megabytes of JavaScript

179
00:08:17,340 --> 00:08:18,570
don't get me wrong once it actually

180
00:08:18,570 --> 00:08:21,030
starts it's fast I'll give you that

181
00:08:21,030 --> 00:08:23,430
react is fast but just the fact that

182
00:08:23,430 --> 00:08:26,280
it's big makes the user load experience

183
00:08:26,280 --> 00:08:29,460
more than 2 seconds does this there's a

184
00:08:29,460 --> 00:08:32,490
bunch of of papers online that say if

185
00:08:32,490 --> 00:08:36,419
your website loads over 2 seconds you

186
00:08:36,419 --> 00:08:39,089
start gonna you're going to start losing

187
00:08:39,089 --> 00:08:43,020
users I wouldn't advocate for 2 seconds

188
00:08:43,020 --> 00:08:44,640
because a bunch of people read the 2

189
00:08:44,640 --> 00:08:47,880
second rules and some of us might have

190
00:08:47,880 --> 00:08:50,250
might have been forced to slow down on

191
00:08:50,250 --> 00:08:51,550
websites too low

192
00:08:51,550 --> 00:08:54,700
two seconds instead of milliseconds just

193
00:08:54,700 --> 00:08:57,070
because if it's instantaneous you users

194
00:08:57,070 --> 00:08:58,839
gonna think oh it came from cash it's

195
00:08:58,839 --> 00:09:02,010
not fresh let me do shift refresh on it

196
00:09:02,010 --> 00:09:05,890
but I advocate in under three somewhere

197
00:09:05,890 --> 00:09:09,250
in between and that means you have to

198
00:09:09,250 --> 00:09:11,680
get everything in one go so you don't

199
00:09:11,680 --> 00:09:13,660
keep doing the round trips every time I

200
00:09:13,660 --> 00:09:15,250
do this and every time I look at the

201
00:09:15,250 --> 00:09:19,180
website most of the times fixing this

202
00:09:19,180 --> 00:09:22,329
means more several resources I know

203
00:09:22,329 --> 00:09:24,610
you'll think oh it's the client it's

204
00:09:24,610 --> 00:09:27,880
cheap into whatever we want sometimes

205
00:09:27,880 --> 00:09:30,790
it's not cheap sometimes having to

206
00:09:30,790 --> 00:09:32,410
transfer three megabytes of data

207
00:09:32,410 --> 00:09:34,870
actually cost me money and you're gonna

208
00:09:34,870 --> 00:09:37,810
be upset on your website so you want you

209
00:09:37,810 --> 00:09:39,700
users to be able to say yes they slowed

210
00:09:39,700 --> 00:09:42,850
it fast for me and so on so this is the

211
00:09:42,850 --> 00:09:46,410
first part the second part is the

212
00:09:46,410 --> 00:09:49,060
performance tab so you've got everything

213
00:09:49,060 --> 00:09:50,950
to load on the webpage or you got it

214
00:09:50,950 --> 00:09:52,959
from the internet on the page fairly

215
00:09:52,959 --> 00:09:55,089
quickly and that's when performance

216
00:09:55,089 --> 00:09:57,010
starts actually you can starts to

217
00:09:57,010 --> 00:09:58,690
actually see performance because once

218
00:09:58,690 --> 00:10:00,760
you have the resources the browser is

219
00:10:00,760 --> 00:10:02,230
gonna start rendering them the

220
00:10:02,230 --> 00:10:03,910
connection is one bit as soon as the

221
00:10:03,910 --> 00:10:05,980
first resource hits the browser is going

222
00:10:05,980 --> 00:10:07,480
to start rendering them and doing stuff

223
00:10:07,480 --> 00:10:08,800
with them and that's when you see

224
00:10:08,800 --> 00:10:11,020
performance now the way performance

225
00:10:11,020 --> 00:10:14,020
works is you've got record they make a

226
00:10:14,020 --> 00:10:16,779
snapshot of it and kinda debug on the

227
00:10:16,779 --> 00:10:19,870
snapshot because no website loads the

228
00:10:19,870 --> 00:10:22,320
same twice in a row I don't think even a

229
00:10:22,320 --> 00:10:25,060
just HTML page is gonna load in the same

230
00:10:25,060 --> 00:10:28,930
timings twice in a row some people say

231
00:10:28,930 --> 00:10:31,690
three snapshots some people say seven

232
00:10:31,690 --> 00:10:34,779
snapshots I'll just do one because I'm

233
00:10:34,779 --> 00:10:36,339
lazy here so I'm gonna record

234
00:10:36,339 --> 00:10:38,860
performance I'm gonna scroll around for

235
00:10:38,860 --> 00:10:42,040
a bit and then I'm gonna shift refresh

236
00:10:42,040 --> 00:10:47,410
my whole thing and I'm gonna stop

237
00:10:47,410 --> 00:10:50,649
recording so you see in terms of the of

238
00:10:50,649 --> 00:10:53,940
the website it's not really a big deal

239
00:10:53,940 --> 00:11:01,570
as this like weddings website category

240
00:11:01,570 --> 00:11:05,920
page

241
00:11:05,930 --> 00:11:08,710
how do I do categories this integrity

242
00:11:08,710 --> 00:11:13,540
yeah okay so I'm gonna throw this away

243
00:11:13,540 --> 00:11:17,240
gonna start according performance I'm

244
00:11:17,240 --> 00:11:20,660
gonna scroll and then I'm gonna shift

245
00:11:20,660 --> 00:11:23,000
refresh it someone gonna get fired over

246
00:11:23,000 --> 00:11:24,860
this are the developers actually in the

247
00:11:24,860 --> 00:11:27,110
room right amazing

248
00:11:27,110 --> 00:11:30,350
yes I'll take it easy so you see the

249
00:11:30,350 --> 00:11:32,270
difference between this and the first

250
00:11:32,270 --> 00:11:36,050
page the first page I did this

251
00:11:36,050 --> 00:11:38,180
performance recording and I was one

252
00:11:38,180 --> 00:11:40,280
percent buffer fool I did the same thing

253
00:11:40,280 --> 00:11:42,020
when the category page I was 8 percent

254
00:11:42,020 --> 00:11:43,700
buffer fool and that's because the

255
00:11:43,700 --> 00:11:45,230
browser can only handle so much

256
00:11:45,230 --> 00:11:46,760
happening at the same time when he do

257
00:11:46,760 --> 00:11:48,830
performance or memory you're taking a

258
00:11:48,830 --> 00:11:50,870
toll on the browser network maybe but

259
00:11:50,870 --> 00:11:52,580
not so much you're taking a toll on the

260
00:11:52,580 --> 00:11:55,010
browser so it's actually Firefox is

261
00:11:55,010 --> 00:11:59,330
actually going to show you this takes at

262
00:11:59,330 --> 00:12:01,100
all right so I'm gonna look at what I

263
00:12:01,100 --> 00:12:03,080
did I started scrolling for a bit and

264
00:12:03,080 --> 00:12:04,970
scrolling didn't do a lot of things for

265
00:12:04,970 --> 00:12:10,220
me the color coded I can zoom in if any

266
00:12:10,220 --> 00:12:12,200
further so the whole thing is color

267
00:12:12,200 --> 00:12:17,060
coded and it shows me purple as style

268
00:12:17,060 --> 00:12:19,430
changes and that means I scrolled a bit

269
00:12:19,430 --> 00:12:21,830
some some more stuff came into view I

270
00:12:21,830 --> 00:12:24,560
hovered over bit and then the Styles had

271
00:12:24,560 --> 00:12:27,710
to change for it it's not really it's

272
00:12:27,710 --> 00:12:30,080
not really a problem except I've got a

273
00:12:30,080 --> 00:12:33,260
ton of them and that means out of those

274
00:12:33,260 --> 00:12:36,140
yes as out of that CSS file you've got a

275
00:12:36,140 --> 00:12:38,270
lot of competing rules or you've got a

276
00:12:38,270 --> 00:12:40,100
lot of things that change state based on

277
00:12:40,100 --> 00:12:42,980
where my mouse is and that's why I see a

278
00:12:42,980 --> 00:12:44,930
bunch of recalculating style I actually

279
00:12:44,930 --> 00:12:47,120
only see one paint in the whole thing

280
00:12:47,120 --> 00:12:50,960
which is good so the way this happens is

281
00:12:50,960 --> 00:12:52,910
once you start changing things with

282
00:12:52,910 --> 00:12:55,750
JavaScript that that have to do with CSS

283
00:12:55,750 --> 00:12:59,270
it needs to repaint the browser instead

284
00:12:59,270 --> 00:13:01,190
of just recalculating style because you

285
00:13:01,190 --> 00:13:02,900
basically said I have the CSS style

286
00:13:02,900 --> 00:13:05,540
worked with it and then you start

287
00:13:05,540 --> 00:13:07,490
scrolling about and things happen but as

288
00:13:07,490 --> 00:13:09,170
soon as you tell it tell it from

289
00:13:09,170 --> 00:13:10,970
JavaScript look there's this new rule

290
00:13:10,970 --> 00:13:12,980
for it it's gonna have to do a repaint

291
00:13:12,980 --> 00:13:14,420
because it does not understand where to

292
00:13:14,420 --> 00:13:15,529
put that in

293
00:13:15,529 --> 00:13:18,019
context of the of the styles so that's

294
00:13:18,019 --> 00:13:19,730
actually good it's better than most

295
00:13:19,730 --> 00:13:21,829
websites out there there's some websites

296
00:13:21,829 --> 00:13:24,139
that in the paint category you get right

297
00:13:24,139 --> 00:13:26,720
up paint every few seconds and that's

298
00:13:26,720 --> 00:13:29,329
because you interacted with JavaScript

299
00:13:29,329 --> 00:13:31,370
on the Dom there's a bunch of Dom events

300
00:13:31,370 --> 00:13:34,129
in here or I just hovered on it so

301
00:13:34,129 --> 00:13:35,959
there's a bunch of Dom events in here

302
00:13:35,959 --> 00:13:40,279
that trigger repaint on the browser now

303
00:13:40,279 --> 00:13:42,709
I'm gonna look for it it's just this is

304
00:13:42,709 --> 00:13:46,579
me scrolling Dom events and styles how

305
00:13:46,579 --> 00:13:47,269
do you fix that

306
00:13:47,269 --> 00:13:49,269
how do you stop me from triggering

307
00:13:49,269 --> 00:13:52,790
recalculating style and Dom events do

308
00:13:52,790 --> 00:13:54,170
you really need hover effects on all

309
00:13:54,170 --> 00:13:56,360
buttons if you do I'm sorry it's gonna

310
00:13:56,360 --> 00:13:58,220
take a perform install if you don't you

311
00:13:58,220 --> 00:14:00,290
don't really need to put them in and

312
00:14:00,290 --> 00:14:03,110
want to look at the page to the point

313
00:14:03,110 --> 00:14:13,160
where I think I refreshed here right so

314
00:14:13,160 --> 00:14:15,110
this is where I started doing the

315
00:14:15,110 --> 00:14:18,259
Refresh what my browser understands by

316
00:14:18,259 --> 00:14:21,199
that as right let's keep the web debate

317
00:14:21,199 --> 00:14:25,519
I was in in sort of a dead zone ready to

318
00:14:25,519 --> 00:14:27,740
decommission it and let's show the new

319
00:14:27,740 --> 00:14:29,720
stuff but the decommissioning bed means

320
00:14:29,720 --> 00:14:32,029
all your JavaScript that's in there is

321
00:14:32,029 --> 00:14:32,870
taking at all

322
00:14:32,870 --> 00:14:35,120
and technically when you're doing

323
00:14:35,120 --> 00:14:37,670
refresh on your website only your

324
00:14:37,670 --> 00:14:39,529
website suffers but most of it is gonna

325
00:14:39,529 --> 00:14:41,360
be oh there is a navigation and a new

326
00:14:41,360 --> 00:14:43,129
page so it actually make you're making

327
00:14:43,129 --> 00:14:45,529
the next page a bit slower just because

328
00:14:45,529 --> 00:14:48,680
I got JavaScript trying to dump the

329
00:14:48,680 --> 00:14:51,709
garbage collection and it's trying to do

330
00:14:51,709 --> 00:14:53,569
it non incrementally and it's basically

331
00:14:53,569 --> 00:14:55,519
saying I don't really care just dump

332
00:14:55,519 --> 00:14:57,379
dump dump let's get a block of thread

333
00:14:57,379 --> 00:15:01,129
for a bit and then after I did that it

334
00:15:01,129 --> 00:15:03,860
started loading the new bit and the new

335
00:15:03,860 --> 00:15:06,800
bits come with sty recalculations

336
00:15:06,800 --> 00:15:08,929
I don't understand what I do function

337
00:15:08,929 --> 00:15:12,259
calls and that probably means your

338
00:15:12,259 --> 00:15:14,300
JavaScript starts doing things as soon

339
00:15:14,300 --> 00:15:16,069
as it hits the page do I want to know

340
00:15:16,069 --> 00:15:17,899
what's it built in do I want to look

341
00:15:17,899 --> 00:15:19,699
under the hood are you gonna tell me is

342
00:15:19,699 --> 00:15:24,559
it react No thank God right so it still

343
00:15:24,559 --> 00:15:26,750
means your JavaScript starts doing stuff

344
00:15:26,750 --> 00:15:29,510
to the page as soon as it loads

345
00:15:29,510 --> 00:15:31,880
the timeout beds are the ones that keep

346
00:15:31,880 --> 00:15:38,600
popping up let's look at what so if I

347
00:15:38,600 --> 00:15:39,950
actually want to see what's the

348
00:15:39,950 --> 00:15:42,110
offending piece of code I can every vent

349
00:15:42,110 --> 00:15:44,360
has something tied to it and this for

350
00:15:44,360 --> 00:15:46,250
example once I click on it it opened the

351
00:15:46,250 --> 00:15:48,200
debugger for me so I can look at the

352
00:15:48,200 --> 00:15:51,200
line of code and that's I set my my

353
00:15:51,200 --> 00:15:55,610
script is loaded config whatever I

354
00:15:55,610 --> 00:15:57,170
loaded something and that's the piece of

355
00:15:57,170 --> 00:16:00,410
code that made that specific trigger if

356
00:16:00,410 --> 00:16:02,780
we go back to it I can look at what

357
00:16:02,780 --> 00:16:07,000
maybe

358
00:16:07,010 --> 00:16:10,730
right done event that's the load Dom

359
00:16:10,730 --> 00:16:13,160
event that means the the Dom even loaded

360
00:16:13,160 --> 00:16:16,100
page triggered my only problem with it I

361
00:16:16,100 --> 00:16:18,560
see twice so I means you finish loading

362
00:16:18,560 --> 00:16:20,000
it and then it is something more in

363
00:16:20,000 --> 00:16:21,470
JavaScript and it load it again I

364
00:16:21,470 --> 00:16:24,949
strongly advise you to do dum-dum load

365
00:16:24,949 --> 00:16:27,560
it just maybe once because it's enough

366
00:16:27,560 --> 00:16:30,139
and whenever you do load loaded unloaded

367
00:16:30,139 --> 00:16:32,149
it's going to start doing recalculating

368
00:16:32,149 --> 00:16:33,980
status is gonna figure out I missed

369
00:16:33,980 --> 00:16:36,079
something class panic and do it again

370
00:16:36,079 --> 00:16:38,570
the new browser engines are a lot better

371
00:16:38,570 --> 00:16:42,500
at this if this isn't your thing this is

372
00:16:42,500 --> 00:16:45,290
kind of a hard to visualize because you

373
00:16:45,290 --> 00:16:47,990
see you see the type of events and I can

374
00:16:47,990 --> 00:16:49,639
see most of the events have to do with

375
00:16:49,639 --> 00:16:51,170
the Dom in the first part because I

376
00:16:51,170 --> 00:16:53,360
scrolled around a bit and the second

377
00:16:53,360 --> 00:16:56,149
part it's just doing stuff stopping

378
00:16:56,149 --> 00:16:57,470
doing stuff stopping doing stuff

379
00:16:57,470 --> 00:16:59,360
stopping means you're lazy loading

380
00:16:59,360 --> 00:17:02,410
something using javascript and this

381
00:17:02,410 --> 00:17:04,640
you're getting a good frame rate per

382
00:17:04,640 --> 00:17:08,150
second which is like 50 anything between

383
00:17:08,150 --> 00:17:10,669
30 and 60 is acceptable anything under

384
00:17:10,669 --> 00:17:13,010
30 is not if you're doing game the stuff

385
00:17:13,010 --> 00:17:14,390
on the web you would really want to go

386
00:17:14,390 --> 00:17:16,370
for sex to your video stuff like that

387
00:17:16,370 --> 00:17:19,189
you can visualize this whole thing and

388
00:17:19,189 --> 00:17:20,870
different ways so you can see it as a

389
00:17:20,870 --> 00:17:25,669
call tree and it shows you let's see if

390
00:17:25,669 --> 00:17:28,840
I can make it

391
00:17:28,850 --> 00:17:32,930
knob

392
00:17:32,940 --> 00:17:36,020
you

393
00:17:36,030 --> 00:17:38,280


394
00:17:38,290 --> 00:17:43,570
maybe so it's you can see every piece

395
00:17:43,570 --> 00:17:45,190
javascript that interact on your page or

396
00:17:45,190 --> 00:17:47,980
every piece of code in a three down view

397
00:17:47,980 --> 00:17:50,289
so you can see what's the down to the

398
00:17:50,289 --> 00:17:54,340
level of right this is my most offending

399
00:17:54,340 --> 00:17:55,990
function that takes the longest it's a

400
00:17:55,990 --> 00:17:56,649
single one

401
00:17:56,649 --> 00:18:00,250
it's PDP GS I don't know what PDP does

402
00:18:00,250 --> 00:18:02,440
but you can figure out right that's my

403
00:18:02,440 --> 00:18:04,720
problem I'm gonna focus on this one of

404
00:18:04,720 --> 00:18:07,269
the other things that the flame chart is

405
00:18:07,269 --> 00:18:10,809
if you want to see it and see this is

406
00:18:10,809 --> 00:18:12,340
probably the like you can figure out

407
00:18:12,340 --> 00:18:14,470
where I did refresh because this was

408
00:18:14,470 --> 00:18:16,809
linear and then I started doing a bunch

409
00:18:16,809 --> 00:18:18,460
of different things at the same time and

410
00:18:18,460 --> 00:18:20,470
that's basically the point where I hit

411
00:18:20,470 --> 00:18:24,519
refresh regularly your page once it

412
00:18:24,519 --> 00:18:26,590
loads it's going to do stuff linearly

413
00:18:26,590 --> 00:18:29,620
and that Styles JavaScript and stuff

414
00:18:29,620 --> 00:18:32,259
like that if you see this it means

415
00:18:32,259 --> 00:18:33,970
you're doing either a single page app

416
00:18:33,970 --> 00:18:35,350
that hits the net will give you a few

417
00:18:35,350 --> 00:18:37,539
times and it's reflashing the view or

418
00:18:37,539 --> 00:18:41,799
you just reloaded the page so I told you

419
00:18:41,799 --> 00:18:45,159
this was the recording one of the things

420
00:18:45,159 --> 00:18:46,750
that I find cool about the the

421
00:18:46,750 --> 00:18:49,090
performance inspector is you can

422
00:18:49,090 --> 00:18:52,360
actually import so if you do this in a

423
00:18:52,360 --> 00:18:54,490
team which probably most of you probably

424
00:18:54,490 --> 00:18:58,000
are if you if you care about perform or

425
00:18:58,000 --> 00:18:59,259
if you get to that point with your app

426
00:18:59,259 --> 00:19:01,120
where performance is an issue probably

427
00:19:01,120 --> 00:19:03,340
have a big team it's really hard to work

428
00:19:03,340 --> 00:19:05,759
on performance in a team just because

429
00:19:05,759 --> 00:19:09,490
your recordings are going to show

430
00:19:09,490 --> 00:19:11,529
something and your teammates are going

431
00:19:11,529 --> 00:19:13,480
to show something slightly different

432
00:19:13,480 --> 00:19:16,149
every time but with the import feature

433
00:19:16,149 --> 00:19:20,080
so you can save this recording and use

434
00:19:20,080 --> 00:19:21,970
that as the baseline for the entire team

435
00:19:21,970 --> 00:19:24,159
and then you can all work on the same

436
00:19:24,159 --> 00:19:26,919
data instead of having to oh I created

437
00:19:26,919 --> 00:19:31,500
slightly different data problems so

438
00:19:31,500 --> 00:19:34,419
Network and performance performance has

439
00:19:34,419 --> 00:19:36,429
to do just a tiny little bit with

440
00:19:36,429 --> 00:19:39,399
JavaScript and it's mostly a job my

441
00:19:39,399 --> 00:19:41,950
JavaScript is triggering out other event

442
00:19:41,950 --> 00:19:45,789
or streaking out other other stuff or

443
00:19:45,789 --> 00:19:48,580
it's oh I need a garbage collector what

444
00:19:48,580 --> 00:19:50,350
happens when you want to go down to

445
00:19:50,350 --> 00:19:52,960
JavaScript level to function level to

446
00:19:52,960 --> 00:19:56,990
see where it eats up memory there

447
00:19:56,990 --> 00:20:00,410
is the memory tab this was where it's

448
00:20:00,410 --> 00:20:03,380
kinda the same way in except you don't

449
00:20:03,380 --> 00:20:06,460
record your memory you take a stop

450
00:20:06,460 --> 00:20:09,410
snapshot of it so they have to record

451
00:20:09,410 --> 00:20:11,300
anything it's gonna go and grab as much

452
00:20:11,300 --> 00:20:13,310
memory as it can and then figure out

453
00:20:13,310 --> 00:20:15,950
what what the memory is used for see if

454
00:20:15,950 --> 00:20:19,520
I look at this I took a snapshot and I

455
00:20:19,520 --> 00:20:22,640
can see visually I can see where my what

456
00:20:22,640 --> 00:20:25,130
my memory is going and that means my dom

457
00:20:25,130 --> 00:20:28,130
nodes do five megabytes of memory that's

458
00:20:28,130 --> 00:20:33,350
not a lot with about 5,000 dominoes do I

459
00:20:33,350 --> 00:20:35,810
want no way I have 5,000 downloads and

460
00:20:35,810 --> 00:20:37,700
means whenever you create a new element

461
00:20:37,700 --> 00:20:39,500
or whenever you hide it and close it and

462
00:20:39,500 --> 00:20:40,940
stuff like that it interacts with dom

463
00:20:40,940 --> 00:20:42,860
whenever you change the properties on it

464
00:20:42,860 --> 00:20:46,090
a new domino gets created in memory and

465
00:20:46,090 --> 00:20:48,440
probably on the page you have close to

466
00:20:48,440 --> 00:20:52,640
200 300 maybe but it means in memory

467
00:20:52,640 --> 00:20:54,140
every time you do something with those

468
00:20:54,140 --> 00:20:55,970
300 notes they get multiplied and

469
00:20:55,970 --> 00:20:59,810
multiplied and multiplied you strangely

470
00:20:59,810 --> 00:21:01,820
have two documents on a page most

471
00:21:01,820 --> 00:21:06,290
websites have one and that means you

472
00:21:06,290 --> 00:21:08,690
triggered you triggered the dom loaded

473
00:21:08,690 --> 00:21:11,060
event that means you trigger the

474
00:21:11,060 --> 00:21:12,680
downloaded event twice so the first

475
00:21:12,680 --> 00:21:14,390
document that was loaded was saved in

476
00:21:14,390 --> 00:21:16,880
memory but then we loved it the other

477
00:21:16,880 --> 00:21:19,010
one it said oopsie I need to create a

478
00:21:19,010 --> 00:21:20,630
new document for you see how both in

479
00:21:20,630 --> 00:21:22,310
memory right now even though one isn't

480
00:21:22,310 --> 00:21:26,870
doing anything the script is the next

481
00:21:26,870 --> 00:21:29,860
big offender after that so this is

482
00:21:29,860 --> 00:21:32,660
zoomable so you can see exactly what

483
00:21:32,660 --> 00:21:34,700
scripts are taking up most of the memory

484
00:21:34,700 --> 00:21:39,050
I'm gonna look at the biggest one the

485
00:21:39,050 --> 00:21:42,160
lazy loading PDP is the the ever

486
00:21:42,160 --> 00:21:44,660
offending PDP that is that's the biggest

487
00:21:44,660 --> 00:21:47,540
one and then the just-in-time compiler

488
00:21:47,540 --> 00:21:49,670
is eating some of the that memory up as

489
00:21:49,670 --> 00:21:52,850
well apparently you've got no file name

490
00:21:52,850 --> 00:21:54,470
that means you have inline styles

491
00:21:54,470 --> 00:21:56,810
somewhere in your HTML but anything got

492
00:21:56,810 --> 00:21:58,790
part of the page the Google tag manager

493
00:21:58,790 --> 00:22:00,830
that usually shows up if you want

494
00:22:00,830 --> 00:22:02,570
analytics analytics it could be going to

495
00:22:02,570 --> 00:22:05,330
be a big chunk of your of your script

496
00:22:05,330 --> 00:22:09,200
and then you've got objects it's a given

497
00:22:09,200 --> 00:22:10,550
you work with JavaScript that keeps

498
00:22:10,550 --> 00:22:13,550
object in memory most of the time it's

499
00:22:13,550 --> 00:22:15,620
functions objects that you have problems

500
00:22:15,620 --> 00:22:17,690
with but if you go down the stack you

501
00:22:17,690 --> 00:22:20,530
can see for example if your regex

502
00:22:20,530 --> 00:22:22,730
regular expression heavy and stuff like

503
00:22:22,730 --> 00:22:25,970
that it eats up the memory the strings

504
00:22:25,970 --> 00:22:28,010
that's not really important everybody

505
00:22:28,010 --> 00:22:29,720
has strings you could probably cut it

506
00:22:29,720 --> 00:22:31,850
down with using glass spaces in your

507
00:22:31,850 --> 00:22:35,810
HTML and stuff like that the other is

508
00:22:35,810 --> 00:22:39,890
interesting though you've got weird

509
00:22:39,890 --> 00:22:41,930
stuff the JavaScript engine is going

510
00:22:41,930 --> 00:22:44,570
like object group and shared and shape

511
00:22:44,570 --> 00:22:50,390
which D the profiler doesn't know how to

512
00:22:50,390 --> 00:22:53,780
interpret it comes down to your using

513
00:22:53,780 --> 00:22:55,790
custom classes in your JavaScript and

514
00:22:55,790 --> 00:22:59,240
that get bundled up into other so I've

515
00:22:59,240 --> 00:23:02,240
showed you how to do I've showed you how

516
00:23:02,240 --> 00:23:06,320
to do network performance to get you as

517
00:23:06,320 --> 00:23:08,750
fast as possible to client rendering

518
00:23:08,750 --> 00:23:10,610
performance on top of other things and

519
00:23:10,610 --> 00:23:13,670
then memory performance the only part

520
00:23:13,670 --> 00:23:17,150
where JavaScript actually matters in a

521
00:23:17,150 --> 00:23:19,190
micro performance optimizations matter I

522
00:23:19,190 --> 00:23:22,040
mean here which you're not doing too bad

523
00:23:22,040 --> 00:23:23,450
if you look at the different website

524
00:23:23,450 --> 00:23:26,810
mine has many many more JavaScript I

525
00:23:26,810 --> 00:23:32,660
think maybe 100 lines and of course dev

526
00:23:32,660 --> 00:23:35,270
tools failed why wouldn't it it's a live

527
00:23:35,270 --> 00:23:43,180
demo so if you look at mine you can see

528
00:23:43,180 --> 00:23:47,510
my script is actually smaller than my

529
00:23:47,510 --> 00:23:51,770
strings it's minimal but I have my Dom

530
00:23:51,770 --> 00:23:54,290
nodes are big and this is a static

531
00:23:54,290 --> 00:24:00,820
website with maybe maybe 100 lines

532
00:24:00,820 --> 00:24:04,010
hundred and something lines of HTML tops

533
00:24:04,010 --> 00:24:07,430
and that still shows as 763 count

534
00:24:07,430 --> 00:24:10,100
whereas your showed 5,000 and you can

535
00:24:10,100 --> 00:24:11,600
look at that the stuff you can improve

536
00:24:11,600 --> 00:24:13,420
if you want to go down to actual

537
00:24:13,420 --> 00:24:17,650
JavaScript performance you saw the

538
00:24:17,650 --> 00:24:22,980
performance bit

539
00:24:22,990 --> 00:24:26,310
right

540
00:24:26,320 --> 00:24:29,330
so if you want to go down to the

541
00:24:29,330 --> 00:24:35,920
JavaScript level you can

542
00:24:35,930 --> 00:24:39,990
but your browser dev tools isn't the

543
00:24:39,990 --> 00:24:42,330
best tool for it like network

544
00:24:42,330 --> 00:24:44,910
performance and memory are not the best

545
00:24:44,910 --> 00:24:47,100
way to trace all your JavaScript I

546
00:24:47,100 --> 00:24:49,380
actually think the console is the best

547
00:24:49,380 --> 00:24:51,360
way to trace your JavaScript but I'm

548
00:24:51,360 --> 00:24:54,450
running out of time yeah I'm running out

549
00:24:54,450 --> 00:24:57,060
of time so I'll stop here for a bit

550
00:24:57,060 --> 00:24:59,940
I think the console is the perfect way

551
00:24:59,940 --> 00:25:02,910
to basically debug your JavaScript and

552
00:25:02,910 --> 00:25:04,680
there's two things in the console API

553
00:25:04,680 --> 00:25:08,240
which help you a lot and that's console

554
00:25:08,240 --> 00:25:17,210
that time and console that time and and

555
00:25:17,210 --> 00:25:19,730
that takes you how long your JavaScript

556
00:25:19,730 --> 00:25:22,500
executes or how long how long it took

557
00:25:22,500 --> 00:25:24,840
between these points in your execution

558
00:25:24,840 --> 00:25:29,010
and the other stuff is console that

559
00:25:29,010 --> 00:25:32,340
trace console that trace isn't gonna

560
00:25:32,340 --> 00:25:34,740
work as I have an anonymous function in

561
00:25:34,740 --> 00:25:38,460
here but console dot trace shows you

562
00:25:38,460 --> 00:25:41,340
every function you have to pass through

563
00:25:41,340 --> 00:25:44,910
or skip through to get to the point

564
00:25:44,910 --> 00:25:48,570
you're at now and that means this

565
00:25:48,570 --> 00:25:50,880
function gets called at the first level

566
00:25:50,880 --> 00:25:52,890
at the second level and at the seventh

567
00:25:52,890 --> 00:25:55,320
level of my execution this is the thing

568
00:25:55,320 --> 00:25:58,290
I'm gonna optimize first if it's one of

569
00:25:58,290 --> 00:26:01,860
those oh this thing actually maybe gets

570
00:26:01,860 --> 00:26:04,200
called once every blue moon

571
00:26:04,200 --> 00:26:05,910
I'm not gonna optimize that I'm gonna

572
00:26:05,910 --> 00:26:08,610
stop it here if you have questions now's

573
00:26:08,610 --> 00:26:10,560
a good time I still I think I still have

574
00:26:10,560 --> 00:26:21,560
like two minutes for questions yes

575
00:26:21,570 --> 00:26:24,570
perfect yes it's a blank page no the

576
00:26:24,570 --> 00:26:26,990
whole point that the whole point of

577
00:26:26,990 --> 00:26:30,660
performance optimization is you optimize

578
00:26:30,660 --> 00:26:32,760
you can't make it perfect you have to

579
00:26:32,760 --> 00:26:35,040
make trade-offs every day do you want

580
00:26:35,040 --> 00:26:37,470
images images are usually big you need

581
00:26:37,470 --> 00:26:39,300
images for your website is this business

582
00:26:39,300 --> 00:26:41,700
critical well it's gonna be big at least

583
00:26:41,700 --> 00:26:46,290
you can load them either five at five at

584
00:26:46,290 --> 00:26:48,510
the same time all in one or you can load

585
00:26:48,510 --> 00:26:50,670
them bed by bed by with streams and

586
00:26:50,670 --> 00:26:51,240
stuff like that

587
00:26:51,240 --> 00:26:53,460
Oh via WebSockets keep a connection

588
00:26:53,460 --> 00:26:55,830
alive if you're doing seven images the

589
00:26:55,830 --> 00:26:58,200
HTTP keep alive and since seven images

590
00:26:58,200 --> 00:26:59,760
on the same connection instead of having

591
00:26:59,760 --> 00:27:02,370
to renegotiate the same connection over

592
00:27:02,370 --> 00:27:05,820
and over and over again

593
00:27:05,830 --> 00:27:09,280
cool any other questions

594
00:27:09,280 --> 00:27:14,810
yes the marketing stripped right so

595
00:27:14,810 --> 00:27:19,460
scripts scripts are usually static even

596
00:27:19,460 --> 00:27:22,100
Google Analytics you can download Google

597
00:27:22,100 --> 00:27:25,310
Analytics run it bundle it with your own

598
00:27:25,310 --> 00:27:28,540
script the problem with the script is

599
00:27:28,540 --> 00:27:31,370
usually well you need analytics you're

600
00:27:31,370 --> 00:27:32,510
going to live with Google tag manager

601
00:27:32,510 --> 00:27:35,390
you saw that was a chunk it's one of the

602
00:27:35,390 --> 00:27:37,880
trade-offs you want at hyper performant

603
00:27:37,880 --> 00:27:41,420
you give up analytics which I wouldn't

604
00:27:41,420 --> 00:27:42,710
do to be honest I wouldn't do I like

605
00:27:42,710 --> 00:27:44,690
analytics I like knowing how my website

606
00:27:44,690 --> 00:27:47,780
performs outside of my little bubble I

607
00:27:47,780 --> 00:27:50,270
wouldn't trade it for that but the 17

608
00:27:50,270 --> 00:27:52,160
that you can change because it's

609
00:27:52,160 --> 00:27:53,930
probably three external and 17 that you

610
00:27:53,930 --> 00:27:55,790
make seventeen that you change that's

611
00:27:55,790 --> 00:27:56,870
the bulk of your performance

612
00:27:56,870 --> 00:27:58,940
optimization nobody says you can make it

613
00:27:58,940 --> 00:28:01,160
perfect but you can take care of the

614
00:28:01,160 --> 00:28:03,560
stuff that you can influence for example

615
00:28:03,560 --> 00:28:05,510
you don't control the hosting or you

616
00:28:05,510 --> 00:28:06,980
have to go to DevOps to control the

617
00:28:06,980 --> 00:28:08,600
hosting it's not really a front-end

618
00:28:08,600 --> 00:28:10,910
developers job to control the hosting or

619
00:28:10,910 --> 00:28:13,040
the server you're running in but it's

620
00:28:13,040 --> 00:28:15,920
something you can see and you can debug

621
00:28:15,920 --> 00:28:18,740
you don't have to necessarily fix it you

622
00:28:18,740 --> 00:28:20,150
can have someone else fix it but you can

623
00:28:20,150 --> 00:28:22,520
say hey this is a problem and I think

624
00:28:22,520 --> 00:28:26,250
that's time and I'm gonna thank you

625
00:28:26,250 --> 00:28:27,760
[Applause]

