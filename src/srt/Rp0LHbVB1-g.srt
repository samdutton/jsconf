1
00:00:10,790 --> 00:00:14,519

good afternoon and welcome to making a

2
00:00:14,519 --> 00:00:18,180
jack sexy if you get tired of listening

3
00:00:18,180 --> 00:00:19,770
to me and just feel like being geeky you

4
00:00:19,770 --> 00:00:21,660
can just go right to the source and just

5
00:00:21,660 --> 00:00:24,120
skip ahead to the good parts adds up on

6
00:00:24,120 --> 00:00:26,820
github if you'd like to read some

7
00:00:26,820 --> 00:00:28,530
hastily scribe documentation you can

8
00:00:28,530 --> 00:00:32,150
also check out my website sexy J s calm

9
00:00:32,150 --> 00:00:34,800
but I have to warn you that it's it's

10
00:00:34,800 --> 00:00:36,900
actually been deemed too risque for the

11
00:00:36,900 --> 00:00:41,940
workplace by this guy who was very

12
00:00:41,940 --> 00:00:46,020
direct in his opinion and it's

13
00:00:46,020 --> 00:00:47,400
unfortunate because I think there's one

14
00:00:47,400 --> 00:00:51,210
less user you know that I've reached but

15
00:00:51,210 --> 00:00:54,329
if you think it's not safe for work but

16
00:00:54,329 --> 00:00:56,790
you'd still like to try it I've created

17
00:00:56,790 --> 00:00:59,430
another version for you I just passed

18
00:00:59,430 --> 00:01:02,250
that along and you can have a netscape

19
00:01:02,250 --> 00:01:06,780
navigator for experience but at least

20
00:01:06,780 --> 00:01:11,940
it's compatible and compliant okay let

21
00:01:11,940 --> 00:01:18,110
me just look through my notes here okay

22
00:01:18,110 --> 00:01:21,240
yeah ah alright so some of you might

23
00:01:21,240 --> 00:01:23,790
remember me from Jas humph oh wait this

24
00:01:23,790 --> 00:01:27,420
is all I didn't realize I have to all

25
00:01:27,420 --> 00:01:28,530
right well you can't see it but that's

26
00:01:28,530 --> 00:01:32,100
my name down there um there you go i

27
00:01:32,100 --> 00:01:33,920
wonder what else you've missed so far

28
00:01:33,920 --> 00:01:39,240
yes i well yes that was me um so I had a

29
00:01:39,240 --> 00:01:41,070
great time listening didn't speak

30
00:01:41,070 --> 00:01:43,770
because I slept through it no I'm a UI

31
00:01:43,770 --> 00:01:45,720
engineer for Major League Baseball a

32
00:01:45,720 --> 00:01:48,060
long time JavaScript er long-form

33
00:01:48,060 --> 00:01:51,270
improviser and all-around nice guy i'm

34
00:01:51,270 --> 00:01:53,400
known as firth here and all around the

35
00:01:53,400 --> 00:01:57,720
internets I've come to you today about

36
00:01:57,720 --> 00:02:01,200
your data your never-ending lust your

37
00:02:01,200 --> 00:02:03,659
insatiable taste for data and

38
00:02:03,659 --> 00:02:06,659
asynchronous data and some sequential a

39
00:02:06,659 --> 00:02:08,879
jack patterns that you can use for

40
00:02:08,879 --> 00:02:11,069
loading and combining your data as well

41
00:02:11,069 --> 00:02:12,840
as a little library rope called sexy

42
00:02:12,840 --> 00:02:15,050
which makes it pretty

43
00:02:15,050 --> 00:02:18,030
by a show of hands how many people here

44
00:02:18,030 --> 00:02:19,710
have ever worked on an application that

45
00:02:19,710 --> 00:02:24,990
uses Ajax and how many of you have built

46
00:02:24,990 --> 00:02:27,560
a page that made more than one request

47
00:02:27,560 --> 00:02:32,490
and how many of you have wanted the two

48
00:02:32,490 --> 00:02:35,940
data data points to you know to you know

49
00:02:35,940 --> 00:02:40,140
interact meaningfully okay anyone else

50
00:02:40,140 --> 00:02:44,460
can leave this is about being able to

51
00:02:44,460 --> 00:02:46,620
combine data from different points well

52
00:02:46,620 --> 00:02:47,790
that's where the story starts and it

53
00:02:47,790 --> 00:02:49,560
turns out that there's a little more to

54
00:02:49,560 --> 00:02:54,870
sexy but we will wander down the garden

55
00:02:54,870 --> 00:02:58,290
path in a moment you know so as we start

56
00:02:58,290 --> 00:03:00,750
integrating more and more data sources

57
00:03:00,750 --> 00:03:03,000
we want our code to you know be

58
00:03:03,000 --> 00:03:06,390
maintainable logical for me I Major

59
00:03:06,390 --> 00:03:08,010
League Baseball I just finished working

60
00:03:08,010 --> 00:03:09,630
on the new scoreboard page which

61
00:03:09,630 --> 00:03:11,910
requires about five different data loads

62
00:03:11,910 --> 00:03:14,430
from different services so before

63
00:03:14,430 --> 00:03:17,130
rendering every single thing I wanted to

64
00:03:17,130 --> 00:03:19,740
unite the data beforehand but I didn't

65
00:03:19,740 --> 00:03:23,310
want to wait you know for a chain series

66
00:03:23,310 --> 00:03:25,230
of events I needed this to happen fast

67
00:03:25,230 --> 00:03:28,370
and this is where the idea came from

68
00:03:28,370 --> 00:03:31,740
sequential Ajax allows you to make

69
00:03:31,740 --> 00:03:33,570
parallel requests and handle the

70
00:03:33,570 --> 00:03:37,530
callbacks in sequence and sexy makes

71
00:03:37,530 --> 00:03:42,870
sequential Ajax sexy so sequoias button

72
00:03:42,870 --> 00:03:46,440
fell sequential Ajax just refers to any

73
00:03:46,440 --> 00:03:48,930
Ajax pattern designed to handle multiple

74
00:03:48,930 --> 00:03:51,540
requests while maintaining a proper

75
00:03:51,540 --> 00:03:55,020
callback execution order the goals of

76
00:03:55,020 --> 00:03:56,490
cilantro Ajax are basically to

77
00:03:56,490 --> 00:03:57,660
facilitate the combination of

78
00:03:57,660 --> 00:04:00,570
manipulation make it easy for you to put

79
00:04:00,570 --> 00:04:02,640
these pieces a day together to find some

80
00:04:02,640 --> 00:04:04,290
performance enhancement by using

81
00:04:04,290 --> 00:04:07,920
parallel asynchronous requests to speed

82
00:04:07,920 --> 00:04:10,560
the execution of the callbacks as data

83
00:04:10,560 --> 00:04:12,690
comes back if all previous dependencies

84
00:04:12,690 --> 00:04:15,030
are there go ahead and fire if they

85
00:04:15,030 --> 00:04:17,370
haven't wait and when they get there

86
00:04:17,370 --> 00:04:19,560
fire and I think it should be fun

87
00:04:19,560 --> 00:04:21,720
because I think programming is a lot of

88
00:04:21,720 --> 00:04:24,630
fun and I love JavaScript and I hate

89
00:04:24,630 --> 00:04:26,370
when my code gets uncomfortable where I

90
00:04:26,370 --> 00:04:27,430
feel like I'm really cool

91
00:04:27,430 --> 00:04:31,050
doing something in so sexy has helped

92
00:04:31,050 --> 00:04:33,639
helped make my job a lot easier and more

93
00:04:33,639 --> 00:04:36,789
fun plus I get to respond to people on

94
00:04:36,789 --> 00:04:39,550
Twitter as you saw before so it's

95
00:04:39,550 --> 00:04:41,560
basically three types of sequential ajax

96
00:04:41,560 --> 00:04:43,509
at least that I've you know discerned

97
00:04:43,509 --> 00:04:46,180
there's cereal requests cereal response

98
00:04:46,180 --> 00:04:48,669
which waits to send a request once it

99
00:04:48,669 --> 00:04:50,440
receives the response from the previous

100
00:04:50,440 --> 00:04:52,840
call there's parallel requests random

101
00:04:52,840 --> 00:04:54,910
response where you send out the calls

102
00:04:54,910 --> 00:04:56,889
all at the same time and then use some

103
00:04:56,889 --> 00:04:58,120
sort of counter or other tracking

104
00:04:58,120 --> 00:04:59,680
variables to determine when all your

105
00:04:59,680 --> 00:05:01,960
date has arrived and then merge it in

106
00:05:01,960 --> 00:05:04,720
some common call back and then parallel

107
00:05:04,720 --> 00:05:06,940
requests your response which is what

108
00:05:06,940 --> 00:05:09,729
sexy is which lets you fire everything

109
00:05:09,729 --> 00:05:13,150
at once and then handle it in order no

110
00:05:13,150 --> 00:05:16,389
matter what order they come back so in a

111
00:05:16,389 --> 00:05:20,500
perfect world let's say we want to fire

112
00:05:20,500 --> 00:05:23,620
off three requests the server goes out

113
00:05:23,620 --> 00:05:25,720
does its thing those would be nice if

114
00:05:25,720 --> 00:05:28,270
they spun to indicate movement but I

115
00:05:28,270 --> 00:05:29,949
think you get the picture that this data

116
00:05:29,949 --> 00:05:32,169
is going out and coming back it's really

117
00:05:32,169 --> 00:05:35,110
nice when it comes back in order and it

118
00:05:35,110 --> 00:05:37,900
can share data with itself but in a

119
00:05:37,900 --> 00:05:42,699
world where time waits for no man or his

120
00:05:42,699 --> 00:05:47,979
day job we fire at our three requests

121
00:05:47,979 --> 00:05:51,250
again something happened at response a

122
00:05:51,250 --> 00:05:53,979
it slowed down B gets there first well

123
00:05:53,979 --> 00:05:55,990
those callbacks wait until they're

124
00:05:55,990 --> 00:05:57,460
triggered by the event of the success of

125
00:05:57,460 --> 00:06:02,770
a so let's look at some sequential ajax

126
00:06:02,770 --> 00:06:05,320
anti-patterns maybe if you see something

127
00:06:05,320 --> 00:06:06,699
familiar here you'll want to stick

128
00:06:06,699 --> 00:06:10,479
around till the end here we are using

129
00:06:10,479 --> 00:06:13,330
jquery if anyone's unfamiliar with

130
00:06:13,330 --> 00:06:16,240
jquery i don't know look it up real

131
00:06:16,240 --> 00:06:19,090
quick but yeah yeah actually yeah feel

132
00:06:19,090 --> 00:06:22,780
free to just ask questions right now but

133
00:06:22,780 --> 00:06:24,190
basically each one of these lines up

134
00:06:24,190 --> 00:06:26,860
here is adjacent requests so you can see

135
00:06:26,860 --> 00:06:28,120
in the top line we're requesting an

136
00:06:28,120 --> 00:06:30,280
article in the second where requests in

137
00:06:30,280 --> 00:06:31,630
the comments now this is sitting inside

138
00:06:31,630 --> 00:06:33,009
of the callback so it has to wait for

139
00:06:33,009 --> 00:06:34,990
the article to return before we can go

140
00:06:34,990 --> 00:06:37,659
ahead and request the comments we then

141
00:06:37,659 --> 00:06:39,760
bind the comments to the article and go

142
00:06:39,760 --> 00:06:40,540
ahead and render it

143
00:06:40,540 --> 00:06:44,080
the page the problem with this is while

144
00:06:44,080 --> 00:06:46,630
it's relatively readable it's slower we

145
00:06:46,630 --> 00:06:49,090
have to wait request response request

146
00:06:49,090 --> 00:06:51,940
response and nested calls don't

147
00:06:51,940 --> 00:06:54,460
necessarily scale at least not visually

148
00:06:54,460 --> 00:06:56,170
I mean you end up with code that looks

149
00:06:56,170 --> 00:07:04,900
like Charlie Brown on his back okay is

150
00:07:04,900 --> 00:07:08,560
this exact so the second anti-pattern is

151
00:07:08,560 --> 00:07:11,530
parallel request random response this

152
00:07:11,530 --> 00:07:15,040
pattern is quicker these calls though

153
00:07:15,040 --> 00:07:16,240
maybe not immediately obvious are

154
00:07:16,240 --> 00:07:19,630
getting fired at the same time then

155
00:07:19,630 --> 00:07:21,640
they're using a counter they're storing

156
00:07:21,640 --> 00:07:22,990
their data when they return and using a

157
00:07:22,990 --> 00:07:25,240
counter and when that counter I gets to

158
00:07:25,240 --> 00:07:26,950
to it knows that it's finished with the

159
00:07:26,950 --> 00:07:28,780
number of requests and it can handle its

160
00:07:28,780 --> 00:07:31,570
send its command callback now a problem

161
00:07:31,570 --> 00:07:34,180
with scaling this up is that you have

162
00:07:34,180 --> 00:07:35,470
tix you know you have to keep storage

163
00:07:35,470 --> 00:07:37,600
variables you have to keep you know any

164
00:07:37,600 --> 00:07:38,590
time you had a call you gotta remember

165
00:07:38,590 --> 00:07:41,890
go up change your variable and it just

166
00:07:41,890 --> 00:07:43,210
sort of ends up being a little bit

167
00:07:43,210 --> 00:07:46,390
crusty and long you know I like code

168
00:07:46,390 --> 00:07:48,520
that's as small as possible does what i

169
00:07:48,520 --> 00:07:53,170
want and is you know easy to update and

170
00:07:53,170 --> 00:07:55,990
maintain so if either one of these

171
00:07:55,990 --> 00:08:01,090
patterns look familiar meet sexy sexy is

172
00:08:01,090 --> 00:08:03,580
a jaya well it started as a jquery

173
00:08:03,580 --> 00:08:06,280
plugin it's a parallel request serial

174
00:08:06,280 --> 00:08:08,800
response library so we're making the

175
00:08:08,800 --> 00:08:10,680
request in parallel for speed and

176
00:08:10,680 --> 00:08:13,630
wrapping and eventing your specified

177
00:08:13,630 --> 00:08:15,790
callbacks so that we can put them back

178
00:08:15,790 --> 00:08:19,930
in order and sexy ensures callbacks in

179
00:08:19,930 --> 00:08:24,040
order every time well as of my version

180
00:08:24,040 --> 00:08:27,400
my arbitrary version 0.0 point that

181
00:08:27,400 --> 00:08:30,460
means zero point 8.0 sexies now stand

182
00:08:30,460 --> 00:08:35,050
alone sort of thanks to open source and

183
00:08:35,050 --> 00:08:38,890
John I've extracted the jquery ajax code

184
00:08:38,890 --> 00:08:42,040
and put it in as an adapter so it's if

185
00:08:42,040 --> 00:08:44,620
you look into the code you'll see that

186
00:08:44,620 --> 00:08:45,910
it's in its own closure and it gets

187
00:08:45,910 --> 00:08:47,650
passed in as a variable to sexies

188
00:08:47,650 --> 00:08:50,140
closure as an adapter the point of doing

189
00:08:50,140 --> 00:08:52,060
this was to make my own code easier to

190
00:08:52,060 --> 00:08:52,970
maintain every

191
00:08:52,970 --> 00:08:55,279
I'm there's a change to jQuery i can

192
00:08:55,279 --> 00:08:56,899
update that any time I have a changed my

193
00:08:56,899 --> 00:08:58,850
code I can update that and if anyone

194
00:08:58,850 --> 00:09:00,470
wants to port this to another library

195
00:09:00,470 --> 00:09:04,399
it's easy to write an adapter for it so

196
00:09:04,399 --> 00:09:08,300
sexy is classy calling new sexy creates

197
00:09:08,300 --> 00:09:10,819
a sexy instance to which you can go

198
00:09:10,819 --> 00:09:14,990
ahead and start chaining your calls but

199
00:09:14,990 --> 00:09:16,839
with a name like sexy which by the way

200
00:09:16,839 --> 00:09:19,040
wasn't out of any sense of ego it

201
00:09:19,040 --> 00:09:20,750
actually was it just another version of

202
00:09:20,750 --> 00:09:25,220
short and sequential Ajax but after a

203
00:09:25,220 --> 00:09:26,899
while I did think that this library had

204
00:09:26,899 --> 00:09:29,660
to be sexy to keep up with its name so i

205
00:09:29,660 --> 00:09:33,439
decided that new was old and that sexy

206
00:09:33,439 --> 00:09:36,860
is the new sexy so sexy with currents

207
00:09:36,860 --> 00:09:38,870
also creates its own instance you no

208
00:09:38,870 --> 00:09:41,889
longer need the new call of the new

209
00:09:41,889 --> 00:09:44,990
keyword to start your chain and this is

210
00:09:44,990 --> 00:09:47,029
an instance this is an object here it's

211
00:09:47,029 --> 00:09:49,250
not actually working off as some sexy

212
00:09:49,250 --> 00:09:52,459
singleton and for anyone who wants under

213
00:09:52,459 --> 00:09:55,639
the hood all we're doing inside of the

214
00:09:55,639 --> 00:09:57,920
constructor we're checking when when the

215
00:09:57,920 --> 00:09:59,059
function is called we're checking the

216
00:09:59,059 --> 00:10:01,790
instance of this if this is sexy then it

217
00:10:01,790 --> 00:10:03,860
was used with a new keyword if it wasn't

218
00:10:03,860 --> 00:10:05,720
it was called without a new keyword we

219
00:10:05,720 --> 00:10:08,120
just take the arguments and fight you

220
00:10:08,120 --> 00:10:10,639
know we instantiate and just sort of

221
00:10:10,639 --> 00:10:13,279
wrap it back around so the code will

222
00:10:13,279 --> 00:10:15,490
stop here and then come back through

223
00:10:15,490 --> 00:10:18,709
saving us a few characters and really it

224
00:10:18,709 --> 00:10:21,019
was just for fun but I didn't think that

225
00:10:21,019 --> 00:10:24,879
was sexy enough where am I going here Oh

226
00:10:24,879 --> 00:10:27,860
up is the new down and down is in a well

227
00:10:27,860 --> 00:10:30,829
there we go so this will also create a

228
00:10:30,829 --> 00:10:33,500
sexy instance I decided that most of the

229
00:10:33,500 --> 00:10:34,759
time I didn't need to put anything in

230
00:10:34,759 --> 00:10:36,500
those parentheses so they just made my

231
00:10:36,500 --> 00:10:39,379
code look big and so I decided to do

232
00:10:39,379 --> 00:10:42,410
away with them this creates an instance

233
00:10:42,410 --> 00:10:45,170
as well and we do this just by iterating

234
00:10:45,170 --> 00:10:47,829
the prototypal methods and creating

235
00:10:47,829 --> 00:10:50,470
static functions on the constructor

236
00:10:50,470 --> 00:10:53,120
which will apply the desired prototype

237
00:10:53,120 --> 00:10:54,949
method in the scope of a new instance

238
00:10:54,949 --> 00:10:57,319
since it's a chainable api it's always

239
00:10:57,319 --> 00:10:59,750
returning an instance so after you make

240
00:10:59,750 --> 00:11:01,790
that first call what you have back is

241
00:11:01,790 --> 00:11:05,519
your new object

242
00:11:05,529 --> 00:11:08,360
alright so let's take a look at sexies

243
00:11:08,360 --> 00:11:12,680
API sexy was designed to be expressive

244
00:11:12,680 --> 00:11:15,290
and chainable so that the code looks

245
00:11:15,290 --> 00:11:19,040
like what the code does there's a method

246
00:11:19,040 --> 00:11:22,130
for each supported data type these types

247
00:11:22,130 --> 00:11:26,000
reflect jQuery the jQuery roots with the

248
00:11:26,000 --> 00:11:29,360
exception of the style method which I

249
00:11:29,360 --> 00:11:32,630
added later for the sake of some sort of

250
00:11:32,630 --> 00:11:34,760
completeness because I found that I was

251
00:11:34,760 --> 00:11:37,190
using sexy to bootstrap apps by loading

252
00:11:37,190 --> 00:11:40,850
in scripts and then data and i was using

253
00:11:40,850 --> 00:11:43,310
text to load a templating engine or a

254
00:11:43,310 --> 00:11:44,450
template that would get parsed by a

255
00:11:44,450 --> 00:11:45,709
template engine i figured all right why

256
00:11:45,709 --> 00:11:50,209
don't I just put my CSS in there it

257
00:11:50,209 --> 00:11:52,519
takes two to three callbacks as you see

258
00:11:52,519 --> 00:11:55,370
takes mean arguments there's a URL and a

259
00:11:55,370 --> 00:11:57,230
call back with an optional defer in the

260
00:11:57,230 --> 00:11:59,930
middle defer will force that call to

261
00:11:59,930 --> 00:12:02,360
perform the way our first example did as

262
00:12:02,360 --> 00:12:06,529
a serial request serial response this is

263
00:12:06,529 --> 00:12:08,930
going to allow you to handle things like

264
00:12:08,930 --> 00:12:10,610
server authentication if you need to set

265
00:12:10,610 --> 00:12:12,200
a cookie before you start hitting an API

266
00:12:12,200 --> 00:12:16,100
or if you need an API key or another

267
00:12:16,100 --> 00:12:17,600
benefit if you want to change the

268
00:12:17,600 --> 00:12:19,339
configuration of the next call if

269
00:12:19,339 --> 00:12:21,589
there's something that's going to be

270
00:12:21,589 --> 00:12:23,810
dependent on your previous call you call

271
00:12:23,810 --> 00:12:26,690
you tell defer and then in the callback

272
00:12:26,690 --> 00:12:28,640
I'll show you how we can manipulate that

273
00:12:28,640 --> 00:12:32,029
next call it also takes a jquery

274
00:12:32,029 --> 00:12:36,829
settings object because of the jquery

275
00:12:36,829 --> 00:12:39,260
routes so you can refer to jake where's

276
00:12:39,260 --> 00:12:41,690
documentation for that there's an

277
00:12:41,690 --> 00:12:43,970
additional defer property so that you

278
00:12:43,970 --> 00:12:47,060
can use the long form and still stop

279
00:12:47,060 --> 00:12:49,790
your call the callbacks are just

280
00:12:49,790 --> 00:12:52,820
slightly different from jQuery AJAX call

281
00:12:52,820 --> 00:12:55,339
backs which return data and status

282
00:12:55,339 --> 00:12:58,070
instead what we get our data which is

283
00:12:58,070 --> 00:13:00,230
the response data of the current request

284
00:13:00,230 --> 00:13:03,019
we get previous which is the return

285
00:13:03,019 --> 00:13:05,570
value of the previous call back we get

286
00:13:05,570 --> 00:13:07,640
next which is the Ajax settings of the

287
00:13:07,640 --> 00:13:09,980
next request and then we get the status

288
00:13:09,980 --> 00:13:11,959
which hopefully in your case is always

289
00:13:11,959 --> 00:13:16,130
success so let's look at what a sexy

290
00:13:16,130 --> 00:13:17,500
sequential Ajax pattern look

291
00:13:17,500 --> 00:13:20,470
like here we can see that we're changing

292
00:13:20,470 --> 00:13:23,980
to calls these calls like the like the

293
00:13:23,980 --> 00:13:25,420
other example are being fired in

294
00:13:25,420 --> 00:13:27,550
parallel right away and then the

295
00:13:27,550 --> 00:13:31,180
callbacks are executed in the specified

296
00:13:31,180 --> 00:13:34,870
order this example is using the verbose

297
00:13:34,870 --> 00:13:37,000
syntax using full on configuration

298
00:13:37,000 --> 00:13:39,100
objects these would be what you would

299
00:13:39,100 --> 00:13:40,870
use if you want to post or if you need

300
00:13:40,870 --> 00:13:47,020
to add errors or before send where we

301
00:13:47,020 --> 00:13:51,220
add here oh this radio shows you how the

302
00:13:51,220 --> 00:13:54,190
the value is being passed so when the

303
00:13:54,190 --> 00:13:55,930
data comes back in the first one we have

304
00:13:55,930 --> 00:13:57,460
the article we're just going to take

305
00:13:57,460 --> 00:13:58,930
that data and we're going to return it

306
00:13:58,930 --> 00:14:01,660
the wrapped callback knows that when it

307
00:14:01,660 --> 00:14:03,520
fires this one to pass it in as a second

308
00:14:03,520 --> 00:14:05,980
argument now we can just add comments to

309
00:14:05,980 --> 00:14:09,030
the article and go ahead and render it

310
00:14:09,030 --> 00:14:11,500
but big configuration objects aren't

311
00:14:11,500 --> 00:14:15,370
sexy so we use the brief syntax you see

312
00:14:15,370 --> 00:14:17,020
that we're still passing the article and

313
00:14:17,020 --> 00:14:21,670
getting things done but if I'm willing

314
00:14:21,670 --> 00:14:23,500
to get rid of two parentheses I think

315
00:14:23,500 --> 00:14:25,180
I'm also willing to get rid of a

316
00:14:25,180 --> 00:14:27,040
function that is probably going to be

317
00:14:27,040 --> 00:14:29,320
used ninety percent of the time to pass

318
00:14:29,320 --> 00:14:30,850
you know most of the time you're going

319
00:14:30,850 --> 00:14:32,170
to use this it'll just be to marry two

320
00:14:32,170 --> 00:14:35,890
things and so why not just throw in an

321
00:14:35,890 --> 00:14:40,660
implicit call back so that the data just

322
00:14:40,660 --> 00:14:43,930
appears we don't need to write out that

323
00:14:43,930 --> 00:14:46,690
additional function there's another type

324
00:14:46,690 --> 00:14:49,570
of implicit callback which is a pass

325
00:14:49,570 --> 00:14:51,880
through call back so if you throw either

326
00:14:51,880 --> 00:14:55,810
a jas or a CSS call in between odds are

327
00:14:55,810 --> 00:14:57,130
we have no interest in manipulating

328
00:14:57,130 --> 00:14:58,720
those data we're just going to put them

329
00:14:58,720 --> 00:15:00,730
in the page and execute them so we pass

330
00:15:00,730 --> 00:15:02,530
through whatever the last return value

331
00:15:02,530 --> 00:15:04,780
was before it you could throw as many

332
00:15:04,780 --> 00:15:06,640
Java scripts or style sheets right in

333
00:15:06,640 --> 00:15:09,640
the middle there and that second

334
00:15:09,640 --> 00:15:12,190
argument would still be article I don't

335
00:15:12,190 --> 00:15:13,780
really recommend that because it's not

336
00:15:13,780 --> 00:15:16,300
really readable I think it's better to

337
00:15:16,300 --> 00:15:18,100
put your two things together but if you

338
00:15:18,100 --> 00:15:22,210
had to it's available to you here's an

339
00:15:22,210 --> 00:15:26,110
example using defer this this example

340
00:15:26,110 --> 00:15:27,790
actually was inspired by something maroc

341
00:15:27,790 --> 00:15:29,530
doing with hokey oh he's using sexy as a

342
00:15:29,530 --> 00:15:30,610
test runner

343
00:15:30,610 --> 00:15:32,260
so he wanted to be able to authenticate

344
00:15:32,260 --> 00:15:35,860
request modify and post back so in the

345
00:15:35,860 --> 00:15:39,339
first call we are authenticating you

346
00:15:39,339 --> 00:15:42,100
could use this either with a cookie

347
00:15:42,100 --> 00:15:44,980
based session or if you needed an API

348
00:15:44,980 --> 00:15:46,630
key back because if you had an API key

349
00:15:46,630 --> 00:15:48,700
you could just send that through into

350
00:15:48,700 --> 00:15:50,200
previous and your next call would be

351
00:15:50,200 --> 00:15:52,920
able to make an authenticated request

352
00:15:52,920 --> 00:15:55,329
the second call you can see we deferred

353
00:15:55,329 --> 00:15:57,490
we waited we called true we went we got

354
00:15:57,490 --> 00:16:00,010
the article we modified the article and

355
00:16:00,010 --> 00:16:03,700
then what we did by deferring the third

356
00:16:03,700 --> 00:16:05,589
call which is going to post the article

357
00:16:05,589 --> 00:16:07,779
back here in the second we can set the

358
00:16:07,779 --> 00:16:10,480
article to the data of that call and now

359
00:16:10,480 --> 00:16:12,430
this third call is now armed and

360
00:16:12,430 --> 00:16:13,779
dangerous and ready to update your

361
00:16:13,779 --> 00:16:18,399
article and for for sake of completion

362
00:16:18,399 --> 00:16:23,230
we log out when we're done because of

363
00:16:23,230 --> 00:16:27,940
the parallel loading sequential response

364
00:16:27,940 --> 00:16:31,750
and the way that both jquery and sexy

365
00:16:31,750 --> 00:16:35,459
use use text loading of scripts and then

366
00:16:35,459 --> 00:16:39,640
Dom injection we're actually able to go

367
00:16:39,640 --> 00:16:41,709
ahead and queue up script dependencies

368
00:16:41,709 --> 00:16:45,190
so anything you see here will load after

369
00:16:45,190 --> 00:16:48,040
the thing before it so jQuery UI doesn't

370
00:16:48,040 --> 00:16:49,660
have to worry that jQuery won't be there

371
00:16:49,660 --> 00:16:50,890
and the template doesn't have to worry

372
00:16:50,890 --> 00:16:53,410
and as you can see all my pseudo MLB

373
00:16:53,410 --> 00:16:55,449
libraries they'll load just fine as soon

374
00:16:55,449 --> 00:17:00,160
as they're written so let's let's see

375
00:17:00,160 --> 00:17:02,410
what a sexy makeover looks like we can

376
00:17:02,410 --> 00:17:05,589
remember our original parallel response

377
00:17:05,589 --> 00:17:09,100
parallel request random response that

378
00:17:09,100 --> 00:17:13,059
now is reduced to this making the code

379
00:17:13,059 --> 00:17:18,850
tidy and readable and I don't know sexy

380
00:17:18,850 --> 00:17:23,620
I like it sexy also has a few additional

381
00:17:23,620 --> 00:17:30,130
methods it has a setup method that

382
00:17:30,130 --> 00:17:32,020
allows you to configure subsequent

383
00:17:32,020 --> 00:17:33,669
request of a sexy instance this behaves

384
00:17:33,669 --> 00:17:36,460
just like Ajax set up in jQuery only

385
00:17:36,460 --> 00:17:38,830
when you do it it's not global it's only

386
00:17:38,830 --> 00:17:41,530
two subsequent requests in your current

387
00:17:41,530 --> 00:17:44,110
sexy chain at at any point you can go

388
00:17:44,110 --> 00:17:44,520
ahead and

389
00:17:44,520 --> 00:17:46,530
set them with an empty or faulty value

390
00:17:46,530 --> 00:17:50,160
to set up something like this for our

391
00:17:50,160 --> 00:17:51,720
article we may want to show a loading

392
00:17:51,720 --> 00:17:54,030
indicator and then hide it when it's

393
00:17:54,030 --> 00:17:55,440
complete but we may not care so much

394
00:17:55,440 --> 00:17:57,120
when we display the comments so we can

395
00:17:57,120 --> 00:18:00,960
just zero that out you can also pass

396
00:18:00,960 --> 00:18:02,370
that right through to the constructor

397
00:18:02,370 --> 00:18:06,150
because anywhere i can drop keystrokes i

398
00:18:06,150 --> 00:18:10,680
do saving yourself some time sexy also

399
00:18:10,680 --> 00:18:12,150
provides a sort of client-side

400
00:18:12,150 --> 00:18:14,190
JavaScript packaging tool called sexy

401
00:18:14,190 --> 00:18:19,320
bundle bundle makes multiple requests

402
00:18:19,320 --> 00:18:21,450
and a single Dom insertion and then

403
00:18:21,450 --> 00:18:24,510
executes an optional call back because

404
00:18:24,510 --> 00:18:27,270
of the way sexy is designed the script

405
00:18:27,270 --> 00:18:28,890
sequence and therefore your dependencies

406
00:18:28,890 --> 00:18:33,000
are preserved so that long chain of

407
00:18:33,000 --> 00:18:35,460
script loads can be reduced to this I

408
00:18:35,460 --> 00:18:37,080
guess we didn't really save much but I

409
00:18:37,080 --> 00:18:38,520
mean I'm nickel-and-diming over

410
00:18:38,520 --> 00:18:44,070
parenthesis so I do what I can hear now

411
00:18:44,070 --> 00:18:46,230
I'd like to introduce you to what has

412
00:18:46,230 --> 00:18:50,820
become so far my kamasutra of sexy this

413
00:18:50,820 --> 00:18:53,160
example just came up the other day at

414
00:18:53,160 --> 00:18:55,590
Major League Baseball where we had to

415
00:18:55,590 --> 00:18:58,950
implement in a hurry a new scoreboard

416
00:18:58,950 --> 00:19:02,100
for minor leagues only the only problem

417
00:19:02,100 --> 00:19:04,050
was that the data about the games that

418
00:19:04,050 --> 00:19:05,520
were being played was stored in a

419
00:19:05,520 --> 00:19:07,050
separate place from the data about the

420
00:19:07,050 --> 00:19:10,410
games each game required a different

421
00:19:10,410 --> 00:19:14,700
data file so came up with this idea and

422
00:19:14,700 --> 00:19:16,520
here's an example of bootstrapping a nap

423
00:19:16,520 --> 00:19:20,670
and then really playing with sexy so

424
00:19:20,670 --> 00:19:22,560
this time what's different is up at the

425
00:19:22,560 --> 00:19:25,860
top we are storing our sexy instance as

426
00:19:25,860 --> 00:19:27,870
s which we'll come back later

427
00:19:27,870 --> 00:19:31,260
foreshadowing we're going to load in

428
00:19:31,260 --> 00:19:33,990
jQuery we load in a templating agent a

429
00:19:33,990 --> 00:19:37,650
templating document will also load in a

430
00:19:37,650 --> 00:19:41,040
style sheet and we will load in the

431
00:19:41,040 --> 00:19:42,810
template now all right this is a basic

432
00:19:42,810 --> 00:19:44,700
simple friends this isn't our scoreboard

433
00:19:44,700 --> 00:19:48,020
because that had a little more code this

434
00:19:48,020 --> 00:19:50,280
Jason that it would bring back is sort

435
00:19:50,280 --> 00:19:51,630
of like a manifest it might bring back

436
00:19:51,630 --> 00:19:53,430
an array of friends with just their

437
00:19:53,430 --> 00:19:55,950
their user names and ID's so from there

438
00:19:55,950 --> 00:19:57,210
we have to go and get the rest of the

439
00:19:57,210 --> 00:19:57,900
information

440
00:19:57,900 --> 00:19:59,730
so what we do is we iterate those

441
00:19:59,730 --> 00:20:01,920
friends and for each friend we make a

442
00:20:01,920 --> 00:20:04,080
request so what we're doing is we're

443
00:20:04,080 --> 00:20:05,880
actually adding these new calls to that

444
00:20:05,880 --> 00:20:09,330
original chain so these are all going to

445
00:20:09,330 --> 00:20:11,190
fire as fast as this loop can iterate

446
00:20:11,190 --> 00:20:13,950
all the requests go out when it comes

447
00:20:13,950 --> 00:20:15,510
back we're going to push the incoming

448
00:20:15,510 --> 00:20:19,440
friend onto a stack and then wait a

449
00:20:19,440 --> 00:20:23,130
minute there's no stack well one of the

450
00:20:23,130 --> 00:20:25,740
nice things was that we added this to

451
00:20:25,740 --> 00:20:28,050
this chain so I did was create the stack

452
00:20:28,050 --> 00:20:30,630
down here and we pass that empty array

453
00:20:30,630 --> 00:20:33,000
up there so the first time it comes in

454
00:20:33,000 --> 00:20:35,700
we have our array we push our friend we

455
00:20:35,700 --> 00:20:38,850
loop through this while while we are

456
00:20:38,850 --> 00:20:42,540
less than the final friend and every

457
00:20:42,540 --> 00:20:44,550
time we augment that array and push it

458
00:20:44,550 --> 00:20:46,650
back up onto the stack so our friends

459
00:20:46,650 --> 00:20:48,540
array just grows as our responses come

460
00:20:48,540 --> 00:20:50,610
back in and when we're done we shove it

461
00:20:50,610 --> 00:20:54,280
into a template and put it on the page

462
00:20:54,290 --> 00:20:57,630
so there are some known issues but

463
00:20:57,630 --> 00:20:59,660
they're not come they're not unique to

464
00:20:59,660 --> 00:21:02,430
sexy you know right now as far as I know

465
00:21:02,430 --> 00:21:05,580
there's not too many or if any Kyle may

466
00:21:05,580 --> 00:21:07,670
be able to correct me in some of these

467
00:21:07,670 --> 00:21:09,690
with some of the stuff he's doing in lab

468
00:21:09,690 --> 00:21:12,570
j yes detection of errors for remote

469
00:21:12,570 --> 00:21:15,810
requests using JSONP script or style

470
00:21:15,810 --> 00:21:17,780
which is loading a remote stylesheet

471
00:21:17,780 --> 00:21:20,010
probably the more severe problem that

472
00:21:20,010 --> 00:21:22,490
I've introduced is that loading a style

473
00:21:22,490 --> 00:21:25,860
from a remote URL will fire the success

474
00:21:25,860 --> 00:21:27,510
callback even if the request was an

475
00:21:27,510 --> 00:21:30,930
error but the good news is most of the

476
00:21:30,930 --> 00:21:31,950
time you don't need to do something

477
00:21:31,950 --> 00:21:34,020
right after your stylesheet so just kind

478
00:21:34,020 --> 00:21:37,350
of avoid that for now I prom you know

479
00:21:37,350 --> 00:21:39,030
might say I should wait until the

480
00:21:39,030 --> 00:21:42,210
library is complete but I say you know

481
00:21:42,210 --> 00:21:43,410
if I put it out there and everyone can

482
00:21:43,410 --> 00:21:48,950
see the bug maybe someone has the fix so

483
00:21:48,950 --> 00:21:51,360
now we've just witnessed parallel

484
00:21:51,360 --> 00:21:54,150
request serial response the pros it's

485
00:21:54,150 --> 00:21:56,280
faster cleaner prettier I think it's

486
00:21:56,280 --> 00:21:59,940
easier to maintain the API is chainable

487
00:21:59,940 --> 00:22:02,640
and expressive you can look at the code

488
00:22:02,640 --> 00:22:04,400
know what it's doing when it's doing it

489
00:22:04,400 --> 00:22:07,350
and the only drawback is that depending

490
00:22:07,350 --> 00:22:08,280
whether or not you're using it as a

491
00:22:08,280 --> 00:22:09,630
plug-in or a standalone it's going to

492
00:22:09,630 --> 00:22:10,210
add about

493
00:22:10,210 --> 00:22:12,820
and a half or four and a half K of code

494
00:22:12,820 --> 00:22:14,980
to your core library if you're using the

495
00:22:14,980 --> 00:22:16,660
standalone odds are you're using it to

496
00:22:16,660 --> 00:22:20,170
bootstrap so it could potentially be the

497
00:22:20,170 --> 00:22:24,270
only script on your page when you load

498
00:22:24,270 --> 00:22:29,730
all right if anyone has any questions

499
00:22:29,730 --> 00:22:33,250
you have a question song do you have any

500
00:22:33,250 --> 00:22:37,300
kind of a case like a request is taking

501
00:22:37,300 --> 00:22:40,150
too long or something like that to do

502
00:22:40,150 --> 00:22:42,430
something built into jQuery ok so it's

503
00:22:42,430 --> 00:22:45,700
using hope for like JSON key which

504
00:22:45,700 --> 00:22:49,630
doesn't have a timeout and whose fault

505
00:22:49,630 --> 00:22:54,580
is that oh yeah i'm yeah i know i'm just

506
00:22:54,580 --> 00:22:56,170
standing on the on the on the shoulders

507
00:22:56,170 --> 00:22:58,930
of jquery yeah i haven't added any in

508
00:22:58,930 --> 00:23:02,740
fact the most meaningful of code that

509
00:23:02,740 --> 00:23:04,660
i've added probably if it needed to be

510
00:23:04,660 --> 00:23:06,160
if i wanted to i could have just taken

511
00:23:06,160 --> 00:23:07,480
out what i've done instead of having a

512
00:23:07,480 --> 00:23:09,580
separate library and in like maybe six

513
00:23:09,580 --> 00:23:11,290
to ten lines added it directly to Jake

514
00:23:11,290 --> 00:23:14,380
worry there's really not much going on

515
00:23:14,380 --> 00:23:17,170
i'm wrapping functions um you know

516
00:23:17,170 --> 00:23:18,880
creating events but the sexy librarian

517
00:23:18,880 --> 00:23:22,330
doesn't do much it just helps I do it

518
00:23:22,330 --> 00:23:24,250
one follow-up question sure do you have

519
00:23:24,250 --> 00:23:29,110
any shorthand or anything so if if a

520
00:23:29,110 --> 00:23:32,500
particular request fails for some reason

521
00:23:32,500 --> 00:23:35,440
to me do that request that exact same

522
00:23:35,440 --> 00:23:37,330
requester do you have to actually in

523
00:23:37,330 --> 00:23:40,630
your error call back like take dupe s

524
00:23:40,630 --> 00:23:43,180
dot and add that one back onto it right

525
00:23:43,180 --> 00:23:45,700
so this is still an earlier version so

526
00:23:45,700 --> 00:23:47,560
my arbitrary 0.8 should probably do more

527
00:23:47,560 --> 00:23:50,020
like 0.5 or four or three or two or one

528
00:23:50,020 --> 00:23:54,010
I've done various things and pulled them

529
00:23:54,010 --> 00:23:55,270
out and put them back and pulled them

530
00:23:55,270 --> 00:23:58,120
out now that I do have a couple people

531
00:23:58,120 --> 00:23:59,830
using it I probably have to be a little

532
00:23:59,830 --> 00:24:02,620
more stable but yes there was at one

533
00:24:02,620 --> 00:24:05,380
point cascading error handling that

534
00:24:05,380 --> 00:24:07,320
would notify everything down the chain

535
00:24:07,320 --> 00:24:09,220
there wasn't something that would

536
00:24:09,220 --> 00:24:12,400
actually send backup to the same request

537
00:24:12,400 --> 00:24:14,710
but in one incarnation I had the ability

538
00:24:14,710 --> 00:24:17,530
to inject back into the chain so

539
00:24:17,530 --> 00:24:18,940
essentially what we would need to do is

540
00:24:18,940 --> 00:24:21,580
inject into the chain and then set the

541
00:24:21,580 --> 00:24:22,750
pointer back

542
00:24:22,750 --> 00:24:27,070
so I could add let's say another another

543
00:24:27,070 --> 00:24:29,980
argument to the callback being this that

544
00:24:29,980 --> 00:24:31,720
would give you access to everything in

545
00:24:31,720 --> 00:24:34,090
the sexy chain and then add some

546
00:24:34,090 --> 00:24:36,190
functions you know previous next to jump

547
00:24:36,190 --> 00:24:38,950
around not currently there but if people

548
00:24:38,950 --> 00:24:41,350
use this and like it I am more than

549
00:24:41,350 --> 00:24:44,830
happy to add whatever people like Kyle

550
00:24:44,830 --> 00:24:49,000
yes so give your list of a bunch of

551
00:24:49,000 --> 00:24:50,440
scripts and obviously a bunch of those

552
00:24:50,440 --> 00:24:52,570
with local scripts you're using XA

553
00:24:52,570 --> 00:24:54,550
charged to lopat string mm-hmm you're

554
00:24:54,550 --> 00:24:56,680
running all in parallel executables

555
00:24:56,680 --> 00:24:59,230
really what if one of those in the

556
00:24:59,230 --> 00:25:04,200
middle is a remote script okay so sexy

557
00:25:04,200 --> 00:25:07,540
it has to you know in order to ensure

558
00:25:07,540 --> 00:25:11,170
that everything else is there it has to

559
00:25:11,170 --> 00:25:13,690
wait because in order to put a remote

560
00:25:13,690 --> 00:25:17,800
script on I'm using just adding a script

561
00:25:17,800 --> 00:25:20,650
node and giving it a source so it's

562
00:25:20,650 --> 00:25:22,200
actually injecting right then and there

563
00:25:22,200 --> 00:25:25,210
what sexy does is if there is a defer

564
00:25:25,210 --> 00:25:26,920
anywhere in the chain but everything

565
00:25:26,920 --> 00:25:28,390
else is free form you know like

566
00:25:28,390 --> 00:25:29,710
everything else is ready to go parallel

567
00:25:29,710 --> 00:25:32,740
the second that one that was deferred

568
00:25:32,740 --> 00:25:35,050
comes back those will all immediately

569
00:25:35,050 --> 00:25:38,350
fire again so as its as its iterating

570
00:25:38,350 --> 00:25:39,970
through or as you're adding things to

571
00:25:39,970 --> 00:25:42,550
the chain it will either if it's the

572
00:25:42,550 --> 00:25:44,710
first thing immediately send otherwise

573
00:25:44,710 --> 00:25:46,990
if there it has been something that's

574
00:25:46,990 --> 00:25:48,910
deferred it will essentially subscribe

575
00:25:48,910 --> 00:25:53,410
to the to the send of the last deferred

576
00:25:53,410 --> 00:25:56,620
item so they'll bill all bill all fire

577
00:25:56,620 --> 00:25:59,860
off in a hurry right after that remote

578
00:25:59,860 --> 00:26:01,660
script loads so just by point of

579
00:26:01,660 --> 00:26:04,000
comparison that's where livejasmin

580
00:26:04,000 --> 00:26:06,190
kippur live Jace is still going to load

581
00:26:06,190 --> 00:26:08,540
everything girl

582
00:26:08,540 --> 00:26:13,260
but that's trade-offs that yours yeah

583
00:26:13,260 --> 00:26:15,510
well I think there's definitely I mean

584
00:26:15,510 --> 00:26:16,770
we've talked about this on and off over

585
00:26:16,770 --> 00:26:19,860
the past year there's plenty I think

586
00:26:19,860 --> 00:26:22,140
that I could you know leverage from

587
00:26:22,140 --> 00:26:26,880
digging into your code and yeah so I

588
00:26:26,880 --> 00:26:28,800
look forward to you know after this now

589
00:26:28,800 --> 00:26:30,360
that the stress is done i can go relax

590
00:26:30,360 --> 00:26:32,430
and i can actually pick your brain with

591
00:26:32,430 --> 00:26:36,090
a clear conscience anyone else have any

592
00:26:36,090 --> 00:26:40,710
questions all right well thank you very

