1
00:00:06,740 --> 00:00:09,200

hello hello hello

2
00:00:09,200 --> 00:00:13,590
really did you guys hear me Oh awesome

3
00:00:13,590 --> 00:00:15,240
cool well I can't tell that at all

4
00:00:15,240 --> 00:00:18,420
alright cool how you guys doing nice

5
00:00:18,420 --> 00:00:21,480
love that 10 a.m. energy yeah there we

6
00:00:21,480 --> 00:00:21,689
go

7
00:00:21,689 --> 00:00:24,660
yeah who here first event of G s fest

8
00:00:24,660 --> 00:00:27,660
anyone anyone else nice okay nice i I

9
00:00:27,660 --> 00:00:29,460
just got back from Stockholm so I

10
00:00:29,460 --> 00:00:31,500
haven't been anything and I'm jet-lagged

11
00:00:31,500 --> 00:00:33,329
as hell so if I start like speaking

12
00:00:33,329 --> 00:00:35,700
Swedish or like pass out up here that's

13
00:00:35,700 --> 00:00:36,809
that's on me

14
00:00:36,809 --> 00:00:39,090
but yeah this is the nerd way and let's

15
00:00:39,090 --> 00:00:42,750
get into it as Michael mentioned my name

16
00:00:42,750 --> 00:00:47,329
is Fred I am on Twitter at Fred K shot I

17
00:00:47,329 --> 00:00:49,680
write about note on my blog I tweet

18
00:00:49,680 --> 00:00:51,329
about known and I work with note at box

19
00:00:51,329 --> 00:00:53,070
so definitely pretty into it right now

20
00:00:53,070 --> 00:00:54,870
and the kind of question I've been

21
00:00:54,870 --> 00:00:57,059
asking myself over the last three months

22
00:00:57,059 --> 00:00:59,430
but really kind of the last year is what

23
00:00:59,430 --> 00:01:00,960
is the node ways anyone else heard this

24
00:01:00,960 --> 00:01:03,989
phrase kind of thrown around yeah there

25
00:01:03,989 --> 00:01:04,710
you go um

26
00:01:04,710 --> 00:01:07,799
one person yes it's it's definitely not

27
00:01:07,799 --> 00:01:09,090
like written about like there's anything

28
00:01:09,090 --> 00:01:10,470
really about it at least that I've been

29
00:01:10,470 --> 00:01:12,630
able to find ever but it's this phrase

30
00:01:12,630 --> 00:01:13,740
it's kind of thrown around so I've been

31
00:01:13,740 --> 00:01:15,170
kind of trying to wonder what that is um

32
00:01:15,170 --> 00:01:16,740
give you an example

33
00:01:16,740 --> 00:01:20,040
NPM mentioned in a blog post that uh the

34
00:01:20,040 --> 00:01:21,750
node way is building lots of small

35
00:01:21,750 --> 00:01:24,299
single purpose modules it's a pretty

36
00:01:24,299 --> 00:01:26,280
common kind of way to use but also step

37
00:01:26,280 --> 00:01:29,250
this control flow library mentioned that

38
00:01:29,250 --> 00:01:31,530
it's providing control flow the node way

39
00:01:31,530 --> 00:01:34,140
so a little bit different and then Isaac

40
00:01:34,140 --> 00:01:36,600
wrote some documentation on a package

41
00:01:36,600 --> 00:01:38,430
about how a callback gets called with

42
00:01:38,430 --> 00:01:41,000
error and data as is the node way and

43
00:01:41,000 --> 00:01:43,380
even more cryptically the node way

44
00:01:43,380 --> 00:01:45,060
handed down from the ancient times of

45
00:01:45,060 --> 00:01:48,000
node o dot three this is kind of

46
00:01:48,000 --> 00:01:49,110
tongue-in-cheek because the question was

47
00:01:49,110 --> 00:01:50,729
called node modules as the name of my

48
00:01:50,729 --> 00:01:53,430
die t / our archrival and a forbidden

49
00:01:53,430 --> 00:01:55,110
word in my religion can i configure npm

50
00:01:55,110 --> 00:01:58,259
to not use it and the answer is no but

51
00:01:58,259 --> 00:02:00,869
still even kind of tongue-in-cheek it's

52
00:02:00,869 --> 00:02:02,520
it's being used and i've been trying to

53
00:02:02,520 --> 00:02:05,250
find out really what does this mean what

54
00:02:05,250 --> 00:02:06,270
is the node way it's just kind of

55
00:02:06,270 --> 00:02:08,220
philosophy these guiding principles but

56
00:02:08,220 --> 00:02:10,619
they're kind of kind of unknown and

57
00:02:10,619 --> 00:02:11,670
people just kind of throw around this

58
00:02:11,670 --> 00:02:13,500
this phrase

59
00:02:13,500 --> 00:02:15,570
I think most people understand the broad

60
00:02:15,570 --> 00:02:17,850
strokes of it like small modules over

61
00:02:17,850 --> 00:02:20,940
large monoliths asynchronous code over

62
00:02:20,940 --> 00:02:22,380
blocking code but once you get into the

63
00:02:22,380 --> 00:02:24,450
kind of finer points and ask people to

64
00:02:24,450 --> 00:02:25,610
kind of dig into that it gets a little

65
00:02:25,610 --> 00:02:29,670
more muddled and then I'm was one of the

66
00:02:29,670 --> 00:02:30,750
worst offenders of this I would throw

67
00:02:30,750 --> 00:02:31,980
this phrase around everywhere and I

68
00:02:31,980 --> 00:02:34,430
didn't really know what it meant and

69
00:02:34,430 --> 00:02:36,570
really wasn't until I started working at

70
00:02:36,570 --> 00:02:37,800
box you know I'd worked on projects

71
00:02:37,800 --> 00:02:39,990
before with no died I built a few

72
00:02:39,990 --> 00:02:41,520
applications a few servers I could

73
00:02:41,520 --> 00:02:43,500
definitely I was confident I could test

74
00:02:43,500 --> 00:02:46,200
I could good write code but I'd I would

75
00:02:46,200 --> 00:02:48,420
find myself kind of making these

76
00:02:48,420 --> 00:02:50,100
mistakes and it wasn't until I'd written

77
00:02:50,100 --> 00:02:51,960
this entire file that was like oh

78
00:02:51,960 --> 00:02:53,220
this is terrible

79
00:02:53,220 --> 00:02:54,990
you know callbacks were all over the

80
00:02:54,990 --> 00:02:56,880
place like just I didn't know what I was

81
00:02:56,880 --> 00:02:59,010
doing until it was it was done and it

82
00:02:59,010 --> 00:03:01,590
was done poorly so that's kind of where

83
00:03:01,590 --> 00:03:04,110
I was 2013 when it started a box and we

84
00:03:04,110 --> 00:03:07,020
were starting to look at node for kind

85
00:03:07,020 --> 00:03:08,430
of the next generation of our web app as

86
00:03:08,430 --> 00:03:11,340
a kind of success or to our PHP monolith

87
00:03:11,340 --> 00:03:14,330
and so there's a nice little icon of me

88
00:03:14,330 --> 00:03:17,370
and at the time you know as we're kind

89
00:03:17,370 --> 00:03:20,250
of trying to build out and investigate

90
00:03:20,250 --> 00:03:21,150
what this would look like we started

91
00:03:21,150 --> 00:03:23,430
talking all these kind of really smart

92
00:03:23,430 --> 00:03:24,810
people these really smart teams we went

93
00:03:24,810 --> 00:03:27,420
out to Yahoo and talk to Dave glass on

94
00:03:27,420 --> 00:03:29,840
the guys at PayPal buying crack in

95
00:03:29,840 --> 00:03:32,580
LinkedIn and Adam Crabtree we talked to

96
00:03:32,580 --> 00:03:34,380
all these people and there was kind of

97
00:03:34,380 --> 00:03:36,510
like just sense of like oh these

98
00:03:36,510 --> 00:03:39,090
guys these guys get it like the stuff

99
00:03:39,090 --> 00:03:40,200
that we'd been doing the stuff that I've

100
00:03:40,200 --> 00:03:42,420
been writing like it was it wasn't they

101
00:03:42,420 --> 00:03:43,440
were smarter they just had a better

102
00:03:43,440 --> 00:03:46,110
grasp of what they were doing um kind of

103
00:03:46,110 --> 00:03:48,300
the way that they talked about what they

104
00:03:48,300 --> 00:03:49,680
were working on and the way they wrote

105
00:03:49,680 --> 00:03:50,850
code and the way they talked about that

106
00:03:50,850 --> 00:03:52,380
code it was just kind of like oh they

107
00:03:52,380 --> 00:03:55,620
get it so here was me and here was them

108
00:03:55,620 --> 00:03:57,030
and I was kind of just frustrated that

109
00:03:57,030 --> 00:03:58,500
like I wish think there was a way for

110
00:03:58,500 --> 00:04:00,989
and someone who's not on a team and not

111
00:04:00,989 --> 00:04:03,060
a part of a big company kind of to get

112
00:04:03,060 --> 00:04:04,050
there because it wasn't about being

113
00:04:04,050 --> 00:04:05,970
smarter it was just kind of about having

114
00:04:05,970 --> 00:04:07,110
to grasp with the knot of the language

115
00:04:07,110 --> 00:04:09,360
and the framework greater than just

116
00:04:09,360 --> 00:04:11,700
going through tutorials or you know it

117
00:04:11,700 --> 00:04:12,870
was only trial and error was basically

118
00:04:12,870 --> 00:04:14,070
the only other way to get there that I

119
00:04:14,070 --> 00:04:17,549
could see so over the next year kind of

120
00:04:17,549 --> 00:04:21,330
as I worked I started kind of just

121
00:04:21,330 --> 00:04:22,500
writing about all the cool stuff we did

122
00:04:22,500 --> 00:04:23,940
a box all the stuff that I couldn't find

123
00:04:23,940 --> 00:04:25,620
anywhere else all the problems we were

124
00:04:25,620 --> 00:04:26,820
running into

125
00:04:26,820 --> 00:04:30,760
testing module design patterns but also

126
00:04:30,760 --> 00:04:32,380
like digging in the node and like what

127
00:04:32,380 --> 00:04:34,810
happens when you call require you know

128
00:04:34,810 --> 00:04:36,340
what happens when I load some hacking

129
00:04:36,340 --> 00:04:37,990
node so that you could require an mp3

130
00:04:37,990 --> 00:04:40,000
and get back an actual module would like

131
00:04:40,000 --> 00:04:42,250
play and pause just kind of digging into

132
00:04:42,250 --> 00:04:44,400
like the kind of gnarly parts of it and

133
00:04:44,400 --> 00:04:46,120
yeah and there was nothing really out

134
00:04:46,120 --> 00:04:48,760
there like that but this was like a year

135
00:04:48,760 --> 00:04:49,960
ago and in the last year it's gotten

136
00:04:49,960 --> 00:04:50,830
better but there's still just like

137
00:04:50,830 --> 00:04:52,720
little parts of the same overall puzzle

138
00:04:52,720 --> 00:04:55,300
so in the last three months I've kind of

139
00:04:55,300 --> 00:04:57,370
focus taking a step back and focused on

140
00:04:57,370 --> 00:05:00,010
the greater picture of what is the node

141
00:05:00,010 --> 00:05:01,930
way and kind of what is the overall

142
00:05:01,930 --> 00:05:04,660
philosophy because that scratch my itch

143
00:05:04,660 --> 00:05:05,740
but it didn't really help anyone else

144
00:05:05,740 --> 00:05:06,820
you know little bits and pieces that

145
00:05:06,820 --> 00:05:08,010
doesn't really get you there

146
00:05:08,010 --> 00:05:10,090
so what do we talk about when we said in

147
00:05:10,090 --> 00:05:12,940
node why I kind of broke down this

148
00:05:12,940 --> 00:05:15,640
philosophy there this is these guiding

149
00:05:15,640 --> 00:05:17,020
principles as I came to understand them

150
00:05:17,020 --> 00:05:20,560
into three sections structure async and

151
00:05:20,560 --> 00:05:24,790
community they're about thrifty 15

152
00:05:24,790 --> 00:05:26,620
points and all but I mean I don't have

153
00:05:26,620 --> 00:05:27,760
too much time so I'll just go over the

154
00:05:27,760 --> 00:05:31,180
basic ones structure being that node

155
00:05:31,180 --> 00:05:33,130
really doesn't provide you that much in

156
00:05:33,130 --> 00:05:34,540
terms of structure it really kind of

157
00:05:34,540 --> 00:05:36,850
leaves you on your own which is powerful

158
00:05:36,850 --> 00:05:38,290
but also kind of scary especially as you

159
00:05:38,290 --> 00:05:40,270
start out what is a good module what is

160
00:05:40,270 --> 00:05:41,770
a good file and what is a good

161
00:05:41,770 --> 00:05:43,090
application you know how can you stop

162
00:05:43,090 --> 00:05:46,270
yourself from making easy mistakes async

163
00:05:46,270 --> 00:05:49,150
is the reason most of us really find the

164
00:05:49,150 --> 00:05:51,640
langar the framework why most of us

165
00:05:51,640 --> 00:05:53,110
start using though it is for those kind

166
00:05:53,110 --> 00:05:56,170
of powerful async just ways of doing

167
00:05:56,170 --> 00:05:58,000
things but it's also kind of the

168
00:05:58,000 --> 00:06:00,010
trickiest part of node it's definitely

169
00:06:00,010 --> 00:06:01,090
the thing that I got tripped on the most

170
00:06:01,090 --> 00:06:02,380
when I started and everyone else who

171
00:06:02,380 --> 00:06:04,210
I've kind of brought on board our team

172
00:06:04,210 --> 00:06:06,970
it's easily the most kind of sticking

173
00:06:06,970 --> 00:06:09,580
point as you get started so how do you

174
00:06:09,580 --> 00:06:11,710
not make the same mistakes not end up in

175
00:06:11,710 --> 00:06:14,080
callback hell how do you just do better

176
00:06:14,080 --> 00:06:18,610
and then a community I would bet anyone

177
00:06:18,610 --> 00:06:20,080
a million dollars it is impossible to

178
00:06:20,080 --> 00:06:23,440
write node in a vacuum just impossible

179
00:06:23,440 --> 00:06:25,150
you you need the community you're gonna

180
00:06:25,150 --> 00:06:27,030
find yourself on github on NPM

181
00:06:27,030 --> 00:06:29,470
installing things reading documentation

182
00:06:29,470 --> 00:06:32,260
there's no way around that NPM and the

183
00:06:32,260 --> 00:06:33,820
ecosystem and the community are all part

184
00:06:33,820 --> 00:06:36,070
of node and note is part of that so how

185
00:06:36,070 --> 00:06:37,390
does that influence the framework and

186
00:06:37,390 --> 00:06:38,530
the and the work we do

187
00:06:38,530 --> 00:06:41,410
so um so just a quick overview of each

188
00:06:41,410 --> 00:06:43,360
of these three points um there's a lot

189
00:06:43,360 --> 00:06:45,310
more of it on the website that I've kind

190
00:06:45,310 --> 00:06:46,840
of put up to go through this which I

191
00:06:46,840 --> 00:06:48,400
haven't really shown anyone so I think

192
00:06:48,400 --> 00:06:50,500
this is like me announcing it but all

193
00:06:50,500 --> 00:06:52,480
include yeah it's not ready to be gentle

194
00:06:52,480 --> 00:06:54,580
but um I'll include a link to that at

195
00:06:54,580 --> 00:06:56,080
the end and so let's talk about

196
00:06:56,080 --> 00:06:57,370
structure

197
00:06:57,370 --> 00:06:59,950
like I said node really doesn't give you

198
00:06:59,950 --> 00:07:02,620
much it's basically just you tell node

199
00:07:02,620 --> 00:07:05,680
to run a file and from that you and you

200
00:07:05,680 --> 00:07:07,360
know run a file with one module object

201
00:07:07,360 --> 00:07:09,100
it really don't give you much but from

202
00:07:09,100 --> 00:07:10,900
that you can create these huge or maybe

203
00:07:10,900 --> 00:07:15,520
not huge but powerful applications so so

204
00:07:15,520 --> 00:07:16,810
how do you kind of stop yourself from

205
00:07:16,810 --> 00:07:19,900
shooting yourself in the foot this is

206
00:07:19,900 --> 00:07:21,160
what most people mean when they say the

207
00:07:21,160 --> 00:07:22,510
node the node way or at least one of the

208
00:07:22,510 --> 00:07:25,660
main kind of two things build small

209
00:07:25,660 --> 00:07:28,960
single purpose modules the reasons for

210
00:07:28,960 --> 00:07:31,540
this are many I think one of the biggest

211
00:07:31,540 --> 00:07:32,490
ones one of the things that kind of

212
00:07:32,490 --> 00:07:35,620
struck me the most is that especially

213
00:07:35,620 --> 00:07:37,150
coming from the front end you use jQuery

214
00:07:37,150 --> 00:07:39,130
use underscore use these big libraries

215
00:07:39,130 --> 00:07:40,270
that do everything for you because

216
00:07:40,270 --> 00:07:41,740
that's kind of what you want you want to

217
00:07:41,740 --> 00:07:44,290
add one file and then you're good then

218
00:07:44,290 --> 00:07:45,280
you have everything you need

219
00:07:45,280 --> 00:07:47,470
but with JavaScript and all the

220
00:07:47,470 --> 00:07:49,660
flexibility it provides and node and the

221
00:07:49,660 --> 00:07:51,520
kind of module loading system and an NPM

222
00:07:51,520 --> 00:07:53,919
that entire ecosystem you don't really

223
00:07:53,919 --> 00:07:55,810
you don't really have to do that anymore

224
00:07:55,810 --> 00:07:57,820
you can actually just choose the tools

225
00:07:57,820 --> 00:08:00,940
that you want so in that kind of world

226
00:08:00,940 --> 00:08:02,229
it makes sense to just build these

227
00:08:02,229 --> 00:08:04,270
smaller tools these smaller libraries

228
00:08:04,270 --> 00:08:06,580
helpers and then you're just able to

229
00:08:06,580 --> 00:08:08,169
have so much more freedom around those

230
00:08:08,169 --> 00:08:10,330
you can plug them in take them out

231
00:08:10,330 --> 00:08:12,070
replace them update them all without

232
00:08:12,070 --> 00:08:14,380
having to worry about you know this

233
00:08:14,380 --> 00:08:16,000
entire other library and the rest of the

234
00:08:16,000 --> 00:08:17,080
things that you're doing when you do

235
00:08:17,080 --> 00:08:19,660
that one thing like I can't imagine

236
00:08:19,660 --> 00:08:21,940
replacing jQuery in a front-end codebase

237
00:08:21,940 --> 00:08:23,770
like you would just be nuts but

238
00:08:23,770 --> 00:08:26,169
replacing one small little helper is

239
00:08:26,169 --> 00:08:28,810
super easy um and you know replacing it

240
00:08:28,810 --> 00:08:30,010
is something better upgrading it or

241
00:08:30,010 --> 00:08:31,169
what-have-you

242
00:08:31,169 --> 00:08:33,130
so yeah choose the right tool for the

243
00:08:33,130 --> 00:08:35,289
job definitely don't just spring for

244
00:08:35,289 --> 00:08:36,880
some big thing because you're lazy it

245
00:08:36,880 --> 00:08:38,620
will save you time and it will just make

246
00:08:38,620 --> 00:08:40,860
the community better if you do that

247
00:08:40,860 --> 00:08:43,839
there's a kind of caveat to that kind of

248
00:08:43,839 --> 00:08:46,360
don't just build don't build yeah

249
00:08:46,360 --> 00:08:47,950
there's a caveat to building small

250
00:08:47,950 --> 00:08:49,560
modules which is don't get carried away

251
00:08:49,560 --> 00:08:51,910
it's really easy to kind of take the

252
00:08:51,910 --> 00:08:53,710
to the extreme be like every function is

253
00:08:53,710 --> 00:08:54,970
its own module I'm gonna put it up on

254
00:08:54,970 --> 00:08:58,870
NPM which is awesome I mean all the more

255
00:08:58,870 --> 00:09:00,490
power to you but at the same time are

256
00:09:00,490 --> 00:09:02,650
you really helping yourself are you

257
00:09:02,650 --> 00:09:05,200
helping the community it's very easy to

258
00:09:05,200 --> 00:09:06,580
look at a thousand line JavaScript on

259
00:09:06,580 --> 00:09:08,770
video this is too much let's just move

260
00:09:08,770 --> 00:09:10,120
all these helper functions into helper

261
00:09:10,120 --> 00:09:12,400
zjs and there you go I've cut my file in

262
00:09:12,400 --> 00:09:14,230
half but I would argue that you haven't

263
00:09:14,230 --> 00:09:15,700
actually reduced complexity at all

264
00:09:15,700 --> 00:09:17,830
you've just sharted it more or less

265
00:09:17,830 --> 00:09:20,110
you've moved around all this code and

266
00:09:20,110 --> 00:09:21,910
now as a developer you have to move in

267
00:09:21,910 --> 00:09:23,350
between files to work with them you have

268
00:09:23,350 --> 00:09:27,190
to check helpers j/s and Crocket for

269
00:09:27,190 --> 00:09:28,810
whatever you're trying to find for

270
00:09:28,810 --> 00:09:30,100
whatever bug you're trying to chase so

271
00:09:30,100 --> 00:09:32,200
it really makes it harder on yourself to

272
00:09:32,200 --> 00:09:34,780
do that there if there's a benefit to it

273
00:09:34,780 --> 00:09:35,890
that you see if someone else would like

274
00:09:35,890 --> 00:09:37,240
to use it if you see it being used

275
00:09:37,240 --> 00:09:39,580
within your own code base by all means

276
00:09:39,580 --> 00:09:42,520
please do it but for the most part there

277
00:09:42,520 --> 00:09:43,900
should really be a benefit to doing it

278
00:09:43,900 --> 00:09:45,250
other than just smaller files the

279
00:09:45,250 --> 00:09:47,560
purpose is single purpose is simpler

280
00:09:47,560 --> 00:09:51,880
modules not just smaller files let's

281
00:09:51,880 --> 00:09:54,130
talk about async async is the reason

282
00:09:54,130 --> 00:09:57,160
most of us come to node it's definitely

283
00:09:57,160 --> 00:09:58,660
the reason it was invented or the

284
00:09:58,660 --> 00:10:01,570
biggest purpose was to kind of instead

285
00:10:01,570 --> 00:10:03,670
of this multi-threaded world of you know

286
00:10:03,670 --> 00:10:06,430
a rails server having 20 different open

287
00:10:06,430 --> 00:10:07,960
connections and each one as it waited

288
00:10:07,960 --> 00:10:11,410
was just locked the original problem was

289
00:10:11,410 --> 00:10:12,670
how do we solve that how do we make

290
00:10:12,670 --> 00:10:14,200
something that can be highly concurrent

291
00:10:14,200 --> 00:10:15,760
and can do other things while it's

292
00:10:15,760 --> 00:10:17,850
waiting for database calls API calls and

293
00:10:17,850 --> 00:10:20,080
so that's kind of the selling point

294
00:10:20,080 --> 00:10:21,940
almost but at the same time it's also

295
00:10:21,940 --> 00:10:25,090
it's also very tricky so you have to be

296
00:10:25,090 --> 00:10:25,990
careful you have to leverage i/o

297
00:10:25,990 --> 00:10:27,730
whenever you can that's really how you

298
00:10:27,730 --> 00:10:30,070
get the most power out of node you know

299
00:10:30,070 --> 00:10:33,160
don't write blocking code use callbacks

300
00:10:33,160 --> 00:10:35,380
use whatever you can this is where you

301
00:10:35,380 --> 00:10:36,700
get to kind of squeeze the most out of

302
00:10:36,700 --> 00:10:39,280
node but at the same time you have to

303
00:10:39,280 --> 00:10:40,870
avoid heavy computation whenever

304
00:10:40,870 --> 00:10:44,290
possible let's say on a normal rail

305
00:10:44,290 --> 00:10:46,750
server like the like what I mentioned

306
00:10:46,750 --> 00:10:49,480
before you want to parse this giant JSON

307
00:10:49,480 --> 00:10:53,410
blob or giant blob of text into JSON all

308
00:10:53,410 --> 00:10:55,750
of a sudden on Rails that's easy you

309
00:10:55,750 --> 00:10:57,190
basically one thread is doing that it's

310
00:10:57,190 --> 00:10:58,450
chugging along and all of the threads

311
00:10:58,450 --> 00:10:59,350
are able to handle all the other

312
00:10:59,350 --> 00:11:01,600
requests but with node that's your one

313
00:11:01,600 --> 00:11:03,700
thread and as its doing that it can't

314
00:11:03,700 --> 00:11:05,680
look at anything else it basically can't

315
00:11:05,680 --> 00:11:06,940
handle nuke request coming in and it

316
00:11:06,940 --> 00:11:09,460
can't send new requests old requests out

317
00:11:09,460 --> 00:11:11,320
it's kind of stuck while it's doing that

318
00:11:11,320 --> 00:11:13,810
so kind of the biggest problem you'll

319
00:11:13,810 --> 00:11:15,580
run into the kind of most hidden problem

320
00:11:15,580 --> 00:11:17,860
or most common hidden problem is they

321
00:11:17,860 --> 00:11:18,970
are blocking yourself without even

322
00:11:18,970 --> 00:11:21,279
noticing so avoid that at all at all

323
00:11:21,279 --> 00:11:23,830
times offload heavy work to a background

324
00:11:23,830 --> 00:11:26,770
worker just kind of try to avoid it if

325
00:11:26,770 --> 00:11:31,300
possible and then invest in clean a sink

326
00:11:31,300 --> 00:11:32,860
it's really easy to write bad

327
00:11:32,860 --> 00:11:34,360
asynchronous code through no fault of

328
00:11:34,360 --> 00:11:36,580
your own just through you know you were

329
00:11:36,580 --> 00:11:37,660
in a rush you didn't know what you're

330
00:11:37,660 --> 00:11:40,029
doing some other developer came in and

331
00:11:40,029 --> 00:11:41,709
then all of a sudden your codebase is a

332
00:11:41,709 --> 00:11:43,029
mess it's it's really easy to do that

333
00:11:43,029 --> 00:11:46,690
but you will pay dividends to invest in

334
00:11:46,690 --> 00:11:48,279
actually cleaning up any sort of

335
00:11:48,279 --> 00:11:51,640
callback how a mess you see and the kind

336
00:11:51,640 --> 00:11:52,870
of node

337
00:11:52,870 --> 00:11:54,670
philosophy and the guiding principles

338
00:11:54,670 --> 00:11:55,510
kind of have a few best practices

339
00:11:55,510 --> 00:11:58,240
involved one of them being returned

340
00:11:58,240 --> 00:12:01,149
early in front-end code you'll see a lot

341
00:12:01,149 --> 00:12:03,940
of these kind of nested if-else blocks

342
00:12:03,940 --> 00:12:06,339
and conditionals and well that might

343
00:12:06,339 --> 00:12:08,560
make sense in that world in the world of

344
00:12:08,560 --> 00:12:10,420
kind of callbacks and all this nesting

345
00:12:10,420 --> 00:12:13,660
it really kind of benefits you to try

346
00:12:13,660 --> 00:12:15,100
and make your good as linear as possible

347
00:12:15,100 --> 00:12:16,720
try and get out of these statements when

348
00:12:16,720 --> 00:12:17,890
you know that you're not going to do

349
00:12:17,890 --> 00:12:20,230
anything else this is a pretty trivial

350
00:12:20,230 --> 00:12:21,520
example you know the same number of

351
00:12:21,520 --> 00:12:24,040
lines on both side but you can imagine

352
00:12:24,040 --> 00:12:25,660
with different callbacks being called in

353
00:12:25,660 --> 00:12:27,730
each and different control being passed

354
00:12:27,730 --> 00:12:28,660
to different parts of your application

355
00:12:28,660 --> 00:12:31,630
it really kind of benefits you to have a

356
00:12:31,630 --> 00:12:35,160
very linear way through the code and

357
00:12:35,160 --> 00:12:37,390
also don't be afraid to get help with it

358
00:12:37,390 --> 00:12:39,430
um you know there's a lot of kind of

359
00:12:39,430 --> 00:12:41,250
promises verse callbacks or you know

360
00:12:41,250 --> 00:12:44,470
there's a lot of flame there but really

361
00:12:44,470 --> 00:12:46,240
no matter what you want to get help with

362
00:12:46,240 --> 00:12:47,770
you should especially to get into the

363
00:12:47,770 --> 00:12:49,750
kind of higher-order stuff like how do

364
00:12:49,750 --> 00:12:51,670
you call a bunch of callbacks at once

365
00:12:51,670 --> 00:12:53,790
and then finish up when they're all done

366
00:12:53,790 --> 00:12:55,750
you can get a lot of power out of that

367
00:12:55,750 --> 00:12:57,459
by just using someone else's well-tested

368
00:12:57,459 --> 00:13:00,220
you know well used library instead of

369
00:13:00,220 --> 00:13:01,690
writing your own because those bugs are

370
00:13:01,690 --> 00:13:02,459
hard to track down

371
00:13:02,459 --> 00:13:05,440
so the async helper module really good

372
00:13:05,440 --> 00:13:07,180
at that promises are good that whatever

373
00:13:07,180 --> 00:13:09,910
you want to use use it don't be afraid

374
00:13:09,910 --> 00:13:14,220
to get help and lastly community

375
00:13:14,220 --> 00:13:17,380
community is a huge part of of node the

376
00:13:17,380 --> 00:13:19,500
ecosystem is huge one of the biggest

377
00:13:19,500 --> 00:13:22,920
is it the biggest now yeah wait wait

378
00:13:22,920 --> 00:13:24,690
wait that's all there so it's this huge

379
00:13:24,690 --> 00:13:26,670
kind of ecosystem and then the community

380
00:13:26,670 --> 00:13:29,250
is just so kind of involved with each

381
00:13:29,250 --> 00:13:30,510
other I mean you're all here this is

382
00:13:30,510 --> 00:13:31,430
awesome

383
00:13:31,430 --> 00:13:33,510
so whenever possible leverage the

384
00:13:33,510 --> 00:13:36,120
ecosystem or there's a module for that

385
00:13:36,120 --> 00:13:37,410
there's always a module for that I

386
00:13:37,410 --> 00:13:38,910
guarantee you everything you thought of

387
00:13:38,910 --> 00:13:41,640
there probably exists something someone

388
00:13:41,640 --> 00:13:43,410
has already thought of it they've

389
00:13:43,410 --> 00:13:44,430
written it they're given a name and

390
00:13:44,430 --> 00:13:46,550
hopefully they've even written tests

391
00:13:46,550 --> 00:13:50,610
hopefully big big f but yeah there's

392
00:13:50,610 --> 00:13:51,750
there's no reason that you have to

393
00:13:51,750 --> 00:13:53,190
reinvent the wheel every time especially

394
00:13:53,190 --> 00:13:54,750
with such a big ecosystem that doesn't

395
00:13:54,750 --> 00:13:58,230
mean don't if the the situation calls

396
00:13:58,230 --> 00:14:00,690
for it but try and reach out to maybe

397
00:14:00,690 --> 00:14:03,180
the module owner first see if you can

398
00:14:03,180 --> 00:14:04,440
contribute back to the community what's

399
00:14:04,440 --> 00:14:06,560
already there and make everything better

400
00:14:06,560 --> 00:14:10,950
before going out on your own also read

401
00:14:10,950 --> 00:14:12,510
out modules for others to use I think

402
00:14:12,510 --> 00:14:14,250
it's really easy especially in other

403
00:14:14,250 --> 00:14:15,690
languages again this world oh you're the

404
00:14:15,690 --> 00:14:18,480
only person using this your this is your

405
00:14:18,480 --> 00:14:20,640
team's code and that's it and they all

406
00:14:20,640 --> 00:14:21,660
know this one thing that you've learned

407
00:14:21,660 --> 00:14:23,910
two years ago so no need to document

408
00:14:23,910 --> 00:14:26,610
that but with the ecosystem and was

409
00:14:26,610 --> 00:14:28,770
working with so many other people you

410
00:14:28,770 --> 00:14:31,050
really need to kind of build for the

411
00:14:31,050 --> 00:14:32,310
stranger built for the guy who just

412
00:14:32,310 --> 00:14:34,740
found your your module just on NPM

413
00:14:34,740 --> 00:14:37,650
browsing because that's what people

414
00:14:37,650 --> 00:14:38,870
before you have kind of done that's how

415
00:14:38,870 --> 00:14:41,339
that's why the module you're using is so

416
00:14:41,339 --> 00:14:42,930
kind of well thought-out there's a lot

417
00:14:42,930 --> 00:14:45,030
of just kind of thought put into that

418
00:14:45,030 --> 00:14:48,330
and the ecosystem as a whole so whenever

419
00:14:48,330 --> 00:14:49,560
possible try and write modules for

420
00:14:49,560 --> 00:14:51,270
others to use write your code for others

421
00:14:51,270 --> 00:14:53,339
to read if they need it again it'll only

422
00:14:53,339 --> 00:14:55,530
mean more patches more pull requests

423
00:14:55,530 --> 00:14:58,110
more issues just greater involvement if

424
00:14:58,110 --> 00:14:59,400
you make your code easy to understand

425
00:14:59,400 --> 00:15:03,210
read and use and last embrace the

426
00:15:03,210 --> 00:15:05,250
community like I said it's an amazing

427
00:15:05,250 --> 00:15:06,480
community you guys are all here this is

428
00:15:06,480 --> 00:15:10,890
awesome but also like on github NPM

429
00:15:10,890 --> 00:15:13,110
people are always always talking to each

430
00:15:13,110 --> 00:15:16,080
other talking about stuff the IO Jas

431
00:15:16,080 --> 00:15:17,640
thing is pulling everyone back into node

432
00:15:17,640 --> 00:15:18,770
which is great

433
00:15:18,770 --> 00:15:20,640
just don't be afraid to reach out to

434
00:15:20,640 --> 00:15:22,230
people on Twitter anything really

435
00:15:22,230 --> 00:15:24,990
embrace the community both for your sake

436
00:15:24,990 --> 00:15:26,220
and for everyone's sake you'll really

437
00:15:26,220 --> 00:15:29,370
enjoy it more and yeah most importantly

438
00:15:29,370 --> 00:15:31,610
most importantly enjoy it

439
00:15:31,610 --> 00:15:38,750
thank you and then so that's the link

440
00:15:38,750 --> 00:15:42,440
yeah it's be gentle but um there's a lot

441
00:15:42,440 --> 00:15:44,089
more kind of stuff there that I didn't

442
00:15:44,089 --> 00:15:46,970
go over so yeah check it out

