1
00:00:01,829 --> 00:00:04,110

welcome everybody

2
00:00:04,110 --> 00:00:09,129
maybe maybe we could start with a song

3
00:00:09,139 --> 00:00:14,009
do you like that okay let's start with

4
00:00:14,009 --> 00:00:17,609
an easy one something that hopefully a

5
00:00:17,609 --> 00:00:29,460
lot of people know

6
00:00:29,470 --> 00:00:49,300
[Music]

7
00:00:49,300 --> 00:00:52,510
[Applause]

8
00:00:52,520 --> 00:01:10,280
[Music]

9
00:01:10,290 --> 00:01:31,889


10
00:01:31,889 --> 00:01:31,899
[Music]

11
00:01:31,899 --> 00:01:42,980
okay that didn't go as as well as plan

12
00:01:42,990 --> 00:02:32,320
[Music]

13
00:02:32,330 --> 00:02:44,950


14
00:02:44,950 --> 00:02:44,960
[Music]

15
00:02:44,960 --> 00:02:49,940
okay this one was better thank you cool

16
00:02:49,940 --> 00:02:53,580
let's get back to the presentation so

17
00:02:53,580 --> 00:02:55,290
this talk is called Coldplay and

18
00:02:55,290 --> 00:03:00,030
rock'n'roll I hope to code some and play

19
00:03:00,030 --> 00:03:02,430
some guitar and hopefully we'll enjoy

20
00:03:02,430 --> 00:03:05,920
the show

21
00:03:05,930 --> 00:03:10,020
all right great so before we start a lot

22
00:03:10,020 --> 00:03:12,540
of you are you tourists out there so you

23
00:03:12,540 --> 00:03:14,250
are familiar with the scene but this is

24
00:03:14,250 --> 00:03:18,660
what a real pedal board looks like these

25
00:03:18,660 --> 00:03:21,600
are all tiny gadgets that shaped the

26
00:03:21,600 --> 00:03:23,730
sounds of famous guitarists legendary

27
00:03:23,730 --> 00:03:25,770
guitarists that that we all know out

28
00:03:25,770 --> 00:03:29,190
there and this is how it can work for

29
00:03:29,190 --> 00:03:32,940
example in software in one of the one of

30
00:03:32,940 --> 00:03:35,610
the tools or products that I've done

31
00:03:35,610 --> 00:03:39,260
called pedals IO this is basically a

32
00:03:39,260 --> 00:03:42,510
faithful representation of real-life

33
00:03:42,510 --> 00:03:46,020
guitar pedals you sold two of them in

34
00:03:46,020 --> 00:03:48,480
the short demo and we'll be adding more

35
00:03:48,480 --> 00:03:52,170
an overdrive a chorus delay reverb and a

36
00:03:52,170 --> 00:03:57,270
lot more in in the coming minutes so I'm

37
00:03:57,270 --> 00:03:59,690
Arman Arman I'm jyler I come from Berlin

38
00:03:59,690 --> 00:04:02,580
I work for a company called you know

39
00:04:02,580 --> 00:04:04,380
Gambia and we're building electric

40
00:04:04,380 --> 00:04:06,510
scooters so like West pas but with

41
00:04:06,510 --> 00:04:10,560
electric batteries I'm also the founder

42
00:04:10,560 --> 00:04:12,420
of Longy which is a software

43
00:04:12,420 --> 00:04:15,570
craftsmanship school for women and I

44
00:04:15,570 --> 00:04:18,420
like to play a lot with code I have a

45
00:04:18,420 --> 00:04:21,060
lot of open source projects on github

46
00:04:21,060 --> 00:04:23,580
that range from brain signal processing

47
00:04:23,580 --> 00:04:26,280
to audio processing to front and

48
00:04:26,280 --> 00:04:29,400
libraries and platform-as-a-service

49
00:04:29,400 --> 00:04:32,370
and micro services and a lot of other

50
00:04:32,370 --> 00:04:35,760
stuff so what is Web Audio anybody

51
00:04:35,760 --> 00:04:41,430
familiar with Web Audio only a few ok

52
00:04:41,430 --> 00:04:43,349
let this be a call to the guitarist out

53
00:04:43,349 --> 00:04:45,870
there I hope you also write some code

54
00:04:45,870 --> 00:04:48,840
this is extremely fun to play with this

55
00:04:48,840 --> 00:04:51,780
is an amazing playground for especially

56
00:04:51,780 --> 00:04:55,020
as the cold air musicians Web Audio API

57
00:04:55,020 --> 00:04:58,319
is basically built into all of the major

58
00:04:58,319 --> 00:05:00,810
browsers and it gives you everything you

59
00:05:00,810 --> 00:05:03,300
need to build high quality audio

60
00:05:03,300 --> 00:05:07,500
applications that are like this pedal

61
00:05:07,500 --> 00:05:11,069
boards or full-fledged digital audio

62
00:05:11,069 --> 00:05:15,930
workstations or game audio in a 3d room

63
00:05:15,930 --> 00:05:18,210
where you can adjust the position of the

64
00:05:18,210 --> 00:05:22,409
sound and you can have specific start

65
00:05:22,409 --> 00:05:24,780
times and end times for specific samples

66
00:05:24,780 --> 00:05:26,909
so that it matches with your animations

67
00:05:26,909 --> 00:05:29,610
your characters and you can do some

68
00:05:29,610 --> 00:05:31,110
production applications you can do video

69
00:05:31,110 --> 00:05:34,319
production applications like DJ mixing

70
00:05:34,319 --> 00:05:38,280
tools and basically anything you can do

71
00:05:38,280 --> 00:05:39,960
with audio anything you are used to

72
00:05:39,960 --> 00:05:42,870
using on your computers or on your

73
00:05:42,870 --> 00:05:48,870
phones or iPads or tablets they they are

74
00:05:48,870 --> 00:05:52,409
available through Web Audio API and you

75
00:05:52,409 --> 00:05:54,569
can build any dream application that you

76
00:05:54,569 --> 00:05:57,750
have in mind that includes audio as well

77
00:05:57,750 --> 00:05:59,880
as you know art installation as well

78
00:05:59,880 --> 00:06:02,039
because you can combine it with the

79
00:06:02,039 --> 00:06:04,529
input that comes from a camera and you

80
00:06:04,529 --> 00:06:06,389
can basically turn it into sound you can

81
00:06:06,389 --> 00:06:08,310
turn the the pixels that the camera

82
00:06:08,310 --> 00:06:12,270
captures and portrayed as sound samples

83
00:06:12,270 --> 00:06:18,120
or any any kind of sound effects if you

84
00:06:18,120 --> 00:06:21,120
have ever imagined anything about audio

85
00:06:21,120 --> 00:06:23,400
that's available through Web Audio API

86
00:06:23,400 --> 00:06:26,909
actually this was what I had imagined to

87
00:06:26,909 --> 00:06:30,860
be able to play guitar effects free

88
00:06:30,860 --> 00:06:33,539
everywhere without the need of

89
00:06:33,539 --> 00:06:35,490
installation of a new software and

90
00:06:35,490 --> 00:06:38,699
basically I made it possible with Web

91
00:06:38,699 --> 00:06:42,810
Audio API so a little bit about Web

92
00:06:42,810 --> 00:06:47,909
Audio API and its basic structure Web

93
00:06:47,909 --> 00:06:52,320
Audio API is a network of nodes all you

94
00:06:52,320 --> 00:06:54,440
do is you create some nodes

95
00:06:54,440 --> 00:06:56,630
and they are either a source so that

96
00:06:56,630 --> 00:06:59,570
they represent a signal like an mp3 file

97
00:06:59,570 --> 00:07:02,480
for example or an oscillator like a

98
00:07:02,480 --> 00:07:06,220
keyboard which is a source of sound or

99
00:07:06,220 --> 00:07:10,040
they are sound processing units sound

100
00:07:10,040 --> 00:07:13,070
processing notes so these can be as you

101
00:07:13,070 --> 00:07:17,030
see here like a delay effect that is

102
00:07:17,030 --> 00:07:21,350
like an echo that repeats the sound or a

103
00:07:21,350 --> 00:07:26,030
gain effect that improves or amplifies

104
00:07:26,030 --> 00:07:28,640
the sound or some filters some very

105
00:07:28,640 --> 00:07:31,880
wonky filters that I will demo in a

106
00:07:31,880 --> 00:07:34,340
couple of minutes that you can do and of

107
00:07:34,340 --> 00:07:36,050
course at the end there is a target a

108
00:07:36,050 --> 00:07:38,630
destination an output which is your

109
00:07:38,630 --> 00:07:42,200
headphones or your speakers whatever you

110
00:07:42,200 --> 00:07:42,560
like

111
00:07:42,560 --> 00:07:45,530
or it could be a recording target so

112
00:07:45,530 --> 00:07:47,870
that you could save whatever you created

113
00:07:47,870 --> 00:07:51,800
with Web Audio to to an mp3 file much

114
00:07:51,800 --> 00:07:53,570
like rendering in a in a digital audio

115
00:07:53,570 --> 00:07:57,290
workstation the idea is very simple you

116
00:07:57,290 --> 00:07:59,900
create these nodes and you set some

117
00:07:59,900 --> 00:08:02,300
parameters which is very very simple

118
00:08:02,300 --> 00:08:04,040
extremely simple you don't have to know

119
00:08:04,040 --> 00:08:06,770
a lot of math actually you don't even

120
00:08:06,770 --> 00:08:08,780
have to know math for anything except

121
00:08:08,780 --> 00:08:12,470
one special node that is kind of there

122
00:08:12,470 --> 00:08:17,120
to introduce gain distortion effects but

123
00:08:17,120 --> 00:08:18,890
then you connect them you connect them

124
00:08:18,890 --> 00:08:21,490
together starting from the source from

125
00:08:21,490 --> 00:08:25,640
from the guitar or of course that's a

126
00:08:25,640 --> 00:08:27,770
guitar for me but whatever source of

127
00:08:27,770 --> 00:08:30,380
input you want maybe it's a mic or

128
00:08:30,380 --> 00:08:34,580
another audio file and you connect them

129
00:08:34,580 --> 00:08:37,550
in whatever way you like and then to the

130
00:08:37,550 --> 00:08:40,729
output and everything happens in real

131
00:08:40,729 --> 00:08:49,040
time

132
00:08:49,050 --> 00:08:50,230
okay

133
00:08:50,230 --> 00:08:54,940
so web audio hosts a lot of components

134
00:08:54,940 --> 00:08:56,230
that you can generate that you can

135
00:08:56,230 --> 00:08:58,480
create it starts with an audio context

136
00:08:58,480 --> 00:09:02,530
everything has to happen within an audio

137
00:09:02,530 --> 00:09:06,000
context anybody familiar with canvas API

138
00:09:06,000 --> 00:09:08,470
to draw some pixels it also has a

139
00:09:08,470 --> 00:09:11,080
context so in order to draw something to

140
00:09:11,080 --> 00:09:12,790
the screen you have to get a get a hold

141
00:09:12,790 --> 00:09:14,950
of a context and audio context is

142
00:09:14,950 --> 00:09:16,390
basically the same in order to do any

143
00:09:16,390 --> 00:09:18,850
audio application you need to have an

144
00:09:18,850 --> 00:09:21,010
audio context now you can have more than

145
00:09:21,010 --> 00:09:23,740
one and you can connect anything to more

146
00:09:23,740 --> 00:09:26,770
than one context to have multiple

147
00:09:26,770 --> 00:09:32,170
plugins or other applications but in the

148
00:09:32,170 --> 00:09:34,240
end you need at least one audio context

149
00:09:34,240 --> 00:09:36,970
then there's the offline of the context

150
00:09:36,970 --> 00:09:39,190
for you to be able to record something

151
00:09:39,190 --> 00:09:42,970
again and a lot of processing nodes

152
00:09:42,970 --> 00:09:46,440
processing units like again gain delay

153
00:09:46,440 --> 00:09:49,600
pan or Cromwell where panner is used to

154
00:09:49,600 --> 00:09:52,210
direct the sound to either left or right

155
00:09:52,210 --> 00:09:56,170
channels convolve ER is used to

156
00:09:56,170 --> 00:09:59,860
introduce effects like the echo effect

157
00:09:59,860 --> 00:10:03,910
here the whole effect like a cave you

158
00:10:03,910 --> 00:10:07,630
know your your sound kind of echoes and

159
00:10:07,630 --> 00:10:11,020
drifts away in a cave those effects are

160
00:10:11,020 --> 00:10:13,870
made by finite impulse response filters

161
00:10:13,870 --> 00:10:17,140
and a Cromwell ray node is basically

162
00:10:17,140 --> 00:10:20,290
used there and you can have an analyzer

163
00:10:20,290 --> 00:10:22,480
node so you can actually grab the signal

164
00:10:22,480 --> 00:10:27,700
and look at its properties so look at

165
00:10:27,700 --> 00:10:29,380
the frequency content look at the power

166
00:10:29,380 --> 00:10:32,710
and you can do various effects based on

167
00:10:32,710 --> 00:10:35,290
that you can split them into multiple

168
00:10:35,290 --> 00:10:37,600
channels multiple tracks so that the

169
00:10:37,600 --> 00:10:41,470
graph can get wider and wider as you

170
00:10:41,470 --> 00:10:47,070
want it has a lot of a lot of nodes and

171
00:10:47,070 --> 00:10:51,910
lately they also introduced some audio

172
00:10:51,910 --> 00:10:54,820
worker so it's like a service worker it

173
00:10:54,820 --> 00:10:57,520
works in the background it has separate

174
00:10:57,520 --> 00:10:59,379
threads and basic

175
00:10:59,379 --> 00:11:00,879
it allows you to implement your own

176
00:11:00,879 --> 00:11:06,189
algorithms your own scripts or functions

177
00:11:06,189 --> 00:11:09,220
that will run per sample but it will run

178
00:11:09,220 --> 00:11:11,649
off thread and so you won't hit a

179
00:11:11,649 --> 00:11:13,419
performance penalty so you won't be

180
00:11:13,419 --> 00:11:17,709
using the the main thread of the browser

181
00:11:17,709 --> 00:11:20,019
but it's parallel so that you can have

182
00:11:20,019 --> 00:11:21,970
multiple of them which makes the browser

183
00:11:21,970 --> 00:11:25,539
a very nice competitor for digital audio

184
00:11:25,539 --> 00:11:27,339
workstations like you can really get

185
00:11:27,339 --> 00:11:31,239
real production grade audio applications

186
00:11:31,239 --> 00:11:36,069
riding inside the browser and okay

187
00:11:36,069 --> 00:11:40,869
here's a very small example you start by

188
00:11:40,869 --> 00:11:44,409
creating a context which you do new

189
00:11:44,409 --> 00:11:48,159
audio context and as I said everything

190
00:11:48,159 --> 00:11:50,439
is hosted under the under that context

191
00:11:50,439 --> 00:11:54,159
so you can create a gain node which will

192
00:11:54,159 --> 00:11:56,889
amplify the the incoming signal by doing

193
00:11:56,889 --> 00:11:59,769
context that create gain and you can

194
00:11:59,769 --> 00:12:02,289
connect it to the destination which is

195
00:12:02,289 --> 00:12:04,989
the speaker output or whatever you like

196
00:12:04,989 --> 00:12:08,369
again here's another example to

197
00:12:08,369 --> 00:12:11,949
basically load an mp3 file and use it as

198
00:12:11,949 --> 00:12:14,259
the source you can create a buffer

199
00:12:14,259 --> 00:12:17,699
source and load the buffer that you

200
00:12:17,699 --> 00:12:22,209
download from the internet and use it

201
00:12:22,209 --> 00:12:25,689
connect it to the gain as the input so

202
00:12:25,689 --> 00:12:28,299
this basically gives you a graph where

203
00:12:28,299 --> 00:12:30,399
the source is at the beginning in the

204
00:12:30,399 --> 00:12:32,739
middle you have the gain and in the end

205
00:12:32,739 --> 00:12:35,470
you have the destination but this is

206
00:12:35,470 --> 00:12:37,659
basically as simple as as this loading

207
00:12:37,659 --> 00:12:43,629
an mp3 file ok let's talk about

208
00:12:43,629 --> 00:12:47,109
pedalboard chess it is the first open

209
00:12:47,109 --> 00:12:51,220
source web audio framework I guess I did

210
00:12:51,220 --> 00:12:52,529
it in 2012

211
00:12:52,529 --> 00:12:55,439
back then Web Audio API wasn't a thing

212
00:12:55,439 --> 00:12:58,509
they were still developing it it didn't

213
00:12:58,509 --> 00:13:00,789
have stream input for example it

214
00:13:00,789 --> 00:13:03,189
couldn't capture directly from it from

215
00:13:03,189 --> 00:13:06,129
your sound card and could only work with

216
00:13:06,129 --> 00:13:09,720
static buffers but those days are

217
00:13:09,720 --> 00:13:12,939
fortunately behind us and six years

218
00:13:12,939 --> 00:13:13,450
later

219
00:13:13,450 --> 00:13:15,550
it's still one of the best guitar

220
00:13:15,550 --> 00:13:18,490
effects library out there full

221
00:13:18,490 --> 00:13:21,940
disclosure I wrote it and it's GPL

222
00:13:21,940 --> 00:13:24,450
licensed and it has a very nice

223
00:13:24,450 --> 00:13:27,370
documentation both inside source code

224
00:13:27,370 --> 00:13:30,460
and as I read me and it has very nice

225
00:13:30,460 --> 00:13:31,960
abstractions based on the guitar world

226
00:13:31,960 --> 00:13:35,110
so if you are into building your own

227
00:13:35,110 --> 00:13:37,720
pedals which I am you can build your own

228
00:13:37,720 --> 00:13:40,090
pedals here very easily and make it a

229
00:13:40,090 --> 00:13:42,640
part of the library or you know play

230
00:13:42,640 --> 00:13:44,200
play with it however you like

231
00:13:44,200 --> 00:13:46,900
anybody doing guitar electronics like

232
00:13:46,900 --> 00:13:52,680
their own pedals nobody ok interesting

233
00:13:52,680 --> 00:13:55,510
good some of the guitars should start

234
00:13:55,510 --> 00:13:57,610
doing that as well that's very fun I

235
00:13:57,610 --> 00:14:00,130
started by doing real electronic

236
00:14:00,130 --> 00:14:04,030
circuits for overdrive pedals and then

237
00:14:04,030 --> 00:14:05,980
moved on to the digital world because

238
00:14:05,980 --> 00:14:09,520
this is a lot easier so you have pedal

239
00:14:09,520 --> 00:14:12,490
boxes pots potentiometers knobs that you

240
00:14:12,490 --> 00:14:15,310
can twist and turn around switches that

241
00:14:15,310 --> 00:14:18,060
you can push and LEDs that link and

242
00:14:18,060 --> 00:14:21,160
basically you bring these together to

243
00:14:21,160 --> 00:14:23,920
make pedals this is built on top of

244
00:14:23,920 --> 00:14:26,020
something called Google closure library

245
00:14:26,020 --> 00:14:29,560
which is ancient by today's standards I

246
00:14:29,560 --> 00:14:31,930
guess start in 2008 or something anybody

247
00:14:31,930 --> 00:14:35,200
using Google closure library one person

248
00:14:35,200 --> 00:14:36,720
you're my hero

249
00:14:36,720 --> 00:14:40,690
anybody who has used it before another

250
00:14:40,690 --> 00:14:42,690
person

251
00:14:42,690 --> 00:14:47,230
well it's arguably the best user

252
00:14:47,230 --> 00:14:49,900
interface library out there it's by

253
00:14:49,900 --> 00:14:52,360
Google and it's what Gmail Google Docs

254
00:14:52,360 --> 00:14:55,360
and all the other serious Google tools

255
00:14:55,360 --> 00:14:58,300
are built upon it has an amazing

256
00:14:58,300 --> 00:15:01,390
compiler like nothing the other guys can

257
00:15:01,390 --> 00:15:04,570
do nowadays like even roll up or other

258
00:15:04,570 --> 00:15:08,620
information web pack but yeah Google

259
00:15:08,620 --> 00:15:11,110
closure compiler has a really nice mode

260
00:15:11,110 --> 00:15:13,360
called advanced mode which rewrites your

261
00:15:13,360 --> 00:15:15,160
code from scratch doing a lot of

262
00:15:15,160 --> 00:15:18,760
optimizations just like a real real

263
00:15:18,760 --> 00:15:22,090
compiler just like a C compiler and it

264
00:15:22,090 --> 00:15:23,770
also optimizes for speed and for

265
00:15:23,770 --> 00:15:26,380
download speed and for runtime

266
00:15:26,380 --> 00:15:27,350
performance

267
00:15:27,350 --> 00:15:29,180
so pedalboard chess is built on top of

268
00:15:29,180 --> 00:15:30,650
google closure library because that was

269
00:15:30,650 --> 00:15:33,830
the best choice in 2012 but i guess i

270
00:15:33,830 --> 00:15:34,700
want to rewrite it

271
00:15:34,700 --> 00:15:37,730
now with es6 so if anybody out there I

272
00:15:37,730 --> 00:15:39,560
wanna you a hand that will be

273
00:15:39,560 --> 00:15:42,140
appreciated and it uses something called

274
00:15:42,140 --> 00:15:46,480
an MBTA architecture which is kind of

275
00:15:46,480 --> 00:15:49,700
out of fashion right now in in the

276
00:15:49,700 --> 00:15:54,440
front-end world but yeah so you have a

277
00:15:54,440 --> 00:15:58,310
stage as as the audio context in my

278
00:15:58,310 --> 00:15:59,600
world you're in pedal board chairs

279
00:15:59,600 --> 00:16:01,430
everything starts with a stage as you

280
00:16:01,430 --> 00:16:03,350
see here because without a stage

281
00:16:03,350 --> 00:16:05,210
there's no musicians even if you're

282
00:16:05,210 --> 00:16:06,770
playing in your bedroom that's your

283
00:16:06,770 --> 00:16:09,680
stage and then you have a board a pedal

284
00:16:09,680 --> 00:16:12,890
board that hosts your pedals and you

285
00:16:12,890 --> 00:16:15,560
have some boxes initially they're empty

286
00:16:15,560 --> 00:16:18,920
so it's like a gut class but you can

287
00:16:18,920 --> 00:16:22,310
fill them and make them guitar pedals

288
00:16:22,310 --> 00:16:27,050
for example a reverb or a delay pedal is

289
00:16:27,050 --> 00:16:30,200
a box with some inner circuitry you have

290
00:16:30,200 --> 00:16:33,400
a foot switch that can toggle on and off

291
00:16:33,400 --> 00:16:37,280
LEDs pots again file inputs and maybe

292
00:16:37,280 --> 00:16:38,600
the most important one is the stream

293
00:16:38,600 --> 00:16:41,470
input which is the thing you use to

294
00:16:41,470 --> 00:16:45,080
capture the sound of your guitar or a

295
00:16:45,080 --> 00:16:48,830
live instrument or also a microphone so

296
00:16:48,830 --> 00:16:50,570
you can actually do pretty fun effects

297
00:16:50,570 --> 00:16:55,320
with your voice just in your browser

298
00:16:55,330 --> 00:16:57,020
okay

299
00:16:57,020 --> 00:16:59,720
I'm not going to go into the details

300
00:16:59,720 --> 00:17:03,050
here I'm gonna show you some code but

301
00:17:03,050 --> 00:17:04,579
before that I also want to talk about

302
00:17:04,579 --> 00:17:08,510
web MIDI API now anybody again please

303
00:17:08,510 --> 00:17:09,920
raise your hands if you have played with

304
00:17:09,920 --> 00:17:15,110
the web MIDI API one two three okay

305
00:17:15,110 --> 00:17:17,959
this is also another very very fun API

306
00:17:17,959 --> 00:17:22,939
that opens the web to a world of immense

307
00:17:22,939 --> 00:17:24,949
pop possibilities you can do anything

308
00:17:24,949 --> 00:17:27,740
with it so you can grab any DJ gear any

309
00:17:27,740 --> 00:17:31,460
musician gear like a keyboard or a drum

310
00:17:31,460 --> 00:17:36,510
pad or I don't know something like this

311
00:17:36,520 --> 00:17:40,430
so this is also a MIDI controller it's a

312
00:17:40,430 --> 00:17:41,210
wireless Bluetooth

313
00:17:41,210 --> 00:17:42,890
midi-controller this thing is for the

314
00:17:42,890 --> 00:17:45,559
foot pedal but there's bluetooth

315
00:17:45,559 --> 00:17:50,480
connection to the computer so basically

316
00:17:50,480 --> 00:17:52,880
you can connect this to the browser

317
00:17:52,880 --> 00:17:55,510
directly and get some messages from that

318
00:17:55,510 --> 00:17:58,399
depending on which key you press or

319
00:17:58,399 --> 00:18:00,080
which button you press you get a

320
00:18:00,080 --> 00:18:02,059
different message on your browser which

321
00:18:02,059 --> 00:18:03,950
means you can then do whatever you want

322
00:18:03,950 --> 00:18:07,039
with it you can use it for I don't know

323
00:18:07,039 --> 00:18:11,750
if scrolling pages or hiding ads or I

324
00:18:11,750 --> 00:18:14,059
don't know photo applications like photo

325
00:18:14,059 --> 00:18:18,370
filters for me for example I'm really

326
00:18:18,370 --> 00:18:22,130
sick of editing tiny sliders on my phone

327
00:18:22,130 --> 00:18:24,830
when I when I edit photos or like in the

328
00:18:24,830 --> 00:18:26,870
computer even worse with a mouse you

329
00:18:26,870 --> 00:18:29,270
have to click something to change the

330
00:18:29,270 --> 00:18:31,929
brightness of of an image for example

331
00:18:31,929 --> 00:18:34,880
but if you have a MIDI controller that

332
00:18:34,880 --> 00:18:38,870
has a knob that you can turn it's a lot

333
00:18:38,870 --> 00:18:43,370
simpler to to modify images or or sound

334
00:18:43,370 --> 00:18:46,460
if you're a DJ basically the mixer that

335
00:18:46,460 --> 00:18:48,950
you see before the musicians there are

336
00:18:48,950 --> 00:18:50,539
also medical rollers and they can be

337
00:18:50,539 --> 00:18:53,029
reflected right in the browser and it's

338
00:18:53,029 --> 00:18:56,240
super easy to get started so it also

339
00:18:56,240 --> 00:18:58,250
these gears are like they start from I

340
00:18:58,250 --> 00:19:01,220
don't know $20 or something so you can

341
00:19:01,220 --> 00:19:04,760
get extremely cheap MIDI gear and use it

342
00:19:04,760 --> 00:19:07,669
as an external input device to the to

343
00:19:07,669 --> 00:19:10,820
the browser because with the mouse you

344
00:19:10,820 --> 00:19:11,899
can only do so much

345
00:19:11,899 --> 00:19:14,750
but tactile input is is really good if

346
00:19:14,750 --> 00:19:18,350
you have a pad or a slider a fader or a

347
00:19:18,350 --> 00:19:22,070
knob that you can twist to I don't know

348
00:19:22,070 --> 00:19:24,710
to turn on the volume of YouTube videos

349
00:19:24,710 --> 00:19:26,929
or something it's really really

350
00:19:26,929 --> 00:19:30,890
effective and of course you can also do

351
00:19:30,890 --> 00:19:38,690
some games with it let me see oh yeah

352
00:19:38,690 --> 00:19:41,790
here it is

353
00:19:41,800 --> 00:19:43,960
so this is a snake game that I

354
00:19:43,960 --> 00:19:49,300
implemented in one of the DJ gears the

355
00:19:49,300 --> 00:19:52,720
one on the left is the real DJ pad the

356
00:19:52,720 --> 00:19:53,680
right is a browser

357
00:19:53,680 --> 00:19:59,890
so I basically mirrored it in the Dom so

358
00:19:59,890 --> 00:20:02,110
that's a snake game that that I play

359
00:20:02,110 --> 00:20:04,780
with a with a real DJ device so you can

360
00:20:04,780 --> 00:20:07,270
turn on the lights on and off through

361
00:20:07,270 --> 00:20:09,520
the browser and again it's connected

362
00:20:09,520 --> 00:20:14,560
over bluetooth and yeah you can do a lot

363
00:20:14,560 --> 00:20:18,940
of a lot of stuff with it cool so how

364
00:20:18,940 --> 00:20:21,250
does it look like really it's extremely

365
00:20:21,250 --> 00:20:24,550
simple again you do navigator that

366
00:20:24,550 --> 00:20:28,870
request media access so I want some MIDI

367
00:20:28,870 --> 00:20:32,080
devices to be available and it gives you

368
00:20:32,080 --> 00:20:34,420
something with inputs and outputs so

369
00:20:34,420 --> 00:20:37,650
what you do is you traverse over the

370
00:20:37,650 --> 00:20:44,700
input and attach an event handler called

371
00:20:44,700 --> 00:20:46,960
media message event handler or whatever

372
00:20:46,960 --> 00:20:50,380
so basically there you get any events

373
00:20:50,380 --> 00:20:52,930
every time something changes in the MIDI

374
00:20:52,930 --> 00:20:55,390
device like when you press a button or

375
00:20:55,390 --> 00:20:58,480
when you turn a knob or anything you get

376
00:20:58,480 --> 00:21:01,620
an event that is not that significant

377
00:21:01,620 --> 00:21:05,500
except for the data which is an array of

378
00:21:05,500 --> 00:21:08,380
three values or sometimes even two

379
00:21:08,380 --> 00:21:10,480
values and they are the numbers the

380
00:21:10,480 --> 00:21:12,280
channel that the middle signal is coming

381
00:21:12,280 --> 00:21:15,580
in the note the the control change or

382
00:21:15,580 --> 00:21:18,070
program change signals and its value and

383
00:21:18,070 --> 00:21:24,240
it's either 0 or any value up to 127

384
00:21:24,240 --> 00:21:26,620
it's very simple and then you do

385
00:21:26,620 --> 00:21:28,300
whatever you want with it and of course

386
00:21:28,300 --> 00:21:30,700
as you can imagine what I did with that

387
00:21:30,700 --> 00:21:36,430
is I connected it to my pedal board and

388
00:21:36,430 --> 00:21:39,240
I can turn on turn on and off my pedals

389
00:21:39,240 --> 00:21:41,860
in real time as I play because I don't

390
00:21:41,860 --> 00:21:48,390
have a third hand yet so here's the demo

391
00:21:48,390 --> 00:21:52,060
that that is the the patch that I was

392
00:21:52,060 --> 00:21:55,480
using first I actually want to show

393
00:21:55,480 --> 00:22:06,490
you have the yeah so if you see it there

394
00:22:06,490 --> 00:22:10,390
the the LED is blinking it's turning off

395
00:22:10,390 --> 00:22:15,370
and on and I can also turn on and off

396
00:22:15,370 --> 00:22:21,520
the second one if I long press this it

397
00:22:21,520 --> 00:22:24,430
will change the patch so it will go to

398
00:22:24,430 --> 00:22:26,320
the second song so that I can play that

399
00:22:26,320 --> 00:22:32,500
one and yeah I can turn and turn on and

400
00:22:32,500 --> 00:22:41,100
off different petals and the other one

401
00:22:41,100 --> 00:22:44,130
has a very nice pedal called a wah pedal

402
00:22:44,130 --> 00:22:46,990
anybody familiar with the wah pedal wah

403
00:22:46,990 --> 00:22:50,740
wah pedal good well there were more

404
00:22:50,740 --> 00:22:52,330
heaters here you should learn the while

405
00:22:52,330 --> 00:22:58,420
pedal ok so basically it's it's like at

406
00:22:58,420 --> 00:23:00,580
this device this is a this is called the

407
00:23:00,580 --> 00:23:02,950
pedal it's a very confusing name

408
00:23:02,950 --> 00:23:04,240
everything apparently is called the

409
00:23:04,240 --> 00:23:05,770
pedal but this is also called the pedal

410
00:23:05,770 --> 00:23:09,100
you can step on it and as you see you

411
00:23:09,100 --> 00:23:11,460
can step on it to change the value and

412
00:23:11,460 --> 00:23:14,380
look at the second one I hope you can

413
00:23:14,380 --> 00:23:18,910
see it the the effect knob changes as I

414
00:23:18,910 --> 00:23:22,750
move my my pedal which means it opens

415
00:23:22,750 --> 00:23:24,190
the wah pedal or closes the wah pedal

416
00:23:24,190 --> 00:23:26,890
depending on the position so basically I

417
00:23:26,890 --> 00:23:31,960
use these with my library to make some

418
00:23:31,960 --> 00:23:50,820
music ok now let's see some code

419
00:23:50,830 --> 00:23:54,970
cool

420
00:23:54,980 --> 00:24:00,770
so is it readable from the back that's

421
00:24:00,770 --> 00:24:04,340
nice thank you so again it's very very

422
00:24:04,340 --> 00:24:08,360
simple I included pedal board chairs as

423
00:24:08,360 --> 00:24:10,670
a global library so even though this is

424
00:24:10,670 --> 00:24:14,270
a module some of the the components are

425
00:24:14,270 --> 00:24:17,480
available in the global context in the

426
00:24:17,480 --> 00:24:21,320
window so I call something called a

427
00:24:21,320 --> 00:24:23,660
stage it has its own context so stage

428
00:24:23,660 --> 00:24:26,420
creates its own audio context and that

429
00:24:26,420 --> 00:24:28,760
is what you use to create your other

430
00:24:28,760 --> 00:24:32,300
pedals so you create a stage you create

431
00:24:32,300 --> 00:24:37,220
a board a pedal board you use the stream

432
00:24:37,220 --> 00:24:41,900
input to get the guitar and you set the

433
00:24:41,900 --> 00:24:43,670
board to the stage and then you have

434
00:24:43,670 --> 00:24:57,470
some pedals let's see

435
00:24:57,480 --> 00:25:00,110
so

436
00:25:00,120 --> 00:25:07,750
you have three pedals out there

437
00:25:07,760 --> 00:25:10,520
yeah the first one is in noise gate a

438
00:25:10,520 --> 00:25:12,220
noise gate basically saves our ears

439
00:25:12,220 --> 00:25:14,780
because when you use distortion or

440
00:25:14,780 --> 00:25:17,780
overdrive there is a lot of hum and a

441
00:25:17,780 --> 00:25:19,010
lot of noise that I'm gonna demo right

442
00:25:19,010 --> 00:25:19,850
now

443
00:25:19,850 --> 00:25:23,390
that's really that's not ideal so you

444
00:25:23,390 --> 00:25:25,240
use the noise get to to block those

445
00:25:25,240 --> 00:25:29,690
those noises but it has a switch that

446
00:25:29,690 --> 00:25:37,820
you can toggle on and off or you can

447
00:25:37,820 --> 00:25:40,550
change some of its values you won't see

448
00:25:40,550 --> 00:25:42,290
it there but there's a threshold pot

449
00:25:42,290 --> 00:25:49,670
here and you can change it and it it is

450
00:25:49,670 --> 00:25:54,410
it is dynamically reflected in in the

451
00:25:54,410 --> 00:25:59,840
value so you can play play it here with

452
00:25:59,840 --> 00:26:03,800
your mouse or as I hate Mouse's you can

453
00:26:03,800 --> 00:26:07,270
change it through code or through

454
00:26:07,270 --> 00:26:11,330
through this pedal so let me try another

455
00:26:11,330 --> 00:26:19,140
one

456
00:26:19,150 --> 00:26:34,670
cool

457
00:26:34,680 --> 00:26:42,630
[Music]

458
00:26:42,630 --> 00:26:45,780
[Applause]

459
00:26:45,780 --> 00:26:55,520
[Music]

460
00:26:55,530 --> 00:26:58,150


461
00:26:58,150 --> 00:26:58,160
[Music]

462
00:26:58,160 --> 00:27:23,910
[Applause]

463
00:27:23,920 --> 00:27:24,550


464
00:27:24,550 --> 00:27:24,560
[Applause]

465
00:27:24,560 --> 00:27:37,950
[Music]

466
00:27:37,950 --> 00:27:41,120
from

467
00:27:41,130 --> 00:28:19,850
[Music]

468
00:28:19,850 --> 00:28:29,300
that's it thank you so basically this is

469
00:28:29,300 --> 00:28:30,740
play-doh ball chess and this is what you

470
00:28:30,740 --> 00:28:32,810
can do with the browser only a fraction

471
00:28:32,810 --> 00:28:35,480
of it so I encourage you to take a look

472
00:28:35,480 --> 00:28:38,030
into both pedalboard chess and the Web

473
00:28:38,030 --> 00:28:40,600
Audio API thank you again

