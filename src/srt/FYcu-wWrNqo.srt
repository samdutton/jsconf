1
00:00:17,790 --> 00:00:20,100

but title of my talk is basically ten

2
00:00:20,100 --> 00:00:21,750
Commandant's for efficiency access

3
00:00:21,750 --> 00:00:24,000
architecture and you might have noticed

4
00:00:24,000 --> 00:00:26,310
the star on the ten and that says

5
00:00:26,310 --> 00:00:30,270
condition supply which will no you know

6
00:00:30,270 --> 00:00:35,610
that soon why it's there so let me start

7
00:00:35,610 --> 00:00:38,010
by introducing myself my name is cachaÃ§a

8
00:00:38,010 --> 00:00:41,370
record and I'm if known I am better

9
00:00:41,370 --> 00:00:44,640
known as chen changwu on web and i'm

10
00:00:44,640 --> 00:00:47,550
from india now just to clarify india is

11
00:00:47,550 --> 00:00:49,820
not just the land of snakes and tigers

12
00:00:49,820 --> 00:00:56,259
we recently started writing CSS also

13
00:00:56,269 --> 00:01:00,210
okay I'm a front-end developer by it's

14
00:01:00,210 --> 00:01:02,489
my day job and I work at a wonderful

15
00:01:02,489 --> 00:01:03,780
startup called wing if I

16
00:01:03,780 --> 00:01:05,339
so we basically develop an AV testing

17
00:01:05,339 --> 00:01:06,479
tool called visual website optimizer

18
00:01:06,479 --> 00:01:10,620
that I work on and in case you have

19
00:01:10,620 --> 00:01:12,900
already heard about me it is probably

20
00:01:12,900 --> 00:01:15,990
due to my open source projects oh one of

21
00:01:15,990 --> 00:01:17,850
which is a hindered CSS it basically of

22
00:01:17,850 --> 00:01:20,220
CSS - tape library and the second one is

23
00:01:20,220 --> 00:01:22,290
epistle art that lets you create pixel

24
00:01:22,290 --> 00:01:27,240
art using CSS alright so what is this

25
00:01:27,240 --> 00:01:31,340
talk going to be about so I've been

26
00:01:31,340 --> 00:01:33,990
doing front-end stuff for almost three

27
00:01:33,990 --> 00:01:36,210
years now and like we all do I have

28
00:01:36,210 --> 00:01:38,820
learnt a lot about issues we face in CSS

29
00:01:38,820 --> 00:01:43,040
and many solutions that we can use to

30
00:01:43,040 --> 00:01:46,170
prevent them and avoid them so this is

31
00:01:46,170 --> 00:01:48,330
going to be about those CSS stuff that I

32
00:01:48,330 --> 00:01:49,320
would like to share with you from

33
00:01:49,320 --> 00:01:53,790
experience and the target of this talk

34
00:01:53,790 --> 00:01:56,820
is to basically help us know certain

35
00:01:56,820 --> 00:01:58,590
things which make the CSS architecture

36
00:01:58,590 --> 00:02:00,990
efficient and by efficient I mean two

37
00:02:00,990 --> 00:02:04,140
things over here so first your CSS will

38
00:02:04,140 --> 00:02:05,760
be easy it should be easy to understand

39
00:02:05,760 --> 00:02:09,780
for you as well as anyone on new joining

40
00:02:09,780 --> 00:02:12,120
on your project and also it should be

41
00:02:12,120 --> 00:02:13,790
easy to extend in future

42
00:02:13,790 --> 00:02:16,379
so no more kale in style sprinkling

43
00:02:16,379 --> 00:02:19,730
which generally tends to be in our apps

44
00:02:19,730 --> 00:02:22,470
also I'm a first-time speaker at a

45
00:02:22,470 --> 00:02:23,940
conference and that is such a big

46
00:02:23,940 --> 00:02:26,579
conference and it's quite hot and I'm

47
00:02:26,579 --> 00:02:28,170
not really good at speaking and making

48
00:02:28,170 --> 00:02:31,140
presentations so I

49
00:02:31,140 --> 00:02:33,210
and basically added a game for some

50
00:02:33,210 --> 00:02:34,980
reason because I'm good at making games

51
00:02:34,980 --> 00:02:38,970
and this is a game which we can all play

52
00:02:38,970 --> 00:02:41,150
together at the end of the talk

53
00:02:41,150 --> 00:02:44,280
all right so commandment number one it

54
00:02:44,280 --> 00:02:47,340
says thy height shall remain greater

55
00:02:47,340 --> 00:02:50,570
than thy files as at all times

56
00:02:50,570 --> 00:02:53,100
it simply means keep your file size is

57
00:02:53,100 --> 00:02:56,580
small but why why do we need to make a

58
00:02:56,580 --> 00:02:58,410
file size is small so first thing it

59
00:02:58,410 --> 00:03:01,140
keep helps to keep your code modular and

60
00:03:01,140 --> 00:03:03,560
more modular code basically means

61
00:03:03,560 --> 00:03:05,910
whenever need you need to add something

62
00:03:05,910 --> 00:03:07,980
or you need to change something you can

63
00:03:07,980 --> 00:03:09,390
quickly search for it

64
00:03:09,390 --> 00:03:12,269
added you can search for the target spot

65
00:03:12,269 --> 00:03:14,760
where in the code you actually need to

66
00:03:14,760 --> 00:03:18,000
place your CSS because modularity will

67
00:03:18,000 --> 00:03:20,850
easily enable you to figure out which

68
00:03:20,850 --> 00:03:24,000
file or which module actually needs to

69
00:03:24,000 --> 00:03:26,310
be changed so things become quite fast

70
00:03:26,310 --> 00:03:28,550
in

71
00:03:28,550 --> 00:03:31,110
extensibility wise and what do we need

72
00:03:31,110 --> 00:03:33,180
to do it's a simple rule keep dividing

73
00:03:33,180 --> 00:03:34,769
and refactoring your files as and when

74
00:03:34,769 --> 00:03:36,840
they get too big so you just need to

75
00:03:36,840 --> 00:03:38,760
stop at points in your development and

76
00:03:38,760 --> 00:03:41,820
see what could be separated out into

77
00:03:41,820 --> 00:03:43,860
separate modules and just keep on doing

78
00:03:43,860 --> 00:03:46,650
it periodically so let's take a simple

79
00:03:46,650 --> 00:03:49,140
scenario when you you're starting a

80
00:03:49,140 --> 00:03:51,150
slight side project on the first day of

81
00:03:51,150 --> 00:03:53,430
Christmas and obviously you start with a

82
00:03:53,430 --> 00:03:56,190
single CSS file style of CSS as it is

83
00:03:56,190 --> 00:03:58,590
commonly known for for a single file and

84
00:03:58,590 --> 00:04:01,530
you pay for your CSS in just a single

85
00:04:01,530 --> 00:04:04,350
file right and you quickly recognize and

86
00:04:04,350 --> 00:04:07,110
apply the rule that my style of CSS is

87
00:04:07,110 --> 00:04:09,420
getting bigger and I need to refactor it

88
00:04:09,420 --> 00:04:11,579
and separate it out into modules so on

89
00:04:11,579 --> 00:04:12,810
the fourth day of Christmas you realize

90
00:04:12,810 --> 00:04:16,140
that and this is a common scenario which

91
00:04:16,140 --> 00:04:19,049
applies to almost every app so you could

92
00:04:19,049 --> 00:04:21,600
separate your styled or CSS file into

93
00:04:21,600 --> 00:04:25,350
say four separate files or modules so

94
00:04:25,350 --> 00:04:27,360
base could have styles pertaining to

95
00:04:27,360 --> 00:04:30,840
tags anchor tags and other tags which

96
00:04:30,840 --> 00:04:32,729
need to have a basic style then there

97
00:04:32,729 --> 00:04:34,590
could be a helper store CSS which is

98
00:04:34,590 --> 00:04:37,680
basically helpers like for helper for

99
00:04:37,680 --> 00:04:40,080
floating elements left and right or say

100
00:04:40,080 --> 00:04:42,960
clearing throats then there could be a

101
00:04:42,960 --> 00:04:44,879
file called components or CS

102
00:04:44,879 --> 00:04:46,860
which could carry your components like

103
00:04:46,860 --> 00:04:49,530
buttons dropdowns tabs and all then

104
00:04:49,530 --> 00:04:51,780
there could be an optional theme dot CSS

105
00:04:51,780 --> 00:04:53,909
let's say you have your site which

106
00:04:53,909 --> 00:04:57,599
renders in a blue team and also there is

107
00:04:57,599 --> 00:04:59,460
a red team so maybe you could have team

108
00:04:59,460 --> 00:05:05,310
dogs as well and if you are having a

109
00:05:05,310 --> 00:05:07,499
view using a preprocessor or like sass

110
00:05:07,499 --> 00:05:09,719
you might as well have a file called

111
00:05:09,719 --> 00:05:12,860
mixing dot a CSS which has a mixed sense

112
00:05:12,860 --> 00:05:15,240
for them on the area of Christmas you

113
00:05:15,240 --> 00:05:16,590
realize that your components orders here

114
00:05:16,590 --> 00:05:20,069
CSS again got bigger it has a lot of

115
00:05:20,069 --> 00:05:22,110
components in it so again you apply the

116
00:05:22,110 --> 00:05:24,449
same rule you basically divided and

117
00:05:24,449 --> 00:05:26,669
refactor into separate modules so your

118
00:05:26,669 --> 00:05:29,099
component or CSS now can become a folder

119
00:05:29,099 --> 00:05:31,409
basically components and it can have

120
00:05:31,409 --> 00:05:34,139
files like buttons dot CSS drop downs or

121
00:05:34,139 --> 00:05:35,669
CSS basically every component divided

122
00:05:35,669 --> 00:05:39,629
into a separate file and if you follow

123
00:05:39,629 --> 00:05:41,909
this approach most probably you will be

124
00:05:41,909 --> 00:05:46,740
happy on the twelfth day of Christmas ok

125
00:05:46,740 --> 00:05:48,810
commandment number two the code config

126
00:05:48,810 --> 00:05:51,539
shall remain at one place and this

127
00:05:51,539 --> 00:05:53,939
basically means use variables now this

128
00:05:53,939 --> 00:05:57,990
is related to a pre process of I mean a

129
00:05:57,990 --> 00:05:59,939
preprocessor because this won't work in

130
00:05:59,939 --> 00:06:02,189
CSS currently but the good news is that

131
00:06:02,189 --> 00:06:06,060
variables are arriving in C native CSS

132
00:06:06,060 --> 00:06:08,490
in future as well so you can always use

133
00:06:08,490 --> 00:06:12,599
that in CSS also so let's take a sample

134
00:06:12,599 --> 00:06:14,819
layout so this is a very common layout

135
00:06:14,819 --> 00:06:17,339
into apps today so basically I have a

136
00:06:17,339 --> 00:06:19,349
header sidebar and content so how does

137
00:06:19,349 --> 00:06:21,719
something that spans full width and it

138
00:06:21,719 --> 00:06:23,879
has a height of 50 pixel then you have a

139
00:06:23,879 --> 00:06:26,339
sidebar that spans the complete height

140
00:06:26,339 --> 00:06:28,830
and a width fixed width and it's

141
00:06:28,830 --> 00:06:31,500
obviously starting from the bottom of

142
00:06:31,500 --> 00:06:33,389
header then there is content which is

143
00:06:33,389 --> 00:06:35,610
below the header and alongside the

144
00:06:35,610 --> 00:06:37,800
sidebar now if you notice here there are

145
00:06:37,800 --> 00:06:40,710
too many magic numbers and these are ha

146
00:06:40,710 --> 00:06:42,839
coded numbers which should be avoided

147
00:06:42,839 --> 00:06:46,500
and we will see why so consider this

148
00:06:46,500 --> 00:06:50,669
approach what basically I have done is

149
00:06:50,669 --> 00:06:53,459
I've separated those hard-coded magic

150
00:06:53,459 --> 00:06:55,800
numbers into separate into variables

151
00:06:55,800 --> 00:06:58,620
right so I have a variable called head

152
00:06:58,620 --> 00:07:00,660
header height which is 50 pixels and a

153
00:07:00,660 --> 00:07:03,270
sidebar with so what I'm doing right now

154
00:07:03,270 --> 00:07:05,580
is instead of using those hard-coded

155
00:07:05,580 --> 00:07:07,620
numbers in my code I'm actually using

156
00:07:07,620 --> 00:07:13,500
those variables so why is this better

157
00:07:13,500 --> 00:07:16,740
first of all it's less error-prone so we

158
00:07:16,740 --> 00:07:20,070
have we have minimized the chance of

159
00:07:20,070 --> 00:07:22,470
making mistakes so if I was using those

160
00:07:22,470 --> 00:07:24,750
hard-coded numbers I might at some place

161
00:07:24,750 --> 00:07:27,150
use wrong values instead of 10 I might

162
00:07:27,150 --> 00:07:32,030
use 20 or so likewise so we have

163
00:07:32,030 --> 00:07:35,270
potentially minimize see error here and

164
00:07:35,270 --> 00:07:37,620
the second thing is easy extensibility

165
00:07:37,620 --> 00:07:40,260
in future while extensibility because

166
00:07:40,260 --> 00:07:43,080
let's say this probably applies to early

167
00:07:43,080 --> 00:07:44,580
stages of development where you need to

168
00:07:44,580 --> 00:07:47,250
tweak things very quickly and see how it

169
00:07:47,250 --> 00:07:49,470
goes so with this approach you can

170
00:07:49,470 --> 00:07:51,600
basically treat the variables instead of

171
00:07:51,600 --> 00:07:53,460
modifying the values at every place in

172
00:07:53,460 --> 00:07:55,830
the code and you can very quickly see

173
00:07:55,830 --> 00:07:59,190
how the result is and decide on the

174
00:07:59,190 --> 00:08:04,740
values and fix on them okay commandment

175
00:08:04,740 --> 00:08:05,340
number three

176
00:08:05,340 --> 00:08:08,849
thou shalt believe in abstractions this

177
00:08:08,849 --> 00:08:13,380
simply means component abstraction okay

178
00:08:13,380 --> 00:08:16,650
so let's take this example okay you have

179
00:08:16,650 --> 00:08:18,330
a game and you are developing this in

180
00:08:18,330 --> 00:08:20,760
HTML file just because you can nowadays

181
00:08:20,760 --> 00:08:23,550
and you're basically styling the

182
00:08:23,550 --> 00:08:27,199
complete screen of the game and

183
00:08:27,199 --> 00:08:30,360
specifically the HUD elements you see so

184
00:08:30,360 --> 00:08:31,740
let's take the example of the one you

185
00:08:31,740 --> 00:08:35,330
see at the bottom left and the top right

186
00:08:35,330 --> 00:08:38,099
so your code might look probably look

187
00:08:38,099 --> 00:08:40,380
like this you have a class for these

188
00:08:40,380 --> 00:08:42,360
stats hot element called

189
00:08:42,360 --> 00:08:43,830
let's say it's a class called hot stats

190
00:08:43,830 --> 00:08:46,620
so it's a fixed position element of the

191
00:08:46,620 --> 00:08:48,750
screen and it has some opacity and

192
00:08:48,750 --> 00:08:52,140
filter - just to give it a feel now we

193
00:08:52,140 --> 00:08:54,330
see we position it using the bottom

194
00:08:54,330 --> 00:08:57,150
bottom and left similarly for the map

195
00:08:57,150 --> 00:09:00,570
hot element so it's gonna be same it's a

196
00:09:00,570 --> 00:09:01,680
fixed position element the same

197
00:09:01,680 --> 00:09:04,080
filtering and obviously the top and

198
00:09:04,080 --> 00:09:07,240
right properties - just to position it

199
00:09:07,240 --> 00:09:09,370
now if you notice here the first three

200
00:09:09,370 --> 00:09:12,130
properties in both the rules are exactly

201
00:09:12,130 --> 00:09:17,020
the same and this is repetition and we

202
00:09:17,020 --> 00:09:20,320
all know repetition is bad it's a common

203
00:09:20,320 --> 00:09:22,810
issue of common reason for issues that

204
00:09:22,810 --> 00:09:25,210
you face in your applications so we

205
00:09:25,210 --> 00:09:28,990
should not repeat it so this is a

206
00:09:28,990 --> 00:09:31,150
different approach what we have done

207
00:09:31,150 --> 00:09:32,620
here is we have separated out those

208
00:09:32,620 --> 00:09:34,540
three properties into a separate class

209
00:09:34,540 --> 00:09:38,470
and it's called HUD element and now HUD

210
00:09:38,470 --> 00:09:40,690
stats and Hart map which were initial

211
00:09:40,690 --> 00:09:42,370
assess are just left with the

212
00:09:42,370 --> 00:09:44,980
positioning styles and actually these

213
00:09:44,980 --> 00:09:47,560
styles which were different for those

214
00:09:47,560 --> 00:09:51,340
classes and the usage is simple so we

215
00:09:51,340 --> 00:09:53,380
have a HTML element now the thing is

216
00:09:53,380 --> 00:09:55,300
that both the classes need to be applied

217
00:09:55,300 --> 00:09:57,730
so that we get these tiles from both the

218
00:09:57,730 --> 00:10:04,350
classes so this can be improved for you

219
00:10:04,350 --> 00:10:07,900
let's say we are using a preprocessor so

220
00:10:07,900 --> 00:10:10,180
there's something called specifically

221
00:10:10,180 --> 00:10:11,770
inside is something called placeholders

222
00:10:11,770 --> 00:10:14,950
so the difference in from the previous

223
00:10:14,950 --> 00:10:16,570
slide is that we now define a

224
00:10:16,570 --> 00:10:18,430
placeholder instead of a class which

225
00:10:18,430 --> 00:10:21,160
basically defines are those properties

226
00:10:21,160 --> 00:10:22,960
which are common in those hard elements

227
00:10:22,960 --> 00:10:26,620
and instead of basically using that

228
00:10:26,620 --> 00:10:28,840
placeholder we extend our current

229
00:10:28,840 --> 00:10:31,060
classes with that right so what it

230
00:10:31,060 --> 00:10:32,770
enables is basically hard stats and

231
00:10:32,770 --> 00:10:35,170
heart map classes are now extended with

232
00:10:35,170 --> 00:10:38,020
the header element placeholders and now

233
00:10:38,020 --> 00:10:40,270
I can simply use the individual class in

234
00:10:40,270 --> 00:10:41,980
my HTML I don't have to repeat the two

235
00:10:41,980 --> 00:10:47,590
classes so no repetition here clean code

236
00:10:47,590 --> 00:10:53,140
less transfers of error commandment

237
00:10:53,140 --> 00:10:55,480
number four thou shalt speed a spread

238
00:10:55,480 --> 00:10:57,430
peace and stop tie selectors from

239
00:10:57,430 --> 00:11:04,870
fighting any cases for this keeps vector

240
00:11:04,870 --> 00:11:07,730
strength flow

241
00:11:07,740 --> 00:11:10,960
so selectors have strengths and they do

242
00:11:10,960 --> 00:11:13,540
fight we have all seen this in Christian

243
00:11:13,540 --> 00:11:17,890
stock so selectors have something called

244
00:11:17,890 --> 00:11:20,410
as specificity which determines the

245
00:11:20,410 --> 00:11:23,200
strength of those selectors and they do

246
00:11:23,200 --> 00:11:25,150
conflict with each other let's take a

247
00:11:25,150 --> 00:11:26,830
simple example let's say we have a

248
00:11:26,830 --> 00:11:29,950
component of tabs in an app and for some

249
00:11:29,950 --> 00:11:32,020
reason a developer styled it using depth

250
00:11:32,020 --> 00:11:34,480
or taps and it was being used in the

251
00:11:34,480 --> 00:11:38,260
HTML we simply put the class now another

252
00:11:38,260 --> 00:11:41,860
developer joining the project and he he

253
00:11:41,860 --> 00:11:43,540
was required to make a variation of the

254
00:11:43,540 --> 00:11:45,610
tab component which instead of having a

255
00:11:45,610 --> 00:11:48,160
full width which initial class has it

256
00:11:48,160 --> 00:11:50,740
was required to have 1/2 with 50% width

257
00:11:50,740 --> 00:11:52,930
so he went ahead and made a separate

258
00:11:52,930 --> 00:11:55,510
class for that tabs half and gave it a

259
00:11:55,510 --> 00:11:59,140
property with 50% and this was meant to

260
00:11:59,140 --> 00:12:00,850
be used with along with the tabs class

261
00:12:00,850 --> 00:12:04,510
so this is a simple common usage how he

262
00:12:04,510 --> 00:12:06,520
would go about have the tabs class on

263
00:12:06,520 --> 00:12:08,590
the element and along with it he has the

264
00:12:08,590 --> 00:12:12,160
tabs half now this won't work and the

265
00:12:12,160 --> 00:12:12,880
reason is simple

266
00:12:12,880 --> 00:12:15,010
the strength of the first selector which

267
00:12:15,010 --> 00:12:16,780
is div dot tabs is basically greater

268
00:12:16,780 --> 00:12:21,100
than the selector define after it which

269
00:12:21,100 --> 00:12:24,160
is tabs half and the reason is because

270
00:12:24,160 --> 00:12:27,790
of concatenation so concatenation of the

271
00:12:27,790 --> 00:12:30,340
actual tag with the class increases the

272
00:12:30,340 --> 00:12:33,100
strength and hence the second class is

273
00:12:33,100 --> 00:12:34,390
not able to override the properties of

274
00:12:34,390 --> 00:12:39,520
first class so things can get a lot

275
00:12:39,520 --> 00:12:42,340
Messier from here the probable solution

276
00:12:42,340 --> 00:12:44,950
is you again prefix your class name with

277
00:12:44,950 --> 00:12:46,810
the div tag just to make your selectors

278
00:12:46,810 --> 00:12:48,370
equal with the first one and able to

279
00:12:48,370 --> 00:12:51,400
override the first one right or you

280
00:12:51,400 --> 00:12:55,710
could go the better way not important

281
00:12:55,710 --> 00:12:58,360
plus we have another problem now the

282
00:12:58,360 --> 00:13:00,820
tabs can only be used on the width along

283
00:13:00,820 --> 00:13:04,510
with a div tag so it's it is fine but

284
00:13:04,510 --> 00:13:07,390
it's an unnecessary restriction you have

285
00:13:07,390 --> 00:13:10,870
put on your selector that even in future

286
00:13:10,870 --> 00:13:12,520
if you decide to have the tab class on

287
00:13:12,520 --> 00:13:14,320
some other element this won't work it

288
00:13:14,320 --> 00:13:17,380
could break so the solution is simple

289
00:13:17,380 --> 00:13:19,720
here there was no need to concatenate

290
00:13:19,720 --> 00:13:22,540
the tab component the cap class but we

291
00:13:22,540 --> 00:13:25,600
could simply have dot tabs and this

292
00:13:25,600 --> 00:13:29,260
would be solved so the key thing is just

293
00:13:29,260 --> 00:13:32,080
keep your selectors no don't put

294
00:13:32,080 --> 00:13:33,670
unnecessary nesting don't put

295
00:13:33,670 --> 00:13:35,830
unnecessary concatenation because that

296
00:13:35,830 --> 00:13:40,810
would just make things worse okay / -

297
00:13:40,810 --> 00:13:42,880
come on another five thou shalt treat

298
00:13:42,880 --> 00:13:44,800
your classes as their own children name

299
00:13:44,800 --> 00:13:48,610
them with equal love which is basically

300
00:13:48,610 --> 00:13:52,130
a naming convention

301
00:13:52,140 --> 00:13:56,350
okay so naming is very important in CSS

302
00:13:56,350 --> 00:13:58,510
I feel and when I say it's important in

303
00:13:58,510 --> 00:14:02,260
CSS I actually mean not in CSS itself

304
00:14:02,260 --> 00:14:03,930
but in comparison to other languages

305
00:14:03,930 --> 00:14:07,330
because if you see in other languages if

306
00:14:07,330 --> 00:14:09,100
your variable names are not correct they

307
00:14:09,100 --> 00:14:12,820
don't makes sense they're not I mean

308
00:14:12,820 --> 00:14:13,600
they are not good

309
00:14:13,600 --> 00:14:15,040
nothing would break your code will still

310
00:14:15,040 --> 00:14:17,140
function everything will work fine but

311
00:14:17,140 --> 00:14:21,430
CSS has some bad things in it like the

312
00:14:21,430 --> 00:14:23,320
earlier commandment we saw a selectors

313
00:14:23,320 --> 00:14:26,080
friends vector specificity so these

314
00:14:26,080 --> 00:14:28,750
things are something which can be

315
00:14:28,750 --> 00:14:31,300
avoided if we incorporate a very good

316
00:14:31,300 --> 00:14:33,370
naming system in our CSS and that is why

317
00:14:33,370 --> 00:14:38,110
I say it is very important in CSS so BEM

318
00:14:38,110 --> 00:14:40,180
is something I'm going to talk about as

319
00:14:40,180 --> 00:14:45,640
a naming convention so then basically is

320
00:14:45,640 --> 00:14:49,630
a methodology to not to name things but

321
00:14:49,630 --> 00:14:54,370
instead to separate out components from

322
00:14:54,370 --> 00:14:57,160
your app it basically supports component

323
00:14:57,160 --> 00:14:59,830
abstraction so M stands for block

324
00:14:59,830 --> 00:15:01,720
element and modifier so what it says

325
00:15:01,720 --> 00:15:05,950
that in your app you most probably have

326
00:15:05,950 --> 00:15:09,000
things which are independent

327
00:15:09,000 --> 00:15:11,290
independent components things which

328
00:15:11,290 --> 00:15:13,180
could be separated out into modules and

329
00:15:13,180 --> 00:15:16,390
could be used anywhere independently so

330
00:15:16,390 --> 00:15:20,770
BEM can say a terms them as block so

331
00:15:20,770 --> 00:15:22,510
block is basically a component you have

332
00:15:22,510 --> 00:15:24,010
in your app then there is something

333
00:15:24,010 --> 00:15:26,830
called element so element is sub parts

334
00:15:26,830 --> 00:15:29,050
of your component a component might have

335
00:15:29,050 --> 00:15:31,870
several things which eventually build up

336
00:15:31,870 --> 00:15:33,430
2d components so those are called

337
00:15:33,430 --> 00:15:36,850
elements then finally this modifier the

338
00:15:36,850 --> 00:15:38,560
component might have variations which

339
00:15:38,560 --> 00:15:42,490
BEM terms as modifier so this is the

340
00:15:42,490 --> 00:15:46,440
methodology part of them but this is

341
00:15:46,440 --> 00:15:48,490
augmented with a naming convention as

342
00:15:48,490 --> 00:15:51,279
well so the naming convention I have

343
00:15:51,279 --> 00:15:53,230
shown here is basically a variation of

344
00:15:53,230 --> 00:15:55,210
actual thing which was developed at

345
00:15:55,210 --> 00:15:58,870
Yandex so it's a variation by Nicholas

346
00:15:58,870 --> 00:16:02,050
and Harry Roberts so what we translate

347
00:16:02,050 --> 00:16:04,630
this into is a block is always a single

348
00:16:04,630 --> 00:16:07,029
class rule number one so let us say we

349
00:16:07,029 --> 00:16:09,130
have a class called component so block

350
00:16:09,130 --> 00:16:11,200
is a component then there's an element

351
00:16:11,200 --> 00:16:13,450
class so element class according to this

352
00:16:13,450 --> 00:16:17,290
rule is basically prefect sing with the

353
00:16:17,290 --> 00:16:20,320
actual component name and double

354
00:16:20,320 --> 00:16:23,050
underscores and lastly we have the

355
00:16:23,050 --> 00:16:27,130
modifier which is whose name we get by

356
00:16:27,130 --> 00:16:29,920
prefixing component name and then double

357
00:16:29,920 --> 00:16:32,380
hyphens so this is the naming convention

358
00:16:32,380 --> 00:16:34,260
we follow for all the three elements

359
00:16:34,260 --> 00:16:38,950
three parts of them now let's see how

360
00:16:38,950 --> 00:16:41,040
this applies actually and why it's good

361
00:16:41,040 --> 00:16:43,810
so let's take an example of a component

362
00:16:43,810 --> 00:16:45,550
because then basically works on

363
00:16:45,550 --> 00:16:50,350
component we have a slider an app if

364
00:16:50,350 --> 00:16:52,390
what if you were not to use BEM this was

365
00:16:52,390 --> 00:16:55,089
deep probably the CSS you would have

366
00:16:55,089 --> 00:16:57,610
written so we have the slider class

367
00:16:57,610 --> 00:17:00,280
which has a position relative then we

368
00:17:00,280 --> 00:17:03,520
have two things residing in this slider

369
00:17:03,520 --> 00:17:05,890
so firstly this slider track so be

370
00:17:05,890 --> 00:17:08,260
writer C says when the side will track

371
00:17:08,260 --> 00:17:09,160
in the side of slider

372
00:17:09,160 --> 00:17:11,050
they give it a background and similarly

373
00:17:11,050 --> 00:17:13,839
for the knob right and you might as well

374
00:17:13,839 --> 00:17:16,319
have a variation of this slider

375
00:17:16,319 --> 00:17:19,060
variation in which we have an extra

376
00:17:19,060 --> 00:17:21,670
input to basically

377
00:17:21,670 --> 00:17:23,380
and really let the user manually change

378
00:17:23,380 --> 00:17:26,350
the values so forth for that we might

379
00:17:26,350 --> 00:17:30,850
have a selector like this so if you see

380
00:17:30,850 --> 00:17:34,000
here we have lots of so-called the bad

381
00:17:34,000 --> 00:17:36,730
things in CSS in our selectors so the

382
00:17:36,730 --> 00:17:40,120
first first selector is fine but the

383
00:17:40,120 --> 00:17:42,280
second selector has nesting in it the

384
00:17:42,280 --> 00:17:46,440
third as well and the last one is quite

385
00:17:46,440 --> 00:17:49,540
variable so we have concatenation along

386
00:17:49,540 --> 00:17:54,610
with nesting so that is really bad so

387
00:17:54,610 --> 00:17:58,090
let's apply them on this example so if

388
00:17:58,090 --> 00:17:59,560
you were to use the same name naming

389
00:17:59,560 --> 00:18:02,350
conventions we just saw this would

390
00:18:02,350 --> 00:18:04,240
actually translate into the component

391
00:18:04,240 --> 00:18:06,760
class being the same Sider the slider

392
00:18:06,760 --> 00:18:10,600
track would be simply named as the

393
00:18:10,600 --> 00:18:12,940
component name underscore underscore the

394
00:18:12,940 --> 00:18:15,250
actual element so these are the elements

395
00:18:15,250 --> 00:18:17,260
track and not the slider not track and

396
00:18:17,260 --> 00:18:19,810
slider knob then the variation so

397
00:18:19,810 --> 00:18:23,470
variation would actually be styled like

398
00:18:23,470 --> 00:18:26,770
slider - - with input and whenever this

399
00:18:26,770 --> 00:18:28,150
variation class is basically on a

400
00:18:28,150 --> 00:18:30,010
component we need to actually display

401
00:18:30,010 --> 00:18:32,140
the slider input which is again an

402
00:18:32,140 --> 00:18:34,660
element of a component so if you notice

403
00:18:34,660 --> 00:18:37,210
here first vector remains the same but

404
00:18:37,210 --> 00:18:38,680
the second and third selector we have

405
00:18:38,680 --> 00:18:42,670
managed to remove the nesting so they

406
00:18:42,670 --> 00:18:45,190
are single classes now much better much

407
00:18:45,190 --> 00:18:48,040
uniform and less specific and even in

408
00:18:48,040 --> 00:18:50,470
the last one we have the nesting is

409
00:18:50,470 --> 00:18:52,300
still there but concatenation has been

410
00:18:52,300 --> 00:18:53,590
removed much better than the previous

411
00:18:53,590 --> 00:18:57,520
one so this is how BEM can be used to

412
00:18:57,520 --> 00:19:00,130
actually keep your selectors low the

413
00:19:00,130 --> 00:19:02,380
target is to keep this every selector as

414
00:19:02,380 --> 00:19:09,580
just one class wherever it works okay

415
00:19:09,580 --> 00:19:11,680
commandment number six thou shalt not

416
00:19:11,680 --> 00:19:16,600
mix up the ego and the indexes z-index

417
00:19:16,600 --> 00:19:18,880
management so what's the issue with Z

418
00:19:18,880 --> 00:19:22,930
indexes so this is a common thing we see

419
00:19:22,930 --> 00:19:27,160
in most our apps so people tend to set

420
00:19:27,160 --> 00:19:29,740
properties set the values of the indexes

421
00:19:29,740 --> 00:19:32,550
properties like nine nine nine

422
00:19:32,550 --> 00:19:34,440
and the reason is simple they don't know

423
00:19:34,440 --> 00:19:37,110
what might come over me so why not set a

424
00:19:37,110 --> 00:19:42,780
max value so the solution for this is

425
00:19:42,780 --> 00:19:46,080
basically using the commandment number

426
00:19:46,080 --> 00:19:48,750
two which we saw earlier using variables

427
00:19:48,750 --> 00:19:50,730
and separating out your Z indexes in two

428
00:19:50,730 --> 00:19:54,330
variables right so let's say we have an

429
00:19:54,330 --> 00:19:56,970
app and it has multiple components so

430
00:19:56,970 --> 00:19:58,620
components like overlay slide out

431
00:19:58,620 --> 00:20:00,270
backdrop and there is a slide-out

432
00:20:00,270 --> 00:20:02,250
there's a side bar navigation header and

433
00:20:02,250 --> 00:20:06,030
stuff so first thing we separate out the

434
00:20:06,030 --> 00:20:08,220
indexes into variables but that is not

435
00:20:08,220 --> 00:20:09,150
it

436
00:20:09,150 --> 00:20:12,180
so what addition purpose this code is

437
00:20:12,180 --> 00:20:14,310
solving is it's basically translating

438
00:20:14,310 --> 00:20:16,230
your visual hierarchy the actual layer

439
00:20:16,230 --> 00:20:19,230
system of your components into code now

440
00:20:19,230 --> 00:20:23,040
I have a linear representation of your

441
00:20:23,040 --> 00:20:29,480
layers right in my code what good is it

442
00:20:29,480 --> 00:20:32,310
so there are two things you could do

443
00:20:32,310 --> 00:20:34,590
with your components in with your UI

444
00:20:34,590 --> 00:20:38,040
elements in an app you could change the

445
00:20:38,040 --> 00:20:41,070
existing layer position of those

446
00:20:41,070 --> 00:20:43,650
elements or you might add new elements

447
00:20:43,650 --> 00:20:45,780
UI elements to your app so changing

448
00:20:45,780 --> 00:20:47,370
existing Z indexes become really easy

449
00:20:47,370 --> 00:20:49,380
because you actually know what might

450
00:20:49,380 --> 00:20:51,900
break you actually know the what things

451
00:20:51,900 --> 00:20:54,740
come pay for me and what after me and

452
00:20:54,740 --> 00:20:57,600
same with the scene while adding new

453
00:20:57,600 --> 00:20:59,670
elements to your app you actually you

454
00:20:59,670 --> 00:21:03,420
can now actually visualize where my

455
00:21:03,420 --> 00:21:07,100
element fits in the layer system right

456
00:21:07,100 --> 00:21:09,990
so normal Z index 9 9 9 9 9

457
00:21:09,990 --> 00:21:11,580
you can keep your Z index is short

458
00:21:11,580 --> 00:21:13,470
because now you know what's allow me and

459
00:21:13,470 --> 00:21:19,640
what's below me

460
00:21:19,650 --> 00:21:21,809
okay over to commandment number seven

461
00:21:21,809 --> 00:21:24,360
inheritance doesn't always gives you no

462
00:21:24,360 --> 00:21:30,900
money so this is again a SAS commandment

463
00:21:30,900 --> 00:21:36,270
and it basically is about the ad extent

464
00:21:36,270 --> 00:21:38,430
thing which SAS provides so like you saw

465
00:21:38,430 --> 00:21:40,050
earlier ad extent is something which you

466
00:21:40,050 --> 00:21:43,470
can use to extend a current class with

467
00:21:43,470 --> 00:21:45,510
any previous class and the properties of

468
00:21:45,510 --> 00:21:47,910
that class which you actually extend

469
00:21:47,910 --> 00:21:51,990
would be carried over to your new class

470
00:21:51,990 --> 00:21:57,300
right so and extend has a thing which it

471
00:21:57,300 --> 00:22:01,050
which might make your CSS very bad and

472
00:22:01,050 --> 00:22:04,530
item it as selector hell let's see what

473
00:22:04,530 --> 00:22:09,410
it is so let's say in your app you have

474
00:22:09,410 --> 00:22:12,720
an error class which is basically used

475
00:22:12,720 --> 00:22:15,360
to define things which any error in your

476
00:22:15,360 --> 00:22:19,170
app might have so your error should be

477
00:22:19,170 --> 00:22:22,410
colored red and it might have a

478
00:22:22,410 --> 00:22:24,450
background a reddish background so

479
00:22:24,450 --> 00:22:26,820
anything which is which represents error

480
00:22:26,820 --> 00:22:29,130
would obviously be using this error

481
00:22:29,130 --> 00:22:32,220
class then there was a requirement to

482
00:22:32,220 --> 00:22:35,820
actually increase the padding let's say

483
00:22:35,820 --> 00:22:37,830
of any error which is coming in the

484
00:22:37,830 --> 00:22:40,770
sidebar so we probably will have a style

485
00:22:40,770 --> 00:22:42,570
like that any error in the sidebar

486
00:22:42,570 --> 00:22:45,950
should be having a padding of 10 pixels

487
00:22:45,950 --> 00:22:49,020
now consider we have a notification box

488
00:22:49,020 --> 00:22:51,120
and it's basically an error notification

489
00:22:51,120 --> 00:22:53,460
box so what I would do is my error

490
00:22:53,460 --> 00:22:56,640
notification should extend with an error

491
00:22:56,640 --> 00:22:58,920
class so I get the error properties on

492
00:22:58,920 --> 00:23:00,630
myself without actually writing the

493
00:23:00,630 --> 00:23:05,970
properties again now notice this this is

494
00:23:05,970 --> 00:23:07,860
the compiled CSS of the sass over here

495
00:23:07,860 --> 00:23:09,450
and if you notice the highlighted

496
00:23:09,450 --> 00:23:12,150
selector is something which we did not

497
00:23:12,150 --> 00:23:13,820
want it and did not actually

498
00:23:13,820 --> 00:23:16,110
intentionally write but it is being

499
00:23:16,110 --> 00:23:17,940
generated and this is an unnecessary C

500
00:23:17,940 --> 00:23:23,220
or CSS so this might look not so much of

501
00:23:23,220 --> 00:23:25,770
concern right now but if you let's say

502
00:23:25,770 --> 00:23:28,200
you have a huge app of with so many

503
00:23:28,200 --> 00:23:29,460
styles

504
00:23:29,460 --> 00:23:32,270
this is something you could end up with

505
00:23:32,270 --> 00:23:42,700
this is real selector we had in an app

506
00:23:42,710 --> 00:23:45,120
so the solution for this is basically

507
00:23:45,120 --> 00:23:47,220
using placeholders which we earlier saw

508
00:23:47,220 --> 00:23:49,950
in component extract abstraction

509
00:23:49,950 --> 00:23:53,610
commandment so what we are doing

510
00:23:53,610 --> 00:23:57,150
differently here is first of all the

511
00:23:57,150 --> 00:23:59,760
error class does not have the properties

512
00:23:59,760 --> 00:24:01,710
now it's basically transferred into a

513
00:24:01,710 --> 00:24:03,210
placeholder so we define a new

514
00:24:03,210 --> 00:24:06,030
placeholder core error and that now has

515
00:24:06,030 --> 00:24:09,030
the properties of an error second rule

516
00:24:09,030 --> 00:24:11,640
we never extend a class we always extend

517
00:24:11,640 --> 00:24:15,270
a placeholder so error class is

518
00:24:15,270 --> 00:24:17,340
something that is to be used in the HTML

519
00:24:17,340 --> 00:24:19,170
so we create the error class and this

520
00:24:19,170 --> 00:24:20,880
then basically extend it with the

521
00:24:20,880 --> 00:24:22,710
placeholder similarly we have the

522
00:24:22,710 --> 00:24:24,930
message notification so that is

523
00:24:24,930 --> 00:24:27,360
extending the error again and rule

524
00:24:27,360 --> 00:24:29,580
number three three whenever a class

525
00:24:29,580 --> 00:24:32,610
needs to be tweaked based on some

526
00:24:32,610 --> 00:24:35,640
location or based on some anything so we

527
00:24:35,640 --> 00:24:38,880
use class for that and that you can see

528
00:24:38,880 --> 00:24:41,970
so when doing the PAC padding of the

529
00:24:41,970 --> 00:24:44,550
error error we basically use the class

530
00:24:44,550 --> 00:24:47,250
there and if you follow those three

531
00:24:47,250 --> 00:24:50,550
rules you see that that unnecessary CSS

532
00:24:50,550 --> 00:24:55,890
that was generated is no mother and this

533
00:24:55,890 --> 00:24:58,110
actually helps reducing compilation time

534
00:24:58,110 --> 00:25:00,420
as well and in app we were able to

535
00:25:00,420 --> 00:25:03,360
reduce it by 76% because sass needs to

536
00:25:03,360 --> 00:25:06,000
do a lot of work to while compilation to

537
00:25:06,000 --> 00:25:08,430
actually see what what is extending

538
00:25:08,430 --> 00:25:10,350
being extended wear in your code and

539
00:25:10,350 --> 00:25:12,690
replace those instances so it's a lot of

540
00:25:12,690 --> 00:25:16,230
work it's could really be of quite a

541
00:25:16,230 --> 00:25:20,480
benefit this is what that start meant so

542
00:25:20,480 --> 00:25:25,080
seven Commandments is all I have and now

543
00:25:25,080 --> 00:25:31,560
I'll be actually switching over to the

544
00:25:31,560 --> 00:25:34,890
game which I was talking about so this

545
00:25:34,890 --> 00:25:39,200
game is basically a MMO

546
00:25:39,210 --> 00:25:43,240
see T G so that's massively multiplayer

547
00:25:43,240 --> 00:25:46,210
online CSS throwing game so if you could

548
00:25:46,210 --> 00:25:49,059
open this IP in your Mobile's or laptops

549
00:25:49,059 --> 00:25:51,460
we could all play this together so the

550
00:25:51,460 --> 00:25:54,460
thing here is I don't play this you guys

551
00:25:54,460 --> 00:25:56,320
paid together so if anything goes wrong

552
00:25:56,320 --> 00:26:02,440
it is because because of you I mean so

553
00:26:02,440 --> 00:26:05,530
we are getting a count here the number

554
00:26:05,530 --> 00:26:06,909
of people who are getting connected to

555
00:26:06,909 --> 00:26:11,650
the game so nine people please don't

556
00:26:11,650 --> 00:26:15,730
start sending things that may explain

557
00:26:15,730 --> 00:26:24,659
what it does okay so so this let's see

558
00:26:24,659 --> 00:26:28,900
what we need to do here so I'm starting

559
00:26:28,900 --> 00:26:34,960
a simple lever here level three is guys

560
00:26:34,960 --> 00:26:39,730
where's the code of conduct piece so

561
00:26:39,730 --> 00:26:41,950
this is level number three it's quite

562
00:26:41,950 --> 00:26:44,890
hard so I'm using another demo level so

563
00:26:44,890 --> 00:26:47,100
we have a player here and that's a flag

564
00:26:47,100 --> 00:26:51,580
which we need to basically get and

565
00:26:51,580 --> 00:26:54,370
there's a block in between which we need

566
00:26:54,370 --> 00:26:57,460
to somehow remove right now all you guys

567
00:26:57,460 --> 00:27:00,520
what you need to do is you you all see

568
00:27:00,520 --> 00:27:05,860
your text box right it's all good so you

569
00:27:05,860 --> 00:27:07,659
see a text box where you need to put a

570
00:27:07,659 --> 00:27:10,659
pair of property or a no value right so

571
00:27:10,659 --> 00:27:13,330
let's say display : none and you need to

572
00:27:13,330 --> 00:27:17,380
submit submit that right and the thing

573
00:27:17,380 --> 00:27:19,090
here is this is a sample scenario

574
00:27:19,090 --> 00:27:21,130
whatever rule you submit whatever

575
00:27:21,130 --> 00:27:22,890
property and value you sum it is

576
00:27:22,890 --> 00:27:26,080
basically gonna apply in an abstract way

577
00:27:26,080 --> 00:27:27,940
on the scenario not really getting

578
00:27:27,940 --> 00:27:32,830
applied technically but as you won't be

579
00:27:32,830 --> 00:27:37,350
able to kill like this

580
00:27:37,360 --> 00:27:41,570
so can we try submitting sensible

581
00:27:41,570 --> 00:27:44,160
solutions

582
00:27:44,170 --> 00:27:52,610
this is CSS contract so let me give you

583
00:27:52,610 --> 00:27:54,980
a hint here so you all every one of you

584
00:27:54,980 --> 00:27:57,700
is basically in front of a table and

585
00:27:57,700 --> 00:28:01,820
this is a border which is blocking so if

586
00:28:01,820 --> 00:28:04,310
you are in front of a table and there is

587
00:28:04,310 --> 00:28:14,160
a border how do you remove the border

588
00:28:14,170 --> 00:28:17,460
Oh

589
00:28:17,470 --> 00:28:30,190
something related to border and table

590
00:28:30,200 --> 00:28:33,770
okay so solution here was I guess nobody

591
00:28:33,770 --> 00:28:38,000
is making and current attempt so the

592
00:28:38,000 --> 00:28:38,980
solution is basically

593
00:28:38,980 --> 00:28:41,720
border-collapse:collapse so if you do

594
00:28:41,720 --> 00:28:44,290
rat it basically will disappear the

595
00:28:44,290 --> 00:28:48,230
bottom so let's try this level one so

596
00:28:48,230 --> 00:28:50,060
that's an enemy it keeps on hitting us

597
00:28:50,060 --> 00:28:53,970
oh my god

598
00:28:53,980 --> 00:28:58,130
so you need to submit a a property and a

599
00:28:58,130 --> 00:29:00,320
value pair that will basically somehow

600
00:29:00,320 --> 00:29:03,200
block this enemy from hitting us can we

601
00:29:03,200 --> 00:29:21,170
try this okay I think I need to give a

602
00:29:21,170 --> 00:29:22,280
hint here as well

603
00:29:22,280 --> 00:29:25,880
so you basically need something in

604
00:29:25,880 --> 00:29:27,700
between the player and the enemy

605
00:29:27,700 --> 00:29:30,320
probably a block so how do you display a

606
00:29:30,320 --> 00:29:32,840
block can we try submitting correct

607
00:29:32,840 --> 00:29:38,300
solutions vendor prefixes are not

608
00:29:38,300 --> 00:29:43,250
required so another thing which I forgot

609
00:29:43,250 --> 00:29:44,930
to mention is if 50% of the audience

610
00:29:44,930 --> 00:29:47,060
submits the correct solution this level

611
00:29:47,060 --> 00:29:49,790
would get cleared and out of 1:03 we

612
00:29:49,790 --> 00:29:53,510
just 17 correct solutions you want CSS

613
00:29:53,510 --> 00:30:01,070
lovers I don't think we are going to

614
00:30:01,070 --> 00:30:05,630
reach 50% correct solution okay solution

615
00:30:05,630 --> 00:30:07,580
for this is obvious or people are

616
00:30:07,580 --> 00:30:08,900
sending display:block

617
00:30:08,900 --> 00:30:14,060
so assuming 50% audience was not doing

618
00:30:14,060 --> 00:30:25,000
funny stuff Oh

619
00:30:25,010 --> 00:30:27,420
so we would have a block which would

620
00:30:27,420 --> 00:30:29,280
actually kill the enemy and level clear

621
00:30:29,280 --> 00:30:31,950
so this is an interesting one last level

622
00:30:31,950 --> 00:30:35,280
from my side they will do so the player

623
00:30:35,280 --> 00:30:37,890
is on a platform and he needs to capture

624
00:30:37,890 --> 00:30:39,750
the flag but the issue is the platforms

625
00:30:39,750 --> 00:30:42,390
on order and save seem level so I'm not

626
00:30:42,390 --> 00:30:45,140
able to get the flag so how do you get

627
00:30:45,140 --> 00:30:47,460
something which has broken on the next

628
00:30:47,460 --> 00:30:49,620
line to actually get on the same level

629
00:30:49,620 --> 00:30:58,240
as the previous element come on

630
00:30:58,250 --> 00:31:05,240
not a single right solution okay so the

631
00:31:05,240 --> 00:31:07,789
solution is basically white-space:nowrap

632
00:31:07,789 --> 00:31:24,340
so that's it hi

633
00:31:24,340 --> 00:31:27,289
pretty much the beginning of your talk

634
00:31:27,289 --> 00:31:30,019
you talked about keeping your files

635
00:31:30,019 --> 00:31:33,500
modular and small right

636
00:31:33,500 --> 00:31:36,769
but you mentioned CSS and then you

637
00:31:36,769 --> 00:31:38,929
mentioned if you're using sass you

638
00:31:38,929 --> 00:31:40,669
should use the mid sense file for sense

639
00:31:40,669 --> 00:31:43,309
like don't you think that reason sass

640
00:31:43,309 --> 00:31:46,309
you should keep small files but then

641
00:31:46,309 --> 00:31:50,600
concatenate them into one CSS file when

642
00:31:50,600 --> 00:31:53,330
you deploy so production is not really

643
00:31:53,330 --> 00:31:55,759
of a concern here it's a good practice

644
00:31:55,759 --> 00:31:57,889
even to get your audio styles in to

645
00:31:57,889 --> 00:32:01,610
single CSS so you don't have I mean

646
00:32:01,610 --> 00:32:03,950
multiple HTTP request being sent from

647
00:32:03,950 --> 00:32:05,450
the browser so that is something which

648
00:32:05,450 --> 00:32:08,029
is fine the concern here is actually the

649
00:32:08,029 --> 00:32:10,399
indie development process so you know

650
00:32:10,399 --> 00:32:12,590
why you need modularity is because you

651
00:32:12,590 --> 00:32:14,629
need to append things and change things

652
00:32:14,629 --> 00:32:17,419
over time right so spreading of files is

653
00:32:17,419 --> 00:32:19,159
necessary in develop and not in

654
00:32:19,159 --> 00:32:23,120
production I guess another small

655
00:32:23,120 --> 00:32:28,519
question you show that you're separating

656
00:32:28,519 --> 00:32:32,179
it to files according to kind of the

657
00:32:32,179 --> 00:32:34,789
style of the components dropdowns and

658
00:32:34,789 --> 00:32:36,529
stuff like that right don't you think

659
00:32:36,529 --> 00:32:39,529
maybe also it would be good to separate

660
00:32:39,529 --> 00:32:43,129
it to the pages that you're using or the

661
00:32:43,129 --> 00:32:46,429
templates that are associated with most

662
00:32:46,429 --> 00:32:47,990
of these styles because a lot of times

663
00:32:47,990 --> 00:32:50,450
styles are associated more with the page

664
00:32:50,450 --> 00:32:53,059
they appear on and not with a specific

665
00:32:53,059 --> 00:32:57,470
component right so so writing styles

666
00:32:57,470 --> 00:32:59,299
pertaining to specific pages is

667
00:32:59,299 --> 00:33:01,850
something we all have been doing for a

668
00:33:01,850 --> 00:33:05,679
long time now but the issue with that is

669
00:33:05,679 --> 00:33:08,149
it leads to basically a lot of

670
00:33:08,149 --> 00:33:11,360
repetitive code and code gets repeated

671
00:33:11,360 --> 00:33:12,110
on

672
00:33:12,110 --> 00:33:15,320
friend pages and even though certain

673
00:33:15,320 --> 00:33:17,690
things are same on all the pages you

674
00:33:17,690 --> 00:33:19,910
still have repeated code so the solution

675
00:33:19,910 --> 00:33:21,440
for this which many people have started

676
00:33:21,440 --> 00:33:24,200
using is to have a different outlook

677
00:33:24,200 --> 00:33:26,780
over this so instead of styling things

678
00:33:26,780 --> 00:33:28,820
on specific pages again and again you

679
00:33:28,820 --> 00:33:32,540
basically what you do is look out for

680
00:33:32,540 --> 00:33:34,220
things which are common in all the pages

681
00:33:34,220 --> 00:33:36,559
and separate down them as components so

682
00:33:36,559 --> 00:33:38,240
that is reason number one I have I

683
00:33:38,240 --> 00:33:40,220
haven't included those page Styles in

684
00:33:40,220 --> 00:33:45,530
the sample solution eyes just showed so

685
00:33:45,530 --> 00:33:47,690
you basically should have components in

686
00:33:47,690 --> 00:33:50,030
your averages and styling pages but even

687
00:33:50,030 --> 00:33:51,919
if you have those specific page styling

688
00:33:51,919 --> 00:33:54,260
things even if it's a requirement you

689
00:33:54,260 --> 00:33:55,940
can always have something called as

690
00:33:55,940 --> 00:33:58,330
specific page section where you have

691
00:33:58,330 --> 00:34:00,559
styles for your homepage your for your

692
00:34:00,559 --> 00:34:04,850
about page and so thanks

693
00:34:04,850 --> 00:34:06,950
actually I'm going to bring about

694
00:34:06,950 --> 00:34:09,100
support number five events and a bouncer

695
00:34:09,100 --> 00:34:12,889
instead of using the next editor you

696
00:34:12,889 --> 00:34:14,720
trying to prefix and using the name

697
00:34:14,720 --> 00:34:17,570
convention using underscore or not -

698
00:34:17,570 --> 00:34:20,810
right I'm gonna really miss the coolest

699
00:34:20,810 --> 00:34:23,050
reusable because I mean every time you I

700
00:34:23,050 --> 00:34:27,470
mean then with some other author class

701
00:34:27,470 --> 00:34:41,300
name so I agree these selectors do get

702
00:34:41,300 --> 00:34:44,840
do tend to get longer if you use the BEM

703
00:34:44,840 --> 00:34:47,270
convention but I feel the extensibility

704
00:34:47,270 --> 00:34:52,149
and the and the reusability and the

705
00:34:52,149 --> 00:34:55,190
thing that it lets you avoid very

706
00:34:55,190 --> 00:34:57,350
various things in CSS like stricter

707
00:34:57,350 --> 00:35:00,650
sense and all is much more than just the

708
00:35:00,650 --> 00:35:02,150
names getting bigger it doesn't really

709
00:35:02,150 --> 00:35:04,070
affect affect you it's just a visual

710
00:35:04,070 --> 00:35:06,680
thing that you see long selectors and

711
00:35:06,680 --> 00:35:08,090
that really scares you

712
00:35:08,090 --> 00:35:11,869
I guess the advantages are better more

713
00:35:11,869 --> 00:35:16,000
than you disadvantages in that case

714
00:35:16,000 --> 00:35:19,660
hello greater what what do you think is

715
00:35:19,660 --> 00:35:21,790
the advantage of using placeholder if

716
00:35:21,790 --> 00:35:24,630
you compare it to like variables

717
00:35:24,630 --> 00:35:26,770
placeholder and variables are I guess

718
00:35:26,770 --> 00:35:28,300
two separate things so variables can

719
00:35:28,300 --> 00:35:31,720
like in other languages to store values

720
00:35:31,720 --> 00:35:33,819
right they could be single decimal

721
00:35:33,819 --> 00:35:36,400
strings and maps and stuff but place

722
00:35:36,400 --> 00:35:37,930
what is on the other hand something

723
00:35:37,930 --> 00:35:40,569
which is a group of properties just like

724
00:35:40,569 --> 00:35:43,119
classes are or any other rulers so it's

725
00:35:43,119 --> 00:35:44,770
a group of property which you can extend

726
00:35:44,770 --> 00:35:46,510
variables is not something you can

