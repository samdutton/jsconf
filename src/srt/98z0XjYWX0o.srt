1
00:00:07,440 --> 00:00:10,420

this this is so huge being introduced by

2
00:00:10,420 --> 00:00:13,629
check our table that's like one that's

3
00:00:13,629 --> 00:00:15,219
my most favorite moment in my life I

4
00:00:15,219 --> 00:00:18,880
guess I I tried to make some some video

5
00:00:18,880 --> 00:00:20,890
of how I feel right now and that's

6
00:00:20,890 --> 00:00:24,400
everything I can come up with do we have

7
00:00:24,400 --> 00:00:33,090
sound yea ringing Tony aquarium club and

8
00:00:33,090 --> 00:00:41,410
yeah

9
00:00:41,420 --> 00:00:46,260
well credit where credit's due that joke

10
00:00:46,260 --> 00:00:48,030
was made by two beers bottle of just

11
00:00:48,030 --> 00:00:49,769
four days ago and he took one of my

12
00:00:49,769 --> 00:00:51,420
jokes so I took one of his jokes and I

13
00:00:51,420 --> 00:00:52,890
thought it might be a good idea yeah so

14
00:00:52,890 --> 00:00:55,129
um yeah well that's how I feel um

15
00:00:55,129 --> 00:00:57,420
anybody who had a crush on Princess Leia

16
00:00:57,420 --> 00:01:01,640
back then sorry that I ruined it for you

17
00:01:01,640 --> 00:01:04,290
but yeah I'm talking about performance

18
00:01:04,290 --> 00:01:05,670
here and I have been introduced by a

19
00:01:05,670 --> 00:01:07,920
performance God so actually how I really

20
00:01:07,920 --> 00:01:10,560
feel how I think this might turn out is

21
00:01:10,560 --> 00:01:25,630
more something like like this yeah

22
00:01:25,640 --> 00:01:27,869
basically I'm having my Tim berners-lee

23
00:01:27,869 --> 00:01:31,890
moment right now which is kind of weird

24
00:01:31,890 --> 00:01:34,319
because I actually I did nothing you

25
00:01:34,319 --> 00:01:36,119
know I met so many people here who did

26
00:01:36,119 --> 00:01:39,869
so much great stuff on Wednesday who has

27
00:01:39,869 --> 00:01:42,360
been here on Wednesday yeah I made tuna

28
00:01:42,360 --> 00:01:44,520
since new kids I wouldn't say he's a

29
00:01:44,520 --> 00:01:49,259
childhood hero of mine but a mid 20 of

30
00:01:49,259 --> 00:01:52,619
mine and yeah yeah you know walking

31
00:01:52,619 --> 00:01:55,080
around meeting so many great people and

32
00:01:55,080 --> 00:01:59,090
telling everybody he fan of your work

33
00:01:59,090 --> 00:02:02,099
the only thing that I did that got kind

34
00:02:02,099 --> 00:02:04,619
of popular or and recognized was this

35
00:02:04,619 --> 00:02:06,270
one choked back then about one and a

36
00:02:06,270 --> 00:02:09,509
half year ago what's power package

37
00:02:09,509 --> 00:02:11,670
manager insta late with NPM % piano

38
00:02:11,670 --> 00:02:13,379
package manager instil it with bluebirds

39
00:02:13,379 --> 00:02:16,080
brew I'm sure you can insulate to that

40
00:02:16,080 --> 00:02:18,510
something like that and i think the

41
00:02:18,510 --> 00:02:19,950
choke was much much better back then and

42
00:02:19,950 --> 00:02:22,019
it's better than jokes about how a

43
00:02:22,019 --> 00:02:24,660
really good service has no padding

44
00:02:24,660 --> 00:02:29,790
modules but hey i'm here to talk about

45
00:02:29,790 --> 00:02:31,830
HTTP to and how to unbundle all the

46
00:02:31,830 --> 00:02:34,200
things and when I wrote this proposal it

47
00:02:34,200 --> 00:02:36,030
was called HTTP two is coming actually

48
00:02:36,030 --> 00:02:39,360
HTTP ub2 is here and the question is

49
00:02:39,360 --> 00:02:40,800
unbundle all the things this

50
00:02:40,800 --> 00:02:44,040
professional drawing of edits dog was

51
00:02:44,040 --> 00:02:45,569
done by my colleague the other one was

52
00:02:45,569 --> 00:02:48,359
done by me so in case you wonder what's

53
00:02:48,359 --> 00:02:49,620
going on there

54
00:02:49,620 --> 00:02:51,330
it's the main javascript file going to

55
00:02:51,330 --> 00:02:52,709
be beheaded because we are going to

56
00:02:52,709 --> 00:02:55,709
unbundle all the things but you know

57
00:02:55,709 --> 00:02:57,840
this is every time you hear about HTTP

58
00:02:57,840 --> 00:03:00,780
to you hear this one advice or this one

59
00:03:00,780 --> 00:03:03,120
rule unbundle all the things no

60
00:03:03,120 --> 00:03:05,099
concatenation number bundling no mob

61
00:03:05,099 --> 00:03:08,310
packing a logical I don't know browser

62
00:03:08,310 --> 00:03:10,230
if I webpack all get obsolete I don't

63
00:03:10,230 --> 00:03:12,480
know and I don't like jumping to

64
00:03:12,480 --> 00:03:14,909
conclusions like that they always want

65
00:03:14,909 --> 00:03:17,670
to know why we are doing something like

66
00:03:17,670 --> 00:03:19,530
that I want to know why these things

67
00:03:19,530 --> 00:03:22,859
happen this is like the one time back in

68
00:03:22,859 --> 00:03:25,829
the early 90s at my place it was a

69
00:03:25,829 --> 00:03:27,750
lovely lonely which village with about

70
00:03:27,750 --> 00:03:30,359
700 people living in there and to God

71
00:03:30,359 --> 00:03:32,819
the pizza joint this was the first time

72
00:03:32,819 --> 00:03:36,269
those people ate pizza at all and every

73
00:03:36,269 --> 00:03:38,430
slice of pizza was was served with

74
00:03:38,430 --> 00:03:42,209
ketchup and mayonnaise and so we thought

75
00:03:42,209 --> 00:03:44,459
yep this is how you eat pizza with

76
00:03:44,459 --> 00:03:46,379
ketchup mayonnaise not knowing that this

77
00:03:46,379 --> 00:03:51,329
was a sacrilege so I I when I when I got

78
00:03:51,329 --> 00:03:53,190
first time outside of my religion had

79
00:03:53,190 --> 00:03:56,190
real pizza I tried to question why did

80
00:03:56,190 --> 00:03:58,319
we get ketchup and mayonnaise I'll turns

81
00:03:58,319 --> 00:03:59,849
out the pizza so bad you couldn't eat it

82
00:03:59,849 --> 00:04:01,709
without it but you know that was just

83
00:04:01,709 --> 00:04:05,220
kind of this rule you you heard you saw

84
00:04:05,220 --> 00:04:07,260
everybody in my village packed and

85
00:04:07,260 --> 00:04:08,760
eating pizza with ketchup mayonnaise you

86
00:04:08,760 --> 00:04:11,400
idiot you did it and I wonder if that's

87
00:04:11,400 --> 00:04:15,060
the same case with HTTP to and not

88
00:04:15,060 --> 00:04:18,419
bundling stuff so I want to I want to

89
00:04:18,419 --> 00:04:20,160
question why I want to know that the

90
00:04:20,160 --> 00:04:23,190
wisent why we are doing stuff and to do

91
00:04:23,190 --> 00:04:25,440
so we have to go back yelled to the 90s

92
00:04:25,440 --> 00:04:28,860
to my pizza joint adventure to tim

93
00:04:28,860 --> 00:04:30,539
berners-lee you've seen him already and

94
00:04:30,539 --> 00:04:32,729
this is tim berners-lee accessing the

95
00:04:32,729 --> 00:04:36,270
web page from his his office pc this is

96
00:04:36,270 --> 00:04:38,849
the first web server being a turn so

97
00:04:38,849 --> 00:04:42,599
that was in the basement office office

98
00:04:42,599 --> 00:04:47,000
building and this was the World Wide Web

99
00:04:47,000 --> 00:04:53,520
the World Wide Web kinda small world but

100
00:04:53,520 --> 00:04:55,710
what Tim berners-lee did he invented two

101
00:04:55,710 --> 00:04:58,520
things one thing was the hypertext

102
00:04:58,520 --> 00:05:01,229
markup language the other thing was the

103
00:05:01,229 --> 00:05:03,030
hypertext Transfer Protocol

104
00:05:03,030 --> 00:05:05,520
anybody remembers them must must must be

105
00:05:05,520 --> 00:05:07,200
a thing of the 90s and the hypertext

106
00:05:07,200 --> 00:05:09,510
Transfer Protocol was made to transfer

107
00:05:09,510 --> 00:05:14,130
stuff like this so it was a protocol to

108
00:05:14,130 --> 00:05:16,110
transfer text documents from the

109
00:05:16,110 --> 00:05:17,940
basement of CERN up to the first floor

110
00:05:17,940 --> 00:05:22,710
where Tim berners-lee was and from back

111
00:05:22,710 --> 00:05:27,030
then in terms of protocol nothing much

112
00:05:27,030 --> 00:05:29,700
has changed we are still working with

113
00:05:29,700 --> 00:05:32,610
kind of the same protocol item a few of

114
00:05:32,610 --> 00:05:34,680
you edge cases here and there but other

115
00:05:34,680 --> 00:05:38,460
than that we're working with them HTTP

116
00:05:38,460 --> 00:05:39,930
builds up on TCP you've heard that

117
00:05:39,930 --> 00:05:43,590
yesterday at the ants talk TCB has some

118
00:05:43,590 --> 00:05:45,770
sort of freeway connection that's like a

119
00:05:45,770 --> 00:05:48,060
secret gang sign with your drug dealer

120
00:05:48,060 --> 00:05:49,920
or something I guess if you if you add

121
00:05:49,920 --> 00:05:52,710
TLS to it it's like making sure nobody's

122
00:05:52,710 --> 00:05:57,060
a cup and they have this this is a round

123
00:05:57,060 --> 00:05:58,740
trip this goes to the Internet and back

124
00:05:58,740 --> 00:06:03,450
again so before data can be sent what

125
00:06:03,450 --> 00:06:04,770
browsers and servers do is like

126
00:06:04,770 --> 00:06:07,530
communicating and making sure we are

127
00:06:07,530 --> 00:06:11,340
knowing each other and the first version

128
00:06:11,340 --> 00:06:13,530
of the protocol could just handle one

129
00:06:13,530 --> 00:06:15,540
request just work with one tcp

130
00:06:15,540 --> 00:06:18,480
connection one HTTP request and

131
00:06:18,480 --> 00:06:20,580
everything else had to wait in line head

132
00:06:20,580 --> 00:06:22,710
of line blocking that's cold where you

133
00:06:22,710 --> 00:06:26,760
can download the index.html file when

134
00:06:26,760 --> 00:06:29,310
index HTML file is back to the next

135
00:06:29,310 --> 00:06:30,750
resource like an image or something like

136
00:06:30,750 --> 00:06:32,730
that and back in the day that was okay

137
00:06:32,730 --> 00:06:34,800
but assume people found out okay maybe

138
00:06:34,800 --> 00:06:39,180
we need something more and the reworked

139
00:06:39,180 --> 00:06:41,880
a little bit the protocol for HTTP 1.1

140
00:06:41,880 --> 00:06:43,830
and you know what's better than having

141
00:06:43,830 --> 00:06:47,850
one request having two requests that was

142
00:06:47,850 --> 00:06:49,530
actually in the proposals or you can do

143
00:06:49,530 --> 00:06:51,510
two parallel because browsers actually

144
00:06:51,510 --> 00:06:54,630
went to six so you can 26 parallel

145
00:06:54,630 --> 00:06:57,180
requests pertinent domain I wonder why

146
00:06:57,180 --> 00:06:59,550
didn't ever get up to 11 it's beyond me

147
00:06:59,550 --> 00:07:03,180
but still for each request for each HTTP

148
00:07:03,180 --> 00:07:07,440
recreate TTP request they are doing you

149
00:07:07,440 --> 00:07:10,230
had a new TCP connection so it was like

150
00:07:10,230 --> 00:07:12,300
the server opened up this freebie

151
00:07:12,300 --> 00:07:14,250
handshake the secret gang sign every

152
00:07:14,250 --> 00:07:16,620
time a new resource was requested

153
00:07:16,620 --> 00:07:19,350
and this led to this one advice back

154
00:07:19,350 --> 00:07:21,210
when we did the performance optimization

155
00:07:21,210 --> 00:07:23,940
the best request is a request not being

156
00:07:23,940 --> 00:07:25,889
made and memorize this this is coming up

157
00:07:25,889 --> 00:07:27,990
lots of time during my presentation up

158
00:07:27,990 --> 00:07:30,030
now the best request is a request not

159
00:07:30,030 --> 00:07:32,340
being made which meant that we should

160
00:07:32,340 --> 00:07:35,550
avoid self triggering stuff the triggers

161
00:07:35,550 --> 00:07:37,500
requests like having a source having a

162
00:07:37,500 --> 00:07:39,270
URL in your style sheets having link

163
00:07:39,270 --> 00:07:42,270
href and downloading a strategy you

164
00:07:42,270 --> 00:07:44,040
should do as few as possible of them

165
00:07:44,040 --> 00:07:47,820
back into HTTP 11 days and to achieve

166
00:07:47,820 --> 00:07:49,919
this we relied on things like

167
00:07:49,919 --> 00:07:52,380
concatenation like combining one every

168
00:07:52,380 --> 00:07:54,389
tribal script file into one combining

169
00:07:54,389 --> 00:07:56,490
every CSS file into one just having one

170
00:07:56,490 --> 00:07:58,620
javascript file downloaded having one

171
00:07:58,620 --> 00:08:00,720
CSS file downloaded your third of image

172
00:08:00,720 --> 00:08:04,070
sprites already this morning with nico

173
00:08:04,070 --> 00:08:06,900
that's basically just all the image in

174
00:08:06,900 --> 00:08:08,760
one for all the images in one file all

175
00:08:08,760 --> 00:08:10,680
the icons in one file and you cut out

176
00:08:10,680 --> 00:08:12,060
all the little bits and pieces and

177
00:08:12,060 --> 00:08:14,039
display them and of course in learning

178
00:08:14,039 --> 00:08:15,539
stuff like not making the grass at all

179
00:08:15,539 --> 00:08:17,400
pack everything into the HTML and

180
00:08:17,400 --> 00:08:20,370
download it and those were early

181
00:08:20,370 --> 00:08:21,720
performance optimizations and they were

182
00:08:21,720 --> 00:08:23,550
necessary because the web for evolving

183
00:08:23,550 --> 00:08:25,710
right now this is a screen hood from

184
00:08:25,710 --> 00:08:28,169
yesterday from HTTP archive the average

185
00:08:28,169 --> 00:08:32,099
web page is about 2.3 megabyte in total

186
00:08:32,099 --> 00:08:35,159
which is insane and two-thirds of it are

187
00:08:35,159 --> 00:08:39,570
images and also on average we have about

188
00:08:39,570 --> 00:08:42,659
40 TCP connections right now that are

189
00:08:42,659 --> 00:08:47,250
happening per page that might not be big

190
00:08:47,250 --> 00:08:49,050
thing if you if you if you think about

191
00:08:49,050 --> 00:08:52,350
it but let's say 44 no actually it's

192
00:08:52,350 --> 00:08:55,950
pretty big but let's say you have an

193
00:08:55,950 --> 00:08:57,990
image heavy website like the most

194
00:08:57,990 --> 00:09:00,470
popular search engine in the world

195
00:09:00,470 --> 00:09:04,980
starts with ug anybody knows it yeah

196
00:09:04,980 --> 00:09:08,970
giffey these are lots and lots of images

197
00:09:08,970 --> 00:09:11,880
and if you if you open this web page on

198
00:09:11,880 --> 00:09:14,100
the mobile device where you have added

199
00:09:14,100 --> 00:09:16,560
latency not only getting this this TCP

200
00:09:16,560 --> 00:09:18,600
request the TCP connection going on but

201
00:09:18,600 --> 00:09:20,279
also having to connect to a tower

202
00:09:20,279 --> 00:09:22,380
sending your signal into space and back

203
00:09:22,380 --> 00:09:25,880
again and passing Starship Enterprise

204
00:09:25,880 --> 00:09:27,900
that is really something and let me

205
00:09:27,900 --> 00:09:29,110
visualize that for you

206
00:09:29,110 --> 00:09:30,490
that means that you open up to

207
00:09:30,490 --> 00:09:31,779
connections and they're pretty good at

208
00:09:31,779 --> 00:09:33,370
getting forward like Jesus is a bit a

209
00:09:33,370 --> 00:09:34,690
little bit a little bit faster than

210
00:09:34,690 --> 00:09:37,029
chairs but chairs holding up and then

211
00:09:37,029 --> 00:09:38,200
you start with downloading all the

212
00:09:38,200 --> 00:09:41,230
images that was it with your website you

213
00:09:41,230 --> 00:09:43,899
have to wait like indefinitely and this

214
00:09:43,899 --> 00:09:46,810
is why HTTP two was made a TDP was made

215
00:09:46,810 --> 00:09:49,390
to serve today's web and instead of

216
00:09:49,390 --> 00:09:53,560
opening a TCP request me almost for

217
00:09:53,560 --> 00:09:55,600
every HTTP request like opening it a

218
00:09:55,600 --> 00:09:57,880
separate TCP connection they just rely

219
00:09:57,880 --> 00:09:59,980
on one connection and he CP is really

220
00:09:59,980 --> 00:10:01,870
good at handling a lots of stuff if you

221
00:10:01,870 --> 00:10:03,339
ever downloaded a video or any other

222
00:10:03,339 --> 00:10:05,260
file from someplace that's really huge

223
00:10:05,260 --> 00:10:07,899
to see that downloading this one file is

224
00:10:07,899 --> 00:10:09,700
actually really really fast but if you

225
00:10:09,700 --> 00:10:12,250
do multiple files it gets kind of here

226
00:10:12,250 --> 00:10:17,140
and HTTP two works in streams where you

227
00:10:17,140 --> 00:10:19,480
have one stream to send requests and one

228
00:10:19,480 --> 00:10:22,149
stream to get all the responses and you

229
00:10:22,149 --> 00:10:24,640
can start sending a get request for one

230
00:10:24,640 --> 00:10:26,890
image and no matter at which time you

231
00:10:26,890 --> 00:10:29,649
can go for the second one and then the

232
00:10:29,649 --> 00:10:31,120
server starts answering in small

233
00:10:31,120 --> 00:10:32,920
packages that can be assembled on the

234
00:10:32,920 --> 00:10:35,290
client so you have year image 1 and

235
00:10:35,290 --> 00:10:37,149
image to inter whined and interleaved

236
00:10:37,149 --> 00:10:39,399
and everything comes back to the client

237
00:10:39,399 --> 00:10:43,540
in this assembled there so this means

238
00:10:43,540 --> 00:10:45,519
that for a website that was done with

239
00:10:45,519 --> 00:10:47,680
HTTP 1.1 thought when those grey blocks

240
00:10:47,680 --> 00:10:51,190
to say areas are those TCP connections

241
00:10:51,190 --> 00:10:55,029
is getting everything going which HTTP

242
00:10:55,029 --> 00:10:58,839
to you're going to to reduce those TCP

243
00:10:58,839 --> 00:11:00,190
connection because everything is served

244
00:11:00,190 --> 00:11:04,360
by this one tcp connection so you start

245
00:11:04,360 --> 00:11:06,579
a lot lot faster by with downloading

246
00:11:06,579 --> 00:11:10,570
yourself and actually since HTTP two

247
00:11:10,570 --> 00:11:11,829
doesn't have a limit on parallel

248
00:11:11,829 --> 00:11:13,990
connections they also start a lot lot

249
00:11:13,990 --> 00:11:15,910
earlier and that's how this this speed

250
00:11:15,910 --> 00:11:18,820
up comes to be there's a nice video from

251
00:11:18,820 --> 00:11:20,680
from browser where they're going to

252
00:11:20,680 --> 00:11:25,510
combine to a compared to the design web

253
00:11:25,510 --> 00:11:27,699
page one time on HTTP 11 one time on

254
00:11:27,699 --> 00:11:30,670
HTTP two and on the left side it'll lock

255
00:11:30,670 --> 00:11:33,519
all of tiny little images getting

256
00:11:33,519 --> 00:11:35,769
getting across the wire and you can

257
00:11:35,769 --> 00:11:37,750
really see how fast it's going to be so

258
00:11:37,750 --> 00:11:39,579
this was the last time I tried it i'm

259
00:11:39,579 --> 00:11:41,360
doing now another one

260
00:11:41,360 --> 00:11:44,329
and this was HTTP on the run pretty fast

261
00:11:44,329 --> 00:11:47,240
actually he couldn't even see it just in

262
00:11:47,240 --> 00:11:48,410
a blink of an eye so that's really

263
00:11:48,410 --> 00:11:51,620
really fast I tried it with some

264
00:11:51,620 --> 00:11:54,350
webpages for instance my blog and on

265
00:11:54,350 --> 00:11:57,200
HTTP one thought one I had about 22 that

266
00:11:57,200 --> 00:11:59,390
six seconds load time that was already a

267
00:11:59,390 --> 00:12:02,660
performance optimal nated blog but HTTP

268
00:12:02,660 --> 00:12:05,870
two I had another 800 milliseconds less

269
00:12:05,870 --> 00:12:08,540
and it's even better on mobile because

270
00:12:08,540 --> 00:12:10,339
you don't have to connect to to space

271
00:12:10,339 --> 00:12:13,790
anymore or to the next hour on mobile

272
00:12:13,790 --> 00:12:15,560
you can really see a speed-up of it's

273
00:12:15,560 --> 00:12:17,990
about it took about half as long to

274
00:12:17,990 --> 00:12:19,730
download this stuff so it's all about

275
00:12:19,730 --> 00:12:23,120
fighting this latency not making any

276
00:12:23,120 --> 00:12:24,800
more connections than uni because TCP is

277
00:12:24,800 --> 00:12:27,860
capable of handling all of that in turn

278
00:12:27,860 --> 00:12:30,350
this also means that if you have a slow

279
00:12:30,350 --> 00:12:33,950
website on HTTP 11 you will still have a

280
00:12:33,950 --> 00:12:35,779
slow website at HTTP to it's just

281
00:12:35,779 --> 00:12:37,370
downloading faster but if you don't

282
00:12:37,370 --> 00:12:40,130
follow or if you don't don't respect the

283
00:12:40,130 --> 00:12:41,720
usual performance guidelines you still

284
00:12:41,720 --> 00:12:44,930
will have a slow htb to web page

285
00:12:44,930 --> 00:12:46,820
performance guideline like minifying

286
00:12:46,820 --> 00:12:50,000
chairs and CSS optimizing those images

287
00:12:50,000 --> 00:12:51,350
everything basically everything that

288
00:12:51,350 --> 00:12:54,410
nikka settle this morning and the most

289
00:12:54,410 --> 00:12:56,029
important thing is do not block

290
00:12:56,029 --> 00:12:58,310
rendering so get the thing that renders

291
00:12:58,310 --> 00:13:00,230
your page out the very rare avast and

292
00:13:00,230 --> 00:13:01,970
then just download all the other stuff

293
00:13:01,970 --> 00:13:07,399
and this is top notch thought leadership

294
00:13:07,399 --> 00:13:11,449
here with that given H db2 is not only

295
00:13:11,449 --> 00:13:13,880
here for performance optimization but

296
00:13:13,880 --> 00:13:15,440
it's an engineering opportunity and this

297
00:13:15,440 --> 00:13:17,209
is the part where where this whole thing

298
00:13:17,209 --> 00:13:19,190
of unbundle all the things comes into

299
00:13:19,190 --> 00:13:23,839
place let me elaborate so the best

300
00:13:23,839 --> 00:13:25,910
request is a request not being made you

301
00:13:25,910 --> 00:13:30,380
heard that already this means that you

302
00:13:30,380 --> 00:13:33,440
don't have to download at this dis dis

303
00:13:33,440 --> 00:13:35,540
advisor it said why still holds up

304
00:13:35,540 --> 00:13:38,660
somehow not by just combining everything

305
00:13:38,660 --> 00:13:41,720
into one because this is basically a for

306
00:13:41,720 --> 00:13:43,610
travel script files I wouldn't get any

307
00:13:43,610 --> 00:13:45,230
speed up if I would combine them because

308
00:13:45,230 --> 00:13:47,300
this concatenation is basically done in

309
00:13:47,300 --> 00:13:49,399
the stream of the TCP connection and

310
00:13:49,399 --> 00:13:53,190
just pull onto my side

311
00:13:53,200 --> 00:13:56,540
but what I can do now instead of having

312
00:13:56,540 --> 00:13:58,490
one huge file and transferring it over

313
00:13:58,490 --> 00:14:00,680
the wire I can select the palace that

314
00:14:00,680 --> 00:14:02,360
amount to transfer so let's say this

315
00:14:02,360 --> 00:14:05,540
index dot HTML file doesn't need one of

316
00:14:05,540 --> 00:14:07,790
those JavaScript files I just leave it

317
00:14:07,790 --> 00:14:10,760
out I just transferred less weight than

318
00:14:10,760 --> 00:14:12,470
it did before and that's what's meant

319
00:14:12,470 --> 00:14:16,670
with the best request is regrets not

320
00:14:16,670 --> 00:14:18,620
being made so you don't do this request

321
00:14:18,620 --> 00:14:21,440
because you don't need this file another

322
00:14:21,440 --> 00:14:23,750
example this is like half of our icons

323
00:14:23,750 --> 00:14:25,940
that we have in our product and a

324
00:14:25,940 --> 00:14:27,890
question for the audience what do you

325
00:14:27,890 --> 00:14:30,440
think is far as transporting this or

326
00:14:30,440 --> 00:14:33,890
transporting those wagons it's of course

327
00:14:33,890 --> 00:14:38,090
those 2i cancer if this what is so

328
00:14:38,090 --> 00:14:40,490
instead of transporting one sprite that

329
00:14:40,490 --> 00:14:42,140
has like everything in it and you save

330
00:14:42,140 --> 00:14:44,450
it on the client just get over what you

331
00:14:44,450 --> 00:14:48,380
really really really need engineering

332
00:14:48,380 --> 00:14:50,810
step one get over what you really need

333
00:14:50,810 --> 00:14:52,940
engineering sep two and i'll start with

334
00:14:52,940 --> 00:14:55,580
the best request it's a request not

335
00:14:55,580 --> 00:15:00,350
being made again this can be thought of

336
00:15:00,350 --> 00:15:03,440
some some some differently what if the

337
00:15:03,440 --> 00:15:05,600
client doesn't have to make a request at

338
00:15:05,600 --> 00:15:09,680
all what if you download two files I

339
00:15:09,680 --> 00:15:11,420
edit some some version markers in there

340
00:15:11,420 --> 00:15:14,030
and just set an expiry head off

341
00:15:14,030 --> 00:15:16,640
indefinitely so these files always stay

342
00:15:16,640 --> 00:15:21,080
with the client you can do then things

343
00:15:21,080 --> 00:15:23,630
like okay just exchanging the second

344
00:15:23,630 --> 00:15:26,780
foul so the client gets to this web page

345
00:15:26,780 --> 00:15:28,700
to second time he already has the

346
00:15:28,700 --> 00:15:31,190
version one from the h and SVG and his

347
00:15:31,190 --> 00:15:33,110
downloading version 2 from the goddess

348
00:15:33,110 --> 00:15:34,910
which is just downloading the second

349
00:15:34,910 --> 00:15:37,820
file so they were the best request that

350
00:15:37,820 --> 00:15:40,460
wasn't made was downloading agent we won

351
00:15:40,460 --> 00:15:44,630
again and and this is the huge power of

352
00:15:44,630 --> 00:15:49,130
HTTP too so yeah in some way unbundle

353
00:15:49,130 --> 00:15:50,890
all the things if you think about this

354
00:15:50,890 --> 00:15:53,420
writing image that's the way to do if

355
00:15:53,420 --> 00:15:55,460
you think about not having bytes

356
00:15:55,460 --> 00:15:56,930
transferred over that you don't need

357
00:15:56,930 --> 00:16:00,200
that's the way to do it but it's a

358
00:16:00,200 --> 00:16:02,300
little bit more to it and one thing or

359
00:16:02,300 --> 00:16:03,680
one oddity that I really really liked

360
00:16:03,680 --> 00:16:06,170
was the one from Khan Academy where it

361
00:16:06,170 --> 00:16:06,940
just took an old

362
00:16:06,940 --> 00:16:09,370
jquery based web application or web page

363
00:16:09,370 --> 00:16:13,420
and didn't do the packaging anymore and

364
00:16:13,420 --> 00:16:16,930
it turned out that the new HTTP to web

365
00:16:16,930 --> 00:16:19,390
page was a lot lot slower than the

366
00:16:19,390 --> 00:16:22,120
original one for one reason it was a

367
00:16:22,120 --> 00:16:24,940
giclee application and everybody who has

368
00:16:24,940 --> 00:16:26,320
written check variable against knows

369
00:16:26,320 --> 00:16:28,410
that there's a lot of boilerplate code

370
00:16:28,410 --> 00:16:33,730
really a lot and she tip is really good

371
00:16:33,730 --> 00:16:36,310
at repetition so when the chi tipped all

372
00:16:36,310 --> 00:16:38,860
those JavaScript files into one banner

373
00:16:38,860 --> 00:16:40,750
when they combined all those JavaScript

374
00:16:40,750 --> 00:16:42,940
files into one bundling gzip did the

375
00:16:42,940 --> 00:16:44,400
repetition of the boilerplate code

376
00:16:44,400 --> 00:16:50,320
actually improved the performance for

377
00:16:50,320 --> 00:16:53,590
this bundled travel script file and this

378
00:16:53,590 --> 00:16:55,630
is where this this rule like unbundle

379
00:16:55,630 --> 00:16:59,140
all the things fails in this case that

380
00:16:59,140 --> 00:17:01,180
just didn't work cheated at the cheat

381
00:17:01,180 --> 00:17:03,910
zip performance win was much much better

382
00:17:03,910 --> 00:17:08,319
than the wind ahead by by activating

383
00:17:08,319 --> 00:17:10,089
HTTP two winters pushing everything over

384
00:17:10,089 --> 00:17:13,810
the wire so what they then did is like

385
00:17:13,810 --> 00:17:15,939
refactoring the application throughout a

386
00:17:15,939 --> 00:17:18,339
little a little bit of of other

387
00:17:18,339 --> 00:17:19,510
JavaScript files but other than that

388
00:17:19,510 --> 00:17:22,230
really good article to read and we also

389
00:17:22,230 --> 00:17:25,689
we also made some tests with one

390
00:17:25,689 --> 00:17:28,060
application of ours which I want to

391
00:17:28,060 --> 00:17:30,000
elaborate a little more given the time

392
00:17:30,000 --> 00:17:32,500
or still halfway through with the slides

393
00:17:32,500 --> 00:17:34,180
oh hey let's go in the last three

394
00:17:34,180 --> 00:17:38,710
minutes or something let's go back to

395
00:17:38,710 --> 00:17:41,530
this to tease two images we have the

396
00:17:41,530 --> 00:17:44,020
agent that sweetie we have the gout v2s

397
00:17:44,020 --> 00:17:47,860
ricci so i can interchange those images

398
00:17:47,860 --> 00:17:49,450
really like i can update this cloud

399
00:17:49,450 --> 00:17:51,130
image all over again and all over again

400
00:17:51,130 --> 00:17:54,610
would you say that if you if you have to

401
00:17:54,610 --> 00:17:56,170
change one image you have to change the

402
00:17:56,170 --> 00:17:59,200
other they are completely separate from

403
00:17:59,200 --> 00:18:01,660
each other let's look at this handsome

404
00:18:01,660 --> 00:18:05,080
fellow you can make out the teasing

405
00:18:05,080 --> 00:18:10,120
agent or guy or person or whatever what

406
00:18:10,120 --> 00:18:16,770
about now something's kind of missing so

407
00:18:16,770 --> 00:18:20,169
this is what we call it dependency

408
00:18:20,169 --> 00:18:22,419
this is important if you yeah your head

409
00:18:22,419 --> 00:18:24,850
is a dependency of yours this is

410
00:18:24,850 --> 00:18:26,799
important if you take this world over to

411
00:18:26,799 --> 00:18:29,739
travel script this is some weird to

412
00:18:29,739 --> 00:18:32,830
JavaScript architect rivals designing we

413
00:18:32,830 --> 00:18:34,029
have versions everywhere like the

414
00:18:34,029 --> 00:18:35,259
version one of the payment chairs

415
00:18:35,259 --> 00:18:36,850
version one of validation shares we have

416
00:18:36,850 --> 00:18:39,220
a call to action that validation depends

417
00:18:39,220 --> 00:18:41,350
on the overhyped framework on some

418
00:18:41,350 --> 00:18:44,739
lodash or other utility and this call to

419
00:18:44,739 --> 00:18:48,489
action JavaScript so every tribal

420
00:18:48,489 --> 00:18:53,850
equipment lab works with with file names

421
00:18:53,850 --> 00:18:56,950
so what happens if I have to update one

422
00:18:56,950 --> 00:18:59,619
version of my call to action javascript

423
00:18:59,619 --> 00:19:03,100
I would also have to update validation

424
00:19:03,100 --> 00:19:05,109
show at the validation charl script so

425
00:19:05,109 --> 00:19:07,629
instead of just pushing one javascript

426
00:19:07,629 --> 00:19:10,330
file out there again in the next round I

427
00:19:10,330 --> 00:19:14,440
have to put a sector put both of them by

428
00:19:14,440 --> 00:19:18,299
validation v2 and collection be too so

429
00:19:18,299 --> 00:19:22,090
let's try to to order our JavaScript

430
00:19:22,090 --> 00:19:23,919
files in terms of frequency of change

431
00:19:23,919 --> 00:19:25,179
usually if you're working with some

432
00:19:25,179 --> 00:19:26,619
single page application framework or any

433
00:19:26,619 --> 00:19:28,960
other library libraries are pretty rigid

434
00:19:28,960 --> 00:19:30,970
you don't up them date them on a daily

435
00:19:30,970 --> 00:19:33,309
base then you have the utility layer

436
00:19:33,309 --> 00:19:36,009
which means that this is some sort of

437
00:19:36,009 --> 00:19:41,350
here we left pad or low dash or whatever

438
00:19:41,350 --> 00:19:43,269
and then we have your models and modules

439
00:19:43,269 --> 00:19:47,169
on top of that and you can exchange all

440
00:19:47,169 --> 00:19:49,059
the stuff on the top level freely

441
00:19:49,059 --> 00:19:52,029
without having any fear that that you

442
00:19:52,029 --> 00:19:54,009
have to change more than one file but if

443
00:19:54,009 --> 00:19:57,789
you change anything below you have to

444
00:19:57,789 --> 00:19:59,999
change everything that's on top of them

445
00:19:59,999 --> 00:20:04,029
so in this one example that we had we

446
00:20:04,029 --> 00:20:06,279
had a rod optimized utility layer I

447
00:20:06,279 --> 00:20:08,999
think of building your own moderniser

448
00:20:08,999 --> 00:20:12,039
build where you just have those tests in

449
00:20:12,039 --> 00:20:16,090
it that you really like and a change

450
00:20:16,090 --> 00:20:18,009
happened in this layer like I had to add

451
00:20:18,009 --> 00:20:19,480
some new functionality because one of my

452
00:20:19,480 --> 00:20:21,639
models was using this functionality this

453
00:20:21,639 --> 00:20:23,679
meant that I had to change all the

454
00:20:23,679 --> 00:20:25,330
modules as well because this utility

455
00:20:25,330 --> 00:20:28,929
layer has changed and what we did to

456
00:20:28,929 --> 00:20:31,029
overcome this since most of the models

457
00:20:31,029 --> 00:20:33,399
just took a little tiny wee bit of the

458
00:20:33,399 --> 00:20:33,730
city

459
00:20:33,730 --> 00:20:36,010
italy or maybe one function or maybe two

460
00:20:36,010 --> 00:20:39,280
functions nothing much we started tree

461
00:20:39,280 --> 00:20:41,680
shaking this tree who is heard of tree

462
00:20:41,680 --> 00:20:44,290
shaking in here quite a lot of what

463
00:20:44,290 --> 00:20:47,470
everybody who hasn't heard of it this

464
00:20:47,470 --> 00:20:51,760
works with Eggman stripped 16 Sumitra

465
00:20:51,760 --> 00:20:55,750
between 2016 and six with a conscript

466
00:20:55,750 --> 00:20:57,130
with the current version of ECMO script

467
00:20:57,130 --> 00:21:00,250
um if you use egg no script modules you

468
00:21:00,250 --> 00:21:02,710
can import them like that and there are

469
00:21:02,710 --> 00:21:06,070
tools like roll up chess or web I guess

470
00:21:06,070 --> 00:21:07,330
we pack the neck the current version of

471
00:21:07,330 --> 00:21:10,450
web pack does that work as well who can

472
00:21:10,450 --> 00:21:12,820
just import those bits and pieces that

473
00:21:12,820 --> 00:21:14,400
you really need to if I have a huge

474
00:21:14,400 --> 00:21:16,690
utility library and I just want to have

475
00:21:16,690 --> 00:21:18,910
this one helper function what those

476
00:21:18,910 --> 00:21:21,160
tools can do is extract those functions

477
00:21:21,160 --> 00:21:24,270
so my module now has those two functions

478
00:21:24,270 --> 00:21:27,430
included as well so instead of having a

479
00:21:27,430 --> 00:21:30,900
broad utility labor everybody consumes

480
00:21:30,900 --> 00:21:33,970
we pack those utilities that we needed

481
00:21:33,970 --> 00:21:38,080
into the module and so we had lots of

482
00:21:38,080 --> 00:21:40,000
highly flexible modules that we could

483
00:21:40,000 --> 00:21:42,280
exchange it will and the library was

484
00:21:42,280 --> 00:21:44,440
still underneath that was the way we did

485
00:21:44,440 --> 00:21:49,420
it there so that's one way to go if you

486
00:21:49,420 --> 00:21:52,030
request me to answer you what you want

487
00:21:52,030 --> 00:21:55,450
to do with your application remember the

488
00:21:55,450 --> 00:21:57,330
best request is regrets not being made

489
00:21:57,330 --> 00:22:00,850
but it's all I have a few of you advises

490
00:22:00,850 --> 00:22:03,010
that I can give you the first one is

491
00:22:03,010 --> 00:22:04,780
create independent exchangeable

492
00:22:04,780 --> 00:22:07,390
components so every package that you

493
00:22:07,390 --> 00:22:09,700
have and that you can deploy without

494
00:22:09,700 --> 00:22:11,680
touching everything else that's a win

495
00:22:11,680 --> 00:22:13,480
for HTTP too because your check just can

496
00:22:13,480 --> 00:22:15,010
update the version number everything

497
00:22:15,010 --> 00:22:16,480
else is on the client and you just

498
00:22:16,480 --> 00:22:17,950
transfer those little bits and pieces

499
00:22:17,950 --> 00:22:19,210
over the wire that you need for the next

500
00:22:19,210 --> 00:22:22,660
version create small and detach bundles

501
00:22:22,660 --> 00:22:24,670
if you're going to bundle yourself try

502
00:22:24,670 --> 00:22:27,220
to bundle them in a sensible way so they

503
00:22:27,220 --> 00:22:30,490
don't touch anything else coat

504
00:22:30,490 --> 00:22:32,950
application and edit weight is ok if the

505
00:22:32,950 --> 00:22:34,750
file can stay long on the client that's

506
00:22:34,750 --> 00:22:37,300
like me having a belly so I can go a

507
00:22:37,300 --> 00:22:38,950
whole day without food which I did today

508
00:22:38,950 --> 00:22:42,940
and think about long lasting

509
00:22:42,940 --> 00:22:44,860
applications in frequency of change so

510
00:22:44,860 --> 00:22:46,909
it's good to get a lot

511
00:22:46,909 --> 00:22:48,950
over when you first download the webpage

512
00:22:48,950 --> 00:22:51,229
but people are going to visit your

513
00:22:51,229 --> 00:22:52,519
product or your application or your

514
00:22:52,519 --> 00:22:54,700
webpage hopefully more than once so

515
00:22:54,700 --> 00:22:56,749
everything they have there already and

516
00:22:56,749 --> 00:23:01,789
they can use already is win and do we

517
00:23:01,789 --> 00:23:05,629
have still to a minute I made some I

518
00:23:05,629 --> 00:23:08,899
made some weird looking into the crystal

519
00:23:08,899 --> 00:23:10,999
ball and doing some predictions on how

520
00:23:10,999 --> 00:23:12,470
travel script frameworks are going to

521
00:23:12,470 --> 00:23:14,690
handle this and the things I came up was

522
00:23:14,690 --> 00:23:16,999
like amber is going to have wonderful

523
00:23:16,999 --> 00:23:19,789
integrated solution ready and you can

524
00:23:19,789 --> 00:23:21,889
easily migrate to it it will make for

525
00:23:21,889 --> 00:23:23,749
great conference talks but sadly howdini

526
00:23:23,749 --> 00:23:26,690
anybody is going to use it angry belches

527
00:23:26,690 --> 00:23:28,639
observes the ecosystem for a while and

528
00:23:28,639 --> 00:23:30,289
creates the undoubtedly best solution in

529
00:23:30,289 --> 00:23:31,700
version free to use it you have to

530
00:23:31,700 --> 00:23:33,229
include angular 1 dot 5 and go to and a

531
00:23:33,229 --> 00:23:36,559
bunch of ember.js modules and react is

532
00:23:36,559 --> 00:23:38,840
going to do nothing but the community

533
00:23:38,840 --> 00:23:40,759
will cup amber three build tools in

534
00:23:40,759 --> 00:23:42,229
several different solution that occur at

535
00:23:42,229 --> 00:23:45,489
least seven ! sin test in their strings

536
00:23:45,489 --> 00:23:49,460
but might turn out to be false oh don't

537
00:23:49,460 --> 00:23:52,190
bet on that so a lasting remark and

538
00:23:52,190 --> 00:23:54,859
that's all the things to take use tools

539
00:23:54,859 --> 00:23:58,970
not rules and I'm here for about 15 more

540
00:23:58,970 --> 00:24:00,590
minutes because now I confused everybody

541
00:24:00,590 --> 00:24:04,639
and at around four I have to jump onto a

542
00:24:04,639 --> 00:24:07,549
train go back home and getting

543
00:24:07,549 --> 00:24:10,669
embarrassed for many many more people at

544
00:24:10,669 --> 00:24:14,239
a wedding so yeah if you have any

545
00:24:14,239 --> 00:24:16,669
questions awesome click other than that

546
00:24:16,669 --> 00:24:19,279
thank you very much thank you for the

547
00:24:19,279 --> 00:24:27,440
pledge for having me

548
00:24:27,450 --> 00:24:31,180
and this one more thing I'm immediately

549
00:24:31,180 --> 00:24:33,700
going to regret this but I announced now

550
00:24:33,700 --> 00:24:36,130
javaScript conference that lens is going

551
00:24:36,130 --> 00:24:39,190
to have in January 2017 and now that i

552
00:24:39,190 --> 00:24:41,890
announced it for about before about 500

553
00:24:41,890 --> 00:24:44,320
people i actually can't go back anymore

554
00:24:44,320 --> 00:24:47,140
so i'm going to have to do this but yeah

555
00:24:47,140 --> 00:24:51,340
mark your calendar january 2017 there's

